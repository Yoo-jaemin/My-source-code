

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 20 11:28:44 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK7,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	_FlashSignatureWord_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	text99,global,reloc=2,class=CODE,delta=1
   129                           	psect	text100,global,reloc=2,class=CODE,delta=1
   130                           	psect	text101,global,reloc=2,class=CODE,delta=1
   131                           	psect	text102,global,reloc=2,class=CODE,delta=1
   132                           	psect	text103,global,reloc=2,class=CODE,delta=1
   133                           	psect	text104,global,reloc=2,class=CODE,delta=1
   134                           	psect	text105,global,reloc=2,class=CODE,delta=1
   135                           	psect	text106,global,reloc=2,class=CODE,delta=1
   136                           	psect	text107,global,reloc=2,class=CODE,delta=1
   137                           	psect	text108,global,reloc=2,class=CODE,delta=1
   138                           	psect	text109,global,reloc=2,class=CODE,delta=1
   139                           	psect	text110,global,reloc=2,class=CODE,delta=1
   140                           	psect	text111,global,reloc=2,class=CODE,delta=1
   141                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=3
   146                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   156                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   157                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   158                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   160                           	psect	text131,global,reloc=2,class=CODE,delta=1
   161                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   162                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text134,global,reloc=2,class=CODE,delta=1
   164                           	psect	text135,global,reloc=2,class=CODE,delta=1
   165                           	psect	text136,global,reloc=2,class=CODE,delta=1
   166                           	psect	text137,global,reloc=2,class=CODE,delta=1
   167                           	psect	text138,global,reloc=2,class=CODE,delta=1
   168                           	psect	text139,global,reloc=2,class=CODE,delta=1
   169                           	psect	text140,global,reloc=2,class=CODE,delta=1
   170                           	psect	text141,global,reloc=2,class=CODE,delta=1
   171                           	psect	text142,global,reloc=2,class=CODE,delta=1
   172                           	psect	text143,global,reloc=2,class=CODE,delta=1
   173                           	psect	text144,global,reloc=2,class=CODE,delta=1
   174                           	psect	text145,global,reloc=2,class=CODE,delta=1
   175                           	psect	text146,global,reloc=2,class=CODE,delta=1
   176                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=3
   177                           	psect	text148,global,reloc=2,class=CODE,delta=1
   178                           	psect	text149,global,reloc=2,class=CODE,delta=1
   179                           	psect	text150,global,reloc=2,class=CODE,delta=1
   180                           	psect	text151,global,reloc=2,class=CODE,delta=1
   181                           	psect	text152,global,reloc=2,class=CODE,delta=1
   182                           	psect	text153,global,reloc=2,class=CODE,delta=1
   183                           	psect	text154,global,reloc=2,class=CODE,delta=1
   184                           	psect	text155,global,reloc=2,class=CODE,delta=1
   185                           	psect	text156,global,reloc=2,class=CODE,delta=1
   186                           	psect	text157,global,reloc=2,class=CODE,delta=1
   187                           	psect	text158,global,reloc=2,class=CODE,delta=1
   188                           	psect	text159,global,reloc=2,class=CODE,delta=1
   189                           	psect	text160,global,reloc=2,class=CODE,delta=1
   190                           	psect	text161,global,reloc=2,class=CODE,delta=1
   191                           	psect	text162,global,reloc=2,class=CODE,delta=1
   192                           	psect	text163,global,reloc=2,class=CODE,delta=1
   193                           	psect	text164,global,reloc=2,class=CODE,delta=1
   194                           	psect	text165,global,reloc=2,class=CODE,delta=1
   195                           	psect	text166,global,reloc=2,class=CODE,delta=1
   196                           	psect	text167,global,reloc=2,class=CODE,delta=1
   197                           	psect	text168,global,reloc=2,class=CODE,delta=1
   198                           	psect	text169,global,reloc=2,class=CODE,delta=1
   199                           	psect	text170,global,reloc=2,class=CODE,delta=1
   200                           	psect	text171,global,reloc=2,class=CODE,delta=1
   201                           	psect	text172,global,reloc=2,class=CODE,delta=1
   202                           	psect	text173,global,reloc=2,class=CODE,delta=1
   203                           	psect	text174,global,reloc=2,class=CODE,delta=1
   204                           	psect	text175,global,reloc=2,class=CODE,delta=1
   205                           	psect	text176,global,reloc=2,class=CODE,delta=1
   206                           	psect	text177,global,reloc=2,class=CODE,delta=1
   207                           	psect	text178,global,reloc=2,class=CODE,delta=1
   208                           	psect	text179,global,reloc=2,class=CODE,delta=1
   209                           	psect	text180,global,reloc=2,class=CODE,delta=1
   210                           	psect	text181,global,reloc=2,class=CODE,delta=1
   211                           	psect	text182,global,reloc=2,class=CODE,delta=1
   212                           	psect	text183,global,reloc=2,class=CODE,delta=1
   213                           	psect	text184,global,reloc=2,class=CODE,delta=1
   214                           	psect	text185,global,reloc=2,class=CODE,delta=1,group=3
   215                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=3
   216                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=3
   217                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=2
   218                           	psect	text189,global,reloc=2,class=CODE,delta=1,group=3
   219                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=2
   220                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=2
   221                           	psect	text192,global,reloc=2,class=CODE,delta=1,group=3
   222                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=2
   223                           	psect	text194,global,reloc=2,class=CODE,delta=1
   224                           	psect	text195,global,reloc=2,class=CODE,delta=1
   225                           	psect	text196,global,reloc=2,class=CODE,delta=1
   226                           	psect	text197,global,reloc=2,class=CODE,delta=1
   227                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=2
   228                           	psect	text199,global,reloc=2,class=CODE,delta=1
   229                           	psect	text200,global,reloc=2,class=CODE,delta=1
   230                           	psect	text201,global,reloc=2,class=CODE,delta=1
   231                           	psect	text202,global,reloc=2,class=CODE,delta=1
   232                           	psect	text203,global,reloc=2,class=CODE,delta=1
   233                           	psect	text204,global,reloc=2,class=CODE,delta=1,group=3
   234                           	psect	text205,global,reloc=2,class=CODE,delta=1
   235                           	psect	text206,global,reloc=2,class=CODE,delta=1
   236                           	psect	text207,global,reloc=2,class=CODE,delta=1
   237                           	psect	text208,global,reloc=2,class=CODE,delta=1
   238                           	psect	text209,global,reloc=2,class=CODE,delta=1
   239                           	psect	text210,global,reloc=2,class=CODE,delta=1
   240                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   241                           	psect	text212,global,reloc=2,class=CODE,delta=1
   242                           	psect	text213,global,reloc=2,class=CODE,delta=1
   243                           	psect	text214,global,reloc=2,class=CODE,delta=1
   244                           	psect	text215,global,reloc=2,class=CODE,delta=1
   245                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   246                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   247                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   248                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   249                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   250                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   251                           	dabs	1,0x400,48,_BDT
   252                           	dabs	1,0x438,8,_CtrlTrfData
   253                           	dabs	1,0x430,8,_SetupPkt
   254  0000                     
   255                           ; Version 2.32
   256                           ; Generated 23/11/2020 GMT
   257                           ; 
   258                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   259                           ; All rights reserved.
   260                           ; 
   261                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   262                           ; 
   263                           ; Redistribution and use in source and binary forms, with or without modification, are
   264                           ; permitted provided that the following conditions are met:
   265                           ; 
   266                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   267                           ;        conditions and the following disclaimer.
   268                           ; 
   269                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   270                           ;        of conditions and the following disclaimer in the documentation and/or other
   271                           ;        materials provided with the distribution. Publication is not required when
   272                           ;        this file is used in an embedded application.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F26J50 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291                           	psect	idataBANK1
   292  00DEE6                     __pidataBANK1:
   293                           	callstack 0
   294                           
   295                           ;initializer for max7323_set_lmp_off@F353
   296  00DEE6  30                 	db	48
   297  00DEE7  18                 	db	24
   298                           
   299                           ;initializer for _max7323_address
   300  00DEE8  DA                 	db	218
   301  00DEE9  D8                 	db	216
   302                           
   303                           ;initializer for _eeprom_address
   304  00DEEA  A2                 	db	162
   305  00DEEB  A0                 	db	160
   306                           
   307                           ;initializer for _ads1114_address
   308  00DEEC  92                 	db	146
   309  00DEED  90                 	db	144
   310                           
   311                           	psect	idataBANK4
   312  00D452                     __pidataBANK4:
   313                           	callstack 0
   314                           
   315                           ;initializer for ewmaFilter_get@filter_alpha
   316  00D452  0000               	dw	0
   317  00D454  3F80               	dw	16256
   318  00D456  6666               	dw	26214
   319  00D458  3F66               	dw	16230
   320  00D45A  999A               	dw	39322
   321  00D45C  3F59               	dw	16217
   322  00D45E  CCCD               	dw	52429
   323  00D460  3F4C               	dw	16204
   324  00D462  3333               	dw	13107
   325  00D464  3F33               	dw	16179
   326  00D466  999A               	dw	39322
   327  00D468  3F19               	dw	16153
   328  00D46A  0000               	dw	0
   329  00D46C  3F00               	dw	16128
   330  00D46E  CCCD               	dw	52429
   331  00D470  3ECC               	dw	16076
   332  00D472  999A               	dw	39322
   333  00D474  3E99               	dw	16025
   334  00D476  0000               	dw	0
   335  00D478  3E80               	dw	16000
   336  00D47A  CCCD               	dw	52429
   337  00D47C  3E4C               	dw	15948
   338  00D47E  999A               	dw	39322
   339  00D480  3E19               	dw	15897
   340  00D482  CCCD               	dw	52429
   341  00D484  3DCC               	dw	15820
   342  00D486  CCCD               	dw	52429
   343  00D488  3D4C               	dw	15692
   344  00D48A  D70A               	dw	55050
   345  00D48C  3CA3               	dw	15523
   346                           
   347                           	psect	idataBANK5
   348  00D7D2                     __pidataBANK5:
   349                           	callstack 0
   350                           
   351                           ;initializer for _sd002
   352  00D7D2  34                 	db	52
   353  00D7D3  03                 	db	3
   354  00D7D4  0055               	dw	85
   355  00D7D6  0041               	dw	65
   356  00D7D8  005F               	dw	95
   357  00D7DA  0053               	dw	83
   358  00D7DC  0045               	dw	69
   359  00D7DE  0052               	dw	82
   360  00D7E0  0049               	dw	73
   361  00D7E2  0045               	dw	69
   362  00D7E4  0053               	dw	83
   363  00D7E6  005F               	dw	95
   364  00D7E8  005F               	dw	95
   365  00D7EA  00FF               	dw	255
   366  00D7EC  00FF               	dw	255
   367  00D7EE  00FF               	dw	255
   368  00D7F0  00FF               	dw	255
   369  00D7F2  00FF               	dw	255
   370  00D7F4  00FF               	dw	255
   371  00D7F6  00FF               	dw	255
   372  00D7F8  00FF               	dw	255
   373  00D7FA  0000               	dw	0
   374  00D7FC  00                 	db	0
   375  00D7FD  00                 	db	0
   376  00D7FE  00                 	db	0
   377  00D7FF  00                 	db	0
   378  00D800  00                 	db	0
   379  00D801  00                 	db	0
   380  00D802  00                 	db	0
   381  00D803  00                 	db	0
   382  00D804  00                 	db	0
   383  00D805  00                 	db	0
   384                           
   385                           	psect	idataBANK7
   386  00D48E                     __pidataBANK7:
   387                           	callstack 0
   388                           
   389                           ;initializer for _kalman_q_factor
   390  00D48E  70A4               	dw	28836
   391  00D490  3F7D               	dw	16253
   392  00D492  CCCD               	dw	52429
   393  00D494  3F4C               	dw	16204
   394  00D496  999A               	dw	39322
   395  00D498  3F19               	dw	16153
   396  00D49A  0000               	dw	0
   397  00D49C  3F00               	dw	16128
   398  00D49E  999A               	dw	39322
   399  00D4A0  3E99               	dw	16025
   400  00D4A2  CCCD               	dw	52429
   401  00D4A4  3DCC               	dw	15820
   402  00D4A6  CCCD               	dw	52429
   403  00D4A8  3D4C               	dw	15692
   404  00D4AA  D70A               	dw	55050
   405  00D4AC  3C23               	dw	15395
   406  00D4AE  D70A               	dw	55050
   407  00D4B0  3BA3               	dw	15267
   408  00D4B2  126F               	dw	4719
   409  00D4B4  3A83               	dw	14979
   410  00D4B6  126F               	dw	4719
   411  00D4B8  3A03               	dw	14851
   412  00D4BA  B717               	dw	46871
   413  00D4BC  38D1               	dw	14545
   414  00D4BE  B717               	dw	46871
   415  00D4C0  3851               	dw	14417
   416  00D4C2  C5AC               	dw	50604
   417  00D4C4  3727               	dw	14119
   418  00D4C6  37BD               	dw	14269
   419  00D4C8  3586               	dw	13702
   420                           
   421                           	psect	mediumconst
   422  002008                     __pmediumconst:
   423                           	callstack 0
   424  002008  00                 	db	0
   425  002009                     __powers_:
   426                           	callstack 0
   427  002009  0000               	dw	0
   428  00200B  3F80               	dw	16256
   429  00200D  0000               	dw	0
   430  00200F  4120               	dw	16672
   431  002011  0000               	dw	0
   432  002013  42C8               	dw	17096
   433  002015  0000               	dw	0
   434  002017  447A               	dw	17530
   435  002019  4000               	dw	16384
   436  00201B  461C               	dw	17948
   437  00201D  5000               	dw	20480
   438  00201F  47C3               	dw	18371
   439  002021  2400               	dw	9216
   440  002023  4974               	dw	18804
   441  002025  9680               	dw	38528
   442  002027  4B18               	dw	19224
   443  002029  BC20               	dw	48160
   444  00202B  4CBE               	dw	19646
   445  00202D  6B28               	dw	27432
   446  00202F  4E6E               	dw	20078
   447  002031  02F9               	dw	761
   448  002033  5015               	dw	20501
   449  002035  78EC               	dw	30956
   450  002037  60AD               	dw	24749
   451  002039  F2CA               	dw	62154
   452  00203B  7149               	dw	29001
   453  00203D                     __end_of__powers_:
   454                           	callstack 0
   455  00203D                     __npowers_:
   456                           	callstack 0
   457  00203D  0000               	dw	0
   458  00203F  3F80               	dw	16256
   459  002041  CCCD               	dw	52429
   460  002043  3DCC               	dw	15820
   461  002045  D70A               	dw	55050
   462  002047  3C23               	dw	15395
   463  002049  126F               	dw	4719
   464  00204B  3A83               	dw	14979
   465  00204D  B717               	dw	46871
   466  00204F  38D1               	dw	14545
   467  002051  C5AC               	dw	50604
   468  002053  3727               	dw	14119
   469  002055  37BD               	dw	14269
   470  002057  3586               	dw	13702
   471  002059  BF95               	dw	49045
   472  00205B  33D6               	dw	13270
   473  00205D  CC77               	dw	52343
   474  00205F  322B               	dw	12843
   475  002061  705F               	dw	28767
   476  002063  3089               	dw	12425
   477  002065  E6FF               	dw	59135
   478  002067  2EDB               	dw	11995
   479  002069  E508               	dw	58632
   480  00206B  1E3C               	dw	7740
   481  00206D  4260               	dw	16992
   482  00206F  0DA2               	dw	3490
   483  002071                     __end_of__npowers_:
   484                           	callstack 0
   485  002071                     _g_baudrate:
   486                           	callstack 0
   487  002071  12C0               	dw	4800
   488  002073  0000               	dw	0
   489  002075  2580               	dw	9600
   490  002077  0000               	dw	0
   491  002079  3840               	dw	14400
   492  00207B  0000               	dw	0
   493  00207D  4B00               	dw	19200
   494  00207F  0000               	dw	0
   495  002081  9600               	dw	38400
   496  002083  0000               	dw	0
   497  002085  E100               	dw	57600
   498  002087  0000               	dw	0
   499  002089                     __end_of_g_baudrate:
   500                           	callstack 0
   501  002089                     _USB_SD_Ptr:
   502                           	callstack 0
   503  002089  35                 	db	low _sd000
   504  00208A  23                 	db	high _sd000
   505  00208B  C7                 	db	low _sd001
   506  00208C  22                 	db	high _sd001
   507  00208D  C3                 	db	low _sd002
   508  00208E  05                 	db	high _sd002
   509  00208F                     __end_of_USB_SD_Ptr:
   510                           	callstack 0
   511  00208F                     _g_timeout:
   512                           	callstack 0
   513  00208F  64                 	db	100
   514  002090  0F                 	db	15
   515  002091  1E                 	db	30
   516  002092  3C                 	db	60
   517  002093  C8                 	db	200
   518  002094                     __end_of_g_timeout:
   519                           	callstack 0
   520  002094                     _USB_CD_Ptr:
   521                           	callstack 0
   522  002094  84                 	db	low _configDescriptor1
   523  002095  22                 	db	high _configDescriptor1
   524  002096                     __end_of_USB_CD_Ptr:
   525                           	callstack 0
   526  0000                     _FlashSignatureWord_absconstaddr	set	8198
   527  002096                     _atcommand_type:
   528                           	callstack 0
   529  002096  01                 	db	1
   530  002097  41                 	db	65
   531  002098  54                 	db	84
   532  002099  43                 	db	67
   533  00209A  5A                 	db	90
   534  00209B  00                 	db	0
   535  00209C  00                 	db	0
   536  00209D  00                 	db	0
   537  00209E  00                 	db	0
   538  00209F  00                 	db	0
   539  0020A0  00                 	db	0
   540  0020A1  00                 	db	0
   541  0020A2  00                 	db	0
   542  0020A3  05                 	db	5
   543  0020A4  41                 	db	65
   544  0020A5  54                 	db	84
   545  0020A6  43                 	db	67
   546  0020A7  44                 	db	68
   547  0020A8  25                 	db	37
   548  0020A9  00                 	db	0
   549  0020AA  00                 	db	0
   550  0020AB  00                 	db	0
   551  0020AC  00                 	db	0
   552  0020AD  00                 	db	0
   553  0020AE  00                 	db	0
   554  0020AF  00                 	db	0
   555  0020B0  06                 	db	6
   556  0020B1  41                 	db	65
   557  0020B2  54                 	db	84
   558  0020B3  43                 	db	67
   559  0020B4  51                 	db	81
   560  0020B5  25                 	db	37
   561  0020B6  00                 	db	0
   562  0020B7  00                 	db	0
   563  0020B8  00                 	db	0
   564  0020B9  00                 	db	0
   565  0020BA  00                 	db	0
   566  0020BB  00                 	db	0
   567  0020BC  00                 	db	0
   568  0020BD  07                 	db	7
   569  0020BE  41                 	db	65
   570  0020BF  54                 	db	84
   571  0020C0  43                 	db	67
   572  0020C1  48                 	db	72
   573  0020C2  25                 	db	37
   574  0020C3  00                 	db	0
   575  0020C4  00                 	db	0
   576  0020C5  00                 	db	0
   577  0020C6  00                 	db	0
   578  0020C7  00                 	db	0
   579  0020C8  00                 	db	0
   580  0020C9  00                 	db	0
   581  0020CA  08                 	db	8
   582  0020CB  41                 	db	65
   583  0020CC  54                 	db	84
   584  0020CD  43                 	db	67
   585  0020CE  55                 	db	85
   586  0020CF  56                 	db	86
   587  0020D0  25                 	db	37
   588  0020D1  00                 	db	0
   589  0020D2  00                 	db	0
   590  0020D3  00                 	db	0
   591  0020D4  00                 	db	0
   592  0020D5  00                 	db	0
   593  0020D6  00                 	db	0
   594  0020D7  09                 	db	9
   595  0020D8  41                 	db	65
   596  0020D9  54                 	db	84
   597  0020DA  43                 	db	67
   598  0020DB  4D                 	db	77
   599  0020DC  4F                 	db	79
   600  0020DD  44                 	db	68
   601  0020DE  45                 	db	69
   602  0020DF  4C                 	db	76
   603  0020E0  00                 	db	0
   604  0020E1  00                 	db	0
   605  0020E2  00                 	db	0
   606  0020E3  00                 	db	0
   607  0020E4  02                 	db	2
   608  0020E5  41                 	db	65
   609  0020E6  54                 	db	84
   610  0020E7  43                 	db	67
   611  0020E8  56                 	db	86
   612  0020E9  45                 	db	69
   613  0020EA  52                 	db	82
   614  0020EB  00                 	db	0
   615  0020EC  00                 	db	0
   616  0020ED  00                 	db	0
   617  0020EE  00                 	db	0
   618  0020EF  00                 	db	0
   619  0020F0  00                 	db	0
   620  0020F1  03                 	db	3
   621  0020F2  41                 	db	65
   622  0020F3  54                 	db	84
   623  0020F4  43                 	db	67
   624  0020F5  52                 	db	82
   625  0020F6  53                 	db	83
   626  0020F7  54                 	db	84
   627  0020F8  00                 	db	0
   628  0020F9  00                 	db	0
   629  0020FA  00                 	db	0
   630  0020FB  00                 	db	0
   631  0020FC  00                 	db	0
   632  0020FD  01                 	db	1
   633  0020FE  04                 	db	4
   634  0020FF  41                 	db	65
   635  002100  54                 	db	84
   636  002101  43                 	db	67
   637  002102  42                 	db	66
   638  002103  4C                 	db	76
   639  002104  52                 	db	82
   640  002105  53                 	db	83
   641  002106  54                 	db	84
   642  002107  00                 	db	0
   643  002108  00                 	db	0
   644  002109  00                 	db	0
   645  00210A  01                 	db	1
   646  00210B  0A                 	db	10
   647  00210C  41                 	db	65
   648  00210D  54                 	db	84
   649  00210E  43                 	db	67
   650  00210F  53                 	db	83
   651  002110  4D                 	db	77
   652  002111  4F                 	db	79
   653  002112  44                 	db	68
   654  002113  45                 	db	69
   655  002114  4C                 	db	76
   656  002115  00                 	db	0
   657  002116  00                 	db	0
   658  002117  02                 	db	2
   659  002118  0B                 	db	11
   660  002119  41                 	db	65
   661  00211A  54                 	db	84
   662  00211B  43                 	db	67
   663  00211C  46                 	db	70
   664  00211D  54                 	db	84
   665  00211E  52                 	db	82
   666  00211F  53                 	db	83
   667  002120  54                 	db	84
   668  002121  00                 	db	0
   669  002122  00                 	db	0
   670  002123  00                 	db	0
   671  002124  01                 	db	1
   672  002125  0C                 	db	12
   673  002126  41                 	db	65
   674  002127  54                 	db	84
   675  002128  43                 	db	67
   676  002129  53                 	db	83
   677  00212A  4F                 	db	79
   678  00212B  4E                 	db	78
   679  00212C  00                 	db	0
   680  00212D  00                 	db	0
   681  00212E  00                 	db	0
   682  00212F  00                 	db	0
   683  002130  00                 	db	0
   684  002131  02                 	db	2
   685  002132  0D                 	db	13
   686  002133  41                 	db	65
   687  002134  54                 	db	84
   688  002135  43                 	db	67
   689  002136  49                 	db	73
   690  002137  53                 	db	83
   691  002138  4D                 	db	77
   692  002139  53                 	db	83
   693  00213A  54                 	db	84
   694  00213B  00                 	db	0
   695  00213C  00                 	db	0
   696  00213D  00                 	db	0
   697  00213E  02                 	db	2
   698  00213F  0E                 	db	14
   699  002140  41                 	db	65
   700  002141  54                 	db	84
   701  002142  43                 	db	67
   702  002143  4D                 	db	77
   703  002144  4F                 	db	79
   704  002145  44                 	db	68
   705  002146  43                 	db	67
   706  002147  48                 	db	72
   707  002148  00                 	db	0
   708  002149  00                 	db	0
   709  00214A  00                 	db	0
   710  00214B  02                 	db	2
   711  00214C  0F                 	db	15
   712  00214D  41                 	db	65
   713  00214E  54                 	db	84
   714  00214F  43                 	db	67
   715  002150  4D                 	db	77
   716  002151  53                 	db	83
   717  002152  54                 	db	84
   718  002153  49                 	db	73
   719  002154  44                 	db	68
   720  002155  00                 	db	0
   721  002156  00                 	db	0
   722  002157  00                 	db	0
   723  002158  02                 	db	2
   724  002159  10                 	db	16
   725  00215A  41                 	db	65
   726  00215B  54                 	db	84
   727  00215C  43                 	db	67
   728  00215D  52                 	db	82
   729  00215E  4C                 	db	76
   730  00215F  59                 	db	89
   731  002160  4E                 	db	78
   732  002161  4F                 	db	79
   733  002162  00                 	db	0
   734  002163  00                 	db	0
   735  002164  00                 	db	0
   736  002165  02                 	db	2
   737  002166  11                 	db	17
   738  002167  41                 	db	65
   739  002168  54                 	db	84
   740  002169  43                 	db	67
   741  00216A  50                 	db	80
   742  00216B  50                 	db	80
   743  00216C  4D                 	db	77
   744  00216D  4D                 	db	77
   745  00216E  41                 	db	65
   746  00216F  58                 	db	88
   747  002170  00                 	db	0
   748  002171  00                 	db	0
   749  002172  02                 	db	2
   750  002173  12                 	db	18
   751  002174  41                 	db	65
   752  002175  54                 	db	84
   753  002176  43                 	db	67
   754  002177  52                 	db	82
   755  002178  4C                 	db	76
   756  002179  59                 	db	89
   757  00217A  44                 	db	68
   758  00217B  4C                 	db	76
   759  00217C  59                 	db	89
   760  00217D  00                 	db	0
   761  00217E  00                 	db	0
   762  00217F  02                 	db	2
   763  002180  13                 	db	19
   764  002181  41                 	db	65
   765  002182  54                 	db	84
   766  002183  43                 	db	67
   767  002184  4D                 	db	77
   768  002185  4F                 	db	79
   769  002186  44                 	db	68
   770  002187  49                 	db	73
   771  002188  44                 	db	68
   772  002189  00                 	db	0
   773  00218A  00                 	db	0
   774  00218B  00                 	db	0
   775  00218C  02                 	db	2
   776  00218D  14                 	db	20
   777  00218E  41                 	db	65
   778  00218F  54                 	db	84
   779  002190  43                 	db	67
   780  002191  4D                 	db	77
   781  002192  4F                 	db	79
   782  002193  44                 	db	68
   783  002194  42                 	db	66
   784  002195  52                 	db	82
   785  002196  00                 	db	0
   786  002197  00                 	db	0
   787  002198  00                 	db	0
   788  002199  02                 	db	2
   789  00219A  15                 	db	21
   790  00219B  41                 	db	65
   791  00219C  54                 	db	84
   792  00219D  43                 	db	67
   793  00219E  4D                 	db	77
   794  00219F  4F                 	db	79
   795  0021A0  44                 	db	68
   796  0021A1  53                 	db	83
   797  0021A2  57                 	db	87
   798  0021A3  00                 	db	0
   799  0021A4  00                 	db	0
   800  0021A5  00                 	db	0
   801  0021A6  02                 	db	2
   802  0021A7  16                 	db	22
   803  0021A8  41                 	db	65
   804  0021A9  54                 	db	84
   805  0021AA  43                 	db	67
   806  0021AB  4D                 	db	77
   807  0021AC  4F                 	db	79
   808  0021AD  44                 	db	68
   809  0021AE  54                 	db	84
   810  0021AF  4F                 	db	79
   811  0021B0  00                 	db	0
   812  0021B1  00                 	db	0
   813  0021B2  00                 	db	0
   814  0021B3  02                 	db	2
   815  0021B4  19                 	db	25
   816  0021B5  41                 	db	65
   817  0021B6  54                 	db	84
   818  0021B7  43                 	db	67
   819  0021B8  43                 	db	67
   820  0021B9  41                 	db	65
   821  0021BA  50                 	db	80
   822  0021BB  25                 	db	37
   823  0021BC  00                 	db	0
   824  0021BD  00                 	db	0
   825  0021BE  00                 	db	0
   826  0021BF  00                 	db	0
   827  0021C0  02                 	db	2
   828  0021C1  17                 	db	23
   829  0021C2  41                 	db	65
   830  0021C3  54                 	db	84
   831  0021C4  43                 	db	67
   832  0021C5  4F                 	db	79
   833  0021C6  46                 	db	70
   834  0021C7  46                 	db	70
   835  0021C8  47                 	db	71
   836  0021C9  25                 	db	37
   837  0021CA  00                 	db	0
   838  0021CB  00                 	db	0
   839  0021CC  00                 	db	0
   840  0021CD  02                 	db	2
   841  0021CE  18                 	db	24
   842  0021CF  41                 	db	65
   843  0021D0  54                 	db	84
   844  0021D1  43                 	db	67
   845  0021D2  4F                 	db	79
   846  0021D3  46                 	db	70
   847  0021D4  46                 	db	70
   848  0021D5  54                 	db	84
   849  0021D6  25                 	db	37
   850  0021D7  00                 	db	0
   851  0021D8  00                 	db	0
   852  0021D9  00                 	db	0
   853  0021DA  02                 	db	2
   854  0021DB  1A                 	db	26
   855  0021DC  41                 	db	65
   856  0021DD  54                 	db	84
   857  0021DE  43                 	db	67
   858  0021DF  53                 	db	83
   859  0021E0  49                 	db	73
   860  0021E1  4E                 	db	78
   861  0021E2  4D                 	db	77
   862  0021E3  25                 	db	37
   863  0021E4  00                 	db	0
   864  0021E5  00                 	db	0
   865  0021E6  00                 	db	0
   866  0021E7  02                 	db	2
   867  0021E8  1B                 	db	27
   868  0021E9  41                 	db	65
   869  0021EA  54                 	db	84
   870  0021EB  43                 	db	67
   871  0021EC  53                 	db	83
   872  0021ED  4E                 	db	78
   873  0021EE  41                 	db	65
   874  0021EF  4D                 	db	77
   875  0021F0  45                 	db	69
   876  0021F1  25                 	db	37
   877  0021F2  00                 	db	0
   878  0021F3  00                 	db	0
   879  0021F4  03                 	db	3
   880  0021F5  1C                 	db	28
   881  0021F6  41                 	db	65
   882  0021F7  54                 	db	84
   883  0021F8  43                 	db	67
   884  0021F9  43                 	db	67
   885  0021FA  41                 	db	65
   886  0021FB  4C                 	db	76
   887  0021FC  25                 	db	37
   888  0021FD  00                 	db	0
   889  0021FE  00                 	db	0
   890  0021FF  00                 	db	0
   891  002200  00                 	db	0
   892  002201  02                 	db	2
   893  002202  1D                 	db	29
   894  002203  41                 	db	65
   895  002204  54                 	db	84
   896  002205  43                 	db	67
   897  002206  43                 	db	67
   898  002207  5A                 	db	90
   899  002208  52                 	db	82
   900  002209  25                 	db	37
   901  00220A  00                 	db	0
   902  00220B  00                 	db	0
   903  00220C  00                 	db	0
   904  00220D  00                 	db	0
   905  00220E  01                 	db	1
   906  00220F  1E                 	db	30
   907  002210  41                 	db	65
   908  002211  54                 	db	84
   909  002212  43                 	db	67
   910  002213  43                 	db	67
   911  002214  53                 	db	83
   912  002215  50                 	db	80
   913  002216  25                 	db	37
   914  002217  00                 	db	0
   915  002218  00                 	db	0
   916  002219  00                 	db	0
   917  00221A  00                 	db	0
   918  00221B  02                 	db	2
   919  00221C  1F                 	db	31
   920  00221D  41                 	db	65
   921  00221E  54                 	db	84
   922  00221F  43                 	db	67
   923  002220  4D                 	db	77
   924  002221  4F                 	db	79
   925  002222  44                 	db	68
   926  002223  45                 	db	69
   927  002224  25                 	db	37
   928  002225  00                 	db	0
   929  002226  00                 	db	0
   930  002227  00                 	db	0
   931  002228  02                 	db	2
   932  002229  20                 	db	32
   933  00222A  41                 	db	65
   934  00222B  54                 	db	84
   935  00222C  43                 	db	67
   936  00222D  54                 	db	84
   937  00222E  43                 	db	67
   938  00222F  4D                 	db	77
   939  002230  50                 	db	80
   940  002231  25                 	db	37
   941  002232  00                 	db	0
   942  002233  00                 	db	0
   943  002234  00                 	db	0
   944  002235  02                 	db	2
   945  002236  22                 	db	34
   946  002237  41                 	db	65
   947  002238  54                 	db	84
   948  002239  43                 	db	67
   949  00223A  46                 	db	70
   950  00223B  25                 	db	37
   951  00223C  00                 	db	0
   952  00223D  00                 	db	0
   953  00223E  00                 	db	0
   954  00223F  00                 	db	0
   955  002240  00                 	db	0
   956  002241  00                 	db	0
   957  002242  01                 	db	1
   958  002243  21                 	db	33
   959  002244  41                 	db	65
   960  002245  54                 	db	84
   961  002246  43                 	db	67
   962  002247  43                 	db	67
   963  002248  25                 	db	37
   964  002249  00                 	db	0
   965  00224A  00                 	db	0
   966  00224B  00                 	db	0
   967  00224C  00                 	db	0
   968  00224D  00                 	db	0
   969  00224E  00                 	db	0
   970  00224F  01                 	db	1
   971  002250  23                 	db	35
   972  002251  41                 	db	65
   973  002252  54                 	db	84
   974  002253  43                 	db	67
   975  002254  57                 	db	87
   976  002255  49                 	db	73
   977  002256  4E                 	db	78
   978  002257  25                 	db	37
   979  002258  00                 	db	0
   980  002259  00                 	db	0
   981  00225A  00                 	db	0
   982  00225B  00                 	db	0
   983  00225C  02                 	db	2
   984  00225D  25                 	db	37
   985  00225E  41                 	db	65
   986  00225F  54                 	db	84
   987  002260  43                 	db	67
   988  002261  45                 	db	69
   989  002262  58                 	db	88
   990  002263  54                 	db	84
   991  002264  4D                 	db	77
   992  002265  25                 	db	37
   993  002266  00                 	db	0
   994  002267  00                 	db	0
   995  002268  00                 	db	0
   996  002269  02                 	db	2
   997  00226A  24                 	db	36
   998  00226B  41                 	db	65
   999  00226C  54                 	db	84
  1000  00226D  43                 	db	67
  1001  00226E  55                 	db	85
  1002  00226F  53                 	db	83
  1003  002270  45                 	db	69
  1004  002271  44                 	db	68
  1005  002272  25                 	db	37
  1006  002273  00                 	db	0
  1007  002274  00                 	db	0
  1008  002275  00                 	db	0
  1009  002276  02                 	db	2
  1010  002277  26                 	db	38
  1011  002278  41                 	db	65
  1012  002279  54                 	db	84
  1013  00227A  43                 	db	67
  1014  00227B  42                 	db	66
  1015  00227C  4C                 	db	76
  1016  00227D  44                 	db	68
  1017  00227E  54                 	db	84
  1018  00227F  4D                 	db	77
  1019  002280  00                 	db	0
  1020  002281  00                 	db	0
  1021  002282  00                 	db	0
  1022  002283  00                 	db	0
  1023  002284                     __end_of_atcommand_type:
  1024                           	callstack 0
  1025  002284                     _configDescriptor1:
  1026                           	callstack 0
  1027  002284  09                 	db	9
  1028  002285  02                 	db	2
  1029  002286  43                 	db	67
  1030  002287  00                 	db	0
  1031  002288  02                 	db	2
  1032  002289  01                 	db	1
  1033  00228A  00                 	db	0
  1034  00228B  C0                 	db	192
  1035  00228C  32                 	db	50
  1036  00228D  09                 	db	9
  1037  00228E  04                 	db	4
  1038  00228F  00                 	db	0
  1039  002290  00                 	db	0
  1040  002291  01                 	db	1
  1041  002292  02                 	db	2
  1042  002293  02                 	db	2
  1043  002294  01                 	db	1
  1044  002295  00                 	db	0
  1045  002296  05                 	db	5
  1046  002297  24                 	db	36
  1047  002298  00                 	db	0
  1048  002299  10                 	db	16
  1049  00229A  01                 	db	1
  1050  00229B  04                 	db	4
  1051  00229C  24                 	db	36
  1052  00229D  02                 	db	2
  1053  00229E  02                 	db	2
  1054  00229F  05                 	db	5
  1055  0022A0  24                 	db	36
  1056  0022A1  06                 	db	6
  1057  0022A2  00                 	db	0
  1058  0022A3  01                 	db	1
  1059  0022A4  05                 	db	5
  1060  0022A5  24                 	db	36
  1061  0022A6  01                 	db	1
  1062  0022A7  00                 	db	0
  1063  0022A8  01                 	db	1
  1064  0022A9  07                 	db	7
  1065  0022AA  05                 	db	5
  1066  0022AB  81                 	db	129
  1067  0022AC  03                 	db	3
  1068  0022AD  08                 	db	8
  1069  0022AE  00                 	db	0
  1070  0022AF  02                 	db	2
  1071  0022B0  09                 	db	9
  1072  0022B1  04                 	db	4
  1073  0022B2  01                 	db	1
  1074  0022B3  00                 	db	0
  1075  0022B4  02                 	db	2
  1076  0022B5  0A                 	db	10
  1077  0022B6  00                 	db	0
  1078  0022B7  00                 	db	0
  1079  0022B8  00                 	db	0
  1080  0022B9  07                 	db	7
  1081  0022BA  05                 	db	5
  1082  0022BB  02                 	db	2
  1083  0022BC  02                 	db	2
  1084  0022BD  40                 	db	64
  1085  0022BE  00                 	db	0
  1086  0022BF  00                 	db	0
  1087  0022C0  07                 	db	7
  1088  0022C1  05                 	db	5
  1089  0022C2  82                 	db	130
  1090  0022C3  02                 	db	2
  1091  0022C4  40                 	db	64
  1092  0022C5  00                 	db	0
  1093  0022C6  00                 	db	0
  1094  0022C7                     __end_of_configDescriptor1:
  1095                           	callstack 0
  1096  0022C7                     _sd001:
  1097                           	callstack 0
  1098  0022C7  34                 	db	52
  1099  0022C8  03                 	db	3
  1100  0022C9  0044               	dw	68
  1101  0022CB  0065               	dw	101
  1102  0022CD  006B               	dw	107
  1103  0022CF  0069               	dw	105
  1104  0022D1  0073               	dw	115
  1105  0022D3  0074               	dw	116
  1106  0022D5  0020               	dw	32
  1107  0022D7  0043               	dw	67
  1108  0022D9  006F               	dw	111
  1109  0022DB  002E               	dw	46
  1110  0022DD  002C               	dw	44
  1111  0022DF  0020               	dw	32
  1112  0022E1  004C               	dw	76
  1113  0022E3  0074               	dw	116
  1114  0022E5  0064               	dw	100
  1115  0022E7  002E               	dw	46
  1116  0022E9  0000               	dw	0
  1117  0022EB  00                 	db	0
  1118  0022EC  00                 	db	0
  1119  0022ED  00                 	db	0
  1120  0022EE  00                 	db	0
  1121  0022EF  00                 	db	0
  1122  0022F0  00                 	db	0
  1123  0022F1  00                 	db	0
  1124  0022F2  00                 	db	0
  1125  0022F3  00                 	db	0
  1126  0022F4  00                 	db	0
  1127  0022F5  00                 	db	0
  1128  0022F6  00                 	db	0
  1129  0022F7  00                 	db	0
  1130  0022F8  00                 	db	0
  1131  0022F9  00                 	db	0
  1132  0022FA  00                 	db	0
  1133  0022FB                     __end_of_sd001:
  1134                           	callstack 0
  1135  0022FB                     _dpowers:
  1136                           	callstack 0
  1137  0022FB  0001               	dw	1
  1138  0022FD  0000               	dw	0
  1139  0022FF  000A               	dw	10
  1140  002301  0000               	dw	0
  1141  002303  0064               	dw	100
  1142  002305  0000               	dw	0
  1143  002307  03E8               	dw	1000
  1144  002309  0000               	dw	0
  1145  00230B  2710               	dw	10000
  1146  00230D  0000               	dw	0
  1147  00230F  86A0               	dw	34464
  1148  002311  0001               	dw	1
  1149  002313  4240               	dw	16960
  1150  002315  000F               	dw	15
  1151  002317  9680               	dw	38528
  1152  002319  0098               	dw	152
  1153  00231B  E100               	dw	57600
  1154  00231D  05F5               	dw	1525
  1155  00231F  CA00               	dw	51712
  1156  002321  3B9A               	dw	15258
  1157  002323                     __end_of_dpowers:
  1158                           	callstack 0
  1159  002323                     _device_dsc:
  1160                           	callstack 0
  1161  002323  12                 	db	18
  1162  002324  01                 	db	1
  1163  002325  0200               	dw	512
  1164  002327  02                 	db	2
  1165  002328  00                 	db	0
  1166  002329  00                 	db	0
  1167  00232A  08                 	db	8
  1168  00232B  04D8               	dw	1240
  1169  00232D  000A               	dw	10
  1170  00232F  0100               	dw	256
  1171  002331  01                 	db	1
  1172  002332  02                 	db	2
  1173  002333  00                 	db	0
  1174  002334  01                 	db	1
  1175  002335                     __end_of_device_dsc:
  1176                           	callstack 0
  1177  002335                     _sd000:
  1178                           	callstack 0
  1179  002335  04                 	db	4
  1180  002336  03                 	db	3
  1181  002337  0409               	dw	1033
  1182  002339                     __end_of_sd000:
  1183                           	callstack 0
  1184  0000                     _FlashSignatureWord_absconstaddr	set	8198
  1185  002339                     STR_6:
  1186  002339  49                 	db	73	;'I'
  1187  00233A  4E                 	db	78	;'N'
  1188  00233B  49                 	db	73	;'I'
  1189  00233C  54                 	db	84	;'T'
  1190  00233D  49                 	db	73	;'I'
  1191  00233E  41                 	db	65	;'A'
  1192  00233F  4C                 	db	76	;'L'
  1193  002340  49                 	db	73	;'I'
  1194  002341  5A                 	db	90	;'Z'
  1195  002342  49                 	db	73	;'I'
  1196  002343  4E                 	db	78	;'N'
  1197  002344  47                 	db	71	;'G'
  1198  002345  2E                 	db	46
  1199  002346  2E                 	db	46
  1200  002347  2E                 	db	46
  1201  002348  0D                 	db	13
  1202  002349  0A                 	db	10
  1203  00234A  00                 	db	0
  1204  00234B                     STR_4:
  1205  00234B  2D                 	db	45
  1206  00234C  2D                 	db	45
  1207  00234D  2D                 	db	45
  1208  00234E  2D                 	db	45
  1209  00234F  2C                 	db	44
  1210  002350  2D                 	db	45
  1211  002351  2D                 	db	45
  1212  002352  2D                 	db	45
  1213  002353  2D                 	db	45
  1214  002354  2C                 	db	44
  1215  002355  2D                 	db	45
  1216  002356  2D                 	db	45
  1217  002357  2D                 	db	45
  1218  002358  2D                 	db	45
  1219  002359  00                 	db	0
  1220  00235A                     STR_7:
  1221  00235A  52                 	db	82	;'R'
  1222  00235B  4E                 	db	78	;'N'
  1223  00235C  34                 	db	52	;'4'
  1224  00235D  30                 	db	48	;'0'
  1225  00235E  30                 	db	48	;'0'
  1226  00235F  54                 	db	84	;'T'
  1227  002360  32                 	db	50	;'2'
  1228  002361  2D                 	db	45
  1229  002362  47                 	db	71	;'G'
  1230  002363  53                 	db	83	;'S'
  1231  002364  5F                 	db	95	;'_'
  1232  002365  35                 	db	53	;'5'
  1233  002366  76                 	db	118	;'v'
  1234  002367  38                 	db	56	;'8'
  1235  002368  00                 	db	0
  1236  002369                     STR_18:
  1237  002369  4A                 	db	74	;'J'
  1238  00236A  61                 	db	97	;'a'
  1239  00236B  6E                 	db	110	;'n'
  1240  00236C  20                 	db	32
  1241  00236D  32                 	db	50	;'2'
  1242  00236E  30                 	db	48	;'0'
  1243  00236F  20                 	db	32
  1244  002370  32                 	db	50	;'2'
  1245  002371  30                 	db	48	;'0'
  1246  002372  32                 	db	50	;'2'
  1247  002373  32                 	db	50	;'2'
  1248  002374  00                 	db	0
  1249  002375                     STR_52:
  1250  002375  31                 	db	49	;'1'
  1251  002376  31                 	db	49	;'1'
  1252  002377  3A                 	db	58	;':'
  1253  002378  32                 	db	50	;'2'
  1254  002379  38                 	db	56	;'8'
  1255  00237A  3A                 	db	58	;':'
  1256  00237B  32                 	db	50	;'2'
  1257  00237C  30                 	db	48	;'0'
  1258  00237D  00                 	db	0
  1259  00237E                     STR_16:
  1260  00237E  4E                 	db	78	;'N'
  1261  00237F  48                 	db	72	;'H'
  1262  002380  33                 	db	51	;'3'
  1263  002381  2D                 	db	45
  1264  002382  31                 	db	49	;'1'
  1265  002383  30                 	db	48	;'0'
  1266  002384  30                 	db	48	;'0'
  1267  002385  30                 	db	48	;'0'
  1268  002386  00                 	db	0
  1269  002387                     STR_13:
  1270  002387  4E                 	db	78	;'N'
  1271  002388  48                 	db	72	;'H'
  1272  002389  33                 	db	51	;'3'
  1273  00238A  2D                 	db	45
  1274  00238B  31                 	db	49	;'1'
  1275  00238C  30                 	db	48	;'0'
  1276  00238D  30                 	db	48	;'0'
  1277  00238E  00                 	db	0
  1278  00238F                     STR_14:
  1279  00238F  48                 	db	72	;'H'
  1280  002390  32                 	db	50	;'2'
  1281  002391  53                 	db	83	;'S'
  1282  002392  2D                 	db	45
  1283  002393  35                 	db	53	;'5'
  1284  002394  30                 	db	48	;'0'
  1285  002395  00                 	db	0
  1286  002396                     STR_5:
  1287  002396  25                 	db	37
  1288  002397  2E                 	db	46
  1289  002398  32                 	db	50	;'2'
  1290  002399  66                 	db	102	;'f'
  1291  00239A  00                 	db	0
  1292  00239B                     STR_15:
  1293  00239B  45                 	db	69	;'E'
  1294  00239C  4F                 	db	79	;'O'
  1295  00239D  00                 	db	0
  1296  00239E  00                 	db	0	; dummy byte at the end
  1297  0000                     
  1298                           	psect	_FlashSignatureWord_const
  1299  002006                     __p_FlashSignatureWord_const:
  1300                           	callstack 0
  1301  002006                     _FlashSignatureWord:
  1302                           	callstack 0
  1303  002006  600D               	dw	24589
  1304  002008                     __end_of_FlashSignatureWord:
  1305                           	callstack 0
  1306  0000                     _UEP0bits	set	3878
  1307  0000                     _UIEbits	set	3894
  1308  0000                     _UADDR	set	3896
  1309  0000                     _UIE	set	3894
  1310  0000                     _UEIE	set	3895
  1311  0000                     _UCFG	set	3897
  1312  0000                     _ANCON1	set	3913
  1313  0000                     _ANCON0	set	3912
  1314  0000                     _UEP1	set	3879
  1315  0000                     _UEP0	set	3878
  1316  0000                     _USTAT	set	3940
  1317  0000                     _UIRbits	set	3938
  1318  0000                     _UIR	set	3938
  1319  0000                     _UEIR	set	3939
  1320  0000                     _PIE2bits	set	4000
  1321  0000                     _UCON	set	3941
  1322  0000                     _OSCCON	set	4051
  1323  0000                     _OSCTUNEbits	set	3995
  1324  0000                     _INTCON2bits	set	4081
  1325  0000                     _TMR0L	set	4054
  1326  0000                     _T0CONbits	set	4053
  1327  0000                     _WDTCONbits	set	4032
  1328  0000                     _UCONbits	set	3941
  1329  0000                     _RCREG1	set	4015
  1330  0000                     _RCSTA1bits	set	4012
  1331  0000                     _TXREG	set	4014
  1332  0000                     _TXSTA1bits	set	4013
  1333  0000                     _SPBRG1	set	4016
  1334  0000                     _PIE1bits	set	3997
  1335  0000                     _IPR1bits	set	3999
  1336  0000                     _RCONbits	set	4048
  1337  0000                     _BAUDCON1	set	3966
  1338  0000                     _RCSTA1	set	4012
  1339  0000                     _TXSTA1	set	4013
  1340  0000                     _TRISCbits	set	3988
  1341  0000                     _LATBbits	set	3978
  1342  0000                     _LATAbits	set	3977
  1343  0000                     _PORTAbits	set	3968
  1344  0000                     _TRISAbits	set	3986
  1345  0000                     _SSP1BUF	set	4041
  1346  0000                     _SSP1STATbits	set	4039
  1347  0000                     _SSP1CON2bits	set	4037
  1348  0000                     _PIR2bits	set	4001
  1349  0000                     _PIR1bits	set	3998
  1350  0000                     _SSP1ADD	set	4040
  1351  0000                     _SSP1STAT	set	4039
  1352  0000                     _SSP1CON2	set	4037
  1353  0000                     _SSP1CON1	set	4038
  1354  0000                     _TRISBbits	set	3987
  1355  0000                     _EECON2	set	4007
  1356  0000                     _INTCONbits	set	4082
  1357  0000                     _EECON1bits	set	4006
  1358  0000                     _TABLAT	set	4085
  1359  0000                     _TBLPTRL	set	4086
  1360  0000                     _TBLPTRH	set	4087
  1361  0000                     _TBLPTRU	set	4088
  1362                           
  1363                           ; #config settings
  1364                           
  1365                           	psect	cinit
  1366  00A72A                     __pcinit:
  1367                           	callstack 0
  1368  00A72A                     start_initialization:
  1369                           	callstack 0
  1370  00A72A                     __initialization:
  1371                           	callstack 0
  1372                           
  1373                           ; Initialize objects allocated to BANK7 (60 bytes)
  1374                           ; load TBLPTR registers with __pidataBANK7
  1375  00A72A  0E8E               	movlw	low __pidataBANK7
  1376  00A72C  6EF6               	movwf	tblptrl,c
  1377  00A72E  0ED4               	movlw	high __pidataBANK7
  1378  00A730  6EF7               	movwf	tblptrh,c
  1379  00A732  0E00               	movlw	low (__pidataBANK7 shr (0+16))
  1380  00A734  6EF8               	movwf	tblptru,c
  1381  00A736  EE07  F000         	lfsr	0,__pdataBANK7
  1382  00A73A  EE10 F03C          	lfsr	1,60
  1383  00A73E                     copy_data0:
  1384  00A73E  0009               	tblrd		*+
  1385  00A740  CFF5 FFEE          	movff	tablat,postinc0
  1386  00A744  50E5               	movf	postdec1,w,c
  1387  00A746  50E1               	movf	fsr1l,w,c
  1388  00A748  E1FA               	bnz	copy_data0
  1389                           
  1390                           ; Initialize objects allocated to BANK5 (52 bytes)
  1391                           ; load TBLPTR registers with __pidataBANK5
  1392  00A74A  0ED2               	movlw	low __pidataBANK5
  1393  00A74C  6EF6               	movwf	tblptrl,c
  1394  00A74E  0ED7               	movlw	high __pidataBANK5
  1395  00A750  6EF7               	movwf	tblptrh,c
  1396  00A752  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1397  00A754  6EF8               	movwf	tblptru,c
  1398  00A756  EE05  F0C3         	lfsr	0,__pdataBANK5
  1399  00A75A  EE10 F034          	lfsr	1,52
  1400  00A75E                     copy_data1:
  1401  00A75E  0009               	tblrd		*+
  1402  00A760  CFF5 FFEE          	movff	tablat,postinc0
  1403  00A764  50E5               	movf	postdec1,w,c
  1404  00A766  50E1               	movf	fsr1l,w,c
  1405  00A768  E1FA               	bnz	copy_data1
  1406                           
  1407                           ; Initialize objects allocated to BANK1 (8 bytes)
  1408                           ; load TBLPTR registers with __pidataBANK1
  1409  00A76A  0EE6               	movlw	low __pidataBANK1
  1410  00A76C  6EF6               	movwf	tblptrl,c
  1411  00A76E  0EDE               	movlw	high __pidataBANK1
  1412  00A770  6EF7               	movwf	tblptrh,c
  1413  00A772  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1414  00A774  6EF8               	movwf	tblptru,c
  1415  00A776  EE01  F0F5         	lfsr	0,__pdataBANK1
  1416  00A77A  EE10 F008          	lfsr	1,8
  1417  00A77E                     copy_data2:
  1418  00A77E  0009               	tblrd		*+
  1419  00A780  CFF5 FFEE          	movff	tablat,postinc0
  1420  00A784  50E5               	movf	postdec1,w,c
  1421  00A786  50E1               	movf	fsr1l,w,c
  1422  00A788  E1FA               	bnz	copy_data2
  1423                           
  1424                           ; Initialize objects allocated to BANK4 (60 bytes)
  1425                           ; load TBLPTR registers with __pidataBANK4
  1426  00A78A  0E52               	movlw	low __pidataBANK4
  1427  00A78C  6EF6               	movwf	tblptrl,c
  1428  00A78E  0ED4               	movlw	high __pidataBANK4
  1429  00A790  6EF7               	movwf	tblptrh,c
  1430  00A792  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1431  00A794  6EF8               	movwf	tblptru,c
  1432  00A796  EE04  F0A3         	lfsr	0,__pdataBANK4
  1433  00A79A  EE10 F03C          	lfsr	1,60
  1434  00A79E                     copy_data3:
  1435  00A79E  0009               	tblrd		*+
  1436  00A7A0  CFF5 FFEE          	movff	tablat,postinc0
  1437  00A7A4  50E5               	movf	postdec1,w,c
  1438  00A7A6  50E1               	movf	fsr1l,w,c
  1439  00A7A8  E1FA               	bnz	copy_data3
  1440                           
  1441                           ; Clear objects allocated to BANK6 (242 bytes)
  1442  00A7AA  EE06  F000         	lfsr	0,__pbssBANK6
  1443  00A7AE  0EF2               	movlw	242
  1444  00A7B0                     clear_0:
  1445  00A7B0  6AEE               	clrf	postinc0,c
  1446  00A7B2  06E8               	decf	wreg,f,c
  1447  00A7B4  E1FD               	bnz	clear_0
  1448                           
  1449                           ; Clear objects allocated to BANK5 (195 bytes)
  1450  00A7B6  EE05  F000         	lfsr	0,__pbssBANK5
  1451  00A7BA  0EC3               	movlw	195
  1452  00A7BC                     clear_1:
  1453  00A7BC  6AEE               	clrf	postinc0,c
  1454  00A7BE  06E8               	decf	wreg,f,c
  1455  00A7C0  E1FD               	bnz	clear_1
  1456                           
  1457                           ; Clear objects allocated to BANK3 (227 bytes)
  1458  00A7C2  EE03  F000         	lfsr	0,__pbssBANK3
  1459  00A7C6  0EE3               	movlw	227
  1460  00A7C8                     clear_2:
  1461  00A7C8  6AEE               	clrf	postinc0,c
  1462  00A7CA  06E8               	decf	wreg,f,c
  1463  00A7CC  E1FD               	bnz	clear_2
  1464                           
  1465                           ; Clear objects allocated to BANK2 (252 bytes)
  1466  00A7CE  EE02  F000         	lfsr	0,__pbssBANK2
  1467  00A7D2  0EFC               	movlw	252
  1468  00A7D4                     clear_3:
  1469  00A7D4  6AEE               	clrf	postinc0,c
  1470  00A7D6  06E8               	decf	wreg,f,c
  1471  00A7D8  E1FD               	bnz	clear_3
  1472                           
  1473                           ; Clear objects allocated to BANK1 (245 bytes)
  1474  00A7DA  EE01  F000         	lfsr	0,__pbssBANK1
  1475  00A7DE  0EF5               	movlw	245
  1476  00A7E0                     clear_4:
  1477  00A7E0  6AEE               	clrf	postinc0,c
  1478  00A7E2  06E8               	decf	wreg,f,c
  1479  00A7E4  E1FD               	bnz	clear_4
  1480                           
  1481                           ; Clear objects allocated to BANK4 (99 bytes)
  1482  00A7E6  EE04  F040         	lfsr	0,__pbssBANK4
  1483  00A7EA  0E63               	movlw	99
  1484  00A7EC                     clear_5:
  1485  00A7EC  6AEE               	clrf	postinc0,c
  1486  00A7EE  06E8               	decf	wreg,f,c
  1487  00A7F0  E1FD               	bnz	clear_5
  1488                           
  1489                           ; Clear objects allocated to BANK0 (47 bytes)
  1490  00A7F2  EE00  F0CF         	lfsr	0,__pbssBANK0
  1491  00A7F6  0E2F               	movlw	47
  1492  00A7F8                     clear_6:
  1493  00A7F8  6AEE               	clrf	postinc0,c
  1494  00A7FA  06E8               	decf	wreg,f,c
  1495  00A7FC  E1FD               	bnz	clear_6
  1496                           
  1497                           ; Clear objects allocated to COMRAM (14 bytes)
  1498  00A7FE  EE00  F043         	lfsr	0,__pbssCOMRAM
  1499  00A802  0E0E               	movlw	14
  1500  00A804                     clear_7:
  1501  00A804  6AEE               	clrf	postinc0,c
  1502  00A806  06E8               	decf	wreg,f,c
  1503  00A808  E1FD               	bnz	clear_7
  1504  00A80A                     end_of_initialization:
  1505                           	callstack 0
  1506  00A80A                     __end_of__initialization:
  1507                           	callstack 0
  1508  00A80A  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1509  00A80C  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1510  00A80E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1511  00A810  6EF8               	movwf	tblptru,c
  1512  00A812  0100               	movlb	0
  1513  00A814  EF03  F06C         	goto	_main	;jump to C main() function
  1514                           
  1515                           	psect	bssCOMRAM
  1516  000043                     __pbssCOMRAM:
  1517                           	callstack 0
  1518  000043                     _inPipes:
  1519                           	callstack 0
  1520  000043                     	ds	6
  1521  000049                     _pBDTEntryEP0OutNext:
  1522                           	callstack 0
  1523  000049                     	ds	2
  1524  00004B                     _pBDTEntryEP0OutCurrent:
  1525                           	callstack 0
  1526  00004B                     	ds	2
  1527  00004D                     _USBDeferStatusStagePacket:
  1528                           	callstack 0
  1529  00004D                     	ds	1
  1530  00004E                     _controlTransferState:
  1531                           	callstack 0
  1532  00004E                     	ds	1
  1533  00004F                     _cdc_trf_state:
  1534                           	callstack 0
  1535  00004F                     	ds	1
  1536  000050                     _USTATcopy:
  1537                           	callstack 0
  1538  000050                     	ds	1
  1539                           
  1540                           	psect	bssBANK0
  1541  0000CF                     __pbssBANK0:
  1542                           	callstack 0
  1543  0000CF                     _g_sens_measure:
  1544                           	callstack 0
  1545  0000CF                     	ds	9
  1546  0000D8                     _pBDTEntryIn:
  1547                           	callstack 0
  1548  0000D8                     	ds	6
  1549  0000DE                     _CDCDataOutHandle:
  1550                           	callstack 0
  1551  0000DE                     	ds	2
  1552  0000E0                     _g_large_counter:
  1553                           	callstack 0
  1554  0000E0                     	ds	2
  1555  0000E2                     _g_relay_status_count:
  1556                           	callstack 0
  1557  0000E2                     	ds	2
  1558  0000E4                     _g_relay_sec_count:
  1559                           	callstack 0
  1560  0000E4                     	ds	2
  1561  0000E6                     _g_pRegs:
  1562                           	callstack 0
  1563  0000E6                     	ds	2
  1564  0000E8                     _control_signal_bitmap:
  1565                           	callstack 0
  1566  0000E8                     	ds	1
  1567  0000E9                     _cdc_mem_type:
  1568                           	callstack 0
  1569  0000E9                     	ds	1
  1570  0000EA                     _cdc_tx_len:
  1571                           	callstack 0
  1572  0000EA                     	ds	1
  1573  0000EB                     _cdc_rx_len:
  1574                           	callstack 0
  1575  0000EB                     	ds	1
  1576  0000EC                     _USBTicksSinceSuspendEnd:
  1577                           	callstack 0
  1578  0000EC                     	ds	1
  1579  0000ED                     _USBDeferOUTDataStagePackets:
  1580                           	callstack 0
  1581  0000ED                     	ds	1
  1582  0000EE                     _USBDeferINDataStagePackets:
  1583                           	callstack 0
  1584  0000EE                     	ds	1
  1585  0000EF                     _USBStatusStageEnabledFlag2:
  1586                           	callstack 0
  1587  0000EF                     	ds	1
  1588  0000F0                     _USBStatusStageEnabledFlag1:
  1589                           	callstack 0
  1590  0000F0                     	ds	1
  1591  0000F1                     _USBStatusStageTimeoutCounter:
  1592                           	callstack 0
  1593  0000F1                     	ds	1
  1594  0000F2                     _BothEP0OutUOWNsSet:
  1595                           	callstack 0
  1596  0000F2                     	ds	1
  1597  0000F3                     _endpoint_number:
  1598                           	callstack 0
  1599  0000F3                     	ds	1
  1600  0000F4                     _USBBusIsSuspended:
  1601                           	callstack 0
  1602  0000F4                     	ds	1
  1603  0000F5                     _RemoteWakeup:
  1604                           	callstack 0
  1605  0000F5                     	ds	1
  1606  0000F6                     _shortPacketStatus:
  1607                           	callstack 0
  1608  0000F6                     	ds	1
  1609  0000F7                     _g_tick_count:
  1610                           	callstack 0
  1611  0000F7                     	ds	1
  1612  0000F8                     _g_retry_count:
  1613                           	callstack 0
  1614  0000F8                     	ds	1
  1615  0000F9                     _g_channel_no:
  1616                           	callstack 0
  1617  0000F9                     	ds	1
  1618  0000FA                     _USBDeviceState:
  1619                           	callstack 0
  1620  0000FA                     	ds	1
  1621  0000FB                     _g_timeout_count:
  1622                           	callstack 0
  1623  0000FB                     	ds	1
  1624  0000FC                     _g_swap:
  1625                           	callstack 0
  1626  0000FC                     	ds	1
  1627  0000FD                     _USBActiveConfiguration:
  1628                           	callstack 0
  1629  0000FD                     	ds	1
  1630                           
  1631                           	psect	bssBANK1
  1632  000100                     __pbssBANK1:
  1633                           	callstack 0
  1634  000100                     _g_last_value:
  1635                           	callstack 0
  1636  000100                     	ds	24
  1637  000118                     _g_temp_value:
  1638                           	callstack 0
  1639  000118                     	ds	12
  1640  000124                     _g_modbus:
  1641                           	callstack 0
  1642  000124                     	ds	12
  1643  000130                     _outPipes:
  1644                           	callstack 0
  1645  000130                     	ds	8
  1646  000138                     _pBDTEntryOut:
  1647                           	callstack 0
  1648  000138                     	ds	6
  1649  00013E                     _g_usedtime_count:
  1650                           	callstack 0
  1651  00013E                     	ds	4
  1652  000142                     _pCDCDst:
  1653                           	callstack 0
  1654  000142                     	ds	3
  1655  000145                     _pCDCSrc:
  1656                           	callstack 0
  1657  000145                     	ds	3
  1658  000148                     _ep_data_out:
  1659                           	callstack 0
  1660  000148                     	ds	3
  1661  00014B                     _ep_data_in:
  1662                           	callstack 0
  1663  00014B                     	ds	3
  1664  00014E                     _CDCDataInHandle:
  1665                           	callstack 0
  1666  00014E                     	ds	2
  1667  000150                     _pDst:
  1668                           	callstack 0
  1669  000150                     	ds	2
  1670  000152                     _g_nvm:
  1671                           	callstack 0
  1672  000152                     	ds	154
  1673  0001EC                     _line_coding:
  1674                           	callstack 0
  1675  0001EC                     	ds	7
  1676  0001F3                     _USBAlternateInterface:
  1677                           	callstack 0
  1678  0001F3                     	ds	2
  1679                           
  1680                           	psect	dataBANK1
  1681  0001F5                     __pdataBANK1:
  1682                           	callstack 0
  1683  0001F5                     max7323_set_lmp_off@F353:
  1684                           	callstack 0
  1685  0001F5                     	ds	2
  1686  0001F7                     _max7323_address:
  1687                           	callstack 0
  1688  0001F7                     	ds	2
  1689  0001F9                     _eeprom_address:
  1690                           	callstack 0
  1691  0001F9                     	ds	2
  1692  0001FB                     _ads1114_address:
  1693                           	callstack 0
  1694  0001FB                     	ds	2
  1695                           
  1696                           	psect	bssBANK2
  1697  000200                     __pbssBANK2:
  1698                           	callstack 0
  1699  000200                     _BaudRateGen:
  1700                           	callstack 0
  1701  000200                     	ds	4
  1702  000204                     _USB1msTickCount:
  1703                           	callstack 0
  1704  000204                     	ds	4
  1705  000208                     _writeBuffer:
  1706                           	callstack 0
  1707  000208                     	ds	64
  1708  000248                     _g_slave:
  1709                           	callstack 0
  1710  000248                     	ds	61
  1711  000285                     _kalmanFilter:
  1712                           	callstack 0
  1713  000285                     	ds	48
  1714  0002B5                     _g_master:
  1715                           	callstack 0
  1716  0002B5                     	ds	37
  1717  0002DA                     _g_modbus_value:
  1718                           	callstack 0
  1719  0002DA                     	ds	16
  1720  0002EA                     _ewmaFilter:
  1721                           	callstack 0
  1722  0002EA                     	ds	10
  1723  0002F4                     _dummy_encapsulated_cmd_response:
  1724                           	callstack 0
  1725  0002F4                     	ds	8
  1726                           
  1727                           	psect	bssBANK3
  1728  000300                     __pbssBANK3:
  1729                           	callstack 0
  1730  000300                     build_time@F37:
  1731                           	callstack 0
  1732  000300                     	ds	18
  1733  000312                     	ds	11
  1734  00031D                     _cdc_notice:
  1735                           	callstack 0
  1736  00031D                     	ds	10
  1737  000327                     _g_eeprmTemp:
  1738                           	callstack 0
  1739  000327                     	ds	124
  1740  0003A3                     _cdc_data_rx:
  1741                           	callstack 0
  1742  0003A3                     	ds	64
  1743                           
  1744                           	psect	bssBANK4
  1745  000440                     __pbssBANK4:
  1746                           	callstack 0
  1747  000440                     	ds	32
  1748  000460                     _g_modbus_queue:
  1749                           	callstack 0
  1750  000460                     	ds	67
  1751                           
  1752                           	psect	dataBANK4
  1753  0004A3                     __pdataBANK4:
  1754                           	callstack 0
  1755  0004A3                     ewmaFilter_get@filter_alpha:
  1756                           	callstack 0
  1757  0004A3                     	ds	60
  1758                           
  1759                           	psect	bssBANK5
  1760  000500                     __pbssBANK5:
  1761                           	callstack 0
  1762  000500                     _g_usb_queue:
  1763                           	callstack 0
  1764  000500                     	ds	67
  1765  000543                     _cdc_data_tx:
  1766                           	callstack 0
  1767  000543                     	ds	64
  1768  000583                     _readBuffer:
  1769                           	callstack 0
  1770  000583                     	ds	64
  1771                           
  1772                           	psect	dataBANK5
  1773  0005C3                     __pdataBANK5:
  1774                           	callstack 0
  1775  0005C3                     _sd002:
  1776                           	callstack 0
  1777  0005C3                     	ds	52
  1778                           
  1779                           	psect	bssBANK6
  1780  000600                     __pbssBANK6:
  1781                           	callstack 0
  1782  000600                     _g_atcommand:
  1783                           	callstack 0
  1784  000600                     	ds	242
  1785                           
  1786                           	psect	dataBANK7
  1787  000700                     __pdataBANK7:
  1788                           	callstack 0
  1789  000700                     	ds	60
  1790                           
  1791                           	psect	cstackBANK3
  1792  0003E3                     __pcstackBANK3:
  1793                           	callstack 0
  1794  0003E3                     display_sensor_value@ishex:
  1795                           	callstack 0
  1796  0003E3                     sensMeasure_gas_read@cmp_value:
  1797                           	callstack 0
  1798                           
  1799                           ; 4 bytes @ 0x0
  1800  0003E3                     	ds	1
  1801  0003E4                     display_sensor_value@temp:
  1802                           	callstack 0
  1803                           
  1804                           ; 4 bytes @ 0x1
  1805  0003E4                     	ds	3
  1806  0003E7                     sensMeasure_gas_read@volt:
  1807                           	callstack 0
  1808                           
  1809                           ; 4 bytes @ 0x4
  1810  0003E7                     	ds	1
  1811  0003E8                     display_sensor_value@len:
  1812                           	callstack 0
  1813                           
  1814                           ; 1 bytes @ 0x5
  1815  0003E8                     	ds	1
  1816  0003E9                     _build_response$4243:
  1817                           	callstack 0
  1818                           
  1819                           ; 2 bytes @ 0x6
  1820  0003E9                     	ds	2
  1821  0003EB                     sensMeasure_gas_read@raw:
  1822                           	callstack 0
  1823  0003EB                     build_response@temp:
  1824                           	callstack 0
  1825                           
  1826                           ; 4 bytes @ 0x8
  1827  0003EB                     	ds	2
  1828  0003ED                     sensMeasure_gas_read@channel:
  1829                           	callstack 0
  1830                           
  1831                           ; 1 bytes @ 0xA
  1832  0003ED                     	ds	2
  1833  0003EF                     build_response@i:
  1834                           	callstack 0
  1835                           
  1836                           ; 1 bytes @ 0xC
  1837  0003EF                     	ds	1
  1838  0003F0                     build_response@chno:
  1839                           	callstack 0
  1840                           
  1841                           ; 1 bytes @ 0xD
  1842  0003F0                     	ds	1
  1843  0003F1                     build_response@len:
  1844                           	callstack 0
  1845                           
  1846                           ; 1 bytes @ 0xE
  1847  0003F1                     	ds	1
  1848                           
  1849                           	psect	cstackBANK2
  1850  0002FC                     __pcstackBANK2:
  1851                           	callstack 0
  1852  0002FC                     ??_build_response:
  1853                           
  1854                           ; 1 bytes @ 0x0
  1855  0002FC                     	ds	4
  1856                           
  1857                           	psect	cstackBANK1
  1858  0001FD                     __pcstackBANK1:
  1859                           	callstack 0
  1860  0001FD                     _atcommand_task$4113:
  1861                           	callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x0
  1864  0001FD                     	ds	2
  1865  0001FF                     atcommand_task@ch:
  1866                           	callstack 0
  1867                           
  1868                           ; 1 bytes @ 0x2
  1869  0001FF                     	ds	1
  1870                           
  1871                           	psect	cstackBANK0
  1872  000060                     __pcstackBANK0:
  1873                           	callstack 0
  1874  000060                     ?___flsub:
  1875                           	callstack 0
  1876  000060                     modbusParseRequest@status:
  1877                           	callstack 0
  1878  000060                     ___flsub@b:
  1879                           	callstack 0
  1880  000060                     mktime@tt:
  1881                           	callstack 0
  1882  000060                     parse_command@param:
  1883                           	callstack 0
  1884                           
  1885                           ; 32 bytes @ 0x0
  1886  000060                     	ds	2
  1887  000062                     ??_modbusParseRequest:
  1888                           
  1889                           ; 1 bytes @ 0x2
  1890  000062                     	ds	2
  1891  000064                     ?_build_time:
  1892                           	callstack 0
  1893  000064                     ___flsub@a:
  1894                           	callstack 0
  1895                           
  1896                           ; 4 bytes @ 0x4
  1897  000064                     	ds	2
  1898  000066                     modbusParseRequest@crc:
  1899                           	callstack 0
  1900                           
  1901                           ; 2 bytes @ 0x6
  1902  000066                     	ds	2
  1903  000068                     ?_fabs:
  1904                           	callstack 0
  1905  000068                     modbusParseRequest@functionMatch:
  1906                           	callstack 0
  1907  000068                     build_time@timestamp:
  1908                           	callstack 0
  1909  000068                     fabs@d:
  1910                           	callstack 0
  1911                           
  1912                           ; 4 bytes @ 0x8
  1913  000068                     	ds	1
  1914  000069                     modbusParseRequest@functionExec:
  1915                           	callstack 0
  1916                           
  1917                           ; 1 bytes @ 0x9
  1918  000069                     	ds	1
  1919  00006A                     modbusParseRequest@err:
  1920                           	callstack 0
  1921                           
  1922                           ; 1 bytes @ 0xA
  1923  00006A                     	ds	1
  1924  00006B                     modbusParseRequest@i:
  1925                           	callstack 0
  1926                           
  1927                           ; 2 bytes @ 0xB
  1928  00006B                     	ds	1
  1929  00006C                     ??___flmul:
  1930  00006C                     _build_time$8264:
  1931                           	callstack 0
  1932                           
  1933                           ; 2 bytes @ 0xC
  1934  00006C                     	ds	1
  1935  00006D                     modbusParseRequest@parser:
  1936                           	callstack 0
  1937                           
  1938                           ; 2 bytes @ 0xD
  1939  00006D                     	ds	1
  1940  00006E                     _build_time$8290:
  1941                           	callstack 0
  1942                           
  1943                           ; 2 bytes @ 0xE
  1944  00006E                     	ds	2
  1945  000070                     ___flmul@sign:
  1946                           	callstack 0
  1947  000070                     _build_time$8291:
  1948                           	callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x10
  1951  000070                     	ds	1
  1952  000071                     ___flmul@aexp:
  1953                           	callstack 0
  1954                           
  1955                           ; 1 bytes @ 0x11
  1956  000071                     	ds	1
  1957  000072                     ___flmul@bexp:
  1958                           	callstack 0
  1959  000072                     _build_time$8292:
  1960                           	callstack 0
  1961                           
  1962                           ; 2 bytes @ 0x12
  1963  000072                     	ds	1
  1964  000073                     ___flmul@grs:
  1965                           	callstack 0
  1966                           
  1967                           ; 4 bytes @ 0x13
  1968  000073                     	ds	1
  1969  000074                     _build_time$8293:
  1970                           	callstack 0
  1971                           
  1972                           ; 2 bytes @ 0x14
  1973  000074                     	ds	2
  1974  000076                     _build_time$8294:
  1975                           	callstack 0
  1976                           
  1977                           ; 2 bytes @ 0x16
  1978  000076                     	ds	1
  1979  000077                     ___flmul@prod:
  1980                           	callstack 0
  1981                           
  1982                           ; 4 bytes @ 0x17
  1983  000077                     	ds	1
  1984  000078                     _build_time$8295:
  1985                           	callstack 0
  1986                           
  1987                           ; 2 bytes @ 0x18
  1988  000078                     	ds	2
  1989  00007A                     _build_time$8296:
  1990                           	callstack 0
  1991                           
  1992                           ; 2 bytes @ 0x1A
  1993  00007A                     	ds	1
  1994  00007B                     ___flmul@temp:
  1995                           	callstack 0
  1996                           
  1997                           ; 2 bytes @ 0x1B
  1998  00007B                     	ds	1
  1999  00007C                     _build_time$8297:
  2000                           	callstack 0
  2001                           
  2002                           ; 2 bytes @ 0x1C
  2003  00007C                     	ds	1
  2004  00007D                     ?__atof:
  2005                           	callstack 0
  2006  00007D                     ?_ADCto_uVoltage:
  2007                           	callstack 0
  2008  00007D                     ?_gasSensor_temperature:
  2009                           	callstack 0
  2010  00007D                     ?_Kalman_updateEstimate:
  2011                           	callstack 0
  2012  00007D                     ?_ewmaFilter_get:
  2013                           	callstack 0
  2014  00007D                     ?_fround:
  2015                           	callstack 0
  2016  00007D                     ?_scale:
  2017                           	callstack 0
  2018  00007D                     ?___fltol:
  2019                           	callstack 0
  2020  00007D                     sensor_temp_fahrenheit@temp:
  2021                           	callstack 0
  2022  00007D                     ADCto_uVoltage@raw_adc:
  2023                           	callstack 0
  2024  00007D                     ewmaFilter_get@ewmaFilter:
  2025                           	callstack 0
  2026  00007D                     Kalman_updateEstimate@pObj:
  2027                           	callstack 0
  2028  00007D                     __atof@str:
  2029                           	callstack 0
  2030  00007D                     gasSensor_temperature@temp_uVolt:
  2031                           	callstack 0
  2032  00007D                     ___fltol@f1:
  2033                           	callstack 0
  2034                           
  2035                           ; 4 bytes @ 0x1D
  2036  00007D                     	ds	1
  2037  00007E                     _build_time$8298:
  2038                           	callstack 0
  2039                           
  2040                           ; 2 bytes @ 0x1E
  2041  00007E                     	ds	1
  2042  00007F                     ADCto_uVoltage@gain:
  2043                           	callstack 0
  2044  00007F                     ewmaFilter_get@inputValue:
  2045                           	callstack 0
  2046  00007F                     Kalman_updateEstimate@mea:
  2047                           	callstack 0
  2048                           
  2049                           ; 4 bytes @ 0x1F
  2050  00007F                     	ds	1
  2051  000080                     parse_command@retval:
  2052                           	callstack 0
  2053  000080                     _build_time$8299:
  2054                           	callstack 0
  2055                           
  2056                           ; 2 bytes @ 0x20
  2057  000080                     	ds	1
  2058  000081                     ??__atof:
  2059  000081                     ??___fltol:
  2060  000081                     parse_command@chno:
  2061                           	callstack 0
  2062  000081                     ADCto_uVoltage@uVolt:
  2063                           	callstack 0
  2064  000081                     gasSensor_temperature@temp:
  2065                           	callstack 0
  2066  000081                     _fround$9458:
  2067                           	callstack 0
  2068  000081                     _scale$9459:
  2069                           	callstack 0
  2070                           
  2071                           ; 4 bytes @ 0x21
  2072  000081                     	ds	1
  2073  000082                     _build_time$8300:
  2074                           	callstack 0
  2075  000082                     parse_command@cmd:
  2076                           	callstack 0
  2077                           
  2078                           ; 11 bytes @ 0x22
  2079  000082                     	ds	1
  2080  000083                     ewmaFilter_get@sensitivity:
  2081                           	callstack 0
  2082  000083                     _Kalman_updateEstimate$9456:
  2083                           	callstack 0
  2084                           
  2085                           ; 4 bytes @ 0x23
  2086  000083                     	ds	1
  2087  000084                     _build_time$8301:
  2088                           	callstack 0
  2089  000084                     _ewmaFilter_get$9454:
  2090                           	callstack 0
  2091                           
  2092                           ; 4 bytes @ 0x24
  2093  000084                     	ds	1
  2094  000085                     scale@scl:
  2095                           	callstack 0
  2096  000085                     __atof@sign:
  2097                           	callstack 0
  2098  000085                     ADCto_uVoltage@lsb:
  2099                           	callstack 0
  2100  000085                     _gasSensor_temperature$9453:
  2101                           	callstack 0
  2102  000085                     _fround$9457:
  2103                           	callstack 0
  2104                           
  2105                           ; 4 bytes @ 0x25
  2106  000085                     	ds	1
  2107  000086                     _build_time$8302:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0x26
  2111  000086                     	ds	1
  2112  000087                     __atof@cnt:
  2113                           	callstack 0
  2114  000087                     _Kalman_updateEstimate$9455:
  2115                           	callstack 0
  2116                           
  2117                           ; 4 bytes @ 0x27
  2118  000087                     	ds	1
  2119  000088                     _build_time$8307:
  2120                           	callstack 0
  2121  000088                     ewmaFilter_get@retval:
  2122                           	callstack 0
  2123                           
  2124                           ; 4 bytes @ 0x28
  2125  000088                     	ds	1
  2126  000089                     fround@prec:
  2127                           	callstack 0
  2128  000089                     sensMeasure_temp_read@volt:
  2129                           	callstack 0
  2130  000089                     __atof@ret:
  2131                           	callstack 0
  2132                           
  2133                           ; 4 bytes @ 0x29
  2134  000089                     	ds	1
  2135  00008A                     _build_time$8308:
  2136                           	callstack 0
  2137                           
  2138                           ; 2 bytes @ 0x2A
  2139  00008A                     	ds	2
  2140  00008C                     _build_time$8312:
  2141                           	callstack 0
  2142  00008C                     ewmaFilter_get@alpha:
  2143                           	callstack 0
  2144                           
  2145                           ; 4 bytes @ 0x2C
  2146  00008C                     	ds	1
  2147  00008D                     parse_command@seq:
  2148                           	callstack 0
  2149  00008D                     sensMeasure_temp_read@channel:
  2150                           	callstack 0
  2151  00008D                     __atof@dotpos:
  2152                           	callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x2D
  2155  00008D                     	ds	1
  2156  00008E                     parse_command@idx:
  2157                           	callstack 0
  2158  00008E                     sensMeasure_temp_read@raw:
  2159                           	callstack 0
  2160  00008E                     _build_time$8316:
  2161                           	callstack 0
  2162                           
  2163                           ; 2 bytes @ 0x2E
  2164  00008E                     	ds	1
  2165  00008F                     parse_command@paramidx:
  2166                           	callstack 0
  2167  00008F                     __atof@p:
  2168                           	callstack 0
  2169                           
  2170                           ; 2 bytes @ 0x2F
  2171  00008F                     	ds	1
  2172  000090                     parse_command@cmdidx:
  2173                           	callstack 0
  2174  000090                     ewmaFilter_get@idx:
  2175                           	callstack 0
  2176  000090                     _build_time$8320:
  2177                           	callstack 0
  2178                           
  2179                           ; 2 bytes @ 0x30
  2180  000090                     	ds	1
  2181  000091                     parse_command@ch:
  2182                           	callstack 0
  2183  000091                     ___fleq@ff1:
  2184                           	callstack 0
  2185  000091                     ___flge@ff1:
  2186                           	callstack 0
  2187                           
  2188                           ; 4 bytes @ 0x31
  2189  000091                     	ds	1
  2190  000092                     build_time@tm:
  2191                           	callstack 0
  2192                           
  2193                           ; 18 bytes @ 0x32
  2194  000092                     	ds	3
  2195  000095                     ___fleq@ff2:
  2196                           	callstack 0
  2197  000095                     ___flge@ff2:
  2198                           	callstack 0
  2199                           
  2200                           ; 4 bytes @ 0x35
  2201  000095                     	ds	4
  2202  000099                     ??___fleq:
  2203  000099                     ??___flge:
  2204                           
  2205                           ; 1 bytes @ 0x39
  2206  000099                     	ds	4
  2207  00009D                     ?_sprintf:
  2208                           	callstack 0
  2209  00009D                     ?_compensate_temperature:
  2210                           	callstack 0
  2211  00009D                     ?_gasSensor_filter:
  2212                           	callstack 0
  2213  00009D                     sprintf@sp:
  2214                           	callstack 0
  2215  00009D                     modbus_check_threshold@ppm:
  2216                           	callstack 0
  2217  00009D                     gasSensor_filter@gasConcent:
  2218                           	callstack 0
  2219  00009D                     compensate_temperature@temp:
  2220                           	callstack 0
  2221                           
  2222                           ; 4 bytes @ 0x3D
  2223  00009D                     	ds	2
  2224  00009F                     sprintf@f:
  2225                           	callstack 0
  2226                           
  2227                           ; 2 bytes @ 0x3F
  2228  00009F                     	ds	2
  2229  0000A1                     modbus_check_threshold@max:
  2230                           	callstack 0
  2231  0000A1                     gasSensor_filter@retval:
  2232                           	callstack 0
  2233  0000A1                     compensate_temperature@baseLine_temp:
  2234                           	callstack 0
  2235                           
  2236                           ; 4 bytes @ 0x41
  2237  0000A1                     	ds	3
  2238  0000A4                     ??_nvm_init:
  2239  0000A4                     update_command@status:
  2240                           	callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x44
  2243  0000A4                     	ds	1
  2244  0000A5                     ??_sprintf:
  2245  0000A5                     ?_gasSensor_calib:
  2246                           	callstack 0
  2247  0000A5                     modbus_check_threshold@type:
  2248                           	callstack 0
  2249  0000A5                     compensate_temperature@model:
  2250                           	callstack 0
  2251  0000A5                     gasSensor_calib@cmp_val:
  2252                           	callstack 0
  2253                           
  2254                           ; 4 bytes @ 0x45
  2255  0000A5                     	ds	1
  2256  0000A6                     ??_update_command:
  2257  0000A6                     modbus_master_relay_control_task@ppm:
  2258                           	callstack 0
  2259  0000A6                     compensate_temperature@cmp_val:
  2260                           	callstack 0
  2261                           
  2262                           ; 4 bytes @ 0x46
  2263  0000A6                     	ds	2
  2264  0000A8                     _update_command$4179:
  2265                           	callstack 0
  2266                           
  2267                           ; 2 bytes @ 0x48
  2268  0000A8                     	ds	1
  2269  0000A9                     gasSensor_calib@gas_uVolt:
  2270                           	callstack 0
  2271  0000A9                     _sprintf$9460:
  2272                           	callstack 0
  2273                           
  2274                           ; 4 bytes @ 0x49
  2275  0000A9                     	ds	1
  2276  0000AA                     update_command@i:
  2277                           	callstack 0
  2278  0000AA                     nvm_init@pdesc:
  2279                           	callstack 0
  2280                           
  2281                           ; 2 bytes @ 0x4A
  2282  0000AA                     	ds	1
  2283  0000AB                     update_command@apply:
  2284                           	callstack 0
  2285                           
  2286                           ; 1 bytes @ 0x4B
  2287  0000AB                     	ds	1
  2288  0000AC                     update_command@chno:
  2289                           	callstack 0
  2290  0000AC                     nvm_init@i:
  2291                           	callstack 0
  2292                           
  2293                           ; 1 bytes @ 0x4C
  2294  0000AC                     	ds	1
  2295  0000AD                     sprintf@ap:
  2296                           	callstack 0
  2297  0000AD                     _gasSensor_calib$9450:
  2298                           	callstack 0
  2299                           
  2300                           ; 4 bytes @ 0x4D
  2301  0000AD                     	ds	1
  2302  0000AE                     sprintf@ccnt:
  2303                           	callstack 0
  2304                           
  2305                           ; 2 bytes @ 0x4E
  2306  0000AE                     	ds	2
  2307  0000B0                     sprintf@flag:
  2308                           	callstack 0
  2309                           
  2310                           ; 2 bytes @ 0x50
  2311  0000B0                     	ds	1
  2312  0000B1                     _gasSensor_calib$9451:
  2313                           	callstack 0
  2314                           
  2315                           ; 4 bytes @ 0x51
  2316  0000B1                     	ds	1
  2317  0000B2                     sprintf@val:
  2318                           	callstack 0
  2319                           
  2320                           ; 4 bytes @ 0x52
  2321  0000B2                     	ds	3
  2322  0000B5                     _gasSensor_calib$9452:
  2323                           	callstack 0
  2324                           
  2325                           ; 4 bytes @ 0x55
  2326  0000B5                     	ds	1
  2327  0000B6                     sprintf@eexp:
  2328                           	callstack 0
  2329                           
  2330                           ; 2 bytes @ 0x56
  2331  0000B6                     	ds	2
  2332  0000B8                     sprintf@tmpval:
  2333                           	callstack 0
  2334                           
  2335                           ; 4 bytes @ 0x58
  2336  0000B8                     	ds	1
  2337  0000B9                     gasSensor_calib@CalibrationGas:
  2338                           	callstack 0
  2339                           
  2340                           ; 4 bytes @ 0x59
  2341  0000B9                     	ds	3
  2342  0000BC                     sprintf@prec:
  2343                           	callstack 0
  2344                           
  2345                           ; 2 bytes @ 0x5C
  2346  0000BC                     	ds	1
  2347  0000BD                     gasSensor_calib@gas_ppm:
  2348                           	callstack 0
  2349                           
  2350                           ; 4 bytes @ 0x5D
  2351  0000BD                     	ds	1
  2352  0000BE                     sprintf@fval:
  2353                           	callstack 0
  2354                           
  2355                           ; 4 bytes @ 0x5E
  2356  0000BE                     	ds	3
  2357  0000C1                     gasSensor_calib@channel:
  2358                           	callstack 0
  2359                           
  2360                           ; 1 bytes @ 0x61
  2361  0000C1                     	ds	1
  2362  0000C2                     sprintf@c:
  2363                           	callstack 0
  2364  0000C2                     gasSensor_calib@span:
  2365                           	callstack 0
  2366                           
  2367                           ; 4 bytes @ 0x62
  2368  0000C2                     	ds	1
  2369  0000C3                     ?__ftoa:
  2370                           	callstack 0
  2371  0000C3                     __ftoa@num:
  2372                           	callstack 0
  2373                           
  2374                           ; 4 bytes @ 0x63
  2375  0000C3                     	ds	3
  2376  0000C6                     gasSensor_calib@baseline:
  2377                           	callstack 0
  2378                           
  2379                           ; 4 bytes @ 0x66
  2380  0000C6                     	ds	1
  2381  0000C7                     __ftoa@str:
  2382                           	callstack 0
  2383                           
  2384                           ; 2 bytes @ 0x67
  2385  0000C7                     	ds	2
  2386  0000C9                     __ftoa@len:
  2387                           	callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x69
  2390  0000C9                     	ds	1
  2391  0000CA                     ??_sensMeasure_task:
  2392                           
  2393                           ; 1 bytes @ 0x6A
  2394  0000CA                     	ds	1
  2395  0000CB                     display_sensor_value@chno:
  2396                           	callstack 0
  2397                           
  2398                           ; 1 bytes @ 0x6B
  2399  0000CB                     	ds	1
  2400  0000CC                     display_sensor_value@strlen:
  2401                           	callstack 0
  2402  0000CC                     sensMeasure_task@ret:
  2403                           	callstack 0
  2404                           
  2405                           ; 1 bytes @ 0x6C
  2406  0000CC                     	ds	1
  2407  0000CD                     sensMeasure_task@ret_4991:
  2408                           	callstack 0
  2409  0000CD                     build_response@status:
  2410                           	callstack 0
  2411                           
  2412                           ; 2 bytes @ 0x6D
  2413  0000CD                     	ds	2
  2414                           
  2415                           	psect	cstackCOMRAM
  2416  000001                     __pcstackCOMRAM:
  2417                           	callstack 0
  2418  000001                     usart_getc@c:
  2419                           	callstack 0
  2420  000001                     i1buffer_en_queue@queue:
  2421                           	callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x0
  2424  000001                     	ds	1
  2425  000002                     rs485_readByte@byte:
  2426                           	callstack 0
  2427                           
  2428                           ; 1 bytes @ 0x1
  2429  000002                     	ds	1
  2430  000003                     i1buffer_en_queue@ch:
  2431                           	callstack 0
  2432                           
  2433                           ; 1 bytes @ 0x2
  2434  000003                     	ds	1
  2435  000004                     ??i1_buffer_en_queue:
  2436                           
  2437                           ; 1 bytes @ 0x3
  2438  000004                     	ds	3
  2439  000007                     ??_rs485_read_task:
  2440                           
  2441                           ; 1 bytes @ 0x6
  2442  000007                     	ds	7
  2443  00000E                     rs485_read_task@byte:
  2444                           	callstack 0
  2445                           
  2446                           ; 1 bytes @ 0xD
  2447  00000E                     	ds	1
  2448  00000F                     ??_isdigit:
  2449  00000F                     ??_ACCESS_SourceSet:
  2450  00000F                     ??_USBStdGetDscHandler:
  2451  00000F                     ??_USBStdGetStatusHandler:
  2452  00000F                     ?_modbusCRC:
  2453                           	callstack 0
  2454  00000F                     ?_modbusBitsToBytes:
  2455                           	callstack 0
  2456  00000F                     ?__strlen:
  2457                           	callstack 0
  2458  00000F                     ?__strcpy:
  2459                           	callstack 0
  2460  00000F                     ?_checksum:
  2461                           	callstack 0
  2462  00000F                     ?_get_product_desc:
  2463                           	callstack 0
  2464  00000F                     ?_USBTransferOnePacket:
  2465                           	callstack 0
  2466  00000F                     ?_modbusSwapEndian:
  2467                           	callstack 0
  2468  00000F                     ?___wmul:
  2469                           	callstack 0
  2470  00000F                     ?___awmod:
  2471                           	callstack 0
  2472  00000F                     ?___lwmod:
  2473                           	callstack 0
  2474  00000F                     ?__tdiv_to_l_:
  2475                           	callstack 0
  2476  00000F                     ?__div_to_l_:
  2477                           	callstack 0
  2478  00000F                     ?___fldiv:
  2479                           	callstack 0
  2480  00000F                     ?_modbus_get_baudrate:
  2481                           	callstack 0
  2482  00000F                     ?_FSR_set_LSB:
  2483                           	callstack 0
  2484  00000F                     ?___lmul:
  2485                           	callstack 0
  2486  00000F                     ?___lldiv:
  2487                           	callstack 0
  2488  00000F                     ?___aldiv:
  2489                           	callstack 0
  2490  00000F                     ?___almod:
  2491                           	callstack 0
  2492  00000F                     ?___flneg:
  2493                           	callstack 0
  2494  00000F                     ?___llmod:
  2495                           	callstack 0
  2496  00000F                     ?___xxtofl:
  2497                           	callstack 0
  2498  00000F                     i2c_init@speed:
  2499                           	callstack 0
  2500  00000F                     I2C_Write@I2cWriteData:
  2501                           	callstack 0
  2502  00000F                     I2C_Read@ack:
  2503                           	callstack 0
  2504  00000F                     usart_putc@c:
  2505                           	callstack 0
  2506  00000F                     check_param@param:
  2507                           	callstack 0
  2508  00000F                     modbus_set_swap@isSwap:
  2509                           	callstack 0
  2510  00000F                     modbus_get_timeout@to:
  2511                           	callstack 0
  2512  00000F                     sensMeasure_sensor_init@i:
  2513                           	callstack 0
  2514  00000F                     USBTransferOnePacket@dir:
  2515                           	callstack 0
  2516  00000F                     USBConfigureEndpoint@direction:
  2517                           	callstack 0
  2518  00000F                     USBCtrlTrfTxService@byteToSend:
  2519                           	callstack 0
  2520  00000F                     USBCtrlTrfRxService@i:
  2521                           	callstack 0
  2522  00000F                     ___lbmod@divisor:
  2523                           	callstack 0
  2524  00000F                     modbusBitsToBytes@n:
  2525                           	callstack 0
  2526  00000F                     modbusSwapEndian@data:
  2527                           	callstack 0
  2528  00000F                     modbusCRC@data:
  2529                           	callstack 0
  2530  00000F                     modbusParseException@status:
  2531                           	callstack 0
  2532  00000F                     modbus_set_register@reg:
  2533                           	callstack 0
  2534  00000F                     checksum@data:
  2535                           	callstack 0
  2536  00000F                     SYSTEM_Initialize@pll_startup_counter:
  2537                           	callstack 0
  2538  00000F                     DelayRoutine@DelayAmount:
  2539                           	callstack 0
  2540  00000F                     Kalman_setMeasurementError@pObj:
  2541                           	callstack 0
  2542  00000F                     Kalman_setEstimateError@pObj:
  2543                           	callstack 0
  2544  00000F                     Kalman_setProcessNoise@pObj:
  2545                           	callstack 0
  2546  00000F                     __strcpy@dest:
  2547                           	callstack 0
  2548  00000F                     __strlen@source:
  2549                           	callstack 0
  2550  00000F                     __strclr@dest:
  2551                           	callstack 0
  2552  00000F                     __isdigit@src:
  2553                           	callstack 0
  2554  00000F                     buffer_init@queue:
  2555                           	callstack 0
  2556  00000F                     buffer_en_queue@queue:
  2557                           	callstack 0
  2558  00000F                     buffer_de_queue@queue:
  2559                           	callstack 0
  2560  00000F                     buffer_de_queue_bool@queue:
  2561                           	callstack 0
  2562  00000F                     ___wmul@multiplier:
  2563                           	callstack 0
  2564  00000F                     ___awmod@dividend:
  2565                           	callstack 0
  2566  00000F                     ___lwmod@dividend:
  2567                           	callstack 0
  2568  00000F                     memcpy@d1:
  2569                           	callstack 0
  2570  00000F                     flash_readBytes@startaddr:
  2571                           	callstack 0
  2572  00000F                     flash_writeBytes@startaddr:
  2573                           	callstack 0
  2574  00000F                     flash_clear@startaddr:
  2575                           	callstack 0
  2576  00000F                     ___lmul@multiplier:
  2577                           	callstack 0
  2578  00000F                     ___lldiv@dividend:
  2579                           	callstack 0
  2580  00000F                     ___aldiv@dividend:
  2581                           	callstack 0
  2582  00000F                     ___almod@dividend:
  2583                           	callstack 0
  2584  00000F                     __div_to_l_@f1:
  2585                           	callstack 0
  2586  00000F                     ___flneg@f1:
  2587                           	callstack 0
  2588  00000F                     __tdiv_to_l_@f1:
  2589                           	callstack 0
  2590  00000F                     ___llmod@dividend:
  2591                           	callstack 0
  2592  00000F                     ___fldiv@b:
  2593                           	callstack 0
  2594  00000F                     ___xxtofl@val:
  2595                           	callstack 0
  2596                           
  2597                           ; 4 bytes @ 0xE
  2598  00000F                     	ds	1
  2599  000010                     ??_USBConfigureEndpoint:
  2600  000010                     ?_param_copy:
  2601                           	callstack 0
  2602  000010                     I2C_Read@I2CReadData:
  2603                           	callstack 0
  2604  000010                     ACCESS_SourceSet@set:
  2605                           	callstack 0
  2606  000010                     USBCtrlTrfRxService@byteToRead:
  2607                           	callstack 0
  2608  000010                     USBCtrlTrfInHandler@lastDTS:
  2609                           	callstack 0
  2610  000010                     ___lbmod@dividend:
  2611                           	callstack 0
  2612  000010                     _isdigit$8830:
  2613                           	callstack 0
  2614  000010                     i2c_writeData@wrptr:
  2615                           	callstack 0
  2616  000010                     usart_writeBytes@wrptr:
  2617                           	callstack 0
  2618  000010                     param_copy@src1:
  2619                           	callstack 0
  2620  000010                     USBTransferOnePacket@data:
  2621                           	callstack 0
  2622  000010                     USBStdGetStatusHandler@p:
  2623                           	callstack 0
  2624                           
  2625                           ; 2 bytes @ 0xF
  2626  000010                     	ds	1
  2627  000011                     ??_modbusBitsToBytes:
  2628  000011                     ??_buffer_de_queue:
  2629  000011                     ??_modbusSwapEndian:
  2630  000011                     buffer_en_queue@ch:
  2631                           	callstack 0
  2632  000011                     buffer_de_queue_bool@ch:
  2633                           	callstack 0
  2634  000011                     ___lbmod@counter:
  2635                           	callstack 0
  2636  000011                     isdigit@c:
  2637                           	callstack 0
  2638  000011                     i2c_readBytes@rdptr:
  2639                           	callstack 0
  2640  000011                     modbusCRC@length:
  2641                           	callstack 0
  2642  000011                     modbusParseException@parser:
  2643                           	callstack 0
  2644  000011                     checksum@length:
  2645                           	callstack 0
  2646  000011                     SYSTEM_Initialize@pll_startup_counter_5972:
  2647                           	callstack 0
  2648  000011                     __strcpy@source:
  2649                           	callstack 0
  2650  000011                     __strlen@sc:
  2651                           	callstack 0
  2652  000011                     __strclr@n:
  2653                           	callstack 0
  2654  000011                     __isdigit@n:
  2655                           	callstack 0
  2656  000011                     ___wmul@multiplicand:
  2657                           	callstack 0
  2658  000011                     ___awmod@divisor:
  2659                           	callstack 0
  2660  000011                     ___lwmod@divisor:
  2661                           	callstack 0
  2662  000011                     memcpy@s1:
  2663                           	callstack 0
  2664  000011                     Kalman_setMeasurementError@mea_e:
  2665                           	callstack 0
  2666  000011                     Kalman_setEstimateError@est_e:
  2667                           	callstack 0
  2668  000011                     Kalman_setProcessNoise@q:
  2669                           	callstack 0
  2670                           
  2671                           ; 4 bytes @ 0x10
  2672  000011                     	ds	1
  2673  000012                     ??_buffer_de_queue_bool:
  2674  000012                     ??_buffer_en_queue:
  2675  000012                     i2c_writeData@len:
  2676                           	callstack 0
  2677  000012                     usart_writeBytes@len:
  2678                           	callstack 0
  2679  000012                     param_copy@src2:
  2680                           	callstack 0
  2681  000012                     USBTransferOnePacket@len:
  2682                           	callstack 0
  2683  000012                     ___lbmod@rem:
  2684                           	callstack 0
  2685                           
  2686                           ; 1 bytes @ 0x11
  2687  000012                     	ds	1
  2688  000013                     ??_modbusCRC:
  2689  000013                     ??__strcpy:
  2690  000013                     ??_checksum:
  2691  000013                     ??_USBTransferOnePacket:
  2692  000013                     ??___xxtofl:
  2693  000013                     ?_rcallback:
  2694                           	callstack 0
  2695  000013                     i2c_writeData@isStop:
  2696                           	callstack 0
  2697  000013                     i2c_readBytes@len:
  2698                           	callstack 0
  2699  000013                     usart_writeBytes@i:
  2700                           	callstack 0
  2701  000013                     rcallback@datatype:
  2702                           	callstack 0
  2703  000013                     modbus_get_baudrate@baud:
  2704                           	callstack 0
  2705  000013                     nvm_clear_channel@channel:
  2706                           	callstack 0
  2707  000013                     FSR_set_LSB@gain:
  2708                           	callstack 0
  2709  000013                     SYSTEM_Initialize@state:
  2710                           	callstack 0
  2711  000013                     __isdigit@ch:
  2712                           	callstack 0
  2713  000013                     ___awmod@counter:
  2714                           	callstack 0
  2715  000013                     ___lbdiv@divisor:
  2716                           	callstack 0
  2717  000013                     ___lwmod@counter:
  2718                           	callstack 0
  2719  000013                     flash_readBytes@flash_array:
  2720                           	callstack 0
  2721  000013                     flash_writeBytes@flash_array:
  2722                           	callstack 0
  2723  000013                     param_copy@i:
  2724                           	callstack 0
  2725  000013                     atcommand_compare@src1:
  2726                           	callstack 0
  2727  000013                     split_param@src:
  2728                           	callstack 0
  2729  000013                     putUSBUSART@data:
  2730                           	callstack 0
  2731  000013                     ___wmul@product:
  2732                           	callstack 0
  2733  000013                     memcpy@n:
  2734                           	callstack 0
  2735  000013                     flash_clear@endaddr:
  2736                           	callstack 0
  2737  000013                     ___lmul@multiplicand:
  2738                           	callstack 0
  2739  000013                     ___lldiv@divisor:
  2740                           	callstack 0
  2741  000013                     ___aldiv@divisor:
  2742                           	callstack 0
  2743  000013                     ___almod@divisor:
  2744                           	callstack 0
  2745  000013                     __div_to_l_@f2:
  2746                           	callstack 0
  2747  000013                     __tdiv_to_l_@f2:
  2748                           	callstack 0
  2749  000013                     ___llmod@divisor:
  2750                           	callstack 0
  2751  000013                     ___fldiv@a:
  2752                           	callstack 0
  2753                           
  2754                           ; 4 bytes @ 0x12
  2755  000013                     	ds	1
  2756  000014                     ??_i2c_readBytes:
  2757  000014                     ?_isleap:
  2758                           	callstack 0
  2759  000014                     i2c_writeData@i:
  2760                           	callstack 0
  2761  000014                     USBConfigureEndpoint@EPNum:
  2762                           	callstack 0
  2763  000014                     buffer_de_queue@ch:
  2764                           	callstack 0
  2765  000014                     ___awmod@sign:
  2766                           	callstack 0
  2767  000014                     ___lbdiv@dividend:
  2768                           	callstack 0
  2769  000014                     rs485_writeBytes@wrptr:
  2770                           	callstack 0
  2771  000014                     modbusCRC@i:
  2772                           	callstack 0
  2773  000014                     rcallback@index:
  2774                           	callstack 0
  2775  000014                     checksum@i:
  2776                           	callstack 0
  2777  000014                     isleap@yr:
  2778                           	callstack 0
  2779                           
  2780                           ; 2 bytes @ 0x13
  2781  000014                     	ds	1
  2782  000015                     ?___awdiv:
  2783                           	callstack 0
  2784  000015                     ?___lwdiv:
  2785                           	callstack 0
  2786  000015                     i2c_writeBytes@wrptr:
  2787                           	callstack 0
  2788  000015                     param_copy@ch:
  2789                           	callstack 0
  2790  000015                     atcommand_compare@src2:
  2791                           	callstack 0
  2792  000015                     USBTransferOnePacket@ep:
  2793                           	callstack 0
  2794  000015                     putUSBUSART@length:
  2795                           	callstack 0
  2796  000015                     ___lbdiv@counter:
  2797                           	callstack 0
  2798  000015                     memcpy@tmp:
  2799                           	callstack 0
  2800  000015                     flash_readBytes@num_bytes:
  2801                           	callstack 0
  2802  000015                     flash_writeBytes@num_bytes:
  2803                           	callstack 0
  2804  000015                     split_param@params:
  2805                           	callstack 0
  2806  000015                     USBConfigureEndpoint@handle:
  2807                           	callstack 0
  2808  000015                     __strcpy@i:
  2809                           	callstack 0
  2810  000015                     ___awdiv@dividend:
  2811                           	callstack 0
  2812  000015                     ___lwdiv@dividend:
  2813                           	callstack 0
  2814  000015                     memset@p1:
  2815                           	callstack 0
  2816                           
  2817                           ; 2 bytes @ 0x14
  2818  000015                     	ds	1
  2819  000016                     ??_isleap:
  2820  000016                     i2c_writeBytes@len:
  2821                           	callstack 0
  2822  000016                     rs485_writeBytes@len:
  2823                           	callstack 0
  2824  000016                     modbusCRC@j:
  2825                           	callstack 0
  2826  000016                     atcommand_compare@n:
  2827                           	callstack 0
  2828  000016                     checksum@j:
  2829                           	callstack 0
  2830  000016                     ___lbdiv@quotient:
  2831                           	callstack 0
  2832  000016                     write_command@buff:
  2833                           	callstack 0
  2834  000016                     rcallback@value:
  2835                           	callstack 0
  2836  000016                     USBTransferOnePacket@handle:
  2837                           	callstack 0
  2838  000016                     memcpy@d:
  2839                           	callstack 0
  2840                           
  2841                           ; 2 bytes @ 0x15
  2842  000016                     	ds	1
  2843  000017                     ??__tdiv_to_l_:
  2844  000017                     ??___fldiv:
  2845  000017                     ??_flash_writeBytes:
  2846  000017                     ??_rs485_writeBytes:
  2847  000017                     flash_clear@flag:
  2848                           	callstack 0
  2849  000017                     i2c_writeBytes@isStop:
  2850                           	callstack 0
  2851  000017                     atcommand_compare@channelno:
  2852                           	callstack 0
  2853  000017                     split_param@m:
  2854                           	callstack 0
  2855  000017                     nvm_sensor_type_channel@sensor_model:
  2856                           	callstack 0
  2857  000017                     USBEnableEndpoint@options:
  2858                           	callstack 0
  2859  000017                     ___lldiv@counter:
  2860                           	callstack 0
  2861  000017                     ___aldiv@counter:
  2862                           	callstack 0
  2863  000017                     ___almod@counter:
  2864                           	callstack 0
  2865  000017                     ___llmod@counter:
  2866                           	callstack 0
  2867  000017                     ___xxtofl@sign:
  2868                           	callstack 0
  2869  000017                     _isleap$8855:
  2870                           	callstack 0
  2871  000017                     modbusCRC@crc:
  2872                           	callstack 0
  2873  000017                     checksum@crc:
  2874                           	callstack 0
  2875  000017                     ___awdiv@divisor:
  2876                           	callstack 0
  2877  000017                     ___lwdiv@divisor:
  2878                           	callstack 0
  2879  000017                     memset@c:
  2880                           	callstack 0
  2881  000017                     flash_readBytes@flash_addr:
  2882                           	callstack 0
  2883  000017                     ___lmul@product:
  2884                           	callstack 0
  2885  000017                     __div_to_l_@quot:
  2886                           	callstack 0
  2887                           
  2888                           ; 4 bytes @ 0x16
  2889  000017                     	ds	1
  2890  000018                     ??_atcommand_compare:
  2891  000018                     flash_writeBytes@retval:
  2892                           	callstack 0
  2893  000018                     i2c_writeBytes@address:
  2894                           	callstack 0
  2895  000018                     split_param@n:
  2896                           	callstack 0
  2897  000018                     nvm_sensor_type_channel@chno:
  2898                           	callstack 0
  2899  000018                     CDCTxService@i:
  2900                           	callstack 0
  2901  000018                     ___aldiv@sign:
  2902                           	callstack 0
  2903  000018                     ___almod@sign:
  2904                           	callstack 0
  2905  000018                     ___xxtofl@exp:
  2906                           	callstack 0
  2907  000018                     rcallback@ctx:
  2908                           	callstack 0
  2909  000018                     USBEnableEndpoint@p:
  2910                           	callstack 0
  2911  000018                     getsUSBUSART@buffer:
  2912                           	callstack 0
  2913  000018                     memcpy@s:
  2914                           	callstack 0
  2915  000018                     flash_clear@flash_addr:
  2916                           	callstack 0
  2917  000018                     ___lldiv@quotient:
  2918                           	callstack 0
  2919                           
  2920                           ; 4 bytes @ 0x17
  2921  000018                     	ds	1
  2922  000019                     ??_split_param:
  2923  000019                     flash_writeBytes@write_byte:
  2924                           	callstack 0
  2925  000019                     i2c_writeBytes_to@wraddr:
  2926                           	callstack 0
  2927  000019                     lmp91000_set_GainRLoad@RLoad:
  2928                           	callstack 0
  2929  000019                     lmp91000_set_Reference@IntZ:
  2930                           	callstack 0
  2931  000019                     lmp91000_set_Mode@mode:
  2932                           	callstack 0
  2933  000019                     max7323_set_gpio@wb:
  2934                           	callstack 0
  2935  000019                     CDCTxService@byte_to_send:
  2936                           	callstack 0
  2937  000019                     ___awdiv@counter:
  2938                           	callstack 0
  2939  000019                     ___lwdiv@counter:
  2940                           	callstack 0
  2941  000019                     lmp91000_unlock@buff:
  2942                           	callstack 0
  2943  000019                     modbusBuildException@status:
  2944                           	callstack 0
  2945  000019                     memset@n:
  2946                           	callstack 0
  2947  000019                     ___aldiv@quotient:
  2948                           	callstack 0
  2949  000019                     ___xxtofl@arg:
  2950                           	callstack 0
  2951                           
  2952                           ; 4 bytes @ 0x18
  2953  000019                     	ds	1
  2954  00001A                     flash_writeBytes@flag:
  2955                           	callstack 0
  2956  00001A                     i2c_writeBytes_to@addrlen:
  2957                           	callstack 0
  2958  00001A                     i2c_readBytes@address:
  2959                           	callstack 0
  2960  00001A                     lmp91000_set_GainRLoad@user_gain:
  2961                           	callstack 0
  2962  00001A                     lmp91000_set_Reference@sign:
  2963                           	callstack 0
  2964  00001A                     lmp91000_set_Mode@fet:
  2965                           	callstack 0
  2966  00001A                     max7323_set_gpio@chno:
  2967                           	callstack 0
  2968  00001A                     rcallback@query:
  2969                           	callstack 0
  2970  00001A                     USBEnableEndpoint@ep:
  2971                           	callstack 0
  2972  00001A                     getsUSBUSART@len:
  2973                           	callstack 0
  2974  00001A                     ___awdiv@sign:
  2975                           	callstack 0
  2976  00001A                     ___lwdiv@quotient:
  2977                           	callstack 0
  2978  00001A                     __tdiv_to_l_@quot:
  2979                           	callstack 0
  2980                           
  2981                           ; 4 bytes @ 0x19
  2982  00001A                     	ds	1
  2983  00001B                     ?_modbusMatchEndian:
  2984                           	callstack 0
  2985  00001B                     ?__atoi:
  2986                           	callstack 0
  2987  00001B                     i2c_readBytes@ackbit:
  2988                           	callstack 0
  2989  00001B                     lmp91000_set_Reference@bias:
  2990                           	callstack 0
  2991  00001B                     max7323_set_gpio@b:
  2992                           	callstack 0
  2993  00001B                     modbusBuildException@function:
  2994                           	callstack 0
  2995  00001B                     split_param@len:
  2996                           	callstack 0
  2997  00001B                     modbus_check_event@type:
  2998                           	callstack 0
  2999  00001B                     __div_to_l_@cntr:
  3000                           	callstack 0
  3001  00001B                     i2c_writeBytes_to@wrptr:
  3002                           	callstack 0
  3003  00001B                     lmp91000_set_GainRLoad@buff:
  3004                           	callstack 0
  3005  00001B                     lmp91000_set_Mode@buff:
  3006                           	callstack 0
  3007  00001B                     modbusMatchEndian@data:
  3008                           	callstack 0
  3009  00001B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3010                           	callstack 0
  3011  00001B                     __atoi@str:
  3012                           	callstack 0
  3013  00001B                     ___awdiv@quotient:
  3014                           	callstack 0
  3015  00001B                     memset@p:
  3016                           	callstack 0
  3017  00001B                     flash_readBytes@tblptr_save:
  3018                           	callstack 0
  3019  00001B                     flash_writeBytes@flash_addr:
  3020                           	callstack 0
  3021  00001B                     ___fldiv@rem:
  3022                           	callstack 0
  3023                           
  3024                           ; 4 bytes @ 0x1A
  3025  00001B                     	ds	1
  3026  00001C                     ?_months_to_days:
  3027                           	callstack 0
  3028  00001C                     ?_years_to_days:
  3029                           	callstack 0
  3030  00001C                     i2c_readBytes@i:
  3031                           	callstack 0
  3032  00001C                     lmp91000_set_Reference@source:
  3033                           	callstack 0
  3034  00001C                     modbusBuildException@code:
  3035                           	callstack 0
  3036  00001C                     split_param@ch:
  3037                           	callstack 0
  3038  00001C                     app_usb_task@numBytesRead:
  3039                           	callstack 0
  3040  00001C                     max7323_set_lmp_on@channel:
  3041                           	callstack 0
  3042  00001C                     __div_to_l_@exp1:
  3043                           	callstack 0
  3044  00001C                     max7323_set_lmp_off@wr:
  3045                           	callstack 0
  3046  00001C                     months_to_days@month:
  3047                           	callstack 0
  3048  00001C                     years_to_days@yr:
  3049                           	callstack 0
  3050  00001C                     usart_init@baudrate:
  3051                           	callstack 0
  3052                           
  3053                           ; 4 bytes @ 0x1B
  3054  00001C                     	ds	1
  3055  00001D                     ?__itoa:
  3056                           	callstack 0
  3057  00001D                     i2c_writeBytes_to@len:
  3058                           	callstack 0
  3059  00001D                     i2c_readBytes_from@wraddr:
  3060                           	callstack 0
  3061  00001D                     lmp91000_get_status@preg:
  3062                           	callstack 0
  3063  00001D                     lmp91000_set_GainRLoad@reg:
  3064                           	callstack 0
  3065  00001D                     lmp91000_set_Mode@reg:
  3066                           	callstack 0
  3067  00001D                     split_param@i:
  3068                           	callstack 0
  3069  00001D                     app_usb_task@i:
  3070                           	callstack 0
  3071  00001D                     max7323_set_lmp_on@wr:
  3072                           	callstack 0
  3073  00001D                     USBDeviceInit@i:
  3074                           	callstack 0
  3075  00001D                     ads1114_read@raw_adc:
  3076                           	callstack 0
  3077  00001D                     lmp91000_set_Reference@buff:
  3078                           	callstack 0
  3079  00001D                     modbusBuildRequest0102@status:
  3080                           	callstack 0
  3081  00001D                     modbusBuildRequest05@status:
  3082                           	callstack 0
  3083  00001D                     modbusParseResponse0102@status:
  3084                           	callstack 0
  3085  00001D                     modbusParseResponse05@status:
  3086                           	callstack 0
  3087  00001D                     modbusBuildException@requestParser:
  3088                           	callstack 0
  3089  00001D                     modbusSlaveInit@status:
  3090                           	callstack 0
  3091  00001D                     modbusSlaveEnd@status:
  3092                           	callstack 0
  3093  00001D                     modbusMasterInit@status:
  3094                           	callstack 0
  3095  00001D                     modbusMasterEnd@status:
  3096                           	callstack 0
  3097  00001D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3098                           	callstack 0
  3099  00001D                     __itoa@num:
  3100                           	callstack 0
  3101                           
  3102                           ; 4 bytes @ 0x1C
  3103  00001D                     	ds	1
  3104  00001E                     i2c_writeBytes_to@address:
  3105                           	callstack 0
  3106  00001E                     i2c_readBytes_from@addrlen:
  3107                           	callstack 0
  3108  00001E                     lmp91000_get_status@wBuff:
  3109                           	callstack 0
  3110  00001E                     atcommand_compare@no:
  3111                           	callstack 0
  3112  00001E                     split_param@cnt:
  3113                           	callstack 0
  3114  00001E                     max7323_set_lmp_on@i:
  3115                           	callstack 0
  3116  00001E                     max7323_set_lmp_off@i:
  3117                           	callstack 0
  3118  00001E                     __tdiv_to_l_@cntr:
  3119                           	callstack 0
  3120                           
  3121                           ; 1 bytes @ 0x1D
  3122  00001E                     	ds	1
  3123  00001F                     ??__atoi:
  3124  00001F                     ??_ads1114_read:
  3125  00001F                     ads1114_SetUp@mode:
  3126                           	callstack 0
  3127  00001F                     eeprom_writePage@mem_addr:
  3128                           	callstack 0
  3129  00001F                     lmp91000_get_status@rBuff:
  3130                           	callstack 0
  3131  00001F                     lmp91000_set_Reference@reg:
  3132                           	callstack 0
  3133  00001F                     modbusBuildRequest0102@function:
  3134                           	callstack 0
  3135  00001F                     modbusBuildRequest05@address:
  3136                           	callstack 0
  3137  00001F                     atcommand_compare@ch:
  3138                           	callstack 0
  3139  00001F                     __tdiv_to_l_@exp1:
  3140                           	callstack 0
  3141  00001F                     ___fldiv@sign:
  3142                           	callstack 0
  3143  00001F                     i2c_readBytes_from@rdptr:
  3144                           	callstack 0
  3145  00001F                     modbusParseResponse0102@parser:
  3146                           	callstack 0
  3147  00001F                     modbusParseResponse05@parser:
  3148                           	callstack 0
  3149  00001F                     modbusBuildException@exception:
  3150                           	callstack 0
  3151  00001F                     nvm_write_flash_all@flash:
  3152                           	callstack 0
  3153  00001F                     nvm_read_flash_all@flash:
  3154                           	callstack 0
  3155  00001F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3156                           	callstack 0
  3157                           
  3158                           ; 2 bytes @ 0x1E
  3159  00001F                     	ds	1
  3160  000020                     ??_usart_init:
  3161  000020                     ??_years_to_days:
  3162  000020                     ads1114_SetUp@pga:
  3163                           	callstack 0
  3164  000020                     lmp91000_isReady@rBuff:
  3165                           	callstack 0
  3166  000020                     modbusBuildRequest0102@address:
  3167                           	callstack 0
  3168  000020                     check_atcommand@cmd:
  3169                           	callstack 0
  3170  000020                     eeprom_writePage@wrptr:
  3171                           	callstack 0
  3172  000020                     modbusBuildRequest05@index:
  3173                           	callstack 0
  3174  000020                     ___fldiv@new_exp:
  3175                           	callstack 0
  3176                           
  3177                           ; 2 bytes @ 0x1F
  3178  000020                     	ds	1
  3179  000021                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3180  000021                     ads1114_SetUp@dataRate:
  3181                           	callstack 0
  3182  000021                     ads1114_read@wbuff:
  3183                           	callstack 0
  3184  000021                     i2c_readBytes_from@len:
  3185                           	callstack 0
  3186  000021                     check_atcommand@chno:
  3187                           	callstack 0
  3188  000021                     sensor_lmp_init@channel:
  3189                           	callstack 0
  3190  000021                     modbusBuildRequest0102@index:
  3191                           	callstack 0
  3192  000021                     modbusParseResponse0102@requestParser:
  3193                           	callstack 0
  3194  000021                     modbusParseResponse05@requestParser:
  3195                           	callstack 0
  3196  000021                     modbusBuildExceptionErr@status:
  3197                           	callstack 0
  3198  000021                     __itoa@str:
  3199                           	callstack 0
  3200                           
  3201                           ; 2 bytes @ 0x20
  3202  000021                     	ds	1
  3203  000022                     ??_check_atcommand:
  3204  000022                     ads1114_SetUp@channel:
  3205                           	callstack 0
  3206  000022                     eeprom_writePage@len:
  3207                           	callstack 0
  3208  000022                     i2c_readBytes_from@address:
  3209                           	callstack 0
  3210  000022                     ads1114_read@rbuff:
  3211                           	callstack 0
  3212  000022                     modbusBuildRequest05@value:
  3213                           	callstack 0
  3214  000022                     ___fldiv@grs:
  3215                           	callstack 0
  3216  000022                     years_to_days@ret:
  3217                           	callstack 0
  3218                           
  3219                           ; 4 bytes @ 0x21
  3220  000022                     	ds	1
  3221  000023                     ??_USBStdFeatureReqHandler:
  3222  000023                     ??_eeprom_writePage:
  3223  000023                     ??_modbusParseResponse0102:
  3224  000023                     eeprom_RandomRead@mem_addr:
  3225                           	callstack 0
  3226  000023                     modbusBuildExceptionErr@function:
  3227                           	callstack 0
  3228  000023                     sensor_init@channel:
  3229                           	callstack 0
  3230  000023                     USBStdSetCfgHandler@i:
  3231                           	callstack 0
  3232  000023                     ads1114_SetUp@buff:
  3233                           	callstack 0
  3234  000023                     modbusBuildRequest0102@count:
  3235                           	callstack 0
  3236  000023                     __atoi@sign:
  3237                           	callstack 0
  3238  000023                     __itoa@len:
  3239                           	callstack 0
  3240                           
  3241                           ; 2 bytes @ 0x22
  3242  000023                     	ds	1
  3243  000024                     ads1114_read@channel:
  3244                           	callstack 0
  3245  000024                     eeprom_writePage@channel:
  3246                           	callstack 0
  3247  000024                     modbusBuildExceptionErr@code:
  3248                           	callstack 0
  3249  000024                     check_atcommand@i:
  3250                           	callstack 0
  3251  000024                     eeprom_RandomRead@rdptr:
  3252                           	callstack 0
  3253  000024                     modbusBuildRequest05@builder:
  3254                           	callstack 0
  3255  000024                     usart_init@b:
  3256                           	callstack 0
  3257                           
  3258                           ; 4 bytes @ 0x23
  3259  000024                     	ds	1
  3260  000025                     ads1114_SetUp@wraddr:
  3261                           	callstack 0
  3262  000025                     modbusBuildExceptionErr@parseError:
  3263                           	callstack 0
  3264  000025                     eeprom_writePage@cnt:
  3265                           	callstack 0
  3266  000025                     modbusBuildRequest0102@builder:
  3267                           	callstack 0
  3268  000025                     parse_command@buff:
  3269                           	callstack 0
  3270  000025                     sensor_ADC_read@raw_adc:
  3271                           	callstack 0
  3272  000025                     USBStdFeatureReqHandler@pUEP:
  3273                           	callstack 0
  3274  000025                     __atoi@ret:
  3275                           	callstack 0
  3276  000025                     __itoa@shifter:
  3277                           	callstack 0
  3278                           
  3279                           ; 4 bytes @ 0x24
  3280  000025                     	ds	1
  3281  000026                     ?_ymd_to_scalar:
  3282                           	callstack 0
  3283  000026                     eeprom_RandomRead@len:
  3284                           	callstack 0
  3285  000026                     modbusBuildExceptionErr@err:
  3286                           	callstack 0
  3287  000026                     modbus_relay_ouput@on:
  3288                           	callstack 0
  3289  000026                     sensor_adc_init@isTemp:
  3290                           	callstack 0
  3291  000026                     ___fldiv@bexp:
  3292                           	callstack 0
  3293  000026                     ymd_to_scalar@yr:
  3294                           	callstack 0
  3295                           
  3296                           ; 2 bytes @ 0x25
  3297  000026                     	ds	1
  3298  000027                     ??_nvm_write_eeprom_all:
  3299  000027                     ??_modbus_relay_ouput:
  3300  000027                     eeprom_RandomRead@channel:
  3301                           	callstack 0
  3302  000027                     sensor_adc_init@ret:
  3303                           	callstack 0
  3304  000027                     sensor_ADC_read@channel:
  3305                           	callstack 0
  3306  000027                     USBStdFeatureReqHandler@current_ep_data:
  3307                           	callstack 0
  3308  000027                     ___fldiv@aexp:
  3309                           	callstack 0
  3310  000027                     _modbusParseResponse0102$2350:
  3311                           	callstack 0
  3312  000027                     modbusParseRequest0304@status:
  3313                           	callstack 0
  3314  000027                     parse_command@status:
  3315                           	callstack 0
  3316  000027                     modbusBuildRequest01@mbcoils$F4614@status:
  3317                           	callstack 0
  3318                           
  3319                           ; 2 bytes @ 0x26
  3320  000027                     	ds	1
  3321  000028                     ?___fladd:
  3322                           	callstack 0
  3323  000028                     nvm_read_eeprom_all@channel:
  3324                           	callstack 0
  3325  000028                     sensor_adc_init@channel:
  3326                           	callstack 0
  3327  000028                     USBStdFeatureReqHandler@p:
  3328                           	callstack 0
  3329  000028                     ymd_to_scalar@mo:
  3330                           	callstack 0
  3331  000028                     rs485_init@baudrate:
  3332                           	callstack 0
  3333  000028                     ___fladd@b:
  3334                           	callstack 0
  3335                           
  3336                           ; 4 bytes @ 0x27
  3337  000028                     	ds	1
  3338  000029                     ??_parse_command:
  3339  000029                     modbusBuildRequest01@mbcoils$F4614@address:
  3340                           	callstack 0
  3341  000029                     modbus_relay_ouput@idx:
  3342                           	callstack 0
  3343  000029                     sensor_set_temp_mode@channel:
  3344                           	callstack 0
  3345  000029                     sensor_set_gas_mode@channel:
  3346                           	callstack 0
  3347  000029                     modbusParseResponse0102@count:
  3348                           	callstack 0
  3349  000029                     modbusParseRequest0304@parser:
  3350                           	callstack 0
  3351  000029                     __atoi@p:
  3352                           	callstack 0
  3353  000029                     __itoa@p:
  3354                           	callstack 0
  3355                           
  3356                           ; 2 bytes @ 0x28
  3357  000029                     	ds	1
  3358  00002A                     ??_USBCtrlEPService:
  3359  00002A                     modbus_relay_ouput@err:
  3360                           	callstack 0
  3361  00002A                     modbusBuildRequest01@mbcoils$F4614@index:
  3362                           	callstack 0
  3363  00002A                     ymd_to_scalar@day:
  3364                           	callstack 0
  3365                           
  3366                           ; 2 bytes @ 0x29
  3367  00002A                     	ds	1
  3368  00002B                     ??_modbusParseRequest0304:
  3369  00002B                     nvm_write_eeprom_all@left:
  3370                           	callstack 0
  3371  00002B                     USBDeviceTasks@i:
  3372                           	callstack 0
  3373  00002B                     modbusParseResponse@status:
  3374                           	callstack 0
  3375  00002B                     modbus_relay_ouput@data:
  3376                           	callstack 0
  3377  00002B                     __itoa@n:
  3378                           	callstack 0
  3379                           
  3380                           ; 4 bytes @ 0x2A
  3381  00002B                     	ds	1
  3382  00002C                     ??_ymd_to_scalar:
  3383  00002C                     nvm_write_eeprom_all@i:
  3384                           	callstack 0
  3385  00002C                     modbusBuildRequest01@mbcoils$F4614@count:
  3386                           	callstack 0
  3387  00002C                     ___fladd@a:
  3388                           	callstack 0
  3389                           
  3390                           ; 4 bytes @ 0x2B
  3391  00002C                     	ds	1
  3392  00002D                     ??_modbusParseResponse:
  3393  00002D                     nvm_write_eeprom_all@size:
  3394                           	callstack 0
  3395  00002D                     _modbus_relay_ouput$4706:
  3396                           	callstack 0
  3397                           
  3398                           ; 2 bytes @ 0x2C
  3399  00002D                     	ds	1
  3400  00002E                     modbus_relay_status@err:
  3401                           	callstack 0
  3402  00002E                     nvm_write_eeprom_all@channel:
  3403                           	callstack 0
  3404                           
  3405                           ; 1 bytes @ 0x2D
  3406  00002E                     	ds	1
  3407  00002F                     ??_eeprom_update:
  3408  00002F                     ??_eeprom_update_all:
  3409  00002F                     modbus_relay_ouput@relay_idx:
  3410                           	callstack 0
  3411                           
  3412                           ; 1 bytes @ 0x2E
  3413  00002F                     	ds	1
  3414  000030                     ??___fladd:
  3415  000030                     ??_modbus_master_response_parse:
  3416  000030                     modbusParseResponse@functionExec:
  3417                           	callstack 0
  3418  000030                     _ymd_to_scalar$8868:
  3419                           	callstack 0
  3420                           
  3421                           ; 2 bytes @ 0x2F
  3422  000030                     	ds	1
  3423  000031                     eeprom_update@chno:
  3424                           	callstack 0
  3425  000031                     eeprom_update_all@wait_count:
  3426                           	callstack 0
  3427  000031                     modbusParseResponse@requestParser:
  3428                           	callstack 0
  3429                           
  3430                           ; 2 bytes @ 0x30
  3431  000031                     	ds	1
  3432  000032                     eeprom_update@retval:
  3433                           	callstack 0
  3434  000032                     modbus_master_response_parse@idx:
  3435                           	callstack 0
  3436  000032                     ymd_to_scalar@scalar:
  3437                           	callstack 0
  3438                           
  3439                           ; 4 bytes @ 0x31
  3440  000032                     	ds	1
  3441  000033                     modbusParseResponse@err:
  3442                           	callstack 0
  3443  000033                     eeprom_update@wait_count:
  3444                           	callstack 0
  3445  000033                     _modbusParseRequest0304$2850:
  3446                           	callstack 0
  3447  000033                     _modbus_master_response_parse$4723:
  3448                           	callstack 0
  3449                           
  3450                           ; 2 bytes @ 0x32
  3451  000033                     	ds	1
  3452  000034                     ___fladd@signs:
  3453                           	callstack 0
  3454  000034                     modbusParseResponse@crcresp:
  3455                           	callstack 0
  3456                           
  3457                           ; 2 bytes @ 0x33
  3458  000034                     	ds	1
  3459  000035                     ___fladd@aexp:
  3460                           	callstack 0
  3461  000035                     _modbusParseRequest0304$2860:
  3462                           	callstack 0
  3463                           
  3464                           ; 2 bytes @ 0x34
  3465  000035                     	ds	1
  3466  000036                     ?_mktime:
  3467                           	callstack 0
  3468  000036                     ___fladd@bexp:
  3469                           	callstack 0
  3470  000036                     mktime@timeptr:
  3471                           	callstack 0
  3472  000036                     modbusParseResponse@crcreq:
  3473                           	callstack 0
  3474                           
  3475                           ; 2 bytes @ 0x35
  3476  000036                     	ds	1
  3477  000037                     ___fladd@grs:
  3478                           	callstack 0
  3479  000037                     _modbusParseRequest0304$2861:
  3480                           	callstack 0
  3481                           
  3482                           ; 2 bytes @ 0x36
  3483  000037                     	ds	1
  3484  000038                     ?___flmul:
  3485                           	callstack 0
  3486  000038                     modbusParseResponse@parser:
  3487                           	callstack 0
  3488  000038                     ___flmul@b:
  3489                           	callstack 0
  3490                           
  3491                           ; 4 bytes @ 0x37
  3492  000038                     	ds	1
  3493  000039                     modbusParseRequest0304@datatype:
  3494                           	callstack 0
  3495                           
  3496                           ; 1 bytes @ 0x38
  3497  000039                     	ds	1
  3498  00003A                     ??_mktime:
  3499  00003A                     modbus_master_task@byte:
  3500                           	callstack 0
  3501  00003A                     modbusParseRequest0304@index:
  3502                           	callstack 0
  3503                           
  3504                           ; 2 bytes @ 0x39
  3505  00003A                     	ds	2
  3506  00003C                     modbusParseRequest0304@frameLength:
  3507                           	callstack 0
  3508  00003C                     ___flmul@a:
  3509                           	callstack 0
  3510                           
  3511                           ; 4 bytes @ 0x3B
  3512  00003C                     	ds	1
  3513  00003D                     modbusParseRequest0304@builder:
  3514                           	callstack 0
  3515                           
  3516                           ; 2 bytes @ 0x3C
  3517  00003D                     	ds	2
  3518  00003F                     modbusParseRequest0304@i:
  3519                           	callstack 0
  3520                           
  3521                           ; 1 bytes @ 0x3E
  3522  00003F                     	ds	1
  3523  000040                     ??_build_time:
  3524  000040                     ??_fround:
  3525  000040                     ___fltol@sign1:
  3526                           	callstack 0
  3527  000040                     modbusParseRequest0304@count:
  3528                           	callstack 0
  3529                           
  3530                           ; 2 bytes @ 0x3F
  3531  000040                     	ds	1
  3532  000041                     ___fltol@exp1:
  3533                           	callstack 0
  3534                           
  3535                           ; 1 bytes @ 0x40
  3536  000041                     	ds	1
  3537  000042                     modbus_slave_task@byte:
  3538                           	callstack 0
  3539                           
  3540                           ; 1 bytes @ 0x41
  3541  000042                     	ds	1
  3542  000043                     
  3543                           ; 1 bytes @ 0x42
  3544 ;;
  3545 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3546 ;;
  3547 ;; *************** function _main *****************
  3548 ;; Defined at:
  3549 ;;		line 144 in file "main.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels required when called: 13
  3569 ;; This function calls:
  3570 ;;		_Board_initialize
  3571 ;;		_InitTimer
  3572 ;;		_SYSTEM_Initialize
  3573 ;;		_USBDeviceInit
  3574 ;;		_USBDeviceTasks
  3575 ;;		_WDT_initialize
  3576 ;;		_app_usb_task
  3577 ;;		_atcommand_task
  3578 ;;		_modbus_task
  3579 ;;		_sensMeasure_task
  3580 ;;		_usedtime_task
  3581 ;; This function is called by:
  3582 ;;		Startup code after reset
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text0
  3587  00D806                     __ptext0:
  3588                           	callstack 0
  3589  00D806                     _main:
  3590                           	callstack 18
  3591                           
  3592                           ;main.c: 146: Board_initialize();
  3593                           
  3594                           ;incstack = 0
  3595  00D806  EC87  F067         	call	_Board_initialize	;wreg free
  3596                           
  3597                           ;main.c: 148: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3598  00D80A  0E00               	movlw	0
  3599  00D80C  EC94  F066         	call	_SYSTEM_Initialize
  3600                           
  3601                           ;main.c: 149: USBDeviceInit();
  3602  00D810  EC28  F04D         	call	_USBDeviceInit	;wreg free
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;main.c: 150: ;;main.c: 152: InitTimer();
  3606  00D814  EC4F  F06E         	call	_InitTimer	;wreg free
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;main.c: 153: WDT_initialize();
  3610  00D818  EC7B  F06F         	call	_WDT_initialize	;wreg free
  3611  00D81C                     l1613:
  3612  00D81C  0004               	clrwdt		;# 
  3613                           
  3614                           ;main.c: 172: USBDeviceTasks();
  3615  00D81E  EC4B  F047         	call	_USBDeviceTasks	;wreg free
  3616                           
  3617                           ;main.c: 176: app_usb_task();
  3618  00D822  EC2C  F065         	call	_app_usb_task	;wreg free
  3619                           
  3620                           ;main.c: 180: sensMeasure_task();
  3621  00D826  ECCF  F022         	call	_sensMeasure_task	;wreg free
  3622                           
  3623                           ;main.c: 181: modbus_task();
  3624  00D82A  ECF7  F067         	call	_modbus_task	;wreg free
  3625                           
  3626                           ;main.c: 182: atcommand_task();
  3627  00D82E  EC5D  F04E         	call	_atcommand_task	;wreg free
  3628                           
  3629                           ;main.c: 183: usedtime_task();
  3630  00D832  EC5F  F05E         	call	_usedtime_task	;wreg free
  3631  00D836  D7F2               	goto	l1613
  3632  00D838                     __end_of_main:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _usedtime_task *****************
  3636 ;; Defined at:
  3637 ;;		line 126 in file "main.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;Total ram usage:        0 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 11
  3658 ;; This function calls:
  3659 ;;		_eeprom_update_all
  3660 ;;		_memcpy
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text1
  3667  00BCBE                     __ptext1:
  3668                           	callstack 0
  3669  00BCBE                     _usedtime_task:
  3670                           	callstack 19
  3671                           
  3672                           ;main.c: 128: if (g_usedtime_count > 360000) {
  3673                           
  3674                           ;incstack = 0
  3675  00BCBE  0101               	movlb	1	; () banked
  3676  00BCC0  5141               	movf	(_g_usedtime_count+3)& (0+255),w,b	;volatile
  3677  00BCC2  E108               	bnz	u43290
  3678  00BCC4  0E41               	movlw	65
  3679  00BCC6  5D3E               	subwf	_g_usedtime_count& (0+255),w,b	;volatile
  3680  00BCC8  0E7E               	movlw	126
  3681  00BCCA  593F               	subwfb	(_g_usedtime_count+1)& (0+255),w,b	;volatile
  3682  00BCCC  0E05               	movlw	5
  3683  00BCCE  5940               	subwfb	(_g_usedtime_count+2)& (0+255),w,b	;volatile
  3684  00BCD0  A0D8               	btfss	status,0,c
  3685  00BCD2  0012               	return	
  3686  00BCD4                     u43290:
  3687                           
  3688                           ; BSR set to: 1
  3689                           ;main.c: 129: g_usedtime_count = 0;
  3690  00BCD4  0E00               	movlw	0
  3691  00BCD6  6F3E               	movwf	_g_usedtime_count& (0+255),b	;volatile
  3692  00BCD8  0E00               	movlw	0
  3693  00BCDA  6F3F               	movwf	(_g_usedtime_count+1)& (0+255),b	;volatile
  3694  00BCDC  0E00               	movlw	0
  3695  00BCDE  6F40               	movwf	(_g_usedtime_count+2)& (0+255),b	;volatile
  3696  00BCE0  0E00               	movlw	0
  3697  00BCE2  6F41               	movwf	(_g_usedtime_count+3)& (0+255),b	;volatile
  3698                           
  3699                           ;main.c: 130: if (g_sens_measure.existChannel[0]) {
  3700  00BCE4  0100               	movlb	0	; () banked
  3701  00BCE6  51D2               	movf	(_g_sens_measure+3)& (0+255),w,b
  3702  00BCE8  B4D8               	btfsc	status,2,c
  3703  00BCEA  D015               	goto	l34117
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;main.c: 131: memcpy(g_eeprmTemp[0].byte, g_nvm.eeprm[0].byte, 62);
  3707  00BCEC  0E27               	movlw	low _g_eeprmTemp
  3708  00BCEE  6E0F               	movwf	memcpy@d1^0,c
  3709  00BCF0  0E03               	movlw	high _g_eeprmTemp
  3710  00BCF2  6E10               	movwf	(memcpy@d1+1)^0,c
  3711  00BCF4  0E70               	movlw	low (_g_nvm+30)
  3712  00BCF6  6E11               	movwf	memcpy@s1^0,c
  3713  00BCF8  0E01               	movlw	high (_g_nvm+30)
  3714  00BCFA  6E12               	movwf	(memcpy@s1+1)^0,c
  3715  00BCFC  0E00               	movlw	0
  3716  00BCFE  6E14               	movwf	(memcpy@n+1)^0,c
  3717  00BD00  0E3E               	movlw	62
  3718  00BD02  6E13               	movwf	memcpy@n^0,c
  3719  00BD04  ECA6  F068         	call	_memcpy	;wreg free
  3720                           
  3721                           ;main.c: 132: g_nvm.eeprm[0].usedtime++;
  3722  00BD08  0E01               	movlw	1
  3723  00BD0A  0101               	movlb	1	; () banked
  3724  00BD0C  279A               	addwf	(_g_nvm+72)& (0+255),f,b
  3725  00BD0E  0E00               	movlw	0
  3726  00BD10  239B               	addwfc	(_g_nvm+73)& (0+255),f,b
  3727  00BD12  239C               	addwfc	(_g_nvm+74)& (0+255),f,b
  3728  00BD14  239D               	addwfc	(_g_nvm+75)& (0+255),f,b
  3729  00BD16                     l34117:
  3730                           
  3731                           ;main.c: 133: };main.c: 135: if (g_sens_measure.existChannel[1]) {
  3732  00BD16  0100               	movlb	0	; () banked
  3733  00BD18  51D3               	movf	(_g_sens_measure+4)& (0+255),w,b
  3734  00BD1A  B4D8               	btfsc	status,2,c
  3735  00BD1C  D015               	goto	l34123
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;main.c: 136: memcpy(g_eeprmTemp[1].byte, g_nvm.eeprm[1].byte, 62);
  3739  00BD1E  0E65               	movlw	low (_g_eeprmTemp+62)
  3740  00BD20  6E0F               	movwf	memcpy@d1^0,c
  3741  00BD22  0E03               	movlw	high (_g_eeprmTemp+62)
  3742  00BD24  6E10               	movwf	(memcpy@d1+1)^0,c
  3743  00BD26  0EAE               	movlw	low (_g_nvm+92)
  3744  00BD28  6E11               	movwf	memcpy@s1^0,c
  3745  00BD2A  0E01               	movlw	high (_g_nvm+92)
  3746  00BD2C  6E12               	movwf	(memcpy@s1+1)^0,c
  3747  00BD2E  0E00               	movlw	0
  3748  00BD30  6E14               	movwf	(memcpy@n+1)^0,c
  3749  00BD32  0E3E               	movlw	62
  3750  00BD34  6E13               	movwf	memcpy@n^0,c
  3751  00BD36  ECA6  F068         	call	_memcpy	;wreg free
  3752                           
  3753                           ;main.c: 137: g_nvm.eeprm[1].usedtime++;
  3754  00BD3A  0E01               	movlw	1
  3755  00BD3C  0101               	movlb	1	; () banked
  3756  00BD3E  27D8               	addwf	(_g_nvm+134)& (0+255),f,b
  3757  00BD40  0E00               	movlw	0
  3758  00BD42  23D9               	addwfc	(_g_nvm+135)& (0+255),f,b
  3759  00BD44  23DA               	addwfc	(_g_nvm+136)& (0+255),f,b
  3760  00BD46  23DB               	addwfc	(_g_nvm+137)& (0+255),f,b
  3761  00BD48                     l34123:
  3762                           
  3763                           ;main.c: 138: };main.c: 140: eeprom_update_all();
  3764  00BD48  EC9C  F051         	call	_eeprom_update_all	;wreg free
  3765  00BD4C  0012               	return		;funcret
  3766  00BD4E                     __end_of_usedtime_task:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function _sensMeasure_task *****************
  3770 ;; Defined at:
  3771 ;;		line 154 in file "app_sens_measure.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  ret             1  109[BANK0 ] unsigned char 
  3776 ;;  ret             1  108[BANK0 ] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3789 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3790 ;;Total ram usage:        4 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; Hardware stack levels required when called: 11
  3793 ;; This function calls:
  3794 ;;		_ACCESS_SourceGet
  3795 ;;		_ACCESS_SourceSet
  3796 ;;		_I2C_Bus_SourceGet
  3797 ;;		___fladd
  3798 ;;		_checksum
  3799 ;;		_ewmaFilter_get
  3800 ;;		_nvm_clear_channel
  3801 ;;		_nvm_read_eeprom_all
  3802 ;;		_sensMeasure_gas_read
  3803 ;;		_sensMeasure_temp_read
  3804 ;;		_sensor_init
  3805 ;;		_sensor_set_gas_mode
  3806 ;;		_sensor_set_temp_mode
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text2
  3813  00459E                     __ptext2:
  3814                           	callstack 0
  3815  00459E                     _sensMeasure_task:
  3816                           	callstack 19
  3817                           
  3818                           ;app_sens_measure.c: 156: switch (g_sens_measure.seq)
  3819                           
  3820                           ;incstack = 0
  3821  00459E  D309               	goto	l34463
  3822  0045A0                     l34247:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;app_sens_measure.c: 159: if (g_large_counter >= 1000) {
  3826  0045A0  0EE8               	movlw	232
  3827  0045A2  5DE0               	subwf	_g_large_counter& (0+255),w,b	;volatile
  3828  0045A4  0E03               	movlw	3
  3829  0045A6  59E1               	subwfb	(_g_large_counter+1)& (0+255),w,b	;volatile
  3830  0045A8  A0D8               	btfss	status,0,c
  3831  0045AA  0012               	return	
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;app_sens_measure.c: 160: g_channel_no = 0;
  3835  0045AC  0E00               	movlw	0
  3836  0045AE  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
  3837                           
  3838                           ;app_sens_measure.c: 161: g_large_counter = 0;
  3839  0045B0  0E00               	movlw	0
  3840  0045B2  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3841  0045B4  0E00               	movlw	0
  3842  0045B6  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  3843                           
  3844                           ;app_sens_measure.c: 162: g_retry_count = 0;
  3845  0045B8  0E00               	movlw	0
  3846  0045BA  6FF8               	movwf	_g_retry_count& (0+255),b	;volatile
  3847                           
  3848                           ;app_sens_measure.c: 163: g_sens_measure.seq = SENS_EEPRM_INIT;
  3849  0045BC  0E01               	movlw	1
  3850  0045BE  6FCF               	movwf	_g_sens_measure& (0+255),b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;app_sens_measure.c: 164: };app_sens_measure.c: 165: break;
  3854  0045C0  0012               	return	
  3855  0045C2                     l34251:
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;app_sens_measure.c: 167: if (I2C_Bus_SourceGet() && !ACCESS_SourceGet()) {
  3859  0045C2  EC40  F06F         	call	_I2C_Bus_SourceGet	;wreg free
  3860  0045C6  0900               	iorlw	0
  3861  0045C8  B4D8               	btfsc	status,2,c
  3862  0045CA  D06C               	goto	l34289
  3863  0045CC  EC4C  F06F         	call	_ACCESS_SourceGet	;wreg free
  3864  0045D0  0900               	iorlw	0
  3865  0045D2  A4D8               	btfss	status,2,c
  3866  0045D4  D067               	goto	l34289
  3867                           
  3868                           ;app_sens_measure.c: 168: nvm_clear_channel(g_channel_no);
  3869  0045D6  0100               	movlb	0	; () banked
  3870  0045D8  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  3871  0045DA  ECB4  F042         	call	_nvm_clear_channel
  3872                           
  3873                           ;app_sens_measure.c: 169: g_sens_measure.existChannel[g_channel_no] = 0;
  3874  0045DE  0100               	movlb	0	; () banked
  3875  0045E0  51F9               	movf	_g_channel_no& (0+255),w,b
  3876  0045E2  0FD2               	addlw	low (_g_sens_measure+3)
  3877  0045E4  6ED9               	movwf	fsr2l,c
  3878  0045E6  6ADA               	clrf	fsr2h,c
  3879  0045E8  0E00               	movlw	0
  3880  0045EA  6EDF               	movwf	indf2,c
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;app_sens_measure.c: 170: g_sens_measure.isChecksum[g_channel_no] = 0;
  3884  0045EC  51F9               	movf	_g_channel_no& (0+255),w,b
  3885  0045EE  0FD4               	addlw	low (_g_sens_measure+5)
  3886  0045F0  6ED9               	movwf	fsr2l,c
  3887  0045F2  6ADA               	clrf	fsr2h,c
  3888  0045F4  0E00               	movlw	0
  3889  0045F6  6EDF               	movwf	indf2,c
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;app_sens_measure.c: 171: g_sens_measure.isSensorInit[g_channel_no] = 0;
  3893  0045F8  51F9               	movf	_g_channel_no& (0+255),w,b
  3894  0045FA  0FD6               	addlw	low (_g_sens_measure+7)
  3895  0045FC  6ED9               	movwf	fsr2l,c
  3896  0045FE  6ADA               	clrf	fsr2h,c
  3897  004600  0E00               	movlw	0
  3898  004602  6EDF               	movwf	indf2,c
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;app_sens_measure.c: 175: ACCESS_SourceSet(1);
  3902  004604  0E01               	movlw	1
  3903  004606  ECD7  F06A         	call	_ACCESS_SourceSet
  3904                           
  3905                           ;app_sens_measure.c: 177: bool ret = nvm_read_eeprom_all(g_channel_no);
  3906  00460A  0100               	movlb	0	; () banked
  3907  00460C  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  3908  00460E  ECF1  F06D         	call	_nvm_read_eeprom_all
  3909  004612  0100               	movlb	0	; () banked
  3910  004614  6FCC               	movwf	sensMeasure_task@ret& (0+255),b
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;app_sens_measure.c: 182: ACCESS_SourceSet(0);
  3914  004616  0E00               	movlw	0
  3915  004618  ECD7  F06A         	call	_ACCESS_SourceSet
  3916                           
  3917                           ;app_sens_measure.c: 184: if (ret == 1) {
  3918  00461C  0100               	movlb	0	; () banked
  3919  00461E  05CC               	decf	sensMeasure_task@ret& (0+255),w,b
  3920  004620  A4D8               	btfss	status,2,c
  3921  004622  D033               	goto	l34283
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;app_sens_measure.c: 185: g_sens_measure.existChannel[g_channel_no] = 1;
  3925  004624  51F9               	movf	_g_channel_no& (0+255),w,b
  3926  004626  0FD2               	addlw	low (_g_sens_measure+3)
  3927  004628  6ED9               	movwf	fsr2l,c
  3928  00462A  6ADA               	clrf	fsr2h,c
  3929  00462C  0E01               	movlw	1
  3930  00462E  6EDF               	movwf	indf2,c
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;app_sens_measure.c: 186: if (g_nvm.eeprm[g_channel_no].check_sum == checksum(g_nvm.eepr
      +                          m[g_channel_no].byte, 62-2)) {
  3934  004630  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  3935  004632  0D3E               	mullw	62
  3936  004634  0E70               	movlw	low (_g_nvm+30)
  3937  004636  24F3               	addwf	243,w,c
  3938  004638  6E0F               	movwf	checksum@data^0,c
  3939  00463A  0E01               	movlw	high (_g_nvm+30)
  3940  00463C  20F4               	addwfc	prodh,w,c
  3941  00463E  6E10               	movwf	(checksum@data+1)^0,c
  3942  004640  0E00               	movlw	0
  3943  004642  6E12               	movwf	(checksum@length+1)^0,c
  3944  004644  0E3C               	movlw	60
  3945  004646  6E11               	movwf	checksum@length^0,c
  3946  004648  EC66  F062         	call	_checksum	;wreg free
  3947  00464C  0100               	movlb	0	; () banked
  3948  00464E  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  3949  004650  0D3E               	mullw	62
  3950  004652  0EAC               	movlw	low (_g_nvm+90)
  3951  004654  24F3               	addwf	243,w,c
  3952  004656  6ED9               	movwf	fsr2l,c
  3953  004658  0E01               	movlw	high (_g_nvm+90)
  3954  00465A  20F4               	addwfc	prodh,w,c
  3955  00465C  6EDA               	movwf	fsr2h,c
  3956  00465E  50DE               	movf	postinc2,w,c
  3957  004660  180F               	xorwf	?_checksum^0,w,c
  3958  004662  E10A               	bnz	l34277
  3959  004664  50DE               	movf	postinc2,w,c
  3960  004666  1810               	xorwf	(?_checksum+1)^0,w,c
  3961  004668  A4D8               	btfss	status,2,c
  3962  00466A  D006               	goto	l34277
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;app_sens_measure.c: 187: g_sens_measure.isChecksum[g_channel_no] = 1;
  3966  00466C  51F9               	movf	_g_channel_no& (0+255),w,b
  3967  00466E  0FD4               	addlw	low (_g_sens_measure+5)
  3968  004670  6ED9               	movwf	fsr2l,c
  3969  004672  6ADA               	clrf	fsr2h,c
  3970  004674  0E01               	movlw	1
  3971  004676  6EDF               	movwf	indf2,c
  3972  004678                     l34277:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;app_sens_measure.c: 191: };app_sens_measure.c: 192: g_retry_count = 0;
  3976  004678  0E00               	movlw	0
  3977  00467A  6FF8               	movwf	_g_retry_count& (0+255),b	;volatile
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;app_sens_measure.c: 193: g_large_counter = 0;
  3981  00467C  0E00               	movlw	0
  3982  00467E  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3983  004680  0E00               	movlw	0
  3984  004682  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;app_sens_measure.c: 194: g_sens_measure.seq = SENS_EEPRM_INIT_NEXT;
  3988  004684  0E02               	movlw	2
  3989  004686  6FCF               	movwf	_g_sens_measure& (0+255),b
  3990                           
  3991                           ;app_sens_measure.c: 195: } else {
  3992  004688  0012               	return	
  3993  00468A                     l34283:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;app_sens_measure.c: 196: g_retry_count++;
  3997  00468A  2BF8               	incf	_g_retry_count& (0+255),f,b	;volatile
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;app_sens_measure.c: 197: if (g_retry_count >= 5) {
  4001  00468C  0E04               	movlw	4
  4002  00468E  65F8               	cpfsgt	_g_retry_count& (0+255),b	;volatile
  4003  004690  D009               	goto	l34289
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;app_sens_measure.c: 198: g_retry_count = 0;
  4007  004692  0E00               	movlw	0
  4008  004694  6FF8               	movwf	_g_retry_count& (0+255),b	;volatile
  4009                           
  4010                           ;app_sens_measure.c: 199: g_large_counter = 0;
  4011  004696  0E00               	movlw	0
  4012  004698  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4013  00469A  0E00               	movlw	0
  4014  00469C  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4015                           
  4016                           ;app_sens_measure.c: 200: g_sens_measure.seq = SENS_EEPRM_INIT_NEXT;
  4017  00469E  0E02               	movlw	2
  4018  0046A0  6FCF               	movwf	_g_sens_measure& (0+255),b
  4019                           
  4020                           ;app_sens_measure.c: 201: } else {
  4021  0046A2  0012               	return	
  4022  0046A4                     l34289:
  4023                           
  4024                           ;app_sens_measure.c: 202: g_large_counter = 0;
  4025  0046A4  0E00               	movlw	0
  4026  0046A6  0100               	movlb	0	; () banked
  4027  0046A8  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4028  0046AA  0E00               	movlw	0
  4029  0046AC  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4030                           
  4031                           ;app_sens_measure.c: 203: g_sens_measure.seq_count = 10;
  4032  0046AE  0E0A               	movlw	10
  4033  0046B0  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4034                           
  4035                           ;app_sens_measure.c: 204: g_sens_measure.seq = SENS_WAIT;
  4036  0046B2  0E0C               	movlw	12
  4037  0046B4  6FCF               	movwf	_g_sens_measure& (0+255),b
  4038                           
  4039                           ;app_sens_measure.c: 205: g_sens_measure.next_seq = SENS_EEPRM_INIT;
  4040  0046B6  0E01               	movlw	1
  4041  0046B8  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4042  0046BA  0012               	return	
  4043  0046BC                     l34293:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;app_sens_measure.c: 216: g_channel_no++;
  4047  0046BC  2BF9               	incf	_g_channel_no& (0+255),f,b	;volatile
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;app_sens_measure.c: 217: if (g_channel_no >= 2) {
  4051  0046BE  0E01               	movlw	1
  4052  0046C0  65F9               	cpfsgt	_g_channel_no& (0+255),b	;volatile
  4053  0046C2  D7F0               	goto	l34289
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;app_sens_measure.c: 218: g_channel_no = 0;
  4057  0046C4  0E00               	movlw	0
  4058  0046C6  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
  4059                           
  4060                           ;app_sens_measure.c: 219: g_large_counter = 0;
  4061  0046C8  0E00               	movlw	0
  4062  0046CA  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4063  0046CC  0E00               	movlw	0
  4064  0046CE  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4065                           
  4066                           ;app_sens_measure.c: 220: g_sens_measure.seq_count = 10;
  4067  0046D0  0E0A               	movlw	10
  4068  0046D2  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4069                           
  4070                           ;app_sens_measure.c: 221: g_sens_measure.seq = SENS_WAIT;
  4071  0046D4  0E0C               	movlw	12
  4072  0046D6  6FCF               	movwf	_g_sens_measure& (0+255),b
  4073                           
  4074                           ;app_sens_measure.c: 222: g_sens_measure.next_seq = SENS_SENSOR_INIT;
  4075  0046D8  0E03               	movlw	3
  4076  0046DA  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4077                           
  4078                           ;app_sens_measure.c: 231: } else {
  4079  0046DC  0012               	return	
  4080  0046DE                     l34301:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;app_sens_measure.c: 239: if (I2C_Bus_SourceGet() && !ACCESS_SourceGet()) {
  4084  0046DE  EC40  F06F         	call	_I2C_Bus_SourceGet	;wreg free
  4085  0046E2  0900               	iorlw	0
  4086  0046E4  B4D8               	btfsc	status,2,c
  4087  0046E6  D040               	goto	l34331
  4088  0046E8  EC4C  F06F         	call	_ACCESS_SourceGet	;wreg free
  4089  0046EC  0900               	iorlw	0
  4090  0046EE  A4D8               	btfss	status,2,c
  4091  0046F0  D03B               	goto	l34331
  4092                           
  4093                           ;app_sens_measure.c: 241: if (g_sens_measure.existChannel[g_channel_no] == 1 &&;app_sens
      +                          _measure.c: 242: g_sens_measure.isChecksum[g_channel_no] == 1) {
  4094  0046F2  0100               	movlb	0	; () banked
  4095  0046F4  51F9               	movf	_g_channel_no& (0+255),w,b
  4096  0046F6  0FD2               	addlw	low (_g_sens_measure+3)
  4097  0046F8  6ED9               	movwf	fsr2l,c
  4098  0046FA  6ADA               	clrf	fsr2h,c
  4099  0046FC  04DE               	decf	postinc2,w,c
  4100  0046FE  A4D8               	btfss	status,2,c
  4101  004700  D02A               	goto	u43490
  4102                           
  4103                           ; BSR set to: 0
  4104  004702  51F9               	movf	_g_channel_no& (0+255),w,b
  4105  004704  0FD4               	addlw	low (_g_sens_measure+5)
  4106  004706  6ED9               	movwf	fsr2l,c
  4107  004708  6ADA               	clrf	fsr2h,c
  4108  00470A  04DE               	decf	postinc2,w,c
  4109  00470C  A4D8               	btfss	status,2,c
  4110  00470E  D023               	goto	u43490
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;app_sens_measure.c: 246: ACCESS_SourceSet(1);
  4114  004710  0E01               	movlw	1
  4115  004712  ECD7  F06A         	call	_ACCESS_SourceSet
  4116                           
  4117                           ;app_sens_measure.c: 248: bool ret = sensor_init(g_channel_no);
  4118  004716  0100               	movlb	0	; () banked
  4119  004718  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4120  00471A  EC65  F06A         	call	_sensor_init
  4121  00471E  0100               	movlb	0	; () banked
  4122  004720  6FCD               	movwf	sensMeasure_task@ret_4991& (0+255),b
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;app_sens_measure.c: 253: ACCESS_SourceSet(0);
  4126  004722  0E00               	movlw	0
  4127  004724  ECD7  F06A         	call	_ACCESS_SourceSet
  4128                           
  4129                           ;app_sens_measure.c: 255: if (ret == 1) {
  4130  004728  0100               	movlb	0	; () banked
  4131  00472A  05CD               	decf	sensMeasure_task@ret_4991& (0+255),w,b
  4132  00472C  A4D8               	btfss	status,2,c
  4133  00472E  D00F               	goto	l34325
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;app_sens_measure.c: 256: g_sens_measure.isSensorInit[g_channel_no] = 1;
  4137  004730  51F9               	movf	_g_channel_no& (0+255),w,b
  4138  004732  0FD6               	addlw	low (_g_sens_measure+7)
  4139  004734  6ED9               	movwf	fsr2l,c
  4140  004736  6ADA               	clrf	fsr2h,c
  4141  004738  0E01               	movlw	1
  4142  00473A  6EDF               	movwf	indf2,c
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;app_sens_measure.c: 257: g_retry_count = 0;
  4146  00473C  0E00               	movlw	0
  4147  00473E  6FF8               	movwf	_g_retry_count& (0+255),b	;volatile
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;app_sens_measure.c: 258: g_large_counter = 0;
  4151  004740  0E00               	movlw	0
  4152  004742  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4153  004744  0E00               	movlw	0
  4154  004746  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;app_sens_measure.c: 259: g_sens_measure.seq = SENS_SENSOR_INIT_NEXT;
  4158  004748  0E04               	movlw	4
  4159  00474A  6FCF               	movwf	_g_sens_measure& (0+255),b
  4160                           
  4161                           ;app_sens_measure.c: 263: } else {
  4162  00474C  0012               	return	
  4163  00474E                     l34325:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;app_sens_measure.c: 264: g_retry_count++;
  4167  00474E  2BF8               	incf	_g_retry_count& (0+255),f,b	;volatile
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;app_sens_measure.c: 265: if (g_retry_count >= 5) {
  4171  004750  0E04               	movlw	4
  4172  004752  65F8               	cpfsgt	_g_retry_count& (0+255),b	;volatile
  4173  004754  D009               	goto	l34331
  4174  004756                     u43490:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;app_sens_measure.c: 266: g_retry_count = 0;
  4178  004756  0E00               	movlw	0
  4179  004758  6FF8               	movwf	_g_retry_count& (0+255),b	;volatile
  4180                           
  4181                           ;app_sens_measure.c: 267: g_large_counter = 0;
  4182  00475A  0E00               	movlw	0
  4183  00475C  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4184  00475E  0E00               	movlw	0
  4185  004760  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4186                           
  4187                           ;app_sens_measure.c: 268: g_sens_measure.seq = SENS_SENSOR_INIT_NEXT;
  4188  004762  0E04               	movlw	4
  4189  004764  6FCF               	movwf	_g_sens_measure& (0+255),b
  4190                           
  4191                           ;app_sens_measure.c: 269: } else {
  4192  004766  0012               	return	
  4193  004768                     l34331:
  4194                           
  4195                           ;app_sens_measure.c: 270: g_large_counter = 0;
  4196  004768  0E00               	movlw	0
  4197  00476A  0100               	movlb	0	; () banked
  4198  00476C  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4199  00476E  0E00               	movlw	0
  4200  004770  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4201                           
  4202                           ;app_sens_measure.c: 271: g_sens_measure.seq_count = 10;
  4203  004772  0E0A               	movlw	10
  4204  004774  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4205                           
  4206                           ;app_sens_measure.c: 272: g_sens_measure.seq = SENS_WAIT;
  4207  004776  0E0C               	movlw	12
  4208  004778  6FCF               	movwf	_g_sens_measure& (0+255),b
  4209                           
  4210                           ;app_sens_measure.c: 273: g_sens_measure.next_seq = SENS_SENSOR_INIT;
  4211  00477A  0E03               	movlw	3
  4212  00477C  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4213  00477E  0012               	return	
  4214  004780                     l34337:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;app_sens_measure.c: 292: g_channel_no++;
  4218  004780  2BF9               	incf	_g_channel_no& (0+255),f,b	;volatile
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;app_sens_measure.c: 293: if (g_channel_no >= 2) {
  4222  004782  0E01               	movlw	1
  4223  004784  65F9               	cpfsgt	_g_channel_no& (0+255),b	;volatile
  4224  004786  D7F0               	goto	l34331
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;app_sens_measure.c: 294: g_channel_no = 0;
  4228  004788  0E00               	movlw	0
  4229  00478A  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
  4230                           
  4231                           ;app_sens_measure.c: 295: g_large_counter = 500 - 10;
  4232  00478C  0E01               	movlw	1
  4233  00478E  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4234  004790  0EEA               	movlw	234
  4235  004792  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4236                           
  4237                           ;app_sens_measure.c: 296: g_sens_measure.seq = SENS_READY;
  4238  004794  0E05               	movlw	5
  4239  004796  6FCF               	movwf	_g_sens_measure& (0+255),b
  4240                           
  4241                           ;app_sens_measure.c: 302: } else {
  4242  004798  0012               	return	
  4243  00479A                     l34345:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;app_sens_measure.c: 311: if (USBDeviceState == CONFIGURED_STATE || g_nvm.flash.sensing_
      +                          on == SENSING_ON) {
  4247  00479A  0E20               	movlw	32
  4248  00479C  19FA               	xorwf	_USBDeviceState& (0+255),w,b
  4249  00479E  B4D8               	btfsc	status,2,c
  4250  0047A0  D004               	goto	u43520
  4251                           
  4252                           ; BSR set to: 0
  4253  0047A2  0101               	movlb	1	; () banked
  4254  0047A4  0553               	decf	(_g_nvm+1)& (0+255),w,b
  4255  0047A6  A4D8               	btfss	status,2,c
  4256  0047A8  0012               	return	
  4257  0047AA                     u43520:
  4258                           
  4259                           ;app_sens_measure.c: 320: if (g_large_counter >= 500) {
  4260  0047AA  0EF4               	movlw	244
  4261  0047AC  0100               	movlb	0	; () banked
  4262  0047AE  5DE0               	subwf	_g_large_counter& (0+255),w,b	;volatile
  4263  0047B0  0E01               	movlw	1
  4264  0047B2  59E1               	subwfb	(_g_large_counter+1)& (0+255),w,b	;volatile
  4265  0047B4  A0D8               	btfss	status,0,c
  4266  0047B6  0012               	return	
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;app_sens_measure.c: 321: g_large_counter = 0;
  4270  0047B8  0E00               	movlw	0
  4271  0047BA  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4272  0047BC  0E00               	movlw	0
  4273  0047BE  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4274                           
  4275                           ;app_sens_measure.c: 322: if (g_sens_measure.existChannel[0] && g_sens_measure.isChecksu
      +                          m[0] && g_sens_measure.isSensorInit[0]) {
  4276  0047C0  51D2               	movf	(_g_sens_measure+3)& (0+255),w,b
  4277  0047C2  B4D8               	btfsc	status,2,c
  4278  0047C4  D00B               	goto	l34359
  4279                           
  4280                           ; BSR set to: 0
  4281  0047C6  51D4               	movf	(_g_sens_measure+5)& (0+255),w,b
  4282  0047C8  B4D8               	btfsc	status,2,c
  4283  0047CA  D008               	goto	l34359
  4284                           
  4285                           ; BSR set to: 0
  4286  0047CC  51D6               	movf	(_g_sens_measure+7)& (0+255),w,b
  4287  0047CE  B4D8               	btfsc	status,2,c
  4288  0047D0  D005               	goto	l34359
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;app_sens_measure.c: 323: g_channel_no = 0;
  4292  0047D2  0E00               	movlw	0
  4293  0047D4  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
  4294                           
  4295                           ;app_sens_measure.c: 324: g_sens_measure.seq = SENS_CHANGE_TEMP;
  4296  0047D6  0E06               	movlw	6
  4297  0047D8  6FCF               	movwf	_g_sens_measure& (0+255),b
  4298                           
  4299                           ;app_sens_measure.c: 325: } else {
  4300  0047DA  0012               	return	
  4301  0047DC                     l34359:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;app_sens_measure.c: 326: if (g_sens_measure.existChannel[1] && g_sens_measure.isChecksu
      +                          m[1] && g_sens_measure.isSensorInit[1]) {
  4305  0047DC  51D3               	movf	(_g_sens_measure+4)& (0+255),w,b
  4306  0047DE  B4D8               	btfsc	status,2,c
  4307  0047E0  0012               	return	
  4308                           
  4309                           ; BSR set to: 0
  4310  0047E2  51D5               	movf	(_g_sens_measure+6)& (0+255),w,b
  4311  0047E4  B4D8               	btfsc	status,2,c
  4312  0047E6  0012               	return	
  4313                           
  4314                           ; BSR set to: 0
  4315  0047E8  51D7               	movf	(_g_sens_measure+8)& (0+255),w,b
  4316  0047EA  B4D8               	btfsc	status,2,c
  4317  0047EC  0012               	return	
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;app_sens_measure.c: 327: g_channel_no = 1;
  4321  0047EE  0E01               	movlw	1
  4322  0047F0  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
  4323                           
  4324                           ;app_sens_measure.c: 328: g_sens_measure.seq = SENS_CHANGE_TEMP;
  4325  0047F2  0E06               	movlw	6
  4326  0047F4  6FCF               	movwf	_g_sens_measure& (0+255),b
  4327  0047F6  0012               	return	
  4328  0047F8                     l34367:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;app_sens_measure.c: 335: if (I2C_Bus_SourceGet() && !ACCESS_SourceGet()) {
  4332  0047F8  EC40  F06F         	call	_I2C_Bus_SourceGet	;wreg free
  4333  0047FC  0900               	iorlw	0
  4334  0047FE  B4D8               	btfsc	status,2,c
  4335  004800  D034               	goto	l34387
  4336  004802  EC4C  F06F         	call	_ACCESS_SourceGet	;wreg free
  4337  004806  0900               	iorlw	0
  4338  004808  A4D8               	btfss	status,2,c
  4339  00480A  D02F               	goto	l34387
  4340                           
  4341                           ;app_sens_measure.c: 339: ACCESS_SourceSet(1);
  4342  00480C  0E01               	movlw	1
  4343  00480E  ECD7  F06A         	call	_ACCESS_SourceSet
  4344                           
  4345                           ;app_sens_measure.c: 341: if (g_sens_measure.isChecksum[g_channel_no] && g_sens_measure.
      +                          isSensorInit[g_channel_no] &&;app_sens_measure.c: 342: sensor_set_temp_mode(g_channel_no
      +                          )) {
  4346  004812  0100               	movlb	0	; () banked
  4347  004814  51F9               	movf	_g_channel_no& (0+255),w,b
  4348  004816  0FD4               	addlw	low (_g_sens_measure+5)
  4349  004818  6ED9               	movwf	fsr2l,c
  4350  00481A  6ADA               	clrf	fsr2h,c
  4351  00481C  50DF               	movf	indf2,w,c
  4352  00481E  B4D8               	btfsc	status,2,c
  4353  004820  D019               	goto	l34381
  4354                           
  4355                           ; BSR set to: 0
  4356  004822  51F9               	movf	_g_channel_no& (0+255),w,b
  4357  004824  0FD6               	addlw	low (_g_sens_measure+7)
  4358  004826  6ED9               	movwf	fsr2l,c
  4359  004828  6ADA               	clrf	fsr2h,c
  4360  00482A  50DF               	movf	indf2,w,c
  4361  00482C  B4D8               	btfsc	status,2,c
  4362  00482E  D012               	goto	l34381
  4363                           
  4364                           ; BSR set to: 0
  4365  004830  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4366  004832  EC9F  F06A         	call	_sensor_set_temp_mode
  4367  004836  0900               	iorlw	0
  4368  004838  B4D8               	btfsc	status,2,c
  4369  00483A  D00C               	goto	l34381
  4370                           
  4371                           ;app_sens_measure.c: 343: g_large_counter = 0;
  4372  00483C  0E00               	movlw	0
  4373  00483E  0100               	movlb	0	; () banked
  4374  004840  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4375  004842  0E00               	movlw	0
  4376  004844  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4377                           
  4378                           ;app_sens_measure.c: 344: g_sens_measure.seq_count = 5;
  4379  004846  0E05               	movlw	5
  4380  004848  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4381                           
  4382                           ;app_sens_measure.c: 345: g_sens_measure.seq = SENS_WAIT;
  4383  00484A  0E0C               	movlw	12
  4384  00484C  6FCF               	movwf	_g_sens_measure& (0+255),b
  4385                           
  4386                           ;app_sens_measure.c: 346: g_sens_measure.next_seq = SENS_TEMP_MEASURE;
  4387  00484E  0E07               	movlw	7
  4388  004850  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4389                           
  4390                           ;app_sens_measure.c: 350: } else {
  4391  004852  0012               	return	
  4392  004854                     l34381:
  4393                           
  4394                           ;app_sens_measure.c: 354: ACCESS_SourceSet(0);
  4395  004854  0E00               	movlw	0
  4396  004856  ECD7  F06A         	call	_ACCESS_SourceSet
  4397  00485A                     l34383:
  4398                           
  4399                           ;app_sens_measure.c: 358: g_large_counter = 0;
  4400  00485A  0E00               	movlw	0
  4401  00485C  0100               	movlb	0	; () banked
  4402  00485E  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4403  004860  0E00               	movlw	0
  4404  004862  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;app_sens_measure.c: 359: g_sens_measure.seq = SENS_NEXT;
  4408  004864  0E0B               	movlw	11
  4409  004866  6FCF               	movwf	_g_sens_measure& (0+255),b
  4410  004868  0012               	return	
  4411  00486A                     l34387:
  4412                           
  4413                           ;app_sens_measure.c: 362: g_large_counter = 0;
  4414  00486A  0E00               	movlw	0
  4415  00486C  0100               	movlb	0	; () banked
  4416  00486E  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4417  004870  0E00               	movlw	0
  4418  004872  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4419                           
  4420                           ;app_sens_measure.c: 363: g_sens_measure.seq_count = 10;
  4421  004874  0E0A               	movlw	10
  4422  004876  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4423                           
  4424                           ;app_sens_measure.c: 364: g_sens_measure.seq = SENS_WAIT;
  4425  004878  0E0C               	movlw	12
  4426  00487A  6FCF               	movwf	_g_sens_measure& (0+255),b
  4427                           
  4428                           ;app_sens_measure.c: 365: g_sens_measure.next_seq = SENS_CHANGE_TEMP;
  4429  00487C  0E06               	movlw	6
  4430  00487E  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4431  004880  0012               	return	
  4432  004882                     l34389:
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;app_sens_measure.c: 369: if (sensMeasure_temp_read(g_channel_no)) {
  4436  004882  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4437  004884  EC05  F05A         	call	_sensMeasure_temp_read
  4438  004888  0900               	iorlw	0
  4439  00488A  B4D8               	btfsc	status,2,c
  4440  00488C  D00C               	goto	l34393
  4441                           
  4442                           ;app_sens_measure.c: 370: g_large_counter = 0;
  4443  00488E  0E00               	movlw	0
  4444  004890  0100               	movlb	0	; () banked
  4445  004892  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4446  004894  0E00               	movlw	0
  4447  004896  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4448                           
  4449                           ;app_sens_measure.c: 371: g_sens_measure.seq_count = 2;
  4450  004898  0E02               	movlw	2
  4451  00489A  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4452                           
  4453                           ;app_sens_measure.c: 372: g_sens_measure.seq = SENS_WAIT;
  4454  00489C  0E0C               	movlw	12
  4455  00489E  6FCF               	movwf	_g_sens_measure& (0+255),b
  4456                           
  4457                           ;app_sens_measure.c: 373: g_sens_measure.next_seq = SENS_CHANGE_GAS;
  4458  0048A0  0E08               	movlw	8
  4459  0048A2  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4460                           
  4461                           ;app_sens_measure.c: 374: } else {
  4462  0048A4  D007               	goto	l34395
  4463  0048A6                     l34393:
  4464                           
  4465                           ;app_sens_measure.c: 378: g_large_counter = 0;
  4466  0048A6  0E00               	movlw	0
  4467  0048A8  0100               	movlb	0	; () banked
  4468  0048AA  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4469  0048AC  0E00               	movlw	0
  4470  0048AE  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4471                           
  4472                           ;app_sens_measure.c: 379: g_sens_measure.seq = SENS_NEXT;
  4473  0048B0  0E0B               	movlw	11
  4474  0048B2  6FCF               	movwf	_g_sens_measure& (0+255),b
  4475  0048B4                     l34395:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;app_sens_measure.c: 380: };app_sens_measure.c: 385: ACCESS_SourceSet(0);
  4479  0048B4  0E00               	movlw	0
  4480  0048B6  ECD7  F06A         	call	_ACCESS_SourceSet
  4481                           
  4482                           ;app_sens_measure.c: 387: break;
  4483  0048BA  0012               	return	
  4484  0048BC                     l34397:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;app_sens_measure.c: 389: if (I2C_Bus_SourceGet() && !ACCESS_SourceGet()) {
  4488  0048BC  EC40  F06F         	call	_I2C_Bus_SourceGet	;wreg free
  4489  0048C0  0900               	iorlw	0
  4490  0048C2  B4D8               	btfsc	status,2,c
  4491  0048C4  D034               	goto	l34415
  4492  0048C6  EC4C  F06F         	call	_ACCESS_SourceGet	;wreg free
  4493  0048CA  0900               	iorlw	0
  4494  0048CC  A4D8               	btfss	status,2,c
  4495  0048CE  D02F               	goto	l34415
  4496                           
  4497                           ;app_sens_measure.c: 393: ACCESS_SourceSet(1);
  4498  0048D0  0E01               	movlw	1
  4499  0048D2  ECD7  F06A         	call	_ACCESS_SourceSet
  4500                           
  4501                           ;app_sens_measure.c: 395: if (g_sens_measure.isChecksum[g_channel_no] && g_sens_measure.
      +                          isSensorInit[g_channel_no] &&;app_sens_measure.c: 396: sensor_set_gas_mode(g_channel_no)
      +                          ) {
  4502  0048D6  0100               	movlb	0	; () banked
  4503  0048D8  51F9               	movf	_g_channel_no& (0+255),w,b
  4504  0048DA  0FD4               	addlw	low (_g_sens_measure+5)
  4505  0048DC  6ED9               	movwf	fsr2l,c
  4506  0048DE  6ADA               	clrf	fsr2h,c
  4507  0048E0  50DF               	movf	indf2,w,c
  4508  0048E2  B4D8               	btfsc	status,2,c
  4509  0048E4  D019               	goto	l34411
  4510                           
  4511                           ; BSR set to: 0
  4512  0048E6  51F9               	movf	_g_channel_no& (0+255),w,b
  4513  0048E8  0FD6               	addlw	low (_g_sens_measure+7)
  4514  0048EA  6ED9               	movwf	fsr2l,c
  4515  0048EC  6ADA               	clrf	fsr2h,c
  4516  0048EE  50DF               	movf	indf2,w,c
  4517  0048F0  B4D8               	btfsc	status,2,c
  4518  0048F2  D012               	goto	l34411
  4519                           
  4520                           ; BSR set to: 0
  4521  0048F4  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4522  0048F6  ECBB  F06A         	call	_sensor_set_gas_mode
  4523  0048FA  0900               	iorlw	0
  4524  0048FC  B4D8               	btfsc	status,2,c
  4525  0048FE  D00C               	goto	l34411
  4526                           
  4527                           ;app_sens_measure.c: 397: g_large_counter = 0;
  4528  004900  0E00               	movlw	0
  4529  004902  0100               	movlb	0	; () banked
  4530  004904  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4531  004906  0E00               	movlw	0
  4532  004908  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4533                           
  4534                           ;app_sens_measure.c: 398: g_sens_measure.seq_count = 6;
  4535  00490A  0E06               	movlw	6
  4536  00490C  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4537                           
  4538                           ;app_sens_measure.c: 399: g_sens_measure.seq = SENS_WAIT;
  4539  00490E  0E0C               	movlw	12
  4540  004910  6FCF               	movwf	_g_sens_measure& (0+255),b
  4541                           
  4542                           ;app_sens_measure.c: 400: g_sens_measure.next_seq = SENS_GAS_MEASURE;
  4543  004912  0E09               	movlw	9
  4544  004914  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4545                           
  4546                           ;app_sens_measure.c: 401: } else {
  4547  004916  0012               	return	
  4548  004918                     l34411:
  4549                           
  4550                           ;app_sens_measure.c: 405: g_large_counter = 0;
  4551  004918  0E00               	movlw	0
  4552  00491A  0100               	movlb	0	; () banked
  4553  00491C  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4554  00491E  0E00               	movlw	0
  4555  004920  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4556                           
  4557                           ;app_sens_measure.c: 406: g_sens_measure.seq = SENS_NEXT;
  4558  004922  0E0B               	movlw	11
  4559  004924  6FCF               	movwf	_g_sens_measure& (0+255),b
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;app_sens_measure.c: 410: ACCESS_SourceSet(0);
  4563  004926  0E00               	movlw	0
  4564  004928  ECD7  F06A         	call	_ACCESS_SourceSet
  4565  00492C  0012               	return	
  4566  00492E                     l34415:
  4567                           
  4568                           ;app_sens_measure.c: 413: g_large_counter = 0;
  4569  00492E  0E00               	movlw	0
  4570  004930  0100               	movlb	0	; () banked
  4571  004932  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4572  004934  0E00               	movlw	0
  4573  004936  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4574                           
  4575                           ;app_sens_measure.c: 414: g_sens_measure.seq_count = 10;
  4576  004938  0E0A               	movlw	10
  4577  00493A  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4578                           
  4579                           ;app_sens_measure.c: 415: g_sens_measure.seq = SENS_WAIT;
  4580  00493C  0E0C               	movlw	12
  4581  00493E  6FCF               	movwf	_g_sens_measure& (0+255),b
  4582                           
  4583                           ;app_sens_measure.c: 416: g_sens_measure.next_seq = SENS_CHANGE_GAS;
  4584  004940  0E08               	movlw	8
  4585  004942  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4586  004944  0012               	return	
  4587  004946                     l34417:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;app_sens_measure.c: 420: if (sensMeasure_gas_read(g_channel_no)) {
  4591  004946  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4592  004948  EC06  F04A         	call	_sensMeasure_gas_read
  4593  00494C  0900               	iorlw	0
  4594  00494E  B4D8               	btfsc	status,2,c
  4595  004950  D007               	goto	l34421
  4596                           
  4597                           ;app_sens_measure.c: 421: g_large_counter = 0;
  4598  004952  0E00               	movlw	0
  4599  004954  0100               	movlb	0	; () banked
  4600  004956  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4601  004958  0E00               	movlw	0
  4602  00495A  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4603                           
  4604                           ;app_sens_measure.c: 422: g_sens_measure.seq = SENS_APPLY;
  4605  00495C  0E0A               	movlw	10
  4606  00495E  D006               	goto	L1
  4607  004960                     l34421:
  4608                           
  4609                           ;app_sens_measure.c: 427: g_large_counter = 0;
  4610  004960  0E00               	movlw	0
  4611  004962  0100               	movlb	0	; () banked
  4612  004964  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4613  004966  0E00               	movlw	0
  4614  004968  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4615                           
  4616                           ;app_sens_measure.c: 428: g_sens_measure.seq = SENS_NEXT;
  4617  00496A  0E0B               	movlw	11
  4618  00496C                     L1:
  4619  00496C  6FCF               	movwf	_g_sens_measure& (0+255),b
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;app_sens_measure.c: 429: };app_sens_measure.c: 434: ACCESS_SourceSet(0);
  4623  00496E  0E00               	movlw	0
  4624  004970  ECD7  F06A         	call	_ACCESS_SourceSet
  4625                           
  4626                           ;app_sens_measure.c: 436: break;
  4627  004974  0012               	return	
  4628  004976                     l34425:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;app_sens_measure.c: 438: if (g_nvm.eeprm[g_channel_no].sensor_model >= NH3_100 && g_nvm
      +                          .eeprm[g_channel_no].sensor_model <= H2S_50) {
  4632  004976  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4633  004978  0D3E               	mullw	62
  4634  00497A  0E71               	movlw	low (_g_nvm+31)
  4635  00497C  24F3               	addwf	243,w,c
  4636  00497E  6ED9               	movwf	fsr2l,c
  4637  004980  0E01               	movlw	high (_g_nvm+31)
  4638  004982  20F4               	addwfc	prodh,w,c
  4639  004984  6EDA               	movwf	fsr2h,c
  4640  004986  50DF               	movf	indf2,w,c
  4641  004988  B4D8               	btfsc	status,2,c
  4642  00498A  D09B               	goto	l34439
  4643                           
  4644                           ; BSR set to: 0
  4645  00498C  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4646  00498E  0D3E               	mullw	62
  4647  004990  0E71               	movlw	low (_g_nvm+31)
  4648  004992  24F3               	addwf	243,w,c
  4649  004994  6ED9               	movwf	fsr2l,c
  4650  004996  0E01               	movlw	high (_g_nvm+31)
  4651  004998  20F4               	addwfc	prodh,w,c
  4652  00499A  6EDA               	movwf	fsr2h,c
  4653  00499C  0E03               	movlw	3
  4654  00499E  60DF               	cpfslt	indf2,c
  4655  0049A0  D090               	goto	l34439
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;app_sens_measure.c: 439: g_last_value[g_channel_no][LV_GAS_VOLT] = g_temp_value[LV_GAS_
      +                          VOLT];
  4659  0049A2  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4660  0049A4  0D0C               	mullw	12
  4661  0049A6  0E00               	movlw	low _g_last_value
  4662  0049A8  24F3               	addwf	243,w,c
  4663  0049AA  6ED9               	movwf	fsr2l,c
  4664  0049AC  0E01               	movlw	high _g_last_value
  4665  0049AE  20F4               	addwfc	prodh,w,c
  4666  0049B0  6EDA               	movwf	fsr2h,c
  4667  0049B2  C118  FFDE         	movff	_g_temp_value,postinc2
  4668  0049B6  C119  FFDE         	movff	_g_temp_value+1,postinc2
  4669  0049BA  C11A  FFDE         	movff	_g_temp_value+2,postinc2
  4670  0049BE  C11B  FFDE         	movff	_g_temp_value+3,postinc2
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;app_sens_measure.c: 441: g_last_value[g_channel_no][LV_GAS_PPM] = ewmaFilter_get(&ewmaF
      +                          ilter[g_channel_no], g_temp_value[LV_GAS_PPM], g_nvm.eeprm[g_channel_no].window_size);
  4674  0049C2  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4675  0049C4  0D05               	mullw	5
  4676  0049C6  0EEA               	movlw	low _ewmaFilter
  4677  0049C8  24F3               	addwf	243,w,c
  4678  0049CA  6F7D               	movwf	ewmaFilter_get@ewmaFilter& (0+255),b
  4679  0049CC  0E02               	movlw	high _ewmaFilter
  4680  0049CE  20F4               	addwfc	prodh,w,c
  4681  0049D0  6F7E               	movwf	(ewmaFilter_get@ewmaFilter+1)& (0+255),b
  4682  0049D2  C11C  F07F         	movff	_g_temp_value+4,ewmaFilter_get@inputValue
  4683  0049D6  C11D  F080         	movff	_g_temp_value+5,ewmaFilter_get@inputValue+1
  4684  0049DA  C11E  F081         	movff	_g_temp_value+6,ewmaFilter_get@inputValue+2
  4685  0049DE  C11F  F082         	movff	_g_temp_value+7,ewmaFilter_get@inputValue+3
  4686  0049E2  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4687  0049E4  0D3E               	mullw	62
  4688  0049E6  0E77               	movlw	low (_g_nvm+37)
  4689  0049E8  24F3               	addwf	243,w,c
  4690  0049EA  6ED9               	movwf	fsr2l,c
  4691  0049EC  0E01               	movlw	high (_g_nvm+37)
  4692  0049EE  20F4               	addwfc	prodh,w,c
  4693  0049F0  6EDA               	movwf	fsr2h,c
  4694  0049F2  50DF               	movf	indf2,w,c
  4695  0049F4  6F83               	movwf	ewmaFilter_get@sensitivity& (0+255),b
  4696  0049F6  EC02  F048         	call	_ewmaFilter_get	;wreg free
  4697  0049FA  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4698  0049FC  0D0C               	mullw	12
  4699  0049FE  0E04               	movlw	low (_g_last_value+4)
  4700  004A00  24F3               	addwf	243,w,c
  4701  004A02  6ED9               	movwf	fsr2l,c
  4702  004A04  0E01               	movlw	high (_g_last_value+4)
  4703  004A06  20F4               	addwfc	prodh,w,c
  4704  004A08  6EDA               	movwf	fsr2h,c
  4705  004A0A  C07D  FFDE         	movff	?_ewmaFilter_get,postinc2
  4706  004A0E  C07E  FFDE         	movff	?_ewmaFilter_get+1,postinc2
  4707  004A12  C07F  FFDE         	movff	?_ewmaFilter_get+2,postinc2
  4708  004A16  C080  FFDE         	movff	?_ewmaFilter_get+3,postinc2
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;app_sens_measure.c: 442: g_last_value[g_channel_no][LV_GAS_PPM] += g_nvm.eeprm[g_channe
      +                          l_no].gasOffset;
  4712  004A1A  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4713  004A1C  0D0C               	mullw	12
  4714  004A1E  0E04               	movlw	low (_g_last_value+4)
  4715  004A20  24F3               	addwf	243,w,c
  4716  004A22  6ED9               	movwf	fsr2l,c
  4717  004A24  0E01               	movlw	high (_g_last_value+4)
  4718  004A26  20F4               	addwfc	prodh,w,c
  4719  004A28  6EDA               	movwf	fsr2h,c
  4720  004A2A  CFDE F028          	movff	postinc2,___fladd@b
  4721  004A2E  CFDE F029          	movff	postinc2,___fladd@b+1
  4722  004A32  CFDE F02A          	movff	postinc2,___fladd@b+2
  4723  004A36  CFDE F02B          	movff	postinc2,___fladd@b+3
  4724  004A3A  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4725  004A3C  0D3E               	mullw	62
  4726  004A3E  0E8E               	movlw	low (_g_nvm+60)
  4727  004A40  24F3               	addwf	243,w,c
  4728  004A42  6ED9               	movwf	fsr2l,c
  4729  004A44  0E01               	movlw	high (_g_nvm+60)
  4730  004A46  20F4               	addwfc	prodh,w,c
  4731  004A48  6EDA               	movwf	fsr2h,c
  4732  004A4A  CFDE F02C          	movff	postinc2,___fladd@a
  4733  004A4E  CFDE F02D          	movff	postinc2,___fladd@a+1
  4734  004A52  CFDE F02E          	movff	postinc2,___fladd@a+2
  4735  004A56  CFDE F02F          	movff	postinc2,___fladd@a+3
  4736  004A5A  ECBF  F031         	call	___fladd	;wreg free
  4737  004A5E  0100               	movlb	0	; () banked
  4738  004A60  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4739  004A62  0D0C               	mullw	12
  4740  004A64  0E04               	movlw	low (_g_last_value+4)
  4741  004A66  24F3               	addwf	243,w,c
  4742  004A68  6ED9               	movwf	fsr2l,c
  4743  004A6A  0E01               	movlw	high (_g_last_value+4)
  4744  004A6C  20F4               	addwfc	prodh,w,c
  4745  004A6E  6EDA               	movwf	fsr2h,c
  4746  004A70  C028  FFDE         	movff	?___fladd,postinc2
  4747  004A74  C029  FFDE         	movff	?___fladd+1,postinc2
  4748  004A78  C02A  FFDE         	movff	?___fladd+2,postinc2
  4749  004A7C  C02B  FFDE         	movff	?___fladd+3,postinc2
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;app_sens_measure.c: 446: g_modbus_value.float_value[g_channel_no] = g_last_value[g_chan
      +                          nel_no][LV_GAS_PPM];
  4753  004A80  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4754  004A82  0D0C               	mullw	12
  4755  004A84  0E04               	movlw	low (_g_last_value+4)
  4756  004A86  24F3               	addwf	243,w,c
  4757  004A88  6ED9               	movwf	fsr2l,c
  4758  004A8A  0E01               	movlw	high (_g_last_value+4)
  4759  004A8C  20F4               	addwfc	prodh,w,c
  4760  004A8E  6EDA               	movwf	fsr2h,c
  4761  004A90  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4762  004A92  0D04               	mullw	4
  4763  004A94  0EDA               	movlw	low _g_modbus_value
  4764  004A96  24F3               	addwf	243,w,c
  4765  004A98  6EE1               	movwf	fsr1l,c
  4766  004A9A  0E02               	movlw	high _g_modbus_value
  4767  004A9C  20F4               	addwfc	prodh,w,c
  4768  004A9E  6EE2               	movwf	fsr1h,c
  4769  004AA0  CFDE FFE6          	movff	postinc2,postinc1
  4770  004AA4  CFDE FFE6          	movff	postinc2,postinc1
  4771  004AA8  CFDE FFE6          	movff	postinc2,postinc1
  4772  004AAC  CFDE FFE6          	movff	postinc2,postinc1
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;app_sens_measure.c: 447: g_last_value[g_channel_no][LV_TEMP] = g_temp_value[LV_TEMP];
  4776  004AB0  EE21  F020         	lfsr	2,_g_temp_value+8
  4777  004AB4  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4778  004AB6  0D0C               	mullw	12
  4779  004AB8  0E08               	movlw	low (_g_last_value+8)
  4780  004ABA  24F3               	addwf	243,w,c
  4781  004ABC  6EE1               	movwf	fsr1l,c
  4782  004ABE  0E01               	movlw	high (_g_last_value+8)
  4783  004AC0  D03A               	goto	L2
  4784  004AC2                     l34439:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;app_sens_measure.c: 449: g_last_value[g_channel_no][LV_TEMP] = g_last_value[g_channel_n
      +                          o][LV_GAS_VOLT] = -999995.0f;
  4788  004AC2  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4789  004AC4  0D0C               	mullw	12
  4790  004AC6  0E00               	movlw	low _g_last_value
  4791  004AC8  24F3               	addwf	243,w,c
  4792  004ACA  6ED9               	movwf	fsr2l,c
  4793  004ACC  0E01               	movlw	high _g_last_value
  4794  004ACE  20F4               	addwfc	prodh,w,c
  4795  004AD0  6EDA               	movwf	fsr2h,c
  4796  004AD2  0EB0               	movlw	176
  4797  004AD4  6EDE               	movwf	postinc2,c
  4798  004AD6  0E23               	movlw	35
  4799  004AD8  6EDE               	movwf	postinc2,c
  4800  004ADA  0E74               	movlw	116
  4801  004ADC  6EDE               	movwf	postinc2,c
  4802  004ADE  0EC9               	movlw	201
  4803  004AE0  6EDD               	movwf	postdec2,c
  4804  004AE2  52DD               	movf	postdec2,f,c
  4805  004AE4  52DD               	movf	postdec2,f,c
  4806  004AE6  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4807  004AE8  0D0C               	mullw	12
  4808  004AEA  0E08               	movlw	low (_g_last_value+8)
  4809  004AEC  24F3               	addwf	243,w,c
  4810  004AEE  6EE1               	movwf	fsr1l,c
  4811  004AF0  0E01               	movlw	high (_g_last_value+8)
  4812  004AF2  20F4               	addwfc	prodh,w,c
  4813  004AF4  6EE2               	movwf	fsr1h,c
  4814  004AF6  CFDE FFE6          	movff	postinc2,postinc1
  4815  004AFA  CFDE FFE6          	movff	postinc2,postinc1
  4816  004AFE  CFDE FFE6          	movff	postinc2,postinc1
  4817  004B02  CFDE FFE6          	movff	postinc2,postinc1
  4818                           
  4819                           ;app_sens_measure.c: 450: g_modbus_value.float_value[g_channel_no] = g_last_value[g_chan
      +                          nel_no][LV_GAS_PPM] = -999995.0f;
  4820  004B06  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4821  004B08  0D0C               	mullw	12
  4822  004B0A  0E04               	movlw	low (_g_last_value+4)
  4823  004B0C  24F3               	addwf	243,w,c
  4824  004B0E  6ED9               	movwf	fsr2l,c
  4825  004B10  0E01               	movlw	high (_g_last_value+4)
  4826  004B12  20F4               	addwfc	prodh,w,c
  4827  004B14  6EDA               	movwf	fsr2h,c
  4828  004B16  0EB0               	movlw	176
  4829  004B18  6EDE               	movwf	postinc2,c
  4830  004B1A  0E23               	movlw	35
  4831  004B1C  6EDE               	movwf	postinc2,c
  4832  004B1E  0E74               	movlw	116
  4833  004B20  6EDE               	movwf	postinc2,c
  4834  004B22  0EC9               	movlw	201
  4835  004B24  6EDD               	movwf	postdec2,c
  4836  004B26  52DD               	movf	postdec2,f,c
  4837  004B28  52DD               	movf	postdec2,f,c
  4838  004B2A  51F9               	movf	_g_channel_no& (0+255),w,b	;volatile
  4839  004B2C  0D04               	mullw	4
  4840  004B2E  0EDA               	movlw	low _g_modbus_value
  4841  004B30  24F3               	addwf	243,w,c
  4842  004B32  6EE1               	movwf	fsr1l,c
  4843  004B34  0E02               	movlw	high _g_modbus_value
  4844  004B36                     L2:
  4845  004B36  20F4               	addwfc	prodh,w,c
  4846  004B38  6EE2               	movwf	fsr1h,c
  4847  004B3A  CFDE FFE6          	movff	postinc2,postinc1
  4848  004B3E  CFDE FFE6          	movff	postinc2,postinc1
  4849  004B42  CFDE FFE6          	movff	postinc2,postinc1
  4850  004B46  CFDE FFE6          	movff	postinc2,postinc1
  4851  004B4A  D687               	goto	l34383
  4852  004B4C                     l34445:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;app_sens_measure.c: 456: g_channel_no++;
  4856  004B4C  2BF9               	incf	_g_channel_no& (0+255),f,b	;volatile
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;app_sens_measure.c: 457: if (g_channel_no >= 2) {
  4860  004B4E  0E01               	movlw	1
  4861  004B50  65F9               	cpfsgt	_g_channel_no& (0+255),b	;volatile
  4862  004B52  D009               	goto	l34451
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;app_sens_measure.c: 458: g_channel_no = 0;
  4866  004B54  0E00               	movlw	0
  4867  004B56  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
  4868                           
  4869                           ;app_sens_measure.c: 459: g_large_counter = 0;
  4870  004B58  0E00               	movlw	0
  4871  004B5A  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4872  004B5C  0E00               	movlw	0
  4873  004B5E  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4874                           
  4875                           ;app_sens_measure.c: 460: g_sens_measure.seq = SENS_DISPLAY;
  4876  004B60  0E0D               	movlw	13
  4877  004B62  6FCF               	movwf	_g_sens_measure& (0+255),b
  4878                           
  4879                           ;app_sens_measure.c: 461: } else {
  4880  004B64  0012               	return	
  4881  004B66                     l34451:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;app_sens_measure.c: 462: g_large_counter = 0;
  4885  004B66  0E00               	movlw	0
  4886  004B68  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4887  004B6A  0E00               	movlw	0
  4888  004B6C  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4889                           
  4890                           ;app_sens_measure.c: 463: g_sens_measure.seq_count = 2;
  4891  004B6E  0E02               	movlw	2
  4892  004B70  6FD1               	movwf	(_g_sens_measure+2)& (0+255),b
  4893                           
  4894                           ;app_sens_measure.c: 464: g_sens_measure.seq = SENS_WAIT;
  4895  004B72  0E0C               	movlw	12
  4896  004B74  6FCF               	movwf	_g_sens_measure& (0+255),b
  4897                           
  4898                           ;app_sens_measure.c: 465: g_sens_measure.next_seq = SENS_CHANGE_TEMP;
  4899  004B76  0E06               	movlw	6
  4900  004B78  6FD0               	movwf	(_g_sens_measure+1)& (0+255),b
  4901  004B7A  0012               	return	
  4902  004B7C                     l34453:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;app_sens_measure.c: 469: if (g_large_counter >= g_sens_measure.seq_count) {
  4906  004B7C  51D1               	movf	(_g_sens_measure+2)& (0+255),w,b
  4907  004B7E  6FCA               	movwf	??_sensMeasure_task& (0+255),b
  4908  004B80  6BCB               	clrf	(??_sensMeasure_task+1)& (0+255),b
  4909  004B82  51CA               	movf	??_sensMeasure_task& (0+255),w,b
  4910  004B84  5DE0               	subwf	_g_large_counter& (0+255),w,b	;volatile
  4911  004B86  51CB               	movf	(??_sensMeasure_task+1)& (0+255),w,b
  4912  004B88  59E1               	subwfb	(_g_large_counter+1)& (0+255),w,b	;volatile
  4913  004B8A  A0D8               	btfss	status,0,c
  4914  004B8C  0012               	return	
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;app_sens_measure.c: 470: g_large_counter = 0;
  4918  004B8E  0E00               	movlw	0
  4919  004B90  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4920  004B92  0E00               	movlw	0
  4921  004B94  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;app_sens_measure.c: 471: g_sens_measure.seq = g_sens_measure.next_seq;
  4925  004B96  C0D0  F0CF         	movff	_g_sens_measure+1,_g_sens_measure
  4926  004B9A  0012               	return	
  4927  004B9C                     l34459:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;app_sens_measure.c: 475: {;app_sens_measure.c: 492: g_retry_count = 0;
  4931  004B9C  0E00               	movlw	0
  4932  004B9E  6FF8               	movwf	_g_retry_count& (0+255),b	;volatile
  4933                           
  4934                           ;app_sens_measure.c: 493: g_channel_no = 0;
  4935  004BA0  0E00               	movlw	0
  4936  004BA2  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
  4937                           
  4938                           ;app_sens_measure.c: 494: g_large_counter = 0;
  4939  004BA4  0E00               	movlw	0
  4940  004BA6  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4941  004BA8  0E00               	movlw	0
  4942  004BAA  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
  4943                           
  4944                           ;app_sens_measure.c: 495: g_sens_measure.seq = SENS_READY;
  4945  004BAC  0E05               	movlw	5
  4946  004BAE  6FCF               	movwf	_g_sens_measure& (0+255),b
  4947                           
  4948                           ;app_sens_measure.c: 496: };app_sens_measure.c: 497: break;
  4949  004BB0  0012               	return	
  4950  004BB2                     l34463:
  4951  004BB2  0100               	movlb	0	; () banked
  4952  004BB4  51CF               	movf	_g_sens_measure& (0+255),w,b
  4953                           
  4954                           ; Switch size 1, requested type "simple"
  4955                           ; Number of cases is 14, Range of values is 0 to 13
  4956                           ; switch strategies available:
  4957                           ; Name         Instructions Cycles
  4958                           ; simple_byte           43    22 (average)
  4959                           ;	Chosen strategy is simple_byte
  4960  004BB6  0A00               	xorlw	0	; case 0
  4961  004BB8  B4D8               	btfsc	status,2,c
  4962  004BBA  D4F2               	goto	l34247
  4963  004BBC  0A01               	xorlw	1	; case 1
  4964  004BBE  B4D8               	btfsc	status,2,c
  4965  004BC0  D500               	goto	l34251
  4966  004BC2  0A03               	xorlw	3	; case 2
  4967  004BC4  B4D8               	btfsc	status,2,c
  4968  004BC6  D57A               	goto	l34293
  4969  004BC8  0A01               	xorlw	1	; case 3
  4970  004BCA  B4D8               	btfsc	status,2,c
  4971  004BCC  D588               	goto	l34301
  4972  004BCE  0A07               	xorlw	7	; case 4
  4973  004BD0  B4D8               	btfsc	status,2,c
  4974  004BD2  D5D6               	goto	l34337
  4975  004BD4  0A01               	xorlw	1	; case 5
  4976  004BD6  B4D8               	btfsc	status,2,c
  4977  004BD8  D5E0               	goto	l34345
  4978  004BDA  0A03               	xorlw	3	; case 6
  4979  004BDC  B4D8               	btfsc	status,2,c
  4980  004BDE  D60C               	goto	l34367
  4981  004BE0  0A01               	xorlw	1	; case 7
  4982  004BE2  B4D8               	btfsc	status,2,c
  4983  004BE4  D64E               	goto	l34389
  4984  004BE6  0A0F               	xorlw	15	; case 8
  4985  004BE8  B4D8               	btfsc	status,2,c
  4986  004BEA  D668               	goto	l34397
  4987  004BEC  0A01               	xorlw	1	; case 9
  4988  004BEE  B4D8               	btfsc	status,2,c
  4989  004BF0  D6AA               	goto	l34417
  4990  004BF2  0A03               	xorlw	3	; case 10
  4991  004BF4  B4D8               	btfsc	status,2,c
  4992  004BF6  D6BF               	goto	l34425
  4993  004BF8  0A01               	xorlw	1	; case 11
  4994  004BFA  B4D8               	btfsc	status,2,c
  4995  004BFC  D7A7               	goto	l34445
  4996  004BFE  0A07               	xorlw	7	; case 12
  4997  004C00  B4D8               	btfsc	status,2,c
  4998  004C02  D7BC               	goto	l34453
  4999  004C04  0A01               	xorlw	1	; case 13
  5000  004C06  A4D8               	btfss	status,2,c
  5001  004C08  0012               	return	
  5002  004C0A  D7C8               	goto	l34459
  5003  004C0C                     __end_of_sensMeasure_task:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _sensor_set_temp_mode *****************
  5007 ;; Defined at:
  5008 ;;		line 320 in file "sensor.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  channel         1    wreg     unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  channel         1   40[COMRAM] unsigned char 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      unsigned char 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 3F/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;Total ram usage:        1 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; Hardware stack levels required when called: 10
  5029 ;; This function calls:
  5030 ;;		_lmp91000_set_Mode
  5031 ;;		_max7323_set_lmp_off
  5032 ;;		_max7323_set_lmp_on
  5033 ;;		_sensor_adc_init
  5034 ;; This function is called by:
  5035 ;;		_sensMeasure_task
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text3
  5040  00D53E                     __ptext3:
  5041                           	callstack 0
  5042  00D53E                     _sensor_set_temp_mode:
  5043                           	callstack 19
  5044                           
  5045                           ;incstack = 0
  5046                           ;sensor_set_temp_mode@channel stored from wreg
  5047  00D53E  6E29               	movwf	sensor_set_temp_mode@channel^0,c
  5048                           
  5049                           ;sensor.c: 322: max7323_set_lmp_on(channel);
  5050  00D540  5029               	movf	sensor_set_temp_mode@channel^0,w,c
  5051  00D542  EC02  F06D         	call	_max7323_set_lmp_on
  5052                           
  5053                           ;sensor.c: 324: if (lmp91000_set_Mode(DISABLE, TEMP_MEASURE_TIAON) == 0) {
  5054  00D546  0E07               	movlw	7
  5055  00D548  6E19               	movwf	lmp91000_set_Mode@mode^0,c
  5056  00D54A  0E00               	movlw	0
  5057  00D54C  ECAA  F06C         	call	_lmp91000_set_Mode
  5058  00D550  0900               	iorlw	0
  5059  00D552  A4D8               	btfss	status,2,c
  5060  00D554  D004               	goto	l33703
  5061                           
  5062                           ;sensor.c: 325: max7323_set_lmp_off();
  5063  00D556  EC6B  F06D         	call	_max7323_set_lmp_off	;wreg free
  5064  00D55A                     l33699:
  5065                           
  5066                           ;sensor.c: 326: return 0;
  5067  00D55A  0E00               	movlw	0
  5068  00D55C  0012               	return	
  5069  00D55E                     l33703:
  5070                           
  5071                           ;sensor.c: 327: };sensor.c: 329: max7323_set_lmp_off();
  5072  00D55E  EC6B  F06D         	call	_max7323_set_lmp_off	;wreg free
  5073                           
  5074                           ;sensor.c: 331: if (sensor_adc_init(channel, 1) == 0)
  5075  00D562  0E01               	movlw	1
  5076  00D564  6E26               	movwf	sensor_adc_init@isTemp^0,c
  5077  00D566  5029               	movf	sensor_set_temp_mode@channel^0,w,c
  5078  00D568  EC62  F068         	call	_sensor_adc_init
  5079  00D56C  0900               	iorlw	0
  5080  00D56E  B4D8               	btfsc	status,2,c
  5081  00D570  D7F4               	goto	l33699
  5082                           
  5083                           ;sensor.c: 334: return 1;
  5084  00D572  0E01               	movlw	1
  5085  00D574  0012               	return		;funcret
  5086  00D576                     __end_of_sensor_set_temp_mode:
  5087                           	callstack 0
  5088                           
  5089 ;; *************** function _sensor_set_gas_mode *****************
  5090 ;; Defined at:
  5091 ;;		line 337 in file "sensor.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  channel         1    wreg     unsigned char 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  channel         1   40[COMRAM] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      unsigned char 
  5098 ;; Registers used:
  5099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 3F/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5109 ;;Total ram usage:        1 bytes
  5110 ;; Hardware stack levels used: 1
  5111 ;; Hardware stack levels required when called: 10
  5112 ;; This function calls:
  5113 ;;		_lmp91000_set_Mode
  5114 ;;		_max7323_set_lmp_off
  5115 ;;		_max7323_set_lmp_on
  5116 ;;		_sensor_adc_init
  5117 ;; This function is called by:
  5118 ;;		_sensMeasure_task
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text4
  5123  00D576                     __ptext4:
  5124                           	callstack 0
  5125  00D576                     _sensor_set_gas_mode:
  5126                           	callstack 19
  5127                           
  5128                           ;incstack = 0
  5129                           ;sensor_set_gas_mode@channel stored from wreg
  5130  00D576  6E29               	movwf	sensor_set_gas_mode@channel^0,c
  5131                           
  5132                           ;sensor.c: 339: max7323_set_lmp_on(channel);
  5133  00D578  5029               	movf	sensor_set_gas_mode@channel^0,w,c
  5134  00D57A  EC02  F06D         	call	_max7323_set_lmp_on
  5135                           
  5136                           ;sensor.c: 341: if (lmp91000_set_Mode(DISABLE, AMPEROETRIC_3LEAD) == 0) {
  5137  00D57E  0E03               	movlw	3
  5138  00D580  6E19               	movwf	lmp91000_set_Mode@mode^0,c
  5139  00D582  0E00               	movlw	0
  5140  00D584  ECAA  F06C         	call	_lmp91000_set_Mode
  5141  00D588  0900               	iorlw	0
  5142  00D58A  A4D8               	btfss	status,2,c
  5143  00D58C  D004               	goto	l33723
  5144                           
  5145                           ;sensor.c: 342: max7323_set_lmp_off();
  5146  00D58E  EC6B  F06D         	call	_max7323_set_lmp_off	;wreg free
  5147  00D592                     l33719:
  5148                           
  5149                           ;sensor.c: 343: return 0;
  5150  00D592  0E00               	movlw	0
  5151  00D594  0012               	return	
  5152  00D596                     l33723:
  5153                           
  5154                           ;sensor.c: 344: };sensor.c: 346: max7323_set_lmp_off();
  5155  00D596  EC6B  F06D         	call	_max7323_set_lmp_off	;wreg free
  5156                           
  5157                           ;sensor.c: 348: if (sensor_adc_init(channel, 0) == 0)
  5158  00D59A  0E00               	movlw	0
  5159  00D59C  6E26               	movwf	sensor_adc_init@isTemp^0,c
  5160  00D59E  5029               	movf	sensor_set_gas_mode@channel^0,w,c
  5161  00D5A0  EC62  F068         	call	_sensor_adc_init
  5162  00D5A4  0900               	iorlw	0
  5163  00D5A6  B4D8               	btfsc	status,2,c
  5164  00D5A8  D7F4               	goto	l33719
  5165                           
  5166                           ;sensor.c: 351: return 1;
  5167  00D5AA  0E01               	movlw	1
  5168  00D5AC  0012               	return		;funcret
  5169  00D5AE                     __end_of_sensor_set_gas_mode:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function _sensor_adc_init *****************
  5173 ;; Defined at:
  5174 ;;		line 99 in file "sensor.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  channel         1    wreg     unsigned char 
  5177 ;;  isTemp          1   37[COMRAM] unsigned char 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  channel         1   39[COMRAM] unsigned char 
  5180 ;;  ret             1   38[COMRAM] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      unsigned char 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5190 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;Total ram usage:        3 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 9
  5197 ;; This function calls:
  5198 ;;		_ads1114_SetUp
  5199 ;; This function is called by:
  5200 ;;		_sensor_set_temp_mode
  5201 ;;		_sensor_set_gas_mode
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text5
  5206  00D0C4                     __ptext5:
  5207                           	callstack 0
  5208  00D0C4                     _sensor_adc_init:
  5209                           	callstack 19
  5210                           
  5211                           ;incstack = 0
  5212                           ;sensor_adc_init@channel stored from wreg
  5213  00D0C4  6E28               	movwf	sensor_adc_init@channel^0,c
  5214                           
  5215                           ;sensor.c: 101: bool ret;;sensor.c: 102: if (isTemp) ret = ads1114_SetUp(channel, CONTIN
      +                          UE_CONV, FSR_2p048V, SPS128);
  5216  00D0C6  5026               	movf	sensor_adc_init@isTemp^0,w,c
  5217  00D0C8  B4D8               	btfsc	status,2,c
  5218  00D0CA  D00A               	goto	l32767
  5219  00D0CC  0E00               	movlw	0
  5220  00D0CE  6E1F               	movwf	ads1114_SetUp@mode^0,c
  5221  00D0D0  0E02               	movlw	2
  5222  00D0D2  6E20               	movwf	ads1114_SetUp@pga^0,c
  5223  00D0D4  0E04               	movlw	4
  5224  00D0D6  6E21               	movwf	ads1114_SetUp@dataRate^0,c
  5225  00D0D8  5028               	movf	sensor_adc_init@channel^0,w,c
  5226  00D0DA  EC4C  F069         	call	_ads1114_SetUp
  5227  00D0DE  D011               	goto	L3
  5228  00D0E0                     l32767:
  5229                           
  5230                           ;sensor.c: 103: else ret = ads1114_SetUp(channel, CONTINUE_CONV, g_nvm.eeprm[channel].ad
      +                          c_gain, SPS128);
  5231  00D0E0  0E00               	movlw	0
  5232  00D0E2  6E1F               	movwf	ads1114_SetUp@mode^0,c
  5233  00D0E4  5028               	movf	sensor_adc_init@channel^0,w,c
  5234  00D0E6  0D3E               	mullw	62
  5235  00D0E8  0E72               	movlw	low (_g_nvm+32)
  5236  00D0EA  24F3               	addwf	243,w,c
  5237  00D0EC  6ED9               	movwf	fsr2l,c
  5238  00D0EE  0E01               	movlw	high (_g_nvm+32)
  5239  00D0F0  20F4               	addwfc	prodh,w,c
  5240  00D0F2  6EDA               	movwf	fsr2h,c
  5241  00D0F4  50DF               	movf	indf2,w,c
  5242  00D0F6  6E20               	movwf	ads1114_SetUp@pga^0,c
  5243  00D0F8  0E04               	movlw	4
  5244  00D0FA  6E21               	movwf	ads1114_SetUp@dataRate^0,c
  5245  00D0FC  5028               	movf	sensor_adc_init@channel^0,w,c
  5246  00D0FE  EC4C  F069         	call	_ads1114_SetUp
  5247  00D102                     L3:
  5248  00D102  6E27               	movwf	sensor_adc_init@ret^0,c
  5249                           
  5250                           ;sensor.c: 105: return ret;
  5251  00D104  5027               	movf	sensor_adc_init@ret^0,w,c
  5252  00D106  0012               	return		;funcret
  5253  00D108                     __end_of_sensor_adc_init:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _ads1114_SetUp *****************
  5257 ;; Defined at:
  5258 ;;		line 33 in file "bsp/ads1114.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  channel         1    wreg     unsigned char 
  5261 ;;  mode            1   30[COMRAM] unsigned char 
  5262 ;;  pga             1   31[COMRAM] unsigned char 
  5263 ;;  dataRate        1   32[COMRAM] unsigned char 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  channel         1   33[COMRAM] unsigned char 
  5266 ;;  buff            2   34[COMRAM] unsigned char [2]
  5267 ;;  wraddr          1   36[COMRAM] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      unsigned char 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5281 ;;Total ram usage:        7 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; Hardware stack levels required when called: 8
  5284 ;; This function calls:
  5285 ;;		_i2c_writeBytes_to
  5286 ;; This function is called by:
  5287 ;;		_sensor_adc_init
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text6
  5292  00D298                     __ptext6:
  5293                           	callstack 0
  5294  00D298                     _ads1114_SetUp:
  5295                           	callstack 19
  5296                           
  5297                           ;incstack = 0
  5298                           ;ads1114_SetUp@channel stored from wreg
  5299  00D298  6E22               	movwf	ads1114_SetUp@channel^0,c
  5300                           
  5301                           ;ads1114.c: 35: uint8_t wraddr = 0x01;
  5302  00D29A  0E01               	movlw	1
  5303  00D29C  6E25               	movwf	ads1114_SetUp@wraddr^0,c
  5304                           
  5305                           ;ads1114.c: 36: uint8_t buff[2];;ads1114.c: 38: buff[0] = 0x80 | (pga << 1) | mode;
  5306  00D29E  5020               	movf	ads1114_SetUp@pga^0,w,c
  5307  00D2A0  2420               	addwf	ads1114_SetUp@pga^0,w,c
  5308  00D2A2  101F               	iorwf	ads1114_SetUp@mode^0,w,c
  5309  00D2A4  0980               	iorlw	128
  5310  00D2A6  6E23               	movwf	ads1114_SetUp@buff^0,c
  5311                           
  5312                           ;ads1114.c: 39: buff[1] = dataRate << 5 | 0b00010011;
  5313  00D2A8  3821               	swapf	ads1114_SetUp@dataRate^0,w,c
  5314  00D2AA  46E8               	rlncf	wreg,f,c
  5315  00D2AC  0BE0               	andlw	224
  5316  00D2AE  0913               	iorlw	19
  5317  00D2B0  6E24               	movwf	(ads1114_SetUp@buff+1)^0,c
  5318                           
  5319                           ;ads1114.c: 41: return i2c_writeBytes_to(ads1114_address[channel], &wraddr, 1, buff, 2);
  5320  00D2B2  0E25               	movlw	low ads1114_SetUp@wraddr
  5321  00D2B4  6E19               	movwf	i2c_writeBytes_to@wraddr^0,c
  5322  00D2B6  0E01               	movlw	1
  5323  00D2B8  6E1A               	movwf	i2c_writeBytes_to@addrlen^0,c
  5324  00D2BA  0E23               	movlw	low ads1114_SetUp@buff
  5325  00D2BC  6E1B               	movwf	i2c_writeBytes_to@wrptr^0,c
  5326  00D2BE  6A1C               	clrf	(i2c_writeBytes_to@wrptr+1)^0,c
  5327  00D2C0  0E02               	movlw	2
  5328  00D2C2  6E1D               	movwf	i2c_writeBytes_to@len^0,c
  5329  00D2C4  0EFB               	movlw	low _ads1114_address
  5330  00D2C6  2422               	addwf	ads1114_SetUp@channel^0,w,c
  5331  00D2C8  6ED9               	movwf	fsr2l,c
  5332  00D2CA  6ADA               	clrf	fsr2h,c
  5333  00D2CC  0E01               	movlw	high _ads1114_address
  5334  00D2CE  22DA               	addwfc	fsr2h,f,c
  5335  00D2D0  50DF               	movf	indf2,w,c
  5336  00D2D2  EC8C  F069         	call	_i2c_writeBytes_to
  5337  00D2D6  0012               	return		;funcret
  5338  00D2D8                     __end_of_ads1114_SetUp:
  5339                           	callstack 0
  5340                           
  5341 ;; *************** function _sensor_init *****************
  5342 ;; Defined at:
  5343 ;;		line 161 in file "sensor.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  channel         1    wreg     unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  channel         1   34[COMRAM] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      unsigned char 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 3F/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;Total ram usage:        2 bytes
  5362 ;; Hardware stack levels used: 1
  5363 ;; Hardware stack levels required when called: 10
  5364 ;; This function calls:
  5365 ;;		_sensor_lmp_init
  5366 ;; This function is called by:
  5367 ;;		_sensMeasure_task
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text7
  5372  00D4CA                     __ptext7:
  5373                           	callstack 0
  5374  00D4CA                     _sensor_init:
  5375                           	callstack 19
  5376                           
  5377                           ;incstack = 0
  5378                           ;sensor_init@channel stored from wreg
  5379  00D4CA  6E23               	movwf	sensor_init@channel^0,c
  5380                           
  5381                           ;sensor.c: 165: if (!(g_nvm.eeprm[channel].sensor_model >= NH3_100 && g_nvm.eeprm[channe
      +                          l].sensor_model <= H2S_50))
  5382  00D4CC  5023               	movf	sensor_init@channel^0,w,c
  5383  00D4CE  0D3E               	mullw	62
  5384  00D4D0  0E71               	movlw	low (_g_nvm+31)
  5385  00D4D2  24F3               	addwf	243,w,c
  5386  00D4D4  6ED9               	movwf	fsr2l,c
  5387  00D4D6  0E01               	movlw	high (_g_nvm+31)
  5388  00D4D8  20F4               	addwfc	prodh,w,c
  5389  00D4DA  6EDA               	movwf	fsr2h,c
  5390  00D4DC  50DF               	movf	indf2,w,c
  5391  00D4DE  B4D8               	btfsc	status,2,c
  5392  00D4E0  D00B               	goto	u42700
  5393  00D4E2  5023               	movf	sensor_init@channel^0,w,c
  5394  00D4E4  0D3E               	mullw	62
  5395  00D4E6  0E71               	movlw	low (_g_nvm+31)
  5396  00D4E8  24F3               	addwf	243,w,c
  5397  00D4EA  6ED9               	movwf	fsr2l,c
  5398  00D4EC  0E01               	movlw	high (_g_nvm+31)
  5399  00D4EE  20F4               	addwfc	prodh,w,c
  5400  00D4F0  6EDA               	movwf	fsr2h,c
  5401  00D4F2  0E02               	movlw	2
  5402  00D4F4  64DF               	cpfsgt	indf2,c
  5403  00D4F6  D002               	goto	l33691
  5404  00D4F8                     u42700:
  5405                           
  5406                           ;sensor.c: 166: return 0;
  5407  00D4F8  0E00               	movlw	0
  5408  00D4FA  0012               	return	
  5409  00D4FC                     l33691:
  5410                           
  5411                           ;sensor.c: 167: return sensor_lmp_init(channel);
  5412  00D4FC  5023               	movf	sensor_init@channel^0,w,c
  5413  00D4FE  EC39  F05D         	call	_sensor_lmp_init
  5414  00D502  0012               	return		;funcret
  5415  00D504                     __end_of_sensor_init:
  5416                           	callstack 0
  5417                           
  5418 ;; *************** function _sensor_lmp_init *****************
  5419 ;; Defined at:
  5420 ;;		line 126 in file "sensor.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  channel         1    wreg     unsigned char 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  channel         1   32[COMRAM] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      unsigned char 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5438 ;;Total ram usage:        1 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 9
  5441 ;; This function calls:
  5442 ;;		_lmp91000_isReady
  5443 ;;		_lmp91000_set_GainRLoad
  5444 ;;		_lmp91000_set_Mode
  5445 ;;		_lmp91000_set_Reference
  5446 ;;		_lmp91000_unlock
  5447 ;;		_max7323_set_lmp_off
  5448 ;;		_max7323_set_lmp_on
  5449 ;; This function is called by:
  5450 ;;		_sensor_init
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text8
  5455  00BA72                     __ptext8:
  5456                           	callstack 0
  5457  00BA72                     _sensor_lmp_init:
  5458                           	callstack 19
  5459                           
  5460                           ;incstack = 0
  5461                           ;sensor_lmp_init@channel stored from wreg
  5462  00BA72  6E21               	movwf	sensor_lmp_init@channel^0,c
  5463                           
  5464                           ;sensor.c: 128: max7323_set_lmp_on(channel);
  5465  00BA74  5021               	movf	sensor_lmp_init@channel^0,w,c
  5466  00BA76  EC02  F06D         	call	_max7323_set_lmp_on
  5467                           
  5468                           ;sensor.c: 131: if (lmp91000_isReady() == 0) {
  5469  00BA7A  ECC4  F06E         	call	_lmp91000_isReady	;wreg free
  5470  00BA7E  0900               	iorlw	0
  5471  00BA80  A4D8               	btfss	status,2,c
  5472  00BA82  D004               	goto	l32781
  5473  00BA84                     u41320:
  5474                           
  5475                           ;sensor.c: 132: max7323_set_lmp_off();
  5476  00BA84  EC6B  F06D         	call	_max7323_set_lmp_off	;wreg free
  5477  00BA88                     l32777:
  5478                           
  5479                           ;sensor.c: 133: return 0;
  5480  00BA88  0E00               	movlw	0
  5481  00BA8A  0012               	return	
  5482  00BA8C                     l32781:
  5483                           
  5484                           ;sensor.c: 134: };sensor.c: 136: if (lmp91000_unlock() == 0) {
  5485  00BA8C  ECA9  F06E         	call	_lmp91000_unlock	;wreg free
  5486  00BA90  0900               	iorlw	0
  5487  00BA92  B4D8               	btfsc	status,2,c
  5488  00BA94  D7F7               	goto	u41320
  5489                           
  5490                           ;sensor.c: 139: };sensor.c: 141: if (lmp91000_set_GainRLoad(g_nvm.eeprm[channel].lmp_gai
      +                          n, g_nvm.eeprm[channel].lmp_rload) == 0) {
  5491  00BA96  5021               	movf	sensor_lmp_init@channel^0,w,c
  5492  00BA98  0D3E               	mullw	62
  5493  00BA9A  0E74               	movlw	low (_g_nvm+34)
  5494  00BA9C  24F3               	addwf	243,w,c
  5495  00BA9E  6ED9               	movwf	fsr2l,c
  5496  00BAA0  0E01               	movlw	high (_g_nvm+34)
  5497  00BAA2  20F4               	addwfc	prodh,w,c
  5498  00BAA4  6EDA               	movwf	fsr2h,c
  5499  00BAA6  50DF               	movf	indf2,w,c
  5500  00BAA8  6E19               	movwf	lmp91000_set_GainRLoad@RLoad^0,c
  5501  00BAAA  5021               	movf	sensor_lmp_init@channel^0,w,c
  5502  00BAAC  0D3E               	mullw	62
  5503  00BAAE  0E73               	movlw	low (_g_nvm+33)
  5504  00BAB0  24F3               	addwf	243,w,c
  5505  00BAB2  6ED9               	movwf	fsr2l,c
  5506  00BAB4  0E01               	movlw	high (_g_nvm+33)
  5507  00BAB6  20F4               	addwfc	prodh,w,c
  5508  00BAB8  6EDA               	movwf	fsr2h,c
  5509  00BABA  50DF               	movf	indf2,w,c
  5510  00BABC  EC1C  F06C         	call	_lmp91000_set_GainRLoad
  5511  00BAC0  0900               	iorlw	0
  5512  00BAC2  B4D8               	btfsc	status,2,c
  5513  00BAC4  D7DF               	goto	u41320
  5514                           
  5515                           ;sensor.c: 144: };sensor.c: 148: if (lmp91000_set_Reference(EXTERNAL, g_nvm.eeprm[channe
      +                          l].lmp_intZ, NAGATIVE, B0P) == 0) {
  5516  00BAC6  5021               	movf	sensor_lmp_init@channel^0,w,c
  5517  00BAC8  0D3E               	mullw	62
  5518  00BACA  0E75               	movlw	low (_g_nvm+35)
  5519  00BACC  24F3               	addwf	243,w,c
  5520  00BACE  6ED9               	movwf	fsr2l,c
  5521  00BAD0  0E01               	movlw	high (_g_nvm+35)
  5522  00BAD2  20F4               	addwfc	prodh,w,c
  5523  00BAD4  6EDA               	movwf	fsr2h,c
  5524  00BAD6  50DF               	movf	indf2,w,c
  5525  00BAD8  6E19               	movwf	lmp91000_set_Reference@IntZ^0,c
  5526  00BADA  0E00               	movlw	0
  5527  00BADC  6E1A               	movwf	lmp91000_set_Reference@sign^0,c
  5528  00BADE  0E00               	movlw	0
  5529  00BAE0  6E1B               	movwf	lmp91000_set_Reference@bias^0,c
  5530  00BAE2  0E01               	movlw	1
  5531  00BAE4  ECCC  F069         	call	_lmp91000_set_Reference
  5532  00BAE8  0900               	iorlw	0
  5533  00BAEA  B4D8               	btfsc	status,2,c
  5534  00BAEC  D7CB               	goto	u41320
  5535                           
  5536                           ;sensor.c: 151: };sensor.c: 153: if (lmp91000_set_Mode(DISABLE, STANBY) == 0) {
  5537  00BAEE  0E02               	movlw	2
  5538  00BAF0  6E19               	movwf	lmp91000_set_Mode@mode^0,c
  5539  00BAF2  0E00               	movlw	0
  5540  00BAF4  ECAA  F06C         	call	_lmp91000_set_Mode
  5541  00BAF8  0900               	iorlw	0
  5542  00BAFA  B4D8               	btfsc	status,2,c
  5543  00BAFC  D7C5               	goto	l32777
  5544                           
  5545                           ;sensor.c: 155: };sensor.c: 157: max7323_set_lmp_off();
  5546  00BAFE  EC6B  F06D         	call	_max7323_set_lmp_off	;wreg free
  5547                           
  5548                           ;sensor.c: 158: return 1;
  5549  00BB02  0E01               	movlw	1
  5550  00BB04  0012               	return		;funcret
  5551  00BB06                     __end_of_sensor_lmp_init:
  5552                           	callstack 0
  5553                           
  5554 ;; *************** function _max7323_set_lmp_on *****************
  5555 ;; Defined at:
  5556 ;;		line 74 in file "sensor.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  channel         1    wreg     unsigned char 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  channel         1   27[COMRAM] unsigned char 
  5561 ;;  i               1   29[COMRAM] unsigned char 
  5562 ;;  wr              1   28[COMRAM] unsigned char 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;Total ram usage:        3 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; Hardware stack levels required when called: 8
  5579 ;; This function calls:
  5580 ;;		_max7323_set_gpio
  5581 ;; This function is called by:
  5582 ;;		_sensor_lmp_init
  5583 ;;		_sensor_set_temp_mode
  5584 ;;		_sensor_set_gas_mode
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text9
  5589  00DA04                     __ptext9:
  5590                           	callstack 0
  5591  00DA04                     _max7323_set_lmp_on:
  5592                           	callstack 20
  5593                           
  5594                           ;incstack = 0
  5595                           ;max7323_set_lmp_on@channel stored from wreg
  5596  00DA04  6E1C               	movwf	max7323_set_lmp_on@channel^0,c
  5597                           
  5598                           ;sensor.c: 76: uint8_t wr;;sensor.c: 78: for (uint8_t i = 0 ; i < 2 ; i++) {
  5599  00DA06  0E00               	movlw	0
  5600  00DA08  6E1E               	movwf	max7323_set_lmp_on@i^0,c
  5601  00DA0A                     l32163:
  5602                           
  5603                           ;sensor.c: 79: if (i == channel) wr = 0b00100000;
  5604  00DA0A  501C               	movf	max7323_set_lmp_on@channel^0,w,c
  5605  00DA0C  181E               	xorwf	max7323_set_lmp_on@i^0,w,c
  5606  00DA0E  A4D8               	btfss	status,2,c
  5607  00DA10  D002               	goto	l32167
  5608  00DA12  0E20               	movlw	32
  5609  00DA14  D001               	goto	L4
  5610  00DA16                     l32167:
  5611                           
  5612                           ;sensor.c: 80: else wr = 0b00110000;
  5613  00DA16  0E30               	movlw	48
  5614  00DA18                     L4:
  5615  00DA18  6E1D               	movwf	max7323_set_lmp_on@wr^0,c
  5616                           
  5617                           ;sensor.c: 81: max7323_set_gpio(i, wr);
  5618  00DA1A  C01D  F019         	movff	max7323_set_lmp_on@wr,max7323_set_gpio@wb
  5619  00DA1E  501E               	movf	max7323_set_lmp_on@i^0,w,c
  5620  00DA20  EC93  F06D         	call	_max7323_set_gpio
  5621  00DA24  2A1E               	incf	max7323_set_lmp_on@i^0,f,c
  5622  00DA26  0E01               	movlw	1
  5623  00DA28  641E               	cpfsgt	max7323_set_lmp_on@i^0,c
  5624  00DA2A  D7EF               	goto	l32163
  5625  00DA2C  0012               	return	
  5626  00DA2E                     __end_of_max7323_set_lmp_on:
  5627                           	callstack 0
  5628                           
  5629 ;; *************** function _max7323_set_lmp_off *****************
  5630 ;; Defined at:
  5631 ;;		line 85 in file "sensor.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  i               1   29[COMRAM] unsigned char 
  5636 ;;  wr              2   27[COMRAM] unsigned char [2]
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5647 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5650 ;;Total ram usage:        3 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 8
  5653 ;; This function calls:
  5654 ;;		_max7323_set_gpio
  5655 ;; This function is called by:
  5656 ;;		_sensor_lmp_init
  5657 ;;		_sensor_set_temp_mode
  5658 ;;		_sensor_set_gas_mode
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text10
  5663  00DAD6                     __ptext10:
  5664                           	callstack 0
  5665  00DAD6                     _max7323_set_lmp_off:
  5666                           	callstack 20
  5667                           
  5668                           ;sensor.c: 87: uint8_t wr[2] = { 0b00110000, 0b00011000 };
  5669                           
  5670                           ;incstack = 0
  5671  00DAD6  C1F5  F01C         	movff	max7323_set_lmp_off@F353,max7323_set_lmp_off@wr
  5672  00DADA  C1F6  F01D         	movff	max7323_set_lmp_off@F353+1,max7323_set_lmp_off@wr+1
  5673                           
  5674                           ;sensor.c: 89: for (uint8_t i = 0 ; i < 2 ; i++) {
  5675  00DADE  0E00               	movlw	0
  5676  00DAE0  6E1E               	movwf	max7323_set_lmp_off@i^0,c
  5677  00DAE2                     l32183:
  5678                           
  5679                           ;sensor.c: 90: max7323_set_gpio(i, wr[i]);
  5680  00DAE2  501E               	movf	max7323_set_lmp_off@i^0,w,c
  5681  00DAE4  0F1C               	addlw	low max7323_set_lmp_off@wr
  5682  00DAE6  6ED9               	movwf	fsr2l,c
  5683  00DAE8  6ADA               	clrf	fsr2h,c
  5684  00DAEA  50DF               	movf	indf2,w,c
  5685  00DAEC  6E19               	movwf	max7323_set_gpio@wb^0,c
  5686  00DAEE  501E               	movf	max7323_set_lmp_off@i^0,w,c
  5687  00DAF0  EC93  F06D         	call	_max7323_set_gpio
  5688  00DAF4  2A1E               	incf	max7323_set_lmp_off@i^0,f,c
  5689  00DAF6  0E01               	movlw	1
  5690  00DAF8  641E               	cpfsgt	max7323_set_lmp_off@i^0,c
  5691  00DAFA  D7F3               	goto	l32183
  5692  00DAFC  0012               	return	
  5693  00DAFE                     __end_of_max7323_set_lmp_off:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function _max7323_set_gpio *****************
  5697 ;; Defined at:
  5698 ;;		line 14 in file "bsp/max7323.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  chno            1    wreg     unsigned char 
  5701 ;;  wb              1   24[COMRAM] unsigned char 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  chno            1   25[COMRAM] unsigned char 
  5704 ;;  b               1   26[COMRAM] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      unsigned char 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5714 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;Total ram usage:        3 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 7
  5721 ;; This function calls:
  5722 ;;		_i2c_writeBytes
  5723 ;; This function is called by:
  5724 ;;		_max7323_set_lmp_on
  5725 ;;		_max7323_set_lmp_off
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text11
  5730  00DB26                     __ptext11:
  5731                           	callstack 0
  5732  00DB26                     _max7323_set_gpio:
  5733                           	callstack 20
  5734                           
  5735                           ;incstack = 0
  5736                           ;max7323_set_gpio@chno stored from wreg
  5737  00DB26  6E1A               	movwf	max7323_set_gpio@chno^0,c
  5738                           
  5739                           ;max7323.c: 16: uint8_t b = wb;
  5740  00DB28  C019  F01B         	movff	max7323_set_gpio@wb,max7323_set_gpio@b
  5741                           
  5742                           ;max7323.c: 18: if (i2c_writeBytes(max7323_address[chno], &b, 1, 1) == 0)
  5743  00DB2C  0E1B               	movlw	low max7323_set_gpio@b
  5744  00DB2E  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  5745  00DB30  0E01               	movlw	1
  5746  00DB32  6E16               	movwf	i2c_writeBytes@len^0,c
  5747  00DB34  0E01               	movlw	1
  5748  00DB36  6E17               	movwf	i2c_writeBytes@isStop^0,c
  5749  00DB38  0EF7               	movlw	low _max7323_address
  5750  00DB3A  241A               	addwf	max7323_set_gpio@chno^0,w,c
  5751  00DB3C  6ED9               	movwf	fsr2l,c
  5752  00DB3E  6ADA               	clrf	fsr2h,c
  5753  00DB40  0E01               	movlw	high _max7323_address
  5754  00DB42  22DA               	addwfc	fsr2h,f,c
  5755  00DB44  50DF               	movf	indf2,w,c
  5756  00DB46  EC7D  F06B         	call	_i2c_writeBytes
  5757  00DB4A  0012               	return		;funcret
  5758  00DB4C                     __end_of_max7323_set_gpio:
  5759                           	callstack 0
  5760                           
  5761 ;; *************** function _lmp91000_unlock *****************
  5762 ;; Defined at:
  5763 ;;		line 123 in file "bsp/lmp91000.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;		None
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  buff            2   24[COMRAM] unsigned char [2]
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      unsigned char 
  5770 ;; Registers used:
  5771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5781 ;;Total ram usage:        2 bytes
  5782 ;; Hardware stack levels used: 1
  5783 ;; Hardware stack levels required when called: 7
  5784 ;; This function calls:
  5785 ;;		_i2c_writeBytes
  5786 ;; This function is called by:
  5787 ;;		_sensor_lmp_init
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text12
  5792  00DD52                     __ptext12:
  5793                           	callstack 0
  5794  00DD52                     _lmp91000_unlock:
  5795                           	callstack 20
  5796                           
  5797                           ;lmp91000.c: 125: uint8_t buff[2];;lmp91000.c: 126: buff[0] = 0x01;
  5798                           
  5799                           ;incstack = 0
  5800  00DD52  0E01               	movlw	1
  5801  00DD54  6E19               	movwf	lmp91000_unlock@buff^0,c
  5802                           
  5803                           ;lmp91000.c: 127: buff[1] = 0x00;
  5804  00DD56  0E00               	movlw	0
  5805  00DD58  6E1A               	movwf	(lmp91000_unlock@buff+1)^0,c
  5806                           
  5807                           ;lmp91000.c: 129: return i2c_writeBytes(0x90, buff, 2, 1);
  5808  00DD5A  0E19               	movlw	low lmp91000_unlock@buff
  5809  00DD5C  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  5810  00DD5E  0E02               	movlw	2
  5811  00DD60  6E16               	movwf	i2c_writeBytes@len^0,c
  5812  00DD62  0E01               	movlw	1
  5813  00DD64  6E17               	movwf	i2c_writeBytes@isStop^0,c
  5814  00DD66  0E90               	movlw	144
  5815  00DD68  EC7D  F06B         	call	_i2c_writeBytes
  5816  00DD6C  0012               	return		;funcret
  5817  00DD6E                     __end_of_lmp91000_unlock:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function _lmp91000_set_Reference *****************
  5821 ;; Defined at:
  5822 ;;		line 195 in file "bsp/lmp91000.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  source          1    wreg     unsigned char 
  5825 ;;  IntZ            1   24[COMRAM] unsigned char 
  5826 ;;  sign            1   25[COMRAM] unsigned char 
  5827 ;;  bias            1   26[COMRAM] unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  source          1   27[COMRAM] unsigned char 
  5830 ;;  buff            2   28[COMRAM] unsigned char [2]
  5831 ;;  reg             1   30[COMRAM] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      unsigned char 
  5834 ;; Registers used:
  5835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5841 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5844 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5845 ;;Total ram usage:        7 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 7
  5848 ;; This function calls:
  5849 ;;		_i2c_writeBytes
  5850 ;; This function is called by:
  5851 ;;		_sensor_lmp_init
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text13
  5856  00D398                     __ptext13:
  5857                           	callstack 0
  5858  00D398                     _lmp91000_set_Reference:
  5859                           	callstack 20
  5860                           
  5861                           ;incstack = 0
  5862                           ;lmp91000_set_Reference@source stored from wreg
  5863  00D398  6E1C               	movwf	lmp91000_set_Reference@source^0,c
  5864                           
  5865                           ;lmp91000.c: 197: uint8_t reg;;lmp91000.c: 198: uint8_t buff[2];;lmp91000.c: 200: reg = 
      +                          0x20;
  5866  00D39A  0E20               	movlw	32
  5867  00D39C  6E1F               	movwf	lmp91000_set_Reference@reg^0,c
  5868                           
  5869                           ;lmp91000.c: 201: reg &= ~(3 << 5);
  5870  00D39E  0E9F               	movlw	159
  5871  00D3A0  161F               	andwf	lmp91000_set_Reference@reg^0,f,c
  5872                           
  5873                           ;lmp91000.c: 202: reg |= source << 7;
  5874  00D3A2  401C               	rrncf	lmp91000_set_Reference@source^0,w,c
  5875  00D3A4  0B80               	andlw	128
  5876  00D3A6  121F               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5877                           
  5878                           ;lmp91000.c: 203: reg |= IntZ << 5;
  5879  00D3A8  3819               	swapf	lmp91000_set_Reference@IntZ^0,w,c
  5880  00D3AA  46E8               	rlncf	wreg,f,c
  5881  00D3AC  0BE0               	andlw	224
  5882  00D3AE  121F               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5883                           
  5884                           ;lmp91000.c: 204: reg |= sign << 4;
  5885  00D3B0  381A               	swapf	lmp91000_set_Reference@sign^0,w,c
  5886  00D3B2  0BF0               	andlw	240
  5887  00D3B4  121F               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5888                           
  5889                           ;lmp91000.c: 205: reg |= bias;
  5890  00D3B6  501B               	movf	lmp91000_set_Reference@bias^0,w,c
  5891  00D3B8  121F               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5892                           
  5893                           ;lmp91000.c: 207: buff[0] = 0x11;;
  5894  00D3BA  0E11               	movlw	17
  5895  00D3BC  6E1D               	movwf	lmp91000_set_Reference@buff^0,c
  5896                           
  5897                           ;lmp91000.c: 208: buff[1] = reg;
  5898  00D3BE  C01F  F01E         	movff	lmp91000_set_Reference@reg,lmp91000_set_Reference@buff+1
  5899                           
  5900                           ;lmp91000.c: 210: return i2c_writeBytes(0x90, buff, 2, 1);
  5901  00D3C2  0E1D               	movlw	low lmp91000_set_Reference@buff
  5902  00D3C4  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  5903  00D3C6  0E02               	movlw	2
  5904  00D3C8  6E16               	movwf	i2c_writeBytes@len^0,c
  5905  00D3CA  0E01               	movlw	1
  5906  00D3CC  6E17               	movwf	i2c_writeBytes@isStop^0,c
  5907  00D3CE  0E90               	movlw	144
  5908  00D3D0  EC7D  F06B         	call	_i2c_writeBytes
  5909  00D3D4  0012               	return		;funcret
  5910  00D3D6                     __end_of_lmp91000_set_Reference:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _lmp91000_set_Mode *****************
  5914 ;; Defined at:
  5915 ;;		line 220 in file "bsp/lmp91000.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  fet             1    wreg     unsigned char 
  5918 ;;  mode            1   24[COMRAM] unsigned char 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  fet             1   25[COMRAM] unsigned char 
  5921 ;;  buff            2   26[COMRAM] unsigned char [2]
  5922 ;;  reg             1   28[COMRAM] unsigned char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      unsigned char 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5933 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;Total ram usage:        5 bytes
  5937 ;; Hardware stack levels used: 1
  5938 ;; Hardware stack levels required when called: 7
  5939 ;; This function calls:
  5940 ;;		_i2c_writeBytes
  5941 ;; This function is called by:
  5942 ;;		_sensor_lmp_init
  5943 ;;		_sensor_set_temp_mode
  5944 ;;		_sensor_set_gas_mode
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text14
  5949  00D954                     __ptext14:
  5950                           	callstack 0
  5951  00D954                     _lmp91000_set_Mode:
  5952                           	callstack 21
  5953                           
  5954                           ;incstack = 0
  5955                           ;lmp91000_set_Mode@fet stored from wreg
  5956  00D954  6E1A               	movwf	lmp91000_set_Mode@fet^0,c
  5957                           
  5958                           ;lmp91000.c: 222: uint8_t reg;;lmp91000.c: 223: uint8_t buff[2];;lmp91000.c: 225: reg = 
      +                          0x00;
  5959  00D956  0E00               	movlw	0
  5960  00D958  6E1D               	movwf	lmp91000_set_Mode@reg^0,c
  5961                           
  5962                           ;lmp91000.c: 226: reg |= fet << 7;
  5963  00D95A  401A               	rrncf	lmp91000_set_Mode@fet^0,w,c
  5964  00D95C  0B80               	andlw	128
  5965  00D95E  121D               	iorwf	lmp91000_set_Mode@reg^0,f,c
  5966                           
  5967                           ;lmp91000.c: 227: reg |= mode;
  5968  00D960  5019               	movf	lmp91000_set_Mode@mode^0,w,c
  5969  00D962  121D               	iorwf	lmp91000_set_Mode@reg^0,f,c
  5970                           
  5971                           ;lmp91000.c: 229: buff[0] = 0x12;;
  5972  00D964  0E12               	movlw	18
  5973  00D966  6E1B               	movwf	lmp91000_set_Mode@buff^0,c
  5974                           
  5975                           ;lmp91000.c: 230: buff[1] = reg;
  5976  00D968  C01D  F01C         	movff	lmp91000_set_Mode@reg,lmp91000_set_Mode@buff+1
  5977                           
  5978                           ;lmp91000.c: 232: return i2c_writeBytes(0x90, buff, 2, 1);
  5979  00D96C  0E1B               	movlw	low lmp91000_set_Mode@buff
  5980  00D96E  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  5981  00D970  0E02               	movlw	2
  5982  00D972  6E16               	movwf	i2c_writeBytes@len^0,c
  5983  00D974  0E01               	movlw	1
  5984  00D976  6E17               	movwf	i2c_writeBytes@isStop^0,c
  5985  00D978  0E90               	movlw	144
  5986  00D97A  EC7D  F06B         	call	_i2c_writeBytes
  5987  00D97E  0012               	return		;funcret
  5988  00D980                     __end_of_lmp91000_set_Mode:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _lmp91000_set_GainRLoad *****************
  5992 ;; Defined at:
  5993 ;;		line 172 in file "bsp/lmp91000.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  user_gain       1    wreg     unsigned char 
  5996 ;;  RLoad           1   24[COMRAM] unsigned char 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  user_gain       1   25[COMRAM] unsigned char 
  5999 ;;  buff            2   26[COMRAM] unsigned char [2]
  6000 ;;  reg             1   28[COMRAM] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      unsigned char 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6010 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6011 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6013 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;Total ram usage:        5 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 7
  6017 ;; This function calls:
  6018 ;;		_i2c_writeBytes
  6019 ;; This function is called by:
  6020 ;;		_sensor_lmp_init
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text15
  6025  00D838                     __ptext15:
  6026                           	callstack 0
  6027  00D838                     _lmp91000_set_GainRLoad:
  6028                           	callstack 20
  6029                           
  6030                           ;incstack = 0
  6031                           ;lmp91000_set_GainRLoad@user_gain stored from wreg
  6032  00D838  6E1A               	movwf	lmp91000_set_GainRLoad@user_gain^0,c
  6033                           
  6034                           ;lmp91000.c: 174: uint8_t reg;;lmp91000.c: 175: uint8_t buff[2];;lmp91000.c: 177: reg = 
      +                          0x03;
  6035  00D83A  0E03               	movlw	3
  6036  00D83C  6E1D               	movwf	lmp91000_set_GainRLoad@reg^0,c
  6037                           
  6038                           ;lmp91000.c: 178: reg &= ~3;
  6039  00D83E  0EFC               	movlw	252
  6040  00D840  161D               	andwf	lmp91000_set_GainRLoad@reg^0,f,c
  6041                           
  6042                           ;lmp91000.c: 179: reg |= (user_gain << 2);
  6043  00D842  441A               	rlncf	lmp91000_set_GainRLoad@user_gain^0,w,c
  6044  00D844  46E8               	rlncf	wreg,f,c
  6045  00D846  0BFC               	andlw	252
  6046  00D848  121D               	iorwf	lmp91000_set_GainRLoad@reg^0,f,c
  6047                           
  6048                           ;lmp91000.c: 180: reg |= RLoad;
  6049  00D84A  5019               	movf	lmp91000_set_GainRLoad@RLoad^0,w,c
  6050  00D84C  121D               	iorwf	lmp91000_set_GainRLoad@reg^0,f,c
  6051                           
  6052                           ;lmp91000.c: 182: buff[0] = 0x10;;
  6053  00D84E  0E10               	movlw	16
  6054  00D850  6E1B               	movwf	lmp91000_set_GainRLoad@buff^0,c
  6055                           
  6056                           ;lmp91000.c: 183: buff[1] = reg;
  6057  00D852  C01D  F01C         	movff	lmp91000_set_GainRLoad@reg,lmp91000_set_GainRLoad@buff+1
  6058                           
  6059                           ;lmp91000.c: 185: return i2c_writeBytes(0x90, buff, 2, 1);
  6060  00D856  0E1B               	movlw	low lmp91000_set_GainRLoad@buff
  6061  00D858  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  6062  00D85A  0E02               	movlw	2
  6063  00D85C  6E16               	movwf	i2c_writeBytes@len^0,c
  6064  00D85E  0E01               	movlw	1
  6065  00D860  6E17               	movwf	i2c_writeBytes@isStop^0,c
  6066  00D862  0E90               	movlw	144
  6067  00D864  EC7D  F06B         	call	_i2c_writeBytes
  6068  00D868  0012               	return		;funcret
  6069  00D86A                     __end_of_lmp91000_set_GainRLoad:
  6070                           	callstack 0
  6071                           
  6072 ;; *************** function _lmp91000_isReady *****************
  6073 ;; Defined at:
  6074 ;;		line 155 in file "bsp/lmp91000.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  rBuff           1   31[COMRAM] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      unsigned char 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6092 ;;Total ram usage:        1 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; Hardware stack levels required when called: 8
  6095 ;; This function calls:
  6096 ;;		_lmp91000_get_status
  6097 ;; This function is called by:
  6098 ;;		_sensor_lmp_init
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text16
  6103  00DD88                     __ptext16:
  6104                           	callstack 0
  6105  00DD88                     _lmp91000_isReady:
  6106                           	callstack 19
  6107                           
  6108                           ;lmp91000.c: 157: uint8_t rBuff;;lmp91000.c: 159: if (lmp91000_get_status(&rBuff) == 0)
  6109                           
  6110                           ;incstack = 0
  6111  00DD88  0E20               	movlw	low lmp91000_isReady@rBuff
  6112  00DD8A  6E1D               	movwf	lmp91000_get_status@preg^0,c
  6113  00DD8C  EC84  F068         	call	_lmp91000_get_status	;wreg free
  6114  00DD90  0900               	iorlw	0
  6115  00DD92  A4D8               	btfss	status,2,c
  6116  00DD94  D002               	goto	l31957
  6117                           
  6118                           ;lmp91000.c: 160: return 0;
  6119  00DD96  0E00               	movlw	0
  6120  00DD98  0012               	return	
  6121  00DD9A                     l31957:
  6122                           
  6123                           ;lmp91000.c: 162: return (rBuff & 0x01);
  6124  00DD9A  5020               	movf	lmp91000_isReady@rBuff^0,w,c
  6125  00DD9C  0B01               	andlw	1
  6126  00DD9E  0012               	return		;funcret
  6127  00DDA0                     __end_of_lmp91000_isReady:
  6128                           	callstack 0
  6129                           
  6130 ;; *************** function _lmp91000_get_status *****************
  6131 ;; Defined at:
  6132 ;;		line 12 in file "bsp/lmp91000.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  preg            1   28[COMRAM] PTR unsigned char 
  6135 ;;		 -> lmp91000_isReady@rBuff(1), 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  rBuff           1   30[COMRAM] unsigned char 
  6138 ;;  wBuff           1   29[COMRAM] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      unsigned char 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6148 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6151 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6152 ;;Total ram usage:        3 bytes
  6153 ;; Hardware stack levels used: 1
  6154 ;; Hardware stack levels required when called: 7
  6155 ;; This function calls:
  6156 ;;		_i2c_readBytes
  6157 ;;		_i2c_writeBytes
  6158 ;; This function is called by:
  6159 ;;		_lmp91000_isReady
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text17
  6164  00D108                     __ptext17:
  6165                           	callstack 0
  6166  00D108                     _lmp91000_get_status:
  6167                           	callstack 19
  6168                           
  6169                           ;lmp91000.c: 14: uint8_t wBuff = 0x00;
  6170                           
  6171                           ;incstack = 0
  6172  00D108  0E00               	movlw	0
  6173  00D10A  6E1E               	movwf	lmp91000_get_status@wBuff^0,c
  6174                           
  6175                           ;lmp91000.c: 15: uint8_t rBuff;;lmp91000.c: 17: if (i2c_writeBytes(0x90, &wBuff, 1, 0) =
      +                          = 0) {
  6176  00D10C  0E1E               	movlw	low lmp91000_get_status@wBuff
  6177  00D10E  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  6178  00D110  0E01               	movlw	1
  6179  00D112  6E16               	movwf	i2c_writeBytes@len^0,c
  6180  00D114  0E00               	movlw	0
  6181  00D116  6E17               	movwf	i2c_writeBytes@isStop^0,c
  6182  00D118  0E90               	movlw	144
  6183  00D11A  EC7D  F06B         	call	_i2c_writeBytes
  6184  00D11E  0900               	iorlw	0
  6185  00D120  A4D8               	btfss	status,2,c
  6186  00D122  D002               	goto	l31485
  6187  00D124                     u39500:
  6188                           
  6189                           ;lmp91000.c: 18: return 0;
  6190  00D124  0E00               	movlw	0
  6191  00D126  0012               	return	
  6192  00D128                     l31485:
  6193                           
  6194                           ;lmp91000.c: 19: };lmp91000.c: 21: if (i2c_readBytes(0x90, &rBuff, 1) == 0) {
  6195  00D128  0E1F               	movlw	low lmp91000_get_status@rBuff
  6196  00D12A  6E11               	movwf	i2c_readBytes@rdptr^0,c
  6197  00D12C  6A12               	clrf	(i2c_readBytes@rdptr+1)^0,c
  6198  00D12E  0E01               	movlw	1
  6199  00D130  6E13               	movwf	i2c_readBytes@len^0,c
  6200  00D132  0E90               	movlw	144
  6201  00D134  ECC3  F060         	call	_i2c_readBytes
  6202  00D138  0900               	iorlw	0
  6203  00D13A  B4D8               	btfsc	status,2,c
  6204  00D13C  D7F3               	goto	u39500
  6205                           
  6206                           ;lmp91000.c: 23: };lmp91000.c: 25: *preg = rBuff;
  6207  00D13E  501D               	movf	lmp91000_get_status@preg^0,w,c
  6208  00D140  6ED9               	movwf	fsr2l,c
  6209  00D142  6ADA               	clrf	fsr2h,c
  6210  00D144  C01F  FFDF         	movff	lmp91000_get_status@rBuff,indf2
  6211                           
  6212                           ;lmp91000.c: 27: return 1;
  6213  00D148  0E01               	movlw	1
  6214  00D14A  0012               	return		;funcret
  6215  00D14C                     __end_of_lmp91000_get_status:
  6216                           	callstack 0
  6217                           
  6218 ;; *************** function _sensMeasure_temp_read *****************
  6219 ;; Defined at:
  6220 ;;		line 107 in file "app_sens_measure.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  channel         1    wreg     unsigned char 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  channel         1   45[BANK0 ] unsigned char 
  6225 ;;  volt            4   41[BANK0 ] float 
  6226 ;;  raw             2   46[BANK0 ] int 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      unsigned char 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 3F/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6237 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6239 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6240 ;;Total ram usage:        7 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 9
  6243 ;; This function calls:
  6244 ;;		_ADCto_uVoltage
  6245 ;;		___fladd
  6246 ;;		_gasSensor_temperature
  6247 ;;		_sensor_ADC_read
  6248 ;; This function is called by:
  6249 ;;		_sensMeasure_task
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text18
  6254  00B40A                     __ptext18:
  6255                           	callstack 0
  6256  00B40A                     _sensMeasure_temp_read:
  6257                           	callstack 20
  6258                           
  6259                           ;incstack = 0
  6260                           ;sensMeasure_temp_read@channel stored from wreg
  6261  00B40A  6F8D               	movwf	sensMeasure_temp_read@channel& (0+255),b
  6262                           
  6263                           ;app_sens_measure.c: 109: int16_t raw;;app_sens_measure.c: 111: if (sensor_ADC_read(chan
      +                          nel, &raw)) {
  6264  00B40C  0E8E               	movlw	low sensMeasure_temp_read@raw
  6265  00B40E  6E25               	movwf	sensor_ADC_read@raw_adc^0,c
  6266  00B410  6A26               	clrf	(sensor_ADC_read@raw_adc+1)^0,c
  6267  00B412  0100               	movlb	0	; () banked
  6268  00B414  518D               	movf	sensMeasure_temp_read@channel& (0+255),w,b
  6269  00B416  EC07  F06F         	call	_sensor_ADC_read
  6270  00B41A  0900               	iorlw	0
  6271  00B41C  B4D8               	btfsc	status,2,c
  6272  00B41E  D048               	goto	l34221
  6273                           
  6274                           ;app_sens_measure.c: 112: float volt = ADCto_uVoltage(raw, FSR_2p048V);
  6275  00B420  C08E  F07D         	movff	sensMeasure_temp_read@raw,ADCto_uVoltage@raw_adc
  6276  00B424  C08F  F07E         	movff	sensMeasure_temp_read@raw+1,ADCto_uVoltage@raw_adc+1
  6277  00B428  0E02               	movlw	2
  6278  00B42A  0100               	movlb	0	; () banked
  6279  00B42C  6F7F               	movwf	ADCto_uVoltage@gain& (0+255),b
  6280  00B42E  ECF2  F061         	call	_ADCto_uVoltage	;wreg free
  6281  00B432  C07D  F089         	movff	?_ADCto_uVoltage,sensMeasure_temp_read@volt
  6282  00B436  C07E  F08A         	movff	?_ADCto_uVoltage+1,sensMeasure_temp_read@volt+1
  6283  00B43A  C07F  F08B         	movff	?_ADCto_uVoltage+2,sensMeasure_temp_read@volt+2
  6284  00B43E  C080  F08C         	movff	?_ADCto_uVoltage+3,sensMeasure_temp_read@volt+3
  6285                           
  6286                           ;app_sens_measure.c: 113: g_temp_value[LV_TEMP] = gasSensor_temperature(volt);
  6287  00B442  C089  F07D         	movff	sensMeasure_temp_read@volt,gasSensor_temperature@temp_uVolt
  6288  00B446  C08A  F07E         	movff	sensMeasure_temp_read@volt+1,gasSensor_temperature@temp_uVolt+1
  6289  00B44A  C08B  F07F         	movff	sensMeasure_temp_read@volt+2,gasSensor_temperature@temp_uVolt+2
  6290  00B44E  C08C  F080         	movff	sensMeasure_temp_read@volt+3,gasSensor_temperature@temp_uVolt+3
  6291  00B452  ECF1  F058         	call	_gasSensor_temperature	;wreg free
  6292  00B456  C07D  F120         	movff	?_gasSensor_temperature,_g_temp_value+8
  6293  00B45A  C07E  F121         	movff	?_gasSensor_temperature+1,_g_temp_value+9
  6294  00B45E  C07F  F122         	movff	?_gasSensor_temperature+2,_g_temp_value+10
  6295  00B462  C080  F123         	movff	?_gasSensor_temperature+3,_g_temp_value+11
  6296                           
  6297                           ;app_sens_measure.c: 114: g_temp_value[LV_TEMP] += g_nvm.eeprm[channel].tempOffset;
  6298  00B466  C120  F028         	movff	_g_temp_value+8,___fladd@b
  6299  00B46A  C121  F029         	movff	_g_temp_value+9,___fladd@b+1
  6300  00B46E  C122  F02A         	movff	_g_temp_value+10,___fladd@b+2
  6301  00B472  C123  F02B         	movff	_g_temp_value+11,___fladd@b+3
  6302  00B476  0100               	movlb	0	; () banked
  6303  00B478  518D               	movf	sensMeasure_temp_read@channel& (0+255),w,b
  6304  00B47A  0D3E               	mullw	62
  6305  00B47C  0E92               	movlw	low (_g_nvm+64)
  6306  00B47E  24F3               	addwf	243,w,c
  6307  00B480  6ED9               	movwf	fsr2l,c
  6308  00B482  0E01               	movlw	high (_g_nvm+64)
  6309  00B484  20F4               	addwfc	prodh,w,c
  6310  00B486  6EDA               	movwf	fsr2h,c
  6311  00B488  CFDE F02C          	movff	postinc2,___fladd@a
  6312  00B48C  CFDE F02D          	movff	postinc2,___fladd@a+1
  6313  00B490  CFDE F02E          	movff	postinc2,___fladd@a+2
  6314  00B494  CFDE F02F          	movff	postinc2,___fladd@a+3
  6315  00B498  ECBF  F031         	call	___fladd	;wreg free
  6316  00B49C  C028  F120         	movff	?___fladd,_g_temp_value+8
  6317  00B4A0  C029  F121         	movff	?___fladd+1,_g_temp_value+9
  6318  00B4A4  C02A  F122         	movff	?___fladd+2,_g_temp_value+10
  6319  00B4A8  C02B  F123         	movff	?___fladd+3,_g_temp_value+11
  6320                           
  6321                           ;app_sens_measure.c: 115: return 1;
  6322  00B4AC  0E01               	movlw	1
  6323  00B4AE  0012               	return	
  6324  00B4B0                     l34221:
  6325                           
  6326                           ;app_sens_measure.c: 116: };app_sens_measure.c: 117: return 0;
  6327  00B4B0  0E00               	movlw	0
  6328  00B4B2  0012               	return		;funcret
  6329  00B4B4                     __end_of_sensMeasure_temp_read:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _gasSensor_temperature *****************
  6333 ;; Defined at:
  6334 ;;		line 314 in file "sensor.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  temp_uVolt      4   29[BANK0 ] float 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  temp            4   33[BANK0 ] float 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  4   29[BANK0 ] float 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 3F/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6349 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;Total ram usage:       12 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; Hardware stack levels required when called: 5
  6355 ;; This function calls:
  6356 ;;		___fladd
  6357 ;;		___fldiv
  6358 ;;		___flmul
  6359 ;; This function is called by:
  6360 ;;		_sensMeasure_temp_read
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text19
  6365  00B1E2                     __ptext19:
  6366                           	callstack 0
  6367  00B1E2                     _gasSensor_temperature:
  6368                           	callstack 23
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;sensor.c: 316: float temp = -0.12f * (temp_uVolt/1000.0f + 500.0f) + 187.2f;
  6372                           
  6373                           ;incstack = 0
  6374  00B1E2  0E8F               	movlw	143
  6375  00B1E4  6E3C               	movwf	___flmul@a^0,c
  6376  00B1E6  0EC2               	movlw	194
  6377  00B1E8  6E3D               	movwf	(___flmul@a+1)^0,c
  6378  00B1EA  0EF5               	movlw	245
  6379  00B1EC  6E3E               	movwf	(___flmul@a+2)^0,c
  6380  00B1EE  0EBD               	movlw	189
  6381  00B1F0  6E3F               	movwf	(___flmul@a+3)^0,c
  6382  00B1F2  0E00               	movlw	0
  6383  00B1F4  6E2C               	movwf	___fladd@a^0,c
  6384  00B1F6  0E00               	movlw	0
  6385  00B1F8  6E2D               	movwf	(___fladd@a+1)^0,c
  6386  00B1FA  0EFA               	movlw	250
  6387  00B1FC  6E2E               	movwf	(___fladd@a+2)^0,c
  6388  00B1FE  0E43               	movlw	67
  6389  00B200  6E2F               	movwf	(___fladd@a+3)^0,c
  6390  00B202  0E00               	movlw	0
  6391  00B204  6E13               	movwf	___fldiv@a^0,c
  6392  00B206  0E00               	movlw	0
  6393  00B208  6E14               	movwf	(___fldiv@a+1)^0,c
  6394  00B20A  0E7A               	movlw	122
  6395  00B20C  6E15               	movwf	(___fldiv@a+2)^0,c
  6396  00B20E  0E44               	movlw	68
  6397  00B210  6E16               	movwf	(___fldiv@a+3)^0,c
  6398  00B212  C07D  F00F         	movff	gasSensor_temperature@temp_uVolt,___fldiv@b
  6399  00B216  C07E  F010         	movff	gasSensor_temperature@temp_uVolt+1,___fldiv@b+1
  6400  00B21A  C07F  F011         	movff	gasSensor_temperature@temp_uVolt+2,___fldiv@b+2
  6401  00B21E  C080  F012         	movff	gasSensor_temperature@temp_uVolt+3,___fldiv@b+3
  6402  00B222  ECB0  F03B         	call	___fldiv	;wreg free
  6403  00B226  C00F  F028         	movff	?___fldiv,___fladd@b
  6404  00B22A  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  6405  00B22E  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  6406  00B232  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  6407  00B236  ECBF  F031         	call	___fladd	;wreg free
  6408  00B23A  C028  F038         	movff	?___fladd,___flmul@b
  6409  00B23E  C029  F039         	movff	?___fladd+1,___flmul@b+1
  6410  00B242  C02A  F03A         	movff	?___fladd+2,___flmul@b+2
  6411  00B246  C02B  F03B         	movff	?___fladd+3,___flmul@b+3
  6412  00B24A  EC9F  F02E         	call	___flmul	;wreg free
  6413  00B24E  C038  F085         	movff	?___flmul,_gasSensor_temperature$9453
  6414  00B252  C039  F086         	movff	?___flmul+1,_gasSensor_temperature$9453+1
  6415  00B256  C03A  F087         	movff	?___flmul+2,_gasSensor_temperature$9453+2
  6416  00B25A  C03B  F088         	movff	?___flmul+3,_gasSensor_temperature$9453+3
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;sensor.c: 316: float temp = -0.12f * (temp_uVolt/1000.0f + 500.0f) + 187.2f;
  6420  00B25E  C085  F028         	movff	_gasSensor_temperature$9453,___fladd@b
  6421  00B262  C086  F029         	movff	_gasSensor_temperature$9453+1,___fladd@b+1
  6422  00B266  C087  F02A         	movff	_gasSensor_temperature$9453+2,___fladd@b+2
  6423  00B26A  C088  F02B         	movff	_gasSensor_temperature$9453+3,___fladd@b+3
  6424  00B26E  0E33               	movlw	51
  6425  00B270  6E2C               	movwf	___fladd@a^0,c
  6426  00B272  0E33               	movlw	51
  6427  00B274  6E2D               	movwf	(___fladd@a+1)^0,c
  6428  00B276  0E3B               	movlw	59
  6429  00B278  6E2E               	movwf	(___fladd@a+2)^0,c
  6430  00B27A  0E43               	movlw	67
  6431  00B27C  6E2F               	movwf	(___fladd@a+3)^0,c
  6432  00B27E  ECBF  F031         	call	___fladd	;wreg free
  6433  00B282  C028  F081         	movff	?___fladd,gasSensor_temperature@temp
  6434  00B286  C029  F082         	movff	?___fladd+1,gasSensor_temperature@temp+1
  6435  00B28A  C02A  F083         	movff	?___fladd+2,gasSensor_temperature@temp+2
  6436  00B28E  C02B  F084         	movff	?___fladd+3,gasSensor_temperature@temp+3
  6437                           
  6438                           ;sensor.c: 317: return temp;
  6439  00B292  C081  F07D         	movff	gasSensor_temperature@temp,?_gasSensor_temperature
  6440  00B296  C082  F07E         	movff	gasSensor_temperature@temp+1,?_gasSensor_temperature+1
  6441  00B29A  C083  F07F         	movff	gasSensor_temperature@temp+2,?_gasSensor_temperature+2
  6442  00B29E  C084  F080         	movff	gasSensor_temperature@temp+3,?_gasSensor_temperature+3
  6443  00B2A2  0012               	return		;funcret
  6444  00B2A4                     __end_of_gasSensor_temperature:
  6445                           	callstack 0
  6446                           
  6447 ;; *************** function _sensMeasure_gas_read *****************
  6448 ;; Defined at:
  6449 ;;		line 120 in file "app_sens_measure.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  channel         1    wreg     unsigned char 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  channel         1   10[BANK3 ] unsigned char 
  6454 ;;  volt            4    4[BANK3 ] float 
  6455 ;;  cmp_value       4    0[BANK3 ] float 
  6456 ;;  raw             2    8[BANK3 ] int 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      unsigned char 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 3F/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;      Locals:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
  6468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6469 ;;      Totals:         1       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
  6470 ;;Total ram usage:       12 bytes
  6471 ;; Hardware stack levels used: 1
  6472 ;; Hardware stack levels required when called: 9
  6473 ;; This function calls:
  6474 ;;		_ADCto_uVoltage
  6475 ;;		_Kalman_updateEstimate
  6476 ;;		_compensate_temperature
  6477 ;;		_gasSensor_calib
  6478 ;;		_sensor_ADC_read
  6479 ;; This function is called by:
  6480 ;;		_sensMeasure_task
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text20
  6485  00940C                     __ptext20:
  6486                           	callstack 0
  6487  00940C                     _sensMeasure_gas_read:
  6488                           	callstack 20
  6489                           
  6490                           ;incstack = 0
  6491                           ;sensMeasure_gas_read@channel stored from wreg
  6492  00940C  0103               	movlb	3	; () banked
  6493  00940E  6FED               	movwf	sensMeasure_gas_read@channel& (0+255),b
  6494                           
  6495                           ;app_sens_measure.c: 122: int16_t raw;;app_sens_measure.c: 124: if (sensor_ADC_read(chan
      +                          nel, &raw)) {
  6496  009410  0EEB               	movlw	low sensMeasure_gas_read@raw
  6497  009412  6E25               	movwf	sensor_ADC_read@raw_adc^0,c
  6498  009414  0E03               	movlw	high sensMeasure_gas_read@raw
  6499  009416  6E26               	movwf	(sensor_ADC_read@raw_adc+1)^0,c
  6500  009418  0103               	movlb	3	; () banked
  6501  00941A  51ED               	movf	sensMeasure_gas_read@channel& (0+255),w,b
  6502  00941C  EC07  F06F         	call	_sensor_ADC_read
  6503  009420  0900               	iorlw	0
  6504  009422  B4D8               	btfsc	status,2,c
  6505  009424  D095               	goto	l34241
  6506                           
  6507                           ;app_sens_measure.c: 125: float volt = ADCto_uVoltage(raw, g_nvm.eeprm[channel].adc_gain
      +                          );
  6508  009426  C3EB  F07D         	movff	sensMeasure_gas_read@raw,ADCto_uVoltage@raw_adc
  6509  00942A  C3EC  F07E         	movff	sensMeasure_gas_read@raw+1,ADCto_uVoltage@raw_adc+1
  6510  00942E  0103               	movlb	3	; () banked
  6511  009430  51ED               	movf	sensMeasure_gas_read@channel& (0+255),w,b
  6512  009432  0D3E               	mullw	62
  6513  009434  0E72               	movlw	low (_g_nvm+32)
  6514  009436  24F3               	addwf	243,w,c
  6515  009438  6ED9               	movwf	fsr2l,c
  6516  00943A  0E01               	movlw	high (_g_nvm+32)
  6517  00943C  20F4               	addwfc	prodh,w,c
  6518  00943E  6EDA               	movwf	fsr2h,c
  6519  009440  50DF               	movf	indf2,w,c
  6520  009442  0100               	movlb	0	; () banked
  6521  009444  6F7F               	movwf	ADCto_uVoltage@gain& (0+255),b
  6522  009446  ECF2  F061         	call	_ADCto_uVoltage	;wreg free
  6523  00944A  C07D  F3E7         	movff	?_ADCto_uVoltage,sensMeasure_gas_read@volt
  6524  00944E  C07E  F3E8         	movff	?_ADCto_uVoltage+1,sensMeasure_gas_read@volt+1
  6525  009452  C07F  F3E9         	movff	?_ADCto_uVoltage+2,sensMeasure_gas_read@volt+2
  6526  009456  C080  F3EA         	movff	?_ADCto_uVoltage+3,sensMeasure_gas_read@volt+3
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;app_sens_measure.c: 128: g_temp_value[LV_GAS_VOLT] = Kalman_updateEstimate(&kalmanFilte
      +                          r[channel], volt);
  6530  00945A  0103               	movlb	3	; () banked
  6531  00945C  51ED               	movf	sensMeasure_gas_read@channel& (0+255),w,b
  6532  00945E  0D18               	mullw	24
  6533  009460  0E85               	movlw	low _kalmanFilter
  6534  009462  24F3               	addwf	243,w,c
  6535  009464  0100               	movlb	0	; () banked
  6536  009466  6F7D               	movwf	Kalman_updateEstimate@pObj& (0+255),b
  6537  009468  0E02               	movlw	high _kalmanFilter
  6538  00946A  20F4               	addwfc	prodh,w,c
  6539  00946C  6F7E               	movwf	(Kalman_updateEstimate@pObj+1)& (0+255),b
  6540  00946E  C3E7  F07F         	movff	sensMeasure_gas_read@volt,Kalman_updateEstimate@mea
  6541  009472  C3E8  F080         	movff	sensMeasure_gas_read@volt+1,Kalman_updateEstimate@mea+1
  6542  009476  C3E9  F081         	movff	sensMeasure_gas_read@volt+2,Kalman_updateEstimate@mea+2
  6543  00947A  C3EA  F082         	movff	sensMeasure_gas_read@volt+3,Kalman_updateEstimate@mea+3
  6544  00947E  ECA1  F037         	call	_Kalman_updateEstimate	;wreg free
  6545  009482  C07D  F118         	movff	?_Kalman_updateEstimate,_g_temp_value
  6546  009486  C07E  F119         	movff	?_Kalman_updateEstimate+1,_g_temp_value+1
  6547  00948A  C07F  F11A         	movff	?_Kalman_updateEstimate+2,_g_temp_value+2
  6548  00948E  C080  F11B         	movff	?_Kalman_updateEstimate+3,_g_temp_value+3
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;app_sens_measure.c: 133: float cmp_value = 0.0f;
  6552  009492  0E00               	movlw	0
  6553  009494  0103               	movlb	3	; () banked
  6554  009496  6FE3               	movwf	sensMeasure_gas_read@cmp_value& (0+255),b
  6555  009498  0E00               	movlw	0
  6556  00949A  6FE4               	movwf	(sensMeasure_gas_read@cmp_value+1)& (0+255),b
  6557  00949C  0E00               	movlw	0
  6558  00949E  6FE5               	movwf	(sensMeasure_gas_read@cmp_value+2)& (0+255),b
  6559  0094A0  0E00               	movlw	0
  6560  0094A2  6FE6               	movwf	(sensMeasure_gas_read@cmp_value+3)& (0+255),b
  6561                           
  6562                           ; BSR set to: 3
  6563                           ;app_sens_measure.c: 134: if (g_nvm.eeprm[channel].temp_compensate == TEMP_COMPENSATION)
      +                           {
  6564  0094A4  51ED               	movf	sensMeasure_gas_read@channel& (0+255),w,b
  6565  0094A6  0D3E               	mullw	62
  6566  0094A8  0E79               	movlw	low (_g_nvm+39)
  6567  0094AA  24F3               	addwf	243,w,c
  6568  0094AC  6ED9               	movwf	fsr2l,c
  6569  0094AE  0E01               	movlw	high (_g_nvm+39)
  6570  0094B0  20F4               	addwfc	prodh,w,c
  6571  0094B2  6EDA               	movwf	fsr2h,c
  6572  0094B4  04DE               	decf	postinc2,w,c
  6573  0094B6  A4D8               	btfss	status,2,c
  6574  0094B8  D02D               	goto	l1421
  6575                           
  6576                           ; BSR set to: 3
  6577                           ;app_sens_measure.c: 135: cmp_value = compensate_temperature(g_temp_value[LV_TEMP], g_nv
      +                          m.eeprm[channel].baseLine_temp, g_nvm.eeprm[channel].sensor_model);
  6578  0094BA  C120  F09D         	movff	_g_temp_value+8,compensate_temperature@temp
  6579  0094BE  C121  F09E         	movff	_g_temp_value+9,compensate_temperature@temp+1
  6580  0094C2  C122  F09F         	movff	_g_temp_value+10,compensate_temperature@temp+2
  6581  0094C6  C123  F0A0         	movff	_g_temp_value+11,compensate_temperature@temp+3
  6582  0094CA  51ED               	movf	sensMeasure_gas_read@channel& (0+255),w,b
  6583  0094CC  0D3E               	mullw	62
  6584  0094CE  0EA8               	movlw	low (_g_nvm+86)
  6585  0094D0  24F3               	addwf	243,w,c
  6586  0094D2  6ED9               	movwf	fsr2l,c
  6587  0094D4  0E01               	movlw	high (_g_nvm+86)
  6588  0094D6  20F4               	addwfc	prodh,w,c
  6589  0094D8  6EDA               	movwf	fsr2h,c
  6590  0094DA  CFDE F0A1          	movff	postinc2,compensate_temperature@baseLine_temp
  6591  0094DE  CFDE F0A2          	movff	postinc2,compensate_temperature@baseLine_temp+1
  6592  0094E2  CFDE F0A3          	movff	postinc2,compensate_temperature@baseLine_temp+2
  6593  0094E6  CFDE F0A4          	movff	postinc2,compensate_temperature@baseLine_temp+3
  6594  0094EA  51ED               	movf	sensMeasure_gas_read@channel& (0+255),w,b
  6595  0094EC  0D3E               	mullw	62
  6596  0094EE  0E71               	movlw	low (_g_nvm+31)
  6597  0094F0  24F3               	addwf	243,w,c
  6598  0094F2  6ED9               	movwf	fsr2l,c
  6599  0094F4  0E01               	movlw	high (_g_nvm+31)
  6600  0094F6  20F4               	addwfc	prodh,w,c
  6601  0094F8  6EDA               	movwf	fsr2h,c
  6602  0094FA  50DF               	movf	indf2,w,c
  6603  0094FC  0100               	movlb	0	; () banked
  6604  0094FE  6FA5               	movwf	compensate_temperature@model& (0+255),b
  6605  009500  ECBA  F034         	call	_compensate_temperature	;wreg free
  6606  009504  C09D  F3E3         	movff	?_compensate_temperature,sensMeasure_gas_read@cmp_value
  6607  009508  C09E  F3E4         	movff	?_compensate_temperature+1,sensMeasure_gas_read@cmp_value+1
  6608  00950C  C09F  F3E5         	movff	?_compensate_temperature+2,sensMeasure_gas_read@cmp_value+2
  6609  009510  C0A0  F3E6         	movff	?_compensate_temperature+3,sensMeasure_gas_read@cmp_value+3
  6610  009514                     l1421:
  6611                           
  6612                           ;app_sens_measure.c: 136: };app_sens_measure.c: 137: g_temp_value[LV_GAS_PPM] = gasSenso
      +                          r_calib(channel, cmp_value, volt);
  6613  009514  C3E3  F0A5         	movff	sensMeasure_gas_read@cmp_value,gasSensor_calib@cmp_val
  6614  009518  C3E4  F0A6         	movff	sensMeasure_gas_read@cmp_value+1,gasSensor_calib@cmp_val+1
  6615  00951C  C3E5  F0A7         	movff	sensMeasure_gas_read@cmp_value+2,gasSensor_calib@cmp_val+2
  6616  009520  C3E6  F0A8         	movff	sensMeasure_gas_read@cmp_value+3,gasSensor_calib@cmp_val+3
  6617  009524  C3E7  F0A9         	movff	sensMeasure_gas_read@volt,gasSensor_calib@gas_uVolt
  6618  009528  C3E8  F0AA         	movff	sensMeasure_gas_read@volt+1,gasSensor_calib@gas_uVolt+1
  6619  00952C  C3E9  F0AB         	movff	sensMeasure_gas_read@volt+2,gasSensor_calib@gas_uVolt+2
  6620  009530  C3EA  F0AC         	movff	sensMeasure_gas_read@volt+3,gasSensor_calib@gas_uVolt+3
  6621  009534  0103               	movlb	3	; () banked
  6622  009536  51ED               	movf	sensMeasure_gas_read@channel& (0+255),w,b
  6623  009538  EC62  F03A         	call	_gasSensor_calib
  6624  00953C  C0A5  F11C         	movff	?_gasSensor_calib,_g_temp_value+4
  6625  009540  C0A6  F11D         	movff	?_gasSensor_calib+1,_g_temp_value+5
  6626  009544  C0A7  F11E         	movff	?_gasSensor_calib+2,_g_temp_value+6
  6627  009548  C0A8  F11F         	movff	?_gasSensor_calib+3,_g_temp_value+7
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;app_sens_measure.c: 145: return 1;
  6631  00954C  0E01               	movlw	1
  6632  00954E  0012               	return	
  6633  009550                     l34241:
  6634                           
  6635                           ;app_sens_measure.c: 146: };app_sens_measure.c: 147: return 0;
  6636  009550  0E00               	movlw	0
  6637  009552  0012               	return		;funcret
  6638  009554                     __end_of_sensMeasure_gas_read:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function _sensor_ADC_read *****************
  6642 ;; Defined at:
  6643 ;;		line 175 in file "sensor.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  channel         1    wreg     unsigned char 
  6646 ;;  raw_adc         2   36[COMRAM] PTR int 
  6647 ;;		 -> sensMeasure_gas_read@raw(2), sensMeasure_temp_read@raw(2), 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  channel         1   38[COMRAM] unsigned char 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      unsigned char 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 3C/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;Total ram usage:        3 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 8
  6666 ;; This function calls:
  6667 ;;		_ads1114_read
  6668 ;; This function is called by:
  6669 ;;		_sensMeasure_temp_read
  6670 ;;		_sensMeasure_gas_read
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text21
  6675  00DE0E                     __ptext21:
  6676                           	callstack 0
  6677  00DE0E                     _sensor_ADC_read:
  6678                           	callstack 20
  6679                           
  6680                           ;incstack = 0
  6681                           ;sensor_ADC_read@channel stored from wreg
  6682  00DE0E  6E27               	movwf	sensor_ADC_read@channel^0,c
  6683                           
  6684                           ;sensor.c: 177: return ads1114_read(channel, raw_adc);
  6685  00DE10  C025  F01D         	movff	sensor_ADC_read@raw_adc,ads1114_read@raw_adc
  6686  00DE14  C026  F01E         	movff	sensor_ADC_read@raw_adc+1,ads1114_read@raw_adc+1
  6687  00DE18  5027               	movf	sensor_ADC_read@channel^0,w,c
  6688  00DE1A  EC3F  F061         	call	_ads1114_read
  6689  00DE1E  0012               	return		;funcret
  6690  00DE20                     __end_of_sensor_ADC_read:
  6691                           	callstack 0
  6692                           
  6693 ;; *************** function _ads1114_read *****************
  6694 ;; Defined at:
  6695 ;;		line 44 in file "bsp/ads1114.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  channel         1    wreg     unsigned char 
  6698 ;;  raw_adc         2   28[COMRAM] PTR int 
  6699 ;;		 -> sensMeasure_gas_read@raw(2), sensMeasure_temp_read@raw(2), 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  channel         1   35[COMRAM] unsigned char 
  6702 ;;  rbuff           2   33[COMRAM] unsigned char [2]
  6703 ;;  wbuff           1   32[COMRAM] unsigned char 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      unsigned char 
  6706 ;; Registers used:
  6707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6717 ;;Total ram usage:        8 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 7
  6720 ;; This function calls:
  6721 ;;		_i2c_readBytes
  6722 ;;		_i2c_writeBytes
  6723 ;; This function is called by:
  6724 ;;		_sensor_ADC_read
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text22
  6729  00C27E                     __ptext22:
  6730                           	callstack 0
  6731  00C27E                     _ads1114_read:
  6732                           	callstack 20
  6733                           
  6734                           ;incstack = 0
  6735                           ;ads1114_read@channel stored from wreg
  6736  00C27E  6E24               	movwf	ads1114_read@channel^0,c
  6737                           
  6738                           ;ads1114.c: 46: uint8_t wbuff = 0x00;
  6739  00C280  0E00               	movlw	0
  6740  00C282  6E21               	movwf	ads1114_read@wbuff^0,c
  6741                           
  6742                           ;ads1114.c: 47: uint8_t rbuff[2];;ads1114.c: 49: if (i2c_writeBytes(ads1114_address[chan
      +                          nel], &wbuff, 1, 1) == 0)
  6743  00C284  0E21               	movlw	low ads1114_read@wbuff
  6744  00C286  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  6745  00C288  0E01               	movlw	1
  6746  00C28A  6E16               	movwf	i2c_writeBytes@len^0,c
  6747  00C28C  0E01               	movlw	1
  6748  00C28E  6E17               	movwf	i2c_writeBytes@isStop^0,c
  6749  00C290  0EFB               	movlw	low _ads1114_address
  6750  00C292  2424               	addwf	ads1114_read@channel^0,w,c
  6751  00C294  6ED9               	movwf	fsr2l,c
  6752  00C296  6ADA               	clrf	fsr2h,c
  6753  00C298  0E01               	movlw	high _ads1114_address
  6754  00C29A  22DA               	addwfc	fsr2h,f,c
  6755  00C29C  50DF               	movf	indf2,w,c
  6756  00C29E  EC7D  F06B         	call	_i2c_writeBytes
  6757  00C2A2  0900               	iorlw	0
  6758  00C2A4  A4D8               	btfss	status,2,c
  6759  00C2A6  D002               	goto	l34195
  6760  00C2A8                     u43320:
  6761                           
  6762                           ;ads1114.c: 50: return 0;
  6763  00C2A8  0E00               	movlw	0
  6764  00C2AA  0012               	return	
  6765  00C2AC                     l34195:
  6766                           
  6767                           ;ads1114.c: 52: if (i2c_readBytes(ads1114_address[channel], rbuff, 2) == 0)
  6768  00C2AC  0E22               	movlw	low ads1114_read@rbuff
  6769  00C2AE  6E11               	movwf	i2c_readBytes@rdptr^0,c
  6770  00C2B0  6A12               	clrf	(i2c_readBytes@rdptr+1)^0,c
  6771  00C2B2  0E02               	movlw	2
  6772  00C2B4  6E13               	movwf	i2c_readBytes@len^0,c
  6773  00C2B6  0EFB               	movlw	low _ads1114_address
  6774  00C2B8  2424               	addwf	ads1114_read@channel^0,w,c
  6775  00C2BA  6ED9               	movwf	fsr2l,c
  6776  00C2BC  6ADA               	clrf	fsr2h,c
  6777  00C2BE  0E01               	movlw	high _ads1114_address
  6778  00C2C0  22DA               	addwfc	fsr2h,f,c
  6779  00C2C2  50DF               	movf	indf2,w,c
  6780  00C2C4  ECC3  F060         	call	_i2c_readBytes
  6781  00C2C8  0900               	iorlw	0
  6782  00C2CA  B4D8               	btfsc	status,2,c
  6783  00C2CC  D7ED               	goto	u43320
  6784                           
  6785                           ;ads1114.c: 55: *raw_adc = ((uint16_t)rbuff[0] << 8) | rbuff[1];
  6786  00C2CE  5023               	movf	(ads1114_read@rbuff+1)^0,w,c
  6787  00C2D0  C022  F01F         	movff	ads1114_read@rbuff,??_ads1114_read
  6788  00C2D4  6A20               	clrf	(??_ads1114_read+1)^0,c
  6789  00C2D6  C01F  F020         	movff	??_ads1114_read,??_ads1114_read+1
  6790  00C2DA  6A1F               	clrf	??_ads1114_read^0,c
  6791  00C2DC  121F               	iorwf	??_ads1114_read^0,f,c
  6792  00C2DE  0E00               	movlw	0
  6793  00C2E0  1220               	iorwf	(??_ads1114_read+1)^0,f,c
  6794  00C2E2  C01D  FFD9         	movff	ads1114_read@raw_adc,fsr2l
  6795  00C2E6  C01E  FFDA         	movff	ads1114_read@raw_adc+1,fsr2h
  6796  00C2EA  C01F  FFDE         	movff	??_ads1114_read,postinc2
  6797  00C2EE  C020  FFDD         	movff	??_ads1114_read+1,postdec2
  6798                           
  6799                           ;ads1114.c: 56: return 1;
  6800  00C2F2  0E01               	movlw	1
  6801  00C2F4  0012               	return		;funcret
  6802  00C2F6                     __end_of_ads1114_read:
  6803                           	callstack 0
  6804                           
  6805 ;; *************** function _gasSensor_calib *****************
  6806 ;; Defined at:
  6807 ;;		line 218 in file "sensor.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  channel         1    wreg     unsigned char 
  6810 ;;  cmp_val         4   69[BANK0 ] float 
  6811 ;;  gas_uVolt       4   73[BANK0 ] float 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  channel         1   97[BANK0 ] unsigned char 
  6814 ;;  baseline        4  102[BANK0 ] float 
  6815 ;;  span            4   98[BANK0 ] float 
  6816 ;;  gas_ppm         4   93[BANK0 ] float 
  6817 ;;  CalibrationG    4   89[BANK0 ] float 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  4   69[BANK0 ] float 
  6820 ;; Registers used:
  6821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 3F/3
  6824 ;;		On exit  : 3F/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6827 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Totals:         1      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;Total ram usage:       38 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 6
  6834 ;; This function calls:
  6835 ;;		___fldiv
  6836 ;;		___fleq
  6837 ;;		___flge
  6838 ;;		___flmul
  6839 ;;		___flsub
  6840 ;;		_gasSensor_filter
  6841 ;; This function is called by:
  6842 ;;		_sensMeasure_gas_read
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text23
  6847  0074C4                     __ptext23:
  6848                           	callstack 0
  6849  0074C4                     _gasSensor_calib:
  6850                           	callstack 22
  6851                           
  6852                           ;incstack = 0
  6853                           ;gasSensor_calib@channel stored from wreg
  6854  0074C4  0100               	movlb	0	; () banked
  6855  0074C6  6FC1               	movwf	gasSensor_calib@channel& (0+255),b
  6856                           
  6857                           ;sensor.c: 220: float gas_ppm;;sensor.c: 222: float span = g_nvm.eeprm[channel].span_uV;
  6858  0074C8  0100               	movlb	0	; () banked
  6859  0074CA  51C1               	movf	gasSensor_calib@channel& (0+255),w,b
  6860  0074CC  0D3E               	mullw	62
  6861  0074CE  0E7E               	movlw	low (_g_nvm+44)
  6862  0074D0  24F3               	addwf	243,w,c
  6863  0074D2  6ED9               	movwf	fsr2l,c
  6864  0074D4  0E01               	movlw	high (_g_nvm+44)
  6865  0074D6  20F4               	addwfc	prodh,w,c
  6866  0074D8  6EDA               	movwf	fsr2h,c
  6867  0074DA  CFDE F0C2          	movff	postinc2,gasSensor_calib@span
  6868  0074DE  CFDE F0C3          	movff	postinc2,gasSensor_calib@span+1
  6869  0074E2  CFDE F0C4          	movff	postinc2,gasSensor_calib@span+2
  6870  0074E6  CFDE F0C5          	movff	postinc2,gasSensor_calib@span+3
  6871                           
  6872                           ;sensor.c: 223: float baseline = g_nvm.eeprm[channel].baseLine_uV;
  6873  0074EA  51C1               	movf	gasSensor_calib@channel& (0+255),w,b
  6874  0074EC  0D3E               	mullw	62
  6875  0074EE  0E7A               	movlw	low (_g_nvm+40)
  6876  0074F0  24F3               	addwf	243,w,c
  6877  0074F2  6ED9               	movwf	fsr2l,c
  6878  0074F4  0E01               	movlw	high (_g_nvm+40)
  6879  0074F6  20F4               	addwfc	prodh,w,c
  6880  0074F8  6EDA               	movwf	fsr2h,c
  6881  0074FA  CFDE F0C6          	movff	postinc2,gasSensor_calib@baseline
  6882  0074FE  CFDE F0C7          	movff	postinc2,gasSensor_calib@baseline+1
  6883  007502  CFDE F0C8          	movff	postinc2,gasSensor_calib@baseline+2
  6884  007506  CFDE F0C9          	movff	postinc2,gasSensor_calib@baseline+3
  6885                           
  6886                           ;sensor.c: 224: float CalibrationGas = g_nvm.eeprm[channel].CalibrationGas;
  6887  00750A  51C1               	movf	gasSensor_calib@channel& (0+255),w,b
  6888  00750C  0D3E               	mullw	62
  6889  00750E  0E82               	movlw	low (_g_nvm+48)
  6890  007510  24F3               	addwf	243,w,c
  6891  007512  6ED9               	movwf	fsr2l,c
  6892  007514  0E01               	movlw	high (_g_nvm+48)
  6893  007516  20F4               	addwfc	prodh,w,c
  6894  007518  6EDA               	movwf	fsr2h,c
  6895  00751A  CFDE F0B9          	movff	postinc2,gasSensor_calib@CalibrationGas
  6896  00751E  CFDE F0BA          	movff	postinc2,gasSensor_calib@CalibrationGas+1
  6897  007522  CFDE F0BB          	movff	postinc2,gasSensor_calib@CalibrationGas+2
  6898  007526  CFDE F0BC          	movff	postinc2,gasSensor_calib@CalibrationGas+3
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;sensor.c: 226: if ((span - baseline) == 0.0f || span <= baseline )
  6902  00752A  C0C6  F064         	movff	gasSensor_calib@baseline,___flsub@a
  6903  00752E  C0C7  F065         	movff	gasSensor_calib@baseline+1,___flsub@a+1
  6904  007532  C0C8  F066         	movff	gasSensor_calib@baseline+2,___flsub@a+2
  6905  007536  C0C9  F067         	movff	gasSensor_calib@baseline+3,___flsub@a+3
  6906  00753A  C0C2  F060         	movff	gasSensor_calib@span,___flsub@b
  6907  00753E  C0C3  F061         	movff	gasSensor_calib@span+1,___flsub@b+1
  6908  007542  C0C4  F062         	movff	gasSensor_calib@span+2,___flsub@b+2
  6909  007546  C0C5  F063         	movff	gasSensor_calib@span+3,___flsub@b+3
  6910  00754A  EC1B  F068         	call	___flsub	;wreg free
  6911  00754E  C060  F091         	movff	?___flsub,___fleq@ff1
  6912  007552  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
  6913  007556  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
  6914  00755A  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
  6915  00755E  0E00               	movlw	0
  6916  007560  0100               	movlb	0	; () banked
  6917  007562  6F95               	movwf	___fleq@ff2& (0+255),b
  6918  007564  0E00               	movlw	0
  6919  007566  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
  6920  007568  0E00               	movlw	0
  6921  00756A  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
  6922  00756C  0E00               	movlw	0
  6923  00756E  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
  6924  007570  EC32  F05F         	call	___fleq	;wreg free
  6925  007574  B0D8               	btfsc	status,0,c
  6926  007576  D014               	goto	u41290
  6927                           
  6928                           ; BSR set to: 0
  6929  007578  C0C6  F091         	movff	gasSensor_calib@baseline,___flge@ff1
  6930  00757C  C0C7  F092         	movff	gasSensor_calib@baseline+1,___flge@ff1+1
  6931  007580  C0C8  F093         	movff	gasSensor_calib@baseline+2,___flge@ff1+2
  6932  007584  C0C9  F094         	movff	gasSensor_calib@baseline+3,___flge@ff1+3
  6933  007588  C0C2  F095         	movff	gasSensor_calib@span,___flge@ff2
  6934  00758C  C0C3  F096         	movff	gasSensor_calib@span+1,___flge@ff2+1
  6935  007590  C0C4  F097         	movff	gasSensor_calib@span+2,___flge@ff2+2
  6936  007594  C0C5  F098         	movff	gasSensor_calib@span+3,___flge@ff2+3
  6937  007598  EC31  F056         	call	___flge	;wreg free
  6938  00759C  A0D8               	btfss	status,0,c
  6939  00759E  D009               	goto	l32749
  6940  0075A0                     u41290:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;sensor.c: 227: return 0.0f;
  6944  0075A0  0E00               	movlw	0
  6945  0075A2  6FA5               	movwf	?_gasSensor_calib& (0+255),b
  6946  0075A4  0E00               	movlw	0
  6947  0075A6  6FA6               	movwf	(?_gasSensor_calib+1)& (0+255),b
  6948  0075A8  0E00               	movlw	0
  6949  0075AA  6FA7               	movwf	(?_gasSensor_calib+2)& (0+255),b
  6950  0075AC  0E00               	movlw	0
  6951  0075AE  6FA8               	movwf	(?_gasSensor_calib+3)& (0+255),b
  6952  0075B0  0012               	return	
  6953  0075B2                     l32749:
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;sensor.c: 229: gas_ppm = ((CalibrationGas * gas_uVolt) / (span - baseline) - (Calibrati
      +                          onGas * baseline) / (span - baseline)) - cmp_val;
  6957  0075B2  C0C6  F064         	movff	gasSensor_calib@baseline,___flsub@a
  6958  0075B6  C0C7  F065         	movff	gasSensor_calib@baseline+1,___flsub@a+1
  6959  0075BA  C0C8  F066         	movff	gasSensor_calib@baseline+2,___flsub@a+2
  6960  0075BE  C0C9  F067         	movff	gasSensor_calib@baseline+3,___flsub@a+3
  6961  0075C2  C0C2  F060         	movff	gasSensor_calib@span,___flsub@b
  6962  0075C6  C0C3  F061         	movff	gasSensor_calib@span+1,___flsub@b+1
  6963  0075CA  C0C4  F062         	movff	gasSensor_calib@span+2,___flsub@b+2
  6964  0075CE  C0C5  F063         	movff	gasSensor_calib@span+3,___flsub@b+3
  6965  0075D2  EC1B  F068         	call	___flsub	;wreg free
  6966  0075D6  C060  F013         	movff	?___flsub,___fldiv@a
  6967  0075DA  C061  F014         	movff	?___flsub+1,___fldiv@a+1
  6968  0075DE  C062  F015         	movff	?___flsub+2,___fldiv@a+2
  6969  0075E2  C063  F016         	movff	?___flsub+3,___fldiv@a+3
  6970  0075E6  C0C6  F03C         	movff	gasSensor_calib@baseline,___flmul@a
  6971  0075EA  C0C7  F03D         	movff	gasSensor_calib@baseline+1,___flmul@a+1
  6972  0075EE  C0C8  F03E         	movff	gasSensor_calib@baseline+2,___flmul@a+2
  6973  0075F2  C0C9  F03F         	movff	gasSensor_calib@baseline+3,___flmul@a+3
  6974  0075F6  C0B9  F038         	movff	gasSensor_calib@CalibrationGas,___flmul@b
  6975  0075FA  C0BA  F039         	movff	gasSensor_calib@CalibrationGas+1,___flmul@b+1
  6976  0075FE  C0BB  F03A         	movff	gasSensor_calib@CalibrationGas+2,___flmul@b+2
  6977  007602  C0BC  F03B         	movff	gasSensor_calib@CalibrationGas+3,___flmul@b+3
  6978  007606  EC9F  F02E         	call	___flmul	;wreg free
  6979  00760A  C038  F00F         	movff	?___flmul,___fldiv@b
  6980  00760E  C039  F010         	movff	?___flmul+1,___fldiv@b+1
  6981  007612  C03A  F011         	movff	?___flmul+2,___fldiv@b+2
  6982  007616  C03B  F012         	movff	?___flmul+3,___fldiv@b+3
  6983  00761A  ECB0  F03B         	call	___fldiv	;wreg free
  6984  00761E  C00F  F0AD         	movff	?___fldiv,_gasSensor_calib$9450
  6985  007622  C010  F0AE         	movff	?___fldiv+1,_gasSensor_calib$9450+1
  6986  007626  C011  F0AF         	movff	?___fldiv+2,_gasSensor_calib$9450+2
  6987  00762A  C012  F0B0         	movff	?___fldiv+3,_gasSensor_calib$9450+3
  6988                           
  6989                           ;sensor.c: 229: gas_ppm = ((CalibrationGas * gas_uVolt) / (span - baseline) - (Calibrati
      +                          onGas * baseline) / (span - baseline)) - cmp_val;
  6990  00762E  C0C6  F064         	movff	gasSensor_calib@baseline,___flsub@a
  6991  007632  C0C7  F065         	movff	gasSensor_calib@baseline+1,___flsub@a+1
  6992  007636  C0C8  F066         	movff	gasSensor_calib@baseline+2,___flsub@a+2
  6993  00763A  C0C9  F067         	movff	gasSensor_calib@baseline+3,___flsub@a+3
  6994  00763E  C0C2  F060         	movff	gasSensor_calib@span,___flsub@b
  6995  007642  C0C3  F061         	movff	gasSensor_calib@span+1,___flsub@b+1
  6996  007646  C0C4  F062         	movff	gasSensor_calib@span+2,___flsub@b+2
  6997  00764A  C0C5  F063         	movff	gasSensor_calib@span+3,___flsub@b+3
  6998  00764E  EC1B  F068         	call	___flsub	;wreg free
  6999  007652  C060  F013         	movff	?___flsub,___fldiv@a
  7000  007656  C061  F014         	movff	?___flsub+1,___fldiv@a+1
  7001  00765A  C062  F015         	movff	?___flsub+2,___fldiv@a+2
  7002  00765E  C063  F016         	movff	?___flsub+3,___fldiv@a+3
  7003  007662  C0A9  F03C         	movff	gasSensor_calib@gas_uVolt,___flmul@a
  7004  007666  C0AA  F03D         	movff	gasSensor_calib@gas_uVolt+1,___flmul@a+1
  7005  00766A  C0AB  F03E         	movff	gasSensor_calib@gas_uVolt+2,___flmul@a+2
  7006  00766E  C0AC  F03F         	movff	gasSensor_calib@gas_uVolt+3,___flmul@a+3
  7007  007672  C0B9  F038         	movff	gasSensor_calib@CalibrationGas,___flmul@b
  7008  007676  C0BA  F039         	movff	gasSensor_calib@CalibrationGas+1,___flmul@b+1
  7009  00767A  C0BB  F03A         	movff	gasSensor_calib@CalibrationGas+2,___flmul@b+2
  7010  00767E  C0BC  F03B         	movff	gasSensor_calib@CalibrationGas+3,___flmul@b+3
  7011  007682  EC9F  F02E         	call	___flmul	;wreg free
  7012  007686  C038  F00F         	movff	?___flmul,___fldiv@b
  7013  00768A  C039  F010         	movff	?___flmul+1,___fldiv@b+1
  7014  00768E  C03A  F011         	movff	?___flmul+2,___fldiv@b+2
  7015  007692  C03B  F012         	movff	?___flmul+3,___fldiv@b+3
  7016  007696  ECB0  F03B         	call	___fldiv	;wreg free
  7017  00769A  C00F  F0B1         	movff	?___fldiv,_gasSensor_calib$9451
  7018  00769E  C010  F0B2         	movff	?___fldiv+1,_gasSensor_calib$9451+1
  7019  0076A2  C011  F0B3         	movff	?___fldiv+2,_gasSensor_calib$9451+2
  7020  0076A6  C012  F0B4         	movff	?___fldiv+3,_gasSensor_calib$9451+3
  7021                           
  7022                           ;sensor.c: 229: gas_ppm = ((CalibrationGas * gas_uVolt) / (span - baseline) - (Calibrati
      +                          onGas * baseline) / (span - baseline)) - cmp_val;
  7023  0076AA  C0AD  F064         	movff	_gasSensor_calib$9450,___flsub@a
  7024  0076AE  C0AE  F065         	movff	_gasSensor_calib$9450+1,___flsub@a+1
  7025  0076B2  C0AF  F066         	movff	_gasSensor_calib$9450+2,___flsub@a+2
  7026  0076B6  C0B0  F067         	movff	_gasSensor_calib$9450+3,___flsub@a+3
  7027  0076BA  C0B1  F060         	movff	_gasSensor_calib$9451,___flsub@b
  7028  0076BE  C0B2  F061         	movff	_gasSensor_calib$9451+1,___flsub@b+1
  7029  0076C2  C0B3  F062         	movff	_gasSensor_calib$9451+2,___flsub@b+2
  7030  0076C6  C0B4  F063         	movff	_gasSensor_calib$9451+3,___flsub@b+3
  7031  0076CA  EC1B  F068         	call	___flsub	;wreg free
  7032  0076CE  C060  F0B5         	movff	?___flsub,_gasSensor_calib$9452
  7033  0076D2  C061  F0B6         	movff	?___flsub+1,_gasSensor_calib$9452+1
  7034  0076D6  C062  F0B7         	movff	?___flsub+2,_gasSensor_calib$9452+2
  7035  0076DA  C063  F0B8         	movff	?___flsub+3,_gasSensor_calib$9452+3
  7036                           
  7037                           ;sensor.c: 229: gas_ppm = ((CalibrationGas * gas_uVolt) / (span - baseline) - (Calibrati
      +                          onGas * baseline) / (span - baseline)) - cmp_val;
  7038  0076DE  C0B5  F060         	movff	_gasSensor_calib$9452,___flsub@b
  7039  0076E2  C0B6  F061         	movff	_gasSensor_calib$9452+1,___flsub@b+1
  7040  0076E6  C0B7  F062         	movff	_gasSensor_calib$9452+2,___flsub@b+2
  7041  0076EA  C0B8  F063         	movff	_gasSensor_calib$9452+3,___flsub@b+3
  7042  0076EE  C0A5  F064         	movff	gasSensor_calib@cmp_val,___flsub@a
  7043  0076F2  C0A6  F065         	movff	gasSensor_calib@cmp_val+1,___flsub@a+1
  7044  0076F6  C0A7  F066         	movff	gasSensor_calib@cmp_val+2,___flsub@a+2
  7045  0076FA  C0A8  F067         	movff	gasSensor_calib@cmp_val+3,___flsub@a+3
  7046  0076FE  EC1B  F068         	call	___flsub	;wreg free
  7047  007702  C060  F0BD         	movff	?___flsub,gasSensor_calib@gas_ppm
  7048  007706  C061  F0BE         	movff	?___flsub+1,gasSensor_calib@gas_ppm+1
  7049  00770A  C062  F0BF         	movff	?___flsub+2,gasSensor_calib@gas_ppm+2
  7050  00770E  C063  F0C0         	movff	?___flsub+3,gasSensor_calib@gas_ppm+3
  7051                           
  7052                           ;sensor.c: 231: if(g_nvm.eeprm[channel].filter_mode == FIL_MODE)
  7053  007712  0100               	movlb	0	; () banked
  7054  007714  51C1               	movf	gasSensor_calib@channel& (0+255),w,b
  7055  007716  0D3E               	mullw	62
  7056  007718  0E76               	movlw	low (_g_nvm+36)
  7057  00771A  24F3               	addwf	243,w,c
  7058  00771C  6ED9               	movwf	fsr2l,c
  7059  00771E  0E01               	movlw	high (_g_nvm+36)
  7060  007720  20F4               	addwfc	prodh,w,c
  7061  007722  6EDA               	movwf	fsr2h,c
  7062  007724  04DE               	decf	postinc2,w,c
  7063  007726  A4D8               	btfss	status,2,c
  7064  007728  D012               	goto	l32759
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;sensor.c: 232: {;sensor.c: 233: gas_ppm = gasSensor_filter(gas_ppm);
  7068  00772A  C0BD  F09D         	movff	gasSensor_calib@gas_ppm,gasSensor_filter@gasConcent
  7069  00772E  C0BE  F09E         	movff	gasSensor_calib@gas_ppm+1,gasSensor_filter@gasConcent+1
  7070  007732  C0BF  F09F         	movff	gasSensor_calib@gas_ppm+2,gasSensor_filter@gasConcent+2
  7071  007736  C0C0  F0A0         	movff	gasSensor_calib@gas_ppm+3,gasSensor_filter@gasConcent+3
  7072  00773A  EC88  F040         	call	_gasSensor_filter	;wreg free
  7073  00773E  C09D  F0BD         	movff	?_gasSensor_filter,gasSensor_calib@gas_ppm
  7074  007742  C09E  F0BE         	movff	?_gasSensor_filter+1,gasSensor_calib@gas_ppm+1
  7075  007746  C09F  F0BF         	movff	?_gasSensor_filter+2,gasSensor_calib@gas_ppm+2
  7076  00774A  C0A0  F0C0         	movff	?_gasSensor_filter+3,gasSensor_calib@gas_ppm+3
  7077  00774E                     l32759:
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;sensor.c: 234: };sensor.c: 236: return gas_ppm;
  7081  00774E  C0BD  F0A5         	movff	gasSensor_calib@gas_ppm,?_gasSensor_calib
  7082  007752  C0BE  F0A6         	movff	gasSensor_calib@gas_ppm+1,?_gasSensor_calib+1
  7083  007756  C0BF  F0A7         	movff	gasSensor_calib@gas_ppm+2,?_gasSensor_calib+2
  7084  00775A  C0C0  F0A8         	movff	gasSensor_calib@gas_ppm+3,?_gasSensor_calib+3
  7085                           
  7086                           ; BSR set to: 0
  7087  00775E  0012               	return		;funcret
  7088  007760                     __end_of_gasSensor_calib:
  7089                           	callstack 0
  7090                           
  7091 ;; *************** function _gasSensor_filter *****************
  7092 ;; Defined at:
  7093 ;;		line 17 in file "sensor.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  gasConcent      4   61[BANK0 ] float 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  retval          4   65[BANK0 ] float 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  4   61[BANK0 ] float 
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 3F/0
  7104 ;;		On exit  : 3F/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7110 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7111 ;;Total ram usage:        8 bytes
  7112 ;; Hardware stack levels used: 1
  7113 ;; Hardware stack levels required when called: 5
  7114 ;; This function calls:
  7115 ;;		___flge
  7116 ;; This function is called by:
  7117 ;;		_gasSensor_calib
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text24
  7122  008110                     __ptext24:
  7123                           	callstack 0
  7124  008110                     _gasSensor_filter:
  7125                           	callstack 22
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;sensor.c: 20: float retval;;sensor.c: 21: if (gasConcent < 0.2 && gasConcent >= 0.0)
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;incstack = 0
  7132  008110  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7133  008114  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7134  008118  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7135  00811C  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7136  008120  0ECD               	movlw	205
  7137  008122  6F95               	movwf	___flge@ff2& (0+255),b
  7138  008124  0ECC               	movlw	204
  7139  008126  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7140  008128  0E4C               	movlw	76
  7141  00812A  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7142  00812C  0E3E               	movlw	62
  7143  00812E  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7144  008130  EC31  F056         	call	___flge	;wreg free
  7145  008134  A0D8               	btfss	status,0,c
  7146                           
  7147                           ; BSR set to: 0
  7148  008136  BFA0               	btfsc	(gasSensor_filter@gasConcent+3)& (0+255),7,b
  7149  008138  D001               	goto	l32081
  7150  00813A  D016               	goto	u40320
  7151  00813C                     l32081:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;sensor.c: 23: else if (gasConcent < 0 && gasConcent >= -0.5)
  7155  00813C  AFA0               	btfss	(gasSensor_filter@gasConcent+3)& (0+255),7,b
  7156  00813E  D01C               	goto	l32087
  7157                           
  7158                           ; BSR set to: 0
  7159  008140  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7160  008144  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7161  008148  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7162  00814C  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7163  008150  0E00               	movlw	0
  7164  008152  6F95               	movwf	___flge@ff2& (0+255),b
  7165  008154  0E00               	movlw	0
  7166  008156  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7167  008158  0E00               	movlw	0
  7168  00815A  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7169  00815C  0EBF               	movlw	191
  7170  00815E  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7171  008160  EC31  F056         	call	___flge	;wreg free
  7172  008164  A0D8               	btfss	status,0,c
  7173  008166  D008               	goto	l32087
  7174  008168                     u40320:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;sensor.c: 24: retval = 0.0;
  7178  008168  0E00               	movlw	0
  7179  00816A  6FA1               	movwf	gasSensor_filter@retval& (0+255),b
  7180  00816C  0E00               	movlw	0
  7181  00816E  6FA2               	movwf	(gasSensor_filter@retval+1)& (0+255),b
  7182  008170  0E00               	movlw	0
  7183  008172  6FA3               	movwf	(gasSensor_filter@retval+2)& (0+255),b
  7184  008174  0E00               	movlw	0
  7185  008176  D02E               	goto	L5
  7186  008178                     l32087:
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;sensor.c: 25: else if (gasConcent < -0.5 && gasConcent >= -1.0)
  7190  008178  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7191  00817C  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7192  008180  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7193  008184  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7194  008188  0E00               	movlw	0
  7195  00818A  6F95               	movwf	___flge@ff2& (0+255),b
  7196  00818C  0E00               	movlw	0
  7197  00818E  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7198  008190  0E00               	movlw	0
  7199  008192  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7200  008194  0EBF               	movlw	191
  7201  008196  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7202  008198  EC31  F056         	call	___flge	;wreg free
  7203  00819C  B0D8               	btfsc	status,0,c
  7204  00819E  D01C               	goto	l32093
  7205                           
  7206                           ; BSR set to: 0
  7207  0081A0  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7208  0081A4  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7209  0081A8  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7210  0081AC  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7211  0081B0  0E00               	movlw	0
  7212  0081B2  6F95               	movwf	___flge@ff2& (0+255),b
  7213  0081B4  0E00               	movlw	0
  7214  0081B6  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7215  0081B8  0E80               	movlw	128
  7216  0081BA  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7217  0081BC  0EBF               	movlw	191
  7218  0081BE  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7219  0081C0  EC31  F056         	call	___flge	;wreg free
  7220  0081C4  A0D8               	btfss	status,0,c
  7221  0081C6  D008               	goto	l32093
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;sensor.c: 26: retval = 0.02;
  7225  0081C8  0E0A               	movlw	10
  7226  0081CA  6FA1               	movwf	gasSensor_filter@retval& (0+255),b
  7227  0081CC  0ED7               	movlw	215
  7228  0081CE  6FA2               	movwf	(gasSensor_filter@retval+1)& (0+255),b
  7229  0081D0  0EA3               	movlw	163
  7230  0081D2  D02F               	goto	L6
  7231  0081D4                     L5:
  7232  0081D4  6FA4               	movwf	(gasSensor_filter@retval+3)& (0+255),b
  7233  0081D6  D0B0               	goto	l1754
  7234  0081D8                     l32093:
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;sensor.c: 27: else if (gasConcent < -1.0 && gasConcent >= -5.0)
  7238  0081D8  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7239  0081DC  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7240  0081E0  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7241  0081E4  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7242  0081E8  0E00               	movlw	0
  7243  0081EA  6F95               	movwf	___flge@ff2& (0+255),b
  7244  0081EC  0E00               	movlw	0
  7245  0081EE  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7246  0081F0  0E80               	movlw	128
  7247  0081F2  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7248  0081F4  0EBF               	movlw	191
  7249  0081F6  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7250  0081F8  EC31  F056         	call	___flge	;wreg free
  7251  0081FC  B0D8               	btfsc	status,0,c
  7252  0081FE  D01C               	goto	l32099
  7253                           
  7254                           ; BSR set to: 0
  7255  008200  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7256  008204  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7257  008208  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7258  00820C  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7259  008210  0E00               	movlw	0
  7260  008212  6F95               	movwf	___flge@ff2& (0+255),b
  7261  008214  0E00               	movlw	0
  7262  008216  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7263  008218  0EA0               	movlw	160
  7264  00821A  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7265  00821C  0EC0               	movlw	192
  7266  00821E  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7267  008220  EC31  F056         	call	___flge	;wreg free
  7268  008224  A0D8               	btfss	status,0,c
  7269  008226  D008               	goto	l32099
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;sensor.c: 28: retval = 0.03;
  7273  008228  0E8F               	movlw	143
  7274  00822A  6FA1               	movwf	gasSensor_filter@retval& (0+255),b
  7275  00822C  0EC2               	movlw	194
  7276  00822E  6FA2               	movwf	(gasSensor_filter@retval+1)& (0+255),b
  7277  008230  0EF5               	movlw	245
  7278  008232                     L6:
  7279  008232  6FA3               	movwf	(gasSensor_filter@retval+2)& (0+255),b
  7280  008234  0E3C               	movlw	60
  7281  008236  D7CE               	goto	L5
  7282  008238                     l32099:
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;sensor.c: 29: else if (gasConcent < -5.0 && gasConcent >= -10.0)
  7286  008238  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7287  00823C  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7288  008240  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7289  008244  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7290  008248  0E00               	movlw	0
  7291  00824A  6F95               	movwf	___flge@ff2& (0+255),b
  7292  00824C  0E00               	movlw	0
  7293  00824E  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7294  008250  0EA0               	movlw	160
  7295  008252  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7296  008254  0EC0               	movlw	192
  7297  008256  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7298  008258  EC31  F056         	call	___flge	;wreg free
  7299  00825C  B0D8               	btfsc	status,0,c
  7300  00825E  D01A               	goto	l32105
  7301                           
  7302                           ; BSR set to: 0
  7303  008260  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7304  008264  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7305  008268  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7306  00826C  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7307  008270  0E00               	movlw	0
  7308  008272  6F95               	movwf	___flge@ff2& (0+255),b
  7309  008274  0E00               	movlw	0
  7310  008276  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7311  008278  0E20               	movlw	32
  7312  00827A  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7313  00827C  0EC1               	movlw	193
  7314  00827E  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7315  008280  EC31  F056         	call	___flge	;wreg free
  7316  008284  A0D8               	btfss	status,0,c
  7317  008286  D006               	goto	l32105
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;sensor.c: 30: retval = 0.04;
  7321  008288  0E0A               	movlw	10
  7322  00828A  6FA1               	movwf	gasSensor_filter@retval& (0+255),b
  7323  00828C  0ED7               	movlw	215
  7324  00828E  6FA2               	movwf	(gasSensor_filter@retval+1)& (0+255),b
  7325  008290  0E23               	movlw	35
  7326  008292  D047               	goto	L8
  7327  008294                     l32105:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;sensor.c: 31: else if (gasConcent < -10.0 && gasConcent >= -30.0)
  7331  008294  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7332  008298  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7333  00829C  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7334  0082A0  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7335  0082A4  0E00               	movlw	0
  7336  0082A6  6F95               	movwf	___flge@ff2& (0+255),b
  7337  0082A8  0E00               	movlw	0
  7338  0082AA  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7339  0082AC  0E20               	movlw	32
  7340  0082AE  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7341  0082B0  0EC1               	movlw	193
  7342  0082B2  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7343  0082B4  EC31  F056         	call	___flge	;wreg free
  7344  0082B8  B0D8               	btfsc	status,0,c
  7345  0082BA  D01A               	goto	l32111
  7346                           
  7347                           ; BSR set to: 0
  7348  0082BC  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7349  0082C0  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7350  0082C4  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7351  0082C8  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7352  0082CC  0E00               	movlw	0
  7353  0082CE  6F95               	movwf	___flge@ff2& (0+255),b
  7354  0082D0  0E00               	movlw	0
  7355  0082D2  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7356  0082D4  0EF0               	movlw	240
  7357  0082D6  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7358  0082D8  0EC1               	movlw	193
  7359  0082DA  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7360  0082DC  EC31  F056         	call	___flge	;wreg free
  7361  0082E0  A0D8               	btfss	status,0,c
  7362  0082E2  D006               	goto	l32111
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;sensor.c: 32: retval = 0.05;
  7366  0082E4  0ECD               	movlw	205
  7367  0082E6  6FA1               	movwf	gasSensor_filter@retval& (0+255),b
  7368  0082E8  0ECC               	movlw	204
  7369  0082EA  6FA2               	movwf	(gasSensor_filter@retval+1)& (0+255),b
  7370  0082EC  0E4C               	movlw	76
  7371  0082EE  D019               	goto	L8
  7372  0082F0                     l32111:
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;sensor.c: 33: else if (gasConcent < -30.0)
  7376  0082F0  C09D  F091         	movff	gasSensor_filter@gasConcent,___flge@ff1
  7377  0082F4  C09E  F092         	movff	gasSensor_filter@gasConcent+1,___flge@ff1+1
  7378  0082F8  C09F  F093         	movff	gasSensor_filter@gasConcent+2,___flge@ff1+2
  7379  0082FC  C0A0  F094         	movff	gasSensor_filter@gasConcent+3,___flge@ff1+3
  7380  008300  0E00               	movlw	0
  7381  008302  6F95               	movwf	___flge@ff2& (0+255),b
  7382  008304  0E00               	movlw	0
  7383  008306  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7384  008308  0EF0               	movlw	240
  7385  00830A  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7386  00830C  0EC1               	movlw	193
  7387  00830E  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7388  008310  EC31  F056         	call	___flge	;wreg free
  7389  008314  B0D8               	btfsc	status,0,c
  7390  008316  D008               	goto	l1765
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;sensor.c: 34: retval = 0.06;
  7394  008318  0E8F               	movlw	143
  7395  00831A  6FA1               	movwf	gasSensor_filter@retval& (0+255),b
  7396  00831C  0EC2               	movlw	194
  7397  00831E  6FA2               	movwf	(gasSensor_filter@retval+1)& (0+255),b
  7398  008320  0E75               	movlw	117
  7399  008322                     L8:
  7400  008322  6FA3               	movwf	(gasSensor_filter@retval+2)& (0+255),b
  7401  008324  0E3D               	movlw	61
  7402  008326  D756               	goto	L5
  7403  008328                     l1765:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;sensor.c: 35: else;sensor.c: 36: retval = gasConcent;
  7407  008328  C09D  F0A1         	movff	gasSensor_filter@gasConcent,gasSensor_filter@retval
  7408  00832C  C09E  F0A2         	movff	gasSensor_filter@gasConcent+1,gasSensor_filter@retval+1
  7409  008330  C09F  F0A3         	movff	gasSensor_filter@gasConcent+2,gasSensor_filter@retval+2
  7410  008334  C0A0  F0A4         	movff	gasSensor_filter@gasConcent+3,gasSensor_filter@retval+3
  7411  008338                     l1754:
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;sensor.c: 37: return retval;
  7415  008338  C0A1  F09D         	movff	gasSensor_filter@retval,?_gasSensor_filter
  7416  00833C  C0A2  F09E         	movff	gasSensor_filter@retval+1,?_gasSensor_filter+1
  7417  008340  C0A3  F09F         	movff	gasSensor_filter@retval+2,?_gasSensor_filter+2
  7418  008344  C0A4  F0A0         	movff	gasSensor_filter@retval+3,?_gasSensor_filter+3
  7419                           
  7420                           ; BSR set to: 0
  7421  008348  0012               	return		;funcret
  7422  00834A                     __end_of_gasSensor_filter:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _compensate_temperature *****************
  7426 ;; Defined at:
  7427 ;;		line 189 in file "sensor.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  temp            4   61[BANK0 ] float 
  7430 ;;  baseLine_tem    4   65[BANK0 ] float 
  7431 ;;  model           1   69[BANK0 ] unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  cmp_val         4   70[BANK0 ] float 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  4   61[BANK0 ] float 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 3F/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7443 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7444 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7446 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;Total ram usage:       13 bytes
  7448 ;; Hardware stack levels used: 1
  7449 ;; Hardware stack levels required when called: 5
  7450 ;; This function calls:
  7451 ;;		___fladd
  7452 ;;		___flge
  7453 ;;		___flmul
  7454 ;; This function is called by:
  7455 ;;		_sensMeasure_gas_read
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text25
  7460  006974                     __ptext25:
  7461                           	callstack 0
  7462  006974                     _compensate_temperature:
  7463                           	callstack 23
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;sensor.c: 191: float cmp_val = 0.0f;
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;incstack = 0
  7470  006974  0E00               	movlw	0
  7471  006976  6FA6               	movwf	compensate_temperature@cmp_val& (0+255),b
  7472  006978  0E00               	movlw	0
  7473  00697A  6FA7               	movwf	(compensate_temperature@cmp_val+1)& (0+255),b
  7474  00697C  0E00               	movlw	0
  7475  00697E  6FA8               	movwf	(compensate_temperature@cmp_val+2)& (0+255),b
  7476  006980  0E00               	movlw	0
  7477  006982  6FA9               	movwf	(compensate_temperature@cmp_val+3)& (0+255),b
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;sensor.c: 193: if (model == NH3_100) {
  7481  006984  05A5               	decf	compensate_temperature@model& (0+255),w,b
  7482  006986  A4D8               	btfss	status,2,c
  7483  006988  D160               	goto	l1835
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;sensor.c: 194: if (temp >= 25.0f && temp < 30.0f)
  7487  00698A  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7488  00698E  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7489  006992  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7490  006996  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7491  00699A  0E00               	movlw	0
  7492  00699C  6F95               	movwf	___flge@ff2& (0+255),b
  7493  00699E  0E00               	movlw	0
  7494  0069A0  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7495  0069A2  0EC8               	movlw	200
  7496  0069A4  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7497  0069A6  0E41               	movlw	65
  7498  0069A8  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7499  0069AA  EC31  F056         	call	___flge	;wreg free
  7500  0069AE  A0D8               	btfss	status,0,c
  7501  0069B0  D039               	goto	l32713
  7502                           
  7503                           ; BSR set to: 0
  7504  0069B2  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7505  0069B6  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7506  0069BA  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7507  0069BE  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7508  0069C2  0E00               	movlw	0
  7509  0069C4  6F95               	movwf	___flge@ff2& (0+255),b
  7510  0069C6  0E00               	movlw	0
  7511  0069C8  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7512  0069CA  0EF0               	movlw	240
  7513  0069CC  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7514  0069CE  0E41               	movlw	65
  7515  0069D0  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7516  0069D2  EC31  F056         	call	___flge	;wreg free
  7517  0069D6  B0D8               	btfsc	status,0,c
  7518  0069D8  D025               	goto	l32713
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;sensor.c: 195: cmp_val = 0.034f * temp - 0.826f;
  7522  0069DA  0E96               	movlw	150
  7523  0069DC  6E3C               	movwf	___flmul@a^0,c
  7524  0069DE  0E43               	movlw	67
  7525  0069E0  6E3D               	movwf	(___flmul@a+1)^0,c
  7526  0069E2  0E0B               	movlw	11
  7527  0069E4  6E3E               	movwf	(___flmul@a+2)^0,c
  7528  0069E6  0E3D               	movlw	61
  7529  0069E8  6E3F               	movwf	(___flmul@a+3)^0,c
  7530  0069EA  C09D  F038         	movff	compensate_temperature@temp,___flmul@b
  7531  0069EE  C09E  F039         	movff	compensate_temperature@temp+1,___flmul@b+1
  7532  0069F2  C09F  F03A         	movff	compensate_temperature@temp+2,___flmul@b+2
  7533  0069F6  C0A0  F03B         	movff	compensate_temperature@temp+3,___flmul@b+3
  7534  0069FA  EC9F  F02E         	call	___flmul	;wreg free
  7535  0069FE  C038  F028         	movff	?___flmul,___fladd@b
  7536  006A02  C039  F029         	movff	?___flmul+1,___fladd@b+1
  7537  006A06  C03A  F02A         	movff	?___flmul+2,___fladd@b+2
  7538  006A0A  C03B  F02B         	movff	?___flmul+3,___fladd@b+3
  7539  006A0E  0EBC               	movlw	188
  7540  006A10  6E2C               	movwf	___fladd@a^0,c
  7541  006A12  0E74               	movlw	116
  7542  006A14  6E2D               	movwf	(___fladd@a+1)^0,c
  7543  006A16  0E53               	movlw	83
  7544  006A18  6E2E               	movwf	(___fladd@a+2)^0,c
  7545  006A1A  0EBF               	movlw	191
  7546  006A1C  6E2F               	movwf	(___fladd@a+3)^0,c
  7547  006A1E  ECBF  F031         	call	___fladd	;wreg free
  7548  006A22  D0E6               	goto	L11
  7549  006A24                     l32713:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;sensor.c: 197: else if (temp >= 30.0f && temp < 34.0f)
  7553  006A24  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7554  006A28  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7555  006A2C  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7556  006A30  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7557  006A34  0E00               	movlw	0
  7558  006A36  6F95               	movwf	___flge@ff2& (0+255),b
  7559  006A38  0E00               	movlw	0
  7560  006A3A  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7561  006A3C  0EF0               	movlw	240
  7562  006A3E  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7563  006A40  0E41               	movlw	65
  7564  006A42  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7565  006A44  EC31  F056         	call	___flge	;wreg free
  7566  006A48  A0D8               	btfss	status,0,c
  7567  006A4A  D039               	goto	l32719
  7568                           
  7569                           ; BSR set to: 0
  7570  006A4C  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7571  006A50  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7572  006A54  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7573  006A58  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7574  006A5C  0E00               	movlw	0
  7575  006A5E  6F95               	movwf	___flge@ff2& (0+255),b
  7576  006A60  0E00               	movlw	0
  7577  006A62  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7578  006A64  0E08               	movlw	8
  7579  006A66  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7580  006A68  0E42               	movlw	66
  7581  006A6A  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7582  006A6C  EC31  F056         	call	___flge	;wreg free
  7583  006A70  B0D8               	btfsc	status,0,c
  7584  006A72  D025               	goto	l32719
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;sensor.c: 198: cmp_val = 0.05f * temp - 1.356f;
  7588  006A74  0ECD               	movlw	205
  7589  006A76  6E3C               	movwf	___flmul@a^0,c
  7590  006A78  0ECC               	movlw	204
  7591  006A7A  6E3D               	movwf	(___flmul@a+1)^0,c
  7592  006A7C  0E4C               	movlw	76
  7593  006A7E  6E3E               	movwf	(___flmul@a+2)^0,c
  7594  006A80  0E3D               	movlw	61
  7595  006A82  6E3F               	movwf	(___flmul@a+3)^0,c
  7596  006A84  C09D  F038         	movff	compensate_temperature@temp,___flmul@b
  7597  006A88  C09E  F039         	movff	compensate_temperature@temp+1,___flmul@b+1
  7598  006A8C  C09F  F03A         	movff	compensate_temperature@temp+2,___flmul@b+2
  7599  006A90  C0A0  F03B         	movff	compensate_temperature@temp+3,___flmul@b+3
  7600  006A94  EC9F  F02E         	call	___flmul	;wreg free
  7601  006A98  C038  F028         	movff	?___flmul,___fladd@b
  7602  006A9C  C039  F029         	movff	?___flmul+1,___fladd@b+1
  7603  006AA0  C03A  F02A         	movff	?___flmul+2,___fladd@b+2
  7604  006AA4  C03B  F02B         	movff	?___flmul+3,___fladd@b+3
  7605  006AA8  0E68               	movlw	104
  7606  006AAA  6E2C               	movwf	___fladd@a^0,c
  7607  006AAC  0E91               	movlw	145
  7608  006AAE  6E2D               	movwf	(___fladd@a+1)^0,c
  7609  006AB0  0EAD               	movlw	173
  7610  006AB2  6E2E               	movwf	(___fladd@a+2)^0,c
  7611  006AB4  0EBF               	movlw	191
  7612  006AB6  6E2F               	movwf	(___fladd@a+3)^0,c
  7613  006AB8  ECBF  F031         	call	___fladd	;wreg free
  7614  006ABC  D099               	goto	L11
  7615  006ABE                     l32719:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;sensor.c: 200: else if (temp >= 34.0f && temp < 38.0f)
  7619  006ABE  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7620  006AC2  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7621  006AC6  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7622  006ACA  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7623  006ACE  0E00               	movlw	0
  7624  006AD0  6F95               	movwf	___flge@ff2& (0+255),b
  7625  006AD2  0E00               	movlw	0
  7626  006AD4  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7627  006AD6  0E08               	movlw	8
  7628  006AD8  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7629  006ADA  0E42               	movlw	66
  7630  006ADC  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7631  006ADE  EC31  F056         	call	___flge	;wreg free
  7632  006AE2  A0D8               	btfss	status,0,c
  7633  006AE4  D039               	goto	l32725
  7634                           
  7635                           ; BSR set to: 0
  7636  006AE6  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7637  006AEA  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7638  006AEE  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7639  006AF2  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7640  006AF6  0E00               	movlw	0
  7641  006AF8  6F95               	movwf	___flge@ff2& (0+255),b
  7642  006AFA  0E00               	movlw	0
  7643  006AFC  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7644  006AFE  0E18               	movlw	24
  7645  006B00  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7646  006B02  0E42               	movlw	66
  7647  006B04  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7648  006B06  EC31  F056         	call	___flge	;wreg free
  7649  006B0A  B0D8               	btfsc	status,0,c
  7650  006B0C  D025               	goto	l32725
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;sensor.c: 201: cmp_val = 0.095f * temp - 2.892f;
  7654  006B0E  0E5C               	movlw	92
  7655  006B10  6E3C               	movwf	___flmul@a^0,c
  7656  006B12  0E8F               	movlw	143
  7657  006B14  6E3D               	movwf	(___flmul@a+1)^0,c
  7658  006B16  0EC2               	movlw	194
  7659  006B18  6E3E               	movwf	(___flmul@a+2)^0,c
  7660  006B1A  0E3D               	movlw	61
  7661  006B1C  6E3F               	movwf	(___flmul@a+3)^0,c
  7662  006B1E  C09D  F038         	movff	compensate_temperature@temp,___flmul@b
  7663  006B22  C09E  F039         	movff	compensate_temperature@temp+1,___flmul@b+1
  7664  006B26  C09F  F03A         	movff	compensate_temperature@temp+2,___flmul@b+2
  7665  006B2A  C0A0  F03B         	movff	compensate_temperature@temp+3,___flmul@b+3
  7666  006B2E  EC9F  F02E         	call	___flmul	;wreg free
  7667  006B32  C038  F028         	movff	?___flmul,___fladd@b
  7668  006B36  C039  F029         	movff	?___flmul+1,___fladd@b+1
  7669  006B3A  C03A  F02A         	movff	?___flmul+2,___fladd@b+2
  7670  006B3E  C03B  F02B         	movff	?___flmul+3,___fladd@b+3
  7671  006B42  0E87               	movlw	135
  7672  006B44  6E2C               	movwf	___fladd@a^0,c
  7673  006B46  0E16               	movlw	22
  7674  006B48  6E2D               	movwf	(___fladd@a+1)^0,c
  7675  006B4A  0E39               	movlw	57
  7676  006B4C  6E2E               	movwf	(___fladd@a+2)^0,c
  7677  006B4E  0EC0               	movlw	192
  7678  006B50  6E2F               	movwf	(___fladd@a+3)^0,c
  7679  006B52  ECBF  F031         	call	___fladd	;wreg free
  7680  006B56  D04C               	goto	L11
  7681  006B58                     l32725:
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;sensor.c: 203: else if (temp >= 38.0f && temp < 41.0f)
  7685  006B58  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7686  006B5C  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7687  006B60  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7688  006B64  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7689  006B68  0E00               	movlw	0
  7690  006B6A  6F95               	movwf	___flge@ff2& (0+255),b
  7691  006B6C  0E00               	movlw	0
  7692  006B6E  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7693  006B70  0E18               	movlw	24
  7694  006B72  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7695  006B74  0E42               	movlw	66
  7696  006B76  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7697  006B78  EC31  F056         	call	___flge	;wreg free
  7698  006B7C  A0D8               	btfss	status,0,c
  7699  006B7E  D041               	goto	l32731
  7700                           
  7701                           ; BSR set to: 0
  7702  006B80  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7703  006B84  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7704  006B88  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7705  006B8C  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7706  006B90  0E00               	movlw	0
  7707  006B92  6F95               	movwf	___flge@ff2& (0+255),b
  7708  006B94  0E00               	movlw	0
  7709  006B96  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7710  006B98  0E24               	movlw	36
  7711  006B9A  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7712  006B9C  0E42               	movlw	66
  7713  006B9E  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7714  006BA0  EC31  F056         	call	___flge	;wreg free
  7715  006BA4  B0D8               	btfsc	status,0,c
  7716  006BA6  D02D               	goto	l32731
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;sensor.c: 204: cmp_val = 0.1f * temp - 3.1f;
  7720  006BA8  0ECD               	movlw	205
  7721  006BAA  6E3C               	movwf	___flmul@a^0,c
  7722  006BAC  0ECC               	movlw	204
  7723  006BAE  6E3D               	movwf	(___flmul@a+1)^0,c
  7724  006BB0  0ECC               	movlw	204
  7725  006BB2  6E3E               	movwf	(___flmul@a+2)^0,c
  7726  006BB4  0E3D               	movlw	61
  7727  006BB6  6E3F               	movwf	(___flmul@a+3)^0,c
  7728  006BB8  C09D  F038         	movff	compensate_temperature@temp,___flmul@b
  7729  006BBC  C09E  F039         	movff	compensate_temperature@temp+1,___flmul@b+1
  7730  006BC0  C09F  F03A         	movff	compensate_temperature@temp+2,___flmul@b+2
  7731  006BC4  C0A0  F03B         	movff	compensate_temperature@temp+3,___flmul@b+3
  7732  006BC8  EC9F  F02E         	call	___flmul	;wreg free
  7733  006BCC  C038  F028         	movff	?___flmul,___fladd@b
  7734  006BD0  C039  F029         	movff	?___flmul+1,___fladd@b+1
  7735  006BD4  C03A  F02A         	movff	?___flmul+2,___fladd@b+2
  7736  006BD8  C03B  F02B         	movff	?___flmul+3,___fladd@b+3
  7737  006BDC  0E66               	movlw	102
  7738  006BDE  6E2C               	movwf	___fladd@a^0,c
  7739  006BE0  0E66               	movlw	102
  7740  006BE2  6E2D               	movwf	(___fladd@a+1)^0,c
  7741  006BE4  0E46               	movlw	70
  7742  006BE6  6E2E               	movwf	(___fladd@a+2)^0,c
  7743  006BE8  0EC0               	movlw	192
  7744  006BEA  6E2F               	movwf	(___fladd@a+3)^0,c
  7745  006BEC  ECBF  F031         	call	___fladd	;wreg free
  7746  006BF0                     L11:
  7747  006BF0  C028  F0A6         	movff	?___fladd,compensate_temperature@cmp_val
  7748  006BF4  C029  F0A7         	movff	?___fladd+1,compensate_temperature@cmp_val+1
  7749  006BF8  C02A  F0A8         	movff	?___fladd+2,compensate_temperature@cmp_val+2
  7750  006BFC  C02B  F0A9         	movff	?___fladd+3,compensate_temperature@cmp_val+3
  7751  006C00  D024               	goto	l1835
  7752  006C02                     l32731:
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;sensor.c: 206: else if (temp >= 41.0f)
  7756  006C02  C09D  F091         	movff	compensate_temperature@temp,___flge@ff1
  7757  006C06  C09E  F092         	movff	compensate_temperature@temp+1,___flge@ff1+1
  7758  006C0A  C09F  F093         	movff	compensate_temperature@temp+2,___flge@ff1+2
  7759  006C0E  C0A0  F094         	movff	compensate_temperature@temp+3,___flge@ff1+3
  7760  006C12  0E00               	movlw	0
  7761  006C14  6F95               	movwf	___flge@ff2& (0+255),b
  7762  006C16  0E00               	movlw	0
  7763  006C18  6F96               	movwf	(___flge@ff2+1)& (0+255),b
  7764  006C1A  0E24               	movlw	36
  7765  006C1C  6F97               	movwf	(___flge@ff2+2)& (0+255),b
  7766  006C1E  0E42               	movlw	66
  7767  006C20  6F98               	movwf	(___flge@ff2+3)& (0+255),b
  7768  006C22  EC31  F056         	call	___flge	;wreg free
  7769  006C26  A0D8               	btfss	status,0,c
  7770  006C28  D008               	goto	l32735
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;sensor.c: 207: cmp_val = 1.0f;
  7774  006C2A  0E00               	movlw	0
  7775  006C2C  6FA6               	movwf	compensate_temperature@cmp_val& (0+255),b
  7776  006C2E  0E00               	movlw	0
  7777  006C30  6FA7               	movwf	(compensate_temperature@cmp_val+1)& (0+255),b
  7778  006C32  0E80               	movlw	128
  7779  006C34  6FA8               	movwf	(compensate_temperature@cmp_val+2)& (0+255),b
  7780  006C36  0E3F               	movlw	63
  7781  006C38  D007               	goto	L12
  7782  006C3A                     l32735:
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;sensor.c: 209: else;sensor.c: 210: cmp_val = 0.0f;
  7786  006C3A  0E00               	movlw	0
  7787  006C3C  6FA6               	movwf	compensate_temperature@cmp_val& (0+255),b
  7788  006C3E  0E00               	movlw	0
  7789  006C40  6FA7               	movwf	(compensate_temperature@cmp_val+1)& (0+255),b
  7790  006C42  0E00               	movlw	0
  7791  006C44  6FA8               	movwf	(compensate_temperature@cmp_val+2)& (0+255),b
  7792  006C46  0E00               	movlw	0
  7793  006C48                     L12:
  7794  006C48  6FA9               	movwf	(compensate_temperature@cmp_val+3)& (0+255),b
  7795  006C4A                     l1835:
  7796                           
  7797                           ;sensor.c: 213: };sensor.c: 215: return cmp_val;
  7798  006C4A  C0A6  F09D         	movff	compensate_temperature@cmp_val,?_compensate_temperature
  7799  006C4E  C0A7  F09E         	movff	compensate_temperature@cmp_val+1,?_compensate_temperature+1
  7800  006C52  C0A8  F09F         	movff	compensate_temperature@cmp_val+2,?_compensate_temperature+2
  7801  006C56  C0A9  F0A0         	movff	compensate_temperature@cmp_val+3,?_compensate_temperature+3
  7802  006C5A  0012               	return		;funcret
  7803  006C5C                     __end_of_compensate_temperature:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function _Kalman_updateEstimate *****************
  7807 ;; Defined at:
  7808 ;;		line 144 in file "filter.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;  pObj            2   29[BANK0 ] PTR struct .
  7811 ;;		 -> kalmanFilter(48), 
  7812 ;;  mea             4   31[BANK0 ] float 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  4   29[BANK0 ] float 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 3F/0
  7821 ;;		On exit  : 3F/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7824 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7827 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7828 ;;Total ram usage:       14 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 6
  7831 ;; This function calls:
  7832 ;;		___fladd
  7833 ;;		___fldiv
  7834 ;;		___flmul
  7835 ;;		___flsub
  7836 ;;		_fabs
  7837 ;; This function is called by:
  7838 ;;		_sensMeasure_gas_read
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text26
  7843  006F42                     __ptext26:
  7844                           	callstack 0
  7845  006F42                     _Kalman_updateEstimate:
  7846                           	callstack 22
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;filter.c: 147: pObj->_kalman_gain = pObj->_err_estimate/(pObj->_err_estimate + pObj->_e
      +                          rr_measure);
  7850                           
  7851                           ;incstack = 0
  7852  006F42  EE20 F004          	lfsr	2,4
  7853  006F46  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7854  006F48  26D9               	addwf	fsr2l,f,c
  7855  006F4A  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7856  006F4C  22DA               	addwfc	fsr2h,f,c
  7857  006F4E  CFDE F00F          	movff	postinc2,___fldiv@b
  7858  006F52  CFDE F010          	movff	postinc2,___fldiv@b+1
  7859  006F56  CFDE F011          	movff	postinc2,___fldiv@b+2
  7860  006F5A  CFDE F012          	movff	postinc2,___fldiv@b+3
  7861  006F5E  C07D  FFD9         	movff	Kalman_updateEstimate@pObj,fsr2l
  7862  006F62  C07E  FFDA         	movff	Kalman_updateEstimate@pObj+1,fsr2h
  7863  006F66  CFDE F02C          	movff	postinc2,___fladd@a
  7864  006F6A  CFDE F02D          	movff	postinc2,___fladd@a+1
  7865  006F6E  CFDE F02E          	movff	postinc2,___fladd@a+2
  7866  006F72  CFDE F02F          	movff	postinc2,___fladd@a+3
  7867  006F76  EE20 F004          	lfsr	2,4
  7868  006F7A  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7869  006F7C  26D9               	addwf	fsr2l,f,c
  7870  006F7E  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7871  006F80  22DA               	addwfc	fsr2h,f,c
  7872  006F82  CFDE F028          	movff	postinc2,___fladd@b
  7873  006F86  CFDE F029          	movff	postinc2,___fladd@b+1
  7874  006F8A  CFDE F02A          	movff	postinc2,___fladd@b+2
  7875  006F8E  CFDE F02B          	movff	postinc2,___fladd@b+3
  7876  006F92  ECBF  F031         	call	___fladd	;wreg free
  7877  006F96  C028  F013         	movff	?___fladd,___fldiv@a
  7878  006F9A  C029  F014         	movff	?___fladd+1,___fldiv@a+1
  7879  006F9E  C02A  F015         	movff	?___fladd+2,___fldiv@a+2
  7880  006FA2  C02B  F016         	movff	?___fladd+3,___fldiv@a+3
  7881  006FA6  ECB0  F03B         	call	___fldiv	;wreg free
  7882  006FAA  0100               	movlb	0	; () banked
  7883  006FAC  EE20 F014          	lfsr	2,20
  7884  006FB0  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7885  006FB2  26D9               	addwf	fsr2l,f,c
  7886  006FB4  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7887  006FB6  22DA               	addwfc	fsr2h,f,c
  7888  006FB8  C00F  FFDE         	movff	?___fldiv,postinc2
  7889  006FBC  C010  FFDE         	movff	?___fldiv+1,postinc2
  7890  006FC0  C011  FFDE         	movff	?___fldiv+2,postinc2
  7891  006FC4  C012  FFDE         	movff	?___fldiv+3,postinc2
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;filter.c: 149: pObj->_current_estimate = pObj->_last_estimate + pObj->_kalman_gain * (m
      +                          ea - pObj->_last_estimate);
  7895  006FC8  EE20 F014          	lfsr	2,20
  7896  006FCC  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7897  006FCE  26D9               	addwf	fsr2l,f,c
  7898  006FD0  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7899  006FD2  22DA               	addwfc	fsr2h,f,c
  7900  006FD4  CFDE F03C          	movff	postinc2,___flmul@a
  7901  006FD8  CFDE F03D          	movff	postinc2,___flmul@a+1
  7902  006FDC  CFDE F03E          	movff	postinc2,___flmul@a+2
  7903  006FE0  CFDE F03F          	movff	postinc2,___flmul@a+3
  7904  006FE4  EE20 F010          	lfsr	2,16
  7905  006FE8  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7906  006FEA  26D9               	addwf	fsr2l,f,c
  7907  006FEC  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7908  006FEE  22DA               	addwfc	fsr2h,f,c
  7909  006FF0  CFDE F064          	movff	postinc2,___flsub@a
  7910  006FF4  CFDE F065          	movff	postinc2,___flsub@a+1
  7911  006FF8  CFDE F066          	movff	postinc2,___flsub@a+2
  7912  006FFC  CFDE F067          	movff	postinc2,___flsub@a+3
  7913  007000  C07F  F060         	movff	Kalman_updateEstimate@mea,___flsub@b
  7914  007004  C080  F061         	movff	Kalman_updateEstimate@mea+1,___flsub@b+1
  7915  007008  C081  F062         	movff	Kalman_updateEstimate@mea+2,___flsub@b+2
  7916  00700C  C082  F063         	movff	Kalman_updateEstimate@mea+3,___flsub@b+3
  7917  007010  EC1B  F068         	call	___flsub	;wreg free
  7918  007014  C060  F038         	movff	?___flsub,___flmul@b
  7919  007018  C061  F039         	movff	?___flsub+1,___flmul@b+1
  7920  00701C  C062  F03A         	movff	?___flsub+2,___flmul@b+2
  7921  007020  C063  F03B         	movff	?___flsub+3,___flmul@b+3
  7922  007024  EC9F  F02E         	call	___flmul	;wreg free
  7923  007028  C038  F087         	movff	?___flmul,_Kalman_updateEstimate$9455
  7924  00702C  C039  F088         	movff	?___flmul+1,_Kalman_updateEstimate$9455+1
  7925  007030  C03A  F089         	movff	?___flmul+2,_Kalman_updateEstimate$9455+2
  7926  007034  C03B  F08A         	movff	?___flmul+3,_Kalman_updateEstimate$9455+3
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;filter.c: 149: pObj->_current_estimate = pObj->_last_estimate + pObj->_kalman_gain * (m
      +                          ea - pObj->_last_estimate);
  7930  007038  C087  F028         	movff	_Kalman_updateEstimate$9455,___fladd@b
  7931  00703C  C088  F029         	movff	_Kalman_updateEstimate$9455+1,___fladd@b+1
  7932  007040  C089  F02A         	movff	_Kalman_updateEstimate$9455+2,___fladd@b+2
  7933  007044  C08A  F02B         	movff	_Kalman_updateEstimate$9455+3,___fladd@b+3
  7934  007048  EE20 F010          	lfsr	2,16
  7935  00704C  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7936  00704E  26D9               	addwf	fsr2l,f,c
  7937  007050  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7938  007052  22DA               	addwfc	fsr2h,f,c
  7939  007054  CFDE F02C          	movff	postinc2,___fladd@a
  7940  007058  CFDE F02D          	movff	postinc2,___fladd@a+1
  7941  00705C  CFDE F02E          	movff	postinc2,___fladd@a+2
  7942  007060  CFDE F02F          	movff	postinc2,___fladd@a+3
  7943  007064  ECBF  F031         	call	___fladd	;wreg free
  7944  007068  0100               	movlb	0	; () banked
  7945  00706A  EE20 F00C          	lfsr	2,12
  7946  00706E  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7947  007070  26D9               	addwf	fsr2l,f,c
  7948  007072  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7949  007074  22DA               	addwfc	fsr2h,f,c
  7950  007076  C028  FFDE         	movff	?___fladd,postinc2
  7951  00707A  C029  FFDE         	movff	?___fladd+1,postinc2
  7952  00707E  C02A  FFDE         	movff	?___fladd+2,postinc2
  7953  007082  C02B  FFDE         	movff	?___fladd+3,postinc2
  7954                           
  7955                           ;filter.c: 151: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;f
      +                          ilter.c: 152: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
  7956  007086  EE20 F004          	lfsr	2,4
  7957  00708A  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7958  00708C  26D9               	addwf	fsr2l,f,c
  7959  00708E  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7960  007090  22DA               	addwfc	fsr2h,f,c
  7961  007092  CFDE F03C          	movff	postinc2,___flmul@a
  7962  007096  CFDE F03D          	movff	postinc2,___flmul@a+1
  7963  00709A  CFDE F03E          	movff	postinc2,___flmul@a+2
  7964  00709E  CFDE F03F          	movff	postinc2,___flmul@a+3
  7965  0070A2  EE20 F014          	lfsr	2,20
  7966  0070A6  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7967  0070A8  26D9               	addwf	fsr2l,f,c
  7968  0070AA  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7969  0070AC  22DA               	addwfc	fsr2h,f,c
  7970  0070AE  CFDE F064          	movff	postinc2,___flsub@a
  7971  0070B2  CFDE F065          	movff	postinc2,___flsub@a+1
  7972  0070B6  CFDE F066          	movff	postinc2,___flsub@a+2
  7973  0070BA  CFDE F067          	movff	postinc2,___flsub@a+3
  7974  0070BE  0E00               	movlw	0
  7975  0070C0  6F60               	movwf	___flsub@b& (0+255),b
  7976  0070C2  0E00               	movlw	0
  7977  0070C4  6F61               	movwf	(___flsub@b+1)& (0+255),b
  7978  0070C6  0E80               	movlw	128
  7979  0070C8  6F62               	movwf	(___flsub@b+2)& (0+255),b
  7980  0070CA  0E3F               	movlw	63
  7981  0070CC  6F63               	movwf	(___flsub@b+3)& (0+255),b
  7982  0070CE  EC1B  F068         	call	___flsub	;wreg free
  7983  0070D2  C060  F038         	movff	?___flsub,___flmul@b
  7984  0070D6  C061  F039         	movff	?___flsub+1,___flmul@b+1
  7985  0070DA  C062  F03A         	movff	?___flsub+2,___flmul@b+2
  7986  0070DE  C063  F03B         	movff	?___flsub+3,___flmul@b+3
  7987  0070E2  EC9F  F02E         	call	___flmul	;wreg free
  7988  0070E6  C038  F087         	movff	?___flmul,_Kalman_updateEstimate$9455
  7989  0070EA  C039  F088         	movff	?___flmul+1,_Kalman_updateEstimate$9455+1
  7990  0070EE  C03A  F089         	movff	?___flmul+2,_Kalman_updateEstimate$9455+2
  7991  0070F2  C03B  F08A         	movff	?___flmul+3,_Kalman_updateEstimate$9455+3
  7992                           
  7993                           ;filter.c: 151: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;f
      +                          ilter.c: 152: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
  7994  0070F6  EE20 F008          	lfsr	2,8
  7995  0070FA  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  7996  0070FC  26D9               	addwf	fsr2l,f,c
  7997  0070FE  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  7998  007100  22DA               	addwfc	fsr2h,f,c
  7999  007102  CFDE F03C          	movff	postinc2,___flmul@a
  8000  007106  CFDE F03D          	movff	postinc2,___flmul@a+1
  8001  00710A  CFDE F03E          	movff	postinc2,___flmul@a+2
  8002  00710E  CFDE F03F          	movff	postinc2,___flmul@a+3
  8003  007112  EE20 F00C          	lfsr	2,12
  8004  007116  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8005  007118  26D9               	addwf	fsr2l,f,c
  8006  00711A  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8007  00711C  22DA               	addwfc	fsr2h,f,c
  8008  00711E  CFDE F064          	movff	postinc2,___flsub@a
  8009  007122  CFDE F065          	movff	postinc2,___flsub@a+1
  8010  007126  CFDE F066          	movff	postinc2,___flsub@a+2
  8011  00712A  CFDE F067          	movff	postinc2,___flsub@a+3
  8012  00712E  EE20 F010          	lfsr	2,16
  8013  007132  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8014  007134  26D9               	addwf	fsr2l,f,c
  8015  007136  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8016  007138  22DA               	addwfc	fsr2h,f,c
  8017  00713A  CFDE F060          	movff	postinc2,___flsub@b
  8018  00713E  CFDE F061          	movff	postinc2,___flsub@b+1
  8019  007142  CFDE F062          	movff	postinc2,___flsub@b+2
  8020  007146  CFDE F063          	movff	postinc2,___flsub@b+3
  8021  00714A  EC1B  F068         	call	___flsub	;wreg free
  8022  00714E  C060  F068         	movff	?___flsub,fabs@d
  8023  007152  C061  F069         	movff	?___flsub+1,fabs@d+1
  8024  007156  C062  F06A         	movff	?___flsub+2,fabs@d+2
  8025  00715A  C063  F06B         	movff	?___flsub+3,fabs@d+3
  8026  00715E  ECEB  F069         	call	_fabs	;wreg free
  8027  007162  C068  F038         	movff	?_fabs,___flmul@b
  8028  007166  C069  F039         	movff	?_fabs+1,___flmul@b+1
  8029  00716A  C06A  F03A         	movff	?_fabs+2,___flmul@b+2
  8030  00716E  C06B  F03B         	movff	?_fabs+3,___flmul@b+3
  8031  007172  EC9F  F02E         	call	___flmul	;wreg free
  8032  007176  C038  F083         	movff	?___flmul,_Kalman_updateEstimate$9456
  8033  00717A  C039  F084         	movff	?___flmul+1,_Kalman_updateEstimate$9456+1
  8034  00717E  C03A  F085         	movff	?___flmul+2,_Kalman_updateEstimate$9456+2
  8035  007182  C03B  F086         	movff	?___flmul+3,_Kalman_updateEstimate$9456+3
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;filter.c: 151: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;f
      +                          ilter.c: 152: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
  8039  007186  C087  F028         	movff	_Kalman_updateEstimate$9455,___fladd@b
  8040  00718A  C088  F029         	movff	_Kalman_updateEstimate$9455+1,___fladd@b+1
  8041  00718E  C089  F02A         	movff	_Kalman_updateEstimate$9455+2,___fladd@b+2
  8042  007192  C08A  F02B         	movff	_Kalman_updateEstimate$9455+3,___fladd@b+3
  8043  007196  C083  F02C         	movff	_Kalman_updateEstimate$9456,___fladd@a
  8044  00719A  C084  F02D         	movff	_Kalman_updateEstimate$9456+1,___fladd@a+1
  8045  00719E  C085  F02E         	movff	_Kalman_updateEstimate$9456+2,___fladd@a+2
  8046  0071A2  C086  F02F         	movff	_Kalman_updateEstimate$9456+3,___fladd@a+3
  8047  0071A6  ECBF  F031         	call	___fladd	;wreg free
  8048  0071AA  0100               	movlb	0	; () banked
  8049  0071AC  EE20 F004          	lfsr	2,4
  8050  0071B0  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8051  0071B2  26D9               	addwf	fsr2l,f,c
  8052  0071B4  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8053  0071B6  22DA               	addwfc	fsr2h,f,c
  8054  0071B8  C028  FFDE         	movff	?___fladd,postinc2
  8055  0071BC  C029  FFDE         	movff	?___fladd+1,postinc2
  8056  0071C0  C02A  FFDE         	movff	?___fladd+2,postinc2
  8057  0071C4  C02B  FFDE         	movff	?___fladd+3,postinc2
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;filter.c: 154: pObj->_last_estimate=pObj->_current_estimate;
  8061  0071C8  EE20 F00C          	lfsr	2,12
  8062  0071CC  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8063  0071CE  26D9               	addwf	fsr2l,f,c
  8064  0071D0  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8065  0071D2  22DA               	addwfc	fsr2h,f,c
  8066  0071D4  EE10 F010          	lfsr	1,16
  8067  0071D8  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8068  0071DA  26E1               	addwf	fsr1l,f,c
  8069  0071DC  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8070  0071DE  22E2               	addwfc	fsr1h,f,c
  8071  0071E0  CFDE FFE6          	movff	postinc2,postinc1
  8072  0071E4  CFDE FFE6          	movff	postinc2,postinc1
  8073  0071E8  CFDE FFE6          	movff	postinc2,postinc1
  8074  0071EC  CFDE FFE6          	movff	postinc2,postinc1
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;filter.c: 156: return pObj->_current_estimate;
  8078  0071F0  EE20 F00C          	lfsr	2,12
  8079  0071F4  517D               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8080  0071F6  26D9               	addwf	fsr2l,f,c
  8081  0071F8  517E               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8082  0071FA  22DA               	addwfc	fsr2h,f,c
  8083  0071FC  CFDE F07D          	movff	postinc2,?_Kalman_updateEstimate
  8084  007200  CFDE F07E          	movff	postinc2,?_Kalman_updateEstimate+1
  8085  007204  CFDE F07F          	movff	postinc2,?_Kalman_updateEstimate+2
  8086  007208  CFDE F080          	movff	postinc2,?_Kalman_updateEstimate+3
  8087                           
  8088                           ; BSR set to: 0
  8089  00720C  0012               	return		;funcret
  8090  00720E                     __end_of_Kalman_updateEstimate:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _fabs *****************
  8094 ;; Defined at:
  8095 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fabs.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  d               4    8[BANK0 ] float 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  4    8[BANK0 ] float 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 3F/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;Total ram usage:        4 bytes
  8114 ;; Hardware stack levels used: 1
  8115 ;; Hardware stack levels required when called: 5
  8116 ;; This function calls:
  8117 ;;		___flneg
  8118 ;; This function is called by:
  8119 ;;		_Kalman_updateEstimate
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text27
  8124  00D3D6                     __ptext27:
  8125                           	callstack 0
  8126  00D3D6                     _fabs:
  8127                           	callstack 22
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;incstack = 0
  8131  00D3D6  0100               	movlb	0	; () banked
  8132  00D3D8  AF6B               	btfss	(fabs@d+3)& (0+255),7,b
  8133  00D3DA  D013               	goto	l3499
  8134                           
  8135                           ; BSR set to: 0
  8136  00D3DC  C068  F00F         	movff	fabs@d,___flneg@f1
  8137  00D3E0  C069  F010         	movff	fabs@d+1,___flneg@f1+1
  8138  00D3E4  C06A  F011         	movff	fabs@d+2,___flneg@f1+2
  8139  00D3E8  C06B  F012         	movff	fabs@d+3,___flneg@f1+3
  8140  00D3EC  EC65  F06C         	call	___flneg	;wreg free
  8141  00D3F0  C00F  F068         	movff	?___flneg,?_fabs
  8142  00D3F4  C010  F069         	movff	?___flneg+1,?_fabs+1
  8143  00D3F8  C011  F06A         	movff	?___flneg+2,?_fabs+2
  8144  00D3FC  C012  F06B         	movff	?___flneg+3,?_fabs+3
  8145  00D400  0012               	return	
  8146  00D402                     l3499:
  8147                           
  8148                           ; BSR set to: 0
  8149  00D402  C068  F068         	movff	fabs@d,?_fabs
  8150  00D406  C069  F069         	movff	fabs@d+1,?_fabs+1
  8151  00D40A  C06A  F06A         	movff	fabs@d+2,?_fabs+2
  8152  00D40E  C06B  F06B         	movff	fabs@d+3,?_fabs+3
  8153                           
  8154                           ; BSR set to: 0
  8155  00D412  0012               	return		;funcret
  8156  00D414                     __end_of_fabs:
  8157                           	callstack 0
  8158                           
  8159 ;; *************** function _ADCto_uVoltage *****************
  8160 ;; Defined at:
  8161 ;;		line 180 in file "sensor.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  raw_adc         2   29[BANK0 ] int 
  8164 ;;  gain            1   31[BANK0 ] unsigned char 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  lsb             4   37[BANK0 ] float 
  8167 ;;  uVolt           4   33[BANK0 ] float 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  4   29[BANK0 ] float 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 3F/0
  8174 ;;		On exit  : 3F/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;Total ram usage:       12 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 5
  8184 ;; This function calls:
  8185 ;;		_FSR_set_LSB
  8186 ;;		___flmul
  8187 ;;		___xxtofl
  8188 ;; This function is called by:
  8189 ;;		_sensMeasure_temp_read
  8190 ;;		_sensMeasure_gas_read
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text28
  8195  00C3E4                     __ptext28:
  8196                           	callstack 0
  8197  00C3E4                     _ADCto_uVoltage:
  8198                           	callstack 23
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;sensor.c: 182: float uVolt;;sensor.c: 183: float lsb = FSR_set_LSB(gain);
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;incstack = 0
  8205  00C3E4  517F               	movf	ADCto_uVoltage@gain& (0+255),w,b
  8206  00C3E6  ECCD  F05D         	call	_FSR_set_LSB
  8207  00C3EA  C00F  F085         	movff	?_FSR_set_LSB,ADCto_uVoltage@lsb
  8208  00C3EE  C010  F086         	movff	?_FSR_set_LSB+1,ADCto_uVoltage@lsb+1
  8209  00C3F2  C011  F087         	movff	?_FSR_set_LSB+2,ADCto_uVoltage@lsb+2
  8210  00C3F6  C012  F088         	movff	?_FSR_set_LSB+3,ADCto_uVoltage@lsb+3
  8211                           
  8212                           ;sensor.c: 184: uVolt = (float)raw_adc * lsb;
  8213  00C3FA  C07D  F00F         	movff	ADCto_uVoltage@raw_adc,___xxtofl@val
  8214  00C3FE  C07E  F010         	movff	ADCto_uVoltage@raw_adc+1,___xxtofl@val+1
  8215  00C402  0E00               	movlw	0
  8216  00C404  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  8217  00C406  0EFF               	movlw	-1
  8218  00C408  6E11               	movwf	(___xxtofl@val+2)^0,c
  8219  00C40A  6E12               	movwf	(___xxtofl@val+3)^0,c
  8220  00C40C  0E01               	movlw	1
  8221  00C40E  EC4B  F04B         	call	___xxtofl
  8222  00C412  C00F  F038         	movff	?___xxtofl,___flmul@b
  8223  00C416  C010  F039         	movff	?___xxtofl+1,___flmul@b+1
  8224  00C41A  C011  F03A         	movff	?___xxtofl+2,___flmul@b+2
  8225  00C41E  C012  F03B         	movff	?___xxtofl+3,___flmul@b+3
  8226  00C422  C085  F03C         	movff	ADCto_uVoltage@lsb,___flmul@a
  8227  00C426  C086  F03D         	movff	ADCto_uVoltage@lsb+1,___flmul@a+1
  8228  00C42A  C087  F03E         	movff	ADCto_uVoltage@lsb+2,___flmul@a+2
  8229  00C42E  C088  F03F         	movff	ADCto_uVoltage@lsb+3,___flmul@a+3
  8230  00C432  EC9F  F02E         	call	___flmul	;wreg free
  8231  00C436  C038  F081         	movff	?___flmul,ADCto_uVoltage@uVolt
  8232  00C43A  C039  F082         	movff	?___flmul+1,ADCto_uVoltage@uVolt+1
  8233  00C43E  C03A  F083         	movff	?___flmul+2,ADCto_uVoltage@uVolt+2
  8234  00C442  C03B  F084         	movff	?___flmul+3,ADCto_uVoltage@uVolt+3
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;sensor.c: 185: return uVolt;
  8238  00C446  C081  F07D         	movff	ADCto_uVoltage@uVolt,?_ADCto_uVoltage
  8239  00C44A  C082  F07E         	movff	ADCto_uVoltage@uVolt+1,?_ADCto_uVoltage+1
  8240  00C44E  C083  F07F         	movff	ADCto_uVoltage@uVolt+2,?_ADCto_uVoltage+2
  8241  00C452  C084  F080         	movff	ADCto_uVoltage@uVolt+3,?_ADCto_uVoltage+3
  8242                           
  8243                           ; BSR set to: 0
  8244  00C456  0012               	return		;funcret
  8245  00C458                     __end_of_ADCto_uVoltage:
  8246                           	callstack 0
  8247                           
  8248 ;; *************** function _FSR_set_LSB *****************
  8249 ;; Defined at:
  8250 ;;		line 58 in file "sensor.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  gain            1    wreg     unsigned char 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  gain            1   18[COMRAM] unsigned char 
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  4   14[COMRAM] float 
  8257 ;; Registers used:
  8258 ;;		wreg, status,2, status,0
  8259 ;; Tracked objects:
  8260 ;;		On entry : 3F/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8267 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8268 ;;Total ram usage:        5 bytes
  8269 ;; Hardware stack levels used: 1
  8270 ;; Hardware stack levels required when called: 4
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		_ADCto_uVoltage
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           	psect	text29
  8279  00BB9A                     __ptext29:
  8280                           	callstack 0
  8281  00BB9A                     _FSR_set_LSB:
  8282                           	callstack 23
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;incstack = 0
  8286                           ;FSR_set_LSB@gain stored from wreg
  8287  00BB9A  6E13               	movwf	FSR_set_LSB@gain^0,c
  8288                           
  8289                           ;sensor.c: 60: if(gain == FSR_6p144V)
  8290  00BB9C  5013               	movf	FSR_set_LSB@gain^0,w,c
  8291  00BB9E  A4D8               	btfss	status,2,c
  8292  00BBA0  D009               	goto	l32123
  8293                           
  8294                           ;sensor.c: 61: return 187.5f;
  8295  00BBA2  0E00               	movlw	0
  8296  00BBA4  6E0F               	movwf	?_FSR_set_LSB^0,c
  8297  00BBA6  0E80               	movlw	128
  8298  00BBA8  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
  8299  00BBAA  0E3B               	movlw	59
  8300  00BBAC  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
  8301  00BBAE  0E43               	movlw	67
  8302  00BBB0  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
  8303  00BBB2  0012               	return	
  8304  00BBB4                     l32123:
  8305                           
  8306                           ;sensor.c: 62: else if(gain == FSR_4p096V)
  8307  00BBB4  0413               	decf	FSR_set_LSB@gain^0,w,c
  8308  00BBB6  A4D8               	btfss	status,2,c
  8309  00BBB8  D009               	goto	l32131
  8310                           
  8311                           ;sensor.c: 63: return 125.0f;
  8312  00BBBA  0E00               	movlw	0
  8313  00BBBC  6E0F               	movwf	?_FSR_set_LSB^0,c
  8314  00BBBE  0E00               	movlw	0
  8315  00BBC0  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
  8316  00BBC2  0EFA               	movlw	250
  8317  00BBC4  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
  8318  00BBC6  0E42               	movlw	66
  8319  00BBC8  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
  8320  00BBCA  0012               	return	
  8321  00BBCC                     l32131:
  8322                           
  8323                           ;sensor.c: 64: else if(gain == FSR_1p024V)
  8324  00BBCC  0E03               	movlw	3
  8325  00BBCE  1813               	xorwf	FSR_set_LSB@gain^0,w,c
  8326  00BBD0  A4D8               	btfss	status,2,c
  8327  00BBD2  D009               	goto	l32139
  8328                           
  8329                           ;sensor.c: 65: return 31.25f;
  8330  00BBD4  0E00               	movlw	0
  8331  00BBD6  6E0F               	movwf	?_FSR_set_LSB^0,c
  8332  00BBD8  0E00               	movlw	0
  8333  00BBDA  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
  8334  00BBDC  0EFA               	movlw	250
  8335  00BBDE  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
  8336  00BBE0  0E41               	movlw	65
  8337  00BBE2  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
  8338  00BBE4  0012               	return	
  8339  00BBE6                     l32139:
  8340                           
  8341                           ;sensor.c: 66: else if(gain == FSR_0p512V)
  8342  00BBE6  0E04               	movlw	4
  8343  00BBE8  1813               	xorwf	FSR_set_LSB@gain^0,w,c
  8344  00BBEA  A4D8               	btfss	status,2,c
  8345  00BBEC  D009               	goto	l32147
  8346                           
  8347                           ;sensor.c: 67: return 15.62f;
  8348  00BBEE  0E85               	movlw	133
  8349  00BBF0  6E0F               	movwf	?_FSR_set_LSB^0,c
  8350  00BBF2  0EEB               	movlw	235
  8351  00BBF4  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
  8352  00BBF6  0E79               	movlw	121
  8353  00BBF8  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
  8354  00BBFA  0E41               	movlw	65
  8355  00BBFC  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
  8356  00BBFE  0012               	return	
  8357  00BC00                     l32147:
  8358                           
  8359                           ;sensor.c: 68: else if(gain == FSR_0p256V)
  8360  00BC00  0E05               	movlw	5
  8361  00BC02  1813               	xorwf	FSR_set_LSB@gain^0,w,c
  8362  00BC04  A4D8               	btfss	status,2,c
  8363  00BC06  D009               	goto	l1774
  8364                           
  8365                           ;sensor.c: 69: return 7.81f;
  8366  00BC08  0E85               	movlw	133
  8367  00BC0A  6E0F               	movwf	?_FSR_set_LSB^0,c
  8368  00BC0C  0EEB               	movlw	235
  8369  00BC0E  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
  8370  00BC10  0EF9               	movlw	249
  8371  00BC12  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
  8372  00BC14  0E40               	movlw	64
  8373  00BC16  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
  8374  00BC18  0012               	return	
  8375  00BC1A                     l1774:
  8376                           
  8377                           ;sensor.c: 71: return 62.5f;
  8378  00BC1A  0E00               	movlw	0
  8379  00BC1C  6E0F               	movwf	?_FSR_set_LSB^0,c
  8380  00BC1E  0E00               	movlw	0
  8381  00BC20  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
  8382  00BC22  0E7A               	movlw	122
  8383  00BC24  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
  8384  00BC26  0E42               	movlw	66
  8385  00BC28  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
  8386  00BC2A  0012               	return		;funcret
  8387  00BC2C                     __end_of_FSR_set_LSB:
  8388                           	callstack 0
  8389                           
  8390 ;; *************** function _nvm_read_eeprom_all *****************
  8391 ;; Defined at:
  8392 ;;		line 247 in file "nvm.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  channel         1    wreg     unsigned char 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  channel         1   39[COMRAM] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      unsigned char 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8401 ;; Tracked objects:
  8402 ;;		On entry : 3F/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8409 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;Total ram usage:        1 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; Hardware stack levels required when called: 9
  8413 ;; This function calls:
  8414 ;;		_eeprom_RandomRead
  8415 ;; This function is called by:
  8416 ;;		_sensMeasure_task
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text30
  8421  00DBE2                     __ptext30:
  8422                           	callstack 0
  8423  00DBE2                     _nvm_read_eeprom_all:
  8424                           	callstack 20
  8425                           
  8426                           ;incstack = 0
  8427                           ;nvm_read_eeprom_all@channel stored from wreg
  8428  00DBE2  6E28               	movwf	nvm_read_eeprom_all@channel^0,c
  8429                           
  8430                           ;nvm.c: 249: return eeprom_RandomRead(channel, 0x00, g_nvm.eeprm[channel].byte, 62);
  8431  00DBE4  0E00               	movlw	0
  8432  00DBE6  6E23               	movwf	eeprom_RandomRead@mem_addr^0,c
  8433  00DBE8  5028               	movf	nvm_read_eeprom_all@channel^0,w,c
  8434  00DBEA  0D3E               	mullw	62
  8435  00DBEC  0E70               	movlw	low (_g_nvm+30)
  8436  00DBEE  24F3               	addwf	243,w,c
  8437  00DBF0  6E24               	movwf	eeprom_RandomRead@rdptr^0,c
  8438  00DBF2  0E01               	movlw	high (_g_nvm+30)
  8439  00DBF4  20F4               	addwfc	prodh,w,c
  8440  00DBF6  6E25               	movwf	(eeprom_RandomRead@rdptr+1)^0,c
  8441  00DBF8  0E3E               	movlw	62
  8442  00DBFA  6E26               	movwf	eeprom_RandomRead@len^0,c
  8443  00DBFC  5028               	movf	nvm_read_eeprom_all@channel^0,w,c
  8444  00DBFE  EC17  F06D         	call	_eeprom_RandomRead
  8445  00DC02  0012               	return		;funcret
  8446  00DC04                     __end_of_nvm_read_eeprom_all:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function _eeprom_RandomRead *****************
  8450 ;; Defined at:
  8451 ;;		line 26 in file "bsp/eep24AA02.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  channel         1    wreg     const unsigned char 
  8454 ;;  mem_addr        1   34[COMRAM] const unsigned char 
  8455 ;;  rdptr           2   35[COMRAM] PTR unsigned char 
  8456 ;;		 -> g_nvm.eeprm(124), g_nvm(154), 
  8457 ;;  len             1   37[COMRAM] const unsigned char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  channel         1   38[COMRAM] const unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      unsigned char 
  8462 ;; Registers used:
  8463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8472 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8473 ;;Total ram usage:        5 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; Hardware stack levels required when called: 8
  8476 ;; This function calls:
  8477 ;;		_i2c_readBytes_from
  8478 ;; This function is called by:
  8479 ;;		_nvm_read_eeprom_all
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text31
  8484  00DA2E                     __ptext31:
  8485                           	callstack 0
  8486  00DA2E                     _eeprom_RandomRead:
  8487                           	callstack 20
  8488                           
  8489                           ;incstack = 0
  8490                           ;eeprom_RandomRead@channel stored from wreg
  8491  00DA2E  6E27               	movwf	eeprom_RandomRead@channel^0,c
  8492                           
  8493                           ;eep24AA02.c: 28: return i2c_readBytes_from(eeprom_address[channel], &mem_addr, 1, rdptr
      +                          , len);
  8494  00DA30  0E23               	movlw	low eeprom_RandomRead@mem_addr
  8495  00DA32  6E1D               	movwf	i2c_readBytes_from@wraddr^0,c
  8496  00DA34  0E01               	movlw	1
  8497  00DA36  6E1E               	movwf	i2c_readBytes_from@addrlen^0,c
  8498  00DA38  C024  F01F         	movff	eeprom_RandomRead@rdptr,i2c_readBytes_from@rdptr
  8499  00DA3C  C025  F020         	movff	eeprom_RandomRead@rdptr+1,i2c_readBytes_from@rdptr+1
  8500  00DA40  C026  F021         	movff	eeprom_RandomRead@len,i2c_readBytes_from@len
  8501  00DA44  0EF9               	movlw	low _eeprom_address
  8502  00DA46  2427               	addwf	eeprom_RandomRead@channel^0,w,c
  8503  00DA48  6ED9               	movwf	fsr2l,c
  8504  00DA4A  6ADA               	clrf	fsr2h,c
  8505  00DA4C  0E01               	movlw	high _eeprom_address
  8506  00DA4E  22DA               	addwfc	fsr2h,f,c
  8507  00DA50  50DF               	movf	indf2,w,c
  8508  00DA52  EC47  F06B         	call	_i2c_readBytes_from
  8509  00DA56  0012               	return		;funcret
  8510  00DA58                     __end_of_eeprom_RandomRead:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _i2c_readBytes_from *****************
  8514 ;; Defined at:
  8515 ;;		line 108 in file "bsp/i2c.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  address         1    wreg     const unsigned char 
  8518 ;;  wraddr          1   28[COMRAM] PTR const unsigned char 
  8519 ;;		 -> eeprom_RandomRead@mem_addr(1), 
  8520 ;;  addrlen         1   29[COMRAM] const unsigned char 
  8521 ;;  rdptr           2   30[COMRAM] PTR unsigned char 
  8522 ;;		 -> g_nvm.eeprm(124), g_nvm(154), 
  8523 ;;  len             1   32[COMRAM] const unsigned char 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  address         1   33[COMRAM] const unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      unsigned char 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8535 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8539 ;;Total ram usage:        6 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 7
  8542 ;; This function calls:
  8543 ;;		_I2C_Stop
  8544 ;;		_i2c_readBytes
  8545 ;;		_i2c_writeBytes
  8546 ;; This function is called by:
  8547 ;;		_eeprom_RandomRead
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text32
  8552  00D68E                     __ptext32:
  8553                           	callstack 0
  8554  00D68E                     _i2c_readBytes_from:
  8555                           	callstack 20
  8556                           
  8557                           ;incstack = 0
  8558                           ;i2c_readBytes_from@address stored from wreg
  8559  00D68E  6E22               	movwf	i2c_readBytes_from@address^0,c
  8560                           
  8561                           ;i2c.c: 110: if (i2c_writeBytes(address, wraddr, addrlen, 0) == 0) {
  8562  00D690  C01D  F015         	movff	i2c_readBytes_from@wraddr,i2c_writeBytes@wrptr
  8563  00D694  C01E  F016         	movff	i2c_readBytes_from@addrlen,i2c_writeBytes@len
  8564  00D698  0E00               	movlw	0
  8565  00D69A  6E17               	movwf	i2c_writeBytes@isStop^0,c
  8566  00D69C  5022               	movf	i2c_readBytes_from@address^0,w,c
  8567  00D69E  EC7D  F06B         	call	_i2c_writeBytes
  8568  00D6A2  0900               	iorlw	0
  8569  00D6A4  A4D8               	btfss	status,2,c
  8570  00D6A6  D004               	goto	l31941
  8571                           
  8572                           ;i2c.c: 111: I2C_Stop();
  8573  00D6A8  EC22  F06F         	call	_I2C_Stop	;wreg free
  8574                           
  8575                           ;i2c.c: 112: return 0;
  8576  00D6AC  0E00               	movlw	0
  8577  00D6AE  0012               	return	
  8578  00D6B0                     l31941:
  8579                           
  8580                           ;i2c.c: 113: };i2c.c: 115: return i2c_readBytes(address, rdptr, len);
  8581  00D6B0  C01F  F011         	movff	i2c_readBytes_from@rdptr,i2c_readBytes@rdptr
  8582  00D6B4  C020  F012         	movff	i2c_readBytes_from@rdptr+1,i2c_readBytes@rdptr+1
  8583  00D6B8  C021  F013         	movff	i2c_readBytes_from@len,i2c_readBytes@len
  8584  00D6BC  5022               	movf	i2c_readBytes_from@address^0,w,c
  8585  00D6BE  ECC3  F060         	call	_i2c_readBytes
  8586  00D6C2  0012               	return		;funcret
  8587  00D6C4                     __end_of_i2c_readBytes_from:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _i2c_readBytes *****************
  8591 ;; Defined at:
  8592 ;;		line 87 in file "bsp/i2c.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  address         1    wreg     const unsigned char 
  8595 ;;  rdptr           2   16[COMRAM] PTR unsigned char 
  8596 ;;		 -> g_nvm.eeprm(124), g_nvm(154), max7323_get_gpio@b(1), lmp91000_get_Modecn@rBuff(1), 
  8597 ;;		 -> lmp91000_get_Refcn@rBuff(1), lmp91000_get_Tiacn@rBuff(1), lmp91000_get_lock@rBuff(1), lmp91000_get_status@rBuff(
      +1), 
  8598 ;;		 -> ads1114_Comparator_SetUp@rbuff(2), ads1114_read@rbuff(2), ads1114_read_ready@rbuff(2), 
  8599 ;;  len             1   18[COMRAM] const unsigned char 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  address         1   25[COMRAM] const unsigned char 
  8602 ;;  i               1   27[COMRAM] unsigned char 
  8603 ;;  ackbit          1   26[COMRAM] unsigned char 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1    wreg      unsigned char 
  8606 ;; Registers used:
  8607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8613 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8617 ;;Total ram usage:       12 bytes
  8618 ;; Hardware stack levels used: 1
  8619 ;; Hardware stack levels required when called: 5
  8620 ;; This function calls:
  8621 ;;		_I2C_Read
  8622 ;;		_I2C_Start
  8623 ;;		_I2C_Stop
  8624 ;;		_I2C_Write
  8625 ;; This function is called by:
  8626 ;;		_ads1114_read
  8627 ;;		_i2c_readBytes_from
  8628 ;;		_lmp91000_get_status
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text33
  8633  00C186                     __ptext33:
  8634                           	callstack 0
  8635  00C186                     _i2c_readBytes:
  8636                           	callstack 20
  8637                           
  8638                           ;incstack = 0
  8639                           ;i2c_readBytes@address stored from wreg
  8640  00C186  6E1A               	movwf	i2c_readBytes@address^0,c
  8641                           
  8642                           ;i2c.c: 89: I2C_Start();
  8643  00C188  EC2A  F06F         	call	_I2C_Start	;wreg free
  8644                           
  8645                           ;i2c.c: 91: if(I2C_Write(address | 0x01)) {
  8646  00C18C  501A               	movf	i2c_readBytes@address^0,w,c
  8647  00C18E  0901               	iorlw	1
  8648  00C190  EC13  F06E         	call	_I2C_Write
  8649  00C194  0900               	iorlw	0
  8650  00C196  B4D8               	btfsc	status,2,c
  8651  00C198  D004               	goto	l31033
  8652                           
  8653                           ;i2c.c: 92: I2C_Stop();
  8654  00C19A  EC22  F06F         	call	_I2C_Stop	;wreg free
  8655                           
  8656                           ;i2c.c: 93: return 0;
  8657  00C19E  0E00               	movlw	0
  8658  00C1A0  0012               	return	
  8659  00C1A2                     l31033:
  8660                           
  8661                           ;i2c.c: 94: };i2c.c: 96: uint8_t ackbit = I2C_ACK;
  8662  00C1A2  0E00               	movlw	0
  8663  00C1A4  6E1B               	movwf	i2c_readBytes@ackbit^0,c
  8664                           
  8665                           ;i2c.c: 97: for(uint8_t i = 0 ; i < len ; i++)
  8666  00C1A6  0E00               	movlw	0
  8667  00C1A8  6E1C               	movwf	i2c_readBytes@i^0,c
  8668  00C1AA  5013               	movf	i2c_readBytes@len^0,w,c
  8669  00C1AC  B4D8               	btfsc	status,2,c
  8670  00C1AE  D026               	goto	u38850
  8671  00C1B0                     l31039:
  8672                           
  8673                           ;i2c.c: 98: {;i2c.c: 99: if (i == len - 1) ackbit = I2C_NACK;
  8674  00C1B0  501C               	movf	i2c_readBytes@i^0,w,c
  8675  00C1B2  6E14               	movwf	??_i2c_readBytes^0,c
  8676  00C1B4  6A15               	clrf	(??_i2c_readBytes+1)^0,c
  8677  00C1B6  0EFF               	movlw	255
  8678  00C1B8  6E16               	movwf	(??_i2c_readBytes+2)^0,c
  8679  00C1BA  0EFF               	movlw	255
  8680  00C1BC  6E17               	movwf	(??_i2c_readBytes+3)^0,c
  8681  00C1BE  5013               	movf	i2c_readBytes@len^0,w,c
  8682  00C1C0  6E18               	movwf	(??_i2c_readBytes+4)^0,c
  8683  00C1C2  6A19               	clrf	(??_i2c_readBytes+5)^0,c
  8684  00C1C4  5016               	movf	(??_i2c_readBytes+2)^0,w,c
  8685  00C1C6  2618               	addwf	(??_i2c_readBytes+4)^0,f,c
  8686  00C1C8  5017               	movf	(??_i2c_readBytes+3)^0,w,c
  8687  00C1CA  2219               	addwfc	(??_i2c_readBytes+5)^0,f,c
  8688  00C1CC  5014               	movf	??_i2c_readBytes^0,w,c
  8689  00C1CE  1818               	xorwf	(??_i2c_readBytes+4)^0,w,c
  8690  00C1D0  E106               	bnz	l31043
  8691  00C1D2  5015               	movf	(??_i2c_readBytes+1)^0,w,c
  8692  00C1D4  1819               	xorwf	(??_i2c_readBytes+5)^0,w,c
  8693  00C1D6  A4D8               	btfss	status,2,c
  8694  00C1D8  D002               	goto	l31043
  8695  00C1DA  0E01               	movlw	1
  8696  00C1DC  6E1B               	movwf	i2c_readBytes@ackbit^0,c
  8697  00C1DE                     l31043:
  8698                           
  8699                           ;i2c.c: 100: rdptr[i] = I2C_Read(ackbit);
  8700  00C1DE  501C               	movf	i2c_readBytes@i^0,w,c
  8701  00C1E0  2411               	addwf	i2c_readBytes@rdptr^0,w,c
  8702  00C1E2  6ED9               	movwf	fsr2l,c
  8703  00C1E4  0E00               	movlw	0
  8704  00C1E6  2012               	addwfc	(i2c_readBytes@rdptr+1)^0,w,c
  8705  00C1E8  6EDA               	movwf	fsr2h,c
  8706  00C1EA  501B               	movf	i2c_readBytes@ackbit^0,w,c
  8707  00C1EC  ECC0  F06C         	call	_I2C_Read
  8708  00C1F0  6EDF               	movwf	indf2,c
  8709  00C1F2  2A1C               	incf	i2c_readBytes@i^0,f,c
  8710  00C1F4  5013               	movf	i2c_readBytes@len^0,w,c
  8711  00C1F6  5C1C               	subwf	i2c_readBytes@i^0,w,c
  8712  00C1F8  A0D8               	btfss	status,0,c
  8713  00C1FA  D7DA               	goto	l31039
  8714  00C1FC                     u38850:
  8715                           
  8716                           ;i2c.c: 101: };i2c.c: 103: I2C_Stop();
  8717  00C1FC  EC22  F06F         	call	_I2C_Stop	;wreg free
  8718                           
  8719                           ;i2c.c: 105: return 1;
  8720  00C200  0E01               	movlw	1
  8721  00C202  0012               	return		;funcret
  8722  00C204                     __end_of_i2c_readBytes:
  8723                           	callstack 0
  8724                           
  8725 ;; *************** function _I2C_Read *****************
  8726 ;; Defined at:
  8727 ;;		line 166 in file "bsp/i2c.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  ack             1    wreg     enum E5222
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  ack             1   14[COMRAM] enum E5222
  8732 ;;  I2CReadData     1   15[COMRAM] unsigned char 
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      unsigned char 
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8746 ;;Total ram usage:        2 bytes
  8747 ;; Hardware stack levels used: 1
  8748 ;; Hardware stack levels required when called: 4
  8749 ;; This function calls:
  8750 ;;		Nothing
  8751 ;; This function is called by:
  8752 ;;		_i2c_readBytes
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text34
  8757  00D980                     __ptext34:
  8758                           	callstack 0
  8759  00D980                     _I2C_Read:
  8760                           	callstack 20
  8761                           
  8762                           ;incstack = 0
  8763                           ;I2C_Read@ack stored from wreg
  8764  00D980  6E0F               	movwf	I2C_Read@ack^0,c
  8765                           
  8766                           ;i2c.c: 168: uint8_t I2CReadData;;i2c.c: 170: PIR1bits.SSP1IF = 0;
  8767  00D982  969E               	bcf	158,3,c	;volatile
  8768  00D984                     l192:
  8769  00D984  B0C7               	btfsc	199,0,c	;volatile
  8770  00D986  D7FE               	goto	l192
  8771                           
  8772                           ;i2c.c: 173: SSP1CON2bits.RCEN = 1;
  8773  00D988  86C5               	bsf	197,3,c	;volatile
  8774  00D98A                     l195:
  8775  00D98A  A69E               	btfss	158,3,c	;volatile
  8776  00D98C  D7FE               	goto	l195
  8777                           
  8778                           ;i2c.c: 176: PIR1bits.SSP1IF = 0;
  8779  00D98E  969E               	bcf	158,3,c	;volatile
  8780                           
  8781                           ;i2c.c: 178: I2CReadData = SSP1BUF;
  8782  00D990  CFC9 F010          	movff	4041,I2C_Read@I2CReadData	;volatile
  8783                           
  8784                           ;i2c.c: 180: if (ack == I2C_NACK)
  8785  00D994  040F               	decf	I2C_Read@ack^0,w,c
  8786  00D996  A4D8               	btfss	status,2,c
  8787  00D998  D002               	goto	l198
  8788                           
  8789                           ;i2c.c: 181: {;i2c.c: 182: SSP1CON2bits.ACKDT = 1;
  8790  00D99A  8AC5               	bsf	197,5,c	;volatile
  8791                           
  8792                           ;i2c.c: 183: }
  8793  00D99C  D001               	goto	l199
  8794  00D99E                     l198:
  8795                           
  8796                           ;i2c.c: 184: else;i2c.c: 185: {;i2c.c: 186: SSP1CON2bits.ACKDT = 0;
  8797  00D99E  9AC5               	bcf	197,5,c	;volatile
  8798  00D9A0                     l199:
  8799                           
  8800                           ;i2c.c: 187: };i2c.c: 189: SSP1CON2bits.ACKEN = 1;
  8801  00D9A0  88C5               	bsf	197,4,c	;volatile
  8802                           
  8803                           ;i2c.c: 191: PIR1bits.SSP1IF = 0;
  8804  00D9A2  969E               	bcf	158,3,c	;volatile
  8805  00D9A4                     l200:
  8806  00D9A4  A69E               	btfss	158,3,c	;volatile
  8807  00D9A6  D7FE               	goto	l200
  8808                           
  8809                           ;i2c.c: 194: return I2CReadData;
  8810  00D9A8  5010               	movf	I2C_Read@I2CReadData^0,w,c
  8811  00D9AA  0012               	return		;funcret
  8812  00D9AC                     __end_of_I2C_Read:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function _ewmaFilter_get *****************
  8816 ;; Defined at:
  8817 ;;		line 22 in file "filter.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  ewmaFilter      2   29[BANK0 ] PTR struct .
  8820 ;;		 -> ewmaFilter(10), 
  8821 ;;  inputValue      4   31[BANK0 ] float 
  8822 ;;  sensitivity     1   35[BANK0 ] unsigned char 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  alpha           4   44[BANK0 ] float 
  8825 ;;  retval          4   40[BANK0 ] float 
  8826 ;;  idx             1   48[BANK0 ] unsigned char 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  4   29[BANK0 ] float 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8831 ;; Tracked objects:
  8832 ;;		On entry : 3F/0
  8833 ;;		On exit  : 3F/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8836 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;Total ram usage:       20 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 6
  8843 ;; This function calls:
  8844 ;;		___fladd
  8845 ;;		___flmul
  8846 ;;		___flsub
  8847 ;; This function is called by:
  8848 ;;		_sensMeasure_task
  8849 ;; This function uses a non-reentrant model
  8850 ;;
  8851                           
  8852                           	psect	text35
  8853  009004                     __ptext35:
  8854                           	callstack 0
  8855  009004                     _ewmaFilter_get:
  8856                           	callstack 23
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;filter.c: 24: float retval, alpha;;filter.c: 25: static float filter_alpha[15] = {;filt
      +                          er.c: 26: 1.0f, 0.9f, 0.85f, 0.8f, 0.7f, 0.6f, 0.5f, 0.4f, 0.3f, 0.25f,;filter.c: 27: 0.
      +                          2f, 0.15f, 0.1f, 0.05f, 0.02f;filter.c: 28: };;filter.c: 30: if (ewmaFilter->hasInit == 
      +                          0) {
  8860                           
  8861                           ;incstack = 0
  8862  009004  C07D  FFD9         	movff	ewmaFilter_get@ewmaFilter,fsr2l
  8863  009008  C07E  FFDA         	movff	ewmaFilter_get@ewmaFilter+1,fsr2h
  8864  00900C  50DF               	movf	indf2,w,c
  8865  00900E  A4D8               	btfss	status,2,c
  8866  009010  D01D               	goto	l33745
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;filter.c: 31: ewmaFilter->prevValue = inputValue;
  8870  009012  EE20 F001          	lfsr	2,1
  8871  009016  517D               	movf	ewmaFilter_get@ewmaFilter& (0+255),w,b
  8872  009018  26D9               	addwf	fsr2l,f,c
  8873  00901A  517E               	movf	(ewmaFilter_get@ewmaFilter+1)& (0+255),w,b
  8874  00901C  22DA               	addwfc	fsr2h,f,c
  8875  00901E  C07F  FFDE         	movff	ewmaFilter_get@inputValue,postinc2
  8876  009022  C080  FFDE         	movff	ewmaFilter_get@inputValue+1,postinc2
  8877  009026  C081  FFDE         	movff	ewmaFilter_get@inputValue+2,postinc2
  8878  00902A  C082  FFDE         	movff	ewmaFilter_get@inputValue+3,postinc2
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;filter.c: 32: ewmaFilter->hasInit = 1;
  8882  00902E  C07D  FFD9         	movff	ewmaFilter_get@ewmaFilter,fsr2l
  8883  009032  C07E  FFDA         	movff	ewmaFilter_get@ewmaFilter+1,fsr2h
  8884  009036  0E01               	movlw	1
  8885  009038  6EDF               	movwf	indf2,c
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;filter.c: 33: return inputValue;
  8889  00903A  C07F  F07D         	movff	ewmaFilter_get@inputValue,?_ewmaFilter_get
  8890  00903E  C080  F07E         	movff	ewmaFilter_get@inputValue+1,?_ewmaFilter_get+1
  8891  009042  C081  F07F         	movff	ewmaFilter_get@inputValue+2,?_ewmaFilter_get+2
  8892  009046  C082  F080         	movff	ewmaFilter_get@inputValue+3,?_ewmaFilter_get+3
  8893  00904A  0012               	return	
  8894  00904C                     l33745:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;filter.c: 34: };filter.c: 36: uint8_t idx = sensitivity - 1;
  8898  00904C  0583               	decf	ewmaFilter_get@sensitivity& (0+255),w,b
  8899  00904E  6F90               	movwf	ewmaFilter_get@idx& (0+255),b
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;filter.c: 38: if (idx > 14) idx = 14;
  8903                           
  8904                           ;filter.c: 37: if (idx < 0) idx = 0;
  8905  009050  0E0E               	movlw	14
  8906  009052  6590               	cpfsgt	ewmaFilter_get@idx& (0+255),b
  8907  009054  D002               	goto	l33753
  8908                           
  8909                           ; BSR set to: 0
  8910  009056  0E0E               	movlw	14
  8911  009058  6F90               	movwf	ewmaFilter_get@idx& (0+255),b
  8912  00905A                     l33753:
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;filter.c: 39: alpha = filter_alpha[idx];
  8916  00905A  5190               	movf	ewmaFilter_get@idx& (0+255),w,b
  8917  00905C  0D04               	mullw	4
  8918  00905E  0EA3               	movlw	low ewmaFilter_get@filter_alpha
  8919  009060  24F3               	addwf	243,w,c
  8920  009062  6ED9               	movwf	fsr2l,c
  8921  009064  0E04               	movlw	high ewmaFilter_get@filter_alpha
  8922  009066  20F4               	addwfc	prodh,w,c
  8923  009068  6EDA               	movwf	fsr2h,c
  8924  00906A  CFDE F08C          	movff	postinc2,ewmaFilter_get@alpha
  8925  00906E  CFDE F08D          	movff	postinc2,ewmaFilter_get@alpha+1
  8926  009072  CFDE F08E          	movff	postinc2,ewmaFilter_get@alpha+2
  8927  009076  CFDE F08F          	movff	postinc2,ewmaFilter_get@alpha+3
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;filter.c: 41: retval = ((1 - alpha) * ewmaFilter->prevValue) + (alpha * inputValue);
  8931  00907A  EE20 F001          	lfsr	2,1
  8932  00907E  517D               	movf	ewmaFilter_get@ewmaFilter& (0+255),w,b
  8933  009080  26D9               	addwf	fsr2l,f,c
  8934  009082  517E               	movf	(ewmaFilter_get@ewmaFilter+1)& (0+255),w,b
  8935  009084  22DA               	addwfc	fsr2h,f,c
  8936  009086  CFDE F03C          	movff	postinc2,___flmul@a
  8937  00908A  CFDE F03D          	movff	postinc2,___flmul@a+1
  8938  00908E  CFDE F03E          	movff	postinc2,___flmul@a+2
  8939  009092  CFDE F03F          	movff	postinc2,___flmul@a+3
  8940  009096  C08C  F064         	movff	ewmaFilter_get@alpha,___flsub@a
  8941  00909A  C08D  F065         	movff	ewmaFilter_get@alpha+1,___flsub@a+1
  8942  00909E  C08E  F066         	movff	ewmaFilter_get@alpha+2,___flsub@a+2
  8943  0090A2  C08F  F067         	movff	ewmaFilter_get@alpha+3,___flsub@a+3
  8944  0090A6  0E00               	movlw	0
  8945  0090A8  6F60               	movwf	___flsub@b& (0+255),b
  8946  0090AA  0E00               	movlw	0
  8947  0090AC  6F61               	movwf	(___flsub@b+1)& (0+255),b
  8948  0090AE  0E80               	movlw	128
  8949  0090B0  6F62               	movwf	(___flsub@b+2)& (0+255),b
  8950  0090B2  0E3F               	movlw	63
  8951  0090B4  6F63               	movwf	(___flsub@b+3)& (0+255),b
  8952  0090B6  EC1B  F068         	call	___flsub	;wreg free
  8953  0090BA  C060  F038         	movff	?___flsub,___flmul@b
  8954  0090BE  C061  F039         	movff	?___flsub+1,___flmul@b+1
  8955  0090C2  C062  F03A         	movff	?___flsub+2,___flmul@b+2
  8956  0090C6  C063  F03B         	movff	?___flsub+3,___flmul@b+3
  8957  0090CA  EC9F  F02E         	call	___flmul	;wreg free
  8958  0090CE  C038  F084         	movff	?___flmul,_ewmaFilter_get$9454
  8959  0090D2  C039  F085         	movff	?___flmul+1,_ewmaFilter_get$9454+1
  8960  0090D6  C03A  F086         	movff	?___flmul+2,_ewmaFilter_get$9454+2
  8961  0090DA  C03B  F087         	movff	?___flmul+3,_ewmaFilter_get$9454+3
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;filter.c: 41: retval = ((1 - alpha) * ewmaFilter->prevValue) + (alpha * inputValue);
  8965  0090DE  C084  F028         	movff	_ewmaFilter_get$9454,___fladd@b
  8966  0090E2  C085  F029         	movff	_ewmaFilter_get$9454+1,___fladd@b+1
  8967  0090E6  C086  F02A         	movff	_ewmaFilter_get$9454+2,___fladd@b+2
  8968  0090EA  C087  F02B         	movff	_ewmaFilter_get$9454+3,___fladd@b+3
  8969  0090EE  C07F  F03C         	movff	ewmaFilter_get@inputValue,___flmul@a
  8970  0090F2  C080  F03D         	movff	ewmaFilter_get@inputValue+1,___flmul@a+1
  8971  0090F6  C081  F03E         	movff	ewmaFilter_get@inputValue+2,___flmul@a+2
  8972  0090FA  C082  F03F         	movff	ewmaFilter_get@inputValue+3,___flmul@a+3
  8973  0090FE  C08C  F038         	movff	ewmaFilter_get@alpha,___flmul@b
  8974  009102  C08D  F039         	movff	ewmaFilter_get@alpha+1,___flmul@b+1
  8975  009106  C08E  F03A         	movff	ewmaFilter_get@alpha+2,___flmul@b+2
  8976  00910A  C08F  F03B         	movff	ewmaFilter_get@alpha+3,___flmul@b+3
  8977  00910E  EC9F  F02E         	call	___flmul	;wreg free
  8978  009112  C038  F02C         	movff	?___flmul,___fladd@a
  8979  009116  C039  F02D         	movff	?___flmul+1,___fladd@a+1
  8980  00911A  C03A  F02E         	movff	?___flmul+2,___fladd@a+2
  8981  00911E  C03B  F02F         	movff	?___flmul+3,___fladd@a+3
  8982  009122  ECBF  F031         	call	___fladd	;wreg free
  8983  009126  C028  F088         	movff	?___fladd,ewmaFilter_get@retval
  8984  00912A  C029  F089         	movff	?___fladd+1,ewmaFilter_get@retval+1
  8985  00912E  C02A  F08A         	movff	?___fladd+2,ewmaFilter_get@retval+2
  8986  009132  C02B  F08B         	movff	?___fladd+3,ewmaFilter_get@retval+3
  8987                           
  8988                           ;filter.c: 43: ewmaFilter->prevValue = retval;
  8989  009136  0100               	movlb	0	; () banked
  8990  009138  EE20 F001          	lfsr	2,1
  8991  00913C  517D               	movf	ewmaFilter_get@ewmaFilter& (0+255),w,b
  8992  00913E  26D9               	addwf	fsr2l,f,c
  8993  009140  517E               	movf	(ewmaFilter_get@ewmaFilter+1)& (0+255),w,b
  8994  009142  22DA               	addwfc	fsr2h,f,c
  8995  009144  C088  FFDE         	movff	ewmaFilter_get@retval,postinc2
  8996  009148  C089  FFDE         	movff	ewmaFilter_get@retval+1,postinc2
  8997  00914C  C08A  FFDE         	movff	ewmaFilter_get@retval+2,postinc2
  8998  009150  C08B  FFDE         	movff	ewmaFilter_get@retval+3,postinc2
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;filter.c: 45: return retval;
  9002  009154  C088  F07D         	movff	ewmaFilter_get@retval,?_ewmaFilter_get
  9003  009158  C089  F07E         	movff	ewmaFilter_get@retval+1,?_ewmaFilter_get+1
  9004  00915C  C08A  F07F         	movff	ewmaFilter_get@retval+2,?_ewmaFilter_get+2
  9005  009160  C08B  F080         	movff	ewmaFilter_get@retval+3,?_ewmaFilter_get+3
  9006                           
  9007                           ; BSR set to: 0
  9008  009164  0012               	return		;funcret
  9009  009166                     __end_of_ewmaFilter_get:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _I2C_Bus_SourceGet *****************
  9013 ;; Defined at:
  9014 ;;		line 57 in file "bsp/power.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;		None
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  1    wreg      unsigned char 
  9021 ;; Registers used:
  9022 ;;		wreg
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;Total ram usage:        0 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 4
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_sensMeasure_task
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text36
  9043  00DE80                     __ptext36:
  9044                           	callstack 0
  9045  00DE80                     _I2C_Bus_SourceGet:
  9046                           	callstack 25
  9047                           
  9048                           ;power.c: 59: if (PORTAbits.RA2)
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;incstack = 0
  9052  00DE80  A480               	btfss	128,2,c	;volatile
  9053  00DE82  D002               	goto	l14911
  9054                           
  9055                           ;power.c: 60: return 1;
  9056  00DE84  0E01               	movlw	1
  9057  00DE86  0012               	return	
  9058  00DE88                     l14911:
  9059                           
  9060                           ;power.c: 61: return 0;
  9061  00DE88  0E00               	movlw	0
  9062  00DE8A  0012               	return		;funcret
  9063  00DE8C                     __end_of_I2C_Bus_SourceGet:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function _modbus_task *****************
  9067 ;; Defined at:
  9068 ;;		line 445 in file "app_modbus.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;		None
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;		None
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  1    wreg      void 
  9075 ;; Registers used:
  9076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9086 ;;Total ram usage:        0 bytes
  9087 ;; Hardware stack levels used: 1
  9088 ;; Hardware stack levels required when called: 12
  9089 ;; This function calls:
  9090 ;;		_modbus_master_relay_control_task
  9091 ;;		_modbus_master_relay_status_task
  9092 ;;		_modbus_master_task
  9093 ;;		_modbus_slave_task
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           	psect	text37
  9100  00CFEE                     __ptext37:
  9101                           	callstack 0
  9102  00CFEE                     _modbus_task:
  9103                           	callstack 18
  9104                           
  9105                           ;app_modbus.c: 447: if (g_nvm.flash.sensing_on == SENSING_ON) {
  9106                           
  9107                           ;incstack = 0
  9108  00CFEE  0101               	movlb	1	; () banked
  9109  00CFF0  0553               	decf	(_g_nvm+1)& (0+255),w,b
  9110  00CFF2  A4D8               	btfss	status,2,c
  9111  00CFF4  0012               	return	
  9112                           
  9113                           ; BSR set to: 1
  9114                           ;app_modbus.c: 448: if (g_nvm.flash.ctrl_master_mode == MODBUS_MASTER_MODE) {
  9115  00CFF6  0554               	decf	(_g_nvm+2)& (0+255),w,b
  9116  00CFF8  A4D8               	btfss	status,2,c
  9117  00CFFA  D01A               	goto	l33865
  9118                           
  9119                           ; BSR set to: 1
  9120                           ;app_modbus.c: 449: modbus_master_task();
  9121  00CFFC  ECEB  F04B         	call	_modbus_master_task	;wreg free
  9122                           
  9123                           ;app_modbus.c: 450: if (g_modbus.isWarmDone) {
  9124  00D000  0101               	movlb	1	; () banked
  9125  00D002  512F               	movf	(_g_modbus+11)& (0+255),w,b
  9126  00D004  B4D8               	btfsc	status,2,c
  9127  00D006  D003               	goto	l33859
  9128                           
  9129                           ; BSR set to: 1
  9130                           ;app_modbus.c: 451: modbus_master_relay_control_task();
  9131  00D008  EC14  F063         	call	_modbus_master_relay_control_task	;wreg free
  9132                           
  9133                           ;app_modbus.c: 452: } else {
  9134  00D00C  D00E               	goto	l33863
  9135  00D00E                     l33859:
  9136                           
  9137                           ; BSR set to: 1
  9138                           ;app_modbus.c: 453: if (g_relay_sec_count >= 18000) {
  9139  00D00E  0E50               	movlw	80
  9140  00D010  0100               	movlb	0	; () banked
  9141  00D012  5DE4               	subwf	_g_relay_sec_count& (0+255),w,b	;volatile
  9142  00D014  0E46               	movlw	70
  9143  00D016  59E5               	subwfb	(_g_relay_sec_count+1)& (0+255),w,b	;volatile
  9144  00D018  A0D8               	btfss	status,0,c
  9145  00D01A  D007               	goto	l33863
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;app_modbus.c: 454: g_relay_sec_count = 0;
  9149  00D01C  0E00               	movlw	0
  9150  00D01E  6FE5               	movwf	(_g_relay_sec_count+1)& (0+255),b	;volatile
  9151  00D020  0E00               	movlw	0
  9152  00D022  6FE4               	movwf	_g_relay_sec_count& (0+255),b	;volatile
  9153                           
  9154                           ;app_modbus.c: 455: g_modbus.isWarmDone = 1;
  9155  00D024  0E01               	movlw	1
  9156  00D026  0101               	movlb	1	; () banked
  9157  00D028  6F2F               	movwf	(_g_modbus+11)& (0+255),b
  9158  00D02A                     l33863:
  9159                           
  9160                           ;app_modbus.c: 456: };app_modbus.c: 457: };app_modbus.c: 458: modbus_master_relay_status
      +                          _task();
  9161  00D02A  EC41  F06D         	call	_modbus_master_relay_status_task	;wreg free
  9162                           
  9163                           ;app_modbus.c: 459: } else {
  9164  00D02E  0012               	return	
  9165  00D030                     l33865:
  9166                           
  9167                           ; BSR set to: 1
  9168                           ;app_modbus.c: 460: modbus_slave_task();
  9169  00D030  ECAA  F04A         	call	_modbus_slave_task	;wreg free
  9170  00D034  0012               	return		;funcret
  9171  00D036                     __end_of_modbus_task:
  9172                           	callstack 0
  9173                           
  9174 ;; *************** function _modbus_slave_task *****************
  9175 ;; Defined at:
  9176 ;;		line 369 in file "app_modbus.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;		None
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  byte            1   65[COMRAM] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 3F/1
  9187 ;;		On exit  : 3C/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;Total ram usage:        1 bytes
  9195 ;; Hardware stack levels used: 1
  9196 ;; Hardware stack levels required when called: 9
  9197 ;; This function calls:
  9198 ;;		_buffer_de_queue_bool
  9199 ;;		_modbusParseRequest
  9200 ;;		_modbusSlaveEnd
  9201 ;;		_modbus_init
  9202 ;;		_rs485_writeBytes
  9203 ;; This function is called by:
  9204 ;;		_modbus_task
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text38
  9209  009554                     __ptext38:
  9210                           	callstack 0
  9211  009554                     _modbus_slave_task:
  9212                           	callstack 20
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;app_modbus.c: 371: uint8_t byte;;app_modbus.c: 373: switch (g_modbus.seq) {
  9216                           
  9217                           ;incstack = 0
  9218  009554  D089               	goto	l33643
  9219  009556                     l33581:
  9220                           
  9221                           ; BSR set to: 1
  9222                           ;app_modbus.c: 375: modbus_init();
  9223  009556  EC03  F05B         	call	_modbus_init	;wreg free
  9224  00955A                     l33583:
  9225                           
  9226                           ;app_modbus.c: 376: g_timeout_count = 0;
  9227  00955A  0E00               	movlw	0
  9228  00955C  0100               	movlb	0	; () banked
  9229  00955E  6FFB               	movwf	_g_timeout_count& (0+255),b	;volatile
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;app_modbus.c: 377: g_modbus.seq = MODBUS_READY;
  9233  009560  0E01               	movlw	1
  9234  009562  0101               	movlb	1	; () banked
  9235  009564  6F24               	movwf	_g_modbus& (0+255),b
  9236                           
  9237                           ;app_modbus.c: 378: break;
  9238  009566  0012               	return	
  9239  009568                     l33587:
  9240                           
  9241                           ; BSR set to: 1
  9242                           ;app_modbus.c: 380: if (buffer_de_queue_bool(&g_modbus_queue, &byte)) {
  9243  009568  0E60               	movlw	low _g_modbus_queue
  9244  00956A  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
  9245  00956C  0E04               	movlw	high _g_modbus_queue
  9246  00956E  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
  9247  009570  0E42               	movlw	low modbus_slave_task@byte
  9248  009572  6E11               	movwf	buffer_de_queue_bool@ch^0,c
  9249  009574  EC02  F061         	call	_buffer_de_queue_bool	;wreg free
  9250  009578  0900               	iorlw	0
  9251  00957A  B4D8               	btfsc	status,2,c
  9252  00957C  0012               	return	
  9253                           
  9254                           ; BSR set to: 1
  9255                           ;app_modbus.c: 381: g_timeout_count = 0;
  9256  00957E  0E00               	movlw	0
  9257  009580  0100               	movlb	0	; () banked
  9258  009582  6FFB               	movwf	_g_timeout_count& (0+255),b	;volatile
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;app_modbus.c: 382: if (byte == g_slave.address) {
  9262  009584  5042               	movf	modbus_slave_task@byte^0,w,c
  9263  009586  0102               	movlb	2	; () banked
  9264  009588  1948               	xorwf	_g_slave& (0+255),w,b
  9265  00958A  A4D8               	btfss	status,2,c
  9266  00958C  0012               	return	
  9267                           
  9268                           ; BSR set to: 2
  9269                           ;app_modbus.c: 383: g_slave.request.length = 0;
  9270  00958E  0E00               	movlw	0
  9271  009590  6F84               	movwf	(_g_slave+60)& (0+255),b
  9272                           
  9273                           ; BSR set to: 2
  9274                           ;app_modbus.c: 384: g_slave.request.frame[g_slave.request.length++] = byte;
  9275  009592  0E7B               	movlw	low (_g_slave+51)
  9276  009594  2584               	addwf	(_g_slave+60)& (0+255),w,b
  9277  009596  6ED9               	movwf	fsr2l,c
  9278  009598  6ADA               	clrf	fsr2h,c
  9279  00959A  0E02               	movlw	high (_g_slave+51)
  9280  00959C  22DA               	addwfc	fsr2h,f,c
  9281  00959E  C042  FFDF         	movff	modbus_slave_task@byte,indf2
  9282                           
  9283                           ; BSR set to: 2
  9284  0095A2  2B84               	incf	(_g_slave+60)& (0+255),f,b
  9285                           
  9286                           ; BSR set to: 2
  9287                           ;app_modbus.c: 385: g_modbus.seq = MODBUS_START;
  9288  0095A4  0E02               	movlw	2
  9289  0095A6  0101               	movlb	1	; () banked
  9290  0095A8  6F24               	movwf	_g_modbus& (0+255),b
  9291  0095AA  0012               	return	
  9292  0095AC                     l33601:
  9293                           
  9294                           ; BSR set to: 1
  9295                           ;app_modbus.c: 390: if (buffer_de_queue_bool(&g_modbus_queue, &byte)) {
  9296  0095AC  0E60               	movlw	low _g_modbus_queue
  9297  0095AE  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
  9298  0095B0  0E04               	movlw	high _g_modbus_queue
  9299  0095B2  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
  9300  0095B4  0E42               	movlw	low modbus_slave_task@byte
  9301  0095B6  6E11               	movwf	buffer_de_queue_bool@ch^0,c
  9302  0095B8  EC02  F061         	call	_buffer_de_queue_bool	;wreg free
  9303  0095BC  0900               	iorlw	0
  9304  0095BE  B4D8               	btfsc	status,2,c
  9305  0095C0  D03A               	goto	l33623
  9306                           
  9307                           ; BSR set to: 1
  9308                           ;app_modbus.c: 391: g_timeout_count = 0;
  9309  0095C2  0E00               	movlw	0
  9310  0095C4  0100               	movlb	0	; () banked
  9311  0095C6  6FFB               	movwf	_g_timeout_count& (0+255),b	;volatile
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;app_modbus.c: 392: g_slave.request.frame[g_slave.request.length++] = byte;
  9315  0095C8  0E7B               	movlw	low (_g_slave+51)
  9316  0095CA  0102               	movlb	2	; () banked
  9317  0095CC  2584               	addwf	(_g_slave+60)& (0+255),w,b
  9318  0095CE  6ED9               	movwf	fsr2l,c
  9319  0095D0  6ADA               	clrf	fsr2h,c
  9320  0095D2  0E02               	movlw	high (_g_slave+51)
  9321  0095D4  22DA               	addwfc	fsr2h,f,c
  9322  0095D6  C042  FFDF         	movff	modbus_slave_task@byte,indf2
  9323                           
  9324                           ; BSR set to: 2
  9325  0095DA  2B84               	incf	(_g_slave+60)& (0+255),f,b
  9326                           
  9327                           ; BSR set to: 2
  9328                           ;app_modbus.c: 393: if (g_slave.request.length >= 8) {
  9329  0095DC  0E07               	movlw	7
  9330  0095DE  6584               	cpfsgt	(_g_slave+60)& (0+255),b
  9331  0095E0  0012               	return	
  9332  0095E2  D00C               	goto	l33621
  9333  0095E4                     l33613:
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;app_modbus.c: 397: g_modbus.seq = MODBUS_OUTPUT;
  9337  0095E4  0E04               	movlw	4
  9338  0095E6  0101               	movlb	1	; () banked
  9339  0095E8  6F24               	movwf	_g_modbus& (0+255),b
  9340                           
  9341                           ;app_modbus.c: 398: break;
  9342  0095EA  0012               	return	
  9343  0095EC                     l33615:
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;app_modbus.c: 401: case MODBUS_ERROR_PARSE:;app_modbus.c: 402: case MODBUS_ERROR_BUILD:
      +                          ;app_modbus.c: 403: g_modbus.seq = MODBUS_EXCEPTION;
  9347  0095EC  0E06               	movlw	6
  9348  0095EE  0101               	movlb	1	; () banked
  9349  0095F0  6F24               	movwf	_g_modbus& (0+255),b
  9350                           
  9351                           ;app_modbus.c: 404: break;
  9352  0095F2  0012               	return	
  9353  0095F4                     l33617:
  9354                           
  9355                           ;app_modbus.c: 407: case MODBUS_ERROR_OTHER:;app_modbus.c: 408: case MODBUS_ERROR_NULLPT
      +                          R:;app_modbus.c: 409: g_modbus.seq = MODBUS_END;
  9356  0095F4  0E07               	movlw	7
  9357  0095F6  0101               	movlb	1	; () banked
  9358  0095F8  6F24               	movwf	_g_modbus& (0+255),b
  9359                           
  9360                           ;app_modbus.c: 410: break;
  9361  0095FA  0012               	return	
  9362  0095FC                     l33621:
  9363                           
  9364                           ; BSR set to: 2
  9365  0095FC  0E48               	movlw	low _g_slave
  9366  0095FE  0100               	movlb	0	; () banked
  9367  009600  6F60               	movwf	modbusParseRequest@status& (0+255),b
  9368  009602  0E02               	movlw	high _g_slave
  9369  009604  6F61               	movwf	(modbusParseRequest@status+1)& (0+255),b
  9370  009606  EC07  F039         	call	_modbusParseRequest	;wreg free
  9371                           
  9372                           ; Switch size 1, requested type "simple"
  9373                           ; Number of cases is 7, Range of values is 0 to 6
  9374                           ; switch strategies available:
  9375                           ; Name         Instructions Cycles
  9376                           ; simple_byte           22    12 (average)
  9377                           ;	Chosen strategy is simple_byte
  9378  00960A  0A00               	xorlw	0	; case 0
  9379  00960C  B4D8               	btfsc	status,2,c
  9380  00960E  D7EA               	goto	l33613
  9381  009610  0A01               	xorlw	1	; case 1
  9382  009612  B4D8               	btfsc	status,2,c
  9383  009614  D7EB               	goto	l33615
  9384  009616  0A03               	xorlw	3	; case 2
  9385  009618  B4D8               	btfsc	status,2,c
  9386  00961A  D7EC               	goto	l33617
  9387  00961C  0A01               	xorlw	1	; case 3
  9388  00961E  B4D8               	btfsc	status,2,c
  9389  009620  D7E9               	goto	l33617
  9390  009622  0A07               	xorlw	7	; case 4
  9391  009624  B4D8               	btfsc	status,2,c
  9392  009626  D7E6               	goto	l33617
  9393  009628  0A01               	xorlw	1	; case 5
  9394  00962A  B4D8               	btfsc	status,2,c
  9395  00962C  D7DF               	goto	l33615
  9396  00962E  0A03               	xorlw	3	; case 6
  9397  009630  A4D8               	btfss	status,2,c
  9398  009632  0012               	return	
  9399  009634  D7DB               	goto	l33615
  9400  009636                     l33623:
  9401                           
  9402                           ; BSR set to: 1
  9403                           ;app_modbus.c: 414: if (g_timeout_count > g_modbus.timeout) {
  9404  009636  0100               	movlb	0	; () banked
  9405  009638  51FB               	movf	_g_timeout_count& (0+255),w,b	;volatile
  9406  00963A  0101               	movlb	1	; () banked
  9407  00963C  5D25               	subwf	(_g_modbus+1)& (0+255),w,b
  9408  00963E  B0D8               	btfsc	status,0,c
  9409  009640  0012               	return	
  9410                           
  9411                           ; BSR set to: 1
  9412                           ;app_modbus.c: 415: g_modbus.seq = MODBUS_TIMEOUT;
  9413  009642  0E03               	movlw	3
  9414  009644  6F24               	movwf	_g_modbus& (0+255),b
  9415  009646  0012               	return	
  9416  009648                     l33629:
  9417                           
  9418                           ; BSR set to: 1
  9419                           ;app_modbus.c: 423: rs485_writeBytes(g_slave.response.frame, g_slave.response.length);
  9420  009648  0E63               	movlw	low (_g_slave+27)
  9421  00964A  6E14               	movwf	rs485_writeBytes@wrptr^0,c
  9422  00964C  0E02               	movlw	high (_g_slave+27)
  9423  00964E  6E15               	movwf	(rs485_writeBytes@wrptr+1)^0,c
  9424  009650  C27A  F016         	movff	_g_slave+50,rs485_writeBytes@len
  9425  009654  EC62  F06B         	call	_rs485_writeBytes	;wreg free
  9426  009658  D7CD               	goto	l33617
  9427  00965A                     l33635:
  9428                           
  9429                           ; BSR set to: 1
  9430                           ;app_modbus.c: 438: modbusSlaveEnd(&g_slave);
  9431  00965A  0E48               	movlw	low _g_slave
  9432  00965C  6E1D               	movwf	modbusSlaveEnd@status^0,c
  9433  00965E  0E02               	movlw	high _g_slave
  9434  009660  6E1E               	movwf	(modbusSlaveEnd@status+1)^0,c
  9435  009662  EC2C  F06D         	call	_modbusSlaveEnd	;wreg free
  9436  009666  D779               	goto	l33583
  9437  009668                     l33643:
  9438                           
  9439                           ; BSR set to: 1
  9440  009668  5124               	movf	_g_modbus& (0+255),w,b
  9441                           
  9442                           ; Switch size 1, requested type "simple"
  9443                           ; Number of cases is 7, Range of values is 0 to 7
  9444                           ; switch strategies available:
  9445                           ; Name         Instructions Cycles
  9446                           ; simple_byte           22    12 (average)
  9447                           ;	Chosen strategy is simple_byte
  9448  00966A  0A00               	xorlw	0	; case 0
  9449  00966C  B4D8               	btfsc	status,2,c
  9450  00966E  D773               	goto	l33581
  9451  009670  0A01               	xorlw	1	; case 1
  9452  009672  B4D8               	btfsc	status,2,c
  9453  009674  D779               	goto	l33587
  9454  009676  0A03               	xorlw	3	; case 2
  9455  009678  B4D8               	btfsc	status,2,c
  9456  00967A  D798               	goto	l33601
  9457  00967C  0A01               	xorlw	1	; case 3
  9458  00967E  B4D8               	btfsc	status,2,c
  9459  009680  D7B9               	goto	l33617
  9460  009682  0A07               	xorlw	7	; case 4
  9461  009684  B4D8               	btfsc	status,2,c
  9462  009686  D7E0               	goto	l33629
  9463  009688  0A02               	xorlw	2	; case 6
  9464  00968A  B4D8               	btfsc	status,2,c
  9465  00968C  D7B3               	goto	l33617
  9466  00968E  0A01               	xorlw	1	; case 7
  9467  009690  A4D8               	btfss	status,2,c
  9468  009692  0012               	return	
  9469  009694  D7E2               	goto	l33635
  9470  009696                     __end_of_modbus_slave_task:
  9471                           	callstack 0
  9472                           
  9473 ;; *************** function _modbusSlaveEnd *****************
  9474 ;; Defined at:
  9475 ;;		line 287 in file "lightmodbus/slave.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  status          2   28[COMRAM] PTR struct modbusSlave
  9478 ;;		 -> g_slave(61), 
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;		None
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      enum E235
  9483 ;; Registers used:
  9484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 3F/1
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;Total ram usage:        2 bytes
  9495 ;; Hardware stack levels used: 1
  9496 ;; Hardware stack levels required when called: 5
  9497 ;; This function calls:
  9498 ;;		_memset
  9499 ;; This function is called by:
  9500 ;;		_modbus_slave_task
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504                           	psect	text39
  9505  00DA58                     __ptext39:
  9506                           	callstack 0
  9507  00DA58                     _modbusSlaveEnd:
  9508                           	callstack 23
  9509                           
  9510                           ; BSR set to: 1
  9511                           ;slave.c: 290: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
  9512                           
  9513                           ;incstack = 0
  9514  00DA58  501D               	movf	modbusSlaveEnd@status^0,w,c
  9515  00DA5A  101E               	iorwf	(modbusSlaveEnd@status+1)^0,w,c
  9516  00DA5C  B4D8               	btfsc	status,2,c
  9517  00DA5E  0012               	return	
  9518                           
  9519                           ; BSR set to: 1
  9520                           ;slave.c: 297: memset( status->response.frame, 0, 23 );
  9521  00DA60  0E1B               	movlw	27
  9522  00DA62  241D               	addwf	modbusSlaveEnd@status^0,w,c
  9523  00DA64  6E15               	movwf	memset@p1^0,c
  9524  00DA66  0E00               	movlw	0
  9525  00DA68  201E               	addwfc	(modbusSlaveEnd@status+1)^0,w,c
  9526  00DA6A  6E16               	movwf	(memset@p1+1)^0,c
  9527  00DA6C  0E00               	movlw	0
  9528  00DA6E  6E18               	movwf	(memset@c+1)^0,c
  9529  00DA70  0E00               	movlw	0
  9530  00DA72  6E17               	movwf	memset@c^0,c
  9531  00DA74  0E00               	movlw	0
  9532  00DA76  6E1A               	movwf	(memset@n+1)^0,c
  9533  00DA78  0E17               	movlw	23
  9534  00DA7A  6E19               	movwf	memset@n^0,c
  9535  00DA7C  ECD6  F06C         	call	_memset	;wreg free
  9536  00DA80  0012               	return		;funcret
  9537  00DA82                     __end_of_modbusSlaveEnd:
  9538                           	callstack 0
  9539                           
  9540 ;; *************** function _modbusParseRequest *****************
  9541 ;; Defined at:
  9542 ;;		line 75 in file "lightmodbus/slave.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  status          2    0[BANK0 ] PTR struct modbusSlave
  9545 ;;		 -> g_slave(61), 
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;  i               2   11[BANK0 ] unsigned int 
  9548 ;;  parser          2   13[BANK0 ] PTR struct modbusParser
  9549 ;;		 -> g_slave.request.frame(9), 
  9550 ;;  crc             2    6[BANK0 ] unsigned int 
  9551 ;;  err             1   10[BANK0 ] unsigned char 
  9552 ;;  functionExec    1    9[BANK0 ] unsigned char 
  9553 ;;  functionMatc    1    8[BANK0 ] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      enum E235
  9556 ;; Registers used:
  9557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 3F/0
  9560 ;;		On exit  : 3F/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9563 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;Total ram usage:       15 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; Hardware stack levels required when called: 8
  9570 ;; This function calls:
  9571 ;;		___wmul
  9572 ;;		_memcpy
  9573 ;;		_modbusBuildExceptionErr
  9574 ;;		_modbusCRC
  9575 ;;		_modbusParseRequest0304
  9576 ;; This function is called by:
  9577 ;;		_modbus_slave_task
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text40
  9582  00720E                     __ptext40:
  9583                           	callstack 0
  9584  00720E                     _modbusParseRequest:
  9585                           	callstack 20
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;slave.c: 78: uint8_t err = 0;
  9589                           
  9590                           ;incstack = 0
  9591  00720E  0E00               	movlw	0
  9592  007210  6F6A               	movwf	modbusParseRequest@err& (0+255),b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;slave.c: 81: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
  9596  007212  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9597  007214  1161               	iorwf	(modbusParseRequest@status+1)& (0+255),w,b
  9598  007216  A4D8               	btfss	status,2,c
  9599  007218  D002               	goto	l32345
  9600                           
  9601                           ; BSR set to: 0
  9602  00721A  0E04               	movlw	4
  9603  00721C  0012               	return	
  9604  00721E                     l32345:
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;slave.c: 84: status->response.length = 0;
  9608  00721E  EE20 F032          	lfsr	2,50
  9609  007222  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9610  007224  26D9               	addwf	fsr2l,f,c
  9611  007226  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9612  007228  22DA               	addwfc	fsr2h,f,c
  9613  00722A  0E00               	movlw	0
  9614  00722C  6EDF               	movwf	indf2,c
  9615                           
  9616                           ;slave.c: 92: status->parseError = MODBUS_FERROR_OK;
  9617  00722E  EE20 F016          	lfsr	2,22
  9618  007232  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9619  007234  26D9               	addwf	fsr2l,f,c
  9620  007236  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9621  007238  22DA               	addwfc	fsr2h,f,c
  9622  00723A  0E00               	movlw	0
  9623  00723C  6EDF               	movwf	indf2,c
  9624                           
  9625                           ;slave.c: 96: if ( status->request.length < 4u || status->request.frame == (0) )
  9626  00723E  EE20 F03C          	lfsr	2,60
  9627  007242  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9628  007244  26D9               	addwf	fsr2l,f,c
  9629  007246  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9630  007248  22DA               	addwfc	fsr2h,f,c
  9631  00724A  0E03               	movlw	3
  9632  00724C  64DF               	cpfsgt	indf2,c
  9633  00724E  D00A               	goto	u40760
  9634                           
  9635                           ; BSR set to: 0
  9636  007250  0E33               	movlw	51
  9637  007252  2560               	addwf	modbusParseRequest@status& (0+255),w,b
  9638  007254  6F62               	movwf	??_modbusParseRequest& (0+255),b
  9639  007256  0E00               	movlw	0
  9640  007258  2161               	addwfc	(modbusParseRequest@status+1)& (0+255),w,b
  9641  00725A  6F63               	movwf	(??_modbusParseRequest+1)& (0+255),b
  9642  00725C  5162               	movf	??_modbusParseRequest& (0+255),w,b
  9643  00725E  1163               	iorwf	(??_modbusParseRequest+1)& (0+255),w,b
  9644  007260  A4D8               	btfss	status,2,c
  9645  007262  D00A               	goto	l32355
  9646  007264                     u40760:
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;slave.c: 97: {;slave.c: 98: status->parseError = MODBUS_FERROR_LENGTH;
  9650  007264  EE20 F016          	lfsr	2,22
  9651  007268  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9652  00726A  26D9               	addwf	fsr2l,f,c
  9653  00726C  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9654  00726E  22DA               	addwfc	fsr2h,f,c
  9655  007270  0E02               	movlw	2
  9656  007272  6EDF               	movwf	indf2,c
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;slave.c: 99: return MODBUS_ERROR_PARSE;
  9660  007274  0E05               	movlw	5
  9661  007276  0012               	return	
  9662  007278                     l32355:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;slave.c: 100: };slave.c: 105: uint16_t crc;;slave.c: 107: memcpy(&crc, status->request.
      +                          frame + status->request.length - 2, 2);
  9666  007278  0E66               	movlw	low modbusParseRequest@crc
  9667  00727A  6E0F               	movwf	memcpy@d1^0,c
  9668  00727C  6A10               	clrf	(memcpy@d1+1)^0,c
  9669  00727E  EE20 F03C          	lfsr	2,60
  9670  007282  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9671  007284  26D9               	addwf	fsr2l,f,c
  9672  007286  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9673  007288  22DA               	addwfc	fsr2h,f,c
  9674  00728A  50DF               	movf	indf2,w,c
  9675  00728C  6F62               	movwf	??_modbusParseRequest& (0+255),b
  9676  00728E  5162               	movf	??_modbusParseRequest& (0+255),w,b
  9677  007290  2560               	addwf	modbusParseRequest@status& (0+255),w,b
  9678  007292  6F63               	movwf	(??_modbusParseRequest+1)& (0+255),b
  9679  007294  0E00               	movlw	0
  9680  007296  2161               	addwfc	(modbusParseRequest@status+1)& (0+255),w,b
  9681  007298  6F64               	movwf	(??_modbusParseRequest+2)& (0+255),b
  9682  00729A  0E31               	movlw	49
  9683  00729C  2563               	addwf	(??_modbusParseRequest+1)& (0+255),w,b
  9684  00729E  6E11               	movwf	memcpy@s1^0,c
  9685  0072A0  0E00               	movlw	0
  9686  0072A2  2164               	addwfc	(??_modbusParseRequest+2)& (0+255),w,b
  9687  0072A4  6E12               	movwf	(memcpy@s1+1)^0,c
  9688  0072A6  0E00               	movlw	0
  9689  0072A8  6E14               	movwf	(memcpy@n+1)^0,c
  9690  0072AA  0E02               	movlw	2
  9691  0072AC  6E13               	movwf	memcpy@n^0,c
  9692  0072AE  ECA6  F068         	call	_memcpy	;wreg free
  9693                           
  9694                           ;slave.c: 109: if ( crc != modbusCRC( status->request.frame, status->request.length - 2 
      +                          ) )
  9695  0072B2  0E33               	movlw	51
  9696  0072B4  0100               	movlb	0	; () banked
  9697  0072B6  2560               	addwf	modbusParseRequest@status& (0+255),w,b
  9698  0072B8  6E0F               	movwf	modbusCRC@data^0,c
  9699  0072BA  0E00               	movlw	0
  9700  0072BC  2161               	addwfc	(modbusParseRequest@status+1)& (0+255),w,b
  9701  0072BE  6E10               	movwf	(modbusCRC@data+1)^0,c
  9702  0072C0  EE20 F03C          	lfsr	2,60
  9703  0072C4  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9704  0072C6  26D9               	addwf	fsr2l,f,c
  9705  0072C8  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9706  0072CA  22DA               	addwfc	fsr2h,f,c
  9707  0072CC  50DF               	movf	indf2,w,c
  9708  0072CE  6F62               	movwf	??_modbusParseRequest& (0+255),b
  9709  0072D0  0EFE               	movlw	254
  9710  0072D2  2562               	addwf	??_modbusParseRequest& (0+255),w,b
  9711  0072D4  6E11               	movwf	modbusCRC@length^0,c
  9712  0072D6  6A12               	clrf	(modbusCRC@length+1)^0,c
  9713  0072D8  0EFF               	movlw	255
  9714  0072DA  2212               	addwfc	(modbusCRC@length+1)^0,f,c
  9715  0072DC  EC2C  F062         	call	_modbusCRC	;wreg free
  9716  0072E0  0100               	movlb	0	; () banked
  9717  0072E2  5166               	movf	modbusParseRequest@crc& (0+255),w,b
  9718  0072E4  180F               	xorwf	?_modbusCRC^0,w,c
  9719  0072E6  E104               	bnz	u40770
  9720  0072E8  5167               	movf	(modbusParseRequest@crc+1)& (0+255),w,b
  9721  0072EA  1810               	xorwf	(?_modbusCRC+1)^0,w,c
  9722  0072EC  B4D8               	btfsc	status,2,c
  9723  0072EE  D008               	goto	l32363
  9724  0072F0                     u40770:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;slave.c: 110: {;slave.c: 111: status->parseError = MODBUS_FERROR_CRC;
  9728  0072F0  EE20 F016          	lfsr	2,22
  9729  0072F4  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9730  0072F6  26D9               	addwf	fsr2l,f,c
  9731  0072F8  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9732  0072FA  22DA               	addwfc	fsr2h,f,c
  9733  0072FC  0E01               	movlw	1
  9734  0072FE  D7B9               	goto	L13
  9735  007300                     l32363:
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;slave.c: 113: };slave.c: 116: ModbusParser *parser = (ModbusParser *) status->request.f
      +                          rame;
  9739  007300  0E33               	movlw	51
  9740  007302  2560               	addwf	modbusParseRequest@status& (0+255),w,b
  9741  007304  6F6D               	movwf	modbusParseRequest@parser& (0+255),b
  9742  007306  0E00               	movlw	0
  9743  007308  2161               	addwfc	(modbusParseRequest@status+1)& (0+255),w,b
  9744  00730A  6F6E               	movwf	(modbusParseRequest@parser+1)& (0+255),b
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;slave.c: 119: if ( parser->_base.address != status->address && parser->_base.address !=
      +                           0 )
  9748  00730C  C060  FFD9         	movff	modbusParseRequest@status,fsr2l
  9749  007310  C061  FFDA         	movff	modbusParseRequest@status+1,fsr2h
  9750  007314  C06D  FFE1         	movff	modbusParseRequest@parser,fsr1l
  9751  007318  C06E  FFE2         	movff	modbusParseRequest@parser+1,fsr1h
  9752  00731C  50DE               	movf	postinc2,w,c
  9753  00731E  18E6               	xorwf	postinc1,w,c
  9754  007320  B4D8               	btfsc	status,2,c
  9755  007322  D009               	goto	l32373
  9756                           
  9757                           ; BSR set to: 0
  9758  007324  C06D  FFD9         	movff	modbusParseRequest@parser,fsr2l
  9759  007328  C06E  FFDA         	movff	modbusParseRequest@parser+1,fsr2h
  9760  00732C  50DF               	movf	indf2,w,c
  9761  00732E  B4D8               	btfsc	status,2,c
  9762  007330  D002               	goto	l32373
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;slave.c: 120: return MODBUS_ERROR_OK;
  9766  007332  0E00               	movlw	0
  9767  007334  0012               	return	
  9768  007336                     l32373:
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;slave.c: 123: uint8_t functionMatch = 0, functionExec = 0;
  9772  007336  0E00               	movlw	0
  9773  007338  6F68               	movwf	modbusParseRequest@functionMatch& (0+255),b
  9774  00733A  0E00               	movlw	0
  9775  00733C  6F69               	movwf	modbusParseRequest@functionExec& (0+255),b
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;slave.c: 127: if ( status->userFunctions != (0) )
  9779  00733E  EE20 F017          	lfsr	2,23
  9780  007342  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9781  007344  26D9               	addwf	fsr2l,f,c
  9782  007346  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9783  007348  22DA               	addwfc	fsr2h,f,c
  9784  00734A  50DE               	movf	postinc2,w,c
  9785  00734C  10DE               	iorwf	postinc2,w,c
  9786  00734E  B4D8               	btfsc	status,2,c
  9787  007350  D064               	goto	u40830
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;slave.c: 128: {;slave.c: 129: uint16_t i;;slave.c: 130: for ( i = 0; i < status->userFu
      +                          nctionCount; i++ )
  9791  007352  0E00               	movlw	0
  9792  007354  6F6C               	movwf	(modbusParseRequest@i+1)& (0+255),b
  9793  007356  0E00               	movlw	0
  9794  007358  6F6B               	movwf	modbusParseRequest@i& (0+255),b
  9795  00735A  D053               	goto	l32391
  9796  00735C                     l32379:
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;slave.c: 131: {;slave.c: 132: if ( status->userFunctions[i].function == parser->_base.f
      +                          unction )
  9800  00735C  EE20 F001          	lfsr	2,1
  9801  007360  516D               	movf	modbusParseRequest@parser& (0+255),w,b
  9802  007362  26D9               	addwf	fsr2l,f,c
  9803  007364  516E               	movf	(modbusParseRequest@parser+1)& (0+255),w,b
  9804  007366  22DA               	addwfc	fsr2h,f,c
  9805  007368  C06B  F00F         	movff	modbusParseRequest@i,___wmul@multiplier
  9806  00736C  C06C  F010         	movff	modbusParseRequest@i+1,___wmul@multiplier+1
  9807  007370  0E00               	movlw	0
  9808  007372  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  9809  007374  0E03               	movlw	3
  9810  007376  6E11               	movwf	___wmul@multiplicand^0,c
  9811  007378  ECCC  F06D         	call	___wmul	;wreg free
  9812  00737C  0100               	movlb	0	; () banked
  9813  00737E  EE10 F017          	lfsr	1,23
  9814  007382  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9815  007384  26E1               	addwf	fsr1l,f,c
  9816  007386  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9817  007388  22E2               	addwfc	fsr1h,f,c
  9818  00738A  CFE6 F063          	movff	postinc1,??_modbusParseRequest+1
  9819  00738E  CFE5 F064          	movff	postdec1,??_modbusParseRequest+2
  9820  007392  500F               	movf	?___wmul^0,w,c
  9821  007394  2563               	addwf	(??_modbusParseRequest+1)& (0+255),w,b
  9822  007396  6EE1               	movwf	fsr1l,c
  9823  007398  5010               	movf	(?___wmul+1)^0,w,c
  9824  00739A  2164               	addwfc	(??_modbusParseRequest+2)& (0+255),w,b
  9825  00739C  6EE2               	movwf	fsr1h,c
  9826  00739E  50DE               	movf	postinc2,w,c
  9827  0073A0  18E6               	xorwf	postinc1,w,c
  9828  0073A2  A4D8               	btfss	status,2,c
  9829  0073A4  D02C               	goto	l32389
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;slave.c: 133: {;slave.c: 134: functionMatch = 1;
  9833  0073A6  0E01               	movlw	1
  9834  0073A8  6F68               	movwf	modbusParseRequest@functionMatch& (0+255),b
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;slave.c: 137: if ( status->userFunctions[i].handler != (0) )
  9838  0073AA  C06B  F00F         	movff	modbusParseRequest@i,___wmul@multiplier
  9839  0073AE  C06C  F010         	movff	modbusParseRequest@i+1,___wmul@multiplier+1
  9840  0073B2  0E00               	movlw	0
  9841  0073B4  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  9842  0073B6  0E03               	movlw	3
  9843  0073B8  6E11               	movwf	___wmul@multiplicand^0,c
  9844  0073BA  ECCC  F06D         	call	___wmul	;wreg free
  9845  0073BE  0100               	movlb	0	; () banked
  9846  0073C0  EE20 F017          	lfsr	2,23
  9847  0073C4  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9848  0073C6  26D9               	addwf	fsr2l,f,c
  9849  0073C8  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9850  0073CA  22DA               	addwfc	fsr2h,f,c
  9851  0073CC  CFDE F062          	movff	postinc2,??_modbusParseRequest
  9852  0073D0  CFDD F063          	movff	postdec2,??_modbusParseRequest+1
  9853  0073D4  500F               	movf	?___wmul^0,w,c
  9854  0073D6  2762               	addwf	??_modbusParseRequest& (0+255),f,b
  9855  0073D8  5010               	movf	(?___wmul+1)^0,w,c
  9856  0073DA  2363               	addwfc	(??_modbusParseRequest+1)& (0+255),f,b
  9857  0073DC  0E01               	movlw	1
  9858  0073DE  2562               	addwf	??_modbusParseRequest& (0+255),w,b
  9859  0073E0  6ED9               	movwf	fsr2l,c
  9860  0073E2  0E00               	movlw	0
  9861  0073E4  2163               	addwfc	(??_modbusParseRequest+1)& (0+255),w,b
  9862  0073E6  6EDA               	movwf	fsr2h,c
  9863  0073E8  50DE               	movf	postinc2,w,c
  9864  0073EA  10DE               	iorwf	postinc2,w,c
  9865  0073EC  B4D8               	btfsc	status,2,c
  9866  0073EE  D004               	goto	l32387
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;slave.c: 138: {;slave.c: 139: err = status->userFunctions[i].handler( status, parser );
  9870  0073F0  0E00               	movlw	0
  9871  0073F2  6F6A               	movwf	modbusParseRequest@err& (0+255),b
  9872                           
  9873                           ;slave.c: 140: functionExec = 1;
  9874  0073F4  0E01               	movlw	1
  9875  0073F6  D001               	goto	L15
  9876  0073F8                     l32387:
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;slave.c: 142: else;slave.c: 143: functionExec = 0;
  9880  0073F8  0E00               	movlw	0
  9881  0073FA                     L15:
  9882  0073FA  6F69               	movwf	modbusParseRequest@functionExec& (0+255),b
  9883  0073FC  D00E               	goto	u40830
  9884  0073FE                     l32389:
  9885                           
  9886                           ; BSR set to: 0
  9887  0073FE  4B6B               	infsnz	modbusParseRequest@i& (0+255),f,b
  9888  007400  2B6C               	incf	(modbusParseRequest@i+1)& (0+255),f,b
  9889  007402                     l32391:
  9890                           
  9891                           ; BSR set to: 0
  9892  007402  EE20 F019          	lfsr	2,25
  9893  007406  5160               	movf	modbusParseRequest@status& (0+255),w,b
  9894  007408  26D9               	addwf	fsr2l,f,c
  9895  00740A  5161               	movf	(modbusParseRequest@status+1)& (0+255),w,b
  9896  00740C  22DA               	addwfc	fsr2h,f,c
  9897  00740E  50DE               	movf	postinc2,w,c
  9898  007410  5D6B               	subwf	modbusParseRequest@i& (0+255),w,b
  9899  007412  50DE               	movf	postinc2,w,c
  9900  007414  596C               	subwfb	(modbusParseRequest@i+1)& (0+255),w,b
  9901  007416  A0D8               	btfss	status,0,c
  9902  007418  D7A1               	goto	l32379
  9903  00741A                     u40830:
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;slave.c: 147: };slave.c: 148: };slave.c: 149: };slave.c: 152: if ( !functionMatch )
  9907  00741A  5168               	movf	modbusParseRequest@functionMatch& (0+255),w,b
  9908  00741C  A4D8               	btfss	status,2,c
  9909  00741E  D023               	goto	l32405
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;slave.c: 153: {;slave.c: 154: functionExec = 1;
  9913  007420  0E01               	movlw	1
  9914  007422  6F69               	movwf	modbusParseRequest@functionExec& (0+255),b
  9915                           
  9916                           ;slave.c: 155: switch ( parser->_base.function )
  9917  007424  D012               	goto	l32403
  9918  007426                     l32397:
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;slave.c: 166: case 4:;slave.c: 167: err = modbusParseRequest0304( status, parser );
  9922  007426  C060  F027         	movff	modbusParseRequest@status,modbusParseRequest0304@status
  9923  00742A  C061  F028         	movff	modbusParseRequest@status+1,modbusParseRequest0304@status+1
  9924  00742E  C06D  F029         	movff	modbusParseRequest@parser,modbusParseRequest0304@parser
  9925  007432  C06E  F02A         	movff	modbusParseRequest@parser+1,modbusParseRequest0304@parser+1
  9926  007436  EC9A  F028         	call	_modbusParseRequest0304	;wreg free
  9927  00743A  0100               	movlb	0	; () banked
  9928  00743C  6F6A               	movwf	modbusParseRequest@err& (0+255),b
  9929                           
  9930                           ;slave.c: 168: break;
  9931  00743E  D013               	goto	l32405
  9932  007440                     l32399:
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;slave.c: 202: err = MODBUS_OK;
  9936  007440  0E00               	movlw	0
  9937  007442  6F6A               	movwf	modbusParseRequest@err& (0+255),b
  9938                           
  9939                           ;slave.c: 203: functionExec = 0;
  9940  007444  0E00               	movlw	0
  9941  007446  6F69               	movwf	modbusParseRequest@functionExec& (0+255),b
  9942                           
  9943                           ;slave.c: 204: break;
  9944  007448  D00E               	goto	l32405
  9945  00744A                     l32403:
  9946                           
  9947                           ; BSR set to: 0
  9948  00744A  EE20 F001          	lfsr	2,1
  9949  00744E  516D               	movf	modbusParseRequest@parser& (0+255),w,b
  9950  007450  26D9               	addwf	fsr2l,f,c
  9951  007452  516E               	movf	(modbusParseRequest@parser+1)& (0+255),w,b
  9952  007454  22DA               	addwfc	fsr2h,f,c
  9953  007456  50DF               	movf	indf2,w,c
  9954                           
  9955                           ; Switch size 1, requested type "simple"
  9956                           ; Number of cases is 2, Range of values is 3 to 4
  9957                           ; switch strategies available:
  9958                           ; Name         Instructions Cycles
  9959                           ; simple_byte            7     4 (average)
  9960                           ;	Chosen strategy is simple_byte
  9961  007458  0A03               	xorlw	3	; case 3
  9962  00745A  B4D8               	btfsc	status,2,c
  9963  00745C  D7E4               	goto	l32397
  9964  00745E  0A07               	xorlw	7	; case 4
  9965  007460  B4D8               	btfsc	status,2,c
  9966  007462  D7E1               	goto	l32397
  9967  007464  D7ED               	goto	l32399
  9968  007466                     l32405:
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;slave.c: 206: };slave.c: 209: if ( !functionExec )
  9972  007466  5169               	movf	modbusParseRequest@functionExec& (0+255),w,b
  9973  007468  A4D8               	btfss	status,2,c
  9974  00746A  D02A               	goto	l32413
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;slave.c: 210: {;slave.c: 211: if ( functionMatch )
  9978  00746C  5168               	movf	modbusParseRequest@functionMatch& (0+255),w,b
  9979  00746E  B4D8               	btfsc	status,2,c
  9980  007470  D013               	goto	l32411
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;slave.c: 212: err = modbusBuildExceptionErr( status, parser->_base.function, MODBUS_EXC
      +                          EP_ILLEGAL_FUNCTION, MODBUS_FERROR_NULLFUN );
  9984  007472  C060  F021         	movff	modbusParseRequest@status,modbusBuildExceptionErr@status
  9985  007476  C061  F022         	movff	modbusParseRequest@status+1,modbusBuildExceptionErr@status+1
  9986  00747A  EE20 F001          	lfsr	2,1
  9987  00747E  516D               	movf	modbusParseRequest@parser& (0+255),w,b
  9988  007480  26D9               	addwf	fsr2l,f,c
  9989  007482  516E               	movf	(modbusParseRequest@parser+1)& (0+255),w,b
  9990  007484  22DA               	addwfc	fsr2h,f,c
  9991  007486  50DF               	movf	indf2,w,c
  9992  007488  6E23               	movwf	modbusBuildExceptionErr@function^0,c
  9993  00748A  0E01               	movlw	1
  9994  00748C  6E24               	movwf	modbusBuildExceptionErr@code^0,c
  9995  00748E  0E0B               	movlw	11
  9996  007490  6E25               	movwf	modbusBuildExceptionErr@parseError^0,c
  9997  007492  EC6C  F069         	call	_modbusBuildExceptionErr	;wreg free
  9998  007496  D012               	goto	L14
  9999  007498                     l32411:
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;slave.c: 213: else;slave.c: 214: err = modbusBuildExceptionErr( status, parser->_base.f
      +                          unction, MODBUS_EXCEP_ILLEGAL_FUNCTION, MODBUS_FERROR_NOFUN );
 10003  007498  C060  F021         	movff	modbusParseRequest@status,modbusBuildExceptionErr@status
 10004  00749C  C061  F022         	movff	modbusParseRequest@status+1,modbusBuildExceptionErr@status+1
 10005  0074A0  EE20 F001          	lfsr	2,1
 10006  0074A4  516D               	movf	modbusParseRequest@parser& (0+255),w,b
 10007  0074A6  26D9               	addwf	fsr2l,f,c
 10008  0074A8  516E               	movf	(modbusParseRequest@parser+1)& (0+255),w,b
 10009  0074AA  22DA               	addwfc	fsr2h,f,c
 10010  0074AC  50DF               	movf	indf2,w,c
 10011  0074AE  6E23               	movwf	modbusBuildExceptionErr@function^0,c
 10012  0074B0  0E01               	movlw	1
 10013  0074B2  6E24               	movwf	modbusBuildExceptionErr@code^0,c
 10014  0074B4  0E09               	movlw	9
 10015  0074B6  6E25               	movwf	modbusBuildExceptionErr@parseError^0,c
 10016  0074B8  EC6C  F069         	call	_modbusBuildExceptionErr	;wreg free
 10017  0074BC                     L14:
 10018  0074BC  0100               	movlb	0	; () banked
 10019  0074BE  6F6A               	movwf	modbusParseRequest@err& (0+255),b
 10020  0074C0                     l32413:
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;slave.c: 215: };slave.c: 217: return err;
 10024  0074C0  516A               	movf	modbusParseRequest@err& (0+255),w,b
 10025                           
 10026                           ; BSR set to: 0
 10027  0074C2  0012               	return		;funcret
 10028  0074C4                     __end_of_modbusParseRequest:
 10029                           	callstack 0
 10030                           
 10031 ;; *************** function _modbusParseRequest0304 *****************
 10032 ;; Defined at:
 10033 ;;		line 28 in file "lightmodbus/slave/sregs.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  status          2   38[COMRAM] PTR struct modbusSlave
 10036 ;;		 -> g_slave(61), 
 10037 ;;  parser          2   40[COMRAM] PTR struct modbusParser
 10038 ;;		 -> g_slave.request.frame(9), 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;  count           2   63[COMRAM] unsigned int 
 10041 ;;  builder         2   60[COMRAM] PTR struct modbusParser
 10042 ;;		 -> g_slave.response.frame(23), 
 10043 ;;  index           2   57[COMRAM] unsigned int 
 10044 ;;  i               1   62[COMRAM] unsigned char 
 10045 ;;  frameLength     1   59[COMRAM] unsigned char 
 10046 ;;  datatype        1   56[COMRAM] enum E190
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  1    wreg      enum E151
 10049 ;; Registers used:
 10050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 3F/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10057 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10058 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10059 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10060 ;;Total ram usage:       27 bytes
 10061 ;; Hardware stack levels used: 1
 10062 ;; Hardware stack levels required when called: 7
 10063 ;; This function calls:
 10064 ;;		_modbusBuildExceptionErr
 10065 ;;		_modbusCRC
 10066 ;;		_modbusMatchEndian
 10067 ;;		_rcallback
 10068 ;; This function is called by:
 10069 ;;		_modbusParseRequest
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text41
 10074  005134                     __ptext41:
 10075                           	callstack 0
 10076  005134                     _modbusParseRequest0304:
 10077                           	callstack 20
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;sregs.c: 35: uint8_t i = 0;
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;incstack = 0
 10084  005134  0E00               	movlw	0
 10085  005136  6E3F               	movwf	modbusParseRequest0304@i^0,c
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;sregs.c: 38: if ( status == (0) || parser == (0) ) return MODBUS_ERROR_NULLPTR;
 10089  005138  5027               	movf	modbusParseRequest0304@status^0,w,c
 10090  00513A  1028               	iorwf	(modbusParseRequest0304@status+1)^0,w,c
 10091  00513C  B4D8               	btfsc	status,2,c
 10092  00513E  D004               	goto	u21470
 10093                           
 10094                           ; BSR set to: 0
 10095  005140  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10096  005142  102A               	iorwf	(modbusParseRequest0304@parser+1)^0,w,c
 10097  005144  A4D8               	btfss	status,2,c
 10098  005146  D002               	goto	l19019
 10099  005148                     u21470:
 10100                           
 10101                           ; BSR set to: 0
 10102  005148  0E04               	movlw	4
 10103  00514A  0012               	return	
 10104  00514C                     l19019:
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;sregs.c: 39: if ( parser->_base.function != 3 && parser->_base.function != 4 )
 10108  00514C  EE20 F001          	lfsr	2,1
 10109  005150  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10110  005152  26D9               	addwf	fsr2l,f,c
 10111  005154  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10112  005156  22DA               	addwfc	fsr2h,f,c
 10113  005158  0E03               	movlw	3
 10114  00515A  18DE               	xorwf	postinc2,w,c
 10115  00515C  B4D8               	btfsc	status,2,c
 10116  00515E  D014               	goto	l19029
 10117                           
 10118                           ; BSR set to: 0
 10119  005160  EE20 F001          	lfsr	2,1
 10120  005164  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10121  005166  26D9               	addwf	fsr2l,f,c
 10122  005168  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10123  00516A  22DA               	addwfc	fsr2h,f,c
 10124  00516C  0E04               	movlw	4
 10125  00516E  18DE               	xorwf	postinc2,w,c
 10126  005170  B4D8               	btfsc	status,2,c
 10127  005172  D00A               	goto	l19029
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;sregs.c: 40: {;sregs.c: 41: status->parseError = MODBUS_FERROR_BADFUN;
 10131  005174  EE20 F016          	lfsr	2,22
 10132  005178  5027               	movf	modbusParseRequest0304@status^0,w,c
 10133  00517A  26D9               	addwf	fsr2l,f,c
 10134  00517C  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10135  00517E  22DA               	addwfc	fsr2h,f,c
 10136  005180  0E0A               	movlw	10
 10137  005182  6EDF               	movwf	indf2,c
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;sregs.c: 42: return MODBUS_ERROR_PARSE;
 10141  005184  0E05               	movlw	5
 10142  005186  0012               	return	
 10143  005188                     l19029:
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;sregs.c: 43: };sregs.c: 47: if ( parser->_base.address == 0 )
 10147  005188  C029  FFD9         	movff	modbusParseRequest0304@parser,fsr2l
 10148  00518C  C02A  FFDA         	movff	modbusParseRequest0304@parser+1,fsr2h
 10149  005190  50DF               	movf	indf2,w,c
 10150  005192  A4D8               	btfss	status,2,c
 10151  005194  D008               	goto	l19037
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;sregs.c: 48: {;sregs.c: 49: status->parseError = MODBUS_FERROR_BROADCAST;
 10155  005196  EE20 F016          	lfsr	2,22
 10156  00519A  5027               	movf	modbusParseRequest0304@status^0,w,c
 10157  00519C  26D9               	addwf	fsr2l,f,c
 10158  00519E  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10159  0051A0  22DA               	addwfc	fsr2h,f,c
 10160  0051A2  0E12               	movlw	18
 10161  0051A4  D7EE               	goto	L16
 10162  0051A6                     l19037:
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;sregs.c: 51: };sregs.c: 54: if ( status->request.length != frameLength )
 10166  0051A6  EE20 F03C          	lfsr	2,60
 10167  0051AA  5027               	movf	modbusParseRequest0304@status^0,w,c
 10168  0051AC  26D9               	addwf	fsr2l,f,c
 10169  0051AE  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10170  0051B0  22DA               	addwfc	fsr2h,f,c
 10171  0051B2  0E08               	movlw	8
 10172  0051B4  18DE               	xorwf	postinc2,w,c
 10173  0051B6  B4D8               	btfsc	status,2,c
 10174  0051B8  D013               	goto	l19043
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;sregs.c: 55: {;sregs.c: 56: return modbusBuildExceptionErr( status, parser->_base.funct
      +                          ion, MODBUS_EXCEP_ILLEGAL_VALUE, MODBUS_FERROR_LENGTH );
 10178  0051BA  C027  F021         	movff	modbusParseRequest0304@status,modbusBuildExceptionErr@status
 10179  0051BE  C028  F022         	movff	modbusParseRequest0304@status+1,modbusBuildExceptionErr@status+1
 10180  0051C2  EE20 F001          	lfsr	2,1
 10181  0051C6  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10182  0051C8  26D9               	addwf	fsr2l,f,c
 10183  0051CA  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10184  0051CC  22DA               	addwfc	fsr2h,f,c
 10185  0051CE  50DF               	movf	indf2,w,c
 10186  0051D0  6E23               	movwf	modbusBuildExceptionErr@function^0,c
 10187  0051D2  0E03               	movlw	3
 10188  0051D4  6E24               	movwf	modbusBuildExceptionErr@code^0,c
 10189  0051D6  0E02               	movlw	2
 10190  0051D8  6E25               	movwf	modbusBuildExceptionErr@parseError^0,c
 10191  0051DA  EC6C  F069         	call	_modbusBuildExceptionErr	;wreg free
 10192  0051DE  0012               	return	
 10193  0051E0                     l19043:
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;sregs.c: 57: };sregs.c: 60: uint16_t index = modbusMatchEndian( parser->request0304.ind
      +                          ex );
 10197  0051E0  EE20 F002          	lfsr	2,2
 10198  0051E4  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10199  0051E6  26D9               	addwf	fsr2l,f,c
 10200  0051E8  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10201  0051EA  22DA               	addwfc	fsr2h,f,c
 10202  0051EC  CFDE F01B          	movff	postinc2,modbusMatchEndian@data
 10203  0051F0  CFDD F01C          	movff	postdec2,modbusMatchEndian@data+1
 10204  0051F4  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 10205  0051F8  C01B  F03A         	movff	?_modbusMatchEndian,modbusParseRequest0304@index
 10206  0051FC  C01C  F03B         	movff	?_modbusMatchEndian+1,modbusParseRequest0304@index+1
 10207                           
 10208                           ;sregs.c: 61: uint16_t count = modbusMatchEndian( parser->request0304.count );
 10209  005200  EE20 F004          	lfsr	2,4
 10210  005204  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10211  005206  26D9               	addwf	fsr2l,f,c
 10212  005208  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10213  00520A  22DA               	addwfc	fsr2h,f,c
 10214  00520C  CFDE F01B          	movff	postinc2,modbusMatchEndian@data
 10215  005210  CFDD F01C          	movff	postdec2,modbusMatchEndian@data+1
 10216  005214  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 10217  005218  C01B  F040         	movff	?_modbusMatchEndian,modbusParseRequest0304@count
 10218  00521C  C01C  F041         	movff	?_modbusMatchEndian+1,modbusParseRequest0304@count+1
 10219                           
 10220                           ;sregs.c: 65: ModbusDataType datatype = parser->_base.function == 3 ? MODBUS_HOLDING_REG
      +                          ISTER : MODBUS_INPUT_REGISTER;
 10221  005220  EE20 F001          	lfsr	2,1
 10222  005224  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10223  005226  26D9               	addwf	fsr2l,f,c
 10224  005228  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10225  00522A  22DA               	addwfc	fsr2h,f,c
 10226  00522C  0E03               	movlw	3
 10227  00522E  18DE               	xorwf	postinc2,w,c
 10228  005230  B4D8               	btfsc	status,2,c
 10229  005232  D004               	goto	l19049
 10230  005234  0E00               	movlw	0
 10231  005236  6E34               	movwf	(_modbusParseRequest0304$2850+1)^0,c
 10232  005238  0E02               	movlw	2
 10233  00523A  D003               	goto	L17
 10234  00523C                     l19049:
 10235  00523C  0E00               	movlw	0
 10236  00523E  6E34               	movwf	(_modbusParseRequest0304$2850+1)^0,c
 10237  005240  0E01               	movlw	1
 10238  005242                     L17:
 10239  005242  6E33               	movwf	_modbusParseRequest0304$2850^0,c
 10240  005244  C033  F039         	movff	_modbusParseRequest0304$2850,modbusParseRequest0304@datatype
 10241                           
 10242                           ;sregs.c: 69: if ( count == 0 || count > 125 )
 10243  005248  5040               	movf	modbusParseRequest0304@count^0,w,c
 10244  00524A  1041               	iorwf	(modbusParseRequest0304@count+1)^0,w,c
 10245  00524C  B4D8               	btfsc	status,2,c
 10246  00524E  D006               	goto	u21540
 10247  005250  5041               	movf	(modbusParseRequest0304@count+1)^0,w,c
 10248  005252  E104               	bnz	u21540
 10249  005254  0E7E               	movlw	126
 10250  005256  5C40               	subwf	modbusParseRequest0304@count^0,w,c
 10251  005258  A0D8               	btfss	status,0,c
 10252  00525A  D013               	goto	l19061
 10253  00525C                     u21540:
 10254                           
 10255                           ;sregs.c: 70: {;sregs.c: 72: return modbusBuildExceptionErr( status, parser->_base.funct
      +                          ion, MODBUS_EXCEP_ILLEGAL_VALUE, MODBUS_FERROR_COUNT );
 10256  00525C  C027  F021         	movff	modbusParseRequest0304@status,modbusBuildExceptionErr@status
 10257  005260  C028  F022         	movff	modbusParseRequest0304@status+1,modbusBuildExceptionErr@status+1
 10258  005264  EE20 F001          	lfsr	2,1
 10259  005268  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10260  00526A  26D9               	addwf	fsr2l,f,c
 10261  00526C  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10262  00526E  22DA               	addwfc	fsr2h,f,c
 10263  005270  50DF               	movf	indf2,w,c
 10264  005272  6E23               	movwf	modbusBuildExceptionErr@function^0,c
 10265  005274  0E03               	movlw	3
 10266  005276  6E24               	movwf	modbusBuildExceptionErr@code^0,c
 10267  005278  0E03               	movlw	3
 10268  00527A  6E25               	movwf	modbusBuildExceptionErr@parseError^0,c
 10269  00527C  EC6C  F069         	call	_modbusBuildExceptionErr	;wreg free
 10270  005280  0012               	return	
 10271  005282                     l19061:
 10272                           
 10273                           ;sregs.c: 73: };sregs.c: 77: if ( status->registerCallback == (0) )
 10274  005282  EE20 F001          	lfsr	2,1
 10275  005286  5027               	movf	modbusParseRequest0304@status^0,w,c
 10276  005288  26D9               	addwf	fsr2l,f,c
 10277  00528A  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10278  00528C  22DA               	addwfc	fsr2h,f,c
 10279  00528E  50DE               	movf	postinc2,w,c
 10280  005290  10DE               	iorwf	postinc2,w,c
 10281  005292  A4D8               	btfss	status,2,c
 10282  005294  D013               	goto	l19067
 10283                           
 10284                           ;sregs.c: 78: return modbusBuildExceptionErr( status, parser->_base.function, MODBUS_EXC
      +                          EP_ILLEGAL_ADDRESS, MODBUS_FERROR_NOSRC );
 10285  005296  C027  F021         	movff	modbusParseRequest0304@status,modbusBuildExceptionErr@status
 10286  00529A  C028  F022         	movff	modbusParseRequest0304@status+1,modbusBuildExceptionErr@status+1
 10287  00529E  EE20 F001          	lfsr	2,1
 10288  0052A2  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10289  0052A4  26D9               	addwf	fsr2l,f,c
 10290  0052A6  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10291  0052A8  22DA               	addwfc	fsr2h,f,c
 10292  0052AA  50DF               	movf	indf2,w,c
 10293  0052AC  6E23               	movwf	modbusBuildExceptionErr@function^0,c
 10294  0052AE  0E02               	movlw	2
 10295  0052B0  6E24               	movwf	modbusBuildExceptionErr@code^0,c
 10296  0052B2  0E06               	movlw	6
 10297  0052B4  6E25               	movwf	modbusBuildExceptionErr@parseError^0,c
 10298  0052B6  EC6C  F069         	call	_modbusBuildExceptionErr	;wreg free
 10299  0052BA  0012               	return	
 10300  0052BC                     l19067:
 10301                           
 10302                           ;sregs.c: 84: if ( index >= ( parser->_base.function == 3 ? status->registerCount : stat
      +                          us->inputRegisterCount ) || (uint32_t) index + (uint32_t) count > (uint32_t) ( parser->_
      +                          base.function == 3 ? status->registerCount : status->inputRegisterCount ) )
 10303  0052BC  EE20 F001          	lfsr	2,1
 10304  0052C0  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10305  0052C2  26D9               	addwf	fsr2l,f,c
 10306  0052C4  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10307  0052C6  22DA               	addwfc	fsr2h,f,c
 10308  0052C8  0E03               	movlw	3
 10309  0052CA  18DE               	xorwf	postinc2,w,c
 10310  0052CC  B4D8               	btfsc	status,2,c
 10311  0052CE  D003               	goto	l19071
 10312  0052D0  EE20 F007          	lfsr	2,7
 10313  0052D4  D002               	goto	L18
 10314  0052D6                     l19071:
 10315  0052D6  EE20 F005          	lfsr	2,5
 10316  0052DA                     L18:
 10317  0052DA  5027               	movf	modbusParseRequest0304@status^0,w,c
 10318  0052DC  26D9               	addwf	fsr2l,f,c
 10319  0052DE  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10320  0052E0  22DA               	addwfc	fsr2h,f,c
 10321  0052E2  CFDE F035          	movff	postinc2,_modbusParseRequest0304$2860
 10322  0052E6  CFDD F036          	movff	postdec2,_modbusParseRequest0304$2860+1
 10323  0052EA  5035               	movf	_modbusParseRequest0304$2860^0,w,c
 10324  0052EC  5C3A               	subwf	modbusParseRequest0304@index^0,w,c
 10325  0052EE  5036               	movf	(_modbusParseRequest0304$2860+1)^0,w,c
 10326  0052F0  583B               	subwfb	(modbusParseRequest0304@index+1)^0,w,c
 10327  0052F2  B0D8               	btfsc	status,0,c
 10328  0052F4  D031               	goto	u21590
 10329  0052F6  EE20 F001          	lfsr	2,1
 10330  0052FA  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10331  0052FC  26D9               	addwf	fsr2l,f,c
 10332  0052FE  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10333  005300  22DA               	addwfc	fsr2h,f,c
 10334  005302  0E03               	movlw	3
 10335  005304  18DE               	xorwf	postinc2,w,c
 10336  005306  B4D8               	btfsc	status,2,c
 10337  005308  D003               	goto	l19079
 10338  00530A  EE20 F007          	lfsr	2,7
 10339  00530E  D002               	goto	L19
 10340  005310                     l19079:
 10341  005310  EE20 F005          	lfsr	2,5
 10342  005314                     L19:
 10343  005314  5027               	movf	modbusParseRequest0304@status^0,w,c
 10344  005316  26D9               	addwf	fsr2l,f,c
 10345  005318  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10346  00531A  22DA               	addwfc	fsr2h,f,c
 10347  00531C  CFDE F037          	movff	postinc2,_modbusParseRequest0304$2861
 10348  005320  CFDD F038          	movff	postdec2,_modbusParseRequest0304$2861+1
 10349  005324  503A               	movf	modbusParseRequest0304@index^0,w,c
 10350  005326  2440               	addwf	modbusParseRequest0304@count^0,w,c
 10351  005328  6E2B               	movwf	??_modbusParseRequest0304^0,c
 10352  00532A  503B               	movf	(modbusParseRequest0304@index+1)^0,w,c
 10353  00532C  2041               	addwfc	(modbusParseRequest0304@count+1)^0,w,c
 10354  00532E  6E2C               	movwf	(??_modbusParseRequest0304+1)^0,c
 10355  005330  6A2D               	clrf	(??_modbusParseRequest0304+2)^0,c
 10356  005332  B0D8               	btfsc	status,0,c
 10357  005334  2A2D               	incf	(??_modbusParseRequest0304+2)^0,f,c
 10358  005336  6A2E               	clrf	(??_modbusParseRequest0304+3)^0,c
 10359  005338  5037               	movf	_modbusParseRequest0304$2861^0,w,c
 10360  00533A  6E2F               	movwf	(??_modbusParseRequest0304+4)^0,c
 10361  00533C  5038               	movf	(_modbusParseRequest0304$2861+1)^0,w,c
 10362  00533E  6E30               	movwf	(??_modbusParseRequest0304+5)^0,c
 10363  005340  6A31               	clrf	(??_modbusParseRequest0304+6)^0,c
 10364  005342  6A32               	clrf	(??_modbusParseRequest0304+7)^0,c
 10365  005344  502B               	movf	??_modbusParseRequest0304^0,w,c
 10366  005346  5C2F               	subwf	(??_modbusParseRequest0304+4)^0,w,c
 10367  005348  502C               	movf	(??_modbusParseRequest0304+1)^0,w,c
 10368  00534A  5830               	subwfb	(??_modbusParseRequest0304+5)^0,w,c
 10369  00534C  502D               	movf	(??_modbusParseRequest0304+2)^0,w,c
 10370  00534E  5831               	subwfb	(??_modbusParseRequest0304+6)^0,w,c
 10371  005350  502E               	movf	(??_modbusParseRequest0304+3)^0,w,c
 10372  005352  5832               	subwfb	(??_modbusParseRequest0304+7)^0,w,c
 10373  005354  B0D8               	btfsc	status,0,c
 10374  005356  D013               	goto	l19087
 10375  005358                     u21590:
 10376                           
 10377                           ;sregs.c: 87: {;sregs.c: 89: return modbusBuildExceptionErr( status, parser->_base.funct
      +                          ion, MODBUS_EXCEP_ILLEGAL_ADDRESS, MODBUS_FERROR_RANGE );
 10378  005358  C027  F021         	movff	modbusParseRequest0304@status,modbusBuildExceptionErr@status
 10379  00535C  C028  F022         	movff	modbusParseRequest0304@status+1,modbusBuildExceptionErr@status+1
 10380  005360  EE20 F001          	lfsr	2,1
 10381  005364  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10382  005366  26D9               	addwf	fsr2l,f,c
 10383  005368  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10384  00536A  22DA               	addwfc	fsr2h,f,c
 10385  00536C  50DF               	movf	indf2,w,c
 10386  00536E  6E23               	movwf	modbusBuildExceptionErr@function^0,c
 10387  005370  0E02               	movlw	2
 10388  005372  6E24               	movwf	modbusBuildExceptionErr@code^0,c
 10389  005374  0E05               	movlw	5
 10390  005376  6E25               	movwf	modbusBuildExceptionErr@parseError^0,c
 10391  005378  EC6C  F069         	call	_modbusBuildExceptionErr	;wreg free
 10392  00537C  0012               	return	
 10393  00537E                     l19087:
 10394                           
 10395                           ;sregs.c: 90: };sregs.c: 94: for ( i = 0; i < count; i++ )
 10396  00537E  0E00               	movlw	0
 10397  005380  6E3F               	movwf	modbusParseRequest0304@i^0,c
 10398  005382  D041               	goto	l19097
 10399  005384                     l19089:
 10400                           
 10401                           ;sregs.c: 95: if ( status->registerCallback( MODBUS_REGQ_R_CHECK, datatype, index + i, 0
      +                          , status->registerCallbackContext ) == 0 )
 10402  005384  EE20 F001          	lfsr	2,1
 10403  005388  5027               	movf	modbusParseRequest0304@status^0,w,c
 10404  00538A  26D9               	addwf	fsr2l,f,c
 10405  00538C  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10406  00538E  22DA               	addwfc	fsr2h,f,c
 10407  005390  D801               	call	u21608
 10408  005392  D021               	goto	u21609
 10409  005394                     u21608:
 10410  005394  0005               	push	
 10411  005396  6EFA               	movwf	pclath,c
 10412  005398  50DE               	movf	postinc2,w,c
 10413  00539A  6EFD               	movwf	tosl,c
 10414  00539C  50DE               	movf	postinc2,w,c
 10415  00539E  6EFE               	movwf	tosh,c
 10416  0053A0  50F8               	movf	tblptru,w,c
 10417  0053A2  6EFF               	movwf	tosu,c
 10418  0053A4  50FA               	movf	pclath,w,c
 10419  0053A6  C039  F013         	movff	modbusParseRequest0304@datatype,rcallback@datatype
 10420  0053AA  503F               	movf	modbusParseRequest0304@i^0,w,c
 10421  0053AC  243A               	addwf	modbusParseRequest0304@index^0,w,c
 10422  0053AE  6E14               	movwf	rcallback@index^0,c
 10423  0053B0  0E00               	movlw	0
 10424  0053B2  203B               	addwfc	(modbusParseRequest0304@index+1)^0,w,c
 10425  0053B4  6E15               	movwf	(rcallback@index+1)^0,c
 10426  0053B6  0E00               	movlw	0
 10427  0053B8  6E17               	movwf	(rcallback@value+1)^0,c
 10428  0053BA  0E00               	movlw	0
 10429  0053BC  6E16               	movwf	rcallback@value^0,c
 10430  0053BE  EE20 F003          	lfsr	2,3
 10431  0053C2  5027               	movf	modbusParseRequest0304@status^0,w,c
 10432  0053C4  26D9               	addwf	fsr2l,f,c
 10433  0053C6  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10434  0053C8  22DA               	addwfc	fsr2h,f,c
 10435  0053CA  CFDE F018          	movff	postinc2,rcallback@ctx
 10436  0053CE  CFDD F019          	movff	postdec2,rcallback@ctx+1
 10437  0053D2  0E02               	movlw	2
 10438  0053D4  0012               	return		;indir
 10439  0053D6                     u21609:
 10440  0053D6  5013               	movf	?_rcallback^0,w,c
 10441  0053D8  1014               	iorwf	(?_rcallback+1)^0,w,c
 10442  0053DA  A4D8               	btfss	status,2,c
 10443  0053DC  D013               	goto	l19095
 10444                           
 10445                           ;sregs.c: 96: return modbusBuildExceptionErr( status, parser->_base.function, MODBUS_EXC
      +                          EP_SLAVE_FAILURE, MODBUS_FERROR_NOREAD );
 10446  0053DE  C027  F021         	movff	modbusParseRequest0304@status,modbusBuildExceptionErr@status
 10447  0053E2  C028  F022         	movff	modbusParseRequest0304@status+1,modbusBuildExceptionErr@status+1
 10448  0053E6  EE20 F001          	lfsr	2,1
 10449  0053EA  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10450  0053EC  26D9               	addwf	fsr2l,f,c
 10451  0053EE  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10452  0053F0  22DA               	addwfc	fsr2h,f,c
 10453  0053F2  50DF               	movf	indf2,w,c
 10454  0053F4  6E23               	movwf	modbusBuildExceptionErr@function^0,c
 10455  0053F6  0E04               	movlw	4
 10456  0053F8  6E24               	movwf	modbusBuildExceptionErr@code^0,c
 10457  0053FA  0E07               	movlw	7
 10458  0053FC  6E25               	movwf	modbusBuildExceptionErr@parseError^0,c
 10459  0053FE  EC6C  F069         	call	_modbusBuildExceptionErr
 10460  005402  0012               	return	
 10461  005404                     l19095:
 10462  005404  2A3F               	incf	modbusParseRequest0304@i^0,f,c
 10463  005406                     l19097:
 10464  005406  503F               	movf	modbusParseRequest0304@i^0,w,c
 10465  005408  6E2B               	movwf	??_modbusParseRequest0304^0,c
 10466  00540A  6A2C               	clrf	(??_modbusParseRequest0304+1)^0,c
 10467  00540C  5040               	movf	modbusParseRequest0304@count^0,w,c
 10468  00540E  5C2B               	subwf	??_modbusParseRequest0304^0,w,c
 10469  005410  5041               	movf	(modbusParseRequest0304@count+1)^0,w,c
 10470  005412  582C               	subwfb	(??_modbusParseRequest0304+1)^0,w,c
 10471  005414  A0D8               	btfss	status,0,c
 10472  005416  D7B6               	goto	l19089
 10473                           
 10474                           ;sregs.c: 100: frameLength = 5 + ( count << 1 );
 10475  005418  5040               	movf	modbusParseRequest0304@count^0,w,c
 10476  00541A  0D02               	mullw	2
 10477  00541C  50F3               	movf	243,w,c
 10478  00541E  0F05               	addlw	5
 10479  005420  6E3C               	movwf	modbusParseRequest0304@frameLength^0,c
 10480                           
 10481                           ;sregs.c: 106: if ( frameLength > 23 ) return MODBUS_ERROR_ALLOC;
 10482  005422  0E17               	movlw	23
 10483  005424  643C               	cpfsgt	modbusParseRequest0304@frameLength^0,c
 10484  005426  D002               	goto	l19107
 10485  005428  0E02               	movlw	2
 10486  00542A  0012               	return	
 10487  00542C                     l19107:
 10488                           
 10489                           ;sregs.c: 109: ModbusParser *builder = (ModbusParser *) status->response.frame;
 10490  00542C  0E1B               	movlw	27
 10491  00542E  2427               	addwf	modbusParseRequest0304@status^0,w,c
 10492  005430  6E3D               	movwf	modbusParseRequest0304@builder^0,c
 10493  005432  0E00               	movlw	0
 10494  005434  2028               	addwfc	(modbusParseRequest0304@status+1)^0,w,c
 10495  005436  6E3E               	movwf	(modbusParseRequest0304@builder+1)^0,c
 10496                           
 10497                           ;sregs.c: 112: builder->response0304.address = status->address;
 10498  005438  C027  FFD9         	movff	modbusParseRequest0304@status,fsr2l
 10499  00543C  C028  FFDA         	movff	modbusParseRequest0304@status+1,fsr2h
 10500  005440  C03D  FFE1         	movff	modbusParseRequest0304@builder,fsr1l
 10501  005444  C03E  FFE2         	movff	modbusParseRequest0304@builder+1,fsr1h
 10502  005448  CFDF FFE7          	movff	indf2,indf1
 10503                           
 10504                           ;sregs.c: 113: builder->response0304.function = parser->request0304.function;
 10505  00544C  EE20 F001          	lfsr	2,1
 10506  005450  5029               	movf	modbusParseRequest0304@parser^0,w,c
 10507  005452  26D9               	addwf	fsr2l,f,c
 10508  005454  502A               	movf	(modbusParseRequest0304@parser+1)^0,w,c
 10509  005456  22DA               	addwfc	fsr2h,f,c
 10510  005458  EE10 F001          	lfsr	1,1
 10511  00545C  503D               	movf	modbusParseRequest0304@builder^0,w,c
 10512  00545E  26E1               	addwf	fsr1l,f,c
 10513  005460  503E               	movf	(modbusParseRequest0304@builder+1)^0,w,c
 10514  005462  22E2               	addwfc	fsr1h,f,c
 10515  005464  CFDF FFE7          	movff	indf2,indf1
 10516                           
 10517                           ;sregs.c: 114: builder->response0304.length = count << 1;
 10518  005468  EE20 F002          	lfsr	2,2
 10519  00546C  503D               	movf	modbusParseRequest0304@builder^0,w,c
 10520  00546E  26D9               	addwf	fsr2l,f,c
 10521  005470  503E               	movf	(modbusParseRequest0304@builder+1)^0,w,c
 10522  005472  22DA               	addwfc	fsr2h,f,c
 10523  005474  5040               	movf	modbusParseRequest0304@count^0,w,c
 10524  005476  2440               	addwf	modbusParseRequest0304@count^0,w,c
 10525  005478  6EDF               	movwf	indf2,c
 10526                           
 10527                           ;sregs.c: 118: for ( i = 0; i < count; i++ )
 10528  00547A  0E00               	movlw	0
 10529  00547C  6E3F               	movwf	modbusParseRequest0304@i^0,c
 10530  00547E  D044               	goto	l19119
 10531  005480                     l19115:
 10532                           
 10533                           ;sregs.c: 119: builder->response0304.values[i] = modbusMatchEndian( status->registerCall
      +                          back( MODBUS_REGQ_R, datatype, index + i, 0, status->registerCallbackContext ) );
 10534  005480  EE20 F001          	lfsr	2,1
 10535  005484  5027               	movf	modbusParseRequest0304@status^0,w,c
 10536  005486  26D9               	addwf	fsr2l,f,c
 10537  005488  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10538  00548A  22DA               	addwfc	fsr2h,f,c
 10539  00548C  D801               	call	u21648
 10540  00548E  D021               	goto	u21649
 10541  005490                     u21648:
 10542  005490  0005               	push	
 10543  005492  6EFA               	movwf	pclath,c
 10544  005494  50DE               	movf	postinc2,w,c
 10545  005496  6EFD               	movwf	tosl,c
 10546  005498  50DE               	movf	postinc2,w,c
 10547  00549A  6EFE               	movwf	tosh,c
 10548  00549C  50F8               	movf	tblptru,w,c
 10549  00549E  6EFF               	movwf	tosu,c
 10550  0054A0  50FA               	movf	pclath,w,c
 10551  0054A2  C039  F013         	movff	modbusParseRequest0304@datatype,rcallback@datatype
 10552  0054A6  503F               	movf	modbusParseRequest0304@i^0,w,c
 10553  0054A8  243A               	addwf	modbusParseRequest0304@index^0,w,c
 10554  0054AA  6E14               	movwf	rcallback@index^0,c
 10555  0054AC  0E00               	movlw	0
 10556  0054AE  203B               	addwfc	(modbusParseRequest0304@index+1)^0,w,c
 10557  0054B0  6E15               	movwf	(rcallback@index+1)^0,c
 10558  0054B2  0E00               	movlw	0
 10559  0054B4  6E17               	movwf	(rcallback@value+1)^0,c
 10560  0054B6  0E00               	movlw	0
 10561  0054B8  6E16               	movwf	rcallback@value^0,c
 10562  0054BA  EE20 F003          	lfsr	2,3
 10563  0054BE  5027               	movf	modbusParseRequest0304@status^0,w,c
 10564  0054C0  26D9               	addwf	fsr2l,f,c
 10565  0054C2  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10566  0054C4  22DA               	addwfc	fsr2h,f,c
 10567  0054C6  CFDE F018          	movff	postinc2,rcallback@ctx
 10568  0054CA  CFDD F019          	movff	postdec2,rcallback@ctx+1
 10569  0054CE  0E00               	movlw	0
 10570  0054D0  0012               	return		;indir
 10571  0054D2                     u21649:
 10572  0054D2  C013  F01B         	movff	?_rcallback,modbusMatchEndian@data
 10573  0054D6  C014  F01C         	movff	?_rcallback+1,modbusMatchEndian@data+1
 10574  0054DA  ECE7  F06E         	call	_modbusMatchEndian
 10575  0054DE  503F               	movf	modbusParseRequest0304@i^0,w,c
 10576  0054E0  0D02               	mullw	2
 10577  0054E2  C03D  F02B         	movff	modbusParseRequest0304@builder,??_modbusParseRequest0304
 10578  0054E6  C03E  F02C         	movff	modbusParseRequest0304@builder+1,??_modbusParseRequest0304+1
 10579  0054EA  50F3               	movf	243,w,c
 10580  0054EC  262B               	addwf	??_modbusParseRequest0304^0,f,c
 10581  0054EE  50F4               	movf	244,w,c
 10582  0054F0  222C               	addwfc	(??_modbusParseRequest0304+1)^0,f,c
 10583  0054F2  0E03               	movlw	3
 10584  0054F4  242B               	addwf	??_modbusParseRequest0304^0,w,c
 10585  0054F6  6ED9               	movwf	fsr2l,c
 10586  0054F8  0E00               	movlw	0
 10587  0054FA  202C               	addwfc	(??_modbusParseRequest0304+1)^0,w,c
 10588  0054FC  6EDA               	movwf	fsr2h,c
 10589  0054FE  C01B  FFDE         	movff	?_modbusMatchEndian,postinc2
 10590  005502  C01C  FFDD         	movff	?_modbusMatchEndian+1,postdec2
 10591  005506  2A3F               	incf	modbusParseRequest0304@i^0,f,c
 10592  005508                     l19119:
 10593  005508  503F               	movf	modbusParseRequest0304@i^0,w,c
 10594  00550A  6E2B               	movwf	??_modbusParseRequest0304^0,c
 10595  00550C  6A2C               	clrf	(??_modbusParseRequest0304+1)^0,c
 10596  00550E  5040               	movf	modbusParseRequest0304@count^0,w,c
 10597  005510  5C2B               	subwf	??_modbusParseRequest0304^0,w,c
 10598  005512  5041               	movf	(modbusParseRequest0304@count+1)^0,w,c
 10599  005514  582C               	subwfb	(??_modbusParseRequest0304+1)^0,w,c
 10600  005516  A0D8               	btfss	status,0,c
 10601  005518  D7B3               	goto	l19115
 10602                           
 10603                           ;sregs.c: 126: builder->response0304.values[count] = modbusCRC( builder->frame, frameLen
      +                          gth - 2 );
 10604  00551A  C03D  F00F         	movff	modbusParseRequest0304@builder,modbusCRC@data
 10605  00551E  C03E  F010         	movff	modbusParseRequest0304@builder+1,modbusCRC@data+1
 10606  005522  0EFE               	movlw	254
 10607  005524  243C               	addwf	modbusParseRequest0304@frameLength^0,w,c
 10608  005526  6E11               	movwf	modbusCRC@length^0,c
 10609  005528  6A12               	clrf	(modbusCRC@length+1)^0,c
 10610  00552A  0EFF               	movlw	255
 10611  00552C  2212               	addwfc	(modbusCRC@length+1)^0,f,c
 10612  00552E  EC2C  F062         	call	_modbusCRC	;wreg free
 10613  005532  C040  F02B         	movff	modbusParseRequest0304@count,??_modbusParseRequest0304
 10614  005536  C041  F02C         	movff	modbusParseRequest0304@count+1,??_modbusParseRequest0304+1
 10615  00553A  90D8               	bcf	status,0,c
 10616  00553C  362B               	rlcf	??_modbusParseRequest0304^0,f,c
 10617  00553E  362C               	rlcf	(??_modbusParseRequest0304+1)^0,f,c
 10618  005540  C03D  F02D         	movff	modbusParseRequest0304@builder,??_modbusParseRequest0304+2
 10619  005544  C03E  F02E         	movff	modbusParseRequest0304@builder+1,??_modbusParseRequest0304+3
 10620  005548  502B               	movf	??_modbusParseRequest0304^0,w,c
 10621  00554A  262D               	addwf	(??_modbusParseRequest0304+2)^0,f,c
 10622  00554C  502C               	movf	(??_modbusParseRequest0304+1)^0,w,c
 10623  00554E  222E               	addwfc	(??_modbusParseRequest0304+3)^0,f,c
 10624  005550  0E03               	movlw	3
 10625  005552  242D               	addwf	(??_modbusParseRequest0304+2)^0,w,c
 10626  005554  6ED9               	movwf	fsr2l,c
 10627  005556  0E00               	movlw	0
 10628  005558  202E               	addwfc	(??_modbusParseRequest0304+3)^0,w,c
 10629  00555A  6EDA               	movwf	fsr2h,c
 10630  00555C  C00F  FFDE         	movff	?_modbusCRC,postinc2
 10631  005560  C010  FFDD         	movff	?_modbusCRC+1,postdec2
 10632                           
 10633                           ;sregs.c: 129: status->response.length = frameLength;
 10634  005564  EE20 F032          	lfsr	2,50
 10635  005568  5027               	movf	modbusParseRequest0304@status^0,w,c
 10636  00556A  26D9               	addwf	fsr2l,f,c
 10637  00556C  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10638  00556E  22DA               	addwfc	fsr2h,f,c
 10639  005570  C03C  FFDF         	movff	modbusParseRequest0304@frameLength,indf2
 10640                           
 10641                           ;sregs.c: 130: status->parseError = MODBUS_FERROR_OK;
 10642  005574  EE20 F016          	lfsr	2,22
 10643  005578  5027               	movf	modbusParseRequest0304@status^0,w,c
 10644  00557A  26D9               	addwf	fsr2l,f,c
 10645  00557C  5028               	movf	(modbusParseRequest0304@status+1)^0,w,c
 10646  00557E  22DA               	addwfc	fsr2h,f,c
 10647  005580  0E00               	movlw	0
 10648  005582  6EDF               	movwf	indf2,c
 10649                           
 10650                           ;sregs.c: 131: return MODBUS_ERROR_OK;
 10651  005584  0E00               	movlw	0
 10652  005586  0012               	return		;funcret
 10653  005588                     __end_of_modbusParseRequest0304:
 10654                           	callstack 0
 10655                           
 10656 ;; *************** function _rcallback *****************
 10657 ;; Defined at:
 10658 ;;		line 52 in file "app_modbus.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  query           1    wreg     enum E412
 10661 ;;  datatype        1   18[COMRAM] enum E203
 10662 ;;  index           2   19[COMRAM] unsigned int 
 10663 ;;  value           2   21[COMRAM] unsigned int 
 10664 ;;  ctx             2   23[COMRAM] PTR void 
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;  query           1   25[COMRAM] enum E412
 10667 ;; Return value:  Size  Location     Type
 10668 ;;                  2   18[COMRAM] unsigned int 
 10669 ;; Registers used:
 10670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10671 ;; Tracked objects:
 10672 ;;		On entry : 0/0
 10673 ;;		On exit  : 0/0
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10676 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10680 ;;Total ram usage:        8 bytes
 10681 ;; Hardware stack levels used: 1
 10682 ;; Hardware stack levels required when called: 5
 10683 ;; This function calls:
 10684 ;;		_modbusSwapEndian
 10685 ;; This function is called by:
 10686 ;;		_modbus_init
 10687 ;;		_modbusParseRequest0304
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text42
 10692  00C36E                     __ptext42:
 10693                           	callstack 0
 10694  00C36E                     _rcallback:
 10695                           	callstack 21
 10696                           
 10697                           ;incstack = 0
 10698                           ;rcallback@query stored from wreg
 10699  00C36E  6E1A               	movwf	rcallback@query^0,c
 10700                           
 10701                           ;app_modbus.c: 54: if(query == MODBUS_REGQ_R_CHECK)
 10702  00C370  0E02               	movlw	2
 10703  00C372  181A               	xorwf	rcallback@query^0,w,c
 10704  00C374  A4D8               	btfss	status,2,c
 10705  00C376  D005               	goto	l18377
 10706                           
 10707                           ;app_modbus.c: 55: return 1;
 10708  00C378  0E00               	movlw	0
 10709  00C37A  6E14               	movwf	(?_rcallback+1)^0,c
 10710  00C37C  0E01               	movlw	1
 10711  00C37E  6E13               	movwf	?_rcallback^0,c
 10712  00C380  0012               	return	
 10713  00C382                     l18377:
 10714                           
 10715                           ;app_modbus.c: 56: if(query == MODBUS_REGQ_R)
 10716  00C382  501A               	movf	rcallback@query^0,w,c
 10717  00C384  A4D8               	btfss	status,2,c
 10718  00C386  D029               	goto	l18393
 10719                           
 10720                           ;app_modbus.c: 57: {;app_modbus.c: 58: if(datatype == MODBUS_HOLDING_REGISTER)
 10721  00C388  0413               	decf	rcallback@datatype^0,w,c
 10722  00C38A  A4D8               	btfss	status,2,c
 10723  00C38C  D026               	goto	l18393
 10724                           
 10725                           ;app_modbus.c: 59: {;app_modbus.c: 60: if (g_swap) {
 10726  00C38E  0100               	movlb	0	; () banked
 10727  00C390  51FC               	movf	_g_swap& (0+255),w,b
 10728  00C392  B4D8               	btfsc	status,2,c
 10729  00C394  D014               	goto	l18389
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;app_modbus.c: 61: return modbusSwapEndian(g_pRegs[index]);
 10733  00C396  90D8               	bcf	status,0,c
 10734  00C398  3414               	rlcf	rcallback@index^0,w,c
 10735  00C39A  6ED9               	movwf	fsr2l,c
 10736  00C39C  3415               	rlcf	(rcallback@index+1)^0,w,c
 10737  00C39E  6EDA               	movwf	fsr2h,c
 10738  00C3A0  51E6               	movf	_g_pRegs& (0+255),w,b
 10739  00C3A2  26D9               	addwf	fsr2l,f,c
 10740  00C3A4  51E7               	movf	(_g_pRegs+1)& (0+255),w,b
 10741  00C3A6  22DA               	addwfc	fsr2h,f,c
 10742  00C3A8  CFDE F00F          	movff	postinc2,modbusSwapEndian@data
 10743  00C3AC  CFDD F010          	movff	postdec2,modbusSwapEndian@data+1
 10744  00C3B0  EC32  F06F         	call	_modbusSwapEndian	;wreg free
 10745  00C3B4  C00F  F013         	movff	?_modbusSwapEndian,?_rcallback
 10746  00C3B8  C010  F014         	movff	?_modbusSwapEndian+1,?_rcallback+1
 10747  00C3BC  0012               	return	
 10748  00C3BE                     l18389:
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;app_modbus.c: 63: return g_pRegs[index];
 10752  00C3BE  90D8               	bcf	status,0,c
 10753  00C3C0  3414               	rlcf	rcallback@index^0,w,c
 10754  00C3C2  6ED9               	movwf	fsr2l,c
 10755  00C3C4  3415               	rlcf	(rcallback@index+1)^0,w,c
 10756  00C3C6  6EDA               	movwf	fsr2h,c
 10757  00C3C8  51E6               	movf	_g_pRegs& (0+255),w,b
 10758  00C3CA  26D9               	addwf	fsr2l,f,c
 10759  00C3CC  51E7               	movf	(_g_pRegs+1)& (0+255),w,b
 10760  00C3CE  22DA               	addwfc	fsr2h,f,c
 10761  00C3D0  CFDE F013          	movff	postinc2,?_rcallback
 10762  00C3D4  CFDD F014          	movff	postdec2,?_rcallback+1
 10763  00C3D8  0012               	return	
 10764  00C3DA                     l18393:
 10765                           
 10766                           ;app_modbus.c: 64: };app_modbus.c: 65: };app_modbus.c: 66: };app_modbus.c: 67: return 0;
 10767  00C3DA  0E00               	movlw	0
 10768  00C3DC  6E14               	movwf	(?_rcallback+1)^0,c
 10769  00C3DE  0E00               	movlw	0
 10770  00C3E0  6E13               	movwf	?_rcallback^0,c
 10771  00C3E2  0012               	return		;funcret
 10772  00C3E4                     __end_of_rcallback:
 10773                           	callstack 0
 10774                           
 10775 ;; *************** function _modbusBuildExceptionErr *****************
 10776 ;; Defined at:
 10777 ;;		line 306 in file "lightmodbus/slave.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  status          2   32[COMRAM] PTR struct modbusSlave
 10780 ;;		 -> g_slave(61), 
 10781 ;;  function        1   34[COMRAM] unsigned char 
 10782 ;;  code            1   35[COMRAM] enum E266
 10783 ;;  parseError      1   36[COMRAM] enum E245
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  err             1   37[COMRAM] enum E235
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      enum E151
 10788 ;; Registers used:
 10789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10795 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10799 ;;Total ram usage:        6 bytes
 10800 ;; Hardware stack levels used: 1
 10801 ;; Hardware stack levels required when called: 6
 10802 ;; This function calls:
 10803 ;;		_modbusBuildException
 10804 ;; This function is called by:
 10805 ;;		_modbusParseRequest0304
 10806 ;;		_modbusParseRequest
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text43
 10811  00D2D8                     __ptext43:
 10812                           	callstack 0
 10813  00D2D8                     _modbusBuildExceptionErr:
 10814                           	callstack 20
 10815                           
 10816                           ;slave.c: 308: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 10817                           
 10818                           ;incstack = 0
 10819  00D2D8  5021               	movf	modbusBuildExceptionErr@status^0,w,c
 10820  00D2DA  1022               	iorwf	(modbusBuildExceptionErr@status+1)^0,w,c
 10821  00D2DC  A4D8               	btfss	status,2,c
 10822  00D2DE  D002               	goto	l18115
 10823  00D2E0  0E04               	movlw	4
 10824  00D2E2  0012               	return	
 10825  00D2E4                     l18115:
 10826                           
 10827                           ;slave.c: 309: status->parseError = parseError;
 10828  00D2E4  EE20 F016          	lfsr	2,22
 10829  00D2E8  5021               	movf	modbusBuildExceptionErr@status^0,w,c
 10830  00D2EA  26D9               	addwf	fsr2l,f,c
 10831  00D2EC  5022               	movf	(modbusBuildExceptionErr@status+1)^0,w,c
 10832  00D2EE  22DA               	addwfc	fsr2h,f,c
 10833  00D2F0  C025  FFDF         	movff	modbusBuildExceptionErr@parseError,indf2
 10834                           
 10835                           ;slave.c: 310: ModbusError err = modbusBuildException( status, function, code );
 10836  00D2F4  C021  F019         	movff	modbusBuildExceptionErr@status,modbusBuildException@status
 10837  00D2F8  C022  F01A         	movff	modbusBuildExceptionErr@status+1,modbusBuildException@status+1
 10838  00D2FC  C023  F01B         	movff	modbusBuildExceptionErr@function,modbusBuildException@function
 10839  00D300  C024  F01C         	movff	modbusBuildExceptionErr@code,modbusBuildException@code
 10840  00D304  ECC9  F055         	call	_modbusBuildException	;wreg free
 10841  00D308  6E26               	movwf	modbusBuildExceptionErr@err^0,c
 10842                           
 10843                           ;slave.c: 311: if ( err == MODBUS_ERROR_OK ) return MODBUS_ERROR_PARSE;
 10844  00D30A  5026               	movf	modbusBuildExceptionErr@err^0,w,c
 10845  00D30C  A4D8               	btfss	status,2,c
 10846  00D30E  D002               	goto	l18127
 10847  00D310  0E05               	movlw	5
 10848  00D312  0012               	return	
 10849  00D314                     l18127:
 10850                           
 10851                           ;slave.c: 312: else return err;
 10852  00D314  5026               	movf	modbusBuildExceptionErr@err^0,w,c
 10853  00D316  0012               	return		;funcret
 10854  00D318                     __end_of_modbusBuildExceptionErr:
 10855                           	callstack 0
 10856                           
 10857 ;; *************** function _modbusBuildException *****************
 10858 ;; Defined at:
 10859 ;;		line 30 in file "lightmodbus/slave.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  status          2   24[COMRAM] PTR struct modbusSlave
 10862 ;;		 -> g_slave(61), 
 10863 ;;  function        1   26[COMRAM] unsigned char 
 10864 ;;  code            1   27[COMRAM] enum E266
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  exception       2   30[COMRAM] PTR struct modbusParser
 10867 ;;		 -> g_slave.response.frame(23), 
 10868 ;;  requestParse    2   28[COMRAM] PTR struct modbusParser
 10869 ;;		 -> g_slave.request.frame(9), 
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1    wreg      enum E235
 10872 ;; Registers used:
 10873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10880 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10882 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;Total ram usage:        8 bytes
 10884 ;; Hardware stack levels used: 1
 10885 ;; Hardware stack levels required when called: 5
 10886 ;; This function calls:
 10887 ;;		_modbusCRC
 10888 ;; This function is called by:
 10889 ;;		_modbusBuildExceptionErr
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text44
 10894  00AB92                     __ptext44:
 10895                           	callstack 0
 10896  00AB92                     _modbusBuildException:
 10897                           	callstack 20
 10898                           
 10899                           ;slave.c: 36: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 10900                           
 10901                           ;incstack = 0
 10902  00AB92  5019               	movf	modbusBuildException@status^0,w,c
 10903  00AB94  101A               	iorwf	(modbusBuildException@status+1)^0,w,c
 10904  00AB96  A4D8               	btfss	status,2,c
 10905  00AB98  D002               	goto	l17557
 10906  00AB9A  0E04               	movlw	4
 10907  00AB9C  0012               	return	
 10908  00AB9E                     l17557:
 10909                           
 10910                           ;slave.c: 39: status->lastException = code;
 10911  00AB9E  EE20 F015          	lfsr	2,21
 10912  00ABA2  5019               	movf	modbusBuildException@status^0,w,c
 10913  00ABA4  26D9               	addwf	fsr2l,f,c
 10914  00ABA6  501A               	movf	(modbusBuildException@status+1)^0,w,c
 10915  00ABA8  22DA               	addwfc	fsr2h,f,c
 10916  00ABAA  C01C  FFDF         	movff	modbusBuildException@code,indf2
 10917                           
 10918                           ;slave.c: 42: ModbusParser *requestParser = (ModbusParser*) status->request.frame;
 10919  00ABAE  0E33               	movlw	51
 10920  00ABB0  2419               	addwf	modbusBuildException@status^0,w,c
 10921  00ABB2  6E1D               	movwf	modbusBuildException@requestParser^0,c
 10922  00ABB4  0E00               	movlw	0
 10923  00ABB6  201A               	addwfc	(modbusBuildException@status+1)^0,w,c
 10924  00ABB8  6E1E               	movwf	(modbusBuildException@requestParser+1)^0,c
 10925                           
 10926                           ;slave.c: 43: if ( requestParser != (0) && requestParser->_base.address == 0 )
 10927  00ABBA  501D               	movf	modbusBuildException@requestParser^0,w,c
 10928  00ABBC  101E               	iorwf	(modbusBuildException@requestParser+1)^0,w,c
 10929  00ABBE  B4D8               	btfsc	status,2,c
 10930  00ABC0  D011               	goto	l17575
 10931  00ABC2  C01D  FFD9         	movff	modbusBuildException@requestParser,fsr2l
 10932  00ABC6  C01E  FFDA         	movff	modbusBuildException@requestParser+1,fsr2h
 10933  00ABCA  50DF               	movf	indf2,w,c
 10934  00ABCC  A4D8               	btfss	status,2,c
 10935  00ABCE  D00A               	goto	l17575
 10936                           
 10937                           ;slave.c: 44: {;slave.c: 45: status->response.length = 0;
 10938  00ABD0  EE20 F032          	lfsr	2,50
 10939  00ABD4  5019               	movf	modbusBuildException@status^0,w,c
 10940  00ABD6  26D9               	addwf	fsr2l,f,c
 10941  00ABD8  501A               	movf	(modbusBuildException@status+1)^0,w,c
 10942  00ABDA  22DA               	addwfc	fsr2h,f,c
 10943  00ABDC  0E00               	movlw	0
 10944  00ABDE  6EDF               	movwf	indf2,c
 10945                           
 10946                           ;slave.c: 46: return MODBUS_OK;
 10947  00ABE0  0E00               	movlw	0
 10948  00ABE2  0012               	return	
 10949  00ABE4                     l17575:
 10950                           
 10951                           ;slave.c: 57: ModbusParser *exception = (ModbusParser *) status->response.frame;
 10952  00ABE4  0E1B               	movlw	27
 10953  00ABE6  2419               	addwf	modbusBuildException@status^0,w,c
 10954  00ABE8  6E1F               	movwf	modbusBuildException@exception^0,c
 10955  00ABEA  0E00               	movlw	0
 10956  00ABEC  201A               	addwfc	(modbusBuildException@status+1)^0,w,c
 10957  00ABEE  6E20               	movwf	(modbusBuildException@exception+1)^0,c
 10958                           
 10959                           ;slave.c: 60: exception->exception.address = status->address;
 10960  00ABF0  C019  FFD9         	movff	modbusBuildException@status,fsr2l
 10961  00ABF4  C01A  FFDA         	movff	modbusBuildException@status+1,fsr2h
 10962  00ABF8  C01F  FFE1         	movff	modbusBuildException@exception,fsr1l
 10963  00ABFC  C020  FFE2         	movff	modbusBuildException@exception+1,fsr1h
 10964  00AC00  CFDF FFE7          	movff	indf2,indf1
 10965                           
 10966                           ;slave.c: 61: exception->exception.function = ( 1 << 7 ) | function;
 10967  00AC04  EE20 F001          	lfsr	2,1
 10968  00AC08  501F               	movf	modbusBuildException@exception^0,w,c
 10969  00AC0A  26D9               	addwf	fsr2l,f,c
 10970  00AC0C  5020               	movf	(modbusBuildException@exception+1)^0,w,c
 10971  00AC0E  22DA               	addwfc	fsr2h,f,c
 10972  00AC10  501B               	movf	modbusBuildException@function^0,w,c
 10973  00AC12  0980               	iorlw	128
 10974  00AC14  6EDF               	movwf	indf2,c
 10975                           
 10976                           ;slave.c: 62: exception->exception.code = code;
 10977  00AC16  EE20 F002          	lfsr	2,2
 10978  00AC1A  501F               	movf	modbusBuildException@exception^0,w,c
 10979  00AC1C  26D9               	addwf	fsr2l,f,c
 10980  00AC1E  5020               	movf	(modbusBuildException@exception+1)^0,w,c
 10981  00AC20  22DA               	addwfc	fsr2h,f,c
 10982  00AC22  C01C  FFDF         	movff	modbusBuildException@code,indf2
 10983                           
 10984                           ;slave.c: 63: exception->exception.crc = modbusCRC( exception->frame, 3 );
 10985  00AC26  C01F  F00F         	movff	modbusBuildException@exception,modbusCRC@data
 10986  00AC2A  C020  F010         	movff	modbusBuildException@exception+1,modbusCRC@data+1
 10987  00AC2E  0E00               	movlw	0
 10988  00AC30  6E12               	movwf	(modbusCRC@length+1)^0,c
 10989  00AC32  0E03               	movlw	3
 10990  00AC34  6E11               	movwf	modbusCRC@length^0,c
 10991  00AC36  EC2C  F062         	call	_modbusCRC	;wreg free
 10992  00AC3A  EE20 F003          	lfsr	2,3
 10993  00AC3E  501F               	movf	modbusBuildException@exception^0,w,c
 10994  00AC40  26D9               	addwf	fsr2l,f,c
 10995  00AC42  5020               	movf	(modbusBuildException@exception+1)^0,w,c
 10996  00AC44  22DA               	addwfc	fsr2h,f,c
 10997  00AC46  C00F  FFDE         	movff	?_modbusCRC,postinc2
 10998  00AC4A  C010  FFDD         	movff	?_modbusCRC+1,postdec2
 10999                           
 11000                           ;slave.c: 66: status->response.length = 5;
 11001  00AC4E  EE20 F032          	lfsr	2,50
 11002  00AC52  5019               	movf	modbusBuildException@status^0,w,c
 11003  00AC54  26D9               	addwf	fsr2l,f,c
 11004  00AC56  501A               	movf	(modbusBuildException@status+1)^0,w,c
 11005  00AC58  22DA               	addwfc	fsr2h,f,c
 11006  00AC5A  0E05               	movlw	5
 11007  00AC5C  6EDF               	movwf	indf2,c
 11008                           
 11009                           ;slave.c: 70: return MODBUS_ERROR_EXCEPTION;
 11010  00AC5E  0E01               	movlw	1
 11011  00AC60  0012               	return		;funcret
 11012  00AC62                     __end_of_modbusBuildException:
 11013                           	callstack 0
 11014                           
 11015 ;; *************** function _modbus_master_task *****************
 11016 ;; Defined at:
 11017 ;;		line 278 in file "app_modbus.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;		None
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;  byte            1   57[COMRAM] unsigned char 
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11026 ;; Tracked objects:
 11027 ;;		On entry : 3F/1
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11035 ;;Total ram usage:        1 bytes
 11036 ;; Hardware stack levels used: 1
 11037 ;; Hardware stack levels required when called: 11
 11038 ;; This function calls:
 11039 ;;		_buffer_de_queue_bool
 11040 ;;		_modbusMasterEnd
 11041 ;;		_modbusParseResponse
 11042 ;;		_modbus_init
 11043 ;;		_modbus_master_response_parse
 11044 ;; This function is called by:
 11045 ;;		_modbus_task
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text45
 11050  0097D6                     __ptext45:
 11051                           	callstack 0
 11052  0097D6                     _modbus_master_task:
 11053                           	callstack 18
 11054                           
 11055                           ; BSR set to: 1
 11056                           ;app_modbus.c: 280: uint8_t byte;;app_modbus.c: 282: switch (g_modbus.seq) {
 11057                           
 11058                           ;incstack = 0
 11059  0097D6  D087               	goto	l33577
 11060  0097D8                     l33513:
 11061                           
 11062                           ; BSR set to: 1
 11063                           ;app_modbus.c: 284: modbus_init();
 11064  0097D8  EC03  F05B         	call	_modbus_init	;wreg free
 11065  0097DC                     l33515:
 11066                           
 11067                           ;app_modbus.c: 285: g_timeout_count = 0;
 11068  0097DC  0E00               	movlw	0
 11069  0097DE  0100               	movlb	0	; () banked
 11070  0097E0  6FFB               	movwf	_g_timeout_count& (0+255),b	;volatile
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;app_modbus.c: 286: g_modbus.seq = MODBUS_READY;
 11074  0097E2  0E01               	movlw	1
 11075  0097E4  0101               	movlb	1	; () banked
 11076  0097E6  6F24               	movwf	_g_modbus& (0+255),b
 11077                           
 11078                           ;app_modbus.c: 287: break;
 11079  0097E8  0012               	return	
 11080  0097EA                     l33519:
 11081                           
 11082                           ; BSR set to: 1
 11083                           ;app_modbus.c: 289: if (buffer_de_queue_bool(&g_modbus_queue, &byte)) {
 11084  0097EA  0E60               	movlw	low _g_modbus_queue
 11085  0097EC  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 11086  0097EE  0E04               	movlw	high _g_modbus_queue
 11087  0097F0  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 11088  0097F2  0E3A               	movlw	low modbus_master_task@byte
 11089  0097F4  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 11090  0097F6  EC02  F061         	call	_buffer_de_queue_bool	;wreg free
 11091  0097FA  0900               	iorlw	0
 11092  0097FC  B4D8               	btfsc	status,2,c
 11093  0097FE  0012               	return	
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;app_modbus.c: 290: g_timeout_count = 0;
 11097  009800  0E00               	movlw	0
 11098  009802  0100               	movlb	0	; () banked
 11099  009804  6FFB               	movwf	_g_timeout_count& (0+255),b	;volatile
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;app_modbus.c: 291: if (byte == g_nvm.flash.ctrl_slave_id && g_master.predictedResponseL
      +                          ength > 0) {
 11103  009806  503A               	movf	modbus_master_task@byte^0,w,c
 11104  009808  0101               	movlb	1	; () banked
 11105  00980A  1956               	xorwf	(_g_nvm+4)& (0+255),w,b
 11106  00980C  A4D8               	btfss	status,2,c
 11107  00980E  0012               	return	
 11108                           
 11109                           ; BSR set to: 1
 11110  009810  0102               	movlb	2	; () banked
 11111  009812  51B5               	movf	_g_master& (0+255),w,b
 11112  009814  B4D8               	btfsc	status,2,c
 11113  009816  0012               	return	
 11114                           
 11115                           ; BSR set to: 2
 11116                           ;app_modbus.c: 292: g_master.response.length = 0;
 11117  009818  0E00               	movlw	0
 11118  00981A  6FC9               	movwf	(_g_master+20)& (0+255),b
 11119                           
 11120                           ; BSR set to: 2
 11121                           ;app_modbus.c: 293: g_master.response.frame[g_master.response.length++] = byte;
 11122  00981C  0EC0               	movlw	low (_g_master+11)
 11123  00981E  25C9               	addwf	(_g_master+20)& (0+255),w,b
 11124  009820  6ED9               	movwf	fsr2l,c
 11125  009822  6ADA               	clrf	fsr2h,c
 11126  009824  0E02               	movlw	high (_g_master+11)
 11127  009826  22DA               	addwfc	fsr2h,f,c
 11128  009828  C03A  FFDF         	movff	modbus_master_task@byte,indf2
 11129                           
 11130                           ; BSR set to: 2
 11131  00982C  2BC9               	incf	(_g_master+20)& (0+255),f,b
 11132                           
 11133                           ; BSR set to: 2
 11134                           ;app_modbus.c: 294: g_modbus.seq = MODBUS_START;
 11135  00982E  0E02               	movlw	2
 11136  009830  0101               	movlb	1	; () banked
 11137  009832  6F24               	movwf	_g_modbus& (0+255),b
 11138  009834  0012               	return	
 11139  009836                     l33535:
 11140                           
 11141                           ; BSR set to: 1
 11142                           ;app_modbus.c: 299: if (buffer_de_queue_bool(&g_modbus_queue, &byte)) {
 11143  009836  0E60               	movlw	low _g_modbus_queue
 11144  009838  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 11145  00983A  0E04               	movlw	high _g_modbus_queue
 11146  00983C  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 11147  00983E  0E3A               	movlw	low modbus_master_task@byte
 11148  009840  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 11149  009842  EC02  F061         	call	_buffer_de_queue_bool	;wreg free
 11150  009846  0900               	iorlw	0
 11151  009848  B4D8               	btfsc	status,2,c
 11152  00984A  D03A               	goto	l33557
 11153                           
 11154                           ; BSR set to: 1
 11155                           ;app_modbus.c: 300: g_timeout_count = 0;
 11156  00984C  0E00               	movlw	0
 11157  00984E  0100               	movlb	0	; () banked
 11158  009850  6FFB               	movwf	_g_timeout_count& (0+255),b	;volatile
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;app_modbus.c: 301: g_master.response.frame[g_master.response.length++] = byte;
 11162  009852  0EC0               	movlw	low (_g_master+11)
 11163  009854  0102               	movlb	2	; () banked
 11164  009856  25C9               	addwf	(_g_master+20)& (0+255),w,b
 11165  009858  6ED9               	movwf	fsr2l,c
 11166  00985A  6ADA               	clrf	fsr2h,c
 11167  00985C  0E02               	movlw	high (_g_master+11)
 11168  00985E  22DA               	addwfc	fsr2h,f,c
 11169  009860  C03A  FFDF         	movff	modbus_master_task@byte,indf2
 11170                           
 11171                           ; BSR set to: 2
 11172  009864  2BC9               	incf	(_g_master+20)& (0+255),f,b
 11173                           
 11174                           ; BSR set to: 2
 11175                           ;app_modbus.c: 302: if (g_master.response.length >= g_master.predictedResponseLength) {
 11176  009866  51B5               	movf	_g_master& (0+255),w,b
 11177  009868  5DC9               	subwf	(_g_master+20)& (0+255),w,b
 11178  00986A  A0D8               	btfss	status,0,c
 11179  00986C  0012               	return	
 11180  00986E  D00C               	goto	l33555
 11181  009870                     l33547:
 11182                           
 11183                           ;app_modbus.c: 306: g_modbus.seq = MODBUS_OUTPUT;
 11184  009870  0E04               	movlw	4
 11185  009872  0101               	movlb	1	; () banked
 11186  009874  6F24               	movwf	_g_modbus& (0+255),b
 11187                           
 11188                           ;app_modbus.c: 307: break;
 11189  009876  0012               	return	
 11190  009878                     l33549:
 11191                           
 11192                           ;app_modbus.c: 310: case MODBUS_ERROR_PARSE:;app_modbus.c: 311: case MODBUS_ERROR_BUILD:
      +                          ;app_modbus.c: 312: g_modbus.seq = MODBUS_EXCEPTION;
 11193  009878  0E06               	movlw	6
 11194  00987A  0101               	movlb	1	; () banked
 11195  00987C  6F24               	movwf	_g_modbus& (0+255),b
 11196                           
 11197                           ;app_modbus.c: 313: break;
 11198  00987E  0012               	return	
 11199  009880                     l33551:
 11200                           
 11201                           ;app_modbus.c: 316: case MODBUS_ERROR_OTHER:;app_modbus.c: 317: case MODBUS_ERROR_NULLPT
      +                          R:;app_modbus.c: 318: g_modbus.seq = MODBUS_END;
 11202  009880  0E07               	movlw	7
 11203  009882  0101               	movlb	1	; () banked
 11204  009884  6F24               	movwf	_g_modbus& (0+255),b
 11205                           
 11206                           ;app_modbus.c: 319: break;
 11207  009886  0012               	return	
 11208  009888                     l33555:
 11209                           
 11210                           ; BSR set to: 2
 11211  009888  0EB5               	movlw	low _g_master
 11212  00988A  6E2B               	movwf	modbusParseResponse@status^0,c
 11213  00988C  0E02               	movlw	high _g_master
 11214  00988E  6E2C               	movwf	(modbusParseResponse@status+1)^0,c
 11215  009890  EC2E  F036         	call	_modbusParseResponse	;wreg free
 11216                           
 11217                           ; Switch size 1, requested type "simple"
 11218                           ; Number of cases is 7, Range of values is 0 to 6
 11219                           ; switch strategies available:
 11220                           ; Name         Instructions Cycles
 11221                           ; simple_byte           22    12 (average)
 11222                           ;	Chosen strategy is simple_byte
 11223  009894  0A00               	xorlw	0	; case 0
 11224  009896  B4D8               	btfsc	status,2,c
 11225  009898  D7EB               	goto	l33547
 11226  00989A  0A01               	xorlw	1	; case 1
 11227  00989C  B4D8               	btfsc	status,2,c
 11228  00989E  D7EC               	goto	l33549
 11229  0098A0  0A03               	xorlw	3	; case 2
 11230  0098A2  B4D8               	btfsc	status,2,c
 11231  0098A4  D7ED               	goto	l33551
 11232  0098A6  0A01               	xorlw	1	; case 3
 11233  0098A8  B4D8               	btfsc	status,2,c
 11234  0098AA  D7EA               	goto	l33551
 11235  0098AC  0A07               	xorlw	7	; case 4
 11236  0098AE  B4D8               	btfsc	status,2,c
 11237  0098B0  D7E7               	goto	l33551
 11238  0098B2  0A01               	xorlw	1	; case 5
 11239  0098B4  B4D8               	btfsc	status,2,c
 11240  0098B6  D7E0               	goto	l33549
 11241  0098B8  0A03               	xorlw	3	; case 6
 11242  0098BA  A4D8               	btfss	status,2,c
 11243  0098BC  0012               	return	
 11244  0098BE  D7DC               	goto	l33549
 11245  0098C0                     l33557:
 11246                           
 11247                           ; BSR set to: 1
 11248                           ;app_modbus.c: 323: if (g_timeout_count > g_modbus.timeout) {
 11249  0098C0  0100               	movlb	0	; () banked
 11250  0098C2  51FB               	movf	_g_timeout_count& (0+255),w,b	;volatile
 11251  0098C4  0101               	movlb	1	; () banked
 11252  0098C6  5D25               	subwf	(_g_modbus+1)& (0+255),w,b
 11253  0098C8  B0D8               	btfsc	status,0,c
 11254  0098CA  0012               	return	
 11255                           
 11256                           ; BSR set to: 1
 11257                           ;app_modbus.c: 324: g_modbus.seq = MODBUS_TIMEOUT;
 11258  0098CC  0E03               	movlw	3
 11259  0098CE  6F24               	movwf	_g_modbus& (0+255),b
 11260  0098D0  0012               	return	
 11261  0098D2                     l33563:
 11262                           
 11263                           ; BSR set to: 1
 11264                           ;app_modbus.c: 332: {;app_modbus.c: 343: modbus_master_response_parse();
 11265  0098D2  EC67  F057         	call	_modbus_master_response_parse	;wreg free
 11266  0098D6  D7D4               	goto	l33551
 11267  0098D8                     l33569:
 11268                           
 11269                           ; BSR set to: 1
 11270                           ;app_modbus.c: 361: modbusMasterEnd(&g_master);
 11271  0098D8  0EB5               	movlw	low _g_master
 11272  0098DA  6E1D               	movwf	modbusMasterEnd@status^0,c
 11273  0098DC  0E02               	movlw	high _g_master
 11274  0098DE  6E1E               	movwf	(modbusMasterEnd@status+1)^0,c
 11275  0098E0  EC3E  F066         	call	_modbusMasterEnd	;wreg free
 11276  0098E4  D77B               	goto	l33515
 11277  0098E6                     l33577:
 11278                           
 11279                           ; BSR set to: 1
 11280  0098E6  5124               	movf	_g_modbus& (0+255),w,b
 11281                           
 11282                           ; Switch size 1, requested type "simple"
 11283                           ; Number of cases is 7, Range of values is 0 to 7
 11284                           ; switch strategies available:
 11285                           ; Name         Instructions Cycles
 11286                           ; simple_byte           22    12 (average)
 11287                           ;	Chosen strategy is simple_byte
 11288  0098E8  0A00               	xorlw	0	; case 0
 11289  0098EA  B4D8               	btfsc	status,2,c
 11290  0098EC  D775               	goto	l33513
 11291  0098EE  0A01               	xorlw	1	; case 1
 11292  0098F0  B4D8               	btfsc	status,2,c
 11293  0098F2  D77B               	goto	l33519
 11294  0098F4  0A03               	xorlw	3	; case 2
 11295  0098F6  B4D8               	btfsc	status,2,c
 11296  0098F8  D79E               	goto	l33535
 11297  0098FA  0A01               	xorlw	1	; case 3
 11298  0098FC  B4D8               	btfsc	status,2,c
 11299  0098FE  D7C0               	goto	l33551
 11300  009900  0A07               	xorlw	7	; case 4
 11301  009902  B4D8               	btfsc	status,2,c
 11302  009904  D7E6               	goto	l33563
 11303  009906  0A02               	xorlw	2	; case 6
 11304  009908  B4D8               	btfsc	status,2,c
 11305  00990A  D7BA               	goto	l33551
 11306  00990C  0A01               	xorlw	1	; case 7
 11307  00990E  A4D8               	btfss	status,2,c
 11308  009910  0012               	return	
 11309  009912  D7E2               	goto	l33569
 11310  009914                     __end_of_modbus_master_task:
 11311                           	callstack 0
 11312                           
 11313 ;; *************** function _modbus_master_response_parse *****************
 11314 ;; Defined at:
 11315 ;;		line 204 in file "app_modbus.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;		None
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;  idx             1   49[COMRAM] unsigned char 
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  1    wreg      void 
 11322 ;; Registers used:
 11323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11324 ;; Tracked objects:
 11325 ;;		On entry : 3F/1
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11330 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11332 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11333 ;;Total ram usage:        5 bytes
 11334 ;; Hardware stack levels used: 1
 11335 ;; Hardware stack levels required when called: 10
 11336 ;; This function calls:
 11337 ;;		_modbus_fire_event
 11338 ;; This function is called by:
 11339 ;;		_modbus_master_task
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text46
 11344  00AECE                     __ptext46:
 11345                           	callstack 0
 11346  00AECE                     _modbus_master_response_parse:
 11347                           	callstack 18
 11348                           
 11349                           ; BSR set to: 1
 11350                           ;app_modbus.c: 206: uint8_t idx = ((g_nvm.flash.ctrl_relay_no - 1) < 0)?0:(g_nvm.flash.c
      +                          trl_relay_no - 1);
 11351                           
 11352                           ;incstack = 0
 11353  00AECE  5157               	movf	(_g_nvm+5)& (0+255),w,b
 11354  00AED0  6E30               	movwf	??_modbus_master_response_parse^0,c
 11355  00AED2  6A31               	clrf	(??_modbus_master_response_parse+1)^0,c
 11356  00AED4  0EFF               	movlw	255
 11357  00AED6  2430               	addwf	??_modbus_master_response_parse^0,w,c
 11358  00AED8  0EFF               	movlw	255
 11359  00AEDA  2031               	addwfc	(??_modbus_master_response_parse+1)^0,w,c
 11360  00AEDC  0B80               	andlw	128
 11361  00AEDE  A4D8               	btfss	status,2,c
 11362  00AEE0  D007               	goto	l20361
 11363                           
 11364                           ; BSR set to: 1
 11365  00AEE2  0EFF               	movlw	255
 11366  00AEE4  2557               	addwf	(_g_nvm+5)& (0+255),w,b
 11367  00AEE6  6E33               	movwf	_modbus_master_response_parse$4723^0,c
 11368  00AEE8  6A34               	clrf	(_modbus_master_response_parse$4723+1)^0,c
 11369  00AEEA  0EFF               	movlw	255
 11370  00AEEC  2234               	addwfc	(_modbus_master_response_parse$4723+1)^0,f,c
 11371  00AEEE  D004               	goto	l20363
 11372  00AEF0                     l20361:
 11373                           
 11374                           ; BSR set to: 1
 11375  00AEF0  0E00               	movlw	0
 11376  00AEF2  6E34               	movwf	(_modbus_master_response_parse$4723+1)^0,c
 11377  00AEF4  0E00               	movlw	0
 11378  00AEF6  6E33               	movwf	_modbus_master_response_parse$4723^0,c
 11379  00AEF8                     l20363:
 11380                           
 11381                           ; BSR set to: 1
 11382  00AEF8  C033  F032         	movff	_modbus_master_response_parse$4723,modbus_master_response_parse@idx
 11383                           
 11384                           ;app_modbus.c: 207: switch (g_master.data.function) {
 11385  00AEFC  D043               	goto	l20397
 11386  00AEFE                     l20365:
 11387                           
 11388                           ; BSR set to: 2
 11389                           ;app_modbus.c: 210: if (g_modbus.fire_flag == 0 && g_modbus.event_flag == 0) {
 11390  00AEFE  0101               	movlb	1	; () banked
 11391  00AF00  5127               	movf	(_g_modbus+3)& (0+255),w,b
 11392  00AF02  A4D8               	btfss	status,2,c
 11393  00AF04  0012               	return	
 11394                           
 11395                           ; BSR set to: 1
 11396  00AF06  5126               	movf	(_g_modbus+2)& (0+255),w,b
 11397  00AF08  A4D8               	btfss	status,2,c
 11398  00AF0A  0012               	return	
 11399                           
 11400                           ; BSR set to: 1
 11401                           ;app_modbus.c: 211: if ((g_master.data.coils[0] >> idx) & 0x01) {
 11402  00AF0C  C032  F030         	movff	modbus_master_response_parse@idx,??_modbus_master_response_parse
 11403  00AF10  C2D2  F031         	movff	_g_master+29,??_modbus_master_response_parse+1
 11404  00AF14  2A30               	incf	??_modbus_master_response_parse^0,f,c
 11405  00AF16  D002               	goto	u23454
 11406  00AF18                     u23455:
 11407  00AF18  90D8               	bcf	status,0,c
 11408  00AF1A  3231               	rrcf	(??_modbus_master_response_parse+1)^0,f,c
 11409  00AF1C                     u23454:
 11410  00AF1C  2E30               	decfsz	??_modbus_master_response_parse^0,f,c
 11411  00AF1E  D7FC               	goto	u23455
 11412  00AF20  A031               	btfss	(??_modbus_master_response_parse+1)^0,0,c
 11413  00AF22  D00A               	goto	l20377
 11414                           
 11415                           ;app_modbus.c: 212: if (g_modbus.last_event == EV_NORMAL && g_modbus.relay_status != RLY
      +                          _OPEN) {
 11416  00AF24  0101               	movlb	1	; () banked
 11417  00AF26  512D               	movf	(_g_modbus+9)& (0+255),w,b
 11418  00AF28  A4D8               	btfss	status,2,c
 11419  00AF2A  0012               	return	
 11420                           
 11421                           ; BSR set to: 1
 11422  00AF2C  052E               	decf	(_g_modbus+10)& (0+255),w,b
 11423  00AF2E  B4D8               	btfsc	status,2,c
 11424  00AF30  0012               	return	
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;app_modbus.c: 213: modbus_fire_event();
 11428  00AF32  ECDC  F06E         	call	_modbus_fire_event	;wreg free
 11429  00AF36  0012               	return	
 11430  00AF38                     l20377:
 11431                           
 11432                           ;app_modbus.c: 216: if (g_modbus.last_event == EV_UP && g_modbus.relay_status != RLY_SHO
      +                          RT) {
 11433  00AF38  0101               	movlb	1	; () banked
 11434  00AF3A  052D               	decf	(_g_modbus+9)& (0+255),w,b
 11435  00AF3C  A4D8               	btfss	status,2,c
 11436  00AF3E  0012               	return	
 11437                           
 11438                           ; BSR set to: 1
 11439  00AF40  0E02               	movlw	2
 11440  00AF42  192E               	xorwf	(_g_modbus+10)& (0+255),w,b
 11441  00AF44  D7F4               	goto	L92
 11442  00AF46                     l20383:
 11443                           
 11444                           ; BSR set to: 2
 11445                           ;app_modbus.c: 224: if (g_modbus.last_event == EV_NORMAL) {
 11446  00AF46  0101               	movlb	1	; () banked
 11447  00AF48  512D               	movf	(_g_modbus+9)& (0+255),w,b
 11448  00AF4A  A4D8               	btfss	status,2,c
 11449  00AF4C  D00C               	goto	l20389
 11450                           
 11451                           ; BSR set to: 1
 11452                           ;app_modbus.c: 225: if (g_master.data.coils[0] == 0) {
 11453  00AF4E  0102               	movlb	2	; () banked
 11454  00AF50  51D2               	movf	(_g_master+29)& (0+255),w,b
 11455  00AF52  A4D8               	btfss	status,2,c
 11456  00AF54  0012               	return	
 11457                           
 11458                           ; BSR set to: 2
 11459                           ;app_modbus.c: 226: g_modbus.relay_status = RLY_OPEN;
 11460  00AF56  0E01               	movlw	1
 11461  00AF58  0101               	movlb	1	; () banked
 11462  00AF5A  6F2E               	movwf	(_g_modbus+10)& (0+255),b
 11463                           
 11464                           ;app_modbus.c: 227: g_modbus.fire_flag = 0;
 11465  00AF5C  0E00               	movlw	0
 11466  00AF5E  6F27               	movwf	(_g_modbus+3)& (0+255),b
 11467                           
 11468                           ;app_modbus.c: 228: g_modbus.fire_retry = 0;
 11469  00AF60  0E00               	movlw	0
 11470  00AF62  6F28               	movwf	(_g_modbus+4)& (0+255),b
 11471  00AF64  0012               	return	
 11472  00AF66                     l20389:
 11473                           
 11474                           ; BSR set to: 1
 11475                           ;app_modbus.c: 231: else if (g_modbus.last_event == EV_UP) {
 11476  00AF66  052D               	decf	(_g_modbus+9)& (0+255),w,b
 11477  00AF68  A4D8               	btfss	status,2,c
 11478  00AF6A  0012               	return	
 11479                           
 11480                           ; BSR set to: 1
 11481                           ;app_modbus.c: 232: if (g_master.data.coils[0] != 0) {
 11482  00AF6C  0102               	movlb	2	; () banked
 11483  00AF6E  51D2               	movf	(_g_master+29)& (0+255),w,b
 11484  00AF70  B4D8               	btfsc	status,2,c
 11485  00AF72  0012               	return	
 11486                           
 11487                           ; BSR set to: 2
 11488                           ;app_modbus.c: 233: g_modbus.relay_status = RLY_SHORT;
 11489  00AF74  0E02               	movlw	2
 11490  00AF76  0101               	movlb	1	; () banked
 11491  00AF78  6F2E               	movwf	(_g_modbus+10)& (0+255),b
 11492                           
 11493                           ;app_modbus.c: 234: g_modbus.fire_flag = 0;
 11494  00AF7A  0E00               	movlw	0
 11495  00AF7C  6F27               	movwf	(_g_modbus+3)& (0+255),b
 11496                           
 11497                           ;app_modbus.c: 235: g_modbus.fire_retry = 0;
 11498  00AF7E  0E00               	movlw	0
 11499  00AF80  6F28               	movwf	(_g_modbus+4)& (0+255),b
 11500  00AF82  0012               	return	
 11501  00AF84                     l20397:
 11502                           
 11503                           ; BSR set to: 1
 11504  00AF84  0102               	movlb	2	; () banked
 11505  00AF86  51D1               	movf	(_g_master+28)& (0+255),w,b
 11506                           
 11507                           ; Switch size 1, requested type "simple"
 11508                           ; Number of cases is 2, Range of values is 1 to 5
 11509                           ; switch strategies available:
 11510                           ; Name         Instructions Cycles
 11511                           ; simple_byte            7     4 (average)
 11512                           ;	Chosen strategy is simple_byte
 11513  00AF88  0A01               	xorlw	1	; case 1
 11514  00AF8A  B4D8               	btfsc	status,2,c
 11515  00AF8C  D7B8               	goto	l20365
 11516  00AF8E  0A04               	xorlw	4	; case 5
 11517  00AF90  A4D8               	btfss	status,2,c
 11518  00AF92  0012               	return	
 11519  00AF94  D7D8               	goto	l20383
 11520  00AF96                     __end_of_modbus_master_response_parse:
 11521                           	callstack 0
 11522                           
 11523 ;; *************** function _modbusParseResponse *****************
 11524 ;; Defined at:
 11525 ;;		line 47 in file "lightmodbus/master.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  status          2   42[COMRAM] PTR struct modbusMaster
 11528 ;;		 -> g_master(37), 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;  parser          2   55[COMRAM] PTR struct modbusParser
 11531 ;;		 -> g_master.response.frame(9), 
 11532 ;;  crcreq          2   53[COMRAM] unsigned int 
 11533 ;;  crcresp         2   51[COMRAM] unsigned int 
 11534 ;;  requestParse    2   48[COMRAM] PTR struct modbusParser
 11535 ;;		 -> g_master.request.frame(9), 
 11536 ;;  functionMatc    1    0        unsigned char 
 11537 ;;  err             1   50[COMRAM] unsigned char 
 11538 ;;  functionExec    1   47[COMRAM] unsigned char 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      enum E352
 11541 ;; Registers used:
 11542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11543 ;; Tracked objects:
 11544 ;;		On entry : 3F/2
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11549 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11550 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11551 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11552 ;;Total ram usage:       15 bytes
 11553 ;; Hardware stack levels used: 1
 11554 ;; Hardware stack levels required when called: 7
 11555 ;; This function calls:
 11556 ;;		_memcpy
 11557 ;;		_modbusCRC
 11558 ;;		_modbusParseException
 11559 ;;		_modbusParseResponse0102
 11560 ;;		_modbusParseResponse05
 11561 ;; This function is called by:
 11562 ;;		_modbus_master_task
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text47
 11567  006C5C                     __ptext47:
 11568                           	callstack 0
 11569  006C5C                     _modbusParseResponse:
 11570                           	callstack 21
 11571                           
 11572                           ; BSR set to: 2
 11573                           ;master.c: 55: uint8_t err = 0;
 11574                           
 11575                           ;incstack = 0
 11576  006C5C  0E00               	movlw	0
 11577  006C5E  6E33               	movwf	modbusParseResponse@err^0,c
 11578                           
 11579                           ; BSR set to: 2
 11580                           ;master.c: 58: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 11581  006C60  502B               	movf	modbusParseResponse@status^0,w,c
 11582  006C62  102C               	iorwf	(modbusParseResponse@status+1)^0,w,c
 11583  006C64  A4D8               	btfss	status,2,c
 11584  006C66  D002               	goto	l19765
 11585                           
 11586                           ; BSR set to: 2
 11587  006C68  0E04               	movlw	4
 11588  006C6A  0012               	return	
 11589  006C6C                     l19765:
 11590                           
 11591                           ; BSR set to: 2
 11592                           ;master.c: 61: status->exception.address = 0;
 11593  006C6C  EE20 F020          	lfsr	2,32
 11594  006C70  502B               	movf	modbusParseResponse@status^0,w,c
 11595  006C72  26D9               	addwf	fsr2l,f,c
 11596  006C74  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11597  006C76  22DA               	addwfc	fsr2h,f,c
 11598  006C78  0E00               	movlw	0
 11599  006C7A  6EDF               	movwf	indf2,c
 11600                           
 11601                           ;master.c: 62: status->exception.function = 0;
 11602  006C7C  EE20 F021          	lfsr	2,33
 11603  006C80  502B               	movf	modbusParseResponse@status^0,w,c
 11604  006C82  26D9               	addwf	fsr2l,f,c
 11605  006C84  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11606  006C86  22DA               	addwfc	fsr2h,f,c
 11607  006C88  0E00               	movlw	0
 11608  006C8A  6EDF               	movwf	indf2,c
 11609                           
 11610                           ;master.c: 63: status->exception.code = 0;
 11611  006C8C  EE20 F022          	lfsr	2,34
 11612  006C90  502B               	movf	modbusParseResponse@status^0,w,c
 11613  006C92  26D9               	addwf	fsr2l,f,c
 11614  006C94  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11615  006C96  22DA               	addwfc	fsr2h,f,c
 11616  006C98  0E00               	movlw	0
 11617  006C9A  6EDF               	movwf	indf2,c
 11618                           
 11619                           ;master.c: 70: status->data.length = 0;
 11620  006C9C  EE20 F01A          	lfsr	2,26
 11621  006CA0  502B               	movf	modbusParseResponse@status^0,w,c
 11622  006CA2  26D9               	addwf	fsr2l,f,c
 11623  006CA4  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11624  006CA6  22DA               	addwfc	fsr2h,f,c
 11625  006CA8  0E00               	movlw	0
 11626  006CAA  6EDF               	movwf	indf2,c
 11627                           
 11628                           ;master.c: 71: status->data.index = 0;
 11629  006CAC  EE20 F016          	lfsr	2,22
 11630  006CB0  502B               	movf	modbusParseResponse@status^0,w,c
 11631  006CB2  26D9               	addwf	fsr2l,f,c
 11632  006CB4  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11633  006CB6  22DA               	addwfc	fsr2h,f,c
 11634  006CB8  0E00               	movlw	0
 11635  006CBA  6EDE               	movwf	postinc2,c
 11636  006CBC  0E00               	movlw	0
 11637  006CBE  6EDD               	movwf	postdec2,c
 11638                           
 11639                           ;master.c: 72: status->data.count = 0;
 11640  006CC0  EE20 F018          	lfsr	2,24
 11641  006CC4  502B               	movf	modbusParseResponse@status^0,w,c
 11642  006CC6  26D9               	addwf	fsr2l,f,c
 11643  006CC8  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11644  006CCA  22DA               	addwfc	fsr2h,f,c
 11645  006CCC  0E00               	movlw	0
 11646  006CCE  6EDE               	movwf	postinc2,c
 11647  006CD0  0E00               	movlw	0
 11648  006CD2  6EDD               	movwf	postdec2,c
 11649                           
 11650                           ;master.c: 73: status->data.type = 0;
 11651  006CD4  EE20 F01B          	lfsr	2,27
 11652  006CD8  502B               	movf	modbusParseResponse@status^0,w,c
 11653  006CDA  26D9               	addwf	fsr2l,f,c
 11654  006CDC  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11655  006CDE  22DA               	addwfc	fsr2h,f,c
 11656  006CE0  0E00               	movlw	0
 11657  006CE2  6EDF               	movwf	indf2,c
 11658                           
 11659                           ;master.c: 74: status->data.address = 0;
 11660  006CE4  EE20 F015          	lfsr	2,21
 11661  006CE8  502B               	movf	modbusParseResponse@status^0,w,c
 11662  006CEA  26D9               	addwf	fsr2l,f,c
 11663  006CEC  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11664  006CEE  22DA               	addwfc	fsr2h,f,c
 11665  006CF0  0E00               	movlw	0
 11666  006CF2  6EDF               	movwf	indf2,c
 11667                           
 11668                           ;master.c: 75: status->data.function = 0;
 11669  006CF4  EE20 F01C          	lfsr	2,28
 11670  006CF8  502B               	movf	modbusParseResponse@status^0,w,c
 11671  006CFA  26D9               	addwf	fsr2l,f,c
 11672  006CFC  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11673  006CFE  22DA               	addwfc	fsr2h,f,c
 11674  006D00  0E00               	movlw	0
 11675  006D02  6EDF               	movwf	indf2,c
 11676                           
 11677                           ;master.c: 79: if ( status->response.length < 4u || status->response.frame == (0) || sta
      +                          tus->request.length < 4u || status->request.frame == (0) )
 11678  006D04  EE20 F014          	lfsr	2,20
 11679  006D08  502B               	movf	modbusParseResponse@status^0,w,c
 11680  006D0A  26D9               	addwf	fsr2l,f,c
 11681  006D0C  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11682  006D0E  22DA               	addwfc	fsr2h,f,c
 11683  006D10  0E03               	movlw	3
 11684  006D12  64DF               	cpfsgt	indf2,c
 11685  006D14  D01D               	goto	u22750
 11686                           
 11687                           ; BSR set to: 2
 11688  006D16  0E0B               	movlw	11
 11689  006D18  242B               	addwf	modbusParseResponse@status^0,w,c
 11690  006D1A  6E2D               	movwf	??_modbusParseResponse^0,c
 11691  006D1C  0E00               	movlw	0
 11692  006D1E  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11693  006D20  6E2E               	movwf	(??_modbusParseResponse+1)^0,c
 11694  006D22  502D               	movf	??_modbusParseResponse^0,w,c
 11695  006D24  102E               	iorwf	(??_modbusParseResponse+1)^0,w,c
 11696  006D26  B4D8               	btfsc	status,2,c
 11697  006D28  D013               	goto	u22750
 11698                           
 11699                           ; BSR set to: 2
 11700  006D2A  EE20 F00A          	lfsr	2,10
 11701  006D2E  502B               	movf	modbusParseResponse@status^0,w,c
 11702  006D30  26D9               	addwf	fsr2l,f,c
 11703  006D32  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11704  006D34  22DA               	addwfc	fsr2h,f,c
 11705  006D36  0E03               	movlw	3
 11706  006D38  64DF               	cpfsgt	indf2,c
 11707  006D3A  D00A               	goto	u22750
 11708                           
 11709                           ; BSR set to: 2
 11710  006D3C  0E01               	movlw	1
 11711  006D3E  242B               	addwf	modbusParseResponse@status^0,w,c
 11712  006D40  6E2D               	movwf	??_modbusParseResponse^0,c
 11713  006D42  0E00               	movlw	0
 11714  006D44  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11715  006D46  6E2E               	movwf	(??_modbusParseResponse+1)^0,c
 11716  006D48  502D               	movf	??_modbusParseResponse^0,w,c
 11717  006D4A  102E               	iorwf	(??_modbusParseResponse+1)^0,w,c
 11718  006D4C  A4D8               	btfss	status,2,c
 11719  006D4E  D00A               	goto	l19779
 11720  006D50                     u22750:
 11721                           
 11722                           ; BSR set to: 2
 11723                           ;master.c: 81: {;master.c: 82: status->parseError = MODBUS_FERROR_LENGTH;
 11724  006D50  EE20 F023          	lfsr	2,35
 11725  006D54  502B               	movf	modbusParseResponse@status^0,w,c
 11726  006D56  26D9               	addwf	fsr2l,f,c
 11727  006D58  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11728  006D5A  22DA               	addwfc	fsr2h,f,c
 11729  006D5C  0E02               	movlw	2
 11730  006D5E                     L20:
 11731  006D5E  6EDF               	movwf	indf2,c
 11732                           
 11733                           ;master.c: 83: return MODBUS_ERROR_PARSE;
 11734  006D60  0E05               	movlw	5
 11735  006D62  0012               	return	
 11736  006D64                     l19779:
 11737                           
 11738                           ; BSR set to: 2
 11739                           ;master.c: 84: };master.c: 89: uint16_t crcresp;;master.c: 90: uint16_t crcreq;;master.c
      +                          : 92: memcpy(&crcresp, status->response.frame + status->response.length - 2, 2);
 11740  006D64  0E34               	movlw	low modbusParseResponse@crcresp
 11741  006D66  6E0F               	movwf	memcpy@d1^0,c
 11742  006D68  6A10               	clrf	(memcpy@d1+1)^0,c
 11743  006D6A  EE20 F014          	lfsr	2,20
 11744  006D6E  502B               	movf	modbusParseResponse@status^0,w,c
 11745  006D70  26D9               	addwf	fsr2l,f,c
 11746  006D72  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11747  006D74  22DA               	addwfc	fsr2h,f,c
 11748  006D76  50DF               	movf	indf2,w,c
 11749  006D78  6E2D               	movwf	??_modbusParseResponse^0,c
 11750  006D7A  502D               	movf	??_modbusParseResponse^0,w,c
 11751  006D7C  242B               	addwf	modbusParseResponse@status^0,w,c
 11752  006D7E  6E2E               	movwf	(??_modbusParseResponse+1)^0,c
 11753  006D80  0E00               	movlw	0
 11754  006D82  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11755  006D84  6E2F               	movwf	(??_modbusParseResponse+2)^0,c
 11756  006D86  0E09               	movlw	9
 11757  006D88  242E               	addwf	(??_modbusParseResponse+1)^0,w,c
 11758  006D8A  6E11               	movwf	memcpy@s1^0,c
 11759  006D8C  0E00               	movlw	0
 11760  006D8E  202F               	addwfc	(??_modbusParseResponse+2)^0,w,c
 11761  006D90  6E12               	movwf	(memcpy@s1+1)^0,c
 11762  006D92  0E00               	movlw	0
 11763  006D94  6E14               	movwf	(memcpy@n+1)^0,c
 11764  006D96  0E02               	movlw	2
 11765  006D98  6E13               	movwf	memcpy@n^0,c
 11766  006D9A  ECA6  F068         	call	_memcpy	;wreg free
 11767                           
 11768                           ;master.c: 93: memcpy(&crcreq, status->request.frame + status->request.length - 2, 2);
 11769  006D9E  0E36               	movlw	low modbusParseResponse@crcreq
 11770  006DA0  6E0F               	movwf	memcpy@d1^0,c
 11771  006DA2  6A10               	clrf	(memcpy@d1+1)^0,c
 11772  006DA4  EE20 F00A          	lfsr	2,10
 11773  006DA8  502B               	movf	modbusParseResponse@status^0,w,c
 11774  006DAA  26D9               	addwf	fsr2l,f,c
 11775  006DAC  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11776  006DAE  22DA               	addwfc	fsr2h,f,c
 11777  006DB0  50DF               	movf	indf2,w,c
 11778  006DB2  6E2D               	movwf	??_modbusParseResponse^0,c
 11779  006DB4  502D               	movf	??_modbusParseResponse^0,w,c
 11780  006DB6  242B               	addwf	modbusParseResponse@status^0,w,c
 11781  006DB8  6E2E               	movwf	(??_modbusParseResponse+1)^0,c
 11782  006DBA  0E00               	movlw	0
 11783  006DBC  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11784  006DBE  6E2F               	movwf	(??_modbusParseResponse+2)^0,c
 11785  006DC0  0EFF               	movlw	255
 11786  006DC2  242E               	addwf	(??_modbusParseResponse+1)^0,w,c
 11787  006DC4  6E11               	movwf	memcpy@s1^0,c
 11788  006DC6  0EFF               	movlw	255
 11789  006DC8  202F               	addwfc	(??_modbusParseResponse+2)^0,w,c
 11790  006DCA  6E12               	movwf	(memcpy@s1+1)^0,c
 11791  006DCC  0E00               	movlw	0
 11792  006DCE  6E14               	movwf	(memcpy@n+1)^0,c
 11793  006DD0  0E02               	movlw	2
 11794  006DD2  6E13               	movwf	memcpy@n^0,c
 11795  006DD4  ECA6  F068         	call	_memcpy	;wreg free
 11796                           
 11797                           ;master.c: 95: if ( crcresp != modbusCRC( status->response.frame, status->response.lengt
      +                          h - 2 ) ||;master.c: 96: crcreq != modbusCRC( status->request.frame, status->request.len
      +                          gth - 2 ) )
 11798  006DD8  0E0B               	movlw	11
 11799  006DDA  242B               	addwf	modbusParseResponse@status^0,w,c
 11800  006DDC  6E0F               	movwf	modbusCRC@data^0,c
 11801  006DDE  0E00               	movlw	0
 11802  006DE0  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11803  006DE2  6E10               	movwf	(modbusCRC@data+1)^0,c
 11804  006DE4  EE20 F014          	lfsr	2,20
 11805  006DE8  502B               	movf	modbusParseResponse@status^0,w,c
 11806  006DEA  26D9               	addwf	fsr2l,f,c
 11807  006DEC  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11808  006DEE  22DA               	addwfc	fsr2h,f,c
 11809  006DF0  50DF               	movf	indf2,w,c
 11810  006DF2  6E2D               	movwf	??_modbusParseResponse^0,c
 11811  006DF4  0EFE               	movlw	254
 11812  006DF6  242D               	addwf	??_modbusParseResponse^0,w,c
 11813  006DF8  6E11               	movwf	modbusCRC@length^0,c
 11814  006DFA  6A12               	clrf	(modbusCRC@length+1)^0,c
 11815  006DFC  0EFF               	movlw	255
 11816  006DFE  2212               	addwfc	(modbusCRC@length+1)^0,f,c
 11817  006E00  EC2C  F062         	call	_modbusCRC	;wreg free
 11818  006E04  5034               	movf	modbusParseResponse@crcresp^0,w,c
 11819  006E06  180F               	xorwf	?_modbusCRC^0,w,c
 11820  006E08  E121               	bnz	l19783
 11821  006E0A  5035               	movf	(modbusParseResponse@crcresp+1)^0,w,c
 11822  006E0C  1810               	xorwf	(?_modbusCRC+1)^0,w,c
 11823  006E0E  A4D8               	btfss	status,2,c
 11824  006E10  D01D               	goto	u22770
 11825  006E12  0E01               	movlw	1
 11826  006E14  242B               	addwf	modbusParseResponse@status^0,w,c
 11827  006E16  6E0F               	movwf	modbusCRC@data^0,c
 11828  006E18  0E00               	movlw	0
 11829  006E1A  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11830  006E1C  6E10               	movwf	(modbusCRC@data+1)^0,c
 11831  006E1E  EE20 F00A          	lfsr	2,10
 11832  006E22  502B               	movf	modbusParseResponse@status^0,w,c
 11833  006E24  26D9               	addwf	fsr2l,f,c
 11834  006E26  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11835  006E28  22DA               	addwfc	fsr2h,f,c
 11836  006E2A  50DF               	movf	indf2,w,c
 11837  006E2C  6E2D               	movwf	??_modbusParseResponse^0,c
 11838  006E2E  0EFE               	movlw	254
 11839  006E30  242D               	addwf	??_modbusParseResponse^0,w,c
 11840  006E32  6E11               	movwf	modbusCRC@length^0,c
 11841  006E34  6A12               	clrf	(modbusCRC@length+1)^0,c
 11842  006E36  0EFF               	movlw	255
 11843  006E38  2212               	addwfc	(modbusCRC@length+1)^0,f,c
 11844  006E3A  EC2C  F062         	call	_modbusCRC	;wreg free
 11845  006E3E  5036               	movf	modbusParseResponse@crcreq^0,w,c
 11846  006E40  180F               	xorwf	?_modbusCRC^0,w,c
 11847  006E42  E104               	bnz	u22770
 11848  006E44  5037               	movf	(modbusParseResponse@crcreq+1)^0,w,c
 11849  006E46  1810               	xorwf	(?_modbusCRC+1)^0,w,c
 11850  006E48  B4D8               	btfsc	status,2,c
 11851  006E4A  D008               	goto	l19789
 11852  006E4C                     u22770:
 11853  006E4C                     l19783:
 11854                           
 11855                           ;master.c: 97: {;master.c: 98: status->parseError = MODBUS_FERROR_CRC;
 11856  006E4C  EE20 F023          	lfsr	2,35
 11857  006E50  502B               	movf	modbusParseResponse@status^0,w,c
 11858  006E52  26D9               	addwf	fsr2l,f,c
 11859  006E54  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11860  006E56  22DA               	addwfc	fsr2h,f,c
 11861  006E58  0E01               	movlw	1
 11862  006E5A  D781               	goto	L20
 11863  006E5C                     l19789:
 11864                           
 11865                           ;master.c: 100: };master.c: 102: ModbusParser *parser = (ModbusParser*) status->response
      +                          .frame;
 11866  006E5C  0E0B               	movlw	11
 11867  006E5E  242B               	addwf	modbusParseResponse@status^0,w,c
 11868  006E60  6E38               	movwf	modbusParseResponse@parser^0,c
 11869  006E62  0E00               	movlw	0
 11870  006E64  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11871  006E66  6E39               	movwf	(modbusParseResponse@parser+1)^0,c
 11872                           
 11873                           ;master.c: 103: ModbusParser *requestParser = (ModbusParser*) status->request.frame;
 11874  006E68  0E01               	movlw	1
 11875  006E6A  242B               	addwf	modbusParseResponse@status^0,w,c
 11876  006E6C  6E31               	movwf	modbusParseResponse@requestParser^0,c
 11877  006E6E  0E00               	movlw	0
 11878  006E70  202C               	addwfc	(modbusParseResponse@status+1)^0,w,c
 11879  006E72  6E32               	movwf	(modbusParseResponse@requestParser+1)^0,c
 11880                           
 11881                           ;master.c: 106: status->parseError = MODBUS_FERROR_OK;
 11882  006E74  EE20 F023          	lfsr	2,35
 11883  006E78  502B               	movf	modbusParseResponse@status^0,w,c
 11884  006E7A  26D9               	addwf	fsr2l,f,c
 11885  006E7C  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11886  006E7E  22DA               	addwfc	fsr2h,f,c
 11887  006E80  0E00               	movlw	0
 11888  006E82  6EDF               	movwf	indf2,c
 11889                           
 11890                           ;master.c: 136: {;master.c: 137: functionExec = 1;
 11891                           
 11892                           ;master.c: 135: if ( !functionMatch )
 11893  006E84  0E01               	movlw	1
 11894  006E86  6E30               	movwf	modbusParseResponse@functionExec^0,c
 11895                           
 11896                           ;master.c: 140: if ( ( parser->_base.function & 128 ) && status->response.length == 5 )
 11897  006E88  EE20 F001          	lfsr	2,1
 11898  006E8C  5038               	movf	modbusParseResponse@parser^0,w,c
 11899  006E8E  26D9               	addwf	fsr2l,f,c
 11900  006E90  5039               	movf	(modbusParseResponse@parser+1)^0,w,c
 11901  006E92  22DA               	addwfc	fsr2h,f,c
 11902  006E94  AEDF               	btfss	indf2,7,c
 11903  006E96  D037               	goto	l19815
 11904  006E98  EE20 F014          	lfsr	2,20
 11905  006E9C  502B               	movf	modbusParseResponse@status^0,w,c
 11906  006E9E  26D9               	addwf	fsr2l,f,c
 11907  006EA0  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11908  006EA2  22DA               	addwfc	fsr2h,f,c
 11909  006EA4  0E05               	movlw	5
 11910  006EA6  18DE               	xorwf	postinc2,w,c
 11911  006EA8  A4D8               	btfss	status,2,c
 11912  006EAA  D02D               	goto	l19815
 11913                           
 11914                           ;master.c: 141: {;master.c: 142: err = modbusParseException( status, parser );
 11915  006EAC  C02B  F00F         	movff	modbusParseResponse@status,modbusParseException@status
 11916  006EB0  C02C  F010         	movff	modbusParseResponse@status+1,modbusParseException@status+1
 11917  006EB4  C038  F011         	movff	modbusParseResponse@parser,modbusParseException@parser
 11918  006EB8  C039  F012         	movff	modbusParseResponse@parser+1,modbusParseException@parser+1
 11919  006EBC  EC5E  F064         	call	_modbusParseException	;wreg free
 11920  006EC0  D01D               	goto	L22
 11921  006EC2                     l19807:
 11922                           
 11923                           ;master.c: 150: case 2:;master.c: 151: err = modbusParseResponse0102( status, parser, re
      +                          questParser );
 11924  006EC2  C02B  F01D         	movff	modbusParseResponse@status,modbusParseResponse0102@status
 11925  006EC6  C02C  F01E         	movff	modbusParseResponse@status+1,modbusParseResponse0102@status+1
 11926  006ECA  C038  F01F         	movff	modbusParseResponse@parser,modbusParseResponse0102@parser
 11927  006ECE  C039  F020         	movff	modbusParseResponse@parser+1,modbusParseResponse0102@parser+1
 11928  006ED2  C031  F021         	movff	modbusParseResponse@requestParser,modbusParseResponse0102@requestParser
 11929  006ED6  C032  F022         	movff	modbusParseResponse@requestParser+1,modbusParseResponse0102@requestParser+1
 11930  006EDA  EC45  F033         	call	_modbusParseResponse0102	;wreg free
 11931  006EDE  D00E               	goto	L22
 11932  006EE0                     l19809:
 11933                           
 11934                           ;master.c: 164: err = modbusParseResponse05( status, parser, requestParser );
 11935  006EE0  C02B  F01D         	movff	modbusParseResponse@status,modbusParseResponse05@status
 11936  006EE4  C02C  F01E         	movff	modbusParseResponse@status+1,modbusParseResponse05@status+1
 11937  006EE8  C038  F01F         	movff	modbusParseResponse@parser,modbusParseResponse05@parser
 11938  006EEC  C039  F020         	movff	modbusParseResponse@parser+1,modbusParseResponse05@parser+1
 11939  006EF0  C031  F021         	movff	modbusParseResponse@requestParser,modbusParseResponse05@requestParser
 11940  006EF4  C032  F022         	movff	modbusParseResponse@requestParser+1,modbusParseResponse05@requestParser+1
 11941  006EF8  ECA5  F041         	call	_modbusParseResponse05	;wreg free
 11942  006EFC                     L22:
 11943  006EFC  6E33               	movwf	modbusParseResponse@err^0,c
 11944                           
 11945                           ;master.c: 165: break;
 11946  006EFE  D014               	goto	l19817
 11947  006F00                     l19811:
 11948                           
 11949                           ;master.c: 193: functionExec = 0;
 11950  006F00  0E00               	movlw	0
 11951  006F02  6E30               	movwf	modbusParseResponse@functionExec^0,c
 11952                           
 11953                           ;master.c: 194: break;
 11954  006F04  D011               	goto	l19817
 11955  006F06                     l19815:
 11956  006F06  EE20 F001          	lfsr	2,1
 11957  006F0A  5038               	movf	modbusParseResponse@parser^0,w,c
 11958  006F0C  26D9               	addwf	fsr2l,f,c
 11959  006F0E  5039               	movf	(modbusParseResponse@parser+1)^0,w,c
 11960  006F10  22DA               	addwfc	fsr2h,f,c
 11961  006F12  50DF               	movf	indf2,w,c
 11962                           
 11963                           ; Switch size 1, requested type "simple"
 11964                           ; Number of cases is 3, Range of values is 1 to 5
 11965                           ; switch strategies available:
 11966                           ; Name         Instructions Cycles
 11967                           ; simple_byte           10     6 (average)
 11968                           ;	Chosen strategy is simple_byte
 11969  006F14  0A01               	xorlw	1	; case 1
 11970  006F16  B4D8               	btfsc	status,2,c
 11971  006F18  D7D4               	goto	l19807
 11972  006F1A  0A03               	xorlw	3	; case 2
 11973  006F1C  B4D8               	btfsc	status,2,c
 11974  006F1E  D7D1               	goto	l19807
 11975  006F20  0A07               	xorlw	7	; case 5
 11976  006F22  B4D8               	btfsc	status,2,c
 11977  006F24  D7DD               	goto	l19809
 11978  006F26  D7EC               	goto	l19811
 11979  006F28                     l19817:
 11980                           
 11981                           ;master.c: 196: };master.c: 197: };master.c: 200: if ( !functionExec )
 11982  006F28  5030               	movf	modbusParseResponse@functionExec^0,w,c
 11983  006F2A  A4D8               	btfss	status,2,c
 11984  006F2C  D008               	goto	l19829
 11985                           
 11986                           ;master.c: 204: else;master.c: 205: status->parseError = MODBUS_FERROR_NOFUN;
 11987  006F2E  EE20 F023          	lfsr	2,35
 11988  006F32  502B               	movf	modbusParseResponse@status^0,w,c
 11989  006F34  26D9               	addwf	fsr2l,f,c
 11990  006F36  502C               	movf	(modbusParseResponse@status+1)^0,w,c
 11991  006F38  22DA               	addwfc	fsr2h,f,c
 11992  006F3A  0E09               	movlw	9
 11993  006F3C  D710               	goto	L20
 11994  006F3E                     l19829:
 11995                           
 11996                           ;master.c: 208: };master.c: 211: return err;
 11997  006F3E  5033               	movf	modbusParseResponse@err^0,w,c
 11998  006F40  0012               	return		;funcret
 11999  006F42                     __end_of_modbusParseResponse:
 12000                           	callstack 0
 12001                           
 12002 ;; *************** function _modbusParseResponse05 *****************
 12003 ;; Defined at:
 12004 ;;		line 108 in file "lightmodbus/master/mpcoils.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  status          2   28[COMRAM] PTR struct modbusMaster
 12007 ;;		 -> g_master(37), 
 12008 ;;  parser          2   30[COMRAM] PTR struct modbusParser
 12009 ;;		 -> g_master.response.frame(9), 
 12010 ;;  requestParse    2   32[COMRAM] PTR struct modbusParser
 12011 ;;		 -> g_master.request.frame(9), 
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      enum E235
 12016 ;; Registers used:
 12017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/2
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12023 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12026 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12027 ;;Total ram usage:       10 bytes
 12028 ;; Hardware stack levels used: 1
 12029 ;; Hardware stack levels required when called: 6
 12030 ;; This function calls:
 12031 ;;		_memset
 12032 ;;		_modbusMatchEndian
 12033 ;; This function is called by:
 12034 ;;		_modbusParseResponse
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           	psect	text48
 12039  00834A                     __ptext48:
 12040                           	callstack 0
 12041  00834A                     _modbusParseResponse05:
 12042                           	callstack 21
 12043                           
 12044                           ;mpcoils.c: 113: if ( status == (0) || parser == (0) || requestParser == (0) ) return MO
      +                          DBUS_ERROR_NULLPTR;
 12045                           
 12046                           ;incstack = 0
 12047  00834A  501D               	movf	modbusParseResponse05@status^0,w,c
 12048  00834C  101E               	iorwf	(modbusParseResponse05@status+1)^0,w,c
 12049  00834E  B4D8               	btfsc	status,2,c
 12050  008350  D008               	goto	u21360
 12051  008352  501F               	movf	modbusParseResponse05@parser^0,w,c
 12052  008354  1020               	iorwf	(modbusParseResponse05@parser+1)^0,w,c
 12053  008356  B4D8               	btfsc	status,2,c
 12054  008358  D004               	goto	u21360
 12055  00835A  5021               	movf	modbusParseResponse05@requestParser^0,w,c
 12056  00835C  1022               	iorwf	(modbusParseResponse05@requestParser+1)^0,w,c
 12057  00835E  A4D8               	btfss	status,2,c
 12058  008360  D002               	goto	l18935
 12059  008362                     u21360:
 12060  008362  0E04               	movlw	4
 12061  008364  0012               	return	
 12062  008366                     l18935:
 12063                           
 12064                           ;mpcoils.c: 116: if ( status->response.length != 8 || status->request.length != 8 )
 12065  008366  EE20 F014          	lfsr	2,20
 12066  00836A  501D               	movf	modbusParseResponse05@status^0,w,c
 12067  00836C  26D9               	addwf	fsr2l,f,c
 12068  00836E  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12069  008370  22DA               	addwfc	fsr2h,f,c
 12070  008372  0E08               	movlw	8
 12071  008374  18DE               	xorwf	postinc2,w,c
 12072  008376  A4D8               	btfss	status,2,c
 12073  008378  D00A               	goto	u21380
 12074  00837A  EE20 F00A          	lfsr	2,10
 12075  00837E  501D               	movf	modbusParseResponse05@status^0,w,c
 12076  008380  26D9               	addwf	fsr2l,f,c
 12077  008382  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12078  008384  22DA               	addwfc	fsr2h,f,c
 12079  008386  0E08               	movlw	8
 12080  008388  18DE               	xorwf	postinc2,w,c
 12081  00838A  B4D8               	btfsc	status,2,c
 12082  00838C  D00A               	goto	l18945
 12083  00838E                     u21380:
 12084                           
 12085                           ;mpcoils.c: 117: {;mpcoils.c: 118: status->parseError = MODBUS_FERROR_LENGTH;
 12086  00838E  EE20 F023          	lfsr	2,35
 12087  008392  501D               	movf	modbusParseResponse05@status^0,w,c
 12088  008394  26D9               	addwf	fsr2l,f,c
 12089  008396  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12090  008398  22DA               	addwfc	fsr2h,f,c
 12091  00839A  0E02               	movlw	2
 12092  00839C                     L23:
 12093  00839C  6EDF               	movwf	indf2,c
 12094                           
 12095                           ;mpcoils.c: 119: return MODBUS_ERROR_PARSE;
 12096  00839E  0E05               	movlw	5
 12097  0083A0  0012               	return	
 12098  0083A2                     l18945:
 12099                           
 12100                           ;mpcoils.c: 120: };mpcoils.c: 123: if ( parser->_base.address == 0 )
 12101  0083A2  C01F  FFD9         	movff	modbusParseResponse05@parser,fsr2l
 12102  0083A6  C020  FFDA         	movff	modbusParseResponse05@parser+1,fsr2h
 12103  0083AA  50DF               	movf	indf2,w,c
 12104  0083AC  A4D8               	btfss	status,2,c
 12105  0083AE  D008               	goto	l18953
 12106                           
 12107                           ;mpcoils.c: 124: {;mpcoils.c: 125: status->parseError = MODBUS_FERROR_BROADCAST;
 12108  0083B0  EE20 F023          	lfsr	2,35
 12109  0083B4  501D               	movf	modbusParseResponse05@status^0,w,c
 12110  0083B6  26D9               	addwf	fsr2l,f,c
 12111  0083B8  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12112  0083BA  22DA               	addwfc	fsr2h,f,c
 12113  0083BC  0E12               	movlw	18
 12114  0083BE  D7EE               	goto	L23
 12115  0083C0                     l18953:
 12116                           
 12117                           ;mpcoils.c: 127: };mpcoils.c: 130: if ( parser->_base.address != requestParser->_base.ad
      +                          dress )
 12118  0083C0  C021  FFD9         	movff	modbusParseResponse05@requestParser,fsr2l
 12119  0083C4  C022  FFDA         	movff	modbusParseResponse05@requestParser+1,fsr2h
 12120  0083C8  C01F  FFE1         	movff	modbusParseResponse05@parser,fsr1l
 12121  0083CC  C020  FFE2         	movff	modbusParseResponse05@parser+1,fsr1h
 12122  0083D0  50DE               	movf	postinc2,w,c
 12123  0083D2  18E6               	xorwf	postinc1,w,c
 12124  0083D4  B4D8               	btfsc	status,2,c
 12125  0083D6  D008               	goto	l18961
 12126                           
 12127                           ;mpcoils.c: 131: {;mpcoils.c: 132: status->parseError = MODBUS_FERROR_MISM_ADDR;
 12128  0083D8  EE20 F023          	lfsr	2,35
 12129  0083DC  501D               	movf	modbusParseResponse05@status^0,w,c
 12130  0083DE  26D9               	addwf	fsr2l,f,c
 12131  0083E0  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12132  0083E2  22DA               	addwfc	fsr2h,f,c
 12133  0083E4  0E0D               	movlw	13
 12134  0083E6  D7DA               	goto	L23
 12135  0083E8                     l18961:
 12136                           
 12137                           ;mpcoils.c: 134: };mpcoils.c: 137: if ( parser->_base.function != requestParser->_base.f
      +                          unction )
 12138  0083E8  EE20 F001          	lfsr	2,1
 12139  0083EC  5021               	movf	modbusParseResponse05@requestParser^0,w,c
 12140  0083EE  26D9               	addwf	fsr2l,f,c
 12141  0083F0  5022               	movf	(modbusParseResponse05@requestParser+1)^0,w,c
 12142  0083F2  22DA               	addwfc	fsr2h,f,c
 12143  0083F4  EE10 F001          	lfsr	1,1
 12144  0083F8  501F               	movf	modbusParseResponse05@parser^0,w,c
 12145  0083FA  26E1               	addwf	fsr1l,f,c
 12146  0083FC  5020               	movf	(modbusParseResponse05@parser+1)^0,w,c
 12147  0083FE  22E2               	addwfc	fsr1h,f,c
 12148  008400  50DE               	movf	postinc2,w,c
 12149  008402  18E6               	xorwf	postinc1,w,c
 12150  008404  B4D8               	btfsc	status,2,c
 12151  008406  D008               	goto	l18969
 12152                           
 12153                           ;mpcoils.c: 138: {;mpcoils.c: 139: status->parseError = MODBUS_FERROR_MISM_FUN;
 12154  008408  EE20 F023          	lfsr	2,35
 12155  00840C  501D               	movf	modbusParseResponse05@status^0,w,c
 12156  00840E  26D9               	addwf	fsr2l,f,c
 12157  008410  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12158  008412  22DA               	addwfc	fsr2h,f,c
 12159  008414  0E0C               	movlw	12
 12160  008416  D7C2               	goto	L23
 12161  008418                     l18969:
 12162                           
 12163                           ;mpcoils.c: 141: };mpcoils.c: 144: if ( parser->response05.index != requestParser->reque
      +                          st05.index )
 12164  008418  EE20 F002          	lfsr	2,2
 12165  00841C  5021               	movf	modbusParseResponse05@requestParser^0,w,c
 12166  00841E  26D9               	addwf	fsr2l,f,c
 12167  008420  5022               	movf	(modbusParseResponse05@requestParser+1)^0,w,c
 12168  008422  22DA               	addwfc	fsr2h,f,c
 12169  008424  EE10 F002          	lfsr	1,2
 12170  008428  501F               	movf	modbusParseResponse05@parser^0,w,c
 12171  00842A  26E1               	addwf	fsr1l,f,c
 12172  00842C  5020               	movf	(modbusParseResponse05@parser+1)^0,w,c
 12173  00842E  22E2               	addwfc	fsr1h,f,c
 12174  008430  50DE               	movf	postinc2,w,c
 12175  008432  18E6               	xorwf	postinc1,w,c
 12176  008434  E104               	bnz	u21420
 12177  008436  50DE               	movf	postinc2,w,c
 12178  008438  18E6               	xorwf	postinc1,w,c
 12179  00843A  B4D8               	btfsc	status,2,c
 12180  00843C  D008               	goto	l18977
 12181  00843E                     u21420:
 12182                           
 12183                           ;mpcoils.c: 145: {;mpcoils.c: 146: status->parseError = MODBUS_FERROR_MISM_INDEX;
 12184  00843E  EE20 F023          	lfsr	2,35
 12185  008442  501D               	movf	modbusParseResponse05@status^0,w,c
 12186  008444  26D9               	addwf	fsr2l,f,c
 12187  008446  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12188  008448  22DA               	addwfc	fsr2h,f,c
 12189  00844A  0E0E               	movlw	14
 12190  00844C  D7A7               	goto	L23
 12191  00844E                     l18977:
 12192                           
 12193                           ;mpcoils.c: 148: };mpcoils.c: 151: if ( parser->response05.value != requestParser->reque
      +                          st05.value )
 12194  00844E  EE20 F004          	lfsr	2,4
 12195  008452  5021               	movf	modbusParseResponse05@requestParser^0,w,c
 12196  008454  26D9               	addwf	fsr2l,f,c
 12197  008456  5022               	movf	(modbusParseResponse05@requestParser+1)^0,w,c
 12198  008458  22DA               	addwfc	fsr2h,f,c
 12199  00845A  EE10 F004          	lfsr	1,4
 12200  00845E  501F               	movf	modbusParseResponse05@parser^0,w,c
 12201  008460  26E1               	addwf	fsr1l,f,c
 12202  008462  5020               	movf	(modbusParseResponse05@parser+1)^0,w,c
 12203  008464  22E2               	addwfc	fsr1h,f,c
 12204  008466  50DE               	movf	postinc2,w,c
 12205  008468  18E6               	xorwf	postinc1,w,c
 12206  00846A  E104               	bnz	u21430
 12207  00846C  50DE               	movf	postinc2,w,c
 12208  00846E  18E6               	xorwf	postinc1,w,c
 12209  008470  B4D8               	btfsc	status,2,c
 12210  008472  D008               	goto	l18989
 12211  008474                     u21430:
 12212                           
 12213                           ;mpcoils.c: 152: {;mpcoils.c: 153: status->parseError = MODBUS_FERROR_MISM_VALUE;
 12214  008474  EE20 F023          	lfsr	2,35
 12215  008478  501D               	movf	modbusParseResponse05@status^0,w,c
 12216  00847A  26D9               	addwf	fsr2l,f,c
 12217  00847C  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12218  00847E  22DA               	addwfc	fsr2h,f,c
 12219  008480  0E10               	movlw	16
 12220  008482  D78C               	goto	L23
 12221  008484                     l18989:
 12222                           
 12223                           ;mpcoils.c: 170: memset( status->data.coils, 0, 1 * sizeof( uint8_t ) );
 12224  008484  0E1D               	movlw	29
 12225  008486  241D               	addwf	modbusParseResponse05@status^0,w,c
 12226  008488  6E15               	movwf	memset@p1^0,c
 12227  00848A  0E00               	movlw	0
 12228  00848C  201E               	addwfc	(modbusParseResponse05@status+1)^0,w,c
 12229  00848E  6E16               	movwf	(memset@p1+1)^0,c
 12230  008490  0E00               	movlw	0
 12231  008492  6E18               	movwf	(memset@c+1)^0,c
 12232  008494  0E00               	movlw	0
 12233  008496  6E17               	movwf	memset@c^0,c
 12234  008498  0E00               	movlw	0
 12235  00849A  6E1A               	movwf	(memset@n+1)^0,c
 12236  00849C  0E01               	movlw	1
 12237  00849E  6E19               	movwf	memset@n^0,c
 12238  0084A0  ECD6  F06C         	call	_memset	;wreg free
 12239                           
 12240                           ;mpcoils.c: 174: status->data.coils[0] = parser->response05.value != 0;
 12241  0084A4  EE20 F01D          	lfsr	2,29
 12242  0084A8  501D               	movf	modbusParseResponse05@status^0,w,c
 12243  0084AA  26D9               	addwf	fsr2l,f,c
 12244  0084AC  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12245  0084AE  22DA               	addwfc	fsr2h,f,c
 12246  0084B0  EE10 F004          	lfsr	1,4
 12247  0084B4  501F               	movf	modbusParseResponse05@parser^0,w,c
 12248  0084B6  26E1               	addwf	fsr1l,f,c
 12249  0084B8  5020               	movf	(modbusParseResponse05@parser+1)^0,w,c
 12250  0084BA  22E2               	addwfc	fsr1h,f,c
 12251  0084BC  50E6               	movf	postinc1,w,c
 12252  0084BE  10E6               	iorwf	postinc1,w,c
 12253  0084C0  B4D8               	btfsc	status,2,c
 12254  0084C2  D002               	goto	u21440
 12255  0084C4  0E01               	movlw	1
 12256  0084C6  D001               	goto	u21450
 12257  0084C8                     u21440:
 12258  0084C8  0E00               	movlw	0
 12259  0084CA                     u21450:
 12260  0084CA  6EDF               	movwf	indf2,c
 12261                           
 12262                           ;mpcoils.c: 177: status->data.function = 5;
 12263  0084CC  EE20 F01C          	lfsr	2,28
 12264  0084D0  501D               	movf	modbusParseResponse05@status^0,w,c
 12265  0084D2  26D9               	addwf	fsr2l,f,c
 12266  0084D4  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12267  0084D6  22DA               	addwfc	fsr2h,f,c
 12268  0084D8  0E05               	movlw	5
 12269  0084DA  6EDF               	movwf	indf2,c
 12270                           
 12271                           ;mpcoils.c: 178: status->data.address = parser->_base.address;
 12272  0084DC  C01F  FFD9         	movff	modbusParseResponse05@parser,fsr2l
 12273  0084E0  C020  FFDA         	movff	modbusParseResponse05@parser+1,fsr2h
 12274  0084E4  EE10 F015          	lfsr	1,21
 12275  0084E8  501D               	movf	modbusParseResponse05@status^0,w,c
 12276  0084EA  26E1               	addwf	fsr1l,f,c
 12277  0084EC  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12278  0084EE  22E2               	addwfc	fsr1h,f,c
 12279  0084F0  CFDF FFE7          	movff	indf2,indf1
 12280                           
 12281                           ;mpcoils.c: 179: status->data.type = MODBUS_COIL;
 12282  0084F4  EE20 F01B          	lfsr	2,27
 12283  0084F8  501D               	movf	modbusParseResponse05@status^0,w,c
 12284  0084FA  26D9               	addwf	fsr2l,f,c
 12285  0084FC  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12286  0084FE  22DA               	addwfc	fsr2h,f,c
 12287  008500  0E04               	movlw	4
 12288  008502  6EDF               	movwf	indf2,c
 12289                           
 12290                           ;mpcoils.c: 180: status->data.index = modbusMatchEndian( requestParser->request05.index 
      +                          );
 12291  008504  EE20 F002          	lfsr	2,2
 12292  008508  5021               	movf	modbusParseResponse05@requestParser^0,w,c
 12293  00850A  26D9               	addwf	fsr2l,f,c
 12294  00850C  5022               	movf	(modbusParseResponse05@requestParser+1)^0,w,c
 12295  00850E  22DA               	addwfc	fsr2h,f,c
 12296  008510  CFDE F01B          	movff	postinc2,modbusMatchEndian@data
 12297  008514  CFDD F01C          	movff	postdec2,modbusMatchEndian@data+1
 12298  008518  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 12299  00851C  EE20 F016          	lfsr	2,22
 12300  008520  501D               	movf	modbusParseResponse05@status^0,w,c
 12301  008522  26D9               	addwf	fsr2l,f,c
 12302  008524  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12303  008526  22DA               	addwfc	fsr2h,f,c
 12304  008528  C01B  FFDE         	movff	?_modbusMatchEndian,postinc2
 12305  00852C  C01C  FFDD         	movff	?_modbusMatchEndian+1,postdec2
 12306                           
 12307                           ;mpcoils.c: 181: status->data.count = 1;
 12308  008530  EE20 F018          	lfsr	2,24
 12309  008534  501D               	movf	modbusParseResponse05@status^0,w,c
 12310  008536  26D9               	addwf	fsr2l,f,c
 12311  008538  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12312  00853A  22DA               	addwfc	fsr2h,f,c
 12313  00853C  0E01               	movlw	1
 12314  00853E  6EDE               	movwf	postinc2,c
 12315  008540  0E00               	movlw	0
 12316  008542  6EDD               	movwf	postdec2,c
 12317                           
 12318                           ;mpcoils.c: 182: status->data.length = 1;
 12319  008544  EE20 F01A          	lfsr	2,26
 12320  008548  501D               	movf	modbusParseResponse05@status^0,w,c
 12321  00854A  26D9               	addwf	fsr2l,f,c
 12322  00854C  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12323  00854E  22DA               	addwfc	fsr2h,f,c
 12324  008550  0E01               	movlw	1
 12325  008552  6EDF               	movwf	indf2,c
 12326                           
 12327                           ;mpcoils.c: 183: status->parseError = MODBUS_FERROR_OK;
 12328  008554  EE20 F023          	lfsr	2,35
 12329  008558  501D               	movf	modbusParseResponse05@status^0,w,c
 12330  00855A  26D9               	addwf	fsr2l,f,c
 12331  00855C  501E               	movf	(modbusParseResponse05@status+1)^0,w,c
 12332  00855E  22DA               	addwfc	fsr2h,f,c
 12333  008560  0E00               	movlw	0
 12334  008562  6EDF               	movwf	indf2,c
 12335                           
 12336                           ;mpcoils.c: 184: return MODBUS_ERROR_OK;
 12337  008564  0E00               	movlw	0
 12338  008566  0012               	return		;funcret
 12339  008568                     __end_of_modbusParseResponse05:
 12340                           	callstack 0
 12341                           
 12342 ;; *************** function _modbusParseResponse0102 *****************
 12343 ;; Defined at:
 12344 ;;		line 29 in file "lightmodbus/master/mpcoils.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;  status          2   28[COMRAM] PTR struct modbusMaster
 12347 ;;		 -> g_master(37), 
 12348 ;;  parser          2   30[COMRAM] PTR struct modbusParser
 12349 ;;		 -> g_master.response.frame(9), 
 12350 ;;  requestParse    2   32[COMRAM] PTR struct modbusParser
 12351 ;;		 -> g_master.request.frame(9), 
 12352 ;; Auto vars:     Size  Location     Type
 12353 ;;  count           2   40[COMRAM] unsigned int 
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  1    wreg      enum E235
 12356 ;; Registers used:
 12357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/2
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12364 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12366 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12367 ;;Total ram usage:       14 bytes
 12368 ;; Hardware stack levels used: 1
 12369 ;; Hardware stack levels required when called: 6
 12370 ;; This function calls:
 12371 ;;		_memcpy
 12372 ;;		_memset
 12373 ;;		_modbusBitsToBytes
 12374 ;;		_modbusMatchEndian
 12375 ;; This function is called by:
 12376 ;;		_modbusParseResponse
 12377 ;; This function uses a non-reentrant model
 12378 ;;
 12379                           
 12380                           	psect	text49
 12381  00668A                     __ptext49:
 12382                           	callstack 0
 12383  00668A                     _modbusParseResponse0102:
 12384                           	callstack 21
 12385                           
 12386                           ;mpcoils.c: 34: if ( status == (0) || parser == (0) || requestParser == (0) ) return MOD
      +                          BUS_ERROR_NULLPTR;
 12387                           
 12388                           ;incstack = 0
 12389  00668A  501D               	movf	modbusParseResponse0102@status^0,w,c
 12390  00668C  101E               	iorwf	(modbusParseResponse0102@status+1)^0,w,c
 12391  00668E  B4D8               	btfsc	status,2,c
 12392  006690  D008               	goto	u21210
 12393  006692  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12394  006694  1020               	iorwf	(modbusParseResponse0102@parser+1)^0,w,c
 12395  006696  B4D8               	btfsc	status,2,c
 12396  006698  D004               	goto	u21210
 12397  00669A  5021               	movf	modbusParseResponse0102@requestParser^0,w,c
 12398  00669C  1022               	iorwf	(modbusParseResponse0102@requestParser+1)^0,w,c
 12399  00669E  A4D8               	btfss	status,2,c
 12400  0066A0  D002               	goto	l18835
 12401  0066A2                     u21210:
 12402  0066A2  0E04               	movlw	4
 12403  0066A4  0012               	return	
 12404  0066A6                     l18835:
 12405                           
 12406                           ;mpcoils.c: 35: if ( parser->_base.function != 1 && parser->_base.function != 2 )
 12407  0066A6  EE20 F001          	lfsr	2,1
 12408  0066AA  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12409  0066AC  26D9               	addwf	fsr2l,f,c
 12410  0066AE  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12411  0066B0  22DA               	addwfc	fsr2h,f,c
 12412  0066B2  04DE               	decf	postinc2,w,c
 12413  0066B4  B4D8               	btfsc	status,2,c
 12414  0066B6  D014               	goto	l18845
 12415  0066B8  EE20 F001          	lfsr	2,1
 12416  0066BC  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12417  0066BE  26D9               	addwf	fsr2l,f,c
 12418  0066C0  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12419  0066C2  22DA               	addwfc	fsr2h,f,c
 12420  0066C4  0E02               	movlw	2
 12421  0066C6  18DE               	xorwf	postinc2,w,c
 12422  0066C8  B4D8               	btfsc	status,2,c
 12423  0066CA  D00A               	goto	l18845
 12424                           
 12425                           ;mpcoils.c: 36: {;mpcoils.c: 37: status->parseError = MODBUS_FERROR_BADFUN;
 12426  0066CC  EE20 F023          	lfsr	2,35
 12427  0066D0  501D               	movf	modbusParseResponse0102@status^0,w,c
 12428  0066D2  26D9               	addwf	fsr2l,f,c
 12429  0066D4  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12430  0066D6  22DA               	addwfc	fsr2h,f,c
 12431  0066D8  0E0A               	movlw	10
 12432  0066DA                     L24:
 12433  0066DA  6EDF               	movwf	indf2,c
 12434                           
 12435                           ;mpcoils.c: 38: return MODBUS_ERROR_PARSE;
 12436  0066DC  0E05               	movlw	5
 12437  0066DE  0012               	return	
 12438  0066E0                     l18845:
 12439                           
 12440                           ;mpcoils.c: 39: };mpcoils.c: 43: if ( status->response.length != 5 + parser->response010
      +                          2.length || status->request.length != 8 )
 12441  0066E0  EE20 F014          	lfsr	2,20
 12442  0066E4  501D               	movf	modbusParseResponse0102@status^0,w,c
 12443  0066E6  26D9               	addwf	fsr2l,f,c
 12444  0066E8  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12445  0066EA  22DA               	addwfc	fsr2h,f,c
 12446  0066EC  50DF               	movf	indf2,w,c
 12447  0066EE  6E23               	movwf	??_modbusParseResponse0102^0,c
 12448  0066F0  6A24               	clrf	(??_modbusParseResponse0102+1)^0,c
 12449  0066F2  EE20 F002          	lfsr	2,2
 12450  0066F6  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12451  0066F8  26D9               	addwf	fsr2l,f,c
 12452  0066FA  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12453  0066FC  22DA               	addwfc	fsr2h,f,c
 12454  0066FE  50DF               	movf	indf2,w,c
 12455  006700  6E25               	movwf	(??_modbusParseResponse0102+2)^0,c
 12456  006702  6A26               	clrf	(??_modbusParseResponse0102+3)^0,c
 12457  006704  0E05               	movlw	5
 12458  006706  2625               	addwf	(??_modbusParseResponse0102+2)^0,f,c
 12459  006708  0E00               	movlw	0
 12460  00670A  2226               	addwfc	(??_modbusParseResponse0102+3)^0,f,c
 12461  00670C  5023               	movf	??_modbusParseResponse0102^0,w,c
 12462  00670E  1825               	xorwf	(??_modbusParseResponse0102+2)^0,w,c
 12463  006710  E10D               	bnz	l18849
 12464  006712  5024               	movf	(??_modbusParseResponse0102+1)^0,w,c
 12465  006714  1826               	xorwf	(??_modbusParseResponse0102+3)^0,w,c
 12466  006716  A4D8               	btfss	status,2,c
 12467  006718  D07D               	goto	u21310
 12468  00671A  EE20 F00A          	lfsr	2,10
 12469  00671E  501D               	movf	modbusParseResponse0102@status^0,w,c
 12470  006720  26D9               	addwf	fsr2l,f,c
 12471  006722  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12472  006724  22DA               	addwfc	fsr2h,f,c
 12473  006726  0E08               	movlw	8
 12474  006728  18DE               	xorwf	postinc2,w,c
 12475  00672A  A4D8               	btfss	status,2,c
 12476  00672C                     l18849:
 12477  00672C  D073               	goto	u21310
 12478                           
 12479                           ;mpcoils.c: 47: };mpcoils.c: 49: uint16_t count = modbusMatchEndian( requestParser->requ
      +                          est0102.count );
 12480                           
 12481                           ;mpcoils.c: 44: {;mpcoils.c: 45: status->parseError = MODBUS_FERROR_LENGTH;
 12482  00672E  EE20 F004          	lfsr	2,4
 12483  006732  5021               	movf	modbusParseResponse0102@requestParser^0,w,c
 12484  006734  26D9               	addwf	fsr2l,f,c
 12485  006736  5022               	movf	(modbusParseResponse0102@requestParser+1)^0,w,c
 12486  006738  22DA               	addwfc	fsr2h,f,c
 12487  00673A  CFDE F01B          	movff	postinc2,modbusMatchEndian@data
 12488  00673E  CFDD F01C          	movff	postdec2,modbusMatchEndian@data+1
 12489  006742  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 12490  006746  C01B  F029         	movff	?_modbusMatchEndian,modbusParseResponse0102@count
 12491  00674A  C01C  F02A         	movff	?_modbusMatchEndian+1,modbusParseResponse0102@count+1
 12492                           
 12493                           ;mpcoils.c: 52: if ( parser->_base.address == 0 )
 12494  00674E  C01F  FFD9         	movff	modbusParseResponse0102@parser,fsr2l
 12495  006752  C020  FFDA         	movff	modbusParseResponse0102@parser+1,fsr2h
 12496  006756  50DF               	movf	indf2,w,c
 12497  006758  A4D8               	btfss	status,2,c
 12498  00675A  D008               	goto	l18865
 12499                           
 12500                           ;mpcoils.c: 53: {;mpcoils.c: 54: status->parseError = MODBUS_FERROR_BROADCAST;
 12501  00675C  EE20 F023          	lfsr	2,35
 12502  006760  501D               	movf	modbusParseResponse0102@status^0,w,c
 12503  006762  26D9               	addwf	fsr2l,f,c
 12504  006764  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12505  006766  22DA               	addwfc	fsr2h,f,c
 12506  006768  0E12               	movlw	18
 12507  00676A  D7B7               	goto	L24
 12508  00676C                     l18865:
 12509                           
 12510                           ;mpcoils.c: 56: };mpcoils.c: 58: if ( parser->_base.address != requestParser->_base.addr
      +                          ess )
 12511  00676C  C021  FFD9         	movff	modbusParseResponse0102@requestParser,fsr2l
 12512  006770  C022  FFDA         	movff	modbusParseResponse0102@requestParser+1,fsr2h
 12513  006774  C01F  FFE1         	movff	modbusParseResponse0102@parser,fsr1l
 12514  006778  C020  FFE2         	movff	modbusParseResponse0102@parser+1,fsr1h
 12515  00677C  50DE               	movf	postinc2,w,c
 12516  00677E  18E6               	xorwf	postinc1,w,c
 12517  006780  B4D8               	btfsc	status,2,c
 12518  006782  D008               	goto	l18873
 12519                           
 12520                           ;mpcoils.c: 59: {;mpcoils.c: 60: status->parseError = MODBUS_FERROR_MISM_ADDR;
 12521  006784  EE20 F023          	lfsr	2,35
 12522  006788  501D               	movf	modbusParseResponse0102@status^0,w,c
 12523  00678A  26D9               	addwf	fsr2l,f,c
 12524  00678C  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12525  00678E  22DA               	addwfc	fsr2h,f,c
 12526  006790  0E0D               	movlw	13
 12527  006792  D7A3               	goto	L24
 12528  006794                     l18873:
 12529                           
 12530                           ;mpcoils.c: 62: };mpcoils.c: 64: if ( parser->_base.function != requestParser->_base.fun
      +                          ction )
 12531  006794  EE20 F001          	lfsr	2,1
 12532  006798  5021               	movf	modbusParseResponse0102@requestParser^0,w,c
 12533  00679A  26D9               	addwf	fsr2l,f,c
 12534  00679C  5022               	movf	(modbusParseResponse0102@requestParser+1)^0,w,c
 12535  00679E  22DA               	addwfc	fsr2h,f,c
 12536  0067A0  EE10 F001          	lfsr	1,1
 12537  0067A4  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12538  0067A6  26E1               	addwf	fsr1l,f,c
 12539  0067A8  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12540  0067AA  22E2               	addwfc	fsr1h,f,c
 12541  0067AC  50DE               	movf	postinc2,w,c
 12542  0067AE  18E6               	xorwf	postinc1,w,c
 12543  0067B0  B4D8               	btfsc	status,2,c
 12544  0067B2  D008               	goto	l18881
 12545                           
 12546                           ;mpcoils.c: 65: {;mpcoils.c: 66: status->parseError = MODBUS_FERROR_MISM_FUN;
 12547  0067B4  EE20 F023          	lfsr	2,35
 12548  0067B8  501D               	movf	modbusParseResponse0102@status^0,w,c
 12549  0067BA  26D9               	addwf	fsr2l,f,c
 12550  0067BC  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12551  0067BE  22DA               	addwfc	fsr2h,f,c
 12552  0067C0  0E0C               	movlw	12
 12553  0067C2  D78B               	goto	L24
 12554  0067C4                     l18881:
 12555                           
 12556                           ;mpcoils.c: 68: };mpcoils.c: 71: if ( parser->response0102.length == 0 || parser->respon
      +                          se0102.length > 250 || parser->response0102.length != modbusBitsToBytes( count ) )
 12557  0067C4  EE20 F002          	lfsr	2,2
 12558  0067C8  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12559  0067CA  26D9               	addwf	fsr2l,f,c
 12560  0067CC  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12561  0067CE  22DA               	addwfc	fsr2h,f,c
 12562  0067D0  50DF               	movf	indf2,w,c
 12563  0067D2  B4D8               	btfsc	status,2,c
 12564  0067D4  D01F               	goto	u21310
 12565  0067D6  EE20 F002          	lfsr	2,2
 12566  0067DA  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12567  0067DC  26D9               	addwf	fsr2l,f,c
 12568  0067DE  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12569  0067E0  22DA               	addwfc	fsr2h,f,c
 12570  0067E2  0EFB               	movlw	251
 12571  0067E4  60DF               	cpfslt	indf2,c
 12572  0067E6  D016               	goto	u21310
 12573  0067E8  C029  F00F         	movff	modbusParseResponse0102@count,modbusBitsToBytes@n
 12574  0067EC  C02A  F010         	movff	modbusParseResponse0102@count+1,modbusBitsToBytes@n+1
 12575  0067F0  ECAD  F067         	call	_modbusBitsToBytes	;wreg free
 12576  0067F4  EE20 F002          	lfsr	2,2
 12577  0067F8  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12578  0067FA  26D9               	addwf	fsr2l,f,c
 12579  0067FC  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12580  0067FE  22DA               	addwfc	fsr2h,f,c
 12581  006800  50DF               	movf	indf2,w,c
 12582  006802  6E23               	movwf	??_modbusParseResponse0102^0,c
 12583  006804  6A24               	clrf	(??_modbusParseResponse0102+1)^0,c
 12584  006806  500F               	movf	?_modbusBitsToBytes^0,w,c
 12585  006808  1823               	xorwf	??_modbusParseResponse0102^0,w,c
 12586  00680A  E104               	bnz	u21310
 12587  00680C  5010               	movf	(?_modbusBitsToBytes+1)^0,w,c
 12588  00680E  1824               	xorwf	(??_modbusParseResponse0102+1)^0,w,c
 12589  006810  B4D8               	btfsc	status,2,c
 12590  006812  D008               	goto	l18893
 12591  006814                     u21310:
 12592                           
 12593                           ;mpcoils.c: 72: {;mpcoils.c: 73: status->parseError = MODBUS_FERROR_LENGTH;
 12594  006814  EE20 F023          	lfsr	2,35
 12595  006818  501D               	movf	modbusParseResponse0102@status^0,w,c
 12596  00681A  26D9               	addwf	fsr2l,f,c
 12597  00681C  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12598  00681E  22DA               	addwfc	fsr2h,f,c
 12599  006820  0E02               	movlw	2
 12600  006822  D75B               	goto	L24
 12601  006824                     l18893:
 12602                           
 12603                           ;mpcoils.c: 75: };mpcoils.c: 88: if ( modbusBitsToBytes( count ) * sizeof( uint8_t ) > 3
      +                           ) return MODBUS_ERROR_ALLOC;
 12604  006824  C029  F00F         	movff	modbusParseResponse0102@count,modbusBitsToBytes@n
 12605  006828  C02A  F010         	movff	modbusParseResponse0102@count+1,modbusBitsToBytes@n+1
 12606  00682C  ECAD  F067         	call	_modbusBitsToBytes	;wreg free
 12607  006830  5010               	movf	(?_modbusBitsToBytes+1)^0,w,c
 12608  006832  E104               	bnz	u21320
 12609  006834  0E04               	movlw	4
 12610  006836  5C0F               	subwf	?_modbusBitsToBytes^0,w,c
 12611  006838  A0D8               	btfss	status,0,c
 12612  00683A  D002               	goto	l18899
 12613  00683C                     u21320:
 12614  00683C  0E02               	movlw	2
 12615  00683E  0012               	return	
 12616  006840                     l18899:
 12617                           
 12618                           ;mpcoils.c: 89: memset( status->data.coils, 0, modbusBitsToBytes( count ) * sizeof( uint
      +                          8_t ) );
 12619  006840  0E1D               	movlw	29
 12620  006842  241D               	addwf	modbusParseResponse0102@status^0,w,c
 12621  006844  6E15               	movwf	memset@p1^0,c
 12622  006846  0E00               	movlw	0
 12623  006848  201E               	addwfc	(modbusParseResponse0102@status+1)^0,w,c
 12624  00684A  6E16               	movwf	(memset@p1+1)^0,c
 12625  00684C  0E00               	movlw	0
 12626  00684E  6E18               	movwf	(memset@c+1)^0,c
 12627  006850  0E00               	movlw	0
 12628  006852  6E17               	movwf	memset@c^0,c
 12629  006854  C029  F00F         	movff	modbusParseResponse0102@count,modbusBitsToBytes@n
 12630  006858  C02A  F010         	movff	modbusParseResponse0102@count+1,modbusBitsToBytes@n+1
 12631  00685C  ECAD  F067         	call	_modbusBitsToBytes	;wreg free
 12632  006860  C00F  F019         	movff	?_modbusBitsToBytes,memset@n
 12633  006864  C010  F01A         	movff	?_modbusBitsToBytes+1,memset@n+1
 12634  006868  ECD6  F06C         	call	_memset	;wreg free
 12635                           
 12636                           ;mpcoils.c: 93: memcpy( status->data.coils, parser->response0102.values, parser->respons
      +                          e0102.length );
 12637  00686C  0E1D               	movlw	29
 12638  00686E  241D               	addwf	modbusParseResponse0102@status^0,w,c
 12639  006870  6E0F               	movwf	memcpy@d1^0,c
 12640  006872  0E00               	movlw	0
 12641  006874  201E               	addwfc	(modbusParseResponse0102@status+1)^0,w,c
 12642  006876  6E10               	movwf	(memcpy@d1+1)^0,c
 12643  006878  0E03               	movlw	3
 12644  00687A  241F               	addwf	modbusParseResponse0102@parser^0,w,c
 12645  00687C  6E11               	movwf	memcpy@s1^0,c
 12646  00687E  0E00               	movlw	0
 12647  006880  2020               	addwfc	(modbusParseResponse0102@parser+1)^0,w,c
 12648  006882  6E12               	movwf	(memcpy@s1+1)^0,c
 12649  006884  EE20 F002          	lfsr	2,2
 12650  006888  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12651  00688A  26D9               	addwf	fsr2l,f,c
 12652  00688C  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12653  00688E  22DA               	addwfc	fsr2h,f,c
 12654  006890  50DF               	movf	indf2,w,c
 12655  006892  6E23               	movwf	??_modbusParseResponse0102^0,c
 12656  006894  5023               	movf	??_modbusParseResponse0102^0,w,c
 12657  006896  6E13               	movwf	memcpy@n^0,c
 12658  006898  6A14               	clrf	(memcpy@n+1)^0,c
 12659  00689A  ECA6  F068         	call	_memcpy	;wreg free
 12660                           
 12661                           ;mpcoils.c: 96: status->data.function = parser->_base.function;
 12662  00689E  EE20 F001          	lfsr	2,1
 12663  0068A2  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12664  0068A4  26D9               	addwf	fsr2l,f,c
 12665  0068A6  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12666  0068A8  22DA               	addwfc	fsr2h,f,c
 12667  0068AA  EE10 F01C          	lfsr	1,28
 12668  0068AE  501D               	movf	modbusParseResponse0102@status^0,w,c
 12669  0068B0  26E1               	addwf	fsr1l,f,c
 12670  0068B2  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12671  0068B4  22E2               	addwfc	fsr1h,f,c
 12672  0068B6  CFDF FFE7          	movff	indf2,indf1
 12673                           
 12674                           ;mpcoils.c: 97: status->data.address = parser->_base.address;
 12675  0068BA  C01F  FFD9         	movff	modbusParseResponse0102@parser,fsr2l
 12676  0068BE  C020  FFDA         	movff	modbusParseResponse0102@parser+1,fsr2h
 12677  0068C2  EE10 F015          	lfsr	1,21
 12678  0068C6  501D               	movf	modbusParseResponse0102@status^0,w,c
 12679  0068C8  26E1               	addwf	fsr1l,f,c
 12680  0068CA  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12681  0068CC  22E2               	addwfc	fsr1h,f,c
 12682  0068CE  CFDF FFE7          	movff	indf2,indf1
 12683                           
 12684                           ;mpcoils.c: 98: status->data.type = parser->_base.function == 1 ? MODBUS_COIL : MODBUS_D
      +                          ISCRETE_INPUT;
 12685  0068D2  EE20 F001          	lfsr	2,1
 12686  0068D6  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12687  0068D8  26D9               	addwf	fsr2l,f,c
 12688  0068DA  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12689  0068DC  22DA               	addwfc	fsr2h,f,c
 12690  0068DE  04DE               	decf	postinc2,w,c
 12691  0068E0  B4D8               	btfsc	status,2,c
 12692  0068E2  D004               	goto	l18909
 12693  0068E4  0E00               	movlw	0
 12694  0068E6  6E28               	movwf	(_modbusParseResponse0102$2350+1)^0,c
 12695  0068E8  0E08               	movlw	8
 12696  0068EA  D003               	goto	L25
 12697  0068EC                     l18909:
 12698  0068EC  0E00               	movlw	0
 12699  0068EE  6E28               	movwf	(_modbusParseResponse0102$2350+1)^0,c
 12700  0068F0  0E04               	movlw	4
 12701  0068F2                     L25:
 12702  0068F2  6E27               	movwf	_modbusParseResponse0102$2350^0,c
 12703  0068F4  EE20 F01B          	lfsr	2,27
 12704  0068F8  501D               	movf	modbusParseResponse0102@status^0,w,c
 12705  0068FA  26D9               	addwf	fsr2l,f,c
 12706  0068FC  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12707  0068FE  22DA               	addwfc	fsr2h,f,c
 12708  006900  C027  FFDF         	movff	_modbusParseResponse0102$2350,indf2
 12709                           
 12710                           ;mpcoils.c: 99: status->data.index = modbusMatchEndian( requestParser->request0102.index
      +                           );
 12711  006904  EE20 F002          	lfsr	2,2
 12712  006908  5021               	movf	modbusParseResponse0102@requestParser^0,w,c
 12713  00690A  26D9               	addwf	fsr2l,f,c
 12714  00690C  5022               	movf	(modbusParseResponse0102@requestParser+1)^0,w,c
 12715  00690E  22DA               	addwfc	fsr2h,f,c
 12716  006910  CFDE F01B          	movff	postinc2,modbusMatchEndian@data
 12717  006914  CFDD F01C          	movff	postdec2,modbusMatchEndian@data+1
 12718  006918  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 12719  00691C  EE20 F016          	lfsr	2,22
 12720  006920  501D               	movf	modbusParseResponse0102@status^0,w,c
 12721  006922  26D9               	addwf	fsr2l,f,c
 12722  006924  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12723  006926  22DA               	addwfc	fsr2h,f,c
 12724  006928  C01B  FFDE         	movff	?_modbusMatchEndian,postinc2
 12725  00692C  C01C  FFDD         	movff	?_modbusMatchEndian+1,postdec2
 12726                           
 12727                           ;mpcoils.c: 100: status->data.count = count;
 12728  006930  EE20 F018          	lfsr	2,24
 12729  006934  501D               	movf	modbusParseResponse0102@status^0,w,c
 12730  006936  26D9               	addwf	fsr2l,f,c
 12731  006938  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12732  00693A  22DA               	addwfc	fsr2h,f,c
 12733  00693C  C029  FFDE         	movff	modbusParseResponse0102@count,postinc2
 12734  006940  C02A  FFDD         	movff	modbusParseResponse0102@count+1,postdec2
 12735                           
 12736                           ;mpcoils.c: 101: status->data.length = parser->response0102.length;
 12737  006944  EE20 F002          	lfsr	2,2
 12738  006948  501F               	movf	modbusParseResponse0102@parser^0,w,c
 12739  00694A  26D9               	addwf	fsr2l,f,c
 12740  00694C  5020               	movf	(modbusParseResponse0102@parser+1)^0,w,c
 12741  00694E  22DA               	addwfc	fsr2h,f,c
 12742  006950  EE10 F01A          	lfsr	1,26
 12743  006954  501D               	movf	modbusParseResponse0102@status^0,w,c
 12744  006956  26E1               	addwf	fsr1l,f,c
 12745  006958  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12746  00695A  22E2               	addwfc	fsr1h,f,c
 12747  00695C  CFDF FFE7          	movff	indf2,indf1
 12748                           
 12749                           ;mpcoils.c: 102: status->parseError = MODBUS_FERROR_OK;
 12750  006960  EE20 F023          	lfsr	2,35
 12751  006964  501D               	movf	modbusParseResponse0102@status^0,w,c
 12752  006966  26D9               	addwf	fsr2l,f,c
 12753  006968  501E               	movf	(modbusParseResponse0102@status+1)^0,w,c
 12754  00696A  22DA               	addwfc	fsr2h,f,c
 12755  00696C  0E00               	movlw	0
 12756  00696E  6EDF               	movwf	indf2,c
 12757                           
 12758                           ;mpcoils.c: 103: return MODBUS_ERROR_OK;
 12759  006970  0E00               	movlw	0
 12760  006972  0012               	return		;funcret
 12761  006974                     __end_of_modbusParseResponse0102:
 12762                           	callstack 0
 12763                           
 12764 ;; *************** function _modbusParseException *****************
 12765 ;; Defined at:
 12766 ;;		line 30 in file "lightmodbus/master.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;  status          2   14[COMRAM] PTR struct modbusMaster
 12769 ;;		 -> g_master(37), 
 12770 ;;  parser          2   16[COMRAM] PTR struct modbusParser
 12771 ;;		 -> g_master.response.frame(9), 
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;		None
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  1    wreg      enum E352
 12776 ;; Registers used:
 12777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/2
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;Total ram usage:        4 bytes
 12788 ;; Hardware stack levels used: 1
 12789 ;; Hardware stack levels required when called: 4
 12790 ;; This function calls:
 12791 ;;		Nothing
 12792 ;; This function is called by:
 12793 ;;		_modbusParseResponse
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	text50
 12798  00C8BC                     __ptext50:
 12799                           	callstack 0
 12800  00C8BC                     _modbusParseException:
 12801                           	callstack 23
 12802                           
 12803                           ;master.c: 35: if ( status == (0) || parser == (0) ) return MODBUS_ERROR_NULLPTR;
 12804                           
 12805                           ;incstack = 0
 12806  00C8BC  500F               	movf	modbusParseException@status^0,w,c
 12807  00C8BE  1010               	iorwf	(modbusParseException@status+1)^0,w,c
 12808  00C8C0  B4D8               	btfsc	status,2,c
 12809  00C8C2  D004               	goto	u21740
 12810  00C8C4  5011               	movf	modbusParseException@parser^0,w,c
 12811  00C8C6  1012               	iorwf	(modbusParseException@parser+1)^0,w,c
 12812  00C8C8  A4D8               	btfss	status,2,c
 12813  00C8CA  D002               	goto	l19169
 12814  00C8CC                     u21740:
 12815  00C8CC  0E04               	movlw	4
 12816  00C8CE  0012               	return	
 12817  00C8D0                     l19169:
 12818                           
 12819                           ;master.c: 38: status->exception.address = parser->exception.address;
 12820  00C8D0  C011  FFD9         	movff	modbusParseException@parser,fsr2l
 12821  00C8D4  C012  FFDA         	movff	modbusParseException@parser+1,fsr2h
 12822  00C8D8  EE10 F020          	lfsr	1,32
 12823  00C8DC  500F               	movf	modbusParseException@status^0,w,c
 12824  00C8DE  26E1               	addwf	fsr1l,f,c
 12825  00C8E0  5010               	movf	(modbusParseException@status+1)^0,w,c
 12826  00C8E2  22E2               	addwfc	fsr1h,f,c
 12827  00C8E4  CFDF FFE7          	movff	indf2,indf1
 12828                           
 12829                           ;master.c: 39: status->exception.function = parser->exception.function;
 12830  00C8E8  EE20 F001          	lfsr	2,1
 12831  00C8EC  5011               	movf	modbusParseException@parser^0,w,c
 12832  00C8EE  26D9               	addwf	fsr2l,f,c
 12833  00C8F0  5012               	movf	(modbusParseException@parser+1)^0,w,c
 12834  00C8F2  22DA               	addwfc	fsr2h,f,c
 12835  00C8F4  EE10 F021          	lfsr	1,33
 12836  00C8F8  500F               	movf	modbusParseException@status^0,w,c
 12837  00C8FA  26E1               	addwf	fsr1l,f,c
 12838  00C8FC  5010               	movf	(modbusParseException@status+1)^0,w,c
 12839  00C8FE  22E2               	addwfc	fsr1h,f,c
 12840  00C900  CFDF FFE7          	movff	indf2,indf1
 12841                           
 12842                           ;master.c: 40: status->exception.code = parser->exception.code;
 12843  00C904  EE20 F002          	lfsr	2,2
 12844  00C908  5011               	movf	modbusParseException@parser^0,w,c
 12845  00C90A  26D9               	addwf	fsr2l,f,c
 12846  00C90C  5012               	movf	(modbusParseException@parser+1)^0,w,c
 12847  00C90E  22DA               	addwfc	fsr2h,f,c
 12848  00C910  EE10 F022          	lfsr	1,34
 12849  00C914  500F               	movf	modbusParseException@status^0,w,c
 12850  00C916  26E1               	addwf	fsr1l,f,c
 12851  00C918  5010               	movf	(modbusParseException@status+1)^0,w,c
 12852  00C91A  22E2               	addwfc	fsr1h,f,c
 12853  00C91C  CFDF FFE7          	movff	indf2,indf1
 12854                           
 12855                           ;master.c: 42: return MODBUS_ERROR_EXCEPTION;
 12856  00C920  0E01               	movlw	1
 12857  00C922  0012               	return		;funcret
 12858  00C924                     __end_of_modbusParseException:
 12859                           	callstack 0
 12860                           
 12861 ;; *************** function _modbusMasterEnd *****************
 12862 ;; Defined at:
 12863 ;;		line 258 in file "lightmodbus/master.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;  status          2   28[COMRAM] PTR struct modbusMaster
 12866 ;;		 -> g_master(37), 
 12867 ;; Auto vars:     Size  Location     Type
 12868 ;;		None
 12869 ;; Return value:  Size  Location     Type
 12870 ;;                  1    wreg      enum E352
 12871 ;; Registers used:
 12872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12873 ;; Tracked objects:
 12874 ;;		On entry : 3F/1
 12875 ;;		On exit  : 0/0
 12876 ;;		Unchanged: 0/0
 12877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12882 ;;Total ram usage:        2 bytes
 12883 ;; Hardware stack levels used: 1
 12884 ;; Hardware stack levels required when called: 5
 12885 ;; This function calls:
 12886 ;;		_memset
 12887 ;; This function is called by:
 12888 ;;		_modbus_master_task
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           	psect	text51
 12893  00CC7C                     __ptext51:
 12894                           	callstack 0
 12895  00CC7C                     _modbusMasterEnd:
 12896                           	callstack 23
 12897                           
 12898                           ; BSR set to: 1
 12899                           ;master.c: 261: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 12900                           
 12901                           ;incstack = 0
 12902  00CC7C  501D               	movf	modbusMasterEnd@status^0,w,c
 12903  00CC7E  101E               	iorwf	(modbusMasterEnd@status+1)^0,w,c
 12904  00CC80  B4D8               	btfsc	status,2,c
 12905  00CC82  0012               	return	
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;master.c: 268: memset( status->request.frame, 0, 9 );
 12909  00CC84  0E01               	movlw	1
 12910  00CC86  241D               	addwf	modbusMasterEnd@status^0,w,c
 12911  00CC88  6E15               	movwf	memset@p1^0,c
 12912  00CC8A  0E00               	movlw	0
 12913  00CC8C  201E               	addwfc	(modbusMasterEnd@status+1)^0,w,c
 12914  00CC8E  6E16               	movwf	(memset@p1+1)^0,c
 12915  00CC90  0E00               	movlw	0
 12916  00CC92  6E18               	movwf	(memset@c+1)^0,c
 12917  00CC94  0E00               	movlw	0
 12918  00CC96  6E17               	movwf	memset@c^0,c
 12919  00CC98  0E00               	movlw	0
 12920  00CC9A  6E1A               	movwf	(memset@n+1)^0,c
 12921  00CC9C  0E09               	movlw	9
 12922  00CC9E  6E19               	movwf	memset@n^0,c
 12923  00CCA0  ECD6  F06C         	call	_memset	;wreg free
 12924                           
 12925                           ;master.c: 275: memset( status->data.coils, 0, 3 );
 12926  00CCA4  0E1D               	movlw	29
 12927  00CCA6  241D               	addwf	modbusMasterEnd@status^0,w,c
 12928  00CCA8  6E15               	movwf	memset@p1^0,c
 12929  00CCAA  0E00               	movlw	0
 12930  00CCAC  201E               	addwfc	(modbusMasterEnd@status+1)^0,w,c
 12931  00CCAE  6E16               	movwf	(memset@p1+1)^0,c
 12932  00CCB0  0E00               	movlw	0
 12933  00CCB2  6E18               	movwf	(memset@c+1)^0,c
 12934  00CCB4  0E00               	movlw	0
 12935  00CCB6  6E17               	movwf	memset@c^0,c
 12936  00CCB8  0E00               	movlw	0
 12937  00CCBA  6E1A               	movwf	(memset@n+1)^0,c
 12938  00CCBC  0E03               	movlw	3
 12939  00CCBE  6E19               	movwf	memset@n^0,c
 12940  00CCC0  ECD6  F06C         	call	_memset	;wreg free
 12941                           
 12942                           ;master.c: 279: status->predictedResponseLength = 0;
 12943  00CCC4  C01D  FFD9         	movff	modbusMasterEnd@status,fsr2l
 12944  00CCC8  C01E  FFDA         	movff	modbusMasterEnd@status+1,fsr2h
 12945  00CCCC  0E00               	movlw	0
 12946  00CCCE  6EDF               	movwf	indf2,c
 12947  00CCD0  0012               	return		;funcret
 12948  00CCD2                     __end_of_modbusMasterEnd:
 12949                           	callstack 0
 12950                           
 12951 ;; *************** function _buffer_de_queue_bool *****************
 12952 ;; Defined at:
 12953 ;;		line 35 in file "util/buffer.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 12956 ;;		 -> g_modbus_queue(67), 
 12957 ;;  ch              1   16[COMRAM] PTR unsigned char 
 12958 ;;		 -> modbus_slave_task@byte(1), modbus_master_task@byte(1), 
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;		None
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  1    wreg      unsigned char 
 12963 ;; Registers used:
 12964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12965 ;; Tracked objects:
 12966 ;;		On entry : 3F/1
 12967 ;;		On exit  : 3F/1
 12968 ;;		Unchanged: 3F/0
 12969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12970 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12972 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12974 ;;Total ram usage:        6 bytes
 12975 ;; Hardware stack levels used: 1
 12976 ;; Hardware stack levels required when called: 4
 12977 ;; This function calls:
 12978 ;;		Nothing
 12979 ;; This function is called by:
 12980 ;;		_modbus_master_task
 12981 ;;		_modbus_slave_task
 12982 ;; This function uses a non-reentrant model
 12983 ;;
 12984                           
 12985                           	psect	text52
 12986  00C204                     __ptext52:
 12987                           	callstack 0
 12988  00C204                     _buffer_de_queue_bool:
 12989                           	callstack 24
 12990                           
 12991                           ; BSR set to: 1
 12992                           ;buffer.c: 37: if (queue->read_pos == queue->write_pos)
 12993                           
 12994                           ;incstack = 0
 12995  00C204  EE20 F002          	lfsr	2,2
 12996  00C208  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 12997  00C20A  26D9               	addwf	fsr2l,f,c
 12998  00C20C  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 12999  00C20E  22DA               	addwfc	fsr2h,f,c
 13000  00C210  EE10 F001          	lfsr	1,1
 13001  00C214  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 13002  00C216  26E1               	addwf	fsr1l,f,c
 13003  00C218  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 13004  00C21A  22E2               	addwfc	fsr1h,f,c
 13005  00C21C  50DE               	movf	postinc2,w,c
 13006  00C21E  18E6               	xorwf	postinc1,w,c
 13007  00C220  A4D8               	btfss	status,2,c
 13008  00C222  D002               	goto	l14573
 13009                           
 13010                           ; BSR set to: 1
 13011                           ;buffer.c: 38: return 0;
 13012  00C224  0E00               	movlw	0
 13013  00C226  0012               	return	
 13014  00C228                     l14573:
 13015                           
 13016                           ; BSR set to: 1
 13017                           ;buffer.c: 39: else {;buffer.c: 40: *ch = queue->buffer[queue->read_pos];
 13018  00C228  EE20 F001          	lfsr	2,1
 13019  00C22C  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 13020  00C22E  26D9               	addwf	fsr2l,f,c
 13021  00C230  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 13022  00C232  22DA               	addwfc	fsr2h,f,c
 13023  00C234  50DF               	movf	indf2,w,c
 13024  00C236  6E12               	movwf	??_buffer_de_queue_bool^0,c
 13025  00C238  5012               	movf	??_buffer_de_queue_bool^0,w,c
 13026  00C23A  240F               	addwf	buffer_de_queue_bool@queue^0,w,c
 13027  00C23C  6E13               	movwf	(??_buffer_de_queue_bool+1)^0,c
 13028  00C23E  0E00               	movlw	0
 13029  00C240  2010               	addwfc	(buffer_de_queue_bool@queue+1)^0,w,c
 13030  00C242  6E14               	movwf	(??_buffer_de_queue_bool+2)^0,c
 13031  00C244  0E03               	movlw	3
 13032  00C246  2413               	addwf	(??_buffer_de_queue_bool+1)^0,w,c
 13033  00C248  6ED9               	movwf	fsr2l,c
 13034  00C24A  0E00               	movlw	0
 13035  00C24C  2014               	addwfc	(??_buffer_de_queue_bool+2)^0,w,c
 13036  00C24E  6EDA               	movwf	fsr2h,c
 13037  00C250  5011               	movf	buffer_de_queue_bool@ch^0,w,c
 13038  00C252  6EE1               	movwf	fsr1l,c
 13039  00C254  6AE2               	clrf	fsr1h,c
 13040  00C256  CFDF FFE7          	movff	indf2,indf1
 13041                           
 13042                           ;buffer.c: 41: queue->read_pos = (++queue->read_pos)%64;
 13043  00C25A  EE20 F001          	lfsr	2,1
 13044  00C25E  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 13045  00C260  26D9               	addwf	fsr2l,f,c
 13046  00C262  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 13047  00C264  22DA               	addwfc	fsr2h,f,c
 13048  00C266  EE10 F001          	lfsr	1,1
 13049  00C26A  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 13050  00C26C  26E1               	addwf	fsr1l,f,c
 13051  00C26E  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 13052  00C270  22E2               	addwfc	fsr1h,f,c
 13053  00C272  2AE7               	incf	indf1,f,c
 13054  00C274  50E7               	movf	indf1,w,c
 13055  00C276  0B3F               	andlw	63
 13056  00C278  6EDF               	movwf	indf2,c
 13057                           
 13058                           ; BSR set to: 1
 13059                           ;buffer.c: 42: };buffer.c: 43: return 1;
 13060  00C27A  0E01               	movlw	1
 13061                           
 13062                           ; BSR set to: 1
 13063  00C27C  0012               	return		;funcret
 13064  00C27E                     __end_of_buffer_de_queue_bool:
 13065                           	callstack 0
 13066                           
 13067 ;; *************** function _modbus_master_relay_status_task *****************
 13068 ;; Defined at:
 13069 ;;		line 242 in file "app_modbus.c"
 13070 ;; Parameters:    Size  Location     Type
 13071 ;;		None
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;		None
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  1    wreg      void 
 13076 ;; Registers used:
 13077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13078 ;; Tracked objects:
 13079 ;;		On entry : 3E/1
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13087 ;;Total ram usage:        0 bytes
 13088 ;; Hardware stack levels used: 1
 13089 ;; Hardware stack levels required when called: 9
 13090 ;; This function calls:
 13091 ;;		_modbus_relay_status
 13092 ;; This function is called by:
 13093 ;;		_modbus_task
 13094 ;; This function uses a non-reentrant model
 13095 ;;
 13096                           
 13097                           	psect	text53
 13098  00DA82                     __ptext53:
 13099                           	callstack 0
 13100  00DA82                     _modbus_master_relay_status_task:
 13101                           	callstack 20
 13102                           
 13103                           ;app_modbus.c: 244: if (g_relay_status_count >= 1000) {
 13104                           
 13105                           ; BSR set to: 1
 13106                           ;incstack = 0
 13107  00DA82  0EE8               	movlw	232
 13108  00DA84  0100               	movlb	0	; () banked
 13109  00DA86  5DE2               	subwf	_g_relay_status_count& (0+255),w,b	;volatile
 13110  00DA88  0E03               	movlw	3
 13111  00DA8A  59E3               	subwfb	(_g_relay_status_count+1)& (0+255),w,b	;volatile
 13112  00DA8C  A0D8               	btfss	status,0,c
 13113  00DA8E  0012               	return	
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;app_modbus.c: 245: g_relay_status_count = 0;
 13117  00DA90  0E00               	movlw	0
 13118  00DA92  6FE3               	movwf	(_g_relay_status_count+1)& (0+255),b	;volatile
 13119  00DA94  0E00               	movlw	0
 13120  00DA96  6FE2               	movwf	_g_relay_status_count& (0+255),b	;volatile
 13121                           
 13122                           ;app_modbus.c: 246: if (g_modbus.fire_flag == 0 && g_modbus.event_flag == 0) {
 13123  00DA98  0101               	movlb	1	; () banked
 13124  00DA9A  5127               	movf	(_g_modbus+3)& (0+255),w,b
 13125  00DA9C  A4D8               	btfss	status,2,c
 13126  00DA9E  0012               	return	
 13127                           
 13128                           ; BSR set to: 1
 13129  00DAA0  5126               	movf	(_g_modbus+2)& (0+255),w,b
 13130  00DAA2  A4D8               	btfss	status,2,c
 13131  00DAA4  0012               	return	
 13132                           
 13133                           ; BSR set to: 1
 13134                           ;app_modbus.c: 247: modbus_relay_status();
 13135  00DAA6  EC0A  F06A         	call	_modbus_relay_status	;wreg free
 13136  00DAAA  0012               	return		;funcret
 13137  00DAAC                     __end_of_modbus_master_relay_status_task:
 13138                           	callstack 0
 13139                           
 13140 ;; *************** function _modbus_relay_status *****************
 13141 ;; Defined at:
 13142 ;;		line 146 in file "app_modbus.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;		None
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;  err             1   45[COMRAM] enum E164
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  1    wreg      unsigned char 
 13149 ;; Registers used:
 13150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13151 ;; Tracked objects:
 13152 ;;		On entry : 3F/1
 13153 ;;		On exit  : 0/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13160 ;;Total ram usage:        1 bytes
 13161 ;; Hardware stack levels used: 1
 13162 ;; Hardware stack levels required when called: 8
 13163 ;; This function calls:
 13164 ;;		_modbusBuildRequest01@mbcoils$F4614
 13165 ;;		_rs485_writeBytes
 13166 ;; This function is called by:
 13167 ;;		_modbus_master_relay_status_task
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171                           	psect	text54
 13172  00D414                     __ptext54:
 13173                           	callstack 0
 13174  00D414                     _modbus_relay_status:
 13175                           	callstack 20
 13176                           
 13177                           ; BSR set to: 1
 13178                           ;app_modbus.c: 148: g_modbus.relay_status = RLY_NONE;
 13179                           
 13180                           ;incstack = 0
 13181  00D414  0E00               	movlw	0
 13182  00D416  6F2E               	movwf	(_g_modbus+10)& (0+255),b
 13183                           
 13184                           ; BSR set to: 1
 13185                           ;app_modbus.c: 149: ModbusError err = modbusBuildRequest01(&g_master, g_nvm.flash.ctrl_s
      +                          lave_id,;app_modbus.c: 150: 600, 0x0008);
 13186  00D418  0EB5               	movlw	low _g_master
 13187  00D41A  6E27               	movwf	modbusBuildRequest01@mbcoils$F4614@status^0,c
 13188  00D41C  0E02               	movlw	high _g_master
 13189  00D41E  6E28               	movwf	(modbusBuildRequest01@mbcoils$F4614@status+1)^0,c
 13190  00D420  C156  F029         	movff	_g_nvm+4,modbusBuildRequest01@mbcoils$F4614@address
 13191  00D424  0E02               	movlw	2
 13192  00D426  6E2B               	movwf	(modbusBuildRequest01@mbcoils$F4614@index+1)^0,c
 13193  00D428  0E58               	movlw	88
 13194  00D42A  6E2A               	movwf	modbusBuildRequest01@mbcoils$F4614@index^0,c
 13195  00D42C  0E00               	movlw	0
 13196  00D42E  6E2D               	movwf	(modbusBuildRequest01@mbcoils$F4614@count+1)^0,c
 13197  00D430  0E08               	movlw	8
 13198  00D432  6E2C               	movwf	modbusBuildRequest01@mbcoils$F4614@count^0,c
 13199  00D434  ECA6  F06D         	call	_modbusBuildRequest01@mbcoils$F4614	;wreg free
 13200  00D438  6E2E               	movwf	modbus_relay_status@err^0,c
 13201                           
 13202                           ;app_modbus.c: 151: if (err != MODBUS_OK) {
 13203  00D43A  502E               	movf	modbus_relay_status@err^0,w,c
 13204  00D43C  A4D8               	btfss	status,2,c
 13205  00D43E  0012               	return	
 13206                           
 13207                           ;app_modbus.c: 153: };app_modbus.c: 159: rs485_writeBytes(g_master.request.frame, g_mast
      +                          er.request.length);
 13208  00D440  0EB6               	movlw	low (_g_master+1)
 13209  00D442  6E14               	movwf	rs485_writeBytes@wrptr^0,c
 13210  00D444  0E02               	movlw	high (_g_master+1)
 13211  00D446  6E15               	movwf	(rs485_writeBytes@wrptr+1)^0,c
 13212  00D448  C2BF  F016         	movff	_g_master+10,rs485_writeBytes@len
 13213  00D44C  EC62  F06B         	call	_rs485_writeBytes	;wreg free
 13214  00D450  0012               	return		;funcret
 13215  00D452                     __end_of_modbus_relay_status:
 13216                           	callstack 0
 13217                           
 13218 ;; *************** function _modbusBuildRequest01@mbcoils$F4614 *****************
 13219 ;; Defined at:
 13220 ;;		line 62 in file "lightmodbus/master/mbcoils.h"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;  status          2   38[COMRAM] PTR struct modbusMaster
 13223 ;;		 -> g_master(37), 
 13224 ;;  address         1   40[COMRAM] unsigned char 
 13225 ;;  index           2   41[COMRAM] unsigned int 
 13226 ;;  count           2   43[COMRAM] unsigned int 
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;		None
 13229 ;; Return value:  Size  Location     Type
 13230 ;;                  1    wreg      enum E164
 13231 ;; Registers used:
 13232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13233 ;; Tracked objects:
 13234 ;;		On entry : 3F/1
 13235 ;;		On exit  : 0/0
 13236 ;;		Unchanged: 0/0
 13237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13238 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13241 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13242 ;;Total ram usage:        7 bytes
 13243 ;; Hardware stack levels used: 1
 13244 ;; Hardware stack levels required when called: 7
 13245 ;; This function calls:
 13246 ;;		_modbusBuildRequest0102
 13247 ;; This function is called by:
 13248 ;;		_modbus_relay_status
 13249 ;; This function uses a non-reentrant model
 13250 ;;
 13251                           
 13252                           	psect	text55
 13253  00DB4C                     __ptext55:
 13254                           	callstack 0
 13255  00DB4C                     _modbusBuildRequest01@mbcoils$F4614:
 13256                           	callstack 20
 13257                           
 13258                           ; BSR set to: 1
 13259                           
 13260                           ;incstack = 0
 13261  00DB4C  C027  F01D         	movff	modbusBuildRequest01@mbcoils$F4614@status,modbusBuildRequest0102@status
 13262  00DB50  C028  F01E         	movff	modbusBuildRequest01@mbcoils$F4614@status+1,modbusBuildRequest0102@status+1
 13263  00DB54  0E01               	movlw	1
 13264  00DB56  6E1F               	movwf	modbusBuildRequest0102@function^0,c
 13265  00DB58  C029  F020         	movff	modbusBuildRequest01@mbcoils$F4614@address,modbusBuildRequest0102@address
 13266  00DB5C  C02A  F021         	movff	modbusBuildRequest01@mbcoils$F4614@index,modbusBuildRequest0102@index
 13267  00DB60  C02B  F022         	movff	modbusBuildRequest01@mbcoils$F4614@index+1,modbusBuildRequest0102@index+1
 13268  00DB64  C02C  F023         	movff	modbusBuildRequest01@mbcoils$F4614@count,modbusBuildRequest0102@count
 13269  00DB68  C02D  F024         	movff	modbusBuildRequest01@mbcoils$F4614@count+1,modbusBuildRequest0102@count+1
 13270  00DB6C  EC92  F046         	call	_modbusBuildRequest0102	;wreg free
 13271  00DB70  0012               	return		;funcret
 13272  00DB72                     __end_of_modbusBuildRequest01@mbcoils$F4614:
 13273                           	callstack 0
 13274                           
 13275 ;; *************** function _modbusBuildRequest0102 *****************
 13276 ;; Defined at:
 13277 ;;		line 29 in file "lightmodbus/master/mbcoils.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;  status          2   28[COMRAM] PTR struct modbusMaster
 13280 ;;		 -> g_master(37), 
 13281 ;;  function        1   30[COMRAM] unsigned char 
 13282 ;;  address         1   31[COMRAM] unsigned char 
 13283 ;;  index           2   32[COMRAM] unsigned int 
 13284 ;;  count           2   34[COMRAM] unsigned int 
 13285 ;; Auto vars:     Size  Location     Type
 13286 ;;  builder         2   36[COMRAM] PTR struct modbusParser
 13287 ;;		 -> g_master.request.frame(9), 
 13288 ;;  frameLength     1    0        unsigned char 
 13289 ;; Return value:  Size  Location     Type
 13290 ;;                  1    wreg      enum E235
 13291 ;; Registers used:
 13292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13293 ;; Tracked objects:
 13294 ;;		On entry : 3F/1
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13298 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13301 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13302 ;;Total ram usage:       10 bytes
 13303 ;; Hardware stack levels used: 1
 13304 ;; Hardware stack levels required when called: 6
 13305 ;; This function calls:
 13306 ;;		_memset
 13307 ;;		_modbusBitsToBytes
 13308 ;;		_modbusCRC
 13309 ;;		_modbusMatchEndian
 13310 ;; This function is called by:
 13311 ;;		_modbusBuildRequest01@mbcoils$F4614
 13312 ;; This function uses a non-reentrant model
 13313 ;;
 13314                           
 13315                           	psect	text56
 13316  008D24                     __ptext56:
 13317                           	callstack 0
 13318  008D24                     _modbusBuildRequest0102:
 13319                           	callstack 20
 13320                           
 13321                           ; BSR set to: 1
 13322                           ;mbcoils.c: 38: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 13323                           
 13324                           ; BSR set to: 1
 13325                           
 13326                           ;incstack = 0
 13327  008D24  501D               	movf	modbusBuildRequest0102@status^0,w,c
 13328  008D26  101E               	iorwf	(modbusBuildRequest0102@status+1)^0,w,c
 13329  008D28  A4D8               	btfss	status,2,c
 13330  008D2A  D002               	goto	l18043
 13331                           
 13332                           ; BSR set to: 1
 13333  008D2C  0E04               	movlw	4
 13334  008D2E  0012               	return	
 13335  008D30                     l18043:
 13336                           
 13337                           ; BSR set to: 1
 13338                           ;mbcoils.c: 39: if ( function != 1 && function != 2 )
 13339  008D30  041F               	decf	modbusBuildRequest0102@function^0,w,c
 13340  008D32  B4D8               	btfsc	status,2,c
 13341  008D34  D00E               	goto	l18053
 13342                           
 13343                           ; BSR set to: 1
 13344  008D36  0E02               	movlw	2
 13345  008D38  181F               	xorwf	modbusBuildRequest0102@function^0,w,c
 13346  008D3A  B4D8               	btfsc	status,2,c
 13347  008D3C  D00A               	goto	l18053
 13348                           
 13349                           ; BSR set to: 1
 13350                           ;mbcoils.c: 40: {;mbcoils.c: 41: status->buildError = MODBUS_FERROR_BADFUN;
 13351  008D3E  EE20 F024          	lfsr	2,36
 13352  008D42  501D               	movf	modbusBuildRequest0102@status^0,w,c
 13353  008D44  26D9               	addwf	fsr2l,f,c
 13354  008D46  501E               	movf	(modbusBuildRequest0102@status+1)^0,w,c
 13355  008D48  22DA               	addwfc	fsr2h,f,c
 13356  008D4A  0E0A               	movlw	10
 13357  008D4C                     L26:
 13358  008D4C  6EDF               	movwf	indf2,c
 13359                           
 13360                           ; BSR set to: 1
 13361                           ;mbcoils.c: 42: return MODBUS_ERROR_BUILD;
 13362  008D4E  0E06               	movlw	6
 13363  008D50  0012               	return	
 13364  008D52                     l18053:
 13365                           
 13366                           ; BSR set to: 1
 13367                           ;mbcoils.c: 43: };mbcoils.c: 45: if ( address == 0 )
 13368  008D52  5020               	movf	modbusBuildRequest0102@address^0,w,c
 13369  008D54  A4D8               	btfss	status,2,c
 13370  008D56  D008               	goto	l18061
 13371                           
 13372                           ; BSR set to: 1
 13373                           ;mbcoils.c: 46: {;mbcoils.c: 47: status->buildError = MODBUS_FERROR_BROADCAST;
 13374  008D58  EE20 F024          	lfsr	2,36
 13375  008D5C  501D               	movf	modbusBuildRequest0102@status^0,w,c
 13376  008D5E  26D9               	addwf	fsr2l,f,c
 13377  008D60  501E               	movf	(modbusBuildRequest0102@status+1)^0,w,c
 13378  008D62  22DA               	addwfc	fsr2h,f,c
 13379  008D64  0E12               	movlw	18
 13380  008D66  D7F2               	goto	L26
 13381  008D68                     l18061:
 13382                           
 13383                           ; BSR set to: 1
 13384                           ;mbcoils.c: 49: };mbcoils.c: 52: status->request.length = 0;
 13385  008D68  EE20 F00A          	lfsr	2,10
 13386  008D6C  501D               	movf	modbusBuildRequest0102@status^0,w,c
 13387  008D6E  26D9               	addwf	fsr2l,f,c
 13388  008D70  501E               	movf	(modbusBuildRequest0102@status+1)^0,w,c
 13389  008D72  22DA               	addwfc	fsr2h,f,c
 13390  008D74  0E00               	movlw	0
 13391  008D76  6EDF               	movwf	indf2,c
 13392                           
 13393                           ; BSR set to: 1
 13394                           ;mbcoils.c: 53: status->predictedResponseLength = 0;
 13395  008D78  C01D  FFD9         	movff	modbusBuildRequest0102@status,fsr2l
 13396  008D7C  C01E  FFDA         	movff	modbusBuildRequest0102@status+1,fsr2h
 13397  008D80  0E00               	movlw	0
 13398  008D82  6EDF               	movwf	indf2,c
 13399                           
 13400                           ; BSR set to: 1
 13401                           ;mbcoils.c: 56: if ( count == 0 || count > 2000 )
 13402  008D84  5023               	movf	modbusBuildRequest0102@count^0,w,c
 13403  008D86  1024               	iorwf	(modbusBuildRequest0102@count+1)^0,w,c
 13404  008D88  B4D8               	btfsc	status,2,c
 13405  008D8A  D006               	goto	u20180
 13406                           
 13407                           ; BSR set to: 1
 13408  008D8C  0ED1               	movlw	209
 13409  008D8E  5C23               	subwf	modbusBuildRequest0102@count^0,w,c
 13410  008D90  0E07               	movlw	7
 13411  008D92  5824               	subwfb	(modbusBuildRequest0102@count+1)^0,w,c
 13412  008D94  A0D8               	btfss	status,0,c
 13413  008D96  D008               	goto	l18075
 13414  008D98                     u20180:
 13415                           
 13416                           ; BSR set to: 1
 13417                           ;mbcoils.c: 57: {;mbcoils.c: 58: status->buildError = MODBUS_FERROR_COUNT;
 13418  008D98  EE20 F024          	lfsr	2,36
 13419  008D9C  501D               	movf	modbusBuildRequest0102@status^0,w,c
 13420  008D9E  26D9               	addwf	fsr2l,f,c
 13421  008DA0  501E               	movf	(modbusBuildRequest0102@status+1)^0,w,c
 13422  008DA2  22DA               	addwfc	fsr2h,f,c
 13423  008DA4  0E03               	movlw	3
 13424  008DA6  D7D2               	goto	L26
 13425  008DA8                     l18075:
 13426                           
 13427                           ; BSR set to: 1
 13428                           ;mbcoils.c: 69: memset( status->request.frame, 0, frameLength );
 13429                           
 13430                           ; BSR set to: 1
 13431  008DA8  0E01               	movlw	1
 13432  008DAA  241D               	addwf	modbusBuildRequest0102@status^0,w,c
 13433  008DAC  6E15               	movwf	memset@p1^0,c
 13434  008DAE  0E00               	movlw	0
 13435  008DB0  201E               	addwfc	(modbusBuildRequest0102@status+1)^0,w,c
 13436  008DB2  6E16               	movwf	(memset@p1+1)^0,c
 13437  008DB4  0E00               	movlw	0
 13438  008DB6  6E18               	movwf	(memset@c+1)^0,c
 13439  008DB8  0E00               	movlw	0
 13440  008DBA  6E17               	movwf	memset@c^0,c
 13441  008DBC  0E00               	movlw	0
 13442  008DBE  6E1A               	movwf	(memset@n+1)^0,c
 13443  008DC0  0E08               	movlw	8
 13444  008DC2  6E19               	movwf	memset@n^0,c
 13445  008DC4  ECD6  F06C         	call	_memset	;wreg free
 13446                           
 13447                           ;mbcoils.c: 72: ModbusParser *builder = (ModbusParser *) status->request.frame;
 13448  008DC8  0E01               	movlw	1
 13449  008DCA  241D               	addwf	modbusBuildRequest0102@status^0,w,c
 13450  008DCC  6E25               	movwf	modbusBuildRequest0102@builder^0,c
 13451  008DCE  0E00               	movlw	0
 13452  008DD0  201E               	addwfc	(modbusBuildRequest0102@status+1)^0,w,c
 13453  008DD2  6E26               	movwf	(modbusBuildRequest0102@builder+1)^0,c
 13454                           
 13455                           ;mbcoils.c: 74: builder->_base.address = address;
 13456  008DD4  C025  FFD9         	movff	modbusBuildRequest0102@builder,fsr2l
 13457  008DD8  C026  FFDA         	movff	modbusBuildRequest0102@builder+1,fsr2h
 13458  008DDC  C020  FFDF         	movff	modbusBuildRequest0102@address,indf2
 13459                           
 13460                           ;mbcoils.c: 75: builder->_base.function = function;
 13461  008DE0  EE20 F001          	lfsr	2,1
 13462  008DE4  5025               	movf	modbusBuildRequest0102@builder^0,w,c
 13463  008DE6  26D9               	addwf	fsr2l,f,c
 13464  008DE8  5026               	movf	(modbusBuildRequest0102@builder+1)^0,w,c
 13465  008DEA  22DA               	addwfc	fsr2h,f,c
 13466  008DEC  C01F  FFDF         	movff	modbusBuildRequest0102@function,indf2
 13467                           
 13468                           ;mbcoils.c: 76: builder->request0102.index = modbusMatchEndian( index );
 13469  008DF0  C021  F01B         	movff	modbusBuildRequest0102@index,modbusMatchEndian@data
 13470  008DF4  C022  F01C         	movff	modbusBuildRequest0102@index+1,modbusMatchEndian@data+1
 13471  008DF8  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 13472  008DFC  EE20 F002          	lfsr	2,2
 13473  008E00  5025               	movf	modbusBuildRequest0102@builder^0,w,c
 13474  008E02  26D9               	addwf	fsr2l,f,c
 13475  008E04  5026               	movf	(modbusBuildRequest0102@builder+1)^0,w,c
 13476  008E06  22DA               	addwfc	fsr2h,f,c
 13477  008E08  C01B  FFDE         	movff	?_modbusMatchEndian,postinc2
 13478  008E0C  C01C  FFDD         	movff	?_modbusMatchEndian+1,postdec2
 13479                           
 13480                           ;mbcoils.c: 77: builder->request0102.count = modbusMatchEndian( count );
 13481  008E10  C023  F01B         	movff	modbusBuildRequest0102@count,modbusMatchEndian@data
 13482  008E14  C024  F01C         	movff	modbusBuildRequest0102@count+1,modbusMatchEndian@data+1
 13483  008E18  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 13484  008E1C  EE20 F004          	lfsr	2,4
 13485  008E20  5025               	movf	modbusBuildRequest0102@builder^0,w,c
 13486  008E22  26D9               	addwf	fsr2l,f,c
 13487  008E24  5026               	movf	(modbusBuildRequest0102@builder+1)^0,w,c
 13488  008E26  22DA               	addwfc	fsr2h,f,c
 13489  008E28  C01B  FFDE         	movff	?_modbusMatchEndian,postinc2
 13490  008E2C  C01C  FFDD         	movff	?_modbusMatchEndian+1,postdec2
 13491                           
 13492                           ;mbcoils.c: 80: builder->request0102.crc = modbusCRC( builder->frame, frameLength - 2 );
 13493  008E30  C025  F00F         	movff	modbusBuildRequest0102@builder,modbusCRC@data
 13494  008E34  C026  F010         	movff	modbusBuildRequest0102@builder+1,modbusCRC@data+1
 13495  008E38  0E00               	movlw	0
 13496  008E3A  6E12               	movwf	(modbusCRC@length+1)^0,c
 13497  008E3C  0E06               	movlw	6
 13498  008E3E  6E11               	movwf	modbusCRC@length^0,c
 13499  008E40  EC2C  F062         	call	_modbusCRC	;wreg free
 13500  008E44  EE20 F006          	lfsr	2,6
 13501  008E48  5025               	movf	modbusBuildRequest0102@builder^0,w,c
 13502  008E4A  26D9               	addwf	fsr2l,f,c
 13503  008E4C  5026               	movf	(modbusBuildRequest0102@builder+1)^0,w,c
 13504  008E4E  22DA               	addwfc	fsr2h,f,c
 13505  008E50  C00F  FFDE         	movff	?_modbusCRC,postinc2
 13506  008E54  C010  FFDD         	movff	?_modbusCRC+1,postdec2
 13507                           
 13508                           ;mbcoils.c: 82: status->request.length = frameLength;
 13509  008E58  EE20 F00A          	lfsr	2,10
 13510  008E5C  501D               	movf	modbusBuildRequest0102@status^0,w,c
 13511  008E5E  26D9               	addwf	fsr2l,f,c
 13512  008E60  501E               	movf	(modbusBuildRequest0102@status+1)^0,w,c
 13513  008E62  22DA               	addwfc	fsr2h,f,c
 13514  008E64  0E08               	movlw	8
 13515  008E66  6EDF               	movwf	indf2,c
 13516                           
 13517                           ;mbcoils.c: 83: status->predictedResponseLength = 4 + 1 + modbusBitsToBytes( count );
 13518  008E68  C023  F00F         	movff	modbusBuildRequest0102@count,modbusBitsToBytes@n
 13519  008E6C  C024  F010         	movff	modbusBuildRequest0102@count+1,modbusBitsToBytes@n+1
 13520  008E70  ECAD  F067         	call	_modbusBitsToBytes	;wreg free
 13521  008E74  500F               	movf	?_modbusBitsToBytes^0,w,c
 13522  008E76  0F05               	addlw	5
 13523  008E78  C01D  FFD9         	movff	modbusBuildRequest0102@status,fsr2l
 13524  008E7C  C01E  FFDA         	movff	modbusBuildRequest0102@status+1,fsr2h
 13525  008E80  6EDF               	movwf	indf2,c
 13526                           
 13527                           ;mbcoils.c: 84: status->buildError = MODBUS_FERROR_OK;
 13528  008E82  EE20 F024          	lfsr	2,36
 13529  008E86  501D               	movf	modbusBuildRequest0102@status^0,w,c
 13530  008E88  26D9               	addwf	fsr2l,f,c
 13531  008E8A  501E               	movf	(modbusBuildRequest0102@status+1)^0,w,c
 13532  008E8C  22DA               	addwfc	fsr2h,f,c
 13533  008E8E  0E00               	movlw	0
 13534  008E90  6EDF               	movwf	indf2,c
 13535                           
 13536                           ;mbcoils.c: 85: return MODBUS_ERROR_OK;
 13537  008E92  0E00               	movlw	0
 13538  008E94  0012               	return		;funcret
 13539  008E96                     __end_of_modbusBuildRequest0102:
 13540                           	callstack 0
 13541                           
 13542 ;; *************** function _modbusBitsToBytes *****************
 13543 ;; Defined at:
 13544 ;;		line 47 in file "lightmodbus/lightmodbus.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;  n               2   14[COMRAM] unsigned int 
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;		None
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  2   14[COMRAM] unsigned int 
 13551 ;; Registers used:
 13552 ;;		wreg, status,2, status,0
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/2
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13560 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13561 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13562 ;;Total ram usage:        6 bytes
 13563 ;; Hardware stack levels used: 1
 13564 ;; Hardware stack levels required when called: 4
 13565 ;; This function calls:
 13566 ;;		Nothing
 13567 ;; This function is called by:
 13568 ;;		_modbusBuildRequest0102
 13569 ;;		_modbusParseResponse0102
 13570 ;; This function uses a non-reentrant model
 13571 ;;
 13572                           
 13573                           	psect	text57
 13574  00CF5A                     __ptext57:
 13575                           	callstack 0
 13576  00CF5A                     _modbusBitsToBytes:
 13577                           	callstack 22
 13578                           
 13579                           ;lightmodbus.c: 49: return n != 0 ? ( 1 + ( ( n - 1 ) >> 3 ) ) : 0;
 13580                           
 13581                           ;incstack = 0
 13582  00CF5A  500F               	movf	modbusBitsToBytes@n^0,w,c
 13583  00CF5C  1010               	iorwf	(modbusBitsToBytes@n+1)^0,w,c
 13584  00CF5E  A4D8               	btfss	status,2,c
 13585  00CF60  D005               	goto	l11171
 13586  00CF62  0E00               	movlw	0
 13587  00CF64  6E10               	movwf	(?_modbusBitsToBytes+1)^0,c
 13588  00CF66  0E00               	movlw	0
 13589  00CF68  6E0F               	movwf	?_modbusBitsToBytes^0,c
 13590  00CF6A  0012               	return	
 13591  00CF6C                     l11171:
 13592  00CF6C  0EFF               	movlw	255
 13593  00CF6E  6E11               	movwf	??_modbusBitsToBytes^0,c
 13594  00CF70  0EFF               	movlw	255
 13595  00CF72  6E12               	movwf	(??_modbusBitsToBytes+1)^0,c
 13596  00CF74  C00F  F013         	movff	modbusBitsToBytes@n,??_modbusBitsToBytes+2
 13597  00CF78  C010  F014         	movff	modbusBitsToBytes@n+1,??_modbusBitsToBytes+3
 13598  00CF7C  5011               	movf	??_modbusBitsToBytes^0,w,c
 13599  00CF7E  2613               	addwf	(??_modbusBitsToBytes+2)^0,f,c
 13600  00CF80  5012               	movf	(??_modbusBitsToBytes+1)^0,w,c
 13601  00CF82  2214               	addwfc	(??_modbusBitsToBytes+3)^0,f,c
 13602  00CF84  90D8               	bcf	status,0,c
 13603  00CF86  3214               	rrcf	(??_modbusBitsToBytes+3)^0,f,c
 13604  00CF88  3213               	rrcf	(??_modbusBitsToBytes+2)^0,f,c
 13605  00CF8A  90D8               	bcf	status,0,c
 13606  00CF8C  3214               	rrcf	(??_modbusBitsToBytes+3)^0,f,c
 13607  00CF8E  3213               	rrcf	(??_modbusBitsToBytes+2)^0,f,c
 13608  00CF90  90D8               	bcf	status,0,c
 13609  00CF92  3214               	rrcf	(??_modbusBitsToBytes+3)^0,f,c
 13610  00CF94  3213               	rrcf	(??_modbusBitsToBytes+2)^0,f,c
 13611  00CF96  0E01               	movlw	1
 13612  00CF98  2413               	addwf	(??_modbusBitsToBytes+2)^0,w,c
 13613  00CF9A  6E0F               	movwf	?_modbusBitsToBytes^0,c
 13614  00CF9C  0E00               	movlw	0
 13615  00CF9E  2014               	addwfc	(??_modbusBitsToBytes+3)^0,w,c
 13616  00CFA0  6E10               	movwf	(?_modbusBitsToBytes+1)^0,c
 13617  00CFA2  0012               	return		;funcret
 13618  00CFA4                     __end_of_modbusBitsToBytes:
 13619                           	callstack 0
 13620                           
 13621 ;; *************** function _modbus_master_relay_control_task *****************
 13622 ;; Defined at:
 13623 ;;		line 253 in file "app_modbus.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;		None
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;  ppm             4   70[BANK0 ] float 
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1    wreg      void 
 13630 ;; Registers used:
 13631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13632 ;; Tracked objects:
 13633 ;;		On entry : 3F/1
 13634 ;;		On exit  : 3E/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13638 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13640 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13641 ;;Total ram usage:        4 bytes
 13642 ;; Hardware stack levels used: 1
 13643 ;; Hardware stack levels required when called: 10
 13644 ;; This function calls:
 13645 ;;		_modbus_check_event
 13646 ;;		_modbus_check_threshold
 13647 ;;		_modbus_fire_event
 13648 ;; This function is called by:
 13649 ;;		_modbus_task
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text58
 13654  00C628                     __ptext58:
 13655                           	callstack 0
 13656  00C628                     _modbus_master_relay_control_task:
 13657                           	callstack 19
 13658                           
 13659                           ; BSR set to: 1
 13660                           ;app_modbus.c: 255: float ppm;;app_modbus.c: 256: if (g_relay_sec_count >= 100) {
 13661                           
 13662                           ;incstack = 0
 13663  00C628  0100               	movlb	0	; () banked
 13664  00C62A  51E5               	movf	(_g_relay_sec_count+1)& (0+255),w,b	;volatile
 13665  00C62C  E104               	bnz	u42520
 13666  00C62E  0E64               	movlw	100
 13667  00C630  5DE4               	subwf	_g_relay_sec_count& (0+255),w,b	;volatile
 13668  00C632  A0D8               	btfss	status,0,c
 13669  00C634  0012               	return	
 13670  00C636                     u42520:
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;app_modbus.c: 257: g_relay_sec_count = 0;
 13674  00C636  0E00               	movlw	0
 13675  00C638  6FE5               	movwf	(_g_relay_sec_count+1)& (0+255),b	;volatile
 13676  00C63A  0E00               	movlw	0
 13677  00C63C  6FE4               	movwf	_g_relay_sec_count& (0+255),b	;volatile
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;app_modbus.c: 261: ppm = g_modbus_value.float_value[g_nvm.flash.ctrl_channel];
 13681  00C63E  0101               	movlb	1	; () banked
 13682  00C640  5155               	movf	(_g_nvm+3)& (0+255),w,b
 13683  00C642  0D04               	mullw	4
 13684  00C644  0EDA               	movlw	low _g_modbus_value
 13685  00C646  24F3               	addwf	243,w,c
 13686  00C648  6ED9               	movwf	fsr2l,c
 13687  00C64A  0E02               	movlw	high _g_modbus_value
 13688  00C64C  20F4               	addwfc	prodh,w,c
 13689  00C64E  6EDA               	movwf	fsr2h,c
 13690  00C650  CFDE F0A6          	movff	postinc2,modbus_master_relay_control_task@ppm
 13691  00C654  CFDE F0A7          	movff	postinc2,modbus_master_relay_control_task@ppm+1
 13692  00C658  CFDE F0A8          	movff	postinc2,modbus_master_relay_control_task@ppm+2
 13693  00C65C  CFDE F0A9          	movff	postinc2,modbus_master_relay_control_task@ppm+3
 13694                           
 13695                           ; BSR set to: 1
 13696                           ;app_modbus.c: 263: modbus_check_event(modbus_check_threshold(ppm));
 13697  00C660  C0A6  F09D         	movff	modbus_master_relay_control_task@ppm,modbus_check_threshold@ppm
 13698  00C664  C0A7  F09E         	movff	modbus_master_relay_control_task@ppm+1,modbus_check_threshold@ppm+1
 13699  00C668  C0A8  F09F         	movff	modbus_master_relay_control_task@ppm+2,modbus_check_threshold@ppm+2
 13700  00C66C  C0A9  F0A0         	movff	modbus_master_relay_control_task@ppm+3,modbus_check_threshold@ppm+3
 13701  00C670  EC3F  F068         	call	_modbus_check_threshold	;wreg free
 13702  00C674  ECED  F05E         	call	_modbus_check_event
 13703                           
 13704                           ; BSR set to: 1
 13705                           ;app_modbus.c: 265: if (g_modbus.fire_flag) {
 13706  00C678  5127               	movf	(_g_modbus+3)& (0+255),w,b
 13707  00C67A  B4D8               	btfsc	status,2,c
 13708  00C67C  0012               	return	
 13709                           
 13710                           ; BSR set to: 1
 13711                           ;app_modbus.c: 266: if (g_modbus.fire_retry >= 3) {
 13712  00C67E  0E02               	movlw	2
 13713  00C680  6528               	cpfsgt	(_g_modbus+4)& (0+255),b
 13714  00C682  D005               	goto	l33507
 13715                           
 13716                           ; BSR set to: 1
 13717                           ;app_modbus.c: 267: g_modbus.fire_flag = 0;
 13718  00C684  0E00               	movlw	0
 13719  00C686  6F27               	movwf	(_g_modbus+3)& (0+255),b
 13720                           
 13721                           ;app_modbus.c: 268: g_modbus.fire_retry = 0;
 13722  00C688  0E00               	movlw	0
 13723  00C68A  6F28               	movwf	(_g_modbus+4)& (0+255),b
 13724  00C68C  0012               	return	
 13725  00C68E                     l33507:
 13726                           
 13727                           ; BSR set to: 1
 13728                           ;app_modbus.c: 270: };app_modbus.c: 271: modbus_fire_event();
 13729  00C68E  ECDC  F06E         	call	_modbus_fire_event	;wreg free
 13730                           
 13731                           ;app_modbus.c: 272: g_modbus.fire_retry++;
 13732  00C692  0101               	movlb	1	; () banked
 13733  00C694  2B28               	incf	(_g_modbus+4)& (0+255),f,b
 13734  00C696  0012               	return		;funcret
 13735  00C698                     __end_of_modbus_master_relay_control_task:
 13736                           	callstack 0
 13737                           
 13738 ;; *************** function _modbus_fire_event *****************
 13739 ;; Defined at:
 13740 ;;		line 198 in file "app_modbus.c"
 13741 ;; Parameters:    Size  Location     Type
 13742 ;;		None
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;		None
 13745 ;; Return value:  Size  Location     Type
 13746 ;;                  1    wreg      void 
 13747 ;; Registers used:
 13748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13749 ;; Tracked objects:
 13750 ;;		On entry : 3F/1
 13751 ;;		On exit  : 0/0
 13752 ;;		Unchanged: 0/0
 13753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13758 ;;Total ram usage:        0 bytes
 13759 ;; Hardware stack levels used: 1
 13760 ;; Hardware stack levels required when called: 9
 13761 ;; This function calls:
 13762 ;;		_modbus_relay_ouput
 13763 ;; This function is called by:
 13764 ;;		_modbus_master_response_parse
 13765 ;;		_modbus_master_relay_control_task
 13766 ;; This function uses a non-reentrant model
 13767 ;;
 13768                           
 13769                           	psect	text59
 13770  00DDB8                     __ptext59:
 13771                           	callstack 0
 13772  00DDB8                     _modbus_fire_event:
 13773                           	callstack 18
 13774                           
 13775                           ; BSR set to: 1
 13776                           ;app_modbus.c: 200: modbus_relay_ouput(g_nvm.flash.ctrl_relay_no, (g_modbus.last_event==
      +                          EV_UP)?1:0);
 13777                           
 13778                           ;incstack = 0
 13779  00DDB8  052D               	decf	(_g_modbus+9)& (0+255),w,b
 13780  00DDBA  A4D8               	btfss	status,2,c
 13781  00DDBC  D002               	goto	u22030
 13782  00DDBE  0E01               	movlw	1
 13783  00DDC0  D001               	goto	u22040
 13784  00DDC2                     u22030:
 13785  00DDC2  0E00               	movlw	0
 13786  00DDC4                     u22040:
 13787  00DDC4  6E26               	movwf	modbus_relay_ouput@on^0,c
 13788  00DDC6  5157               	movf	(_g_nvm+5)& (0+255),w,b
 13789  00DDC8  ECBB  F05F         	call	_modbus_relay_ouput
 13790  00DDCC  0012               	return		;funcret
 13791  00DDCE                     __end_of_modbus_fire_event:
 13792                           	callstack 0
 13793                           
 13794 ;; *************** function _modbus_relay_ouput *****************
 13795 ;; Defined at:
 13796 ;;		line 126 in file "app_modbus.c"
 13797 ;; Parameters:    Size  Location     Type
 13798 ;;  relay_idx       1    wreg     const unsigned char 
 13799 ;;  on              1   37[COMRAM] const unsigned char 
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;  relay_idx       1   46[COMRAM] const unsigned char 
 13802 ;;  data            2   42[COMRAM] unsigned int 
 13803 ;;  err             1   41[COMRAM] enum E164
 13804 ;;  idx             1   40[COMRAM] unsigned char 
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  1    wreg      unsigned char 
 13807 ;; Registers used:
 13808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13809 ;; Tracked objects:
 13810 ;;		On entry : 3F/1
 13811 ;;		On exit  : 0/0
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13814 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13815 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13817 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13818 ;;Total ram usage:       10 bytes
 13819 ;; Hardware stack levels used: 1
 13820 ;; Hardware stack levels required when called: 8
 13821 ;; This function calls:
 13822 ;;		_modbusBuildRequest05
 13823 ;;		_rs485_writeBytes
 13824 ;; This function is called by:
 13825 ;;		_modbus_fire_event
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text60
 13830  00BF76                     __ptext60:
 13831                           	callstack 0
 13832  00BF76                     _modbus_relay_ouput:
 13833                           	callstack 18
 13834                           
 13835                           ;incstack = 0
 13836                           ;modbus_relay_ouput@relay_idx stored from wreg
 13837  00BF76  6E2F               	movwf	modbus_relay_ouput@relay_idx^0,c
 13838                           
 13839                           ;app_modbus.c: 128: g_modbus.relay_status = RLY_NONE;
 13840  00BF78  0E00               	movlw	0
 13841  00BF7A  0101               	movlb	1	; () banked
 13842  00BF7C  6F2E               	movwf	(_g_modbus+10)& (0+255),b
 13843                           
 13844                           ; BSR set to: 1
 13845                           ;app_modbus.c: 129: uint16_t data = (on == 1)?0xff00:0x0000;
 13846  00BF7E  0426               	decf	modbus_relay_ouput@on^0,w,c
 13847  00BF80  B4D8               	btfsc	status,2,c
 13848  00BF82  D002               	goto	l18403
 13849                           
 13850                           ; BSR set to: 1
 13851  00BF84  0E00               	movlw	0
 13852  00BF86  D001               	goto	L27
 13853  00BF88                     l18403:
 13854                           
 13855                           ; BSR set to: 1
 13856  00BF88  0EFF               	movlw	255
 13857  00BF8A                     L27:
 13858  00BF8A  6E2C               	movwf	(modbus_relay_ouput@data+1)^0,c
 13859  00BF8C  0E00               	movlw	0
 13860  00BF8E  6E2B               	movwf	modbus_relay_ouput@data^0,c
 13861                           
 13862                           ; BSR set to: 1
 13863                           ;app_modbus.c: 130: uint8_t idx = ((relay_idx - 1) < 0)?0:(relay_idx - 1);
 13864  00BF90  502F               	movf	modbus_relay_ouput@relay_idx^0,w,c
 13865  00BF92  6E27               	movwf	??_modbus_relay_ouput^0,c
 13866  00BF94  6A28               	clrf	(??_modbus_relay_ouput+1)^0,c
 13867  00BF96  0EFF               	movlw	255
 13868  00BF98  2427               	addwf	??_modbus_relay_ouput^0,w,c
 13869  00BF9A  0EFF               	movlw	255
 13870  00BF9C  2028               	addwfc	(??_modbus_relay_ouput+1)^0,w,c
 13871  00BF9E  0B80               	andlw	128
 13872  00BFA0  A4D8               	btfss	status,2,c
 13873  00BFA2  D007               	goto	l18409
 13874                           
 13875                           ; BSR set to: 1
 13876  00BFA4  0EFF               	movlw	255
 13877  00BFA6  242F               	addwf	modbus_relay_ouput@relay_idx^0,w,c
 13878  00BFA8  6E2D               	movwf	_modbus_relay_ouput$4706^0,c
 13879  00BFAA  6A2E               	clrf	(_modbus_relay_ouput$4706+1)^0,c
 13880  00BFAC  0EFF               	movlw	255
 13881  00BFAE  222E               	addwfc	(_modbus_relay_ouput$4706+1)^0,f,c
 13882  00BFB0  D004               	goto	l18411
 13883  00BFB2                     l18409:
 13884                           
 13885                           ; BSR set to: 1
 13886  00BFB2  0E00               	movlw	0
 13887  00BFB4  6E2E               	movwf	(_modbus_relay_ouput$4706+1)^0,c
 13888  00BFB6  0E00               	movlw	0
 13889  00BFB8  6E2D               	movwf	_modbus_relay_ouput$4706^0,c
 13890  00BFBA                     l18411:
 13891                           
 13892                           ; BSR set to: 1
 13893  00BFBA  C02D  F029         	movff	_modbus_relay_ouput$4706,modbus_relay_ouput@idx
 13894                           
 13895                           ; BSR set to: 1
 13896                           ;app_modbus.c: 131: ModbusError err = modbusBuildRequest05(&g_master, g_nvm.flash.ctrl_s
      +                          lave_id,;app_modbus.c: 132: 600 + idx, data);
 13897  00BFBE  0EB5               	movlw	low _g_master
 13898  00BFC0  6E1D               	movwf	modbusBuildRequest05@status^0,c
 13899  00BFC2  0E02               	movlw	high _g_master
 13900  00BFC4  6E1E               	movwf	(modbusBuildRequest05@status+1)^0,c
 13901  00BFC6  C156  F01F         	movff	_g_nvm+4,modbusBuildRequest05@address
 13902  00BFCA  0E58               	movlw	88
 13903  00BFCC  2429               	addwf	modbus_relay_ouput@idx^0,w,c
 13904  00BFCE  6E20               	movwf	modbusBuildRequest05@index^0,c
 13905  00BFD0  6A21               	clrf	(modbusBuildRequest05@index+1)^0,c
 13906  00BFD2  0E02               	movlw	2
 13907  00BFD4  2221               	addwfc	(modbusBuildRequest05@index+1)^0,f,c
 13908  00BFD6  C02B  F022         	movff	modbus_relay_ouput@data,modbusBuildRequest05@value
 13909  00BFDA  C02C  F023         	movff	modbus_relay_ouput@data+1,modbusBuildRequest05@value+1
 13910  00BFDE  ECF1  F04E         	call	_modbusBuildRequest05	;wreg free
 13911  00BFE2  6E2A               	movwf	modbus_relay_ouput@err^0,c
 13912                           
 13913                           ;app_modbus.c: 133: if (err != MODBUS_OK) {
 13914  00BFE4  502A               	movf	modbus_relay_ouput@err^0,w,c
 13915  00BFE6  A4D8               	btfss	status,2,c
 13916  00BFE8  0012               	return	
 13917                           
 13918                           ;app_modbus.c: 135: };app_modbus.c: 141: rs485_writeBytes(g_master.request.frame, g_mast
      +                          er.request.length);
 13919  00BFEA  0EB6               	movlw	low (_g_master+1)
 13920  00BFEC  6E14               	movwf	rs485_writeBytes@wrptr^0,c
 13921  00BFEE  0E02               	movlw	high (_g_master+1)
 13922  00BFF0  6E15               	movwf	(rs485_writeBytes@wrptr+1)^0,c
 13923  00BFF2  C2BF  F016         	movff	_g_master+10,rs485_writeBytes@len
 13924  00BFF6  EC62  F06B         	call	_rs485_writeBytes	;wreg free
 13925  00BFFA  0012               	return		;funcret
 13926  00BFFC                     __end_of_modbus_relay_ouput:
 13927                           	callstack 0
 13928                           
 13929 ;; *************** function _rs485_writeBytes *****************
 13930 ;; Defined at:
 13931 ;;		line 31 in file "bsp/rs485.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  wrptr           2   19[COMRAM] PTR const unsigned char 
 13934 ;;		 -> g_slave.response.frame(23), g_slave.response(24), g_master.request.frame(9), g_master.request(10), 
 13935 ;;  len             1   21[COMRAM] const unsigned char 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  1    wreg      void 
 13940 ;; Registers used:
 13941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/1
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13947 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13951 ;;Total ram usage:        4 bytes
 13952 ;; Hardware stack levels used: 1
 13953 ;; Hardware stack levels required when called: 7
 13954 ;; This function calls:
 13955 ;;		_usart_writeBytes
 13956 ;; This function is called by:
 13957 ;;		_modbus_relay_ouput
 13958 ;;		_modbus_relay_status
 13959 ;;		_modbus_slave_task
 13960 ;; This function uses a non-reentrant model
 13961 ;;
 13962                           
 13963                           	psect	text61
 13964  00D6C4                     __ptext61:
 13965                           	callstack 0
 13966  00D6C4                     _rs485_writeBytes:
 13967                           	callstack 21
 13968                           
 13969                           ;rs485.c: 33: LATBbits.LATB1 = 1;LATBbits.LATB0 = 1;
 13970                           
 13971                           ;incstack = 0
 13972  00D6C4  828A               	bsf	138,1,c	;volatile
 13973  00D6C6  808A               	bsf	138,0,c	;volatile
 13974                           
 13975                           ;rs485.c: 34: _delay((unsigned long)((2)*(48000000/4000.0)));
 13976  00D6C8  0E20               	movlw	32
 13977  00D6CA  6E17               	movwf	??_rs485_writeBytes^0,c
 13978  00D6CC  0E2A               	movlw	42
 13979  00D6CE                     u43767:
 13980  00D6CE  2EE8               	decfsz	wreg,f,c
 13981  00D6D0  D7FE               	bra	u43767
 13982  00D6D2  2E17               	decfsz	??_rs485_writeBytes^0,f,c
 13983  00D6D4  D7FC               	bra	u43767
 13984                           
 13985                           ;rs485.c: 35: usart_writeBytes(wrptr, len);
 13986  00D6D6  C014  F010         	movff	rs485_writeBytes@wrptr,usart_writeBytes@wrptr
 13987  00D6DA  C015  F011         	movff	rs485_writeBytes@wrptr+1,usart_writeBytes@wrptr+1
 13988  00D6DE  C016  F012         	movff	rs485_writeBytes@len,usart_writeBytes@len
 13989  00D6E2  EC7F  F06D         	call	_usart_writeBytes	;wreg free
 13990                           
 13991                           ;rs485.c: 36: _delay((unsigned long)((2)*(48000000/4000.0)));
 13992  00D6E6  0E20               	movlw	32
 13993  00D6E8  6E17               	movwf	??_rs485_writeBytes^0,c
 13994  00D6EA  0E2A               	movlw	42
 13995  00D6EC                     u43777:
 13996  00D6EC  2EE8               	decfsz	wreg,f,c
 13997  00D6EE  D7FE               	bra	u43777
 13998  00D6F0  2E17               	decfsz	??_rs485_writeBytes^0,f,c
 13999  00D6F2  D7FC               	bra	u43777
 14000                           
 14001                           ;rs485.c: 37: LATBbits.LATB1 = 0;LATBbits.LATB0 = 0;
 14002  00D6F4  928A               	bcf	138,1,c	;volatile
 14003  00D6F6  908A               	bcf	138,0,c	;volatile
 14004  00D6F8  0012               	return		;funcret
 14005  00D6FA                     __end_of_rs485_writeBytes:
 14006                           	callstack 0
 14007                           
 14008 ;; *************** function _usart_writeBytes *****************
 14009 ;; Defined at:
 14010 ;;		line 67 in file "bsp/usart.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;  wrptr           2   15[COMRAM] PTR const unsigned char 
 14013 ;;		 -> g_slave.response.frame(23), g_slave.response(24), g_master.request.frame(9), g_master.request(10), 
 14014 ;;  len             1   17[COMRAM] const unsigned char 
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;  i               1   18[COMRAM] unsigned char 
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  1    wreg      void 
 14019 ;; Registers used:
 14020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14021 ;; Tracked objects:
 14022 ;;		On entry : 0/1
 14023 ;;		On exit  : 0/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14026 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14030 ;;Total ram usage:        4 bytes
 14031 ;; Hardware stack levels used: 1
 14032 ;; Hardware stack levels required when called: 6
 14033 ;; This function calls:
 14034 ;;		_usart_putc
 14035 ;; This function is called by:
 14036 ;;		_rs485_writeBytes
 14037 ;; This function uses a non-reentrant model
 14038 ;;
 14039                           
 14040                           	psect	text62
 14041  00DAFE                     __ptext62:
 14042                           	callstack 0
 14043  00DAFE                     _usart_writeBytes:
 14044                           	callstack 21
 14045                           
 14046                           ;usart.c: 69: for (uint8_t i = 0 ; i < len ; i++) {
 14047                           
 14048                           ;incstack = 0
 14049  00DAFE  0E00               	movlw	0
 14050  00DB00  6E13               	movwf	usart_writeBytes@i^0,c
 14051  00DB02  5012               	movf	usart_writeBytes@len^0,w,c
 14052  00DB04  B4D8               	btfsc	status,2,c
 14053  00DB06  0012               	return	
 14054  00DB08                     l16925:
 14055                           
 14056                           ;usart.c: 70: usart_putc(wrptr[i]);
 14057  00DB08  5013               	movf	usart_writeBytes@i^0,w,c
 14058  00DB0A  2410               	addwf	usart_writeBytes@wrptr^0,w,c
 14059  00DB0C  6ED9               	movwf	fsr2l,c
 14060  00DB0E  0E00               	movlw	0
 14061  00DB10  2011               	addwfc	(usart_writeBytes@wrptr+1)^0,w,c
 14062  00DB12  6EDA               	movwf	fsr2h,c
 14063  00DB14  50DF               	movf	indf2,w,c
 14064  00DB16  EC10  F06F         	call	_usart_putc
 14065  00DB1A  2A13               	incf	usart_writeBytes@i^0,f,c
 14066  00DB1C  5012               	movf	usart_writeBytes@len^0,w,c
 14067  00DB1E  5C13               	subwf	usart_writeBytes@i^0,w,c
 14068  00DB20  B0D8               	btfsc	status,0,c
 14069  00DB22  0012               	return	
 14070  00DB24  D7F1               	goto	l16925
 14071  00DB26                     __end_of_usart_writeBytes:
 14072                           	callstack 0
 14073                           
 14074 ;; *************** function _usart_putc *****************
 14075 ;; Defined at:
 14076 ;;		line 36 in file "bsp/usart.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;  c               1    wreg     unsigned char 
 14079 ;; Auto vars:     Size  Location     Type
 14080 ;;  c               1   14[COMRAM] unsigned char 
 14081 ;; Return value:  Size  Location     Type
 14082 ;;                  1    wreg      void 
 14083 ;; Registers used:
 14084 ;;		wreg, status,2, cstack
 14085 ;; Tracked objects:
 14086 ;;		On entry : 0/1
 14087 ;;		On exit  : 0/0
 14088 ;;		Unchanged: 0/0
 14089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14094 ;;Total ram usage:        1 bytes
 14095 ;; Hardware stack levels used: 1
 14096 ;; Hardware stack levels required when called: 5
 14097 ;; This function calls:
 14098 ;;		_usart_tx_empty
 14099 ;; This function is called by:
 14100 ;;		_usart_writeBytes
 14101 ;; This function uses a non-reentrant model
 14102 ;;
 14103                           
 14104                           	psect	text63
 14105  00DE20                     __ptext63:
 14106                           	callstack 0
 14107  00DE20                     _usart_putc:
 14108                           	callstack 21
 14109                           
 14110                           ;incstack = 0
 14111                           ;usart_putc@c stored from wreg
 14112  00DE20  6E0F               	movwf	usart_putc@c^0,c
 14113  00DE22                     
 14114                           ;usart.c: 38: while (!usart_tx_empty())
 14115  00DE22  EC46  F06F         	call	_usart_tx_empty	;wreg free
 14116  00DE26  0900               	iorlw	0
 14117  00DE28  B4D8               	btfsc	status,2,c
 14118  00DE2A  D7FB               	goto	l10407
 14119                           
 14120                           ;usart.c: 40: TXREG = c;
 14121  00DE2C  C00F  FFAE         	movff	usart_putc@c,4014	;volatile
 14122  00DE30  0012               	return		;funcret
 14123  00DE32                     __end_of_usart_putc:
 14124                           	callstack 0
 14125                           
 14126 ;; *************** function _usart_tx_empty *****************
 14127 ;; Defined at:
 14128 ;;		line 29 in file "bsp/usart.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;		None
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;		None
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  1    wreg      unsigned char 
 14135 ;; Registers used:
 14136 ;;		wreg
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/1
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14146 ;;Total ram usage:        0 bytes
 14147 ;; Hardware stack levels used: 1
 14148 ;; Hardware stack levels required when called: 4
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_usart_putc
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text64
 14157  00DE8C                     __ptext64:
 14158                           	callstack 0
 14159  00DE8C                     _usart_tx_empty:
 14160                           	callstack 21
 14161                           
 14162                           ;usart.c: 31: if (TXSTA1bits.TRMT)
 14163                           
 14164                           ;incstack = 0
 14165  00DE8C  A2AD               	btfss	173,1,c	;volatile
 14166  00DE8E  D002               	goto	l10305
 14167                           
 14168                           ;usart.c: 32: return 1;
 14169  00DE90  0E01               	movlw	1
 14170  00DE92  0012               	return	
 14171  00DE94                     l10305:
 14172                           
 14173                           ;usart.c: 33: return 0;
 14174  00DE94  0E00               	movlw	0
 14175  00DE96  0012               	return		;funcret
 14176  00DE98                     __end_of_usart_tx_empty:
 14177                           	callstack 0
 14178                           
 14179 ;; *************** function _modbusBuildRequest05 *****************
 14180 ;; Defined at:
 14181 ;;		line 90 in file "lightmodbus/master/mbcoils.c"
 14182 ;; Parameters:    Size  Location     Type
 14183 ;;  status          2   28[COMRAM] PTR struct modbusMaster
 14184 ;;		 -> g_master(37), 
 14185 ;;  address         1   30[COMRAM] unsigned char 
 14186 ;;  index           2   31[COMRAM] unsigned int 
 14187 ;;  value           2   33[COMRAM] unsigned int 
 14188 ;; Auto vars:     Size  Location     Type
 14189 ;;  builder         2   35[COMRAM] PTR struct modbusParser
 14190 ;;		 -> g_master.request.frame(9), 
 14191 ;;  frameLength     1    0        unsigned char 
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  1    wreg      enum E235
 14194 ;; Registers used:
 14195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14196 ;; Tracked objects:
 14197 ;;		On entry : 3F/1
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14201 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14204 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14205 ;;Total ram usage:        9 bytes
 14206 ;; Hardware stack levels used: 1
 14207 ;; Hardware stack levels required when called: 6
 14208 ;; This function calls:
 14209 ;;		_memset
 14210 ;;		_modbusCRC
 14211 ;;		_modbusMatchEndian
 14212 ;; This function is called by:
 14213 ;;		_modbus_relay_ouput
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           	psect	text65
 14218  009DE2                     __ptext65:
 14219                           	callstack 0
 14220  009DE2                     _modbusBuildRequest05:
 14221                           	callstack 19
 14222                           
 14223                           ; BSR set to: 1
 14224                           ;mbcoils.c: 99: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 14225                           
 14226                           ; BSR set to: 1
 14227                           
 14228                           ;incstack = 0
 14229  009DE2  501D               	movf	modbusBuildRequest05@status^0,w,c
 14230  009DE4  101E               	iorwf	(modbusBuildRequest05@status+1)^0,w,c
 14231  009DE6  A4D8               	btfss	status,2,c
 14232  009DE8  D002               	goto	l17509
 14233                           
 14234                           ; BSR set to: 1
 14235  009DEA  0E04               	movlw	4
 14236  009DEC  0012               	return	
 14237  009DEE                     l17509:
 14238                           
 14239                           ; BSR set to: 1
 14240                           ;mbcoils.c: 102: status->request.length = 0;
 14241  009DEE  EE20 F00A          	lfsr	2,10
 14242  009DF2  501D               	movf	modbusBuildRequest05@status^0,w,c
 14243  009DF4  26D9               	addwf	fsr2l,f,c
 14244  009DF6  501E               	movf	(modbusBuildRequest05@status+1)^0,w,c
 14245  009DF8  22DA               	addwfc	fsr2h,f,c
 14246  009DFA  0E00               	movlw	0
 14247  009DFC  6EDF               	movwf	indf2,c
 14248                           
 14249                           ; BSR set to: 1
 14250                           ;mbcoils.c: 103: status->predictedResponseLength = 0;
 14251  009DFE  C01D  FFD9         	movff	modbusBuildRequest05@status,fsr2l
 14252  009E02  C01E  FFDA         	movff	modbusBuildRequest05@status+1,fsr2h
 14253  009E06  0E00               	movlw	0
 14254  009E08  6EDF               	movwf	indf2,c
 14255                           
 14256                           ; BSR set to: 1
 14257                           ;mbcoils.c: 112: memset( status->request.frame, 0, frameLength );
 14258  009E0A  0E01               	movlw	1
 14259  009E0C  241D               	addwf	modbusBuildRequest05@status^0,w,c
 14260  009E0E  6E15               	movwf	memset@p1^0,c
 14261  009E10  0E00               	movlw	0
 14262  009E12  201E               	addwfc	(modbusBuildRequest05@status+1)^0,w,c
 14263  009E14  6E16               	movwf	(memset@p1+1)^0,c
 14264  009E16  0E00               	movlw	0
 14265  009E18  6E18               	movwf	(memset@c+1)^0,c
 14266  009E1A  0E00               	movlw	0
 14267  009E1C  6E17               	movwf	memset@c^0,c
 14268  009E1E  0E00               	movlw	0
 14269  009E20  6E1A               	movwf	(memset@n+1)^0,c
 14270  009E22  0E08               	movlw	8
 14271  009E24  6E19               	movwf	memset@n^0,c
 14272  009E26  ECD6  F06C         	call	_memset	;wreg free
 14273                           
 14274                           ;mbcoils.c: 115: ModbusParser *builder = (ModbusParser *) status->request.frame;
 14275  009E2A  0E01               	movlw	1
 14276  009E2C  241D               	addwf	modbusBuildRequest05@status^0,w,c
 14277  009E2E  6E24               	movwf	modbusBuildRequest05@builder^0,c
 14278  009E30  0E00               	movlw	0
 14279  009E32  201E               	addwfc	(modbusBuildRequest05@status+1)^0,w,c
 14280  009E34  6E25               	movwf	(modbusBuildRequest05@builder+1)^0,c
 14281                           
 14282                           ;mbcoils.c: 117: value = ( value != 0 ) ? 0xFF00 : 0x0000;
 14283  009E36  5022               	movf	modbusBuildRequest05@value^0,w,c
 14284  009E38  1023               	iorwf	(modbusBuildRequest05@value+1)^0,w,c
 14285  009E3A  A4D8               	btfss	status,2,c
 14286  009E3C  D002               	goto	l17527
 14287  009E3E  0E00               	movlw	0
 14288  009E40  D001               	goto	L28
 14289  009E42                     l17527:
 14290  009E42  0EFF               	movlw	255
 14291  009E44                     L28:
 14292  009E44  6E23               	movwf	(modbusBuildRequest05@value+1)^0,c
 14293  009E46  0E00               	movlw	0
 14294  009E48  6E22               	movwf	modbusBuildRequest05@value^0,c
 14295                           
 14296                           ;mbcoils.c: 119: builder->_base.address = address;
 14297  009E4A  C024  FFD9         	movff	modbusBuildRequest05@builder,fsr2l
 14298  009E4E  C025  FFDA         	movff	modbusBuildRequest05@builder+1,fsr2h
 14299  009E52  C01F  FFDF         	movff	modbusBuildRequest05@address,indf2
 14300                           
 14301                           ;mbcoils.c: 120: builder->_base.function = 5;
 14302  009E56  EE20 F001          	lfsr	2,1
 14303  009E5A  5024               	movf	modbusBuildRequest05@builder^0,w,c
 14304  009E5C  26D9               	addwf	fsr2l,f,c
 14305  009E5E  5025               	movf	(modbusBuildRequest05@builder+1)^0,w,c
 14306  009E60  22DA               	addwfc	fsr2h,f,c
 14307  009E62  0E05               	movlw	5
 14308  009E64  6EDF               	movwf	indf2,c
 14309                           
 14310                           ;mbcoils.c: 121: builder->request05.index = modbusMatchEndian( index );
 14311  009E66  C020  F01B         	movff	modbusBuildRequest05@index,modbusMatchEndian@data
 14312  009E6A  C021  F01C         	movff	modbusBuildRequest05@index+1,modbusMatchEndian@data+1
 14313  009E6E  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 14314  009E72  EE20 F002          	lfsr	2,2
 14315  009E76  5024               	movf	modbusBuildRequest05@builder^0,w,c
 14316  009E78  26D9               	addwf	fsr2l,f,c
 14317  009E7A  5025               	movf	(modbusBuildRequest05@builder+1)^0,w,c
 14318  009E7C  22DA               	addwfc	fsr2h,f,c
 14319  009E7E  C01B  FFDE         	movff	?_modbusMatchEndian,postinc2
 14320  009E82  C01C  FFDD         	movff	?_modbusMatchEndian+1,postdec2
 14321                           
 14322                           ;mbcoils.c: 122: builder->request05.value = modbusMatchEndian( value );
 14323  009E86  C022  F01B         	movff	modbusBuildRequest05@value,modbusMatchEndian@data
 14324  009E8A  C023  F01C         	movff	modbusBuildRequest05@value+1,modbusMatchEndian@data+1
 14325  009E8E  ECE7  F06E         	call	_modbusMatchEndian	;wreg free
 14326  009E92  EE20 F004          	lfsr	2,4
 14327  009E96  5024               	movf	modbusBuildRequest05@builder^0,w,c
 14328  009E98  26D9               	addwf	fsr2l,f,c
 14329  009E9A  5025               	movf	(modbusBuildRequest05@builder+1)^0,w,c
 14330  009E9C  22DA               	addwfc	fsr2h,f,c
 14331  009E9E  C01B  FFDE         	movff	?_modbusMatchEndian,postinc2
 14332  009EA2  C01C  FFDD         	movff	?_modbusMatchEndian+1,postdec2
 14333                           
 14334                           ;mbcoils.c: 125: builder->request05.crc = modbusCRC( builder->frame, frameLength - 2 );
 14335  009EA6  C024  F00F         	movff	modbusBuildRequest05@builder,modbusCRC@data
 14336  009EAA  C025  F010         	movff	modbusBuildRequest05@builder+1,modbusCRC@data+1
 14337  009EAE  0E00               	movlw	0
 14338  009EB0  6E12               	movwf	(modbusCRC@length+1)^0,c
 14339  009EB2  0E06               	movlw	6
 14340  009EB4  6E11               	movwf	modbusCRC@length^0,c
 14341  009EB6  EC2C  F062         	call	_modbusCRC	;wreg free
 14342  009EBA  EE20 F006          	lfsr	2,6
 14343  009EBE  5024               	movf	modbusBuildRequest05@builder^0,w,c
 14344  009EC0  26D9               	addwf	fsr2l,f,c
 14345  009EC2  5025               	movf	(modbusBuildRequest05@builder+1)^0,w,c
 14346  009EC4  22DA               	addwfc	fsr2h,f,c
 14347  009EC6  C00F  FFDE         	movff	?_modbusCRC,postinc2
 14348  009ECA  C010  FFDD         	movff	?_modbusCRC+1,postdec2
 14349                           
 14350                           ;mbcoils.c: 127: status->request.length = frameLength;
 14351  009ECE  EE20 F00A          	lfsr	2,10
 14352  009ED2  501D               	movf	modbusBuildRequest05@status^0,w,c
 14353  009ED4  26D9               	addwf	fsr2l,f,c
 14354  009ED6  501E               	movf	(modbusBuildRequest05@status+1)^0,w,c
 14355  009ED8  22DA               	addwfc	fsr2h,f,c
 14356  009EDA  0E08               	movlw	8
 14357  009EDC  6EDF               	movwf	indf2,c
 14358                           
 14359                           ;mbcoils.c: 128: if ( address ) status->predictedResponseLength = 8;
 14360  009EDE  501F               	movf	modbusBuildRequest05@address^0,w,c
 14361  009EE0  B4D8               	btfsc	status,2,c
 14362  009EE2  D006               	goto	l17545
 14363  009EE4  C01D  FFD9         	movff	modbusBuildRequest05@status,fsr2l
 14364  009EE8  C01E  FFDA         	movff	modbusBuildRequest05@status+1,fsr2h
 14365  009EEC  0E08               	movlw	8
 14366  009EEE  6EDF               	movwf	indf2,c
 14367  009EF0                     l17545:
 14368                           
 14369                           ;mbcoils.c: 130: status->buildError = MODBUS_FERROR_OK;
 14370  009EF0  EE20 F024          	lfsr	2,36
 14371  009EF4  501D               	movf	modbusBuildRequest05@status^0,w,c
 14372  009EF6  26D9               	addwf	fsr2l,f,c
 14373  009EF8  501E               	movf	(modbusBuildRequest05@status+1)^0,w,c
 14374  009EFA  22DA               	addwfc	fsr2h,f,c
 14375  009EFC  0E00               	movlw	0
 14376  009EFE  6EDF               	movwf	indf2,c
 14377                           
 14378                           ;mbcoils.c: 131: return MODBUS_ERROR_OK;
 14379  009F00  0E00               	movlw	0
 14380  009F02  0012               	return		;funcret
 14381  009F04                     __end_of_modbusBuildRequest05:
 14382                           	callstack 0
 14383                           
 14384 ;; *************** function _modbusMatchEndian *****************
 14385 ;; Defined at:
 14386 ;;		line 57 in file "lightmodbus/lightmodbus.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;  data            2   26[COMRAM] unsigned int 
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;		None
 14391 ;; Return value:  Size  Location     Type
 14392 ;;                  2   26[COMRAM] unsigned int 
 14393 ;; Registers used:
 14394 ;;		wreg, status,2, cstack
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14404 ;;Total ram usage:        2 bytes
 14405 ;; Hardware stack levels used: 1
 14406 ;; Hardware stack levels required when called: 5
 14407 ;; This function calls:
 14408 ;;		_modbusSwapEndian
 14409 ;; This function is called by:
 14410 ;;		_modbusBuildRequest0102
 14411 ;;		_modbusBuildRequest05
 14412 ;;		_modbusParseResponse0102
 14413 ;;		_modbusParseResponse05
 14414 ;;		_modbusParseRequest0304
 14415 ;; This function uses a non-reentrant model
 14416 ;;
 14417                           
 14418                           	psect	text66
 14419  00DDCE                     __ptext66:
 14420                           	callstack 0
 14421  00DDCE                     _modbusMatchEndian:
 14422                           	callstack 21
 14423                           
 14424                           ;incstack = 0
 14425  00DDCE  C01B  F00F         	movff	modbusMatchEndian@data,modbusSwapEndian@data
 14426  00DDD2  C01C  F010         	movff	modbusMatchEndian@data+1,modbusSwapEndian@data+1
 14427  00DDD6  EC32  F06F         	call	_modbusSwapEndian	;wreg free
 14428  00DDDA  C00F  F01B         	movff	?_modbusSwapEndian,?_modbusMatchEndian
 14429  00DDDE  C010  F01C         	movff	?_modbusSwapEndian+1,?_modbusMatchEndian+1
 14430  00DDE2  0012               	return		;funcret
 14431  00DDE4                     __end_of_modbusMatchEndian:
 14432                           	callstack 0
 14433                           
 14434 ;; *************** function _modbusSwapEndian *****************
 14435 ;; Defined at:
 14436 ;;		line 52 in file "lightmodbus/lightmodbus.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  data            2   14[COMRAM] unsigned int 
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;		None
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  2   14[COMRAM] unsigned int 
 14443 ;; Registers used:
 14444 ;;		wreg, status,2
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14454 ;;Total ram usage:        4 bytes
 14455 ;; Hardware stack levels used: 1
 14456 ;; Hardware stack levels required when called: 4
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_modbusMatchEndian
 14461 ;;		_rcallback
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           	psect	text67
 14466  00DE64                     __ptext67:
 14467                           	callstack 0
 14468  00DE64                     _modbusSwapEndian:
 14469                           	callstack 21
 14470                           
 14471                           ;incstack = 0
 14472  00DE64  500F               	movf	modbusSwapEndian@data^0,w,c
 14473  00DE66  6E11               	movwf	??_modbusSwapEndian^0,c
 14474  00DE68  5010               	movf	(modbusSwapEndian@data+1)^0,w,c
 14475  00DE6A  6E0F               	movwf	?_modbusSwapEndian^0,c
 14476  00DE6C  C011  F010         	movff	??_modbusSwapEndian,?_modbusSwapEndian+1
 14477  00DE70  0012               	return		;funcret
 14478  00DE72                     __end_of_modbusSwapEndian:
 14479                           	callstack 0
 14480                           
 14481 ;; *************** function _modbusCRC *****************
 14482 ;; Defined at:
 14483 ;;		line 61 in file "lightmodbus/lightmodbus.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;  data            2   14[COMRAM] PTR const unsigned char 
 14486 ;;		 -> g_slave.response.frame(23), g_slave.request.frame(9), g_master.response.frame(9), g_master.request.frame(9), 
 14487 ;;		 -> modbusBuildException@exception(2), modbusParseRequest0304@builder(2), modbusBuildRequest05@builder(2), modbusBui
      +ldRequest0102@builder(2), 
 14488 ;;  length          2   16[COMRAM] unsigned int 
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;  crc             2   22[COMRAM] unsigned int 
 14491 ;;  i               2   19[COMRAM] unsigned int 
 14492 ;;  j               1   21[COMRAM] unsigned char 
 14493 ;; Return value:  Size  Location     Type
 14494 ;;                  2   14[COMRAM] unsigned int 
 14495 ;; Registers used:
 14496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14497 ;; Tracked objects:
 14498 ;;		On entry : 0/0
 14499 ;;		On exit  : 0/0
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14503 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14505 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14506 ;;Total ram usage:       10 bytes
 14507 ;; Hardware stack levels used: 1
 14508 ;; Hardware stack levels required when called: 4
 14509 ;; This function calls:
 14510 ;;		Nothing
 14511 ;; This function is called by:
 14512 ;;		_modbusBuildRequest0102
 14513 ;;		_modbusBuildRequest05
 14514 ;;		_modbusParseRequest0304
 14515 ;;		_modbusBuildException
 14516 ;;		_modbusParseRequest
 14517 ;;		_modbusParseResponse
 14518 ;; This function uses a non-reentrant model
 14519 ;;
 14520                           
 14521                           	psect	text68
 14522  00C458                     __ptext68:
 14523                           	callstack 0
 14524  00C458                     _modbusCRC:
 14525                           	callstack 22
 14526                           
 14527                           ;lightmodbus.c: 65: uint16_t crc = 0xFFFF;
 14528                           
 14529                           ;incstack = 0
 14530  00C458  6817               	setf	modbusCRC@crc^0,c
 14531  00C45A  6818               	setf	(modbusCRC@crc+1)^0,c
 14532                           
 14533                           ;lightmodbus.c: 66: uint16_t i;;lightmodbus.c: 67: uint8_t j;;lightmodbus.c: 69: if ( da
      +                          ta == (0) ) return 0;
 14534  00C45C  500F               	movf	modbusCRC@data^0,w,c
 14535  00C45E  1010               	iorwf	(modbusCRC@data+1)^0,w,c
 14536  00C460  A4D8               	btfss	status,2,c
 14537  00C462  D005               	goto	l16943
 14538  00C464  0E00               	movlw	0
 14539  00C466  6E10               	movwf	(?_modbusCRC+1)^0,c
 14540  00C468  0E00               	movlw	0
 14541  00C46A  6E0F               	movwf	?_modbusCRC^0,c
 14542  00C46C  0012               	return	
 14543  00C46E                     l16943:
 14544                           
 14545                           ;lightmodbus.c: 71: for ( i = 0; i < length; i++ )
 14546  00C46E  0E00               	movlw	0
 14547  00C470  6E15               	movwf	(modbusCRC@i+1)^0,c
 14548  00C472  0E00               	movlw	0
 14549  00C474  6E14               	movwf	modbusCRC@i^0,c
 14550  00C476  D01F               	goto	l16963
 14551  00C478                     l16945:
 14552                           
 14553                           ;lightmodbus.c: 72: {;lightmodbus.c: 73: crc ^= (uint16_t) data[i];
 14554  00C478  5014               	movf	modbusCRC@i^0,w,c
 14555  00C47A  240F               	addwf	modbusCRC@data^0,w,c
 14556  00C47C  6ED9               	movwf	fsr2l,c
 14557  00C47E  5015               	movf	(modbusCRC@i+1)^0,w,c
 14558  00C480  2010               	addwfc	(modbusCRC@data+1)^0,w,c
 14559  00C482  6EDA               	movwf	fsr2h,c
 14560  00C484  50DF               	movf	indf2,w,c
 14561  00C486  6E13               	movwf	??_modbusCRC^0,c
 14562  00C488  5013               	movf	??_modbusCRC^0,w,c
 14563  00C48A  1A17               	xorwf	modbusCRC@crc^0,f,c
 14564                           
 14565                           ;lightmodbus.c: 75: for ( j = 8; j != 0; j-- )
 14566  00C48C  0E08               	movlw	8
 14567  00C48E  6E16               	movwf	modbusCRC@j^0,c
 14568  00C490                     l591:
 14569                           
 14570                           ;lightmodbus.c: 76: {;lightmodbus.c: 79: if ( ( crc & 0x0001 ) != 0 )
 14571  00C490  A017               	btfss	modbusCRC@crc^0,0,c
 14572  00C492  D008               	goto	l16957
 14573                           
 14574                           ;lightmodbus.c: 80: {;lightmodbus.c: 81: crc >>= 1;
 14575  00C494  90D8               	bcf	status,0,c
 14576  00C496  3218               	rrcf	(modbusCRC@crc+1)^0,f,c
 14577  00C498  3217               	rrcf	modbusCRC@crc^0,f,c
 14578                           
 14579                           ;lightmodbus.c: 82: crc ^= 0xA001;
 14580  00C49A  0E01               	movlw	1
 14581  00C49C  1A17               	xorwf	modbusCRC@crc^0,f,c
 14582  00C49E  0EA0               	movlw	160
 14583  00C4A0  1A18               	xorwf	(modbusCRC@crc+1)^0,f,c
 14584                           
 14585                           ;lightmodbus.c: 83: }
 14586  00C4A2  D003               	goto	l594
 14587  00C4A4                     l16957:
 14588                           
 14589                           ;lightmodbus.c: 84: else;lightmodbus.c: 85: crc >>= 1;
 14590  00C4A4  90D8               	bcf	status,0,c
 14591  00C4A6  3218               	rrcf	(modbusCRC@crc+1)^0,f,c
 14592  00C4A8  3217               	rrcf	modbusCRC@crc^0,f,c
 14593  00C4AA                     l594:
 14594  00C4AA  0616               	decf	modbusCRC@j^0,f,c
 14595  00C4AC  5016               	movf	modbusCRC@j^0,w,c
 14596  00C4AE  A4D8               	btfss	status,2,c
 14597  00C4B0  D7EF               	goto	l591
 14598  00C4B2  4A14               	infsnz	modbusCRC@i^0,f,c
 14599  00C4B4  2A15               	incf	(modbusCRC@i+1)^0,f,c
 14600  00C4B6                     l16963:
 14601  00C4B6  5011               	movf	modbusCRC@length^0,w,c
 14602  00C4B8  5C14               	subwf	modbusCRC@i^0,w,c
 14603  00C4BA  5012               	movf	(modbusCRC@length+1)^0,w,c
 14604  00C4BC  5815               	subwfb	(modbusCRC@i+1)^0,w,c
 14605  00C4BE  A0D8               	btfss	status,0,c
 14606  00C4C0  D7DB               	goto	l16945
 14607                           
 14608                           ;lightmodbus.c: 86: };lightmodbus.c: 87: };lightmodbus.c: 94: return crc;
 14609  00C4C2  C017  F00F         	movff	modbusCRC@crc,?_modbusCRC
 14610  00C4C6  C018  F010         	movff	modbusCRC@crc+1,?_modbusCRC+1
 14611  00C4CA  0012               	return		;funcret
 14612  00C4CC                     __end_of_modbusCRC:
 14613                           	callstack 0
 14614                           
 14615 ;; *************** function _modbus_check_threshold *****************
 14616 ;; Defined at:
 14617 ;;		line 164 in file "app_modbus.c"
 14618 ;; Parameters:    Size  Location     Type
 14619 ;;  ppm             4   61[BANK0 ] const float 
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;  max             4   65[BANK0 ] float 
 14622 ;;  type            1   69[BANK0 ] enum E595
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  1    wreg      enum E595
 14625 ;; Registers used:
 14626 ;;		wreg, status,2, status,0, cstack
 14627 ;; Tracked objects:
 14628 ;;		On entry : 3F/1
 14629 ;;		On exit  : 3F/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14633 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14635 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14636 ;;Total ram usage:        9 bytes
 14637 ;; Hardware stack levels used: 1
 14638 ;; Hardware stack levels required when called: 5
 14639 ;; This function calls:
 14640 ;;		___flge
 14641 ;; This function is called by:
 14642 ;;		_modbus_master_relay_control_task
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           	psect	text69
 14647  00D07E                     __ptext69:
 14648                           	callstack 0
 14649  00D07E                     _modbus_check_threshold:
 14650                           	callstack 23
 14651                           
 14652                           ; BSR set to: 1
 14653                           ;app_modbus.c: 166: float max = g_nvm.flash.ctrl_ppm_max;
 14654                           
 14655                           ;incstack = 0
 14656  00D07E  C158  F0A1         	movff	_g_nvm+6,modbus_check_threshold@max
 14657  00D082  C159  F0A2         	movff	_g_nvm+7,modbus_check_threshold@max+1
 14658  00D086  C15A  F0A3         	movff	_g_nvm+8,modbus_check_threshold@max+2
 14659  00D08A  C15B  F0A4         	movff	_g_nvm+9,modbus_check_threshold@max+3
 14660                           
 14661                           ; BSR set to: 1
 14662                           ;app_modbus.c: 168: e_EventType type = EV_NORMAL;
 14663  00D08E  0E00               	movlw	0
 14664  00D090  0100               	movlb	0	; () banked
 14665  00D092  6FA5               	movwf	modbus_check_threshold@type& (0+255),b
 14666                           
 14667                           ; BSR set to: 0
 14668                           ;app_modbus.c: 169: if (ppm > max) {
 14669  00D094  C0A1  F091         	movff	modbus_check_threshold@max,___flge@ff1
 14670  00D098  C0A2  F092         	movff	modbus_check_threshold@max+1,___flge@ff1+1
 14671  00D09C  C0A3  F093         	movff	modbus_check_threshold@max+2,___flge@ff1+2
 14672  00D0A0  C0A4  F094         	movff	modbus_check_threshold@max+3,___flge@ff1+3
 14673  00D0A4  C09D  F095         	movff	modbus_check_threshold@ppm,___flge@ff2
 14674  00D0A8  C09E  F096         	movff	modbus_check_threshold@ppm+1,___flge@ff2+1
 14675  00D0AC  C09F  F097         	movff	modbus_check_threshold@ppm+2,___flge@ff2+2
 14676  00D0B0  C0A0  F098         	movff	modbus_check_threshold@ppm+3,___flge@ff2+3
 14677  00D0B4  EC31  F056         	call	___flge	;wreg free
 14678  00D0B8  B0D8               	btfsc	status,0,c
 14679  00D0BA  D002               	goto	l1238
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;app_modbus.c: 170: type = EV_UP;
 14683  00D0BC  0E01               	movlw	1
 14684  00D0BE  6FA5               	movwf	modbus_check_threshold@type& (0+255),b
 14685  00D0C0                     l1238:
 14686                           
 14687                           ; BSR set to: 0
 14688                           ;app_modbus.c: 171: };app_modbus.c: 172: return type;
 14689  00D0C0  51A5               	movf	modbus_check_threshold@type& (0+255),w,b
 14690                           
 14691                           ; BSR set to: 0
 14692  00D0C2  0012               	return		;funcret
 14693  00D0C4                     __end_of_modbus_check_threshold:
 14694                           	callstack 0
 14695                           
 14696 ;; *************** function _modbus_check_event *****************
 14697 ;; Defined at:
 14698 ;;		line 176 in file "app_modbus.c"
 14699 ;; Parameters:    Size  Location     Type
 14700 ;;  type            1    wreg     const enum E595
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;  type            1   26[COMRAM] const enum E595
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  1    wreg      void 
 14705 ;; Registers used:
 14706 ;;		wreg, status,2, status,0, cstack
 14707 ;; Tracked objects:
 14708 ;;		On entry : 3F/0
 14709 ;;		On exit  : 3F/1
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14716 ;;Total ram usage:        1 bytes
 14717 ;; Hardware stack levels used: 1
 14718 ;; Hardware stack levels required when called: 5
 14719 ;; This function calls:
 14720 ;;		___lmul
 14721 ;; This function is called by:
 14722 ;;		_modbus_master_relay_control_task
 14723 ;; This function uses a non-reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text70
 14727  00BDDA                     __ptext70:
 14728                           	callstack 0
 14729  00BDDA                     _modbus_check_event:
 14730                           	callstack 23
 14731                           
 14732                           ; BSR set to: 0
 14733                           ;incstack = 0
 14734                           ;modbus_check_event@type stored from wreg
 14735  00BDDA  6E1B               	movwf	modbus_check_event@type^0,c
 14736                           
 14737                           ;app_modbus.c: 178: if (g_modbus.last_event != type) {
 14738  00BDDC  501B               	movf	modbus_check_event@type^0,w,c
 14739  00BDDE  0101               	movlb	1	; () banked
 14740  00BDE0  192D               	xorwf	(_g_modbus+9)& (0+255),w,b
 14741  00BDE2  B4D8               	btfsc	status,2,c
 14742  00BDE4  D00C               	goto	l20349
 14743                           
 14744                           ; BSR set to: 1
 14745                           ;app_modbus.c: 179: g_modbus.last_event = type;
 14746  00BDE6  C01B  F12D         	movff	modbus_check_event@type,_g_modbus+9
 14747                           
 14748                           ; BSR set to: 1
 14749                           ;app_modbus.c: 180: g_modbus.event_flag = 1;
 14750  00BDEA  0E01               	movlw	1
 14751  00BDEC  6F26               	movwf	(_g_modbus+2)& (0+255),b
 14752                           
 14753                           ; BSR set to: 1
 14754                           ;app_modbus.c: 181: g_modbus.event_timer = 0;
 14755  00BDEE  0E00               	movlw	0
 14756  00BDF0  6F29               	movwf	(_g_modbus+5)& (0+255),b
 14757  00BDF2  0E00               	movlw	0
 14758  00BDF4  6F2A               	movwf	(_g_modbus+6)& (0+255),b
 14759  00BDF6  0E00               	movlw	0
 14760  00BDF8  6F2B               	movwf	(_g_modbus+7)& (0+255),b
 14761  00BDFA  0E00               	movlw	0
 14762  00BDFC  6F2C               	movwf	(_g_modbus+8)& (0+255),b
 14763  00BDFE                     l20349:
 14764                           
 14765                           ; BSR set to: 1
 14766                           ;app_modbus.c: 182: };app_modbus.c: 183: if (g_modbus.event_flag) {
 14767  00BDFE  5126               	movf	(_g_modbus+2)& (0+255),w,b
 14768  00BE00  B4D8               	btfsc	status,2,c
 14769  00BE02  0012               	return	
 14770                           
 14771                           ; BSR set to: 1
 14772                           ;app_modbus.c: 184: g_modbus.event_timer++;
 14773  00BE04  0E01               	movlw	1
 14774  00BE06  2729               	addwf	(_g_modbus+5)& (0+255),f,b
 14775  00BE08  0E00               	movlw	0
 14776  00BE0A  232A               	addwfc	(_g_modbus+6)& (0+255),f,b
 14777  00BE0C  232B               	addwfc	(_g_modbus+7)& (0+255),f,b
 14778  00BE0E  232C               	addwfc	(_g_modbus+8)& (0+255),f,b
 14779                           
 14780                           ; BSR set to: 1
 14781                           ;app_modbus.c: 189: if (g_modbus.event_timer >= g_nvm.flash.ctrl_holding_min * 60) {
 14782  00BE10  C15C  F00F         	movff	_g_nvm+10,___lmul@multiplier
 14783  00BE14  C15D  F010         	movff	_g_nvm+11,___lmul@multiplier+1
 14784  00BE18  C15E  F011         	movff	_g_nvm+12,___lmul@multiplier+2
 14785  00BE1C  C15F  F012         	movff	_g_nvm+13,___lmul@multiplier+3
 14786  00BE20  0E3C               	movlw	60
 14787  00BE22  6E13               	movwf	___lmul@multiplicand^0,c
 14788  00BE24  0E00               	movlw	0
 14789  00BE26  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 14790  00BE28  0E00               	movlw	0
 14791  00BE2A  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 14792  00BE2C  0E00               	movlw	0
 14793  00BE2E  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 14794  00BE30  EC69  F066         	call	___lmul	;wreg free
 14795  00BE34  500F               	movf	?___lmul^0,w,c
 14796  00BE36  0101               	movlb	1	; () banked
 14797  00BE38  5D29               	subwf	(_g_modbus+5)& (0+255),w,b
 14798  00BE3A  5010               	movf	(?___lmul+1)^0,w,c
 14799  00BE3C  592A               	subwfb	(_g_modbus+6)& (0+255),w,b
 14800  00BE3E  5011               	movf	(?___lmul+2)^0,w,c
 14801  00BE40  592B               	subwfb	(_g_modbus+7)& (0+255),w,b
 14802  00BE42  5012               	movf	(?___lmul+3)^0,w,c
 14803  00BE44  592C               	subwfb	(_g_modbus+8)& (0+255),w,b
 14804  00BE46  A0D8               	btfss	status,0,c
 14805  00BE48  0012               	return	
 14806                           
 14807                           ; BSR set to: 1
 14808                           ;app_modbus.c: 190: g_modbus.event_timer = 0;
 14809  00BE4A  0E00               	movlw	0
 14810  00BE4C  6F29               	movwf	(_g_modbus+5)& (0+255),b
 14811  00BE4E  0E00               	movlw	0
 14812  00BE50  6F2A               	movwf	(_g_modbus+6)& (0+255),b
 14813  00BE52  0E00               	movlw	0
 14814  00BE54  6F2B               	movwf	(_g_modbus+7)& (0+255),b
 14815  00BE56  0E00               	movlw	0
 14816  00BE58  6F2C               	movwf	(_g_modbus+8)& (0+255),b
 14817                           
 14818                           ;app_modbus.c: 191: g_modbus.event_flag = 0;
 14819  00BE5A  0E00               	movlw	0
 14820  00BE5C  6F26               	movwf	(_g_modbus+2)& (0+255),b
 14821                           
 14822                           ;app_modbus.c: 192: g_modbus.fire_flag = 1;
 14823  00BE5E  0E01               	movlw	1
 14824  00BE60  6F27               	movwf	(_g_modbus+3)& (0+255),b
 14825                           
 14826                           ; BSR set to: 1
 14827  00BE62  0012               	return		;funcret
 14828  00BE64                     __end_of_modbus_check_event:
 14829                           	callstack 0
 14830                           
 14831 ;; *************** function _atcommand_task *****************
 14832 ;; Defined at:
 14833 ;;		line 246 in file "app_atcommand.c"
 14834 ;; Parameters:    Size  Location     Type
 14835 ;;		None
 14836 ;; Auto vars:     Size  Location     Type
 14837 ;;  ch              1    2[BANK1 ] unsigned char 
 14838 ;; Return value:  Size  Location     Type
 14839 ;;                  1    wreg      void 
 14840 ;; Registers used:
 14841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14842 ;; Tracked objects:
 14843 ;;		On entry : 0/0
 14844 ;;		On exit  : 0/0
 14845 ;;		Unchanged: 0/0
 14846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14848 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14850 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14851 ;;Total ram usage:        3 bytes
 14852 ;; Hardware stack levels used: 1
 14853 ;; Hardware stack levels required when called: 12
 14854 ;; This function calls:
 14855 ;;		__strclr
 14856 ;;		_buffer_de_queue
 14857 ;;		_build_response
 14858 ;;		_clear_command
 14859 ;;		_parse_command
 14860 ;;		_update_command
 14861 ;; This function is called by:
 14862 ;;		_main
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text71
 14867  009CBA                     __ptext71:
 14868                           	callstack 0
 14869  009CBA                     _atcommand_task:
 14870                           	callstack 18
 14871                           
 14872                           ;app_atcommand.c: 248: uint8_t ch;;app_atcommand.c: 250: switch (g_atcommand.seq) {
 14873                           
 14874                           ; BSR set to: 1
 14875                           ;incstack = 0
 14876  009CBA  D07E               	goto	l33847
 14877  009CBC                     l33789:
 14878                           
 14879                           ;app_atcommand.c: 252: g_atcommand.seq = AT_START;
 14880  009CBC  0E01               	movlw	1
 14881  009CBE  0106               	movlb	6	; () banked
 14882  009CC0  6F00               	movwf	_g_atcommand& (0+255),b
 14883                           
 14884                           ;app_atcommand.c: 253: break;
 14885  009CC2  0012               	return	
 14886  009CC4                     l33791:
 14887                           
 14888                           ; BSR set to: 6
 14889                           ;app_atcommand.c: 255: ch = buffer_de_queue(&g_usb_queue);
 14890  009CC4  0E00               	movlw	low _g_usb_queue
 14891  009CC6  6E0F               	movwf	buffer_de_queue@queue^0,c
 14892  009CC8  0E05               	movlw	high _g_usb_queue
 14893  009CCA  6E10               	movwf	(buffer_de_queue@queue+1)^0,c
 14894  009CCC  ECA0  F062         	call	_buffer_de_queue	;wreg free
 14895  009CD0  0101               	movlb	1	; () banked
 14896  009CD2  6FFF               	movwf	atcommand_task@ch& (0+255),b
 14897                           
 14898                           ; BSR set to: 1
 14899                           ;app_atcommand.c: 256: if (ch) {
 14900  009CD4  51FF               	movf	atcommand_task@ch& (0+255),w,b
 14901  009CD6  B4D8               	btfsc	status,2,c
 14902  009CD8  0012               	return	
 14903                           
 14904                           ; BSR set to: 1
 14905                           ;app_atcommand.c: 257: if (ch == '\r' || ch == '\n') {
 14906  009CDA  0E0D               	movlw	13
 14907  009CDC  19FF               	xorwf	atcommand_task@ch& (0+255),w,b
 14908  009CDE  B4D8               	btfsc	status,2,c
 14909  009CE0  D004               	goto	u42810
 14910                           
 14911                           ; BSR set to: 1
 14912  009CE2  0E0A               	movlw	10
 14913  009CE4  19FF               	xorwf	atcommand_task@ch& (0+255),w,b
 14914  009CE6  A4D8               	btfss	status,2,c
 14915  009CE8  D01F               	goto	l33813
 14916  009CEA                     u42810:
 14917                           
 14918                           ; BSR set to: 1
 14919                           ;app_atcommand.c: 258: if (g_atcommand.readidx > 2) {
 14920  009CEA  0E02               	movlw	2
 14921  009CEC  0106               	movlb	6	; () banked
 14922  009CEE  6541               	cpfsgt	(_g_atcommand+65)& (0+255),b
 14923  009CF0  D00E               	goto	l33809
 14924                           
 14925                           ; BSR set to: 6
 14926                           ;app_atcommand.c: 259: g_atcommand.read_cmd[g_atcommand.readidx++] = ch;
 14927  009CF2  0E01               	movlw	low (_g_atcommand+1)
 14928  009CF4  2541               	addwf	(_g_atcommand+65)& (0+255),w,b
 14929  009CF6  6ED9               	movwf	fsr2l,c
 14930  009CF8  6ADA               	clrf	fsr2h,c
 14931  009CFA  0E06               	movlw	high (_g_atcommand+1)
 14932  009CFC  22DA               	addwfc	fsr2h,f,c
 14933  009CFE  C1FF  FFDF         	movff	atcommand_task@ch,indf2
 14934                           
 14935                           ; BSR set to: 6
 14936  009D02  2B41               	incf	(_g_atcommand+65)& (0+255),f,b
 14937                           
 14938                           ; BSR set to: 6
 14939                           ;app_atcommand.c: 260: g_atcommand.readidx = 0;
 14940  009D04  0E00               	movlw	0
 14941  009D06  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 14942                           
 14943                           ; BSR set to: 6
 14944                           ;app_atcommand.c: 261: g_atcommand.seq = AT_PARSE;
 14945  009D08  0E02               	movlw	2
 14946  009D0A  6F00               	movwf	_g_atcommand& (0+255),b
 14947                           
 14948                           ;app_atcommand.c: 262: } else {
 14949  009D0C  0012               	return	
 14950  009D0E                     l33809:
 14951                           
 14952                           ; BSR set to: 6
 14953                           ;app_atcommand.c: 263: g_atcommand.readidx = 0;
 14954  009D0E  0E00               	movlw	0
 14955  009D10  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 14956                           
 14957                           ; BSR set to: 6
 14958                           ;app_atcommand.c: 264: _strclr(g_atcommand.read_cmd, sizeof(g_atcommand.read_cmd));
 14959  009D12  0E01               	movlw	low (_g_atcommand+1)
 14960  009D14  6E0F               	movwf	__strclr@dest^0,c
 14961  009D16  0E06               	movlw	high (_g_atcommand+1)
 14962  009D18  6E10               	movwf	(__strclr@dest+1)^0,c
 14963  009D1A  0E00               	movlw	0
 14964  009D1C  6E12               	movwf	(__strclr@n+1)^0,c
 14965  009D1E  0E40               	movlw	64
 14966  009D20  6E11               	movwf	__strclr@n^0,c
 14967  009D22  EC2B  F06B         	call	__strclr	;wreg free
 14968  009D26  0012               	return	
 14969  009D28                     l33813:
 14970                           
 14971                           ; BSR set to: 1
 14972                           ;app_atcommand.c: 267: if (g_atcommand.readidx >= sizeof(g_atcommand.read_cmd)) g_atcomm
      +                          and.readidx = 0;
 14973  009D28  0E3F               	movlw	63
 14974  009D2A  0106               	movlb	6	; () banked
 14975  009D2C  6541               	cpfsgt	(_g_atcommand+65)& (0+255),b
 14976  009D2E  D002               	goto	l33817
 14977                           
 14978                           ; BSR set to: 6
 14979  009D30  0E00               	movlw	0
 14980  009D32  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 14981  009D34                     l33817:
 14982                           
 14983                           ; BSR set to: 6
 14984                           ;app_atcommand.c: 268: g_atcommand.read_cmd[g_atcommand.readidx++] = ch;
 14985  009D34  0E01               	movlw	low (_g_atcommand+1)
 14986  009D36  2541               	addwf	(_g_atcommand+65)& (0+255),w,b
 14987  009D38  6ED9               	movwf	fsr2l,c
 14988  009D3A  6ADA               	clrf	fsr2h,c
 14989  009D3C  0E06               	movlw	high (_g_atcommand+1)
 14990  009D3E  22DA               	addwfc	fsr2h,f,c
 14991  009D40  C1FF  FFDF         	movff	atcommand_task@ch,indf2
 14992                           
 14993                           ; BSR set to: 6
 14994  009D44  2B41               	incf	(_g_atcommand+65)& (0+255),f,b
 14995  009D46  0012               	return	
 14996  009D48                     l33821:
 14997                           
 14998                           ; BSR set to: 6
 14999                           ;app_atcommand.c: 273: if (parse_command(g_atcommand.read_cmd, &g_atcommand.status) == A
      +                          T_PARSE_OK)
 15000  009D48  0E01               	movlw	low (_g_atcommand+1)
 15001  009D4A  6E25               	movwf	parse_command@buff^0,c
 15002  009D4C  0E06               	movlw	high (_g_atcommand+1)
 15003  009D4E  6E26               	movwf	(parse_command@buff+1)^0,c
 15004  009D50  0E42               	movlw	low (_g_atcommand+66)
 15005  009D52  6E27               	movwf	parse_command@status^0,c
 15006  009D54  0E06               	movlw	high (_g_atcommand+66)
 15007  009D56  6E28               	movwf	(parse_command@status+1)^0,c
 15008  009D58  EC36  F030         	call	_parse_command	;wreg free
 15009  009D5C  06E8               	decf	wreg,f,c
 15010  009D5E  A4D8               	btfss	status,2,c
 15011  009D60  D011               	goto	l33831
 15012                           
 15013                           ;app_atcommand.c: 274: g_atcommand.seq = (g_atcommand.status.isApply) ? AT_APPLY : AT_ME
      +                          SSAGE;
 15014  009D62  0106               	movlb	6	; () banked
 15015  009D64  5150               	movf	(_g_atcommand+80)& (0+255),w,b
 15016  009D66  A4D8               	btfss	status,2,c
 15017  009D68  D005               	goto	l33827
 15018                           
 15019                           ; BSR set to: 6
 15020  009D6A  0E00               	movlw	0
 15021  009D6C  0101               	movlb	1	; () banked
 15022  009D6E  6FFE               	movwf	(_atcommand_task$4113+1)& (0+255),b
 15023  009D70  0E04               	movlw	4
 15024  009D72  D004               	goto	L29
 15025  009D74                     l33827:
 15026                           
 15027                           ; BSR set to: 6
 15028  009D74  0E00               	movlw	0
 15029  009D76  0101               	movlb	1	; () banked
 15030  009D78  6FFE               	movwf	(_atcommand_task$4113+1)& (0+255),b
 15031  009D7A  0E03               	movlw	3
 15032  009D7C                     L29:
 15033  009D7C  6FFD               	movwf	_atcommand_task$4113& (0+255),b
 15034                           
 15035                           ; BSR set to: 1
 15036  009D7E  C1FD  F600         	movff	_atcommand_task$4113,_g_atcommand
 15037  009D82  0012               	return	
 15038  009D84                     l33831:
 15039                           
 15040                           ;app_atcommand.c: 275: else g_atcommand.seq = AT_END;
 15041  009D84  0E05               	movlw	5
 15042  009D86  0106               	movlb	6	; () banked
 15043  009D88  6F00               	movwf	_g_atcommand& (0+255),b
 15044  009D8A  0012               	return	
 15045  009D8C                     l33833:
 15046                           
 15047                           ; BSR set to: 6
 15048                           ;app_atcommand.c: 278: update_command(&g_atcommand.status);
 15049  009D8C  0E42               	movlw	low (_g_atcommand+66)
 15050  009D8E  0100               	movlb	0	; () banked
 15051  009D90  6FA4               	movwf	update_command@status& (0+255),b
 15052  009D92  0E06               	movlw	high (_g_atcommand+66)
 15053  009D94  6FA5               	movwf	(update_command@status+1)& (0+255),b
 15054  009D96  ECC9  F018         	call	_update_command	;wreg free
 15055                           
 15056                           ;app_atcommand.c: 279: g_atcommand.seq = AT_MESSAGE;
 15057  009D9A  0E04               	movlw	4
 15058  009D9C  0106               	movlb	6	; () banked
 15059  009D9E  6F00               	movwf	_g_atcommand& (0+255),b
 15060                           
 15061                           ;app_atcommand.c: 280: break;
 15062  009DA0  0012               	return	
 15063  009DA2                     l33837:
 15064                           
 15065                           ; BSR set to: 6
 15066                           ;app_atcommand.c: 282: build_response(&g_atcommand.status);
 15067  009DA2  0E42               	movlw	low (_g_atcommand+66)
 15068  009DA4  0100               	movlb	0	; () banked
 15069  009DA6  6FCD               	movwf	build_response@status& (0+255),b
 15070  009DA8  0E06               	movlw	high (_g_atcommand+66)
 15071  009DAA  6FCE               	movwf	(build_response@status+1)& (0+255),b
 15072  009DAC  ECD0  F011         	call	_build_response	;wreg free
 15073  009DB0  D7E9               	goto	l33831
 15074  009DB2                     l33841:
 15075                           
 15076                           ; BSR set to: 6
 15077                           ;app_atcommand.c: 286: clear_command();
 15078  009DB2  ECF3  F063         	call	_clear_command	;wreg free
 15079  009DB6  D782               	goto	l33789
 15080  009DB8                     l33847:
 15081  009DB8  0106               	movlb	6	; () banked
 15082  009DBA  5100               	movf	_g_atcommand& (0+255),w,b
 15083                           
 15084                           ; Switch size 1, requested type "simple"
 15085                           ; Number of cases is 6, Range of values is 0 to 5
 15086                           ; switch strategies available:
 15087                           ; Name         Instructions Cycles
 15088                           ; simple_byte           19    10 (average)
 15089                           ;	Chosen strategy is simple_byte
 15090  009DBC  0A00               	xorlw	0	; case 0
 15091  009DBE  B4D8               	btfsc	status,2,c
 15092  009DC0  D77D               	goto	l33789
 15093  009DC2  0A01               	xorlw	1	; case 1
 15094  009DC4  B4D8               	btfsc	status,2,c
 15095  009DC6  D77E               	goto	l33791
 15096  009DC8  0A03               	xorlw	3	; case 2
 15097  009DCA  B4D8               	btfsc	status,2,c
 15098  009DCC  D7BD               	goto	l33821
 15099  009DCE  0A01               	xorlw	1	; case 3
 15100  009DD0  B4D8               	btfsc	status,2,c
 15101  009DD2  D7DC               	goto	l33833
 15102  009DD4  0A07               	xorlw	7	; case 4
 15103  009DD6  B4D8               	btfsc	status,2,c
 15104  009DD8  D7E4               	goto	l33837
 15105  009DDA  0A01               	xorlw	1	; case 5
 15106  009DDC  A4D8               	btfss	status,2,c
 15107  009DDE  0012               	return	
 15108  009DE0  D7E8               	goto	l33841
 15109  009DE2                     __end_of_atcommand_task:
 15110                           	callstack 0
 15111                           
 15112 ;; *************** function _update_command *****************
 15113 ;; Defined at:
 15114 ;;		line 452 in file "app_atcommand.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;  status          2   68[BANK0 ] PTR struct .
 15117 ;;		 -> g_atcommand(242), 
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;  i               1   74[BANK0 ] unsigned char 
 15120 ;;  chno            1   76[BANK0 ] unsigned char 
 15121 ;;  apply           1   75[BANK0 ] unsigned char 
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      void 
 15124 ;; Registers used:
 15125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15126 ;; Tracked objects:
 15127 ;;		On entry : 3F/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15135 ;;Total ram usage:        9 bytes
 15136 ;; Hardware stack levels used: 1
 15137 ;; Hardware stack levels required when called: 11
 15138 ;; This function calls:
 15139 ;;		_ResetBootloaderCleanly
 15140 ;;		_ResetDeviceCleanly
 15141 ;;		___fldiv
 15142 ;;		___fleq
 15143 ;;		___flge
 15144 ;;		___flsub
 15145 ;;		__atof
 15146 ;;		__atoi
 15147 ;;		__isdigit
 15148 ;;		__strcpy
 15149 ;;		__strlen
 15150 ;;		_eeprom_update
 15151 ;;		_eeprom_update_all
 15152 ;;		_memcpy
 15153 ;;		_nvm_clear
 15154 ;;		_nvm_sensor_type_channel
 15155 ;;		_nvm_write_flash_all
 15156 ;;		_split_param
 15157 ;; This function is called by:
 15158 ;;		_atcommand_task
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text72
 15163  003192                     __ptext72:
 15164                           	callstack 0
 15165  003192                     _update_command:
 15166                           	callstack 18
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;app_atcommand.c: 454: uint8_t apply;;app_atcommand.c: 455: uint8_t chno = ((status->cha
      +                          nnelno - 1) < 0) ? 0 : status->channelno - 1;
 15170                           
 15171                           ;incstack = 0
 15172  003192  C0A4  FFD9         	movff	update_command@status,fsr2l
 15173  003196  C0A5  FFDA         	movff	update_command@status+1,fsr2h
 15174  00319A  50DF               	movf	indf2,w,c
 15175  00319C  6FA6               	movwf	??_update_command& (0+255),b
 15176  00319E  6BA7               	clrf	(??_update_command+1)& (0+255),b
 15177  0031A0  0EFF               	movlw	255
 15178  0031A2  25A6               	addwf	??_update_command& (0+255),w,b
 15179  0031A4  0EFF               	movlw	255
 15180  0031A6  21A7               	addwfc	(??_update_command+1)& (0+255),w,b
 15181  0031A8  0B80               	andlw	128
 15182  0031AA  A4D8               	btfss	status,2,c
 15183  0031AC  D00D               	goto	l32983
 15184                           
 15185                           ; BSR set to: 0
 15186  0031AE  C0A4  FFD9         	movff	update_command@status,fsr2l
 15187  0031B2  C0A5  FFDA         	movff	update_command@status+1,fsr2h
 15188  0031B6  50DF               	movf	indf2,w,c
 15189  0031B8  6FA6               	movwf	??_update_command& (0+255),b
 15190  0031BA  0EFF               	movlw	255
 15191  0031BC  25A6               	addwf	??_update_command& (0+255),w,b
 15192  0031BE  6FA8               	movwf	_update_command$4179& (0+255),b
 15193  0031C0  6BA9               	clrf	(_update_command$4179+1)& (0+255),b
 15194  0031C2  0EFF               	movlw	255
 15195  0031C4  23A9               	addwfc	(_update_command$4179+1)& (0+255),f,b
 15196  0031C6  D004               	goto	l32985
 15197  0031C8                     l32983:
 15198                           
 15199                           ; BSR set to: 0
 15200  0031C8  0E00               	movlw	0
 15201  0031CA  6FA9               	movwf	(_update_command$4179+1)& (0+255),b
 15202  0031CC  0E00               	movlw	0
 15203  0031CE  6FA8               	movwf	_update_command$4179& (0+255),b
 15204  0031D0                     l32985:
 15205                           
 15206                           ; BSR set to: 0
 15207  0031D0  C0A8  F0AC         	movff	_update_command$4179,update_command@chno
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;app_atcommand.c: 458: if (g_sens_measure.seq < SENS_READY)
 15211  0031D4  0E05               	movlw	5
 15212  0031D6  61CF               	cpfslt	_g_sens_measure& (0+255),b
 15213  0031D8  D001               	goto	l32991
 15214  0031DA  0012               	return	
 15215  0031DC                     l32991:
 15216                           
 15217                           ; BSR set to: 0
 15218                           ;app_atcommand.c: 461: if (status->isApply) {
 15219  0031DC  EE20 F00E          	lfsr	2,14
 15220  0031E0  51A4               	movf	update_command@status& (0+255),w,b
 15221  0031E2  26D9               	addwf	fsr2l,f,c
 15222  0031E4  51A5               	movf	(update_command@status+1)& (0+255),w,b
 15223  0031E6  22DA               	addwfc	fsr2h,f,c
 15224  0031E8  50DF               	movf	indf2,w,c
 15225  0031EA  B4D8               	btfsc	status,2,c
 15226  0031EC  EF37  F01E         	goto	l33189
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;app_atcommand.c: 462: if ((status->atcommand >= ATCOFFG && status->atcommand <= ATCEXTM
      +                          )) {
 15230  0031F0  EE20 F002          	lfsr	2,2
 15231  0031F4  51A4               	movf	update_command@status& (0+255),w,b
 15232  0031F6  26D9               	addwf	fsr2l,f,c
 15233  0031F8  51A5               	movf	(update_command@status+1)& (0+255),w,b
 15234  0031FA  22DA               	addwfc	fsr2h,f,c
 15235  0031FC  0E16               	movlw	22
 15236  0031FE  64DF               	cpfsgt	indf2,c
 15237  003200  D01F               	goto	l32999
 15238                           
 15239                           ; BSR set to: 0
 15240  003202  EE20 F002          	lfsr	2,2
 15241  003206  51A4               	movf	update_command@status& (0+255),w,b
 15242  003208  26D9               	addwf	fsr2l,f,c
 15243  00320A  51A5               	movf	(update_command@status+1)& (0+255),w,b
 15244  00320C  22DA               	addwfc	fsr2h,f,c
 15245  00320E  0E26               	movlw	38
 15246  003210  60DF               	cpfslt	indf2,c
 15247  003212  D016               	goto	l32999
 15248                           
 15249                           ; BSR set to: 0
 15250                           ;app_atcommand.c: 463: memcpy(g_eeprmTemp[chno].byte, g_nvm.eeprm[chno].byte, 62);
 15251  003214  51AC               	movf	update_command@chno& (0+255),w,b
 15252  003216  0D3E               	mullw	62
 15253  003218  0E27               	movlw	low _g_eeprmTemp
 15254  00321A  24F3               	addwf	243,w,c
 15255  00321C  6E0F               	movwf	memcpy@d1^0,c
 15256  00321E  0E03               	movlw	high _g_eeprmTemp
 15257  003220  20F4               	addwfc	prodh,w,c
 15258  003222  6E10               	movwf	(memcpy@d1+1)^0,c
 15259  003224  51AC               	movf	update_command@chno& (0+255),w,b
 15260  003226  0D3E               	mullw	62
 15261  003228  0E70               	movlw	low (_g_nvm+30)
 15262  00322A  24F3               	addwf	243,w,c
 15263  00322C  6E11               	movwf	memcpy@s1^0,c
 15264  00322E  0E01               	movlw	high (_g_nvm+30)
 15265  003230  20F4               	addwfc	prodh,w,c
 15266  003232  6E12               	movwf	(memcpy@s1+1)^0,c
 15267  003234  0E00               	movlw	0
 15268  003236  6E14               	movwf	(memcpy@n+1)^0,c
 15269  003238  0E3E               	movlw	62
 15270  00323A  6E13               	movwf	memcpy@n^0,c
 15271  00323C  ECA6  F068         	call	_memcpy	;wreg free
 15272  003240                     l32999:
 15273                           
 15274                           ;app_atcommand.c: 464: };app_atcommand.c: 465: if (status->atcommand == ATCFTRST) {
 15275  003240  0100               	movlb	0	; () banked
 15276  003242  EE20 F002          	lfsr	2,2
 15277  003246  51A4               	movf	update_command@status& (0+255),w,b
 15278  003248  26D9               	addwf	fsr2l,f,c
 15279  00324A  51A5               	movf	(update_command@status+1)& (0+255),w,b
 15280  00324C  22DA               	addwfc	fsr2h,f,c
 15281  00324E  0E0B               	movlw	11
 15282  003250  18DE               	xorwf	postinc2,w,c
 15283  003252  A4D8               	btfss	status,2,c
 15284  003254  EF37  F01E         	goto	l33189
 15285                           
 15286                           ; BSR set to: 0
 15287                           ;app_atcommand.c: 466: if (g_sens_measure.existChannel[0]) {
 15288  003258  51D2               	movf	(_g_sens_measure+3)& (0+255),w,b
 15289  00325A  B4D8               	btfsc	status,2,c
 15290  00325C  D00E               	goto	l33005
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;app_atcommand.c: 467: memcpy(g_eeprmTemp[0].byte, g_nvm.eeprm[0].byte, 62);
 15294  00325E  0E27               	movlw	low _g_eeprmTemp
 15295  003260  6E0F               	movwf	memcpy@d1^0,c
 15296  003262  0E03               	movlw	high _g_eeprmTemp
 15297  003264  6E10               	movwf	(memcpy@d1+1)^0,c
 15298  003266  0E70               	movlw	low (_g_nvm+30)
 15299  003268  6E11               	movwf	memcpy@s1^0,c
 15300  00326A  0E01               	movlw	high (_g_nvm+30)
 15301  00326C  6E12               	movwf	(memcpy@s1+1)^0,c
 15302  00326E  0E00               	movlw	0
 15303  003270  6E14               	movwf	(memcpy@n+1)^0,c
 15304  003272  0E3E               	movlw	62
 15305  003274  6E13               	movwf	memcpy@n^0,c
 15306  003276  ECA6  F068         	call	_memcpy	;wreg free
 15307  00327A                     l33005:
 15308                           
 15309                           ;app_atcommand.c: 468: };app_atcommand.c: 469: if (g_sens_measure.existChannel[1]) {
 15310  00327A  0100               	movlb	0	; () banked
 15311  00327C  51D3               	movf	(_g_sens_measure+4)& (0+255),w,b
 15312  00327E  B4D8               	btfsc	status,2,c
 15313  003280  EF37  F01E         	goto	l33189
 15314                           
 15315                           ; BSR set to: 0
 15316                           ;app_atcommand.c: 470: memcpy(g_eeprmTemp[1].byte, g_nvm.eeprm[1].byte, 62);
 15317  003284  0E65               	movlw	low (_g_eeprmTemp+62)
 15318  003286  6E0F               	movwf	memcpy@d1^0,c
 15319  003288  0E03               	movlw	high (_g_eeprmTemp+62)
 15320  00328A  6E10               	movwf	(memcpy@d1+1)^0,c
 15321  00328C  0EAE               	movlw	low (_g_nvm+92)
 15322  00328E  6E11               	movwf	memcpy@s1^0,c
 15323  003290  0E01               	movlw	high (_g_nvm+92)
 15324  003292  6E12               	movwf	(memcpy@s1+1)^0,c
 15325  003294  0E00               	movlw	0
 15326  003296  6E14               	movwf	(memcpy@n+1)^0,c
 15327  003298  0E3E               	movlw	62
 15328  00329A  6E13               	movwf	memcpy@n^0,c
 15329  00329C  ECA6  F068         	call	_memcpy	;wreg free
 15330                           
 15331                           ; BSR set to: 0
 15332                           ;app_atcommand.c: 471: };app_atcommand.c: 472: };app_atcommand.c: 473: };app_atcommand.c
      +                          : 475: switch (status->atcommand)
 15333  0032A0  EF37  F01E         	goto	l33189
 15334  0032A4                     l33009:
 15335                           
 15336                           ; BSR set to: 0
 15337                           ;app_atcommand.c: 484: ResetDeviceCleanly();
 15338  0032A4  EC52  F06F         	call	_ResetDeviceCleanly	;wreg free
 15339  0032A8  0012               	return	
 15340  0032AA                     l33013:
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;app_atcommand.c: 489: ResetBootloaderCleanly();
 15344  0032AA  EC39  F06F         	call	_ResetBootloaderCleanly	;wreg free
 15345  0032AE  0012               	return	
 15346  0032B0                     l33017:
 15347                           
 15348                           ; BSR set to: 0
 15349  0032B0  0E0F               	movlw	15
 15350  0032B2  25A4               	addwf	update_command@status& (0+255),w,b
 15351  0032B4  6E0F               	movwf	__strlen@source^0,c
 15352  0032B6  0E00               	movlw	0
 15353  0032B8  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15354  0032BA  6E10               	movwf	(__strlen@source+1)^0,c
 15355  0032BC  ECC8  F068         	call	__strlen	;wreg free
 15356  0032C0  0E08               	movlw	8
 15357  0032C2  180F               	xorwf	?__strlen^0,w,c
 15358  0032C4  1010               	iorwf	(?__strlen+1)^0,w,c
 15359  0032C6  A4D8               	btfss	status,2,c
 15360  0032C8  EFA6  F01E         	goto	l33191
 15361                           
 15362                           ;app_atcommand.c: 495: if (_isdigit(status->apply_params, 8)) for (uint8_t i = 0 ; i < 8
      +                           ; i++) g_nvm.flash.serialNum[i] = status->apply_params[i]; break;
 15363  0032CC  0E0F               	movlw	15
 15364  0032CE  0100               	movlb	0	; () banked
 15365  0032D0  25A4               	addwf	update_command@status& (0+255),w,b
 15366  0032D2  6E0F               	movwf	__isdigit@src^0,c
 15367  0032D4  0E00               	movlw	0
 15368  0032D6  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15369  0032D8  6E10               	movwf	(__isdigit@src+1)^0,c
 15370  0032DA  0E00               	movlw	0
 15371  0032DC  6E12               	movwf	(__isdigit@n+1)^0,c
 15372  0032DE  0E08               	movlw	8
 15373  0032E0  6E11               	movwf	__isdigit@n^0,c
 15374  0032E2  EC35  F06C         	call	__isdigit	;wreg free
 15375  0032E6  0900               	iorlw	0
 15376  0032E8  B4D8               	btfsc	status,2,c
 15377  0032EA  EFA6  F01E         	goto	l33191
 15378                           
 15379                           ; BSR set to: 0
 15380  0032EE  0E00               	movlw	0
 15381  0032F0  6FAA               	movwf	update_command@i& (0+255),b
 15382  0032F2                     l33029:
 15383                           
 15384                           ; BSR set to: 0
 15385  0032F2  51AA               	movf	update_command@i& (0+255),w,b
 15386  0032F4  25A4               	addwf	update_command@status& (0+255),w,b
 15387  0032F6  6FA6               	movwf	??_update_command& (0+255),b
 15388  0032F8  0E00               	movlw	0
 15389  0032FA  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15390  0032FC  6FA7               	movwf	(??_update_command+1)& (0+255),b
 15391  0032FE  0E0F               	movlw	15
 15392  003300  25A6               	addwf	??_update_command& (0+255),w,b
 15393  003302  6ED9               	movwf	fsr2l,c
 15394  003304  0E00               	movlw	0
 15395  003306  21A7               	addwfc	(??_update_command+1)& (0+255),w,b
 15396  003308  6EDA               	movwf	fsr2h,c
 15397  00330A  0E68               	movlw	low (_g_nvm+22)
 15398  00330C  25AA               	addwf	update_command@i& (0+255),w,b
 15399  00330E  6EE1               	movwf	fsr1l,c
 15400  003310  6AE2               	clrf	fsr1h,c
 15401  003312  0E01               	movlw	high (_g_nvm+22)
 15402  003314  22E2               	addwfc	fsr1h,f,c
 15403  003316  CFDF FFE7          	movff	indf2,indf1
 15404                           
 15405                           ; BSR set to: 0
 15406  00331A  2BAA               	incf	update_command@i& (0+255),f,b
 15407                           
 15408                           ; BSR set to: 0
 15409  00331C  0E07               	movlw	7
 15410  00331E  65AA               	cpfsgt	update_command@i& (0+255),b
 15411  003320  D7E8               	goto	l33029
 15412  003322  EFA6  F01E         	goto	l33191
 15413  003326                     l33035:
 15414                           
 15415                           ; BSR set to: 0
 15416  003326  EC19  F06F         	call	_nvm_clear	;wreg free
 15417  00332A  EFA6  F01E         	goto	l33191
 15418  00332E                     l33037:
 15419                           
 15420                           ; BSR set to: 0
 15421  00332E  0E0F               	movlw	15
 15422  003330  25A4               	addwf	update_command@status& (0+255),w,b
 15423  003332  6E1B               	movwf	__atoi@str^0,c
 15424  003334  0E00               	movlw	0
 15425  003336  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15426  003338  6E1C               	movwf	(__atoi@str+1)^0,c
 15427  00333A  EC0B  F050         	call	__atoi	;wreg free
 15428  00333E  501B               	movf	?__atoi^0,w,c
 15429  003340  0100               	movlb	0	; () banked
 15430  003342  6FAB               	movwf	update_command@apply& (0+255),b
 15431                           
 15432                           ; BSR set to: 0
 15433  003344  0E02               	movlw	2
 15434  003346  61AB               	cpfslt	update_command@apply& (0+255),b
 15435  003348  EFA6  F01E         	goto	l33191
 15436                           
 15437                           ; BSR set to: 0
 15438  00334C  C0AB  F153         	movff	update_command@apply,_g_nvm+1
 15439  003350  EFA6  F01E         	goto	l33191
 15440  003354                     l33043:
 15441                           
 15442                           ; BSR set to: 0
 15443  003354  0E0F               	movlw	15
 15444  003356  25A4               	addwf	update_command@status& (0+255),w,b
 15445  003358  6E1B               	movwf	__atoi@str^0,c
 15446  00335A  0E00               	movlw	0
 15447  00335C  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15448  00335E  6E1C               	movwf	(__atoi@str+1)^0,c
 15449  003360  EC0B  F050         	call	__atoi	;wreg free
 15450  003364  501B               	movf	?__atoi^0,w,c
 15451  003366  0100               	movlb	0	; () banked
 15452  003368  6FAB               	movwf	update_command@apply& (0+255),b
 15453                           
 15454                           ; BSR set to: 0
 15455  00336A  0E02               	movlw	2
 15456  00336C  61AB               	cpfslt	update_command@apply& (0+255),b
 15457  00336E  EFA6  F01E         	goto	l33191
 15458                           
 15459                           ; BSR set to: 0
 15460  003372  C0AB  F154         	movff	update_command@apply,_g_nvm+2
 15461  003376  EFA6  F01E         	goto	l33191
 15462  00337A                     l33049:
 15463                           
 15464                           ; BSR set to: 0
 15465  00337A  0E0F               	movlw	15
 15466  00337C  25A4               	addwf	update_command@status& (0+255),w,b
 15467  00337E  6E1B               	movwf	__atoi@str^0,c
 15468  003380  0E00               	movlw	0
 15469  003382  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15470  003384  6E1C               	movwf	(__atoi@str+1)^0,c
 15471  003386  EC0B  F050         	call	__atoi	;wreg free
 15472  00338A  501B               	movf	?__atoi^0,w,c
 15473  00338C  0100               	movlb	0	; () banked
 15474  00338E  6FAB               	movwf	update_command@apply& (0+255),b
 15475                           
 15476                           ; BSR set to: 0
 15477  003390  0E02               	movlw	2
 15478  003392  61AB               	cpfslt	update_command@apply& (0+255),b
 15479  003394  EFA6  F01E         	goto	l33191
 15480                           
 15481                           ; BSR set to: 0
 15482  003398  C0AB  F155         	movff	update_command@apply,_g_nvm+3
 15483  00339C  EFA6  F01E         	goto	l33191
 15484  0033A0                     l33055:
 15485                           
 15486                           ; BSR set to: 0
 15487  0033A0  0E0F               	movlw	15
 15488  0033A2  25A4               	addwf	update_command@status& (0+255),w,b
 15489  0033A4  6E1B               	movwf	__atoi@str^0,c
 15490  0033A6  0E00               	movlw	0
 15491  0033A8  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15492  0033AA  6E1C               	movwf	(__atoi@str+1)^0,c
 15493  0033AC  EC0B  F050         	call	__atoi	;wreg free
 15494  0033B0  501B               	movf	?__atoi^0,w,c
 15495  0033B2  0100               	movlb	0	; () banked
 15496  0033B4  6FAB               	movwf	update_command@apply& (0+255),b
 15497                           
 15498                           ; BSR set to: 0
 15499  0033B6  51AB               	movf	update_command@apply& (0+255),w,b
 15500  0033B8  B4D8               	btfsc	status,2,c
 15501  0033BA  EFA6  F01E         	goto	l33191
 15502                           
 15503                           ; BSR set to: 0
 15504  0033BE  0E10               	movlw	16
 15505  0033C0  61AB               	cpfslt	update_command@apply& (0+255),b
 15506  0033C2  EFA6  F01E         	goto	l33191
 15507                           
 15508                           ; BSR set to: 0
 15509  0033C6  C0AB  F156         	movff	update_command@apply,_g_nvm+4
 15510  0033CA  EFA6  F01E         	goto	l33191
 15511  0033CE                     l33063:
 15512                           
 15513                           ; BSR set to: 0
 15514  0033CE  0E0F               	movlw	15
 15515  0033D0  25A4               	addwf	update_command@status& (0+255),w,b
 15516  0033D2  6E1B               	movwf	__atoi@str^0,c
 15517  0033D4  0E00               	movlw	0
 15518  0033D6  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15519  0033D8  6E1C               	movwf	(__atoi@str+1)^0,c
 15520  0033DA  EC0B  F050         	call	__atoi	;wreg free
 15521  0033DE  501B               	movf	?__atoi^0,w,c
 15522  0033E0  0100               	movlb	0	; () banked
 15523  0033E2  6FAB               	movwf	update_command@apply& (0+255),b
 15524                           
 15525                           ; BSR set to: 0
 15526  0033E4  51AB               	movf	update_command@apply& (0+255),w,b
 15527  0033E6  B4D8               	btfsc	status,2,c
 15528  0033E8  EFA6  F01E         	goto	l33191
 15529                           
 15530                           ; BSR set to: 0
 15531  0033EC  0E09               	movlw	9
 15532  0033EE  61AB               	cpfslt	update_command@apply& (0+255),b
 15533  0033F0  EFA6  F01E         	goto	l33191
 15534                           
 15535                           ; BSR set to: 0
 15536  0033F4  C0AB  F157         	movff	update_command@apply,_g_nvm+5
 15537  0033F8  EFA6  F01E         	goto	l33191
 15538  0033FC                     l33071:
 15539                           
 15540                           ; BSR set to: 0
 15541  0033FC  0E00               	movlw	0
 15542  0033FE  6F91               	movwf	___flge@ff1& (0+255),b
 15543  003400  0E00               	movlw	0
 15544  003402  6F92               	movwf	(___flge@ff1+1)& (0+255),b
 15545  003404  0E00               	movlw	0
 15546  003406  6F93               	movwf	(___flge@ff1+2)& (0+255),b
 15547  003408  0E00               	movlw	0
 15548  00340A  6F94               	movwf	(___flge@ff1+3)& (0+255),b
 15549  00340C  0E0F               	movlw	15
 15550  00340E  25A4               	addwf	update_command@status& (0+255),w,b
 15551  003410  6F7D               	movwf	__atof@str& (0+255),b
 15552  003412  0E00               	movlw	0
 15553  003414  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15554  003416  6F7E               	movwf	(__atof@str+1)& (0+255),b
 15555  003418  ECC5  F044         	call	__atof	;wreg free
 15556  00341C  C07D  F095         	movff	?__atof,___flge@ff2
 15557  003420  C07E  F096         	movff	?__atof+1,___flge@ff2+1
 15558  003424  C07F  F097         	movff	?__atof+2,___flge@ff2+2
 15559  003428  C080  F098         	movff	?__atof+3,___flge@ff2+3
 15560  00342C  EC31  F056         	call	___flge	;wreg free
 15561  003430  B0D8               	btfsc	status,0,c
 15562  003432  EFA6  F01E         	goto	l33191
 15563                           
 15564                           ; BSR set to: 0
 15565  003436  0E0F               	movlw	15
 15566  003438  25A4               	addwf	update_command@status& (0+255),w,b
 15567  00343A  6F7D               	movwf	__atof@str& (0+255),b
 15568  00343C  0E00               	movlw	0
 15569  00343E  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15570  003440  6F7E               	movwf	(__atof@str+1)& (0+255),b
 15571  003442  ECC5  F044         	call	__atof	;wreg free
 15572  003446  C07D  F158         	movff	?__atof,_g_nvm+6
 15573  00344A  C07E  F159         	movff	?__atof+1,_g_nvm+7
 15574  00344E  C07F  F15A         	movff	?__atof+2,_g_nvm+8
 15575  003452  C080  F15B         	movff	?__atof+3,_g_nvm+9
 15576  003456  EFA6  F01E         	goto	l33191
 15577  00345A                     l33075:
 15578                           
 15579                           ; BSR set to: 0
 15580  00345A  0E0F               	movlw	15
 15581  00345C  25A4               	addwf	update_command@status& (0+255),w,b
 15582  00345E  6E1B               	movwf	__atoi@str^0,c
 15583  003460  0E00               	movlw	0
 15584  003462  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15585  003464  6E1C               	movwf	(__atoi@str+1)^0,c
 15586  003466  EC0B  F050         	call	__atoi	;wreg free
 15587  00346A  501B               	movf	?__atoi^0,w,c
 15588  00346C  101C               	iorwf	(?__atoi+1)^0,w,c
 15589  00346E  101D               	iorwf	(?__atoi+2)^0,w,c
 15590  003470  101E               	iorwf	(?__atoi+3)^0,w,c
 15591  003472  B4D8               	btfsc	status,2,c
 15592  003474  EFA6  F01E         	goto	l33191
 15593  003478  0E0F               	movlw	15
 15594  00347A  0100               	movlb	0	; () banked
 15595  00347C  25A4               	addwf	update_command@status& (0+255),w,b
 15596  00347E  6E1B               	movwf	__atoi@str^0,c
 15597  003480  0E00               	movlw	0
 15598  003482  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15599  003484  6E1C               	movwf	(__atoi@str+1)^0,c
 15600  003486  EC0B  F050         	call	__atoi	;wreg free
 15601  00348A  C01B  F15C         	movff	?__atoi,_g_nvm+10
 15602  00348E  C01C  F15D         	movff	?__atoi+1,_g_nvm+11
 15603  003492  C01D  F15E         	movff	?__atoi+2,_g_nvm+12
 15604  003496  C01E  F15F         	movff	?__atoi+3,_g_nvm+13
 15605  00349A  EFA6  F01E         	goto	l33191
 15606  00349E                     l33079:
 15607                           
 15608                           ; BSR set to: 0
 15609  00349E  0E0F               	movlw	15
 15610  0034A0  25A4               	addwf	update_command@status& (0+255),w,b
 15611  0034A2  6E1B               	movwf	__atoi@str^0,c
 15612  0034A4  0E00               	movlw	0
 15613  0034A6  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15614  0034A8  6E1C               	movwf	(__atoi@str+1)^0,c
 15615  0034AA  EC0B  F050         	call	__atoi	;wreg free
 15616  0034AE  501B               	movf	?__atoi^0,w,c
 15617  0034B0  0100               	movlb	0	; () banked
 15618  0034B2  6FAB               	movwf	update_command@apply& (0+255),b
 15619                           
 15620                           ; BSR set to: 0
 15621  0034B4  0E02               	movlw	2
 15622  0034B6  61AB               	cpfslt	update_command@apply& (0+255),b
 15623  0034B8  EFA6  F01E         	goto	l33191
 15624                           
 15625                           ; BSR set to: 0
 15626  0034BC  C0AB  F160         	movff	update_command@apply,_g_nvm+14
 15627  0034C0  EFA6  F01E         	goto	l33191
 15628  0034C4                     l33085:
 15629                           
 15630                           ; BSR set to: 0
 15631  0034C4  0E0F               	movlw	15
 15632  0034C6  25A4               	addwf	update_command@status& (0+255),w,b
 15633  0034C8  6E1B               	movwf	__atoi@str^0,c
 15634  0034CA  0E00               	movlw	0
 15635  0034CC  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15636  0034CE  6E1C               	movwf	(__atoi@str+1)^0,c
 15637  0034D0  EC0B  F050         	call	__atoi	;wreg free
 15638  0034D4  501B               	movf	?__atoi^0,w,c
 15639  0034D6  0100               	movlb	0	; () banked
 15640  0034D8  6FAB               	movwf	update_command@apply& (0+255),b
 15641                           
 15642                           ; BSR set to: 0
 15643  0034DA  51AB               	movf	update_command@apply& (0+255),w,b
 15644  0034DC  B4D8               	btfsc	status,2,c
 15645  0034DE  EFA6  F01E         	goto	l33191
 15646                           
 15647                           ; BSR set to: 0
 15648  0034E2  C0AB  F161         	movff	update_command@apply,_g_nvm+15
 15649  0034E6  EFA6  F01E         	goto	l33191
 15650  0034EA                     l33091:
 15651                           
 15652                           ; BSR set to: 0
 15653  0034EA  0E0F               	movlw	15
 15654  0034EC  25A4               	addwf	update_command@status& (0+255),w,b
 15655  0034EE  6E1B               	movwf	__atoi@str^0,c
 15656  0034F0  0E00               	movlw	0
 15657  0034F2  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15658  0034F4  6E1C               	movwf	(__atoi@str+1)^0,c
 15659  0034F6  EC0B  F050         	call	__atoi	;wreg free
 15660  0034FA  501B               	movf	?__atoi^0,w,c
 15661  0034FC  0100               	movlb	0	; () banked
 15662  0034FE  6FAB               	movwf	update_command@apply& (0+255),b
 15663                           
 15664                           ; BSR set to: 0
 15665  003500  0E06               	movlw	6
 15666  003502  61AB               	cpfslt	update_command@apply& (0+255),b
 15667  003504  EFA6  F01E         	goto	l33191
 15668                           
 15669                           ; BSR set to: 0
 15670  003508  C0AB  F162         	movff	update_command@apply,_g_nvm+16
 15671  00350C  EFA6  F01E         	goto	l33191
 15672  003510                     l33097:
 15673                           
 15674                           ; BSR set to: 0
 15675  003510  0E0F               	movlw	15
 15676  003512  25A4               	addwf	update_command@status& (0+255),w,b
 15677  003514  6E1B               	movwf	__atoi@str^0,c
 15678  003516  0E00               	movlw	0
 15679  003518  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15680  00351A  6E1C               	movwf	(__atoi@str+1)^0,c
 15681  00351C  EC0B  F050         	call	__atoi	;wreg free
 15682  003520  501B               	movf	?__atoi^0,w,c
 15683  003522  0100               	movlb	0	; () banked
 15684  003524  6FAB               	movwf	update_command@apply& (0+255),b
 15685                           
 15686                           ; BSR set to: 0
 15687  003526  0E05               	movlw	5
 15688  003528  61AB               	cpfslt	update_command@apply& (0+255),b
 15689  00352A  EFA6  F01E         	goto	l33191
 15690                           
 15691                           ; BSR set to: 0
 15692  00352E  C0AB  F163         	movff	update_command@apply,_g_nvm+17
 15693  003532  EFA6  F01E         	goto	l33191
 15694  003536                     l33103:
 15695                           
 15696                           ; BSR set to: 0
 15697  003536  0E0F               	movlw	15
 15698  003538  25A4               	addwf	update_command@status& (0+255),w,b
 15699  00353A  6E1B               	movwf	__atoi@str^0,c
 15700  00353C  0E00               	movlw	0
 15701  00353E  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15702  003540  6E1C               	movwf	(__atoi@str+1)^0,c
 15703  003542  EC0B  F050         	call	__atoi	;wreg free
 15704  003546  501B               	movf	?__atoi^0,w,c
 15705  003548  0100               	movlb	0	; () banked
 15706  00354A  6FAB               	movwf	update_command@apply& (0+255),b
 15707                           
 15708                           ; BSR set to: 0
 15709  00354C  0E02               	movlw	2
 15710  00354E  61AB               	cpfslt	update_command@apply& (0+255),b
 15711  003550  D3FD               	goto	l33191
 15712                           
 15713                           ; BSR set to: 0
 15714  003552  51AC               	movf	update_command@chno& (0+255),w,b
 15715  003554  0D3E               	mullw	62
 15716  003556  0E70               	movlw	low (_g_nvm+30)
 15717  003558  24F3               	addwf	243,w,c
 15718  00355A  6ED9               	movwf	fsr2l,c
 15719  00355C  0E01               	movlw	high (_g_nvm+30)
 15720  00355E  D32A               	goto	L32
 15721  003560                     l33109:
 15722                           
 15723                           ; BSR set to: 0
 15724  003560  0E0F               	movlw	15
 15725  003562  25A4               	addwf	update_command@status& (0+255),w,b
 15726  003564  6E1B               	movwf	__atoi@str^0,c
 15727  003566  0E00               	movlw	0
 15728  003568  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15729  00356A  6E1C               	movwf	(__atoi@str+1)^0,c
 15730  00356C  EC0B  F050         	call	__atoi	;wreg free
 15731  003570  501B               	movf	?__atoi^0,w,c
 15732  003572  0100               	movlb	0	; () banked
 15733  003574  6FAB               	movwf	update_command@apply& (0+255),b
 15734                           
 15735                           ; BSR set to: 0
 15736  003576  0E02               	movlw	2
 15737  003578  61AB               	cpfslt	update_command@apply& (0+255),b
 15738  00357A  D3E8               	goto	l33191
 15739                           
 15740                           ; BSR set to: 0
 15741  00357C  51AC               	movf	update_command@chno& (0+255),w,b
 15742  00357E  0D3E               	mullw	62
 15743  003580  0E76               	movlw	low (_g_nvm+36)
 15744  003582  24F3               	addwf	243,w,c
 15745  003584  6ED9               	movwf	fsr2l,c
 15746  003586  0E01               	movlw	high (_g_nvm+36)
 15747  003588  D315               	goto	L32
 15748  00358A                     l33115:
 15749                           
 15750                           ; BSR set to: 0
 15751  00358A  0E0F               	movlw	15
 15752  00358C  25A4               	addwf	update_command@status& (0+255),w,b
 15753  00358E  6E1B               	movwf	__atoi@str^0,c
 15754  003590  0E00               	movlw	0
 15755  003592  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15756  003594  6E1C               	movwf	(__atoi@str+1)^0,c
 15757  003596  EC0B  F050         	call	__atoi	;wreg free
 15758  00359A  501B               	movf	?__atoi^0,w,c
 15759  00359C  0100               	movlb	0	; () banked
 15760  00359E  6FAB               	movwf	update_command@apply& (0+255),b
 15761                           
 15762                           ; BSR set to: 0
 15763  0035A0  0E02               	movlw	2
 15764  0035A2  61AB               	cpfslt	update_command@apply& (0+255),b
 15765  0035A4  D3D3               	goto	l33191
 15766                           
 15767                           ; BSR set to: 0
 15768  0035A6  51AC               	movf	update_command@chno& (0+255),w,b
 15769  0035A8  0D3E               	mullw	62
 15770  0035AA  0E79               	movlw	low (_g_nvm+39)
 15771  0035AC  24F3               	addwf	243,w,c
 15772  0035AE  6ED9               	movwf	fsr2l,c
 15773  0035B0  0E01               	movlw	high (_g_nvm+39)
 15774  0035B2  D300               	goto	L32
 15775  0035B4                     l33121:
 15776                           
 15777                           ; BSR set to: 0
 15778  0035B4  51AC               	movf	update_command@chno& (0+255),w,b
 15779  0035B6  0D3E               	mullw	62
 15780  0035B8  0E78               	movlw	low (_g_nvm+38)
 15781  0035BA  24F3               	addwf	243,w,c
 15782  0035BC  6ED9               	movwf	fsr2l,c
 15783  0035BE  0E01               	movlw	high (_g_nvm+38)
 15784  0035C0  D06D               	goto	L37
 15785  0035C2                     l33123:
 15786                           
 15787                           ; BSR set to: 0
 15788  0035C2  51AC               	movf	update_command@chno& (0+255),w,b
 15789  0035C4  0D3E               	mullw	62
 15790  0035C6  0E78               	movlw	low (_g_nvm+38)
 15791  0035C8  24F3               	addwf	243,w,c
 15792  0035CA  6ED9               	movwf	fsr2l,c
 15793  0035CC  0E01               	movlw	high (_g_nvm+38)
 15794  0035CE  20F4               	addwfc	prodh,w,c
 15795  0035D0  6EDA               	movwf	fsr2h,c
 15796  0035D2  0E01               	movlw	1
 15797  0035D4  D066               	goto	L34
 15798  0035D6                     l33125:
 15799                           
 15800                           ; BSR set to: 0
 15801  0035D6  0E0F               	movlw	15
 15802  0035D8  25A4               	addwf	update_command@status& (0+255),w,b
 15803  0035DA  6F7D               	movwf	__atof@str& (0+255),b
 15804  0035DC  0E00               	movlw	0
 15805  0035DE  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15806  0035E0  6F7E               	movwf	(__atof@str+1)& (0+255),b
 15807  0035E2  ECC5  F044         	call	__atof	;wreg free
 15808  0035E6  51AC               	movf	update_command@chno& (0+255),w,b
 15809  0035E8  0D3E               	mullw	62
 15810  0035EA  0E8E               	movlw	low (_g_nvm+60)
 15811  0035EC  24F3               	addwf	243,w,c
 15812  0035EE  6ED9               	movwf	fsr2l,c
 15813  0035F0  0E01               	movlw	high (_g_nvm+60)
 15814  0035F2  D00E               	goto	L35
 15815  0035F4                     l33127:
 15816                           
 15817                           ; BSR set to: 0
 15818  0035F4  0E0F               	movlw	15
 15819  0035F6  25A4               	addwf	update_command@status& (0+255),w,b
 15820  0035F8  6F7D               	movwf	__atof@str& (0+255),b
 15821  0035FA  0E00               	movlw	0
 15822  0035FC  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15823  0035FE  6F7E               	movwf	(__atof@str+1)& (0+255),b
 15824  003600  ECC5  F044         	call	__atof	;wreg free
 15825  003604  51AC               	movf	update_command@chno& (0+255),w,b
 15826  003606  0D3E               	mullw	62
 15827  003608  0E92               	movlw	low (_g_nvm+64)
 15828  00360A  24F3               	addwf	243,w,c
 15829  00360C  6ED9               	movwf	fsr2l,c
 15830  00360E  0E01               	movlw	high (_g_nvm+64)
 15831  003610                     L35:
 15832  003610  20F4               	addwfc	prodh,w,c
 15833  003612  6EDA               	movwf	fsr2h,c
 15834  003614  C07D  FFDE         	movff	?__atof,postinc2
 15835  003618  C07E  FFDE         	movff	?__atof+1,postinc2
 15836  00361C  C07F  FFDE         	movff	?__atof+2,postinc2
 15837  003620  C080  FFDE         	movff	?__atof+3,postinc2
 15838  003624  D393               	goto	l33191
 15839  003626                     l33129:
 15840                           
 15841                           ; BSR set to: 0
 15842  003626  0E0F               	movlw	15
 15843  003628  25A4               	addwf	update_command@status& (0+255),w,b
 15844  00362A  6E1B               	movwf	__atoi@str^0,c
 15845  00362C  0E00               	movlw	0
 15846  00362E  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15847  003630  6E1C               	movwf	(__atoi@str+1)^0,c
 15848  003632  EC0B  F050         	call	__atoi	;wreg free
 15849  003636  501B               	movf	?__atoi^0,w,c
 15850  003638  0100               	movlb	0	; () banked
 15851  00363A  6FAB               	movwf	update_command@apply& (0+255),b
 15852                           
 15853                           ; BSR set to: 0
 15854  00363C  0E03               	movlw	3
 15855  00363E  61AB               	cpfslt	update_command@apply& (0+255),b
 15856  003640  D385               	goto	l33191
 15857                           
 15858                           ; BSR set to: 0
 15859  003642  C0AB  F017         	movff	update_command@apply,nvm_sensor_type_channel@sensor_model
 15860  003646  51AC               	movf	update_command@chno& (0+255),w,b
 15861  003648  EC5B  F03F         	call	_nvm_sensor_type_channel
 15862  00364C  D37F               	goto	l33191
 15863  00364E                     l33135:
 15864                           
 15865                           ; BSR set to: 0
 15866                           ;app_atcommand.c: 526: if (_strlen(status->apply_params) < 10)
 15867  00364E  0E0F               	movlw	15
 15868  003650  25A4               	addwf	update_command@status& (0+255),w,b
 15869  003652  6E0F               	movwf	__strlen@source^0,c
 15870  003654  0E00               	movlw	0
 15871  003656  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15872  003658  6E10               	movwf	(__strlen@source+1)^0,c
 15873  00365A  ECC8  F068         	call	__strlen	;wreg free
 15874  00365E  5010               	movf	(?__strlen+1)^0,w,c
 15875  003660  E116               	bnz	l33139
 15876  003662  0E0A               	movlw	10
 15877  003664  5C0F               	subwf	?__strlen^0,w,c
 15878  003666  B0D8               	btfsc	status,0,c
 15879  003668  D012               	goto	l33139
 15880                           
 15881                           ;app_atcommand.c: 527: _strcpy(g_nvm.eeprm[chno].sensor_name, status->apply_params);
 15882  00366A  0100               	movlb	0	; () banked
 15883  00366C  51AC               	movf	update_command@chno& (0+255),w,b
 15884  00366E  0D3E               	mullw	62
 15885  003670  0E9E               	movlw	low (_g_nvm+76)
 15886  003672  24F3               	addwf	243,w,c
 15887  003674  6E0F               	movwf	__strcpy@dest^0,c
 15888  003676  0E01               	movlw	high (_g_nvm+76)
 15889  003678  20F4               	addwfc	prodh,w,c
 15890  00367A  6E10               	movwf	(__strcpy@dest+1)^0,c
 15891  00367C  0E0F               	movlw	15
 15892  00367E  25A4               	addwf	update_command@status& (0+255),w,b
 15893  003680  6E11               	movwf	__strcpy@source^0,c
 15894  003682  0E00               	movlw	0
 15895  003684  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15896  003686  6E12               	movwf	(__strcpy@source+1)^0,c
 15897  003688  EC4C  F063         	call	__strcpy	;wreg free
 15898  00368C  D35F               	goto	l33191
 15899  00368E                     l33139:
 15900                           
 15901                           ;app_atcommand.c: 528: else;app_atcommand.c: 529: g_nvm.eeprm[chno].sensor_name[10-1] = 
      +                          '\0';
 15902  00368E  0100               	movlb	0	; () banked
 15903  003690  51AC               	movf	update_command@chno& (0+255),w,b
 15904  003692  0D3E               	mullw	62
 15905  003694  0EA7               	movlw	low (_g_nvm+85)
 15906  003696  24F3               	addwf	243,w,c
 15907  003698  6ED9               	movwf	fsr2l,c
 15908  00369A  0E01               	movlw	high (_g_nvm+85)
 15909  00369C                     L37:
 15910  00369C  20F4               	addwfc	prodh,w,c
 15911  00369E  6EDA               	movwf	fsr2h,c
 15912  0036A0  0E00               	movlw	0
 15913  0036A2                     L34:
 15914  0036A2  6EDF               	movwf	indf2,c
 15915  0036A4  D353               	goto	l33191
 15916  0036A6                     l33141:
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;app_atcommand.c: 532: if (split_param(status->apply_params, status->manual_params, 3, 3
      +                          2) >= 3) {
 15920  0036A6  0E0F               	movlw	15
 15921  0036A8  25A4               	addwf	update_command@status& (0+255),w,b
 15922  0036AA  6E13               	movwf	split_param@src^0,c
 15923  0036AC  0E00               	movlw	0
 15924  0036AE  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15925  0036B0  6E14               	movwf	(split_param@src+1)^0,c
 15926  0036B2  0E2F               	movlw	47
 15927  0036B4  25A4               	addwf	update_command@status& (0+255),w,b
 15928  0036B6  6E15               	movwf	split_param@params^0,c
 15929  0036B8  0E00               	movlw	0
 15930  0036BA  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15931  0036BC  6E16               	movwf	(split_param@params+1)^0,c
 15932  0036BE  0E03               	movlw	3
 15933  0036C0  6E17               	movwf	split_param@m^0,c
 15934  0036C2  0E20               	movlw	32
 15935  0036C4  6E18               	movwf	split_param@n^0,c
 15936  0036C6  ECF2  F054         	call	_split_param	;wreg free
 15937  0036CA  0100               	movlb	0	; () banked
 15938  0036CC  6FA6               	movwf	??_update_command& (0+255),b
 15939  0036CE  0E02               	movlw	2
 15940  0036D0  65A6               	cpfsgt	??_update_command& (0+255),b
 15941  0036D2  D33C               	goto	l33191
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;app_atcommand.c: 533: if ((_atof(status->manual_params[1]) - _atof(status->manual_param
      +                          s[0])) != 0.0f) {
 15945  0036D4  0E2F               	movlw	47
 15946  0036D6  25A4               	addwf	update_command@status& (0+255),w,b
 15947  0036D8  6F7D               	movwf	__atof@str& (0+255),b
 15948  0036DA  0E00               	movlw	0
 15949  0036DC  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15950  0036DE  6F7E               	movwf	(__atof@str+1)& (0+255),b
 15951  0036E0  ECC5  F044         	call	__atof	;wreg free
 15952  0036E4  C07D  F064         	movff	?__atof,___flsub@a
 15953  0036E8  C07E  F065         	movff	?__atof+1,___flsub@a+1
 15954  0036EC  C07F  F066         	movff	?__atof+2,___flsub@a+2
 15955  0036F0  C080  F067         	movff	?__atof+3,___flsub@a+3
 15956  0036F4  0E4F               	movlw	79
 15957  0036F6  25A4               	addwf	update_command@status& (0+255),w,b
 15958  0036F8  6F7D               	movwf	__atof@str& (0+255),b
 15959  0036FA  0E00               	movlw	0
 15960  0036FC  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15961  0036FE  6F7E               	movwf	(__atof@str+1)& (0+255),b
 15962  003700  ECC5  F044         	call	__atof	;wreg free
 15963  003704  C07D  F060         	movff	?__atof,___flsub@b
 15964  003708  C07E  F061         	movff	?__atof+1,___flsub@b+1
 15965  00370C  C07F  F062         	movff	?__atof+2,___flsub@b+2
 15966  003710  C080  F063         	movff	?__atof+3,___flsub@b+3
 15967  003714  EC1B  F068         	call	___flsub	;wreg free
 15968  003718  C060  F091         	movff	?___flsub,___fleq@ff1
 15969  00371C  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 15970  003720  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 15971  003724  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 15972  003728  0E00               	movlw	0
 15973  00372A  0100               	movlb	0	; () banked
 15974  00372C  6F95               	movwf	___fleq@ff2& (0+255),b
 15975  00372E  0E00               	movlw	0
 15976  003730  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 15977  003732  0E00               	movlw	0
 15978  003734  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 15979  003736  0E00               	movlw	0
 15980  003738  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 15981  00373A  EC32  F05F         	call	___fleq	;wreg free
 15982  00373E  B0D8               	btfsc	status,0,c
 15983  003740  D305               	goto	l33191
 15984                           
 15985                           ; BSR set to: 0
 15986                           ;app_atcommand.c: 534: g_nvm.eeprm[chno].baseLine_uV = _atof(status->manual_params[0]);
 15987  003742  0E2F               	movlw	47
 15988  003744  25A4               	addwf	update_command@status& (0+255),w,b
 15989  003746  6F7D               	movwf	__atof@str& (0+255),b
 15990  003748  0E00               	movlw	0
 15991  00374A  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 15992  00374C  6F7E               	movwf	(__atof@str+1)& (0+255),b
 15993  00374E  ECC5  F044         	call	__atof	;wreg free
 15994  003752  51AC               	movf	update_command@chno& (0+255),w,b
 15995  003754  0D3E               	mullw	62
 15996  003756  0E7A               	movlw	low (_g_nvm+40)
 15997  003758  24F3               	addwf	243,w,c
 15998  00375A  6ED9               	movwf	fsr2l,c
 15999  00375C  0E01               	movlw	high (_g_nvm+40)
 16000  00375E  20F4               	addwfc	prodh,w,c
 16001  003760  6EDA               	movwf	fsr2h,c
 16002  003762  C07D  FFDE         	movff	?__atof,postinc2
 16003  003766  C07E  FFDE         	movff	?__atof+1,postinc2
 16004  00376A  C07F  FFDE         	movff	?__atof+2,postinc2
 16005  00376E  C080  FFDE         	movff	?__atof+3,postinc2
 16006                           
 16007                           ;app_atcommand.c: 535: g_nvm.eeprm[chno].span_uV = _atof(status->manual_params[1]);
 16008  003772  0E4F               	movlw	79
 16009  003774  25A4               	addwf	update_command@status& (0+255),w,b
 16010  003776  6F7D               	movwf	__atof@str& (0+255),b
 16011  003778  0E00               	movlw	0
 16012  00377A  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 16013  00377C  6F7E               	movwf	(__atof@str+1)& (0+255),b
 16014  00377E  ECC5  F044         	call	__atof	;wreg free
 16015  003782  51AC               	movf	update_command@chno& (0+255),w,b
 16016  003784  0D3E               	mullw	62
 16017  003786  0E7E               	movlw	low (_g_nvm+44)
 16018  003788  24F3               	addwf	243,w,c
 16019  00378A  6ED9               	movwf	fsr2l,c
 16020  00378C  0E01               	movlw	high (_g_nvm+44)
 16021  00378E  20F4               	addwfc	prodh,w,c
 16022  003790  6EDA               	movwf	fsr2h,c
 16023  003792  C07D  FFDE         	movff	?__atof,postinc2
 16024  003796  C07E  FFDE         	movff	?__atof+1,postinc2
 16025  00379A  C07F  FFDE         	movff	?__atof+2,postinc2
 16026  00379E  C080  FFDE         	movff	?__atof+3,postinc2
 16027                           
 16028                           ;app_atcommand.c: 536: g_nvm.eeprm[chno].CalibrationGas = _atof(status->manual_params[2]
      +                          );
 16029  0037A2  0E6F               	movlw	111
 16030  0037A4  25A4               	addwf	update_command@status& (0+255),w,b
 16031  0037A6  6F7D               	movwf	__atof@str& (0+255),b
 16032  0037A8  0E00               	movlw	0
 16033  0037AA  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 16034  0037AC  6F7E               	movwf	(__atof@str+1)& (0+255),b
 16035  0037AE  ECC5  F044         	call	__atof	;wreg free
 16036  0037B2  51AC               	movf	update_command@chno& (0+255),w,b
 16037  0037B4  0D3E               	mullw	62
 16038  0037B6  0E82               	movlw	low (_g_nvm+48)
 16039  0037B8  24F3               	addwf	243,w,c
 16040  0037BA  6ED9               	movwf	fsr2l,c
 16041  0037BC  0E01               	movlw	high (_g_nvm+48)
 16042  0037BE  20F4               	addwfc	prodh,w,c
 16043  0037C0  6EDA               	movwf	fsr2h,c
 16044  0037C2  C07D  FFDE         	movff	?__atof,postinc2
 16045  0037C6  C07E  FFDE         	movff	?__atof+1,postinc2
 16046  0037CA  C07F  FFDE         	movff	?__atof+2,postinc2
 16047  0037CE  C080  FFDE         	movff	?__atof+3,postinc2
 16048                           
 16049                           ; BSR set to: 0
 16050                           ;app_atcommand.c: 537: g_nvm.eeprm[chno].baseLine_temp = g_last_value[chno][LV_TEMP];
 16051  0037D2  51AC               	movf	update_command@chno& (0+255),w,b
 16052  0037D4  0D0C               	mullw	12
 16053  0037D6  0E08               	movlw	low (_g_last_value+8)
 16054  0037D8  24F3               	addwf	243,w,c
 16055  0037DA  6ED9               	movwf	fsr2l,c
 16056  0037DC  0E01               	movlw	high (_g_last_value+8)
 16057  0037DE  20F4               	addwfc	prodh,w,c
 16058  0037E0  6EDA               	movwf	fsr2h,c
 16059  0037E2  51AC               	movf	update_command@chno& (0+255),w,b
 16060  0037E4  0D3E               	mullw	62
 16061  0037E6  0EA8               	movlw	low (_g_nvm+86)
 16062  0037E8  24F3               	addwf	243,w,c
 16063  0037EA  6EE1               	movwf	fsr1l,c
 16064  0037EC  0E01               	movlw	high (_g_nvm+86)
 16065  0037EE  20F4               	addwfc	prodh,w,c
 16066  0037F0  6EE2               	movwf	fsr1h,c
 16067  0037F2  CFDE FFE6          	movff	postinc2,postinc1
 16068  0037F6  CFDE FFE6          	movff	postinc2,postinc1
 16069  0037FA  CFDE FFE6          	movff	postinc2,postinc1
 16070  0037FE  CFDE FFE6          	movff	postinc2,postinc1
 16071                           
 16072                           ; BSR set to: 0
 16073                           ;app_atcommand.c: 538: if ((g_nvm.eeprm[chno].span_uV - g_nvm.eeprm[chno].baseLine_uV) !
      +                          = 0.0f) {
 16074  003802  51AC               	movf	update_command@chno& (0+255),w,b
 16075  003804  0D3E               	mullw	62
 16076  003806  0E7A               	movlw	low (_g_nvm+40)
 16077  003808  24F3               	addwf	243,w,c
 16078  00380A  6ED9               	movwf	fsr2l,c
 16079  00380C  0E01               	movlw	high (_g_nvm+40)
 16080  00380E  20F4               	addwfc	prodh,w,c
 16081  003810  6EDA               	movwf	fsr2h,c
 16082  003812  CFDE F064          	movff	postinc2,___flsub@a
 16083  003816  CFDE F065          	movff	postinc2,___flsub@a+1
 16084  00381A  CFDE F066          	movff	postinc2,___flsub@a+2
 16085  00381E  CFDE F067          	movff	postinc2,___flsub@a+3
 16086  003822  51AC               	movf	update_command@chno& (0+255),w,b
 16087  003824  0D3E               	mullw	62
 16088  003826  0E7E               	movlw	low (_g_nvm+44)
 16089  003828  24F3               	addwf	243,w,c
 16090  00382A  6ED9               	movwf	fsr2l,c
 16091  00382C  0E01               	movlw	high (_g_nvm+44)
 16092  00382E  20F4               	addwfc	prodh,w,c
 16093  003830  6EDA               	movwf	fsr2h,c
 16094  003832  CFDE F060          	movff	postinc2,___flsub@b
 16095  003836  CFDE F061          	movff	postinc2,___flsub@b+1
 16096  00383A  CFDE F062          	movff	postinc2,___flsub@b+2
 16097  00383E  CFDE F063          	movff	postinc2,___flsub@b+3
 16098  003842  EC1B  F068         	call	___flsub	;wreg free
 16099  003846  C060  F091         	movff	?___flsub,___fleq@ff1
 16100  00384A  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 16101  00384E  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 16102  003852  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 16103  003856  0E00               	movlw	0
 16104  003858  0100               	movlb	0	; () banked
 16105  00385A  6F95               	movwf	___fleq@ff2& (0+255),b
 16106  00385C  0E00               	movlw	0
 16107  00385E  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 16108  003860  0E00               	movlw	0
 16109  003862  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 16110  003864  0E00               	movlw	0
 16111  003866  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 16112  003868  EC32  F05F         	call	___fleq	;wreg free
 16113  00386C  B0D8               	btfsc	status,0,c
 16114  00386E  D26E               	goto	l33191
 16115  003870                     u42120:
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;app_atcommand.c: 539: g_nvm.eeprm[chno].gas_slope = ((g_nvm.eeprm[chno].span_uV - g_nvm
      +                          .eeprm[chno].baseLine_uV) / g_nvm.eeprm[chno].CalibrationGas);
 16119  003870  51AC               	movf	update_command@chno& (0+255),w,b
 16120  003872  0D3E               	mullw	62
 16121  003874  0E7A               	movlw	low (_g_nvm+40)
 16122  003876  24F3               	addwf	243,w,c
 16123  003878  6ED9               	movwf	fsr2l,c
 16124  00387A  0E01               	movlw	high (_g_nvm+40)
 16125  00387C  20F4               	addwfc	prodh,w,c
 16126  00387E  6EDA               	movwf	fsr2h,c
 16127  003880  CFDE F064          	movff	postinc2,___flsub@a
 16128  003884  CFDE F065          	movff	postinc2,___flsub@a+1
 16129  003888  CFDE F066          	movff	postinc2,___flsub@a+2
 16130  00388C  CFDE F067          	movff	postinc2,___flsub@a+3
 16131  003890  51AC               	movf	update_command@chno& (0+255),w,b
 16132  003892  0D3E               	mullw	62
 16133  003894  0E7E               	movlw	low (_g_nvm+44)
 16134  003896  24F3               	addwf	243,w,c
 16135  003898  6ED9               	movwf	fsr2l,c
 16136  00389A  0E01               	movlw	high (_g_nvm+44)
 16137  00389C  20F4               	addwfc	prodh,w,c
 16138  00389E  6EDA               	movwf	fsr2h,c
 16139  0038A0  CFDE F060          	movff	postinc2,___flsub@b
 16140  0038A4  CFDE F061          	movff	postinc2,___flsub@b+1
 16141  0038A8  CFDE F062          	movff	postinc2,___flsub@b+2
 16142  0038AC  CFDE F063          	movff	postinc2,___flsub@b+3
 16143  0038B0  EC1B  F068         	call	___flsub	;wreg free
 16144  0038B4  C060  F00F         	movff	?___flsub,___fldiv@b
 16145  0038B8  C061  F010         	movff	?___flsub+1,___fldiv@b+1
 16146  0038BC  C062  F011         	movff	?___flsub+2,___fldiv@b+2
 16147  0038C0  C063  F012         	movff	?___flsub+3,___fldiv@b+3
 16148  0038C4  0100               	movlb	0	; () banked
 16149  0038C6  51AC               	movf	update_command@chno& (0+255),w,b
 16150  0038C8  0D3E               	mullw	62
 16151  0038CA  0E82               	movlw	low (_g_nvm+48)
 16152  0038CC  24F3               	addwf	243,w,c
 16153  0038CE  6ED9               	movwf	fsr2l,c
 16154  0038D0  0E01               	movlw	high (_g_nvm+48)
 16155  0038D2  20F4               	addwfc	prodh,w,c
 16156  0038D4  6EDA               	movwf	fsr2h,c
 16157  0038D6  CFDE F013          	movff	postinc2,___fldiv@a
 16158  0038DA  CFDE F014          	movff	postinc2,___fldiv@a+1
 16159  0038DE  CFDE F015          	movff	postinc2,___fldiv@a+2
 16160  0038E2  CFDE F016          	movff	postinc2,___fldiv@a+3
 16161  0038E6  ECB0  F03B         	call	___fldiv	;wreg free
 16162  0038EA  0100               	movlb	0	; () banked
 16163  0038EC  51AC               	movf	update_command@chno& (0+255),w,b
 16164  0038EE  0D3E               	mullw	62
 16165  0038F0  0E86               	movlw	low (_g_nvm+52)
 16166  0038F2  24F3               	addwf	243,w,c
 16167  0038F4  6ED9               	movwf	fsr2l,c
 16168  0038F6  0E01               	movlw	high (_g_nvm+52)
 16169  0038F8  20F4               	addwfc	prodh,w,c
 16170  0038FA  6EDA               	movwf	fsr2h,c
 16171  0038FC  C00F  FFDE         	movff	?___fldiv,postinc2
 16172  003900  C010  FFDE         	movff	?___fldiv+1,postinc2
 16173  003904  C011  FFDE         	movff	?___fldiv+2,postinc2
 16174  003908  C012  FFDE         	movff	?___fldiv+3,postinc2
 16175  00390C  D21F               	goto	l33191
 16176  00390E                     l33153:
 16177                           
 16178                           ; BSR set to: 0
 16179                           ;app_atcommand.c: 545: if ((g_last_value[chno][LV_GAS_VOLT] - g_nvm.eeprm[chno].baseLine
      +                          _uV) != 0.0f) {
 16180  00390E  51AC               	movf	update_command@chno& (0+255),w,b
 16181  003910  0D3E               	mullw	62
 16182  003912  0E7A               	movlw	low (_g_nvm+40)
 16183  003914  24F3               	addwf	243,w,c
 16184  003916  6ED9               	movwf	fsr2l,c
 16185  003918  0E01               	movlw	high (_g_nvm+40)
 16186  00391A  20F4               	addwfc	prodh,w,c
 16187  00391C  6EDA               	movwf	fsr2h,c
 16188  00391E  CFDE F064          	movff	postinc2,___flsub@a
 16189  003922  CFDE F065          	movff	postinc2,___flsub@a+1
 16190  003926  CFDE F066          	movff	postinc2,___flsub@a+2
 16191  00392A  CFDE F067          	movff	postinc2,___flsub@a+3
 16192  00392E  51AC               	movf	update_command@chno& (0+255),w,b
 16193  003930  0D0C               	mullw	12
 16194  003932  0E00               	movlw	low _g_last_value
 16195  003934  24F3               	addwf	243,w,c
 16196  003936  6ED9               	movwf	fsr2l,c
 16197  003938  0E01               	movlw	high _g_last_value
 16198  00393A  20F4               	addwfc	prodh,w,c
 16199  00393C  6EDA               	movwf	fsr2h,c
 16200  00393E  CFDE F060          	movff	postinc2,___flsub@b
 16201  003942  CFDE F061          	movff	postinc2,___flsub@b+1
 16202  003946  CFDE F062          	movff	postinc2,___flsub@b+2
 16203  00394A  CFDE F063          	movff	postinc2,___flsub@b+3
 16204  00394E  EC1B  F068         	call	___flsub	;wreg free
 16205  003952  C060  F091         	movff	?___flsub,___fleq@ff1
 16206  003956  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 16207  00395A  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 16208  00395E  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 16209  003962  0E00               	movlw	0
 16210  003964  0100               	movlb	0	; () banked
 16211  003966  6F95               	movwf	___fleq@ff2& (0+255),b
 16212  003968  0E00               	movlw	0
 16213  00396A  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 16214  00396C  0E00               	movlw	0
 16215  00396E  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 16216  003970  0E00               	movlw	0
 16217  003972  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 16218  003974  EC32  F05F         	call	___fleq	;wreg free
 16219  003978  B0D8               	btfsc	status,0,c
 16220  00397A  D1E8               	goto	l33191
 16221                           
 16222                           ; BSR set to: 0
 16223                           ;app_atcommand.c: 546: g_nvm.eeprm[chno].CalibrationGas = _atof(status->apply_params);
 16224  00397C  0E0F               	movlw	15
 16225  00397E  25A4               	addwf	update_command@status& (0+255),w,b
 16226  003980  6F7D               	movwf	__atof@str& (0+255),b
 16227  003982  0E00               	movlw	0
 16228  003984  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 16229  003986  6F7E               	movwf	(__atof@str+1)& (0+255),b
 16230  003988  ECC5  F044         	call	__atof	;wreg free
 16231  00398C  51AC               	movf	update_command@chno& (0+255),w,b
 16232  00398E  0D3E               	mullw	62
 16233  003990  0E82               	movlw	low (_g_nvm+48)
 16234  003992  24F3               	addwf	243,w,c
 16235  003994  6ED9               	movwf	fsr2l,c
 16236  003996  0E01               	movlw	high (_g_nvm+48)
 16237  003998  20F4               	addwfc	prodh,w,c
 16238  00399A  6EDA               	movwf	fsr2h,c
 16239  00399C  C07D  FFDE         	movff	?__atof,postinc2
 16240  0039A0  C07E  FFDE         	movff	?__atof+1,postinc2
 16241  0039A4  C07F  FFDE         	movff	?__atof+2,postinc2
 16242  0039A8  C080  FFDE         	movff	?__atof+3,postinc2
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;app_atcommand.c: 547: g_nvm.eeprm[chno].span_uV = g_last_value[chno][LV_GAS_VOLT];
 16246  0039AC  51AC               	movf	update_command@chno& (0+255),w,b
 16247  0039AE  0D0C               	mullw	12
 16248  0039B0  0E00               	movlw	low _g_last_value
 16249  0039B2  24F3               	addwf	243,w,c
 16250  0039B4  6ED9               	movwf	fsr2l,c
 16251  0039B6  0E01               	movlw	high _g_last_value
 16252  0039B8  20F4               	addwfc	prodh,w,c
 16253  0039BA  6EDA               	movwf	fsr2h,c
 16254  0039BC  51AC               	movf	update_command@chno& (0+255),w,b
 16255  0039BE  0D3E               	mullw	62
 16256  0039C0  0E7E               	movlw	low (_g_nvm+44)
 16257  0039C2  24F3               	addwf	243,w,c
 16258  0039C4  6EE1               	movwf	fsr1l,c
 16259  0039C6  0E01               	movlw	high (_g_nvm+44)
 16260  0039C8  20F4               	addwfc	prodh,w,c
 16261  0039CA  6EE2               	movwf	fsr1h,c
 16262  0039CC  CFDE FFE6          	movff	postinc2,postinc1
 16263  0039D0  CFDE FFE6          	movff	postinc2,postinc1
 16264  0039D4  CFDE FFE6          	movff	postinc2,postinc1
 16265  0039D8  CFDE FFE6          	movff	postinc2,postinc1
 16266                           
 16267                           ; BSR set to: 0
 16268                           ;app_atcommand.c: 548: if ((g_nvm.eeprm[chno].span_uV - g_nvm.eeprm[chno].baseLine_uV) !
      +                          = 0.0f) {
 16269  0039DC  51AC               	movf	update_command@chno& (0+255),w,b
 16270  0039DE  0D3E               	mullw	62
 16271  0039E0  0E7A               	movlw	low (_g_nvm+40)
 16272  0039E2  24F3               	addwf	243,w,c
 16273  0039E4  6ED9               	movwf	fsr2l,c
 16274  0039E6  0E01               	movlw	high (_g_nvm+40)
 16275  0039E8  20F4               	addwfc	prodh,w,c
 16276  0039EA  6EDA               	movwf	fsr2h,c
 16277  0039EC  CFDE F064          	movff	postinc2,___flsub@a
 16278  0039F0  CFDE F065          	movff	postinc2,___flsub@a+1
 16279  0039F4  CFDE F066          	movff	postinc2,___flsub@a+2
 16280  0039F8  CFDE F067          	movff	postinc2,___flsub@a+3
 16281  0039FC  51AC               	movf	update_command@chno& (0+255),w,b
 16282  0039FE  0D3E               	mullw	62
 16283  003A00  0E7E               	movlw	low (_g_nvm+44)
 16284  003A02  24F3               	addwf	243,w,c
 16285  003A04  6ED9               	movwf	fsr2l,c
 16286  003A06  0E01               	movlw	high (_g_nvm+44)
 16287  003A08  20F4               	addwfc	prodh,w,c
 16288  003A0A  6EDA               	movwf	fsr2h,c
 16289  003A0C  CFDE F060          	movff	postinc2,___flsub@b
 16290  003A10  CFDE F061          	movff	postinc2,___flsub@b+1
 16291  003A14  CFDE F062          	movff	postinc2,___flsub@b+2
 16292  003A18  CFDE F063          	movff	postinc2,___flsub@b+3
 16293  003A1C  EC1B  F068         	call	___flsub	;wreg free
 16294  003A20  C060  F091         	movff	?___flsub,___fleq@ff1
 16295  003A24  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 16296  003A28  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 16297  003A2C  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 16298  003A30  0E00               	movlw	0
 16299  003A32  0100               	movlb	0	; () banked
 16300  003A34  6F95               	movwf	___fleq@ff2& (0+255),b
 16301  003A36  0E00               	movlw	0
 16302  003A38  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 16303  003A3A  0E00               	movlw	0
 16304  003A3C  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 16305  003A3E  0E00               	movlw	0
 16306  003A40  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 16307  003A42  EC32  F05F         	call	___fleq	;wreg free
 16308  003A46  A0D8               	btfss	status,0,c
 16309  003A48  D713               	goto	u42120
 16310  003A4A  D180               	goto	l33191
 16311  003A4C                     l33163:
 16312                           
 16313                           ; BSR set to: 0
 16314                           ;app_atcommand.c: 554: if ((g_nvm.eeprm[chno].span_uV - g_last_value[chno][LV_GAS_VOLT])
      +                           != 0.0f) {
 16315  003A4C  51AC               	movf	update_command@chno& (0+255),w,b
 16316  003A4E  0D0C               	mullw	12
 16317  003A50  0E00               	movlw	low _g_last_value
 16318  003A52  24F3               	addwf	243,w,c
 16319  003A54  6ED9               	movwf	fsr2l,c
 16320  003A56  0E01               	movlw	high _g_last_value
 16321  003A58  20F4               	addwfc	prodh,w,c
 16322  003A5A  6EDA               	movwf	fsr2h,c
 16323  003A5C  CFDE F064          	movff	postinc2,___flsub@a
 16324  003A60  CFDE F065          	movff	postinc2,___flsub@a+1
 16325  003A64  CFDE F066          	movff	postinc2,___flsub@a+2
 16326  003A68  CFDE F067          	movff	postinc2,___flsub@a+3
 16327  003A6C  51AC               	movf	update_command@chno& (0+255),w,b
 16328  003A6E  0D3E               	mullw	62
 16329  003A70  0E7E               	movlw	low (_g_nvm+44)
 16330  003A72  24F3               	addwf	243,w,c
 16331  003A74  6ED9               	movwf	fsr2l,c
 16332  003A76  0E01               	movlw	high (_g_nvm+44)
 16333  003A78  20F4               	addwfc	prodh,w,c
 16334  003A7A  6EDA               	movwf	fsr2h,c
 16335  003A7C  CFDE F060          	movff	postinc2,___flsub@b
 16336  003A80  CFDE F061          	movff	postinc2,___flsub@b+1
 16337  003A84  CFDE F062          	movff	postinc2,___flsub@b+2
 16338  003A88  CFDE F063          	movff	postinc2,___flsub@b+3
 16339  003A8C  EC1B  F068         	call	___flsub	;wreg free
 16340  003A90  C060  F091         	movff	?___flsub,___fleq@ff1
 16341  003A94  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 16342  003A98  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 16343  003A9C  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 16344  003AA0  0E00               	movlw	0
 16345  003AA2  0100               	movlb	0	; () banked
 16346  003AA4  6F95               	movwf	___fleq@ff2& (0+255),b
 16347  003AA6  0E00               	movlw	0
 16348  003AA8  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 16349  003AAA  0E00               	movlw	0
 16350  003AAC  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 16351  003AAE  0E00               	movlw	0
 16352  003AB0  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 16353  003AB2  EC32  F05F         	call	___fleq	;wreg free
 16354  003AB6  B0D8               	btfsc	status,0,c
 16355  003AB8  D149               	goto	l33191
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;app_atcommand.c: 555: g_nvm.eeprm[chno].baseLine_uV = g_last_value[chno][LV_GAS_VOLT];
 16359  003ABA  51AC               	movf	update_command@chno& (0+255),w,b
 16360  003ABC  0D0C               	mullw	12
 16361  003ABE  0E00               	movlw	low _g_last_value
 16362  003AC0  24F3               	addwf	243,w,c
 16363  003AC2  6ED9               	movwf	fsr2l,c
 16364  003AC4  0E01               	movlw	high _g_last_value
 16365  003AC6  20F4               	addwfc	prodh,w,c
 16366  003AC8  6EDA               	movwf	fsr2h,c
 16367  003ACA  51AC               	movf	update_command@chno& (0+255),w,b
 16368  003ACC  0D3E               	mullw	62
 16369  003ACE  0E7A               	movlw	low (_g_nvm+40)
 16370  003AD0  24F3               	addwf	243,w,c
 16371  003AD2  6EE1               	movwf	fsr1l,c
 16372  003AD4  0E01               	movlw	high (_g_nvm+40)
 16373  003AD6  20F4               	addwfc	prodh,w,c
 16374  003AD8  6EE2               	movwf	fsr1h,c
 16375  003ADA  CFDE FFE6          	movff	postinc2,postinc1
 16376  003ADE  CFDE FFE6          	movff	postinc2,postinc1
 16377  003AE2  CFDE FFE6          	movff	postinc2,postinc1
 16378  003AE6  CFDE FFE6          	movff	postinc2,postinc1
 16379                           
 16380                           ;app_atcommand.c: 556: g_nvm.eeprm[chno].baseLine_temp = g_last_value[chno][LV_TEMP];
 16381  003AEA  51AC               	movf	update_command@chno& (0+255),w,b
 16382  003AEC  0D0C               	mullw	12
 16383  003AEE  0E08               	movlw	low (_g_last_value+8)
 16384  003AF0  24F3               	addwf	243,w,c
 16385  003AF2  6ED9               	movwf	fsr2l,c
 16386  003AF4  0E01               	movlw	high (_g_last_value+8)
 16387  003AF6  20F4               	addwfc	prodh,w,c
 16388  003AF8  6EDA               	movwf	fsr2h,c
 16389  003AFA  51AC               	movf	update_command@chno& (0+255),w,b
 16390  003AFC  0D3E               	mullw	62
 16391  003AFE  0EA8               	movlw	low (_g_nvm+86)
 16392  003B00  24F3               	addwf	243,w,c
 16393  003B02  6EE1               	movwf	fsr1l,c
 16394  003B04  0E01               	movlw	high (_g_nvm+86)
 16395  003B06  20F4               	addwfc	prodh,w,c
 16396  003B08  6EE2               	movwf	fsr1h,c
 16397  003B0A  CFDE FFE6          	movff	postinc2,postinc1
 16398  003B0E  CFDE FFE6          	movff	postinc2,postinc1
 16399  003B12  CFDE FFE6          	movff	postinc2,postinc1
 16400  003B16  CFDE FFE6          	movff	postinc2,postinc1
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;app_atcommand.c: 557: if ((g_nvm.eeprm[chno].span_uV - g_nvm.eeprm[chno].baseLine_uV) !
      +                          = 0.0f) {
 16404  003B1A  51AC               	movf	update_command@chno& (0+255),w,b
 16405  003B1C  0D3E               	mullw	62
 16406  003B1E  0E7A               	movlw	low (_g_nvm+40)
 16407  003B20  24F3               	addwf	243,w,c
 16408  003B22  6ED9               	movwf	fsr2l,c
 16409  003B24  0E01               	movlw	high (_g_nvm+40)
 16410  003B26  20F4               	addwfc	prodh,w,c
 16411  003B28  6EDA               	movwf	fsr2h,c
 16412  003B2A  CFDE F064          	movff	postinc2,___flsub@a
 16413  003B2E  CFDE F065          	movff	postinc2,___flsub@a+1
 16414  003B32  CFDE F066          	movff	postinc2,___flsub@a+2
 16415  003B36  CFDE F067          	movff	postinc2,___flsub@a+3
 16416  003B3A  51AC               	movf	update_command@chno& (0+255),w,b
 16417  003B3C  0D3E               	mullw	62
 16418  003B3E  0E7E               	movlw	low (_g_nvm+44)
 16419  003B40  24F3               	addwf	243,w,c
 16420  003B42  6ED9               	movwf	fsr2l,c
 16421  003B44  0E01               	movlw	high (_g_nvm+44)
 16422  003B46  20F4               	addwfc	prodh,w,c
 16423  003B48  6EDA               	movwf	fsr2h,c
 16424  003B4A  CFDE F060          	movff	postinc2,___flsub@b
 16425  003B4E  CFDE F061          	movff	postinc2,___flsub@b+1
 16426  003B52  CFDE F062          	movff	postinc2,___flsub@b+2
 16427  003B56  CFDE F063          	movff	postinc2,___flsub@b+3
 16428  003B5A  EC1B  F068         	call	___flsub	;wreg free
 16429  003B5E  C060  F091         	movff	?___flsub,___fleq@ff1
 16430  003B62  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 16431  003B66  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 16432  003B6A  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 16433  003B6E  0E00               	movlw	0
 16434  003B70  0100               	movlb	0	; () banked
 16435  003B72  6F95               	movwf	___fleq@ff2& (0+255),b
 16436  003B74  0E00               	movlw	0
 16437  003B76  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 16438  003B78  0E00               	movlw	0
 16439  003B7A  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 16440  003B7C  0E00               	movlw	0
 16441  003B7E  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 16442  003B80  EC32  F05F         	call	___fleq	;wreg free
 16443  003B84  D760               	goto	L36
 16444  003B86                     l33171:
 16445                           
 16446                           ; BSR set to: 0
 16447  003B86  0E0F               	movlw	15
 16448  003B88  25A4               	addwf	update_command@status& (0+255),w,b
 16449  003B8A  6E1B               	movwf	__atoi@str^0,c
 16450  003B8C  0E00               	movlw	0
 16451  003B8E  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 16452  003B90  6E1C               	movwf	(__atoi@str+1)^0,c
 16453  003B92  EC0B  F050         	call	__atoi	;wreg free
 16454  003B96  501B               	movf	?__atoi^0,w,c
 16455  003B98  0100               	movlb	0	; () banked
 16456  003B9A  6FAB               	movwf	update_command@apply& (0+255),b
 16457                           
 16458                           ; BSR set to: 0
 16459  003B9C  51AB               	movf	update_command@apply& (0+255),w,b
 16460  003B9E  B4D8               	btfsc	status,2,c
 16461  003BA0  D0D5               	goto	l33191
 16462                           
 16463                           ; BSR set to: 0
 16464  003BA2  0E10               	movlw	16
 16465  003BA4  61AB               	cpfslt	update_command@apply& (0+255),b
 16466  003BA6  D0D2               	goto	l33191
 16467                           
 16468                           ; BSR set to: 0
 16469  003BA8  51AC               	movf	update_command@chno& (0+255),w,b
 16470  003BAA  0D3E               	mullw	62
 16471  003BAC  0E77               	movlw	low (_g_nvm+37)
 16472  003BAE  24F3               	addwf	243,w,c
 16473  003BB0  6ED9               	movwf	fsr2l,c
 16474  003BB2  0E01               	movlw	high (_g_nvm+37)
 16475  003BB4                     L32:
 16476  003BB4  20F4               	addwfc	prodh,w,c
 16477  003BB6  6EDA               	movwf	fsr2h,c
 16478  003BB8  C0AB  FFDF         	movff	update_command@apply,indf2
 16479  003BBC  D0C7               	goto	l33191
 16480  003BBE                     l33179:
 16481                           
 16482                           ; BSR set to: 0
 16483  003BBE  0E0F               	movlw	15
 16484  003BC0  25A4               	addwf	update_command@status& (0+255),w,b
 16485  003BC2  6E1B               	movwf	__atoi@str^0,c
 16486  003BC4  0E00               	movlw	0
 16487  003BC6  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 16488  003BC8  6E1C               	movwf	(__atoi@str+1)^0,c
 16489  003BCA  EC0B  F050         	call	__atoi	;wreg free
 16490  003BCE  0100               	movlb	0	; () banked
 16491  003BD0  51AC               	movf	update_command@chno& (0+255),w,b
 16492  003BD2  0D3E               	mullw	62
 16493  003BD4  0E9A               	movlw	low (_g_nvm+72)
 16494  003BD6  24F3               	addwf	243,w,c
 16495  003BD8  6ED9               	movwf	fsr2l,c
 16496  003BDA  0E01               	movlw	high (_g_nvm+72)
 16497  003BDC  20F4               	addwfc	prodh,w,c
 16498  003BDE  6EDA               	movwf	fsr2h,c
 16499  003BE0  C01B  FFDE         	movff	?__atoi,postinc2
 16500  003BE4  C01C  FFDE         	movff	?__atoi+1,postinc2
 16501  003BE8  C01D  FFDE         	movff	?__atoi+2,postinc2
 16502  003BEC  C01E  FFDE         	movff	?__atoi+3,postinc2
 16503  003BF0  D0AD               	goto	l33191
 16504  003BF2                     l33181:
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;app_atcommand.c: 565: g_nvm.eeprm[chno].caltime = (uint32_t)_atoi(status->apply_params)
      +                          ;
 16508  003BF2  0E0F               	movlw	15
 16509  003BF4  25A4               	addwf	update_command@status& (0+255),w,b
 16510  003BF6  6E1B               	movwf	__atoi@str^0,c
 16511  003BF8  0E00               	movlw	0
 16512  003BFA  21A5               	addwfc	(update_command@status+1)& (0+255),w,b
 16513  003BFC  6E1C               	movwf	(__atoi@str+1)^0,c
 16514  003BFE  EC0B  F050         	call	__atoi	;wreg free
 16515  003C02  0100               	movlb	0	; () banked
 16516  003C04  51AC               	movf	update_command@chno& (0+255),w,b
 16517  003C06  0D3E               	mullw	62
 16518  003C08  0E96               	movlw	low (_g_nvm+68)
 16519  003C0A  24F3               	addwf	243,w,c
 16520  003C0C  6ED9               	movwf	fsr2l,c
 16521  003C0E  0E01               	movlw	high (_g_nvm+68)
 16522  003C10  20F4               	addwfc	prodh,w,c
 16523  003C12  6EDA               	movwf	fsr2h,c
 16524  003C14  C01B  FFDE         	movff	?__atoi,postinc2
 16525  003C18  C01C  FFDE         	movff	?__atoi+1,postinc2
 16526  003C1C  C01D  FFDE         	movff	?__atoi+2,postinc2
 16527  003C20  C01E  FFDE         	movff	?__atoi+3,postinc2
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;app_atcommand.c: 566: g_nvm.eeprm[chno].calib_baseLine = g_nvm.eeprm[chno].baseLine_uV;
 16531  003C24  51AC               	movf	update_command@chno& (0+255),w,b
 16532  003C26  0D3E               	mullw	62
 16533  003C28  0E7A               	movlw	low (_g_nvm+40)
 16534  003C2A  24F3               	addwf	243,w,c
 16535  003C2C  6ED9               	movwf	fsr2l,c
 16536  003C2E  0E01               	movlw	high (_g_nvm+40)
 16537  003C30  20F4               	addwfc	prodh,w,c
 16538  003C32  6EDA               	movwf	fsr2h,c
 16539  003C34  51AC               	movf	update_command@chno& (0+255),w,b
 16540  003C36  0D3E               	mullw	62
 16541  003C38  0E8A               	movlw	low (_g_nvm+56)
 16542  003C3A  24F3               	addwf	243,w,c
 16543  003C3C  6EE1               	movwf	fsr1l,c
 16544  003C3E  0E01               	movlw	high (_g_nvm+56)
 16545  003C40  20F4               	addwfc	prodh,w,c
 16546  003C42  6EE2               	movwf	fsr1h,c
 16547  003C44  CFDE FFE6          	movff	postinc2,postinc1
 16548  003C48  CFDE FFE6          	movff	postinc2,postinc1
 16549  003C4C  CFDE FFE6          	movff	postinc2,postinc1
 16550  003C50  CFDE FFE6          	movff	postinc2,postinc1
 16551                           
 16552                           ; BSR set to: 0
 16553                           ;app_atcommand.c: 567: g_nvm.eeprm[chno].usedtime = 0;
 16554  003C54  51AC               	movf	update_command@chno& (0+255),w,b
 16555  003C56  0D3E               	mullw	62
 16556  003C58  0E9A               	movlw	low (_g_nvm+72)
 16557  003C5A  24F3               	addwf	243,w,c
 16558  003C5C  6ED9               	movwf	fsr2l,c
 16559  003C5E  0E01               	movlw	high (_g_nvm+72)
 16560  003C60  20F4               	addwfc	prodh,w,c
 16561  003C62  6EDA               	movwf	fsr2h,c
 16562  003C64  6ADE               	clrf	postinc2,c
 16563  003C66  6ADE               	clrf	postinc2,c
 16564  003C68  6ADE               	clrf	postinc2,c
 16565  003C6A  6ADD               	clrf	postdec2,c
 16566                           
 16567                           ;app_atcommand.c: 568: break;
 16568  003C6C  D06F               	goto	l33191
 16569  003C6E                     l33189:
 16570  003C6E  0100               	movlb	0	; () banked
 16571  003C70  EE20 F002          	lfsr	2,2
 16572  003C74  51A4               	movf	update_command@status& (0+255),w,b
 16573  003C76  26D9               	addwf	fsr2l,f,c
 16574  003C78  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16575  003C7A  22DA               	addwfc	fsr2h,f,c
 16576  003C7C  50DF               	movf	indf2,w,c
 16577                           
 16578                           ; Switch size 1, requested type "simple"
 16579                           ; Number of cases is 30, Range of values is 3 to 37
 16580                           ; switch strategies available:
 16581                           ; Name         Instructions Cycles
 16582                           ; simple_byte           91    46 (average)
 16583                           ;	Chosen strategy is simple_byte
 16584  003C7E  0A03               	xorlw	3	; case 3
 16585  003C80  B4D8               	btfsc	status,2,c
 16586  003C82  EF52  F019         	goto	l33009
 16587  003C86  0A07               	xorlw	7	; case 4
 16588  003C88  B4D8               	btfsc	status,2,c
 16589  003C8A  EF55  F019         	goto	l33013
 16590  003C8E  0A0E               	xorlw	14	; case 10
 16591  003C90  B4D8               	btfsc	status,2,c
 16592  003C92  EF58  F019         	goto	l33017
 16593  003C96  0A01               	xorlw	1	; case 11
 16594  003C98  B4D8               	btfsc	status,2,c
 16595  003C9A  EF93  F019         	goto	l33035
 16596  003C9E  0A07               	xorlw	7	; case 12
 16597  003CA0  B4D8               	btfsc	status,2,c
 16598  003CA2  EF97  F019         	goto	l33037
 16599  003CA6  0A01               	xorlw	1	; case 13
 16600  003CA8  B4D8               	btfsc	status,2,c
 16601  003CAA  EFAA  F019         	goto	l33043
 16602  003CAE  0A03               	xorlw	3	; case 14
 16603  003CB0  B4D8               	btfsc	status,2,c
 16604  003CB2  EFBD  F019         	goto	l33049
 16605  003CB6  0A01               	xorlw	1	; case 15
 16606  003CB8  B4D8               	btfsc	status,2,c
 16607  003CBA  EFD0  F019         	goto	l33055
 16608  003CBE  0A1F               	xorlw	31	; case 16
 16609  003CC0  B4D8               	btfsc	status,2,c
 16610  003CC2  EFE7  F019         	goto	l33063
 16611  003CC6  0A01               	xorlw	1	; case 17
 16612  003CC8  B4D8               	btfsc	status,2,c
 16613  003CCA  EFFE  F019         	goto	l33071
 16614  003CCE  0A03               	xorlw	3	; case 18
 16615  003CD0  B4D8               	btfsc	status,2,c
 16616  003CD2  EF2D  F01A         	goto	l33075
 16617  003CD6  0A01               	xorlw	1	; case 19
 16618  003CD8  B4D8               	btfsc	status,2,c
 16619  003CDA  EF62  F01A         	goto	l33085
 16620  003CDE  0A07               	xorlw	7	; case 20
 16621  003CE0  B4D8               	btfsc	status,2,c
 16622  003CE2  D403               	goto	l33091
 16623  003CE4  0A01               	xorlw	1	; case 21
 16624  003CE6  B4D8               	btfsc	status,2,c
 16625  003CE8  EF4F  F01A         	goto	l33079
 16626  003CEC  0A03               	xorlw	3	; case 22
 16627  003CEE  B4D8               	btfsc	status,2,c
 16628  003CF0  D40F               	goto	l33097
 16629  003CF2  0A01               	xorlw	1	; case 23
 16630  003CF4  B4D8               	btfsc	status,2,c
 16631  003CF6  D46F               	goto	l33125
 16632  003CF8  0A0F               	xorlw	15	; case 24
 16633  003CFA  B4D8               	btfsc	status,2,c
 16634  003CFC  D47B               	goto	l33127
 16635  003CFE  0A01               	xorlw	1	; case 25
 16636  003D00  B4D8               	btfsc	status,2,c
 16637  003D02  D419               	goto	l33103
 16638  003D04  0A03               	xorlw	3	; case 26
 16639  003D06  B4D8               	btfsc	status,2,c
 16640  003D08  D48E               	goto	l33129
 16641  003D0A  0A01               	xorlw	1	; case 27
 16642  003D0C  B4D8               	btfsc	status,2,c
 16643  003D0E  D49F               	goto	l33135
 16644  003D10  0A07               	xorlw	7	; case 28
 16645  003D12  B4D8               	btfsc	status,2,c
 16646  003D14  D4C8               	goto	l33141
 16647  003D16  0A01               	xorlw	1	; case 29
 16648  003D18  B4D8               	btfsc	status,2,c
 16649  003D1A  D698               	goto	l33163
 16650  003D1C  0A03               	xorlw	3	; case 30
 16651  003D1E  B4D8               	btfsc	status,2,c
 16652  003D20  D5F6               	goto	l33153
 16653  003D22  0A01               	xorlw	1	; case 31
 16654  003D24  B4D8               	btfsc	status,2,c
 16655  003D26  D41C               	goto	l33109
 16656  003D28  0A3F               	xorlw	63	; case 32
 16657  003D2A  B4D8               	btfsc	status,2,c
 16658  003D2C  D42E               	goto	l33115
 16659  003D2E  0A01               	xorlw	1	; case 33
 16660  003D30  B4D8               	btfsc	status,2,c
 16661  003D32  D440               	goto	l33121
 16662  003D34  0A03               	xorlw	3	; case 34
 16663  003D36  B4D8               	btfsc	status,2,c
 16664  003D38  D444               	goto	l33123
 16665  003D3A  0A01               	xorlw	1	; case 35
 16666  003D3C  B4D8               	btfsc	status,2,c
 16667  003D3E  D723               	goto	l33171
 16668  003D40  0A07               	xorlw	7	; case 36
 16669  003D42  B4D8               	btfsc	status,2,c
 16670  003D44  D73C               	goto	l33179
 16671  003D46  0A01               	xorlw	1	; case 37
 16672  003D48  B4D8               	btfsc	status,2,c
 16673  003D4A  D753               	goto	l33181
 16674  003D4C                     l33191:
 16675                           
 16676                           ;app_atcommand.c: 571: if (status->isApply) {
 16677  003D4C  0100               	movlb	0	; () banked
 16678  003D4E  EE20 F00E          	lfsr	2,14
 16679  003D52  51A4               	movf	update_command@status& (0+255),w,b
 16680  003D54  26D9               	addwf	fsr2l,f,c
 16681  003D56  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16682  003D58  22DA               	addwfc	fsr2h,f,c
 16683  003D5A  50DF               	movf	indf2,w,c
 16684  003D5C  B4D8               	btfsc	status,2,c
 16685  003D5E  0012               	return	
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;app_atcommand.c: 572: if (status->atcommand >= ATCSMODEL && status->atcommand <= ATCMOD
      +                          TO) {
 16689  003D60  EE20 F002          	lfsr	2,2
 16690  003D64  51A4               	movf	update_command@status& (0+255),w,b
 16691  003D66  26D9               	addwf	fsr2l,f,c
 16692  003D68  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16693  003D6A  22DA               	addwfc	fsr2h,f,c
 16694  003D6C  0E09               	movlw	9
 16695  003D6E  64DF               	cpfsgt	indf2,c
 16696  003D70  D019               	goto	l33199
 16697                           
 16698                           ; BSR set to: 0
 16699  003D72  EE20 F002          	lfsr	2,2
 16700  003D76  51A4               	movf	update_command@status& (0+255),w,b
 16701  003D78  26D9               	addwf	fsr2l,f,c
 16702  003D7A  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16703  003D7C  22DA               	addwfc	fsr2h,f,c
 16704  003D7E  0E17               	movlw	23
 16705  003D80  60DF               	cpfslt	indf2,c
 16706  003D82  D010               	goto	l33199
 16707                           
 16708                           ; BSR set to: 0
 16709                           ;app_atcommand.c: 573: status->last_update = nvm_write_flash_all(&g_nvm.flash);
 16710  003D84  0E52               	movlw	low _g_nvm
 16711  003D86  6E1F               	movwf	nvm_write_flash_all@flash^0,c
 16712  003D88  0E01               	movlw	high _g_nvm
 16713  003D8A  6E20               	movwf	(nvm_write_flash_all@flash+1)^0,c
 16714  003D8C  ECD2  F067         	call	_nvm_write_flash_all	;wreg free
 16715  003D90  0100               	movlb	0	; () banked
 16716  003D92  6FA6               	movwf	??_update_command& (0+255),b
 16717  003D94  EE20 F001          	lfsr	2,1
 16718  003D98  51A4               	movf	update_command@status& (0+255),w,b
 16719  003D9A  26D9               	addwf	fsr2l,f,c
 16720  003D9C  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16721  003D9E  22DA               	addwfc	fsr2h,f,c
 16722  003DA0  C0A6  FFDF         	movff	??_update_command,indf2
 16723  003DA4                     l33199:
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;app_atcommand.c: 574: };app_atcommand.c: 576: if (status->atcommand == ATCFTRST) {
 16727  003DA4  EE20 F002          	lfsr	2,2
 16728  003DA8  51A4               	movf	update_command@status& (0+255),w,b
 16729  003DAA  26D9               	addwf	fsr2l,f,c
 16730  003DAC  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16731  003DAE  22DA               	addwfc	fsr2h,f,c
 16732  003DB0  0E0B               	movlw	11
 16733  003DB2  18DE               	xorwf	postinc2,w,c
 16734  003DB4  A4D8               	btfss	status,2,c
 16735  003DB6  D00C               	goto	l33203
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;app_atcommand.c: 577: status->last_update = eeprom_update_all();
 16739  003DB8  EC9C  F051         	call	_eeprom_update_all	;wreg free
 16740  003DBC  0100               	movlb	0	; () banked
 16741  003DBE  6FA6               	movwf	??_update_command& (0+255),b
 16742  003DC0  EE20 F001          	lfsr	2,1
 16743  003DC4  51A4               	movf	update_command@status& (0+255),w,b
 16744  003DC6  26D9               	addwf	fsr2l,f,c
 16745  003DC8  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16746  003DCA  22DA               	addwfc	fsr2h,f,c
 16747  003DCC  C0A6  FFDF         	movff	??_update_command,indf2
 16748  003DD0                     l33203:
 16749                           
 16750                           ; BSR set to: 0
 16751                           ;app_atcommand.c: 578: };app_atcommand.c: 580: if (status->atcommand >= ATCOFFG && statu
      +                          s->atcommand <= ATCEXTM) {
 16752  003DD0  EE20 F002          	lfsr	2,2
 16753  003DD4  51A4               	movf	update_command@status& (0+255),w,b
 16754  003DD6  26D9               	addwf	fsr2l,f,c
 16755  003DD8  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16756  003DDA  22DA               	addwfc	fsr2h,f,c
 16757  003DDC  0E16               	movlw	22
 16758  003DDE  64DF               	cpfsgt	indf2,c
 16759  003DE0  0012               	return	
 16760                           
 16761                           ; BSR set to: 0
 16762  003DE2  EE20 F002          	lfsr	2,2
 16763  003DE6  51A4               	movf	update_command@status& (0+255),w,b
 16764  003DE8  26D9               	addwf	fsr2l,f,c
 16765  003DEA  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16766  003DEC  22DA               	addwfc	fsr2h,f,c
 16767  003DEE  0E26               	movlw	38
 16768  003DF0  60DF               	cpfslt	indf2,c
 16769  003DF2  0012               	return	
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;app_atcommand.c: 581: status->last_update = eeprom_update(chno);
 16773  003DF4  51AC               	movf	update_command@chno& (0+255),w,b
 16774  003DF6  EC11  F067         	call	_eeprom_update
 16775  003DFA  0100               	movlb	0	; () banked
 16776  003DFC  6FA6               	movwf	??_update_command& (0+255),b
 16777  003DFE  EE20 F001          	lfsr	2,1
 16778  003E02  51A4               	movf	update_command@status& (0+255),w,b
 16779  003E04  26D9               	addwf	fsr2l,f,c
 16780  003E06  51A5               	movf	(update_command@status+1)& (0+255),w,b
 16781  003E08  22DA               	addwfc	fsr2h,f,c
 16782  003E0A  C0A6  FFDF         	movff	??_update_command,indf2
 16783  003E0E  0012               	return		;funcret
 16784  003E10                     __end_of_update_command:
 16785                           	callstack 0
 16786                           
 16787 ;; *************** function _split_param *****************
 16788 ;; Defined at:
 16789 ;;		line 431 in file "app_atcommand.c"
 16790 ;; Parameters:    Size  Location     Type
 16791 ;;  src             2   18[COMRAM] PTR unsigned char 
 16792 ;;		 -> g_atcommand(242), 
 16793 ;;  params          2   20[COMRAM] PTR unsigned char 
 16794 ;;		 -> g_atcommand(242), 
 16795 ;;  m               1   22[COMRAM] unsigned char 
 16796 ;;  n               1   23[COMRAM] unsigned char 
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;  ch              1   27[COMRAM] unsigned char 
 16799 ;;  cnt             1   29[COMRAM] unsigned char 
 16800 ;;  i               1   28[COMRAM] unsigned char 
 16801 ;;  len             1   26[COMRAM] unsigned char 
 16802 ;; Return value:  Size  Location     Type
 16803 ;;                  1    wreg      unsigned char 
 16804 ;; Registers used:
 16805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16806 ;; Tracked objects:
 16807 ;;		On entry : 3F/0
 16808 ;;		On exit  : 0/0
 16809 ;;		Unchanged: 0/0
 16810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16811 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16812 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16814 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16815 ;;Total ram usage:       12 bytes
 16816 ;; Hardware stack levels used: 1
 16817 ;; Hardware stack levels required when called: 5
 16818 ;; This function calls:
 16819 ;;		__strlen
 16820 ;; This function is called by:
 16821 ;;		_update_command
 16822 ;; This function uses a non-reentrant model
 16823 ;;
 16824                           
 16825                           	psect	text73
 16826  00A9E4                     __ptext73:
 16827                           	callstack 0
 16828  00A9E4                     _split_param:
 16829                           	callstack 23
 16830                           
 16831                           ; BSR set to: 0
 16832                           ;app_atcommand.c: 433: if(!src || !params) return 0;
 16833                           
 16834                           ;incstack = 0
 16835  00A9E4  5013               	movf	split_param@src^0,w,c
 16836  00A9E6  1014               	iorwf	(split_param@src+1)^0,w,c
 16837  00A9E8  B4D8               	btfsc	status,2,c
 16838  00A9EA  D004               	goto	u23000
 16839                           
 16840                           ; BSR set to: 0
 16841  00A9EC  5015               	movf	split_param@params^0,w,c
 16842  00A9EE  1016               	iorwf	(split_param@params+1)^0,w,c
 16843  00A9F0  A4D8               	btfss	status,2,c
 16844  00A9F2  D002               	goto	l19987
 16845  00A9F4                     u23000:
 16846  00A9F4  0E00               	movlw	0
 16847  00A9F6  0012               	return	
 16848  00A9F8                     l19987:
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;app_atcommand.c: 434: uint8_t len = _strlen(src);
 16852  00A9F8  C013  F00F         	movff	split_param@src,__strlen@source
 16853  00A9FC  C014  F010         	movff	split_param@src+1,__strlen@source+1
 16854  00AA00  ECC8  F068         	call	__strlen	;wreg free
 16855  00AA04  500F               	movf	?__strlen^0,w,c
 16856  00AA06  6E1B               	movwf	split_param@len^0,c
 16857                           
 16858                           ;app_atcommand.c: 435: uint8_t i = 0, cnt = 0;
 16859  00AA08  0E00               	movlw	0
 16860  00AA0A  6E1D               	movwf	split_param@i^0,c
 16861  00AA0C  0E00               	movlw	0
 16862  00AA0E  6E1E               	movwf	split_param@cnt^0,c
 16863                           
 16864                           ;app_atcommand.c: 436: while (len--) {
 16865  00AA10  D03E               	goto	l20023
 16866  00AA12                     l19993:
 16867                           
 16868                           ;app_atcommand.c: 437: char ch = *src;
 16869  00AA12  C013  FFD9         	movff	split_param@src,fsr2l
 16870  00AA16  C014  FFDA         	movff	split_param@src+1,fsr2h
 16871  00AA1A  50DF               	movf	indf2,w,c
 16872  00AA1C  6E1C               	movwf	split_param@ch^0,c
 16873                           
 16874                           ;app_atcommand.c: 438: if (ch == ',') {
 16875  00AA1E  0E2C               	movlw	44
 16876  00AA20  181C               	xorwf	split_param@ch^0,w,c
 16877  00AA22  A4D8               	btfss	status,2,c
 16878  00AA24  D01B               	goto	l20011
 16879                           
 16880                           ;app_atcommand.c: 439: if (cnt >= m) return 0;
 16881  00AA26  5017               	movf	split_param@m^0,w,c
 16882  00AA28  5C1E               	subwf	split_param@cnt^0,w,c
 16883  00AA2A  B0D8               	btfsc	status,0,c
 16884  00AA2C  D7E3               	goto	u23000
 16885                           
 16886                           ;app_atcommand.c: 440: *((params + (n * cnt++)) + i++) = '\0';
 16887  00AA2E  5018               	movf	split_param@n^0,w,c
 16888  00AA30  021E               	mulwf	split_param@cnt^0,c
 16889  00AA32  C015  F019         	movff	split_param@params,??_split_param
 16890  00AA36  C016  F01A         	movff	split_param@params+1,??_split_param+1
 16891  00AA3A  50F3               	movf	243,w,c
 16892  00AA3C  2619               	addwf	??_split_param^0,f,c
 16893  00AA3E  50F4               	movf	244,w,c
 16894  00AA40  221A               	addwfc	(??_split_param+1)^0,f,c
 16895  00AA42  501D               	movf	split_param@i^0,w,c
 16896  00AA44  2419               	addwf	??_split_param^0,w,c
 16897  00AA46  6ED9               	movwf	fsr2l,c
 16898  00AA48  0E00               	movlw	0
 16899  00AA4A  201A               	addwfc	(??_split_param+1)^0,w,c
 16900  00AA4C  6EDA               	movwf	fsr2h,c
 16901  00AA4E  0E00               	movlw	0
 16902  00AA50  6EDF               	movwf	indf2,c
 16903  00AA52  2A1D               	incf	split_param@i^0,f,c
 16904  00AA54  2A1E               	incf	split_param@cnt^0,f,c
 16905                           
 16906                           ;app_atcommand.c: 441: i = 0;
 16907  00AA56  0E00               	movlw	0
 16908  00AA58  6E1D               	movwf	split_param@i^0,c
 16909                           
 16910                           ;app_atcommand.c: 442: } else {
 16911  00AA5A  D017               	goto	l20021
 16912  00AA5C                     l20011:
 16913                           
 16914                           ;app_atcommand.c: 443: *((params + (n * cnt)) + i++) = ch;
 16915  00AA5C  5018               	movf	split_param@n^0,w,c
 16916  00AA5E  021E               	mulwf	split_param@cnt^0,c
 16917  00AA60  C015  F019         	movff	split_param@params,??_split_param
 16918  00AA64  C016  F01A         	movff	split_param@params+1,??_split_param+1
 16919  00AA68  50F3               	movf	243,w,c
 16920  00AA6A  2619               	addwf	??_split_param^0,f,c
 16921  00AA6C  50F4               	movf	244,w,c
 16922  00AA6E  221A               	addwfc	(??_split_param+1)^0,f,c
 16923  00AA70  501D               	movf	split_param@i^0,w,c
 16924  00AA72  2419               	addwf	??_split_param^0,w,c
 16925  00AA74  6ED9               	movwf	fsr2l,c
 16926  00AA76  0E00               	movlw	0
 16927  00AA78  201A               	addwfc	(??_split_param+1)^0,w,c
 16928  00AA7A  6EDA               	movwf	fsr2h,c
 16929  00AA7C  C01C  FFDF         	movff	split_param@ch,indf2
 16930  00AA80  2A1D               	incf	split_param@i^0,f,c
 16931                           
 16932                           ;app_atcommand.c: 444: if (i >= n) return 0;
 16933  00AA82  5018               	movf	split_param@n^0,w,c
 16934  00AA84  5C1D               	subwf	split_param@i^0,w,c
 16935  00AA86  B0D8               	btfsc	status,0,c
 16936  00AA88  D7B5               	goto	u23000
 16937  00AA8A                     l20021:
 16938                           
 16939                           ;app_atcommand.c: 445: };app_atcommand.c: 446: src++;
 16940  00AA8A  4A13               	infsnz	split_param@src^0,f,c
 16941  00AA8C  2A14               	incf	(split_param@src+1)^0,f,c
 16942  00AA8E                     l20023:
 16943  00AA8E  061B               	decf	split_param@len^0,f,c
 16944  00AA90  281B               	incf	split_param@len^0,w,c
 16945  00AA92  A4D8               	btfss	status,2,c
 16946  00AA94  D7BE               	goto	l19993
 16947                           
 16948                           ;app_atcommand.c: 447: };app_atcommand.c: 448: *((params + (n * cnt)) + i++) = '\0';
 16949  00AA96  5018               	movf	split_param@n^0,w,c
 16950  00AA98  021E               	mulwf	split_param@cnt^0,c
 16951  00AA9A  C015  F019         	movff	split_param@params,??_split_param
 16952  00AA9E  C016  F01A         	movff	split_param@params+1,??_split_param+1
 16953  00AAA2  50F3               	movf	243,w,c
 16954  00AAA4  2619               	addwf	??_split_param^0,f,c
 16955  00AAA6  50F4               	movf	244,w,c
 16956  00AAA8  221A               	addwfc	(??_split_param+1)^0,f,c
 16957  00AAAA  501D               	movf	split_param@i^0,w,c
 16958  00AAAC  2419               	addwf	??_split_param^0,w,c
 16959  00AAAE  6ED9               	movwf	fsr2l,c
 16960  00AAB0  0E00               	movlw	0
 16961  00AAB2  201A               	addwfc	(??_split_param+1)^0,w,c
 16962  00AAB4  6EDA               	movwf	fsr2h,c
 16963  00AAB6  0E00               	movlw	0
 16964  00AAB8  6EDF               	movwf	indf2,c
 16965  00AABA  2A1D               	incf	split_param@i^0,f,c
 16966                           
 16967                           ;app_atcommand.c: 449: return cnt+1;
 16968  00AABC  281E               	incf	split_param@cnt^0,w,c
 16969  00AABE  0012               	return		;funcret
 16970  00AAC0                     __end_of_split_param:
 16971                           	callstack 0
 16972                           
 16973 ;; *************** function _nvm_sensor_type_channel *****************
 16974 ;; Defined at:
 16975 ;;		line 129 in file "nvm.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;  chno            1    wreg     unsigned char 
 16978 ;;  sensor_model    1   22[COMRAM] unsigned char 
 16979 ;; Auto vars:     Size  Location     Type
 16980 ;;  chno            1   23[COMRAM] unsigned char 
 16981 ;; Return value:  Size  Location     Type
 16982 ;;                  1    wreg      void 
 16983 ;; Registers used:
 16984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16985 ;; Tracked objects:
 16986 ;;		On entry : 3F/0
 16987 ;;		On exit  : 0/0
 16988 ;;		Unchanged: 0/0
 16989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16994 ;;Total ram usage:        2 bytes
 16995 ;; Hardware stack levels used: 1
 16996 ;; Hardware stack levels required when called: 5
 16997 ;; This function calls:
 16998 ;;		__strclr
 16999 ;;		__strcpy
 17000 ;; This function is called by:
 17001 ;;		_update_command
 17002 ;; This function uses a non-reentrant model
 17003 ;;
 17004                           
 17005                           	psect	text74
 17006  007EB6                     __ptext74:
 17007                           	callstack 0
 17008  007EB6                     _nvm_sensor_type_channel:
 17009                           	callstack 23
 17010                           
 17011                           ;incstack = 0
 17012                           ;nvm_sensor_type_channel@chno stored from wreg
 17013  007EB6  6E18               	movwf	nvm_sensor_type_channel@chno^0,c
 17014                           
 17015                           ;nvm.c: 131: if (sensor_model == NH3_100) {
 17016  007EB8  0417               	decf	nvm_sensor_type_channel@sensor_model^0,w,c
 17017  007EBA  A4D8               	btfss	status,2,c
 17018  007EBC  D041               	goto	l32551
 17019                           
 17020                           ;nvm.c: 132: g_nvm.eeprm[chno].sensor_model = NH3_100;
 17021  007EBE  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17022  007EC0  0D3E               	mullw	62
 17023  007EC2  0E71               	movlw	low (_g_nvm+31)
 17024  007EC4  24F3               	addwf	243,w,c
 17025  007EC6  6ED9               	movwf	fsr2l,c
 17026  007EC8  0E01               	movlw	high (_g_nvm+31)
 17027  007ECA  20F4               	addwfc	prodh,w,c
 17028  007ECC  6EDA               	movwf	fsr2h,c
 17029  007ECE  0E01               	movlw	1
 17030  007ED0  6EDF               	movwf	indf2,c
 17031                           
 17032                           ;nvm.c: 133: g_nvm.eeprm[chno].adc_gain = FSR_0p512V;
 17033  007ED2  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17034  007ED4  0D3E               	mullw	62
 17035  007ED6  0E72               	movlw	low (_g_nvm+32)
 17036  007ED8  24F3               	addwf	243,w,c
 17037  007EDA  6ED9               	movwf	fsr2l,c
 17038  007EDC  0E01               	movlw	high (_g_nvm+32)
 17039  007EDE  20F4               	addwfc	prodh,w,c
 17040  007EE0  6EDA               	movwf	fsr2h,c
 17041  007EE2  0E04               	movlw	4
 17042  007EE4  6EDF               	movwf	indf2,c
 17043                           
 17044                           ;nvm.c: 134: g_nvm.eeprm[chno].lmp_gain = R35K;
 17045  007EE6  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17046  007EE8  0D3E               	mullw	62
 17047  007EEA  0E73               	movlw	low (_g_nvm+33)
 17048  007EEC  24F3               	addwf	243,w,c
 17049  007EEE  6ED9               	movwf	fsr2l,c
 17050  007EF0  0E01               	movlw	high (_g_nvm+33)
 17051  007EF2  20F4               	addwfc	prodh,w,c
 17052  007EF4  6EDA               	movwf	fsr2h,c
 17053  007EF6  0E05               	movlw	5
 17054  007EF8  6EDF               	movwf	indf2,c
 17055                           
 17056                           ;nvm.c: 135: g_nvm.eeprm[chno].lmp_rload = R100;
 17057  007EFA  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17058  007EFC  0D3E               	mullw	62
 17059  007EFE  0E74               	movlw	low (_g_nvm+34)
 17060  007F00  24F3               	addwf	243,w,c
 17061  007F02  6ED9               	movwf	fsr2l,c
 17062  007F04  0E01               	movlw	high (_g_nvm+34)
 17063  007F06  20F4               	addwfc	prodh,w,c
 17064  007F08  6EDA               	movwf	fsr2h,c
 17065  007F0A  0E03               	movlw	3
 17066  007F0C  6EDF               	movwf	indf2,c
 17067                           
 17068                           ;nvm.c: 136: g_nvm.eeprm[chno].lmp_intZ = S20P;
 17069  007F0E  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17070  007F10  0D3E               	mullw	62
 17071  007F12  0E75               	movlw	low (_g_nvm+35)
 17072  007F14  24F3               	addwf	243,w,c
 17073  007F16  6ED9               	movwf	fsr2l,c
 17074  007F18  0E01               	movlw	high (_g_nvm+35)
 17075  007F1A  20F4               	addwfc	prodh,w,c
 17076  007F1C  6EDA               	movwf	fsr2h,c
 17077  007F1E  0E00               	movlw	0
 17078  007F20  6EDF               	movwf	indf2,c
 17079                           
 17080                           ;nvm.c: 137: _strcpy(g_nvm.eeprm[chno].sensor_name, "NH3-100");
 17081  007F22  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17082  007F24  0D3E               	mullw	62
 17083  007F26  0E9E               	movlw	low (_g_nvm+76)
 17084  007F28  24F3               	addwf	243,w,c
 17085  007F2A  6E0F               	movwf	__strcpy@dest^0,c
 17086  007F2C  0E01               	movlw	high (_g_nvm+76)
 17087  007F2E  20F4               	addwfc	prodh,w,c
 17088  007F30  6E10               	movwf	(__strcpy@dest+1)^0,c
 17089  007F32  0E87               	movlw	low STR_13
 17090  007F34  6E11               	movwf	__strcpy@source^0,c
 17091  007F36  0E23               	movlw	high STR_13
 17092  007F38  6E12               	movwf	(__strcpy@source+1)^0,c
 17093  007F3A  EC4C  F063         	call	__strcpy	;wreg free
 17094                           
 17095                           ;nvm.c: 138: } else if (sensor_model == H2S_50) {
 17096  007F3E  0012               	return	
 17097  007F40                     l32551:
 17098  007F40  0E02               	movlw	2
 17099  007F42  1817               	xorwf	nvm_sensor_type_channel@sensor_model^0,w,c
 17100  007F44  A4D8               	btfss	status,2,c
 17101  007F46  D041               	goto	l32557
 17102                           
 17103                           ;nvm.c: 139: g_nvm.eeprm[chno].sensor_model = H2S_50;
 17104  007F48  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17105  007F4A  0D3E               	mullw	62
 17106  007F4C  0E71               	movlw	low (_g_nvm+31)
 17107  007F4E  24F3               	addwf	243,w,c
 17108  007F50  6ED9               	movwf	fsr2l,c
 17109  007F52  0E01               	movlw	high (_g_nvm+31)
 17110  007F54  20F4               	addwfc	prodh,w,c
 17111  007F56  6EDA               	movwf	fsr2h,c
 17112  007F58  0E02               	movlw	2
 17113  007F5A  6EDF               	movwf	indf2,c
 17114                           
 17115                           ;nvm.c: 140: g_nvm.eeprm[chno].adc_gain = FSR_0p512V;
 17116  007F5C  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17117  007F5E  0D3E               	mullw	62
 17118  007F60  0E72               	movlw	low (_g_nvm+32)
 17119  007F62  24F3               	addwf	243,w,c
 17120  007F64  6ED9               	movwf	fsr2l,c
 17121  007F66  0E01               	movlw	high (_g_nvm+32)
 17122  007F68  20F4               	addwfc	prodh,w,c
 17123  007F6A  6EDA               	movwf	fsr2h,c
 17124  007F6C  0E04               	movlw	4
 17125  007F6E  6EDF               	movwf	indf2,c
 17126                           
 17127                           ;nvm.c: 141: g_nvm.eeprm[chno].lmp_gain = R2p75K;
 17128  007F70  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17129  007F72  0D3E               	mullw	62
 17130  007F74  0E73               	movlw	low (_g_nvm+33)
 17131  007F76  24F3               	addwf	243,w,c
 17132  007F78  6ED9               	movwf	fsr2l,c
 17133  007F7A  0E01               	movlw	high (_g_nvm+33)
 17134  007F7C  20F4               	addwfc	prodh,w,c
 17135  007F7E  6EDA               	movwf	fsr2h,c
 17136  007F80  0E01               	movlw	1
 17137  007F82  6EDF               	movwf	indf2,c
 17138                           
 17139                           ;nvm.c: 142: g_nvm.eeprm[chno].lmp_rload = R100;
 17140  007F84  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17141  007F86  0D3E               	mullw	62
 17142  007F88  0E74               	movlw	low (_g_nvm+34)
 17143  007F8A  24F3               	addwf	243,w,c
 17144  007F8C  6ED9               	movwf	fsr2l,c
 17145  007F8E  0E01               	movlw	high (_g_nvm+34)
 17146  007F90  20F4               	addwfc	prodh,w,c
 17147  007F92  6EDA               	movwf	fsr2h,c
 17148  007F94  0E03               	movlw	3
 17149  007F96  6EDF               	movwf	indf2,c
 17150                           
 17151                           ;nvm.c: 143: g_nvm.eeprm[chno].lmp_intZ = S20P;
 17152  007F98  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17153  007F9A  0D3E               	mullw	62
 17154  007F9C  0E75               	movlw	low (_g_nvm+35)
 17155  007F9E  24F3               	addwf	243,w,c
 17156  007FA0  6ED9               	movwf	fsr2l,c
 17157  007FA2  0E01               	movlw	high (_g_nvm+35)
 17158  007FA4  20F4               	addwfc	prodh,w,c
 17159  007FA6  6EDA               	movwf	fsr2h,c
 17160  007FA8  0E00               	movlw	0
 17161  007FAA  6EDF               	movwf	indf2,c
 17162                           
 17163                           ;nvm.c: 144: _strcpy(g_nvm.eeprm[chno].sensor_name, "H2S-50");
 17164  007FAC  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17165  007FAE  0D3E               	mullw	62
 17166  007FB0  0E9E               	movlw	low (_g_nvm+76)
 17167  007FB2  24F3               	addwf	243,w,c
 17168  007FB4  6E0F               	movwf	__strcpy@dest^0,c
 17169  007FB6  0E01               	movlw	high (_g_nvm+76)
 17170  007FB8  20F4               	addwfc	prodh,w,c
 17171  007FBA  6E10               	movwf	(__strcpy@dest+1)^0,c
 17172  007FBC  0E8F               	movlw	low STR_14
 17173  007FBE  6E11               	movwf	__strcpy@source^0,c
 17174  007FC0  0E23               	movlw	high STR_14
 17175  007FC2  6E12               	movwf	(__strcpy@source+1)^0,c
 17176  007FC4  EC4C  F063         	call	__strcpy	;wreg free
 17177                           
 17178                           ;nvm.c: 145: } else if (sensor_model == EO) {
 17179  007FC8  0012               	return	
 17180  007FCA                     l32557:
 17181  007FCA  0E03               	movlw	3
 17182  007FCC  1817               	xorwf	nvm_sensor_type_channel@sensor_model^0,w,c
 17183  007FCE  A4D8               	btfss	status,2,c
 17184  007FD0  D041               	goto	l32563
 17185                           
 17186                           ;nvm.c: 146: g_nvm.eeprm[chno].sensor_model = EO;
 17187  007FD2  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17188  007FD4  0D3E               	mullw	62
 17189  007FD6  0E71               	movlw	low (_g_nvm+31)
 17190  007FD8  24F3               	addwf	243,w,c
 17191  007FDA  6ED9               	movwf	fsr2l,c
 17192  007FDC  0E01               	movlw	high (_g_nvm+31)
 17193  007FDE  20F4               	addwfc	prodh,w,c
 17194  007FE0  6EDA               	movwf	fsr2h,c
 17195  007FE2  0E03               	movlw	3
 17196  007FE4  6EDF               	movwf	indf2,c
 17197                           
 17198                           ;nvm.c: 147: g_nvm.eeprm[chno].adc_gain = FSR_0p256V;
 17199  007FE6  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17200  007FE8  0D3E               	mullw	62
 17201  007FEA  0E72               	movlw	low (_g_nvm+32)
 17202  007FEC  24F3               	addwf	243,w,c
 17203  007FEE  6ED9               	movwf	fsr2l,c
 17204  007FF0  0E01               	movlw	high (_g_nvm+32)
 17205  007FF2  20F4               	addwfc	prodh,w,c
 17206  007FF4  6EDA               	movwf	fsr2h,c
 17207  007FF6  0E05               	movlw	5
 17208  007FF8  6EDF               	movwf	indf2,c
 17209                           
 17210                           ;nvm.c: 148: g_nvm.eeprm[chno].lmp_gain = R14K;
 17211  007FFA  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17212  007FFC  0D3E               	mullw	62
 17213  007FFE  0E73               	movlw	low (_g_nvm+33)
 17214  008000  24F3               	addwf	243,w,c
 17215  008002  6ED9               	movwf	fsr2l,c
 17216  008004  0E01               	movlw	high (_g_nvm+33)
 17217  008006  20F4               	addwfc	prodh,w,c
 17218  008008  6EDA               	movwf	fsr2h,c
 17219  00800A  0E04               	movlw	4
 17220  00800C  6EDF               	movwf	indf2,c
 17221                           
 17222                           ;nvm.c: 149: g_nvm.eeprm[chno].lmp_rload = R100;
 17223  00800E  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17224  008010  0D3E               	mullw	62
 17225  008012  0E74               	movlw	low (_g_nvm+34)
 17226  008014  24F3               	addwf	243,w,c
 17227  008016  6ED9               	movwf	fsr2l,c
 17228  008018  0E01               	movlw	high (_g_nvm+34)
 17229  00801A  20F4               	addwfc	prodh,w,c
 17230  00801C  6EDA               	movwf	fsr2h,c
 17231  00801E  0E03               	movlw	3
 17232  008020  6EDF               	movwf	indf2,c
 17233                           
 17234                           ;nvm.c: 150: g_nvm.eeprm[chno].lmp_intZ = S20P;
 17235  008022  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17236  008024  0D3E               	mullw	62
 17237  008026  0E75               	movlw	low (_g_nvm+35)
 17238  008028  24F3               	addwf	243,w,c
 17239  00802A  6ED9               	movwf	fsr2l,c
 17240  00802C  0E01               	movlw	high (_g_nvm+35)
 17241  00802E  20F4               	addwfc	prodh,w,c
 17242  008030  6EDA               	movwf	fsr2h,c
 17243  008032  0E00               	movlw	0
 17244  008034  6EDF               	movwf	indf2,c
 17245                           
 17246                           ;nvm.c: 151: _strcpy(g_nvm.eeprm[chno].sensor_name, "EO");
 17247  008036  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17248  008038  0D3E               	mullw	62
 17249  00803A  0E9E               	movlw	low (_g_nvm+76)
 17250  00803C  24F3               	addwf	243,w,c
 17251  00803E  6E0F               	movwf	__strcpy@dest^0,c
 17252  008040  0E01               	movlw	high (_g_nvm+76)
 17253  008042  20F4               	addwfc	prodh,w,c
 17254  008044  6E10               	movwf	(__strcpy@dest+1)^0,c
 17255  008046  0E9B               	movlw	low STR_15
 17256  008048  6E11               	movwf	__strcpy@source^0,c
 17257  00804A  0E23               	movlw	high STR_15
 17258  00804C  6E12               	movwf	(__strcpy@source+1)^0,c
 17259  00804E  EC4C  F063         	call	__strcpy	;wreg free
 17260                           
 17261                           ;nvm.c: 152: } else if (sensor_model == NH3_1000) {
 17262  008052  0012               	return	
 17263  008054                     l32563:
 17264  008054  0E04               	movlw	4
 17265  008056  1817               	xorwf	nvm_sensor_type_channel@sensor_model^0,w,c
 17266  008058  A4D8               	btfss	status,2,c
 17267  00805A  D041               	goto	l32569
 17268                           
 17269                           ;nvm.c: 153: g_nvm.eeprm[chno].sensor_model = NH3_1000;
 17270  00805C  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17271  00805E  0D3E               	mullw	62
 17272  008060  0E71               	movlw	low (_g_nvm+31)
 17273  008062  24F3               	addwf	243,w,c
 17274  008064  6ED9               	movwf	fsr2l,c
 17275  008066  0E01               	movlw	high (_g_nvm+31)
 17276  008068  20F4               	addwfc	prodh,w,c
 17277  00806A  6EDA               	movwf	fsr2h,c
 17278  00806C  0E04               	movlw	4
 17279  00806E  6EDF               	movwf	indf2,c
 17280                           
 17281                           ;nvm.c: 154: g_nvm.eeprm[chno].adc_gain = FSR_0p256V;
 17282  008070  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17283  008072  0D3E               	mullw	62
 17284  008074  0E72               	movlw	low (_g_nvm+32)
 17285  008076  24F3               	addwf	243,w,c
 17286  008078  6ED9               	movwf	fsr2l,c
 17287  00807A  0E01               	movlw	high (_g_nvm+32)
 17288  00807C  20F4               	addwfc	prodh,w,c
 17289  00807E  6EDA               	movwf	fsr2h,c
 17290  008080  0E05               	movlw	5
 17291  008082  6EDF               	movwf	indf2,c
 17292                           
 17293                           ;nvm.c: 155: g_nvm.eeprm[chno].lmp_gain = R14K;
 17294  008084  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17295  008086  0D3E               	mullw	62
 17296  008088  0E73               	movlw	low (_g_nvm+33)
 17297  00808A  24F3               	addwf	243,w,c
 17298  00808C  6ED9               	movwf	fsr2l,c
 17299  00808E  0E01               	movlw	high (_g_nvm+33)
 17300  008090  20F4               	addwfc	prodh,w,c
 17301  008092  6EDA               	movwf	fsr2h,c
 17302  008094  0E04               	movlw	4
 17303  008096  6EDF               	movwf	indf2,c
 17304                           
 17305                           ;nvm.c: 156: g_nvm.eeprm[chno].lmp_rload = R100;
 17306  008098  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17307  00809A  0D3E               	mullw	62
 17308  00809C  0E74               	movlw	low (_g_nvm+34)
 17309  00809E  24F3               	addwf	243,w,c
 17310  0080A0  6ED9               	movwf	fsr2l,c
 17311  0080A2  0E01               	movlw	high (_g_nvm+34)
 17312  0080A4  20F4               	addwfc	prodh,w,c
 17313  0080A6  6EDA               	movwf	fsr2h,c
 17314  0080A8  0E03               	movlw	3
 17315  0080AA  6EDF               	movwf	indf2,c
 17316                           
 17317                           ;nvm.c: 157: g_nvm.eeprm[chno].lmp_intZ = S20P;
 17318  0080AC  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17319  0080AE  0D3E               	mullw	62
 17320  0080B0  0E75               	movlw	low (_g_nvm+35)
 17321  0080B2  24F3               	addwf	243,w,c
 17322  0080B4  6ED9               	movwf	fsr2l,c
 17323  0080B6  0E01               	movlw	high (_g_nvm+35)
 17324  0080B8  20F4               	addwfc	prodh,w,c
 17325  0080BA  6EDA               	movwf	fsr2h,c
 17326  0080BC  0E00               	movlw	0
 17327  0080BE  6EDF               	movwf	indf2,c
 17328                           
 17329                           ;nvm.c: 158: _strcpy(g_nvm.eeprm[chno].sensor_name, "NH3-1000");
 17330  0080C0  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17331  0080C2  0D3E               	mullw	62
 17332  0080C4  0E9E               	movlw	low (_g_nvm+76)
 17333  0080C6  24F3               	addwf	243,w,c
 17334  0080C8  6E0F               	movwf	__strcpy@dest^0,c
 17335  0080CA  0E01               	movlw	high (_g_nvm+76)
 17336  0080CC  20F4               	addwfc	prodh,w,c
 17337  0080CE  6E10               	movwf	(__strcpy@dest+1)^0,c
 17338  0080D0  0E7E               	movlw	low STR_16
 17339  0080D2  6E11               	movwf	__strcpy@source^0,c
 17340  0080D4  0E23               	movlw	high STR_16
 17341  0080D6  6E12               	movwf	(__strcpy@source+1)^0,c
 17342  0080D8  EC4C  F063         	call	__strcpy	;wreg free
 17343                           
 17344                           ;nvm.c: 159: } else {
 17345  0080DC  0012               	return	
 17346  0080DE                     l32569:
 17347                           
 17348                           ;nvm.c: 160: g_nvm.eeprm[chno].sensor_model = NONE;
 17349  0080DE  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17350  0080E0  0D3E               	mullw	62
 17351  0080E2  0E71               	movlw	low (_g_nvm+31)
 17352  0080E4  24F3               	addwf	243,w,c
 17353  0080E6  6ED9               	movwf	fsr2l,c
 17354  0080E8  0E01               	movlw	high (_g_nvm+31)
 17355  0080EA  20F4               	addwfc	prodh,w,c
 17356  0080EC  6EDA               	movwf	fsr2h,c
 17357  0080EE  0E00               	movlw	0
 17358  0080F0  6EDF               	movwf	indf2,c
 17359                           
 17360                           ;nvm.c: 161: _strclr(g_nvm.eeprm[chno].sensor_name, 10);
 17361  0080F2  5018               	movf	nvm_sensor_type_channel@chno^0,w,c
 17362  0080F4  0D3E               	mullw	62
 17363  0080F6  0E9E               	movlw	low (_g_nvm+76)
 17364  0080F8  24F3               	addwf	243,w,c
 17365  0080FA  6E0F               	movwf	__strclr@dest^0,c
 17366  0080FC  0E01               	movlw	high (_g_nvm+76)
 17367  0080FE  20F4               	addwfc	prodh,w,c
 17368  008100  6E10               	movwf	(__strclr@dest+1)^0,c
 17369  008102  0E00               	movlw	0
 17370  008104  6E12               	movwf	(__strclr@n+1)^0,c
 17371  008106  0E0A               	movlw	10
 17372  008108  6E11               	movwf	__strclr@n^0,c
 17373  00810A  EC2B  F06B         	call	__strclr	;wreg free
 17374  00810E  0012               	return		;funcret
 17375  008110                     __end_of_nvm_sensor_type_channel:
 17376                           	callstack 0
 17377                           
 17378 ;; *************** function _nvm_clear *****************
 17379 ;; Defined at:
 17380 ;;		line 114 in file "nvm.c"
 17381 ;; Parameters:    Size  Location     Type
 17382 ;;		None
 17383 ;; Auto vars:     Size  Location     Type
 17384 ;;		None
 17385 ;; Return value:  Size  Location     Type
 17386 ;;                  1    wreg      void 
 17387 ;; Registers used:
 17388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17389 ;; Tracked objects:
 17390 ;;		On entry : 3F/0
 17391 ;;		On exit  : 0/0
 17392 ;;		Unchanged: 0/0
 17393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17398 ;;Total ram usage:        0 bytes
 17399 ;; Hardware stack levels used: 1
 17400 ;; Hardware stack levels required when called: 10
 17401 ;; This function calls:
 17402 ;;		_nvm_clear_channel
 17403 ;;		_nvm_clear_flash
 17404 ;; This function is called by:
 17405 ;;		_update_command
 17406 ;; This function uses a non-reentrant model
 17407 ;;
 17408                           
 17409                           	psect	text75
 17410  00DE32                     __ptext75:
 17411                           	callstack 0
 17412  00DE32                     _nvm_clear:
 17413                           	callstack 18
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;nvm.c: 116: nvm_clear_flash();
 17417                           
 17418                           ;incstack = 0
 17419  00DE32  ECB7  F065         	call	_nvm_clear_flash	;wreg free
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;nvm.c: 118: nvm_clear_channel(0);
 17423  00DE36  0E00               	movlw	0
 17424  00DE38  ECB4  F042         	call	_nvm_clear_channel
 17425                           
 17426                           ;nvm.c: 119: nvm_clear_channel(1);
 17427  00DE3C  0E01               	movlw	1
 17428  00DE3E  ECB4  F042         	call	_nvm_clear_channel
 17429  00DE42  0012               	return		;funcret
 17430  00DE44                     __end_of_nvm_clear:
 17431                           	callstack 0
 17432                           
 17433 ;; *************** function _nvm_clear_channel *****************
 17434 ;; Defined at:
 17435 ;;		line 65 in file "nvm.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;  channel         1    wreg     unsigned char 
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;  channel         1   18[COMRAM] unsigned char 
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  1    wreg      void 
 17442 ;; Registers used:
 17443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/0
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17453 ;;Total ram usage:        1 bytes
 17454 ;; Hardware stack levels used: 1
 17455 ;; Hardware stack levels required when called: 5
 17456 ;; This function calls:
 17457 ;;		__strclr
 17458 ;; This function is called by:
 17459 ;;		_sensMeasure_task
 17460 ;;		_nvm_clear
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           	psect	text76
 17465  008568                     __ptext76:
 17466                           	callstack 0
 17467  008568                     _nvm_clear_channel:
 17468                           	callstack 24
 17469                           
 17470                           ;incstack = 0
 17471                           ;nvm_clear_channel@channel stored from wreg
 17472  008568  6E13               	movwf	nvm_clear_channel@channel^0,c
 17473                           
 17474                           ;nvm.c: 67: g_nvm.eeprm[channel].supercap = 0;
 17475  00856A  5013               	movf	nvm_clear_channel@channel^0,w,c
 17476  00856C  0D3E               	mullw	62
 17477  00856E  0E70               	movlw	low (_g_nvm+30)
 17478  008570  24F3               	addwf	243,w,c
 17479  008572  6ED9               	movwf	fsr2l,c
 17480  008574  0E01               	movlw	high (_g_nvm+30)
 17481  008576  20F4               	addwfc	prodh,w,c
 17482  008578  6EDA               	movwf	fsr2h,c
 17483  00857A  0E00               	movlw	0
 17484  00857C  6EDF               	movwf	indf2,c
 17485                           
 17486                           ;nvm.c: 68: g_nvm.eeprm[channel].sensor_model = NONE;
 17487  00857E  5013               	movf	nvm_clear_channel@channel^0,w,c
 17488  008580  0D3E               	mullw	62
 17489  008582  0E71               	movlw	low (_g_nvm+31)
 17490  008584  24F3               	addwf	243,w,c
 17491  008586  6ED9               	movwf	fsr2l,c
 17492  008588  0E01               	movlw	high (_g_nvm+31)
 17493  00858A  20F4               	addwfc	prodh,w,c
 17494  00858C  6EDA               	movwf	fsr2h,c
 17495  00858E  0E00               	movlw	0
 17496  008590  6EDF               	movwf	indf2,c
 17497                           
 17498                           ;nvm.c: 69: g_nvm.eeprm[channel].adc_gain = FSR_2p048V;
 17499  008592  5013               	movf	nvm_clear_channel@channel^0,w,c
 17500  008594  0D3E               	mullw	62
 17501  008596  0E72               	movlw	low (_g_nvm+32)
 17502  008598  24F3               	addwf	243,w,c
 17503  00859A  6ED9               	movwf	fsr2l,c
 17504  00859C  0E01               	movlw	high (_g_nvm+32)
 17505  00859E  20F4               	addwfc	prodh,w,c
 17506  0085A0  6EDA               	movwf	fsr2h,c
 17507  0085A2  0E02               	movlw	2
 17508  0085A4  6EDF               	movwf	indf2,c
 17509                           
 17510                           ;nvm.c: 70: g_nvm.eeprm[channel].lmp_gain = EXTERNAL_REGISTOR;
 17511  0085A6  5013               	movf	nvm_clear_channel@channel^0,w,c
 17512  0085A8  0D3E               	mullw	62
 17513  0085AA  0E73               	movlw	low (_g_nvm+33)
 17514  0085AC  24F3               	addwf	243,w,c
 17515  0085AE  6ED9               	movwf	fsr2l,c
 17516  0085B0  0E01               	movlw	high (_g_nvm+33)
 17517  0085B2  20F4               	addwfc	prodh,w,c
 17518  0085B4  6EDA               	movwf	fsr2h,c
 17519  0085B6  0E00               	movlw	0
 17520  0085B8  6EDF               	movwf	indf2,c
 17521                           
 17522                           ;nvm.c: 71: g_nvm.eeprm[channel].lmp_rload = R100;
 17523  0085BA  5013               	movf	nvm_clear_channel@channel^0,w,c
 17524  0085BC  0D3E               	mullw	62
 17525  0085BE  0E74               	movlw	low (_g_nvm+34)
 17526  0085C0  24F3               	addwf	243,w,c
 17527  0085C2  6ED9               	movwf	fsr2l,c
 17528  0085C4  0E01               	movlw	high (_g_nvm+34)
 17529  0085C6  20F4               	addwfc	prodh,w,c
 17530  0085C8  6EDA               	movwf	fsr2h,c
 17531  0085CA  0E03               	movlw	3
 17532  0085CC  6EDF               	movwf	indf2,c
 17533                           
 17534                           ;nvm.c: 72: g_nvm.eeprm[channel].lmp_intZ = S50P;
 17535  0085CE  5013               	movf	nvm_clear_channel@channel^0,w,c
 17536  0085D0  0D3E               	mullw	62
 17537  0085D2  0E75               	movlw	low (_g_nvm+35)
 17538  0085D4  24F3               	addwf	243,w,c
 17539  0085D6  6ED9               	movwf	fsr2l,c
 17540  0085D8  0E01               	movlw	high (_g_nvm+35)
 17541  0085DA  20F4               	addwfc	prodh,w,c
 17542  0085DC  6EDA               	movwf	fsr2h,c
 17543  0085DE  0E01               	movlw	1
 17544  0085E0  6EDF               	movwf	indf2,c
 17545                           
 17546                           ;nvm.c: 73: g_nvm.eeprm[channel].filter_mode = RAW_MODE;
 17547  0085E2  5013               	movf	nvm_clear_channel@channel^0,w,c
 17548  0085E4  0D3E               	mullw	62
 17549  0085E6  0E76               	movlw	low (_g_nvm+36)
 17550  0085E8  24F3               	addwf	243,w,c
 17551  0085EA  6ED9               	movwf	fsr2l,c
 17552  0085EC  0E01               	movlw	high (_g_nvm+36)
 17553  0085EE  20F4               	addwfc	prodh,w,c
 17554  0085F0  6EDA               	movwf	fsr2h,c
 17555  0085F2  0E00               	movlw	0
 17556  0085F4  6EDF               	movwf	indf2,c
 17557                           
 17558                           ;nvm.c: 74: g_nvm.eeprm[channel].window_size = 2;
 17559  0085F6  5013               	movf	nvm_clear_channel@channel^0,w,c
 17560  0085F8  0D3E               	mullw	62
 17561  0085FA  0E77               	movlw	low (_g_nvm+37)
 17562  0085FC  24F3               	addwf	243,w,c
 17563  0085FE  6ED9               	movwf	fsr2l,c
 17564  008600  0E01               	movlw	high (_g_nvm+37)
 17565  008602  20F4               	addwfc	prodh,w,c
 17566  008604  6EDA               	movwf	fsr2h,c
 17567  008606  0E02               	movlw	2
 17568  008608  6EDF               	movwf	indf2,c
 17569                           
 17570                           ;nvm.c: 75: g_nvm.eeprm[channel].temp_corf = CELSIUS;
 17571  00860A  5013               	movf	nvm_clear_channel@channel^0,w,c
 17572  00860C  0D3E               	mullw	62
 17573  00860E  0E78               	movlw	low (_g_nvm+38)
 17574  008610  24F3               	addwf	243,w,c
 17575  008612  6ED9               	movwf	fsr2l,c
 17576  008614  0E01               	movlw	high (_g_nvm+38)
 17577  008616  20F4               	addwfc	prodh,w,c
 17578  008618  6EDA               	movwf	fsr2h,c
 17579  00861A  0E00               	movlw	0
 17580  00861C  6EDF               	movwf	indf2,c
 17581                           
 17582                           ;nvm.c: 76: g_nvm.eeprm[channel].temp_compensate = TEMP_NOT_COMPENSATION;
 17583  00861E  5013               	movf	nvm_clear_channel@channel^0,w,c
 17584  008620  0D3E               	mullw	62
 17585  008622  0E79               	movlw	low (_g_nvm+39)
 17586  008624  24F3               	addwf	243,w,c
 17587  008626  6ED9               	movwf	fsr2l,c
 17588  008628  0E01               	movlw	high (_g_nvm+39)
 17589  00862A  20F4               	addwfc	prodh,w,c
 17590  00862C  6EDA               	movwf	fsr2h,c
 17591  00862E  0E00               	movlw	0
 17592  008630  6EDF               	movwf	indf2,c
 17593                           
 17594                           ;nvm.c: 78: g_nvm.eeprm[channel].baseLine_uV = 0.0f;
 17595  008632  5013               	movf	nvm_clear_channel@channel^0,w,c
 17596  008634  0D3E               	mullw	62
 17597  008636  0E7A               	movlw	low (_g_nvm+40)
 17598  008638  24F3               	addwf	243,w,c
 17599  00863A  6ED9               	movwf	fsr2l,c
 17600  00863C  0E01               	movlw	high (_g_nvm+40)
 17601  00863E  20F4               	addwfc	prodh,w,c
 17602  008640  6EDA               	movwf	fsr2h,c
 17603  008642  0E00               	movlw	0
 17604  008644  6EDE               	movwf	postinc2,c
 17605  008646  0E00               	movlw	0
 17606  008648  6EDE               	movwf	postinc2,c
 17607  00864A  0E00               	movlw	0
 17608  00864C  6EDE               	movwf	postinc2,c
 17609  00864E  0E00               	movlw	0
 17610  008650  6EDD               	movwf	postdec2,c
 17611                           
 17612                           ;nvm.c: 79: g_nvm.eeprm[channel].span_uV = 0.0f;
 17613  008652  5013               	movf	nvm_clear_channel@channel^0,w,c
 17614  008654  0D3E               	mullw	62
 17615  008656  0E7E               	movlw	low (_g_nvm+44)
 17616  008658  24F3               	addwf	243,w,c
 17617  00865A  6ED9               	movwf	fsr2l,c
 17618  00865C  0E01               	movlw	high (_g_nvm+44)
 17619  00865E  20F4               	addwfc	prodh,w,c
 17620  008660  6EDA               	movwf	fsr2h,c
 17621  008662  0E00               	movlw	0
 17622  008664  6EDE               	movwf	postinc2,c
 17623  008666  0E00               	movlw	0
 17624  008668  6EDE               	movwf	postinc2,c
 17625  00866A  0E00               	movlw	0
 17626  00866C  6EDE               	movwf	postinc2,c
 17627  00866E  0E00               	movlw	0
 17628  008670  6EDD               	movwf	postdec2,c
 17629                           
 17630                           ;nvm.c: 80: g_nvm.eeprm[channel].calib_baseLine = 0.0f;
 17631  008672  5013               	movf	nvm_clear_channel@channel^0,w,c
 17632  008674  0D3E               	mullw	62
 17633  008676  0E8A               	movlw	low (_g_nvm+56)
 17634  008678  24F3               	addwf	243,w,c
 17635  00867A  6ED9               	movwf	fsr2l,c
 17636  00867C  0E01               	movlw	high (_g_nvm+56)
 17637  00867E  20F4               	addwfc	prodh,w,c
 17638  008680  6EDA               	movwf	fsr2h,c
 17639  008682  0E00               	movlw	0
 17640  008684  6EDE               	movwf	postinc2,c
 17641  008686  0E00               	movlw	0
 17642  008688  6EDE               	movwf	postinc2,c
 17643  00868A  0E00               	movlw	0
 17644  00868C  6EDE               	movwf	postinc2,c
 17645  00868E  0E00               	movlw	0
 17646  008690  6EDD               	movwf	postdec2,c
 17647                           
 17648                           ;nvm.c: 82: g_nvm.eeprm[channel].baseLine_temp = 0.0f;
 17649  008692  5013               	movf	nvm_clear_channel@channel^0,w,c
 17650  008694  0D3E               	mullw	62
 17651  008696  0EA8               	movlw	low (_g_nvm+86)
 17652  008698  24F3               	addwf	243,w,c
 17653  00869A  6ED9               	movwf	fsr2l,c
 17654  00869C  0E01               	movlw	high (_g_nvm+86)
 17655  00869E  20F4               	addwfc	prodh,w,c
 17656  0086A0  6EDA               	movwf	fsr2h,c
 17657  0086A2  0E00               	movlw	0
 17658  0086A4  6EDE               	movwf	postinc2,c
 17659  0086A6  0E00               	movlw	0
 17660  0086A8  6EDE               	movwf	postinc2,c
 17661  0086AA  0E00               	movlw	0
 17662  0086AC  6EDE               	movwf	postinc2,c
 17663  0086AE  0E00               	movlw	0
 17664  0086B0  6EDD               	movwf	postdec2,c
 17665                           
 17666                           ;nvm.c: 84: g_nvm.eeprm[channel].CalibrationGas = 0.0f;
 17667  0086B2  5013               	movf	nvm_clear_channel@channel^0,w,c
 17668  0086B4  0D3E               	mullw	62
 17669  0086B6  0E82               	movlw	low (_g_nvm+48)
 17670  0086B8  24F3               	addwf	243,w,c
 17671  0086BA  6ED9               	movwf	fsr2l,c
 17672  0086BC  0E01               	movlw	high (_g_nvm+48)
 17673  0086BE  20F4               	addwfc	prodh,w,c
 17674  0086C0  6EDA               	movwf	fsr2h,c
 17675  0086C2  0E00               	movlw	0
 17676  0086C4  6EDE               	movwf	postinc2,c
 17677  0086C6  0E00               	movlw	0
 17678  0086C8  6EDE               	movwf	postinc2,c
 17679  0086CA  0E00               	movlw	0
 17680  0086CC  6EDE               	movwf	postinc2,c
 17681  0086CE  0E00               	movlw	0
 17682  0086D0  6EDD               	movwf	postdec2,c
 17683                           
 17684                           ;nvm.c: 85: g_nvm.eeprm[channel].gas_slope = 0.0f;
 17685  0086D2  5013               	movf	nvm_clear_channel@channel^0,w,c
 17686  0086D4  0D3E               	mullw	62
 17687  0086D6  0E86               	movlw	low (_g_nvm+52)
 17688  0086D8  24F3               	addwf	243,w,c
 17689  0086DA  6ED9               	movwf	fsr2l,c
 17690  0086DC  0E01               	movlw	high (_g_nvm+52)
 17691  0086DE  20F4               	addwfc	prodh,w,c
 17692  0086E0  6EDA               	movwf	fsr2h,c
 17693  0086E2  0E00               	movlw	0
 17694  0086E4  6EDE               	movwf	postinc2,c
 17695  0086E6  0E00               	movlw	0
 17696  0086E8  6EDE               	movwf	postinc2,c
 17697  0086EA  0E00               	movlw	0
 17698  0086EC  6EDE               	movwf	postinc2,c
 17699  0086EE  0E00               	movlw	0
 17700  0086F0  6EDD               	movwf	postdec2,c
 17701                           
 17702                           ;nvm.c: 87: g_nvm.eeprm[channel].gasOffset = 0.0f;
 17703  0086F2  5013               	movf	nvm_clear_channel@channel^0,w,c
 17704  0086F4  0D3E               	mullw	62
 17705  0086F6  0E8E               	movlw	low (_g_nvm+60)
 17706  0086F8  24F3               	addwf	243,w,c
 17707  0086FA  6ED9               	movwf	fsr2l,c
 17708  0086FC  0E01               	movlw	high (_g_nvm+60)
 17709  0086FE  20F4               	addwfc	prodh,w,c
 17710  008700  6EDA               	movwf	fsr2h,c
 17711  008702  0E00               	movlw	0
 17712  008704  6EDE               	movwf	postinc2,c
 17713  008706  0E00               	movlw	0
 17714  008708  6EDE               	movwf	postinc2,c
 17715  00870A  0E00               	movlw	0
 17716  00870C  6EDE               	movwf	postinc2,c
 17717  00870E  0E00               	movlw	0
 17718  008710  6EDD               	movwf	postdec2,c
 17719                           
 17720                           ;nvm.c: 88: g_nvm.eeprm[channel].tempOffset= 0.0f;
 17721  008712  5013               	movf	nvm_clear_channel@channel^0,w,c
 17722  008714  0D3E               	mullw	62
 17723  008716  0E92               	movlw	low (_g_nvm+64)
 17724  008718  24F3               	addwf	243,w,c
 17725  00871A  6ED9               	movwf	fsr2l,c
 17726  00871C  0E01               	movlw	high (_g_nvm+64)
 17727  00871E  20F4               	addwfc	prodh,w,c
 17728  008720  6EDA               	movwf	fsr2h,c
 17729  008722  0E00               	movlw	0
 17730  008724  6EDE               	movwf	postinc2,c
 17731  008726  0E00               	movlw	0
 17732  008728  6EDE               	movwf	postinc2,c
 17733  00872A  0E00               	movlw	0
 17734  00872C  6EDE               	movwf	postinc2,c
 17735  00872E  0E00               	movlw	0
 17736  008730  6EDD               	movwf	postdec2,c
 17737                           
 17738                           ;nvm.c: 90: g_nvm.eeprm[channel].caltime = 0;
 17739  008732  5013               	movf	nvm_clear_channel@channel^0,w,c
 17740  008734  0D3E               	mullw	62
 17741  008736  0E96               	movlw	low (_g_nvm+68)
 17742  008738  24F3               	addwf	243,w,c
 17743  00873A  6ED9               	movwf	fsr2l,c
 17744  00873C  0E01               	movlw	high (_g_nvm+68)
 17745  00873E  20F4               	addwfc	prodh,w,c
 17746  008740  6EDA               	movwf	fsr2h,c
 17747  008742  6ADE               	clrf	postinc2,c
 17748  008744  6ADE               	clrf	postinc2,c
 17749  008746  6ADE               	clrf	postinc2,c
 17750  008748  6ADD               	clrf	postdec2,c
 17751                           
 17752                           ;nvm.c: 91: g_nvm.eeprm[channel].usedtime = 0;
 17753  00874A  5013               	movf	nvm_clear_channel@channel^0,w,c
 17754  00874C  0D3E               	mullw	62
 17755  00874E  0E9A               	movlw	low (_g_nvm+72)
 17756  008750  24F3               	addwf	243,w,c
 17757  008752  6ED9               	movwf	fsr2l,c
 17758  008754  0E01               	movlw	high (_g_nvm+72)
 17759  008756  20F4               	addwfc	prodh,w,c
 17760  008758  6EDA               	movwf	fsr2h,c
 17761  00875A  6ADE               	clrf	postinc2,c
 17762  00875C  6ADE               	clrf	postinc2,c
 17763  00875E  6ADE               	clrf	postinc2,c
 17764  008760  6ADD               	clrf	postdec2,c
 17765                           
 17766                           ;nvm.c: 93: _strclr(g_nvm.eeprm[channel].sensor_name, 10);
 17767  008762  5013               	movf	nvm_clear_channel@channel^0,w,c
 17768  008764  0D3E               	mullw	62
 17769  008766  0E9E               	movlw	low (_g_nvm+76)
 17770  008768  24F3               	addwf	243,w,c
 17771  00876A  6E0F               	movwf	__strclr@dest^0,c
 17772  00876C  0E01               	movlw	high (_g_nvm+76)
 17773  00876E  20F4               	addwfc	prodh,w,c
 17774  008770  6E10               	movwf	(__strclr@dest+1)^0,c
 17775  008772  0E00               	movlw	0
 17776  008774  6E12               	movwf	(__strclr@n+1)^0,c
 17777  008776  0E0A               	movlw	10
 17778  008778  6E11               	movwf	__strclr@n^0,c
 17779  00877A  EC2B  F06B         	call	__strclr	;wreg free
 17780  00877E  0012               	return		;funcret
 17781  008780                     __end_of_nvm_clear_channel:
 17782                           	callstack 0
 17783                           
 17784 ;; *************** function _eeprom_update_all *****************
 17785 ;; Defined at:
 17786 ;;		line 165 in file "app_atcommand.c"
 17787 ;; Parameters:    Size  Location     Type
 17788 ;;		None
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;  wait_count      1   48[COMRAM] unsigned char 
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  1    wreg      unsigned char 
 17793 ;; Registers used:
 17794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17795 ;; Tracked objects:
 17796 ;;		On entry : 3E/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17804 ;;Total ram usage:        3 bytes
 17805 ;; Hardware stack levels used: 1
 17806 ;; Hardware stack levels required when called: 10
 17807 ;; This function calls:
 17808 ;;		_ACCESS_SourceGet
 17809 ;;		_ACCESS_SourceSet
 17810 ;;		_memcpy
 17811 ;;		_nvm_write_eeprom_all
 17812 ;; This function is called by:
 17813 ;;		_update_command
 17814 ;;		_usedtime_task
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818                           	psect	text77
 17819  00A338                     __ptext77:
 17820                           	callstack 0
 17821  00A338                     _eeprom_update_all:
 17822                           	callstack 19
 17823                           
 17824                           ;app_atcommand.c: 167: uint8_t wait_count = 0;
 17825                           
 17826                           ;incstack = 0
 17827  00A338  0E00               	movlw	0
 17828  00A33A  6E31               	movwf	eeprom_update_all@wait_count^0,c
 17829                           
 17830                           ;app_atcommand.c: 173: while (ACCESS_SourceGet()) {
 17831  00A33C  D02F               	goto	l32453
 17832  00A33E                     l811:
 17833  00A33E  0004               	clrwdt		;# 
 17834                           
 17835                           ;app_atcommand.c: 175: _delay((unsigned long)((100)*(48000000/4000.0)));
 17836  00A340  0E07               	movlw	7
 17837  00A342  6E30               	movwf	(??_eeprom_update_all+1)^0,c
 17838  00A344  0E17               	movlw	23
 17839  00A346  6E2F               	movwf	??_eeprom_update_all^0,c
 17840  00A348  0E6A               	movlw	106
 17841  00A34A                     u43787:
 17842  00A34A  2EE8               	decfsz	wreg,f,c
 17843  00A34C  D7FE               	bra	u43787
 17844  00A34E  2E2F               	decfsz	??_eeprom_update_all^0,f,c
 17845  00A350  D7FC               	bra	u43787
 17846  00A352  2E30               	decfsz	(??_eeprom_update_all+1)^0,f,c
 17847  00A354  D7FA               	bra	u43787
 17848  00A356  D000               	nop2	
 17849                           
 17850                           ;app_atcommand.c: 176: wait_count++;
 17851  00A358  2A31               	incf	eeprom_update_all@wait_count^0,f,c
 17852                           
 17853                           ;app_atcommand.c: 177: if (wait_count >= 15) {
 17854  00A35A  0E0E               	movlw	14
 17855  00A35C  6431               	cpfsgt	eeprom_update_all@wait_count^0,c
 17856  00A35E  D01E               	goto	l32453
 17857                           
 17858                           ;app_atcommand.c: 178: memcpy(g_nvm.eeprm[0].byte, g_eeprmTemp[0].byte, 62);
 17859  00A360  0E70               	movlw	low (_g_nvm+30)
 17860  00A362  6E0F               	movwf	memcpy@d1^0,c
 17861  00A364  0E01               	movlw	high (_g_nvm+30)
 17862  00A366  6E10               	movwf	(memcpy@d1+1)^0,c
 17863  00A368  0E27               	movlw	low _g_eeprmTemp
 17864  00A36A  6E11               	movwf	memcpy@s1^0,c
 17865  00A36C  0E03               	movlw	high _g_eeprmTemp
 17866  00A36E  6E12               	movwf	(memcpy@s1+1)^0,c
 17867  00A370  0E00               	movlw	0
 17868  00A372  6E14               	movwf	(memcpy@n+1)^0,c
 17869  00A374  0E3E               	movlw	62
 17870  00A376  6E13               	movwf	memcpy@n^0,c
 17871  00A378  ECA6  F068         	call	_memcpy	;wreg free
 17872                           
 17873                           ;app_atcommand.c: 179: memcpy(g_nvm.eeprm[1].byte, g_eeprmTemp[1].byte, 62);
 17874  00A37C  0EAE               	movlw	low (_g_nvm+92)
 17875  00A37E  6E0F               	movwf	memcpy@d1^0,c
 17876  00A380  0E01               	movlw	high (_g_nvm+92)
 17877  00A382  6E10               	movwf	(memcpy@d1+1)^0,c
 17878  00A384  0E65               	movlw	low (_g_eeprmTemp+62)
 17879  00A386  6E11               	movwf	memcpy@s1^0,c
 17880  00A388  0E03               	movlw	high (_g_eeprmTemp+62)
 17881  00A38A  6E12               	movwf	(memcpy@s1+1)^0,c
 17882  00A38C  0E00               	movlw	0
 17883  00A38E  6E14               	movwf	(memcpy@n+1)^0,c
 17884  00A390  0E3E               	movlw	62
 17885  00A392  6E13               	movwf	memcpy@n^0,c
 17886  00A394  ECA6  F068         	call	_memcpy	;wreg free
 17887  00A398                     l32449:
 17888                           
 17889                           ;app_atcommand.c: 180: return 0;
 17890  00A398  0E00               	movlw	0
 17891  00A39A  0012               	return	
 17892  00A39C                     l32453:
 17893  00A39C  EC4C  F06F         	call	_ACCESS_SourceGet	;wreg free
 17894  00A3A0  0900               	iorlw	0
 17895  00A3A2  A4D8               	btfss	status,2,c
 17896  00A3A4  D7CC               	goto	l811
 17897                           
 17898                           ;app_atcommand.c: 181: };app_atcommand.c: 182: };app_atcommand.c: 187: ACCESS_SourceSet(
      +                          1);
 17899  00A3A6  0E01               	movlw	1
 17900  00A3A8  ECD7  F06A         	call	_ACCESS_SourceSet
 17901                           
 17902                           ;app_atcommand.c: 189: if (g_sens_measure.existChannel[0]) {
 17903  00A3AC  0100               	movlb	0	; () banked
 17904  00A3AE  51D2               	movf	(_g_sens_measure+3)& (0+255),w,b
 17905  00A3B0  B4D8               	btfsc	status,2,c
 17906  00A3B2  D032               	goto	l32475
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;app_atcommand.c: 191: if (nvm_write_eeprom_all(0) == 0) {
 17910  00A3B4  0E00               	movlw	0
 17911  00A3B6  ECC4  F04D         	call	_nvm_write_eeprom_all
 17912  00A3BA  0900               	iorlw	0
 17913  00A3BC  A4D8               	btfss	status,2,c
 17914  00A3BE  D024               	goto	l32473
 17915                           
 17916                           ;app_atcommand.c: 196: ACCESS_SourceSet(0);
 17917  00A3C0  0E00               	movlw	0
 17918  00A3C2  ECD7  F06A         	call	_ACCESS_SourceSet
 17919                           
 17920                           ;app_atcommand.c: 198: memcpy(g_nvm.eeprm[0].byte, g_eeprmTemp[0].byte, 62);
 17921  00A3C6  0E70               	movlw	low (_g_nvm+30)
 17922  00A3C8  6E0F               	movwf	memcpy@d1^0,c
 17923  00A3CA  0E01               	movlw	high (_g_nvm+30)
 17924  00A3CC  6E10               	movwf	(memcpy@d1+1)^0,c
 17925  00A3CE  0E27               	movlw	low _g_eeprmTemp
 17926  00A3D0  6E11               	movwf	memcpy@s1^0,c
 17927  00A3D2  0E03               	movlw	high _g_eeprmTemp
 17928  00A3D4  6E12               	movwf	(memcpy@s1+1)^0,c
 17929  00A3D6  0E00               	movlw	0
 17930  00A3D8  6E14               	movwf	(memcpy@n+1)^0,c
 17931  00A3DA  0E3E               	movlw	62
 17932  00A3DC  6E13               	movwf	memcpy@n^0,c
 17933  00A3DE  ECA6  F068         	call	_memcpy	;wreg free
 17934                           
 17935                           ;app_atcommand.c: 199: if (g_sens_measure.existChannel[1]) {
 17936  00A3E2  0100               	movlb	0	; () banked
 17937  00A3E4  51D3               	movf	(_g_sens_measure+4)& (0+255),w,b
 17938  00A3E6  B4D8               	btfsc	status,2,c
 17939  00A3E8  D7D7               	goto	l32449
 17940  00A3EA                     u40930:
 17941                           
 17942                           ;app_atcommand.c: 200: memcpy(g_nvm.eeprm[1].byte, g_eeprmTemp[1].byte, 62);
 17943  00A3EA  0EAE               	movlw	low (_g_nvm+92)
 17944  00A3EC  6E0F               	movwf	memcpy@d1^0,c
 17945  00A3EE  0E01               	movlw	high (_g_nvm+92)
 17946  00A3F0  6E10               	movwf	(memcpy@d1+1)^0,c
 17947  00A3F2  0E65               	movlw	low (_g_eeprmTemp+62)
 17948  00A3F4  6E11               	movwf	memcpy@s1^0,c
 17949  00A3F6  0E03               	movlw	high (_g_eeprmTemp+62)
 17950  00A3F8  6E12               	movwf	(memcpy@s1+1)^0,c
 17951  00A3FA  0E00               	movlw	0
 17952  00A3FC  6E14               	movwf	(memcpy@n+1)^0,c
 17953  00A3FE  0E3E               	movlw	62
 17954  00A400  6E13               	movwf	memcpy@n^0,c
 17955  00A402  ECA6  F068         	call	_memcpy	;wreg free
 17956  00A406  D7C8               	goto	l32449
 17957  00A408                     l32473:
 17958                           
 17959                           ;app_atcommand.c: 204: };app_atcommand.c: 205: _delay((unsigned long)((10)*(48000000/400
      +                          0.0)));
 17960  00A408  0E9C               	movlw	156
 17961  00A40A  6E2F               	movwf	??_eeprom_update_all^0,c
 17962  00A40C  0ED7               	movlw	215
 17963  00A40E                     u43797:
 17964  00A40E  2EE8               	decfsz	wreg,f,c
 17965  00A410  D7FE               	bra	u43797
 17966  00A412  2E2F               	decfsz	??_eeprom_update_all^0,f,c
 17967  00A414  D7FC               	bra	u43797
 17968  00A416  F000               	nop	
 17969  00A418                     l32475:
 17970                           
 17971                           ;app_atcommand.c: 206: };app_atcommand.c: 209: if (g_sens_measure.existChannel[1]) {
 17972  00A418  0100               	movlb	0	; () banked
 17973  00A41A  51D3               	movf	(_g_sens_measure+4)& (0+255),w,b
 17974  00A41C  B4D8               	btfsc	status,2,c
 17975  00A41E  D00A               	goto	l32487
 17976                           
 17977                           ; BSR set to: 0
 17978                           ;app_atcommand.c: 211: if (nvm_write_eeprom_all(1) == 0) {
 17979  00A420  0E01               	movlw	1
 17980  00A422  ECC4  F04D         	call	_nvm_write_eeprom_all
 17981  00A426  0900               	iorlw	0
 17982  00A428  A4D8               	btfss	status,2,c
 17983  00A42A  D004               	goto	l32487
 17984                           
 17985                           ;app_atcommand.c: 216: ACCESS_SourceSet(0);
 17986  00A42C  0E00               	movlw	0
 17987  00A42E  ECD7  F06A         	call	_ACCESS_SourceSet
 17988  00A432  D7DB               	goto	u40930
 17989  00A434                     l32487:
 17990                           
 17991                           ;app_atcommand.c: 221: };app_atcommand.c: 222: };app_atcommand.c: 227: ACCESS_SourceSet(
      +                          0);
 17992  00A434  0E00               	movlw	0
 17993  00A436  ECD7  F06A         	call	_ACCESS_SourceSet
 17994                           
 17995                           ;app_atcommand.c: 229: return 1;
 17996  00A43A  0E01               	movlw	1
 17997  00A43C  0012               	return		;funcret
 17998  00A43E                     __end_of_eeprom_update_all:
 17999                           	callstack 0
 18000                           
 18001 ;; *************** function _eeprom_update *****************
 18002 ;; Defined at:
 18003 ;;		line 139 in file "app_atcommand.c"
 18004 ;; Parameters:    Size  Location     Type
 18005 ;;  chno            1    wreg     unsigned char 
 18006 ;; Auto vars:     Size  Location     Type
 18007 ;;  chno            1   48[COMRAM] unsigned char 
 18008 ;;  wait_count      1   50[COMRAM] unsigned char 
 18009 ;;  retval          1   49[COMRAM] unsigned char 
 18010 ;; Return value:  Size  Location     Type
 18011 ;;                  1    wreg      unsigned char 
 18012 ;; Registers used:
 18013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18014 ;; Tracked objects:
 18015 ;;		On entry : 3F/0
 18016 ;;		On exit  : 0/0
 18017 ;;		Unchanged: 0/0
 18018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18022 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18023 ;;Total ram usage:        5 bytes
 18024 ;; Hardware stack levels used: 1
 18025 ;; Hardware stack levels required when called: 10
 18026 ;; This function calls:
 18027 ;;		_ACCESS_SourceGet
 18028 ;;		_ACCESS_SourceSet
 18029 ;;		_nvm_write_eeprom_all
 18030 ;; This function is called by:
 18031 ;;		_update_command
 18032 ;; This function uses a non-reentrant model
 18033 ;;
 18034                           
 18035                           	psect	text78
 18036  00CE22                     __ptext78:
 18037                           	callstack 0
 18038  00CE22                     _eeprom_update:
 18039                           	callstack 18
 18040                           
 18041                           ;incstack = 0
 18042                           ;eeprom_update@chno stored from wreg
 18043  00CE22  6E31               	movwf	eeprom_update@chno^0,c
 18044                           
 18045                           ;app_atcommand.c: 141: bool retval;;app_atcommand.c: 142: uint8_t wait_count = 0;
 18046  00CE24  0E00               	movlw	0
 18047  00CE26  6E33               	movwf	eeprom_update@wait_count^0,c
 18048                           
 18049                           ;app_atcommand.c: 147: while (ACCESS_SourceGet()) {
 18050  00CE28  D013               	goto	l32429
 18051  00CE2A                     l804:
 18052  00CE2A  0004               	clrwdt		;# 
 18053                           
 18054                           ;app_atcommand.c: 149: _delay((unsigned long)((100)*(48000000/4000.0)));
 18055  00CE2C  0E07               	movlw	7
 18056  00CE2E  6E30               	movwf	(??_eeprom_update+1)^0,c
 18057  00CE30  0E17               	movlw	23
 18058  00CE32  6E2F               	movwf	??_eeprom_update^0,c
 18059  00CE34  0E6A               	movlw	106
 18060  00CE36                     u43807:
 18061  00CE36  2EE8               	decfsz	wreg,f,c
 18062  00CE38  D7FE               	bra	u43807
 18063  00CE3A  2E2F               	decfsz	??_eeprom_update^0,f,c
 18064  00CE3C  D7FC               	bra	u43807
 18065  00CE3E  2E30               	decfsz	(??_eeprom_update+1)^0,f,c
 18066  00CE40  D7FA               	bra	u43807
 18067  00CE42  D000               	nop2	
 18068                           
 18069                           ;app_atcommand.c: 150: wait_count++;
 18070  00CE44  2A33               	incf	eeprom_update@wait_count^0,f,c
 18071                           
 18072                           ;app_atcommand.c: 151: if (wait_count >= 15) {
 18073  00CE46  0E0E               	movlw	14
 18074  00CE48  6433               	cpfsgt	eeprom_update@wait_count^0,c
 18075  00CE4A  D002               	goto	l32429
 18076                           
 18077                           ;app_atcommand.c: 152: return 0;
 18078  00CE4C  0E00               	movlw	0
 18079  00CE4E  0012               	return	
 18080  00CE50                     l32429:
 18081  00CE50  EC4C  F06F         	call	_ACCESS_SourceGet	;wreg free
 18082  00CE54  0900               	iorlw	0
 18083  00CE56  A4D8               	btfss	status,2,c
 18084  00CE58  D7E8               	goto	l804
 18085                           
 18086                           ;app_atcommand.c: 153: };app_atcommand.c: 154: };app_atcommand.c: 156: ACCESS_SourceSet(
      +                          1);
 18087  00CE5A  0E01               	movlw	1
 18088  00CE5C  ECD7  F06A         	call	_ACCESS_SourceSet
 18089                           
 18090                           ;app_atcommand.c: 158: retval = nvm_write_eeprom_all(chno);
 18091  00CE60  5031               	movf	eeprom_update@chno^0,w,c
 18092  00CE62  ECC4  F04D         	call	_nvm_write_eeprom_all
 18093  00CE66  6E32               	movwf	eeprom_update@retval^0,c
 18094                           
 18095                           ;app_atcommand.c: 160: ACCESS_SourceSet(0);
 18096  00CE68  0E00               	movlw	0
 18097  00CE6A  ECD7  F06A         	call	_ACCESS_SourceSet
 18098                           
 18099                           ;app_atcommand.c: 162: return retval;
 18100  00CE6E  5032               	movf	eeprom_update@retval^0,w,c
 18101  00CE70  0012               	return		;funcret
 18102  00CE72                     __end_of_eeprom_update:
 18103                           	callstack 0
 18104                           
 18105 ;; *************** function _nvm_write_eeprom_all *****************
 18106 ;; Defined at:
 18107 ;;		line 227 in file "nvm.c"
 18108 ;; Parameters:    Size  Location     Type
 18109 ;;  channel         1    wreg     unsigned char 
 18110 ;; Auto vars:     Size  Location     Type
 18111 ;;  channel         1   45[COMRAM] unsigned char 
 18112 ;;  i               1   43[COMRAM] unsigned char 
 18113 ;;  size            1   44[COMRAM] unsigned char 
 18114 ;;  left            1   42[COMRAM] unsigned char 
 18115 ;; Return value:  Size  Location     Type
 18116 ;;                  1    wreg      unsigned char 
 18117 ;; Registers used:
 18118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18119 ;; Tracked objects:
 18120 ;;		On entry : 0/0
 18121 ;;		On exit  : 0/0
 18122 ;;		Unchanged: 0/0
 18123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18125 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18126 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18128 ;;Total ram usage:        8 bytes
 18129 ;; Hardware stack levels used: 1
 18130 ;; Hardware stack levels required when called: 9
 18131 ;; This function calls:
 18132 ;;		_checksum
 18133 ;;		_eeprom_writePage
 18134 ;; This function is called by:
 18135 ;;		_eeprom_update
 18136 ;;		_eeprom_update_all
 18137 ;; This function uses a non-reentrant model
 18138 ;;
 18139                           
 18140                           	psect	text79
 18141  009B88                     __ptext79:
 18142                           	callstack 0
 18143  009B88                     _nvm_write_eeprom_all:
 18144                           	callstack 19
 18145                           
 18146                           ;incstack = 0
 18147                           ;nvm_write_eeprom_all@channel stored from wreg
 18148  009B88  6E2E               	movwf	nvm_write_eeprom_all@channel^0,c
 18149                           
 18150                           ;nvm.c: 229: g_nvm.eeprm[channel].check_sum = checksum(g_nvm.eeprm[channel].byte, 62-2);
 18151  009B8A  502E               	movf	nvm_write_eeprom_all@channel^0,w,c
 18152  009B8C  0D3E               	mullw	62
 18153  009B8E  0E70               	movlw	low (_g_nvm+30)
 18154  009B90  24F3               	addwf	243,w,c
 18155  009B92  6E0F               	movwf	checksum@data^0,c
 18156  009B94  0E01               	movlw	high (_g_nvm+30)
 18157  009B96  20F4               	addwfc	prodh,w,c
 18158  009B98  6E10               	movwf	(checksum@data+1)^0,c
 18159  009B9A  0E00               	movlw	0
 18160  009B9C  6E12               	movwf	(checksum@length+1)^0,c
 18161  009B9E  0E3C               	movlw	60
 18162  009BA0  6E11               	movwf	checksum@length^0,c
 18163  009BA2  EC66  F062         	call	_checksum	;wreg free
 18164  009BA6  502E               	movf	nvm_write_eeprom_all@channel^0,w,c
 18165  009BA8  0D3E               	mullw	62
 18166  009BAA  0EAC               	movlw	low (_g_nvm+90)
 18167  009BAC  24F3               	addwf	243,w,c
 18168  009BAE  6ED9               	movwf	fsr2l,c
 18169  009BB0  0E01               	movlw	high (_g_nvm+90)
 18170  009BB2  20F4               	addwfc	prodh,w,c
 18171  009BB4  6EDA               	movwf	fsr2h,c
 18172  009BB6  C00F  FFDE         	movff	?_checksum,postinc2
 18173  009BBA  C010  FFDD         	movff	?_checksum+1,postdec2
 18174                           
 18175                           ;nvm.c: 231: uint8_t size = (62 / 8);
 18176  009BBE  0E07               	movlw	7
 18177  009BC0  6E2D               	movwf	nvm_write_eeprom_all@size^0,c
 18178                           
 18179                           ;nvm.c: 232: for (uint8_t i = 0 ; i < size ; i++) {
 18180  009BC2  0E00               	movlw	0
 18181  009BC4  6E2C               	movwf	nvm_write_eeprom_all@i^0,c
 18182  009BC6  D037               	goto	l1717
 18183  009BC8                     l32025:
 18184                           
 18185                           ;nvm.c: 233: if (eeprom_writePage(channel, 0x00 + (i * 8), &g_nvm.eeprm[channel].byte[(i
      +                           * 8)], 8) == 0)
 18186  009BC8  502C               	movf	nvm_write_eeprom_all@i^0,w,c
 18187  009BCA  0D08               	mullw	8
 18188  009BCC  CFF3 F01F          	movff	prodl,eeprom_writePage@mem_addr
 18189  009BD0  502C               	movf	nvm_write_eeprom_all@i^0,w,c
 18190  009BD2  6E27               	movwf	??_nvm_write_eeprom_all^0,c
 18191  009BD4  6A28               	clrf	(??_nvm_write_eeprom_all+1)^0,c
 18192  009BD6  90D8               	bcf	status,0,c
 18193  009BD8  3627               	rlcf	??_nvm_write_eeprom_all^0,f,c
 18194  009BDA  3628               	rlcf	(??_nvm_write_eeprom_all+1)^0,f,c
 18195  009BDC  90D8               	bcf	status,0,c
 18196  009BDE  3627               	rlcf	??_nvm_write_eeprom_all^0,f,c
 18197  009BE0  3628               	rlcf	(??_nvm_write_eeprom_all+1)^0,f,c
 18198  009BE2  90D8               	bcf	status,0,c
 18199  009BE4  3627               	rlcf	??_nvm_write_eeprom_all^0,f,c
 18200  009BE6  3628               	rlcf	(??_nvm_write_eeprom_all+1)^0,f,c
 18201  009BE8  502E               	movf	nvm_write_eeprom_all@channel^0,w,c
 18202  009BEA  0D3E               	mullw	62
 18203  009BEC  0E52               	movlw	low _g_nvm
 18204  009BEE  6E29               	movwf	(??_nvm_write_eeprom_all+2)^0,c
 18205  009BF0  0E01               	movlw	high _g_nvm
 18206  009BF2  6E2A               	movwf	(??_nvm_write_eeprom_all+3)^0,c
 18207  009BF4  0E1E               	movlw	30
 18208  009BF6  2629               	addwf	(??_nvm_write_eeprom_all+2)^0,f,c
 18209  009BF8  0E00               	movlw	0
 18210  009BFA  222A               	addwfc	(??_nvm_write_eeprom_all+3)^0,f,c
 18211  009BFC  50F3               	movf	243,w,c
 18212  009BFE  2629               	addwf	(??_nvm_write_eeprom_all+2)^0,f,c
 18213  009C00  50F4               	movf	244,w,c
 18214  009C02  222A               	addwfc	(??_nvm_write_eeprom_all+3)^0,f,c
 18215  009C04  5027               	movf	??_nvm_write_eeprom_all^0,w,c
 18216  009C06  2429               	addwf	(??_nvm_write_eeprom_all+2)^0,w,c
 18217  009C08  6E20               	movwf	eeprom_writePage@wrptr^0,c
 18218  009C0A  5028               	movf	(??_nvm_write_eeprom_all+1)^0,w,c
 18219  009C0C  202A               	addwfc	(??_nvm_write_eeprom_all+3)^0,w,c
 18220  009C0E  6E21               	movwf	(eeprom_writePage@wrptr+1)^0,c
 18221  009C10  0E08               	movlw	8
 18222  009C12  6E22               	movwf	eeprom_writePage@len^0,c
 18223  009C14  502E               	movf	nvm_write_eeprom_all@channel^0,w,c
 18224  009C16  EC92  F064         	call	_eeprom_writePage
 18225  009C1A  0900               	iorlw	0
 18226  009C1C  A4D8               	btfss	status,2,c
 18227  009C1E  D002               	goto	l32031
 18228  009C20                     u40200:
 18229                           
 18230                           ;nvm.c: 234: return 0;
 18231  009C20  0E00               	movlw	0
 18232  009C22  0012               	return	
 18233  009C24                     l32031:
 18234                           
 18235                           ;nvm.c: 235: _delay((unsigned long)((10)*(48000000/4000.0)));
 18236  009C24  0E9C               	movlw	156
 18237  009C26  6E27               	movwf	??_nvm_write_eeprom_all^0,c
 18238  009C28  0ED7               	movlw	215
 18239  009C2A                     u43817:
 18240  009C2A  2EE8               	decfsz	wreg,f,c
 18241  009C2C  D7FE               	bra	u43817
 18242  009C2E  2E27               	decfsz	??_nvm_write_eeprom_all^0,f,c
 18243  009C30  D7FC               	bra	u43817
 18244  009C32  F000               	nop	
 18245  009C34  2A2C               	incf	nvm_write_eeprom_all@i^0,f,c
 18246  009C36                     l1717:
 18247  009C36  502D               	movf	nvm_write_eeprom_all@size^0,w,c
 18248  009C38  5C2C               	subwf	nvm_write_eeprom_all@i^0,w,c
 18249  009C3A  A0D8               	btfss	status,0,c
 18250  009C3C  D7C5               	goto	l32025
 18251                           
 18252                           ;nvm.c: 236: };nvm.c: 237: uint8_t left = 62 - (size * 8);
 18253  009C3E  502D               	movf	nvm_write_eeprom_all@size^0,w,c
 18254  009C40  0DF8               	mullw	-8
 18255  009C42  50F3               	movf	243,w,c
 18256  009C44  0F3E               	addlw	62
 18257  009C46  6E2B               	movwf	nvm_write_eeprom_all@left^0,c
 18258                           
 18259                           ;nvm.c: 238: if (left > 0) {
 18260  009C48  502B               	movf	nvm_write_eeprom_all@left^0,w,c
 18261  009C4A  B4D8               	btfsc	status,2,c
 18262  009C4C  D034               	goto	l1722
 18263                           
 18264                           ;nvm.c: 239: if (eeprom_writePage(channel, 0x00 + (size * 8), &g_nvm.eeprm[channel].byte
      +                          [(size * 8)], left) == 0)
 18265  009C4E  502D               	movf	nvm_write_eeprom_all@size^0,w,c
 18266  009C50  0D08               	mullw	8
 18267  009C52  CFF3 F01F          	movff	prodl,eeprom_writePage@mem_addr
 18268  009C56  502D               	movf	nvm_write_eeprom_all@size^0,w,c
 18269  009C58  6E27               	movwf	??_nvm_write_eeprom_all^0,c
 18270  009C5A  6A28               	clrf	(??_nvm_write_eeprom_all+1)^0,c
 18271  009C5C  90D8               	bcf	status,0,c
 18272  009C5E  3627               	rlcf	??_nvm_write_eeprom_all^0,f,c
 18273  009C60  3628               	rlcf	(??_nvm_write_eeprom_all+1)^0,f,c
 18274  009C62  90D8               	bcf	status,0,c
 18275  009C64  3627               	rlcf	??_nvm_write_eeprom_all^0,f,c
 18276  009C66  3628               	rlcf	(??_nvm_write_eeprom_all+1)^0,f,c
 18277  009C68  90D8               	bcf	status,0,c
 18278  009C6A  3627               	rlcf	??_nvm_write_eeprom_all^0,f,c
 18279  009C6C  3628               	rlcf	(??_nvm_write_eeprom_all+1)^0,f,c
 18280  009C6E  502E               	movf	nvm_write_eeprom_all@channel^0,w,c
 18281  009C70  0D3E               	mullw	62
 18282  009C72  0E52               	movlw	low _g_nvm
 18283  009C74  6E29               	movwf	(??_nvm_write_eeprom_all+2)^0,c
 18284  009C76  0E01               	movlw	high _g_nvm
 18285  009C78  6E2A               	movwf	(??_nvm_write_eeprom_all+3)^0,c
 18286  009C7A  0E1E               	movlw	30
 18287  009C7C  2629               	addwf	(??_nvm_write_eeprom_all+2)^0,f,c
 18288  009C7E  0E00               	movlw	0
 18289  009C80  222A               	addwfc	(??_nvm_write_eeprom_all+3)^0,f,c
 18290  009C82  50F3               	movf	243,w,c
 18291  009C84  2629               	addwf	(??_nvm_write_eeprom_all+2)^0,f,c
 18292  009C86  50F4               	movf	244,w,c
 18293  009C88  222A               	addwfc	(??_nvm_write_eeprom_all+3)^0,f,c
 18294  009C8A  5027               	movf	??_nvm_write_eeprom_all^0,w,c
 18295  009C8C  2429               	addwf	(??_nvm_write_eeprom_all+2)^0,w,c
 18296  009C8E  6E20               	movwf	eeprom_writePage@wrptr^0,c
 18297  009C90  5028               	movf	(??_nvm_write_eeprom_all+1)^0,w,c
 18298  009C92  202A               	addwfc	(??_nvm_write_eeprom_all+3)^0,w,c
 18299  009C94  6E21               	movwf	(eeprom_writePage@wrptr+1)^0,c
 18300  009C96  C02B  F022         	movff	nvm_write_eeprom_all@left,eeprom_writePage@len
 18301  009C9A  502E               	movf	nvm_write_eeprom_all@channel^0,w,c
 18302  009C9C  EC92  F064         	call	_eeprom_writePage
 18303  009CA0  0900               	iorlw	0
 18304  009CA2  B4D8               	btfsc	status,2,c
 18305  009CA4  D7BD               	goto	u40200
 18306                           
 18307                           ;nvm.c: 241: _delay((unsigned long)((10)*(48000000/4000.0)));
 18308  009CA6  0E9C               	movlw	156
 18309  009CA8  6E27               	movwf	??_nvm_write_eeprom_all^0,c
 18310  009CAA  0ED7               	movlw	215
 18311  009CAC                     u43827:
 18312  009CAC  2EE8               	decfsz	wreg,f,c
 18313  009CAE  D7FE               	bra	u43827
 18314  009CB0  2E27               	decfsz	??_nvm_write_eeprom_all^0,f,c
 18315  009CB2  D7FC               	bra	u43827
 18316  009CB4  F000               	nop	
 18317  009CB6                     l1722:
 18318                           
 18319                           ;nvm.c: 242: };nvm.c: 243: return 1;
 18320  009CB6  0E01               	movlw	1
 18321  009CB8  0012               	return		;funcret
 18322  009CBA                     __end_of_nvm_write_eeprom_all:
 18323                           	callstack 0
 18324                           
 18325 ;; *************** function _eeprom_writePage *****************
 18326 ;; Defined at:
 18327 ;;		line 14 in file "bsp/eep24AA02.c"
 18328 ;; Parameters:    Size  Location     Type
 18329 ;;  channel         1    wreg     const unsigned char 
 18330 ;;  mem_addr        1   30[COMRAM] const unsigned char 
 18331 ;;  wrptr           2   31[COMRAM] PTR const unsigned char 
 18332 ;;		 -> g_nvm.eeprm(124), g_nvm(154), 
 18333 ;;  len             1   33[COMRAM] const unsigned char 
 18334 ;; Auto vars:     Size  Location     Type
 18335 ;;  channel         1   35[COMRAM] const unsigned char 
 18336 ;;  cnt             2   36[COMRAM] unsigned int 
 18337 ;; Return value:  Size  Location     Type
 18338 ;;                  1    wreg      unsigned char 
 18339 ;; Registers used:
 18340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18341 ;; Tracked objects:
 18342 ;;		On entry : 0/0
 18343 ;;		On exit  : 0/0
 18344 ;;		Unchanged: 0/0
 18345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18347 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18349 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18350 ;;Total ram usage:        8 bytes
 18351 ;; Hardware stack levels used: 1
 18352 ;; Hardware stack levels required when called: 8
 18353 ;; This function calls:
 18354 ;;		_i2c_writeBytes_to
 18355 ;; This function is called by:
 18356 ;;		_nvm_write_eeprom_all
 18357 ;; This function uses a non-reentrant model
 18358 ;;
 18359                           
 18360                           	psect	text80
 18361  00C924                     __ptext80:
 18362                           	callstack 0
 18363  00C924                     _eeprom_writePage:
 18364                           	callstack 19
 18365                           
 18366                           ;incstack = 0
 18367                           ;eeprom_writePage@channel stored from wreg
 18368  00C924  6E24               	movwf	eeprom_writePage@channel^0,c
 18369                           
 18370                           ;eep24AA02.c: 16: if (len > 8) return 0;
 18371  00C926  0E08               	movlw	8
 18372  00C928  6422               	cpfsgt	eeprom_writePage@len^0,c
 18373  00C92A  D002               	goto	l31461
 18374  00C92C                     u39470:
 18375  00C92C  0E00               	movlw	0
 18376  00C92E  0012               	return	
 18377  00C930                     l31461:
 18378                           
 18379                           ;eep24AA02.c: 17: unsigned cnt = 10;
 18380  00C930  0E00               	movlw	0
 18381  00C932  6E26               	movwf	(eeprom_writePage@cnt+1)^0,c
 18382  00C934  0E0A               	movlw	10
 18383  00C936  6E25               	movwf	eeprom_writePage@cnt^0,c
 18384                           
 18385                           ;eep24AA02.c: 18: while (cnt--) {
 18386  00C938  D020               	goto	l31471
 18387  00C93A                     l31463:
 18388                           
 18389                           ;eep24AA02.c: 19: if (i2c_writeBytes_to(eeprom_address[channel], &mem_addr, 1, wrptr, le
      +                          n))
 18390  00C93A  0E1F               	movlw	low eeprom_writePage@mem_addr
 18391  00C93C  6E19               	movwf	i2c_writeBytes_to@wraddr^0,c
 18392  00C93E  0E01               	movlw	1
 18393  00C940  6E1A               	movwf	i2c_writeBytes_to@addrlen^0,c
 18394  00C942  C020  F01B         	movff	eeprom_writePage@wrptr,i2c_writeBytes_to@wrptr
 18395  00C946  C021  F01C         	movff	eeprom_writePage@wrptr+1,i2c_writeBytes_to@wrptr+1
 18396  00C94A  C022  F01D         	movff	eeprom_writePage@len,i2c_writeBytes_to@len
 18397  00C94E  0EF9               	movlw	low _eeprom_address
 18398  00C950  2424               	addwf	eeprom_writePage@channel^0,w,c
 18399  00C952  6ED9               	movwf	fsr2l,c
 18400  00C954  6ADA               	clrf	fsr2h,c
 18401  00C956  0E01               	movlw	high _eeprom_address
 18402  00C958  22DA               	addwfc	fsr2h,f,c
 18403  00C95A  50DF               	movf	indf2,w,c
 18404  00C95C  EC8C  F069         	call	_i2c_writeBytes_to
 18405  00C960  0900               	iorlw	0
 18406  00C962  B4D8               	btfsc	status,2,c
 18407  00C964  D002               	goto	l31469
 18408                           
 18409                           ;eep24AA02.c: 20: return 1;
 18410  00C966  0E01               	movlw	1
 18411  00C968  0012               	return	
 18412  00C96A                     l31469:
 18413                           
 18414                           ;eep24AA02.c: 21: _delay((unsigned long)((10)*(48000000/4000.0)));
 18415  00C96A  0E9C               	movlw	156
 18416  00C96C  6E23               	movwf	??_eeprom_writePage^0,c
 18417  00C96E  0ED7               	movlw	215
 18418  00C970                     u43837:
 18419  00C970  2EE8               	decfsz	wreg,f,c
 18420  00C972  D7FE               	bra	u43837
 18421  00C974  2E23               	decfsz	??_eeprom_writePage^0,f,c
 18422  00C976  D7FC               	bra	u43837
 18423  00C978  F000               	nop	
 18424  00C97A                     l31471:
 18425  00C97A  0625               	decf	eeprom_writePage@cnt^0,f,c
 18426  00C97C  A0D8               	btfss	status,0,c
 18427  00C97E  0626               	decf	(eeprom_writePage@cnt+1)^0,f,c
 18428  00C980  2825               	incf	eeprom_writePage@cnt^0,w,c
 18429  00C982  E1DB               	bnz	l31463
 18430  00C984  2826               	incf	(eeprom_writePage@cnt+1)^0,w,c
 18431  00C986  B4D8               	btfsc	status,2,c
 18432  00C988  D7D1               	goto	u39470
 18433  00C98A  D7D7               	goto	l31463
 18434  00C98C                     __end_of_eeprom_writePage:
 18435                           	callstack 0
 18436                           
 18437 ;; *************** function _i2c_writeBytes_to *****************
 18438 ;; Defined at:
 18439 ;;		line 73 in file "bsp/i2c.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;  address         1    wreg     const unsigned char 
 18442 ;;  wraddr          1   24[COMRAM] PTR const unsigned char 
 18443 ;;		 -> eeprom_writePage@mem_addr(1), ads1114_Comparator_SetUp@wbuff(1), ads1114_SetUp@wraddr(1), 
 18444 ;;  addrlen         1   25[COMRAM] const unsigned char 
 18445 ;;  wrptr           2   26[COMRAM] PTR const unsigned char 
 18446 ;;		 -> g_nvm.eeprm(124), g_nvm(154), ads1114_Comparator_SetUp@rbuff(2), ads1114_SetUp@buff(2), 
 18447 ;;  len             1   28[COMRAM] const unsigned char 
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;  address         1   29[COMRAM] const unsigned char 
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      unsigned char 
 18452 ;; Registers used:
 18453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18459 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18463 ;;Total ram usage:        6 bytes
 18464 ;; Hardware stack levels used: 1
 18465 ;; Hardware stack levels required when called: 7
 18466 ;; This function calls:
 18467 ;;		_I2C_Stop
 18468 ;;		_i2c_writeBytes
 18469 ;;		_i2c_writeData
 18470 ;; This function is called by:
 18471 ;;		_ads1114_SetUp
 18472 ;;		_eeprom_writePage
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	text81
 18477  00D318                     __ptext81:
 18478                           	callstack 0
 18479  00D318                     _i2c_writeBytes_to:
 18480                           	callstack 19
 18481                           
 18482                           ;incstack = 0
 18483                           ;i2c_writeBytes_to@address stored from wreg
 18484  00D318  6E1E               	movwf	i2c_writeBytes_to@address^0,c
 18485                           
 18486                           ;i2c.c: 75: if (i2c_writeBytes(address, wraddr, addrlen, 0) == 0) {
 18487  00D31A  C019  F015         	movff	i2c_writeBytes_to@wraddr,i2c_writeBytes@wrptr
 18488  00D31E  C01A  F016         	movff	i2c_writeBytes_to@addrlen,i2c_writeBytes@len
 18489  00D322  0E00               	movlw	0
 18490  00D324  6E17               	movwf	i2c_writeBytes@isStop^0,c
 18491  00D326  501E               	movf	i2c_writeBytes_to@address^0,w,c
 18492  00D328  EC7D  F06B         	call	_i2c_writeBytes
 18493  00D32C  0900               	iorlw	0
 18494  00D32E  A4D8               	btfss	status,2,c
 18495  00D330  D004               	goto	l31063
 18496                           
 18497                           ;i2c.c: 76: I2C_Stop();
 18498  00D332  EC22  F06F         	call	_I2C_Stop	;wreg free
 18499  00D336                     l31059:
 18500                           
 18501                           ;i2c.c: 77: return 0;
 18502  00D336  0E00               	movlw	0
 18503  00D338  0012               	return	
 18504  00D33A                     l31063:
 18505                           
 18506                           ;i2c.c: 78: };i2c.c: 80: if (i2c_writeData(wrptr, len, 1) == 0) {
 18507  00D33A  C01B  F010         	movff	i2c_writeBytes_to@wrptr,i2c_writeData@wrptr
 18508  00D33E  C01C  F011         	movff	i2c_writeBytes_to@wrptr+1,i2c_writeData@wrptr+1
 18509  00D342  C01D  F012         	movff	i2c_writeBytes_to@len,i2c_writeData@len
 18510  00D346  0E01               	movlw	1
 18511  00D348  6E13               	movwf	i2c_writeData@isStop^0,c
 18512  00D34A  ECAC  F069         	call	_i2c_writeData	;wreg free
 18513  00D34E  0900               	iorlw	0
 18514  00D350  B4D8               	btfsc	status,2,c
 18515  00D352  D7F1               	goto	l31059
 18516                           
 18517                           ;i2c.c: 82: };i2c.c: 84: return 1;
 18518  00D354  0E01               	movlw	1
 18519  00D356  0012               	return		;funcret
 18520  00D358                     __end_of_i2c_writeBytes_to:
 18521                           	callstack 0
 18522                           
 18523 ;; *************** function _i2c_writeBytes *****************
 18524 ;; Defined at:
 18525 ;;		line 57 in file "bsp/i2c.c"
 18526 ;; Parameters:    Size  Location     Type
 18527 ;;  address         1    wreg     const unsigned char 
 18528 ;;  wrptr           1   20[COMRAM] PTR const unsigned char 
 18529 ;;		 -> max7323_set_gpio@b(1), lmp91000_set_Mode@buff(2), lmp91000_set_Reference@buff(2), lmp91000_set_GainRLoad@buff(2)
      +, 
 18530 ;;		 -> lmp91000_unlock@buff(2), lmp91000_lock@buff(2), lmp91000_get_Modecn@wBuff(1), lmp91000_get_Refcn@wBuff(1), 
 18531 ;;		 -> lmp91000_get_Tiacn@wBuff(1), lmp91000_get_lock@wBuff(1), lmp91000_get_status@wBuff(1), eeprom_RandomRead@mem_add
      +r(1), 
 18532 ;;		 -> eeprom_writePage@mem_addr(1), ads1114_Comparator_SetUp@wbuff(1), ads1114_read@wbuff(1), ads1114_SetUp@wraddr(1),
      + 
 18533 ;;		 -> ads1114_read_ready@wbuff(1), 
 18534 ;;  len             1   21[COMRAM] const unsigned char 
 18535 ;;  isStop          1   22[COMRAM] unsigned char 
 18536 ;; Auto vars:     Size  Location     Type
 18537 ;;  address         1   23[COMRAM] const unsigned char 
 18538 ;; Return value:  Size  Location     Type
 18539 ;;                  1    wreg      unsigned char 
 18540 ;; Registers used:
 18541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18542 ;; Tracked objects:
 18543 ;;		On entry : 0/0
 18544 ;;		On exit  : 0/0
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18547 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18551 ;;Total ram usage:        4 bytes
 18552 ;; Hardware stack levels used: 1
 18553 ;; Hardware stack levels required when called: 6
 18554 ;; This function calls:
 18555 ;;		_I2C_Start
 18556 ;;		_I2C_Stop
 18557 ;;		_I2C_Write
 18558 ;;		_i2c_writeData
 18559 ;; This function is called by:
 18560 ;;		_ads1114_read
 18561 ;;		_i2c_writeBytes_to
 18562 ;;		_i2c_readBytes_from
 18563 ;;		_lmp91000_get_status
 18564 ;;		_lmp91000_unlock
 18565 ;;		_lmp91000_set_GainRLoad
 18566 ;;		_lmp91000_set_Reference
 18567 ;;		_lmp91000_set_Mode
 18568 ;;		_max7323_set_gpio
 18569 ;; This function uses a non-reentrant model
 18570 ;;
 18571                           
 18572                           	psect	text82
 18573  00D6FA                     __ptext82:
 18574                           	callstack 0
 18575  00D6FA                     _i2c_writeBytes:
 18576                           	callstack 19
 18577                           
 18578                           ;incstack = 0
 18579                           ;i2c_writeBytes@address stored from wreg
 18580  00D6FA  6E18               	movwf	i2c_writeBytes@address^0,c
 18581                           
 18582                           ;i2c.c: 59: I2C_Start();
 18583  00D6FC  EC2A  F06F         	call	_I2C_Start	;wreg free
 18584                           
 18585                           ;i2c.c: 61: if (I2C_Write(address | 0x00)) {
 18586  00D700  5018               	movf	i2c_writeBytes@address^0,w,c
 18587  00D702  EC13  F06E         	call	_I2C_Write
 18588  00D706  0900               	iorlw	0
 18589  00D708  B4D8               	btfsc	status,2,c
 18590  00D70A  D004               	goto	l30533
 18591                           
 18592                           ;i2c.c: 62: I2C_Stop();
 18593  00D70C  EC22  F06F         	call	_I2C_Stop	;wreg free
 18594  00D710                     l30529:
 18595                           
 18596                           ;i2c.c: 63: return 0;
 18597  00D710  0E00               	movlw	0
 18598  00D712  0012               	return	
 18599  00D714                     l30533:
 18600                           
 18601                           ;i2c.c: 64: };i2c.c: 66: if (i2c_writeData(wrptr, len, isStop) == 0) {
 18602  00D714  C015  F010         	movff	i2c_writeBytes@wrptr,i2c_writeData@wrptr
 18603  00D718  6A11               	clrf	(i2c_writeData@wrptr+1)^0,c
 18604  00D71A  C016  F012         	movff	i2c_writeBytes@len,i2c_writeData@len
 18605  00D71E  C017  F013         	movff	i2c_writeBytes@isStop,i2c_writeData@isStop
 18606  00D722  ECAC  F069         	call	_i2c_writeData	;wreg free
 18607  00D726  0900               	iorlw	0
 18608  00D728  B4D8               	btfsc	status,2,c
 18609  00D72A  D7F2               	goto	l30529
 18610                           
 18611                           ;i2c.c: 68: };i2c.c: 70: return 1;
 18612  00D72C  0E01               	movlw	1
 18613  00D72E  0012               	return		;funcret
 18614  00D730                     __end_of_i2c_writeBytes:
 18615                           	callstack 0
 18616                           
 18617 ;; *************** function _i2c_writeData *****************
 18618 ;; Defined at:
 18619 ;;		line 42 in file "bsp/i2c.c"
 18620 ;; Parameters:    Size  Location     Type
 18621 ;;  wrptr           2   15[COMRAM] PTR const unsigned char 
 18622 ;;		 -> g_nvm.eeprm(124), g_nvm(154), max7323_set_gpio@b(1), lmp91000_set_Mode@buff(2), 
 18623 ;;		 -> lmp91000_set_Reference@buff(2), lmp91000_set_GainRLoad@buff(2), lmp91000_unlock@buff(2), lmp91000_lock@buff(2), 
 18624 ;;		 -> lmp91000_get_Modecn@wBuff(1), lmp91000_get_Refcn@wBuff(1), lmp91000_get_Tiacn@wBuff(1), lmp91000_get_lock@wBuff(
      +1), 
 18625 ;;		 -> lmp91000_get_status@wBuff(1), eeprom_RandomRead@mem_addr(1), eeprom_writePage@mem_addr(1), ads1114_Comparator_Se
      +tUp@rbuff(2), 
 18626 ;;		 -> ads1114_Comparator_SetUp@wbuff(1), ads1114_read@wbuff(1), ads1114_SetUp@buff(2), ads1114_SetUp@wraddr(1), 
 18627 ;;		 -> ads1114_read_ready@wbuff(1), 
 18628 ;;  len             1   17[COMRAM] const unsigned char 
 18629 ;;  isStop          1   18[COMRAM] unsigned char 
 18630 ;; Auto vars:     Size  Location     Type
 18631 ;;  i               1   19[COMRAM] unsigned char 
 18632 ;; Return value:  Size  Location     Type
 18633 ;;                  1    wreg      unsigned char 
 18634 ;; Registers used:
 18635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18636 ;; Tracked objects:
 18637 ;;		On entry : 0/0
 18638 ;;		On exit  : 0/0
 18639 ;;		Unchanged: 0/0
 18640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18644 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18645 ;;Total ram usage:        5 bytes
 18646 ;; Hardware stack levels used: 1
 18647 ;; Hardware stack levels required when called: 5
 18648 ;; This function calls:
 18649 ;;		_I2C_Stop
 18650 ;;		_I2C_Write
 18651 ;; This function is called by:
 18652 ;;		_i2c_writeBytes
 18653 ;;		_i2c_writeBytes_to
 18654 ;; This function uses a non-reentrant model
 18655 ;;
 18656                           
 18657                           	psect	text83
 18658  00D358                     __ptext83:
 18659                           	callstack 0
 18660  00D358                     _i2c_writeData:
 18661                           	callstack 20
 18662                           
 18663                           ;i2c.c: 44: for(uint8_t i = 0 ; i < len ; i++)
 18664                           
 18665                           ;incstack = 0
 18666  00D358  0E00               	movlw	0
 18667  00D35A  6E14               	movwf	i2c_writeData@i^0,c
 18668  00D35C  5012               	movf	i2c_writeData@len^0,w,c
 18669  00D35E  B4D8               	btfsc	status,2,c
 18670  00D360  D015               	goto	u37970
 18671  00D362                     l30497:
 18672                           
 18673                           ;i2c.c: 45: {;i2c.c: 46: if(I2C_Write(wrptr[i])) {
 18674  00D362  5014               	movf	i2c_writeData@i^0,w,c
 18675  00D364  2410               	addwf	i2c_writeData@wrptr^0,w,c
 18676  00D366  6ED9               	movwf	fsr2l,c
 18677  00D368  0E00               	movlw	0
 18678  00D36A  2011               	addwfc	(i2c_writeData@wrptr+1)^0,w,c
 18679  00D36C  6EDA               	movwf	fsr2h,c
 18680  00D36E  50DF               	movf	indf2,w,c
 18681  00D370  EC13  F06E         	call	_I2C_Write
 18682  00D374  0900               	iorlw	0
 18683  00D376  B4D8               	btfsc	status,2,c
 18684  00D378  D004               	goto	l30505
 18685                           
 18686                           ;i2c.c: 47: I2C_Stop();
 18687  00D37A  EC22  F06F         	call	_I2C_Stop	;wreg free
 18688                           
 18689                           ;i2c.c: 48: return 0;
 18690  00D37E  0E00               	movlw	0
 18691  00D380  0012               	return	
 18692  00D382                     l30505:
 18693  00D382  2A14               	incf	i2c_writeData@i^0,f,c
 18694  00D384  5012               	movf	i2c_writeData@len^0,w,c
 18695  00D386  5C14               	subwf	i2c_writeData@i^0,w,c
 18696  00D388  A0D8               	btfss	status,0,c
 18697  00D38A  D7EB               	goto	l30497
 18698  00D38C                     u37970:
 18699                           
 18700                           ;i2c.c: 49: };i2c.c: 50: };i2c.c: 52: if (isStop) I2C_Stop();
 18701  00D38C  5013               	movf	i2c_writeData@isStop^0,w,c
 18702  00D38E  A4D8               	btfss	status,2,c
 18703  00D390  EC22  F06F         	call	_I2C_Stop	;wreg free
 18704                           
 18705                           ;i2c.c: 54: return 1;
 18706  00D394  0E01               	movlw	1
 18707  00D396  0012               	return		;funcret
 18708  00D398                     __end_of_i2c_writeData:
 18709                           	callstack 0
 18710                           
 18711 ;; *************** function _I2C_Write *****************
 18712 ;; Defined at:
 18713 ;;		line 152 in file "bsp/i2c.c"
 18714 ;; Parameters:    Size  Location     Type
 18715 ;;  I2cWriteData    1    wreg     unsigned char 
 18716 ;; Auto vars:     Size  Location     Type
 18717 ;;  I2cWriteData    1   14[COMRAM] unsigned char 
 18718 ;; Return value:  Size  Location     Type
 18719 ;;                  1    wreg      unsigned char 
 18720 ;; Registers used:
 18721 ;;		wreg
 18722 ;; Tracked objects:
 18723 ;;		On entry : 0/0
 18724 ;;		On exit  : 0/0
 18725 ;;		Unchanged: 0/0
 18726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18731 ;;Total ram usage:        1 bytes
 18732 ;; Hardware stack levels used: 1
 18733 ;; Hardware stack levels required when called: 4
 18734 ;; This function calls:
 18735 ;;		Nothing
 18736 ;; This function is called by:
 18737 ;;		_i2c_writeData
 18738 ;;		_i2c_writeBytes
 18739 ;;		_i2c_readBytes
 18740 ;; This function uses a non-reentrant model
 18741 ;;
 18742                           
 18743                           	psect	text84
 18744  00DC26                     __ptext84:
 18745                           	callstack 0
 18746  00DC26                     _I2C_Write:
 18747                           	callstack 20
 18748                           
 18749                           ;incstack = 0
 18750                           ;I2C_Write@I2cWriteData stored from wreg
 18751  00DC26  6E0F               	movwf	I2C_Write@I2cWriteData^0,c
 18752                           
 18753                           ;i2c.c: 154: PIR1bits.SSP1IF = 0;
 18754  00DC28  969E               	bcf	158,3,c	;volatile
 18755  00DC2A                     l183:
 18756  00DC2A  B0C7               	btfsc	199,0,c	;volatile
 18757  00DC2C  D7FE               	goto	l183
 18758                           
 18759                           ;i2c.c: 157: SSP1BUF = I2cWriteData;
 18760  00DC2E  C00F  FFC9         	movff	I2C_Write@I2cWriteData,4041	;volatile
 18761  00DC32                     l186:
 18762  00DC32  A69E               	btfss	158,3,c	;volatile
 18763  00DC34  D7FE               	goto	l186
 18764                           
 18765                           ;i2c.c: 160: PIR1bits.SSP1IF = 0;
 18766  00DC36  969E               	bcf	158,3,c	;volatile
 18767                           
 18768                           ;i2c.c: 162: return (SSP1CON2bits.ACKSTAT);
 18769  00DC38  ACC5               	btfss	197,6,c	;volatile
 18770  00DC3A  D002               	goto	u37920
 18771  00DC3C  0E01               	movlw	1
 18772  00DC3E  0012               	return	
 18773  00DC40                     u37920:
 18774  00DC40  0E00               	movlw	0
 18775  00DC42  0012               	return		;funcret
 18776  00DC44                     __end_of_I2C_Write:
 18777                           	callstack 0
 18778                           
 18779 ;; *************** function _I2C_Stop *****************
 18780 ;; Defined at:
 18781 ;;		line 130 in file "bsp/i2c.c"
 18782 ;; Parameters:    Size  Location     Type
 18783 ;;		None
 18784 ;; Auto vars:     Size  Location     Type
 18785 ;;		None
 18786 ;; Return value:  Size  Location     Type
 18787 ;;                  1    wreg      void 
 18788 ;; Registers used:
 18789 ;;		None
 18790 ;; Tracked objects:
 18791 ;;		On entry : 0/0
 18792 ;;		On exit  : 0/0
 18793 ;;		Unchanged: 0/0
 18794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18799 ;;Total ram usage:        0 bytes
 18800 ;; Hardware stack levels used: 1
 18801 ;; Hardware stack levels required when called: 4
 18802 ;; This function calls:
 18803 ;;		Nothing
 18804 ;; This function is called by:
 18805 ;;		_i2c_writeData
 18806 ;;		_i2c_writeBytes
 18807 ;;		_i2c_writeBytes_to
 18808 ;;		_i2c_readBytes
 18809 ;;		_i2c_readBytes_from
 18810 ;; This function uses a non-reentrant model
 18811 ;;
 18812                           
 18813                           	psect	text85
 18814  00DE44                     __ptext85:
 18815                           	callstack 0
 18816  00DE44                     _I2C_Stop:
 18817                           	callstack 20
 18818                           
 18819                           ;i2c.c: 132: PIR1bits.SSP1IF = 0;
 18820                           
 18821                           ;incstack = 0
 18822  00DE44  969E               	bcf	158,3,c	;volatile
 18823  00DE46                     l165:
 18824  00DE46  B0C7               	btfsc	199,0,c	;volatile
 18825  00DE48  D7FE               	goto	l165
 18826                           
 18827                           ;i2c.c: 135: SSP1CON2bits.PEN = 1;
 18828  00DE4A  84C5               	bsf	197,2,c	;volatile
 18829  00DE4C                     l168:
 18830  00DE4C  A69E               	btfss	158,3,c	;volatile
 18831  00DE4E  D7FE               	goto	l168
 18832                           
 18833                           ;i2c.c: 138: PIR1bits.SSP1IF = 0;
 18834  00DE50  969E               	bcf	158,3,c	;volatile
 18835  00DE52  0012               	return		;funcret
 18836  00DE54                     __end_of_I2C_Stop:
 18837                           	callstack 0
 18838                           
 18839 ;; *************** function _I2C_Start *****************
 18840 ;; Defined at:
 18841 ;;		line 119 in file "bsp/i2c.c"
 18842 ;; Parameters:    Size  Location     Type
 18843 ;;		None
 18844 ;; Auto vars:     Size  Location     Type
 18845 ;;		None
 18846 ;; Return value:  Size  Location     Type
 18847 ;;                  1    wreg      void 
 18848 ;; Registers used:
 18849 ;;		None
 18850 ;; Tracked objects:
 18851 ;;		On entry : 0/0
 18852 ;;		On exit  : 0/0
 18853 ;;		Unchanged: 0/0
 18854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18859 ;;Total ram usage:        0 bytes
 18860 ;; Hardware stack levels used: 1
 18861 ;; Hardware stack levels required when called: 4
 18862 ;; This function calls:
 18863 ;;		Nothing
 18864 ;; This function is called by:
 18865 ;;		_i2c_writeBytes
 18866 ;;		_i2c_readBytes
 18867 ;; This function uses a non-reentrant model
 18868 ;;
 18869                           
 18870                           	psect	text86
 18871  00DE54                     __ptext86:
 18872                           	callstack 0
 18873  00DE54                     _I2C_Start:
 18874                           	callstack 20
 18875                           
 18876                           ;i2c.c: 121: PIR1bits.SSP1IF = 0;
 18877                           
 18878                           ;incstack = 0
 18879  00DE54  969E               	bcf	158,3,c	;volatile
 18880  00DE56                     l156:
 18881  00DE56  B0C7               	btfsc	199,0,c	;volatile
 18882  00DE58  D7FE               	goto	l156
 18883                           
 18884                           ;i2c.c: 124: SSP1CON2bits.SEN = 1;
 18885  00DE5A  80C5               	bsf	197,0,c	;volatile
 18886  00DE5C                     l159:
 18887  00DE5C  A69E               	btfss	158,3,c	;volatile
 18888  00DE5E  D7FE               	goto	l159
 18889                           
 18890                           ;i2c.c: 127: PIR1bits.SSP1IF = 0;
 18891  00DE60  969E               	bcf	158,3,c	;volatile
 18892  00DE62  0012               	return		;funcret
 18893  00DE64                     __end_of_I2C_Start:
 18894                           	callstack 0
 18895                           
 18896 ;; *************** function _checksum *****************
 18897 ;; Defined at:
 18898 ;;		line 24 in file "nvm.c"
 18899 ;; Parameters:    Size  Location     Type
 18900 ;;  data            2   14[COMRAM] PTR const unsigned char 
 18901 ;;		 -> g_nvm.eeprm(124), g_nvm(154), 
 18902 ;;  length          2   16[COMRAM] unsigned int 
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;  crc             2   22[COMRAM] unsigned int 
 18905 ;;  i               2   19[COMRAM] unsigned int 
 18906 ;;  j               1   21[COMRAM] unsigned char 
 18907 ;; Return value:  Size  Location     Type
 18908 ;;                  2   14[COMRAM] unsigned int 
 18909 ;; Registers used:
 18910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18911 ;; Tracked objects:
 18912 ;;		On entry : 0/0
 18913 ;;		On exit  : 0/0
 18914 ;;		Unchanged: 0/0
 18915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18917 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18919 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18920 ;;Total ram usage:       10 bytes
 18921 ;; Hardware stack levels used: 1
 18922 ;; Hardware stack levels required when called: 4
 18923 ;; This function calls:
 18924 ;;		Nothing
 18925 ;; This function is called by:
 18926 ;;		_sensMeasure_task
 18927 ;;		_nvm_write_eeprom_all
 18928 ;; This function uses a non-reentrant model
 18929 ;;
 18930                           
 18931                           	psect	text87
 18932  00C4CC                     __ptext87:
 18933                           	callstack 0
 18934  00C4CC                     _checksum:
 18935                           	callstack 23
 18936                           
 18937                           ;nvm.c: 28: uint16_t crc = 0xFFFF;
 18938                           
 18939                           ;incstack = 0
 18940  00C4CC  6817               	setf	checksum@crc^0,c
 18941  00C4CE  6818               	setf	(checksum@crc+1)^0,c
 18942                           
 18943                           ;nvm.c: 29: uint16_t i;;nvm.c: 30: uint8_t j;;nvm.c: 32: if ( data == (0) ) return 0;
 18944  00C4D0  500F               	movf	checksum@data^0,w,c
 18945  00C4D2  1010               	iorwf	(checksum@data+1)^0,w,c
 18946  00C4D4  A4D8               	btfss	status,2,c
 18947  00C4D6  D005               	goto	l18431
 18948  00C4D8  0E00               	movlw	0
 18949  00C4DA  6E10               	movwf	(?_checksum+1)^0,c
 18950  00C4DC  0E00               	movlw	0
 18951  00C4DE  6E0F               	movwf	?_checksum^0,c
 18952  00C4E0  0012               	return	
 18953  00C4E2                     l18431:
 18954                           
 18955                           ;nvm.c: 34: for ( i = 0; i < length; i++ ) {
 18956  00C4E2  0E00               	movlw	0
 18957  00C4E4  6E15               	movwf	(checksum@i+1)^0,c
 18958  00C4E6  0E00               	movlw	0
 18959  00C4E8  6E14               	movwf	checksum@i^0,c
 18960  00C4EA  D01F               	goto	l18451
 18961  00C4EC                     l18433:
 18962                           
 18963                           ;nvm.c: 35: crc ^= (uint16_t) data[i];
 18964  00C4EC  5014               	movf	checksum@i^0,w,c
 18965  00C4EE  240F               	addwf	checksum@data^0,w,c
 18966  00C4F0  6ED9               	movwf	fsr2l,c
 18967  00C4F2  5015               	movf	(checksum@i+1)^0,w,c
 18968  00C4F4  2010               	addwfc	(checksum@data+1)^0,w,c
 18969  00C4F6  6EDA               	movwf	fsr2h,c
 18970  00C4F8  50DF               	movf	indf2,w,c
 18971  00C4FA  6E13               	movwf	??_checksum^0,c
 18972  00C4FC  5013               	movf	??_checksum^0,w,c
 18973  00C4FE  1A17               	xorwf	checksum@crc^0,f,c
 18974                           
 18975                           ;nvm.c: 37: for ( j = 8; j != 0; j-- ) {
 18976  00C500  0E08               	movlw	8
 18977  00C502  6E16               	movwf	checksum@j^0,c
 18978  00C504                     l1649:
 18979                           
 18980                           ;nvm.c: 40: if ( ( crc & 0x0001 ) != 0 ) {
 18981  00C504  A017               	btfss	checksum@crc^0,0,c
 18982  00C506  D008               	goto	l18445
 18983                           
 18984                           ;nvm.c: 41: crc >>= 1;
 18985  00C508  90D8               	bcf	status,0,c
 18986  00C50A  3218               	rrcf	(checksum@crc+1)^0,f,c
 18987  00C50C  3217               	rrcf	checksum@crc^0,f,c
 18988                           
 18989                           ;nvm.c: 42: crc ^= 0xA001;
 18990  00C50E  0E01               	movlw	1
 18991  00C510  1A17               	xorwf	checksum@crc^0,f,c
 18992  00C512  0EA0               	movlw	160
 18993  00C514  1A18               	xorwf	(checksum@crc+1)^0,f,c
 18994                           
 18995                           ;nvm.c: 43: }
 18996  00C516  D003               	goto	l1652
 18997  00C518                     l18445:
 18998                           
 18999                           ;nvm.c: 44: else;nvm.c: 45: crc >>= 1;
 19000  00C518  90D8               	bcf	status,0,c
 19001  00C51A  3218               	rrcf	(checksum@crc+1)^0,f,c
 19002  00C51C  3217               	rrcf	checksum@crc^0,f,c
 19003  00C51E                     l1652:
 19004  00C51E  0616               	decf	checksum@j^0,f,c
 19005  00C520  5016               	movf	checksum@j^0,w,c
 19006  00C522  A4D8               	btfss	status,2,c
 19007  00C524  D7EF               	goto	l1649
 19008  00C526  4A14               	infsnz	checksum@i^0,f,c
 19009  00C528  2A15               	incf	(checksum@i+1)^0,f,c
 19010  00C52A                     l18451:
 19011  00C52A  5011               	movf	checksum@length^0,w,c
 19012  00C52C  5C14               	subwf	checksum@i^0,w,c
 19013  00C52E  5012               	movf	(checksum@length+1)^0,w,c
 19014  00C530  5815               	subwfb	(checksum@i+1)^0,w,c
 19015  00C532  A0D8               	btfss	status,0,c
 19016  00C534  D7DB               	goto	l18433
 19017                           
 19018                           ;nvm.c: 46: };nvm.c: 47: };nvm.c: 49: return crc;
 19019  00C536  C017  F00F         	movff	checksum@crc,?_checksum
 19020  00C53A  C018  F010         	movff	checksum@crc+1,?_checksum+1
 19021  00C53E  0012               	return		;funcret
 19022  00C540                     __end_of_checksum:
 19023                           	callstack 0
 19024                           
 19025 ;; *************** function _ACCESS_SourceSet *****************
 19026 ;; Defined at:
 19027 ;;		line 34 in file "bsp/power.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;  set             1    wreg     unsigned char 
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;  set             1   15[COMRAM] unsigned char 
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  1    wreg      void 
 19034 ;; Registers used:
 19035 ;;		wreg, status,2, cstack
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19045 ;;Total ram usage:        2 bytes
 19046 ;; Hardware stack levels used: 1
 19047 ;; Hardware stack levels required when called: 4
 19048 ;; This function calls:
 19049 ;;		Nothing
 19050 ;; This function is called by:
 19051 ;;		_eeprom_update
 19052 ;;		_eeprom_update_all
 19053 ;;		_sensMeasure_task
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text88
 19058  00D5AE                     __ptext88:
 19059                           	callstack 0
 19060  00D5AE                     _ACCESS_SourceSet:
 19061                           	callstack 24
 19062                           
 19063                           ;incstack = 0
 19064                           ;ACCESS_SourceSet@set stored from wreg
 19065  00D5AE  6E10               	movwf	ACCESS_SourceSet@set^0,c
 19066                           
 19067                           ;power.c: 36: if (set) {
 19068  00D5B0  5010               	movf	ACCESS_SourceSet@set^0,w,c
 19069  00D5B2  B4D8               	btfsc	status,2,c
 19070  00D5B4  D00E               	goto	l292
 19071                           
 19072                           ;power.c: 37: TRISAbits.TRISA3 = 0;
 19073  00D5B6  9692               	bcf	146,3,c	;volatile
 19074                           
 19075                           ;power.c: 38: _delay((unsigned long)((50)*(48000000/4000000.0)));
 19076  00D5B8  0EC8               	movlw	200
 19077  00D5BA                     u43847:
 19078  00D5BA  2EE8               	decfsz	wreg,f,c
 19079  00D5BC  D7FE               	bra	u43847
 19080                           
 19081                           ;power.c: 39: LATAbits.LATA3 = 1;
 19082  00D5BE  8689               	bsf	137,3,c	;volatile
 19083                           
 19084                           ;power.c: 40: _delay((unsigned long)((10)*(48000000/4000.0)));
 19085  00D5C0  0E9C               	movlw	156
 19086  00D5C2  6E0F               	movwf	??_ACCESS_SourceSet^0,c
 19087  00D5C4  0ED7               	movlw	215
 19088  00D5C6                     u43857:
 19089  00D5C6  2EE8               	decfsz	wreg,f,c
 19090  00D5C8  D7FE               	bra	u43857
 19091  00D5CA  2E0F               	decfsz	??_ACCESS_SourceSet^0,f,c
 19092  00D5CC  D7FC               	bra	u43857
 19093  00D5CE  F000               	nop	
 19094                           
 19095                           ;power.c: 41: } else {
 19096  00D5D0  0012               	return	
 19097  00D5D2                     l292:
 19098                           
 19099                           ;power.c: 42: TRISAbits.TRISA3 = 0;
 19100  00D5D2  9692               	bcf	146,3,c	;volatile
 19101                           
 19102                           ;power.c: 43: _delay((unsigned long)((50)*(48000000/4000000.0)));
 19103  00D5D4  0EC8               	movlw	200
 19104  00D5D6                     u43867:
 19105  00D5D6  2EE8               	decfsz	wreg,f,c
 19106  00D5D8  D7FE               	bra	u43867
 19107                           
 19108                           ;power.c: 44: LATAbits.LATA3 = 0;
 19109  00D5DA  9689               	bcf	137,3,c	;volatile
 19110                           
 19111                           ;power.c: 45: TRISAbits.TRISA3 = 1;
 19112  00D5DC  8692               	bsf	146,3,c	;volatile
 19113                           
 19114                           ;power.c: 46: _delay((unsigned long)((50)*(48000000/4000000.0)));
 19115  00D5DE  0EC8               	movlw	200
 19116  00D5E0                     u43877:
 19117  00D5E0  2EE8               	decfsz	wreg,f,c
 19118  00D5E2  D7FE               	bra	u43877
 19119  00D5E4  0012               	return		;funcret
 19120  00D5E6                     __end_of_ACCESS_SourceSet:
 19121                           	callstack 0
 19122                           
 19123 ;; *************** function _ACCESS_SourceGet *****************
 19124 ;; Defined at:
 19125 ;;		line 50 in file "bsp/power.c"
 19126 ;; Parameters:    Size  Location     Type
 19127 ;;		None
 19128 ;; Auto vars:     Size  Location     Type
 19129 ;;		None
 19130 ;; Return value:  Size  Location     Type
 19131 ;;                  1    wreg      unsigned char 
 19132 ;; Registers used:
 19133 ;;		wreg
 19134 ;; Tracked objects:
 19135 ;;		On entry : 0/0
 19136 ;;		On exit  : 0/0
 19137 ;;		Unchanged: 0/0
 19138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19143 ;;Total ram usage:        0 bytes
 19144 ;; Hardware stack levels used: 1
 19145 ;; Hardware stack levels required when called: 4
 19146 ;; This function calls:
 19147 ;;		Nothing
 19148 ;; This function is called by:
 19149 ;;		_eeprom_update
 19150 ;;		_eeprom_update_all
 19151 ;;		_sensMeasure_task
 19152 ;; This function uses a non-reentrant model
 19153 ;;
 19154                           
 19155                           	psect	text89
 19156  00DE98                     __ptext89:
 19157                           	callstack 0
 19158  00DE98                     _ACCESS_SourceGet:
 19159                           	callstack 24
 19160                           
 19161                           ;power.c: 52: if (PORTAbits.RA3)
 19162                           
 19163                           ;incstack = 0
 19164  00DE98  A680               	btfss	128,3,c	;volatile
 19165  00DE9A  D002               	goto	l18813
 19166                           
 19167                           ;power.c: 53: return 1;
 19168  00DE9C  0E01               	movlw	1
 19169  00DE9E  0012               	return	
 19170  00DEA0                     l18813:
 19171                           
 19172                           ;power.c: 54: return 0;
 19173  00DEA0  0E00               	movlw	0
 19174  00DEA2  0012               	return		;funcret
 19175  00DEA4                     __end_of_ACCESS_SourceGet:
 19176                           	callstack 0
 19177                           
 19178 ;; *************** function __isdigit *****************
 19179 ;; Defined at:
 19180 ;;		line 53 in file "util/_string.c"
 19181 ;; Parameters:    Size  Location     Type
 19182 ;;  src             2   14[COMRAM] PTR const unsigned char 
 19183 ;;		 -> g_atcommand.apply_params(32), g_atcommand(242), 
 19184 ;;  n               2   16[COMRAM] int 
 19185 ;; Auto vars:     Size  Location     Type
 19186 ;;  ch              1   18[COMRAM] unsigned char 
 19187 ;; Return value:  Size  Location     Type
 19188 ;;                  1    wreg      unsigned char 
 19189 ;; Registers used:
 19190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19191 ;; Tracked objects:
 19192 ;;		On entry : 3F/0
 19193 ;;		On exit  : 3F/0
 19194 ;;		Unchanged: 3F/0
 19195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19199 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19200 ;;Total ram usage:        5 bytes
 19201 ;; Hardware stack levels used: 1
 19202 ;; Hardware stack levels required when called: 4
 19203 ;; This function calls:
 19204 ;;		Nothing
 19205 ;; This function is called by:
 19206 ;;		_update_command
 19207 ;; This function uses a non-reentrant model
 19208 ;;
 19209                           
 19210                           	psect	text90
 19211  00D86A                     __ptext90:
 19212                           	callstack 0
 19213  00D86A                     __isdigit:
 19214                           	callstack 24
 19215                           
 19216                           ; BSR set to: 0
 19217                           ;_string.c: 55: while (n--) {
 19218                           
 19219                           ;incstack = 0
 19220  00D86A  D00E               	goto	l20057
 19221  00D86C                     l20047:
 19222                           
 19223                           ; BSR set to: 0
 19224                           ;_string.c: 56: char ch = *src - '0';
 19225  00D86C  C00F  FFD9         	movff	__isdigit@src,fsr2l
 19226  00D870  C010  FFDA         	movff	__isdigit@src+1,fsr2h
 19227  00D874  50DF               	movf	indf2,w,c
 19228  00D876  0FD0               	addlw	208
 19229  00D878  6E13               	movwf	__isdigit@ch^0,c
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;_string.c: 57: if (!(ch >= 0 && ch <= 9))
 19233  00D87A  0E09               	movlw	9
 19234  00D87C  6413               	cpfsgt	__isdigit@ch^0,c
 19235  00D87E  D002               	goto	l20055
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;_string.c: 58: return 0;
 19239  00D880  0E00               	movlw	0
 19240  00D882  0012               	return	
 19241  00D884                     l20055:
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;_string.c: 59: src++;
 19245  00D884  4A0F               	infsnz	__isdigit@src^0,f,c
 19246  00D886  2A10               	incf	(__isdigit@src+1)^0,f,c
 19247  00D888                     l20057:
 19248                           
 19249                           ; BSR set to: 0
 19250  00D888  0611               	decf	__isdigit@n^0,f,c
 19251  00D88A  A0D8               	btfss	status,0,c
 19252  00D88C  0612               	decf	(__isdigit@n+1)^0,f,c
 19253  00D88E  2811               	incf	__isdigit@n^0,w,c
 19254  00D890  E1ED               	bnz	l20047
 19255  00D892  2812               	incf	(__isdigit@n+1)^0,w,c
 19256  00D894  A4D8               	btfss	status,2,c
 19257  00D896  D7EA               	goto	l20047
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;_string.c: 60: };_string.c: 61: return 1;
 19261  00D898  0E01               	movlw	1
 19262                           
 19263                           ; BSR set to: 0
 19264  00D89A  0012               	return		;funcret
 19265  00D89C                     __end_of__isdigit:
 19266                           	callstack 0
 19267                           
 19268 ;; *************** function __atoi *****************
 19269 ;; Defined at:
 19270 ;;		line 4 in file "util/_atoi.c"
 19271 ;; Parameters:    Size  Location     Type
 19272 ;;  str             2   26[COMRAM] PTR const unsigned char 
 19273 ;;		 -> g_atcommand.apply_params(32), g_atcommand(242), 
 19274 ;; Auto vars:     Size  Location     Type
 19275 ;;  ret             4   36[COMRAM] long 
 19276 ;;  p               2   40[COMRAM] PTR unsigned char 
 19277 ;;		 -> g_atcommand.apply_params(32), g_atcommand(242), 
 19278 ;;  sign            2   34[COMRAM] int 
 19279 ;; Return value:  Size  Location     Type
 19280 ;;                  4   26[COMRAM] long 
 19281 ;; Registers used:
 19282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19283 ;; Tracked objects:
 19284 ;;		On entry : 3F/0
 19285 ;;		On exit  : 0/0
 19286 ;;		Unchanged: 0/0
 19287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19289 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19290 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19291 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19292 ;;Total ram usage:       16 bytes
 19293 ;; Hardware stack levels used: 1
 19294 ;; Hardware stack levels required when called: 5
 19295 ;; This function calls:
 19296 ;;		___lmul
 19297 ;; This function is called by:
 19298 ;;		_update_command
 19299 ;; This function uses a non-reentrant model
 19300 ;;
 19301                           
 19302                           	psect	text91
 19303  00A016                     __ptext91:
 19304                           	callstack 0
 19305  00A016                     __atoi:
 19306                           	callstack 23
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;_atoi.c: 6: long ret = 0;
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;incstack = 0
 19313  00A016  0E00               	movlw	0
 19314  00A018  6E25               	movwf	__atoi@ret^0,c
 19315  00A01A  0E00               	movlw	0
 19316  00A01C  6E26               	movwf	(__atoi@ret+1)^0,c
 19317  00A01E  0E00               	movlw	0
 19318  00A020  6E27               	movwf	(__atoi@ret+2)^0,c
 19319  00A022  0E00               	movlw	0
 19320  00A024  6E28               	movwf	(__atoi@ret+3)^0,c
 19321                           
 19322                           ;_atoi.c: 7: int sign = 1;
 19323  00A026  0E00               	movlw	0
 19324  00A028  6E24               	movwf	(__atoi@sign+1)^0,c
 19325  00A02A  0E01               	movlw	1
 19326  00A02C  6E23               	movwf	__atoi@sign^0,c
 19327                           
 19328                           ; BSR set to: 0
 19329                           ;_atoi.c: 8: char* p = (char*)str;
 19330  00A02E  C01B  F029         	movff	__atoi@str,__atoi@p
 19331  00A032  C01C  F02A         	movff	__atoi@str+1,__atoi@p+1
 19332                           
 19333                           ;_atoi.c: 10: while (('-' == *p) || (*p == '+')) {
 19334  00A036  D00C               	goto	l20079
 19335  00A038                     l20073:
 19336                           
 19337                           ; BSR set to: 0
 19338                           ;_atoi.c: 11: if (*p == '-') sign = -1;
 19339  00A038  C029  FFD9         	movff	__atoi@p,fsr2l
 19340  00A03C  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 19341  00A040  0E2D               	movlw	45
 19342  00A042  18DE               	xorwf	postinc2,w,c
 19343  00A044  A4D8               	btfss	status,2,c
 19344  00A046  D002               	goto	l20077
 19345                           
 19346                           ; BSR set to: 0
 19347  00A048  6823               	setf	__atoi@sign^0,c
 19348  00A04A  6824               	setf	(__atoi@sign+1)^0,c
 19349  00A04C                     l20077:
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;_atoi.c: 12: p++;
 19353  00A04C  4A29               	infsnz	__atoi@p^0,f,c
 19354  00A04E  2A2A               	incf	(__atoi@p+1)^0,f,c
 19355  00A050                     l20079:
 19356                           
 19357                           ; BSR set to: 0
 19358  00A050  C029  FFD9         	movff	__atoi@p,fsr2l
 19359  00A054  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 19360  00A058  0E2D               	movlw	45
 19361  00A05A  18DE               	xorwf	postinc2,w,c
 19362  00A05C  B4D8               	btfsc	status,2,c
 19363  00A05E  D7EC               	goto	l20073
 19364                           
 19365                           ; BSR set to: 0
 19366  00A060  C029  FFD9         	movff	__atoi@p,fsr2l
 19367  00A064  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 19368  00A068  0E2B               	movlw	43
 19369  00A06A  18DE               	xorwf	postinc2,w,c
 19370  00A06C  A4D8               	btfss	status,2,c
 19371  00A06E  D030               	goto	l20087
 19372  00A070  D7E3               	goto	l20073
 19373  00A072                     l20083:
 19374                           
 19375                           ;_atoi.c: 16: ret = (ret * 10) + (*p - '0');
 19376  00A072  0ED0               	movlw	208
 19377  00A074  6E1F               	movwf	??__atoi^0,c
 19378  00A076  0EFF               	movlw	255
 19379  00A078  6E20               	movwf	(??__atoi+1)^0,c
 19380  00A07A  C029  FFD9         	movff	__atoi@p,fsr2l
 19381  00A07E  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 19382  00A082  50DF               	movf	indf2,w,c
 19383  00A084  6E21               	movwf	(??__atoi+2)^0,c
 19384  00A086  6A22               	clrf	(??__atoi+3)^0,c
 19385  00A088  501F               	movf	??__atoi^0,w,c
 19386  00A08A  2621               	addwf	(??__atoi+2)^0,f,c
 19387  00A08C  5020               	movf	(??__atoi+1)^0,w,c
 19388  00A08E  2222               	addwfc	(??__atoi+3)^0,f,c
 19389  00A090  C025  F00F         	movff	__atoi@ret,___lmul@multiplier
 19390  00A094  C026  F010         	movff	__atoi@ret+1,___lmul@multiplier+1
 19391  00A098  C027  F011         	movff	__atoi@ret+2,___lmul@multiplier+2
 19392  00A09C  C028  F012         	movff	__atoi@ret+3,___lmul@multiplier+3
 19393  00A0A0  0E0A               	movlw	10
 19394  00A0A2  6E13               	movwf	___lmul@multiplicand^0,c
 19395  00A0A4  0E00               	movlw	0
 19396  00A0A6  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 19397  00A0A8  0E00               	movlw	0
 19398  00A0AA  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 19399  00A0AC  0E00               	movlw	0
 19400  00A0AE  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 19401  00A0B0  EC69  F066         	call	___lmul	;wreg free
 19402  00A0B4  5021               	movf	(??__atoi+2)^0,w,c
 19403  00A0B6  240F               	addwf	?___lmul^0,w,c
 19404  00A0B8  6E25               	movwf	__atoi@ret^0,c
 19405  00A0BA  5022               	movf	(??__atoi+3)^0,w,c
 19406  00A0BC  2010               	addwfc	(?___lmul+1)^0,w,c
 19407  00A0BE  6E26               	movwf	(__atoi@ret+1)^0,c
 19408  00A0C0  0E00               	movlw	0
 19409  00A0C2  2011               	addwfc	(?___lmul+2)^0,w,c
 19410  00A0C4  6E27               	movwf	(__atoi@ret+2)^0,c
 19411  00A0C6  0E00               	movlw	0
 19412  00A0C8  2012               	addwfc	(?___lmul+3)^0,w,c
 19413  00A0CA  6E28               	movwf	(__atoi@ret+3)^0,c
 19414                           
 19415                           ;_atoi.c: 17: p++;
 19416  00A0CC  4A29               	infsnz	__atoi@p^0,f,c
 19417  00A0CE  2A2A               	incf	(__atoi@p+1)^0,f,c
 19418  00A0D0                     l20087:
 19419  00A0D0  C029  FFD9         	movff	__atoi@p,fsr2l
 19420  00A0D4  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 19421  00A0D8  0E2F               	movlw	47
 19422  00A0DA  64DF               	cpfsgt	indf2,c
 19423  00A0DC  D007               	goto	u23110
 19424  00A0DE  C029  FFD9         	movff	__atoi@p,fsr2l
 19425  00A0E2  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 19426  00A0E6  0E39               	movlw	57
 19427  00A0E8  64DF               	cpfsgt	indf2,c
 19428  00A0EA  D7C3               	goto	l20083
 19429  00A0EC                     u23110:
 19430                           
 19431                           ;_atoi.c: 18: };_atoi.c: 20: return (ret * sign);
 19432  00A0EC  C023  F00F         	movff	__atoi@sign,___lmul@multiplier
 19433  00A0F0  C024  F010         	movff	__atoi@sign+1,___lmul@multiplier+1
 19434  00A0F4  0E00               	movlw	0
 19435  00A0F6  BE10               	btfsc	(___lmul@multiplier+1)^0,7,c
 19436  00A0F8  0EFF               	movlw	-1
 19437  00A0FA  6E11               	movwf	(___lmul@multiplier+2)^0,c
 19438  00A0FC  6E12               	movwf	(___lmul@multiplier+3)^0,c
 19439  00A0FE  C025  F013         	movff	__atoi@ret,___lmul@multiplicand
 19440  00A102  C026  F014         	movff	__atoi@ret+1,___lmul@multiplicand+1
 19441  00A106  C027  F015         	movff	__atoi@ret+2,___lmul@multiplicand+2
 19442  00A10A  C028  F016         	movff	__atoi@ret+3,___lmul@multiplicand+3
 19443  00A10E  EC69  F066         	call	___lmul	;wreg free
 19444  00A112  C00F  F01B         	movff	?___lmul,?__atoi
 19445  00A116  C010  F01C         	movff	?___lmul+1,?__atoi+1
 19446  00A11A  C011  F01D         	movff	?___lmul+2,?__atoi+2
 19447  00A11E  C012  F01E         	movff	?___lmul+3,?__atoi+3
 19448  00A122  0012               	return		;funcret
 19449  00A124                     __end_of__atoi:
 19450                           	callstack 0
 19451                           
 19452 ;; *************** function __atof *****************
 19453 ;; Defined at:
 19454 ;;		line 4 in file "util/_atof.c"
 19455 ;; Parameters:    Size  Location     Type
 19456 ;;  str             2   29[BANK0 ] PTR const unsigned char 
 19457 ;;		 -> g_atcommand.manual_params(128), g_atcommand.apply_params(32), g_atcommand(242), 
 19458 ;; Auto vars:     Size  Location     Type
 19459 ;;  ret             4   41[BANK0 ] float 
 19460 ;;  p               2   47[BANK0 ] PTR unsigned char 
 19461 ;;		 -> g_atcommand.manual_params(128), g_atcommand.apply_params(32), g_atcommand(242), 
 19462 ;;  dotpos          2   45[BANK0 ] unsigned int 
 19463 ;;  cnt             2   39[BANK0 ] unsigned int 
 19464 ;;  sign            2   37[BANK0 ] int 
 19465 ;; Return value:  Size  Location     Type
 19466 ;;                  4   29[BANK0 ] float 
 19467 ;; Registers used:
 19468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19469 ;; Tracked objects:
 19470 ;;		On entry : 3F/0
 19471 ;;		On exit  : 3F/0
 19472 ;;		Unchanged: 0/0
 19473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19475 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19476 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19477 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19478 ;;Total ram usage:       20 bytes
 19479 ;; Hardware stack levels used: 1
 19480 ;; Hardware stack levels required when called: 5
 19481 ;; This function calls:
 19482 ;;		___fladd
 19483 ;;		___fldiv
 19484 ;;		___flmul
 19485 ;;		___xxtofl
 19486 ;; This function is called by:
 19487 ;;		_update_command
 19488 ;; This function uses a non-reentrant model
 19489 ;;
 19490                           
 19491                           	psect	text92
 19492  00898A                     __ptext92:
 19493                           	callstack 0
 19494  00898A                     __atof:
 19495                           	callstack 23
 19496                           
 19497                           ; BSR set to: 0
 19498                           ;_atof.c: 6: float ret = 0.0f;
 19499                           
 19500                           ;incstack = 0
 19501  00898A  0E00               	movlw	0
 19502  00898C  6F89               	movwf	__atof@ret& (0+255),b
 19503  00898E  0E00               	movlw	0
 19504  008990  6F8A               	movwf	(__atof@ret+1)& (0+255),b
 19505  008992  0E00               	movlw	0
 19506  008994  6F8B               	movwf	(__atof@ret+2)& (0+255),b
 19507  008996  0E00               	movlw	0
 19508  008998  6F8C               	movwf	(__atof@ret+3)& (0+255),b
 19509                           
 19510                           ;_atof.c: 7: int sign = 1;
 19511  00899A  0E00               	movlw	0
 19512  00899C  6F86               	movwf	(__atof@sign+1)& (0+255),b
 19513  00899E  0E01               	movlw	1
 19514  0089A0  6F85               	movwf	__atof@sign& (0+255),b
 19515                           
 19516                           ; BSR set to: 0
 19517                           ;_atof.c: 8: char* p = (char*)str;
 19518  0089A2  C07D  F08F         	movff	__atof@str,__atof@p
 19519  0089A6  C07E  F090         	movff	__atof@str+1,__atof@p+1
 19520                           
 19521                           ; BSR set to: 0
 19522                           ;_atof.c: 9: unsigned dotpos = 0;
 19523  0089AA  0E00               	movlw	0
 19524  0089AC  6F8E               	movwf	(__atof@dotpos+1)& (0+255),b
 19525  0089AE  0E00               	movlw	0
 19526  0089B0  6F8D               	movwf	__atof@dotpos& (0+255),b
 19527                           
 19528                           ; BSR set to: 0
 19529                           ;_atof.c: 10: unsigned cnt = 0;
 19530  0089B2  0E00               	movlw	0
 19531  0089B4  6F88               	movwf	(__atof@cnt+1)& (0+255),b
 19532  0089B6  0E00               	movlw	0
 19533  0089B8  6F87               	movwf	__atof@cnt& (0+255),b
 19534                           
 19535                           ;_atof.c: 12: while (('-' == *p) || (*p == '+')) {
 19536  0089BA  D00E               	goto	l32513
 19537  0089BC                     l32507:
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;_atof.c: 13: if (*p == '-') sign = -1;
 19541  0089BC  C08F  FFD9         	movff	__atof@p,fsr2l
 19542  0089C0  C090  FFDA         	movff	__atof@p+1,fsr2h
 19543  0089C4  0E2D               	movlw	45
 19544  0089C6  18DE               	xorwf	postinc2,w,c
 19545  0089C8  A4D8               	btfss	status,2,c
 19546  0089CA  D002               	goto	l32511
 19547                           
 19548                           ; BSR set to: 0
 19549  0089CC  6985               	setf	__atof@sign& (0+255),b
 19550  0089CE  6986               	setf	(__atof@sign+1)& (0+255),b
 19551  0089D0                     l32511:
 19552                           
 19553                           ; BSR set to: 0
 19554                           ;_atof.c: 14: p++; cnt++;
 19555  0089D0  4B8F               	infsnz	__atof@p& (0+255),f,b
 19556  0089D2  2B90               	incf	(__atof@p+1)& (0+255),f,b
 19557  0089D4  4B87               	infsnz	__atof@cnt& (0+255),f,b
 19558  0089D6  2B88               	incf	(__atof@cnt+1)& (0+255),f,b
 19559  0089D8                     l32513:
 19560                           
 19561                           ; BSR set to: 0
 19562  0089D8  C08F  FFD9         	movff	__atof@p,fsr2l
 19563  0089DC  C090  FFDA         	movff	__atof@p+1,fsr2h
 19564  0089E0  0E2D               	movlw	45
 19565  0089E2  18DE               	xorwf	postinc2,w,c
 19566  0089E4  B4D8               	btfsc	status,2,c
 19567  0089E6  D7EA               	goto	l32507
 19568                           
 19569                           ; BSR set to: 0
 19570  0089E8  C08F  FFD9         	movff	__atof@p,fsr2l
 19571  0089EC  C090  FFDA         	movff	__atof@p+1,fsr2h
 19572  0089F0  0E2B               	movlw	43
 19573  0089F2  18DE               	xorwf	postinc2,w,c
 19574  0089F4  A4D8               	btfss	status,2,c
 19575  0089F6  D057               	goto	l32527
 19576  0089F8  D7E1               	goto	l32507
 19577  0089FA                     l32517:
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;_atof.c: 18: if (*p == '.') {
 19581  0089FA  C08F  FFD9         	movff	__atof@p,fsr2l
 19582  0089FE  C090  FFDA         	movff	__atof@p+1,fsr2h
 19583  008A02  0E2E               	movlw	46
 19584  008A04  18DE               	xorwf	postinc2,w,c
 19585  008A06  A4D8               	btfss	status,2,c
 19586  008A08  D005               	goto	l32521
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;_atof.c: 19: dotpos = cnt;
 19590  008A0A  C087  F08D         	movff	__atof@cnt,__atof@dotpos
 19591  008A0E  C088  F08E         	movff	__atof@cnt+1,__atof@dotpos+1
 19592                           
 19593                           ;_atof.c: 20: } else {
 19594  008A12  D044               	goto	l32523
 19595  008A14                     l32521:
 19596                           
 19597                           ; BSR set to: 0
 19598                           ;_atof.c: 21: ret = (ret * 10.0f) + (*p - '0');
 19599  008A14  0E00               	movlw	0
 19600  008A16  6E3C               	movwf	___flmul@a^0,c
 19601  008A18  0E00               	movlw	0
 19602  008A1A  6E3D               	movwf	(___flmul@a+1)^0,c
 19603  008A1C  0E20               	movlw	32
 19604  008A1E  6E3E               	movwf	(___flmul@a+2)^0,c
 19605  008A20  0E41               	movlw	65
 19606  008A22  6E3F               	movwf	(___flmul@a+3)^0,c
 19607  008A24  C089  F038         	movff	__atof@ret,___flmul@b
 19608  008A28  C08A  F039         	movff	__atof@ret+1,___flmul@b+1
 19609  008A2C  C08B  F03A         	movff	__atof@ret+2,___flmul@b+2
 19610  008A30  C08C  F03B         	movff	__atof@ret+3,___flmul@b+3
 19611  008A34  EC9F  F02E         	call	___flmul	;wreg free
 19612  008A38  C038  F028         	movff	?___flmul,___fladd@b
 19613  008A3C  C039  F029         	movff	?___flmul+1,___fladd@b+1
 19614  008A40  C03A  F02A         	movff	?___flmul+2,___fladd@b+2
 19615  008A44  C03B  F02B         	movff	?___flmul+3,___fladd@b+3
 19616  008A48  0ED0               	movlw	208
 19617  008A4A  6F81               	movwf	??__atof& (0+255),b
 19618  008A4C  0EFF               	movlw	255
 19619  008A4E  6F82               	movwf	(??__atof+1)& (0+255),b
 19620  008A50  C08F  FFD9         	movff	__atof@p,fsr2l
 19621  008A54  C090  FFDA         	movff	__atof@p+1,fsr2h
 19622  008A58  50DF               	movf	indf2,w,c
 19623  008A5A  6F83               	movwf	(??__atof+2)& (0+255),b
 19624  008A5C  6B84               	clrf	(??__atof+3)& (0+255),b
 19625  008A5E  5181               	movf	??__atof& (0+255),w,b
 19626  008A60  2783               	addwf	(??__atof+2)& (0+255),f,b
 19627  008A62  5182               	movf	(??__atof+1)& (0+255),w,b
 19628  008A64  2384               	addwfc	(??__atof+3)& (0+255),f,b
 19629  008A66  C083  F00F         	movff	??__atof+2,___xxtofl@val
 19630  008A6A  C084  F010         	movff	??__atof+3,___xxtofl@val+1
 19631  008A6E  6A11               	clrf	(___xxtofl@val+2)^0,c
 19632  008A70  6A12               	clrf	(___xxtofl@val+3)^0,c
 19633  008A72  0E00               	movlw	0
 19634  008A74  EC4B  F04B         	call	___xxtofl
 19635  008A78  C00F  F02C         	movff	?___xxtofl,___fladd@a
 19636  008A7C  C010  F02D         	movff	?___xxtofl+1,___fladd@a+1
 19637  008A80  C011  F02E         	movff	?___xxtofl+2,___fladd@a+2
 19638  008A84  C012  F02F         	movff	?___xxtofl+3,___fladd@a+3
 19639  008A88  ECBF  F031         	call	___fladd	;wreg free
 19640  008A8C  C028  F089         	movff	?___fladd,__atof@ret
 19641  008A90  C029  F08A         	movff	?___fladd+1,__atof@ret+1
 19642  008A94  C02A  F08B         	movff	?___fladd+2,__atof@ret+2
 19643  008A98  C02B  F08C         	movff	?___fladd+3,__atof@ret+3
 19644  008A9C                     l32523:
 19645                           
 19646                           ;_atof.c: 22: };_atof.c: 23: p++; cnt++;
 19647  008A9C  0100               	movlb	0	; () banked
 19648  008A9E  4B8F               	infsnz	__atof@p& (0+255),f,b
 19649  008AA0  2B90               	incf	(__atof@p+1)& (0+255),f,b
 19650                           
 19651                           ; BSR set to: 0
 19652  008AA2  4B87               	infsnz	__atof@cnt& (0+255),f,b
 19653  008AA4  2B88               	incf	(__atof@cnt+1)& (0+255),f,b
 19654  008AA6                     l32527:
 19655                           
 19656                           ; BSR set to: 0
 19657  008AA6  C08F  FFD9         	movff	__atof@p,fsr2l
 19658  008AAA  C090  FFDA         	movff	__atof@p+1,fsr2h
 19659  008AAE  0E2F               	movlw	47
 19660  008AB0  64DF               	cpfsgt	indf2,c
 19661  008AB2  D007               	goto	u41010
 19662                           
 19663                           ; BSR set to: 0
 19664  008AB4  C08F  FFD9         	movff	__atof@p,fsr2l
 19665  008AB8  C090  FFDA         	movff	__atof@p+1,fsr2h
 19666  008ABC  0E39               	movlw	57
 19667  008ABE  64DF               	cpfsgt	indf2,c
 19668  008AC0  D79C               	goto	l32517
 19669  008AC2                     u41010:
 19670                           
 19671                           ; BSR set to: 0
 19672  008AC2  C08F  FFD9         	movff	__atof@p,fsr2l
 19673  008AC6  C090  FFDA         	movff	__atof@p+1,fsr2h
 19674  008ACA  0E2E               	movlw	46
 19675  008ACC  18DE               	xorwf	postinc2,w,c
 19676  008ACE  B4D8               	btfsc	status,2,c
 19677  008AD0  D794               	goto	l32517
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;_atof.c: 24: };_atof.c: 26: if (dotpos > 0) {
 19681  008AD2  518D               	movf	__atof@dotpos& (0+255),w,b
 19682  008AD4  118E               	iorwf	(__atof@dotpos+1)& (0+255),w,b
 19683  008AD6  B4D8               	btfsc	status,2,c
 19684  008AD8  D030               	goto	u41040
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;_atof.c: 27: dotpos = cnt - dotpos - 1;
 19688  008ADA  518D               	movf	__atof@dotpos& (0+255),w,b
 19689  008ADC  5D87               	subwf	__atof@cnt& (0+255),w,b
 19690  008ADE  6F81               	movwf	??__atof& (0+255),b
 19691  008AE0  518E               	movf	(__atof@dotpos+1)& (0+255),w,b
 19692  008AE2  5988               	subwfb	(__atof@cnt+1)& (0+255),w,b
 19693  008AE4  6F82               	movwf	(??__atof+1)& (0+255),b
 19694  008AE6  0EFF               	movlw	255
 19695  008AE8  2581               	addwf	??__atof& (0+255),w,b
 19696  008AEA  6F8D               	movwf	__atof@dotpos& (0+255),b
 19697  008AEC  0EFF               	movlw	255
 19698  008AEE  2182               	addwfc	(??__atof+1)& (0+255),w,b
 19699  008AF0  6F8E               	movwf	(__atof@dotpos+1)& (0+255),b
 19700                           
 19701                           ;_atof.c: 28: while (dotpos--) ret /= 10.0f;
 19702  008AF2  D01A               	goto	l32539
 19703  008AF4                     l32537:
 19704                           
 19705                           ; BSR set to: 0
 19706  008AF4  C089  F00F         	movff	__atof@ret,___fldiv@b
 19707  008AF8  C08A  F010         	movff	__atof@ret+1,___fldiv@b+1
 19708  008AFC  C08B  F011         	movff	__atof@ret+2,___fldiv@b+2
 19709  008B00  C08C  F012         	movff	__atof@ret+3,___fldiv@b+3
 19710  008B04  0E00               	movlw	0
 19711  008B06  6E13               	movwf	___fldiv@a^0,c
 19712  008B08  0E00               	movlw	0
 19713  008B0A  6E14               	movwf	(___fldiv@a+1)^0,c
 19714  008B0C  0E20               	movlw	32
 19715  008B0E  6E15               	movwf	(___fldiv@a+2)^0,c
 19716  008B10  0E41               	movlw	65
 19717  008B12  6E16               	movwf	(___fldiv@a+3)^0,c
 19718  008B14  ECB0  F03B         	call	___fldiv	;wreg free
 19719  008B18  C00F  F089         	movff	?___fldiv,__atof@ret
 19720  008B1C  C010  F08A         	movff	?___fldiv+1,__atof@ret+1
 19721  008B20  C011  F08B         	movff	?___fldiv+2,__atof@ret+2
 19722  008B24  C012  F08C         	movff	?___fldiv+3,__atof@ret+3
 19723  008B28                     l32539:
 19724  008B28  0100               	movlb	0	; () banked
 19725  008B2A  078D               	decf	__atof@dotpos& (0+255),f,b
 19726  008B2C  A0D8               	btfss	status,0,c
 19727  008B2E  078E               	decf	(__atof@dotpos+1)& (0+255),f,b
 19728  008B30  298D               	incf	__atof@dotpos& (0+255),w,b
 19729  008B32  E1E0               	bnz	l32537
 19730  008B34  298E               	incf	(__atof@dotpos+1)& (0+255),w,b
 19731  008B36  A4D8               	btfss	status,2,c
 19732  008B38  D7DD               	goto	l32537
 19733  008B3A                     u41040:
 19734                           
 19735                           ; BSR set to: 0
 19736                           ;_atof.c: 29: };_atof.c: 31: return (ret * sign);
 19737  008B3A  C085  F00F         	movff	__atof@sign,___xxtofl@val
 19738  008B3E  C086  F010         	movff	__atof@sign+1,___xxtofl@val+1
 19739  008B42  0E00               	movlw	0
 19740  008B44  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
 19741  008B46  0EFF               	movlw	-1
 19742  008B48  6E11               	movwf	(___xxtofl@val+2)^0,c
 19743  008B4A  6E12               	movwf	(___xxtofl@val+3)^0,c
 19744  008B4C  0E01               	movlw	1
 19745  008B4E  EC4B  F04B         	call	___xxtofl
 19746  008B52  C00F  F038         	movff	?___xxtofl,___flmul@b
 19747  008B56  C010  F039         	movff	?___xxtofl+1,___flmul@b+1
 19748  008B5A  C011  F03A         	movff	?___xxtofl+2,___flmul@b+2
 19749  008B5E  C012  F03B         	movff	?___xxtofl+3,___flmul@b+3
 19750  008B62  C089  F03C         	movff	__atof@ret,___flmul@a
 19751  008B66  C08A  F03D         	movff	__atof@ret+1,___flmul@a+1
 19752  008B6A  C08B  F03E         	movff	__atof@ret+2,___flmul@a+2
 19753  008B6E  C08C  F03F         	movff	__atof@ret+3,___flmul@a+3
 19754  008B72  EC9F  F02E         	call	___flmul	;wreg free
 19755  008B76  C038  F07D         	movff	?___flmul,?__atof
 19756  008B7A  C039  F07E         	movff	?___flmul+1,?__atof+1
 19757  008B7E  C03A  F07F         	movff	?___flmul+2,?__atof+2
 19758  008B82  C03B  F080         	movff	?___flmul+3,?__atof+3
 19759                           
 19760                           ; BSR set to: 0
 19761  008B86  0012               	return		;funcret
 19762  008B88                     __end_of__atof:
 19763                           	callstack 0
 19764                           
 19765 ;; *************** function ___fldiv *****************
 19766 ;; Defined at:
 19767 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
 19768 ;; Parameters:    Size  Location     Type
 19769 ;;  b               4   14[COMRAM] float 
 19770 ;;  a               4   18[COMRAM] float 
 19771 ;; Auto vars:     Size  Location     Type
 19772 ;;  grs             4   33[COMRAM] unsigned long 
 19773 ;;  rem             4   26[COMRAM] unsigned long 
 19774 ;;  new_exp         2   31[COMRAM] int 
 19775 ;;  aexp            1   38[COMRAM] unsigned char 
 19776 ;;  bexp            1   37[COMRAM] unsigned char 
 19777 ;;  sign            1   30[COMRAM] unsigned char 
 19778 ;; Return value:  Size  Location     Type
 19779 ;;                  4   14[COMRAM] unsigned char 
 19780 ;; Registers used:
 19781 ;;		wreg, status,2, status,0
 19782 ;; Tracked objects:
 19783 ;;		On entry : 0/0
 19784 ;;		On exit  : 0/0
 19785 ;;		Unchanged: 0/0
 19786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19787 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19788 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19790 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19791 ;;Total ram usage:       25 bytes
 19792 ;; Hardware stack levels used: 1
 19793 ;; Hardware stack levels required when called: 4
 19794 ;; This function calls:
 19795 ;;		Nothing
 19796 ;; This function is called by:
 19797 ;;		_update_command
 19798 ;;		_gasSensor_calib
 19799 ;;		_gasSensor_temperature
 19800 ;;		_Kalman_updateEstimate
 19801 ;;		__atof
 19802 ;; This function uses a non-reentrant model
 19803 ;;
 19804                           
 19805                           	psect	text93
 19806  007760                     __ptext93:
 19807                           	callstack 0
 19808  007760                     ___fldiv:
 19809                           	callstack 23
 19810                           
 19811                           ; BSR set to: 0
 19812                           ;incstack = 0
 19813  007760  5012               	movf	(___fldiv@b+3)^0,w,c
 19814  007762  0B80               	andlw	128
 19815  007764  6E1F               	movwf	___fldiv@sign^0,c
 19816  007766  5012               	movf	(___fldiv@b+3)^0,w,c
 19817  007768  2412               	addwf	(___fldiv@b+3)^0,w,c
 19818  00776A  6E26               	movwf	___fldiv@bexp^0,c
 19819  00776C  BE11               	btfsc	(___fldiv@b+2)^0,7,c
 19820  00776E  8026               	bsf	___fldiv@bexp^0,0,c
 19821  007770  5026               	movf	___fldiv@bexp^0,w,c
 19822  007772  B4D8               	btfsc	status,2,c
 19823  007774  D00D               	goto	l32211
 19824  007776  2826               	incf	___fldiv@bexp^0,w,c
 19825  007778  A4D8               	btfss	status,2,c
 19826  00777A  D008               	goto	l32207
 19827  00777C  0E00               	movlw	0
 19828  00777E  6E0F               	movwf	___fldiv@b^0,c
 19829  007780  0E00               	movlw	0
 19830  007782  6E10               	movwf	(___fldiv@b+1)^0,c
 19831  007784  0E00               	movlw	0
 19832  007786  6E11               	movwf	(___fldiv@b+2)^0,c
 19833  007788  0E00               	movlw	0
 19834  00778A  6E12               	movwf	(___fldiv@b+3)^0,c
 19835  00778C                     l32207:
 19836  00778C  8E11               	bsf	(___fldiv@b+2)^0,7,c
 19837  00778E  D006               	goto	L38
 19838  007790                     l32211:
 19839  007790  0E00               	movlw	0
 19840  007792  6E0F               	movwf	___fldiv@b^0,c
 19841  007794  0E00               	movlw	0
 19842  007796  6E10               	movwf	(___fldiv@b+1)^0,c
 19843  007798  0E00               	movlw	0
 19844  00779A  6E11               	movwf	(___fldiv@b+2)^0,c
 19845  00779C                     L38:
 19846  00779C  0E00               	movlw	0
 19847  00779E  6E12               	movwf	(___fldiv@b+3)^0,c
 19848  0077A0  5016               	movf	(___fldiv@a+3)^0,w,c
 19849  0077A2  0B80               	andlw	128
 19850  0077A4  1A1F               	xorwf	___fldiv@sign^0,f,c
 19851  0077A6  5016               	movf	(___fldiv@a+3)^0,w,c
 19852  0077A8  2416               	addwf	(___fldiv@a+3)^0,w,c
 19853  0077AA  6E27               	movwf	___fldiv@aexp^0,c
 19854  0077AC  BE15               	btfsc	(___fldiv@a+2)^0,7,c
 19855  0077AE  8027               	bsf	___fldiv@aexp^0,0,c
 19856  0077B0  5027               	movf	___fldiv@aexp^0,w,c
 19857  0077B2  B4D8               	btfsc	status,2,c
 19858  0077B4  D00D               	goto	l32231
 19859  0077B6  2827               	incf	___fldiv@aexp^0,w,c
 19860  0077B8  A4D8               	btfss	status,2,c
 19861  0077BA  D008               	goto	l32227
 19862  0077BC  0E00               	movlw	0
 19863  0077BE  6E13               	movwf	___fldiv@a^0,c
 19864  0077C0  0E00               	movlw	0
 19865  0077C2  6E14               	movwf	(___fldiv@a+1)^0,c
 19866  0077C4  0E00               	movlw	0
 19867  0077C6  6E15               	movwf	(___fldiv@a+2)^0,c
 19868  0077C8  0E00               	movlw	0
 19869  0077CA  6E16               	movwf	(___fldiv@a+3)^0,c
 19870  0077CC                     l32227:
 19871  0077CC  8E15               	bsf	(___fldiv@a+2)^0,7,c
 19872  0077CE  D006               	goto	L39
 19873  0077D0                     l32231:
 19874  0077D0  0E00               	movlw	0
 19875  0077D2  6E13               	movwf	___fldiv@a^0,c
 19876  0077D4  0E00               	movlw	0
 19877  0077D6  6E14               	movwf	(___fldiv@a+1)^0,c
 19878  0077D8  0E00               	movlw	0
 19879  0077DA  6E15               	movwf	(___fldiv@a+2)^0,c
 19880  0077DC                     L39:
 19881  0077DC  0E00               	movlw	0
 19882  0077DE  6E16               	movwf	(___fldiv@a+3)^0,c
 19883  0077E0  5013               	movf	___fldiv@a^0,w,c
 19884  0077E2  1014               	iorwf	(___fldiv@a+1)^0,w,c
 19885  0077E4  1015               	iorwf	(___fldiv@a+2)^0,w,c
 19886  0077E6  1016               	iorwf	(___fldiv@a+3)^0,w,c
 19887  0077E8  A4D8               	btfss	status,2,c
 19888  0077EA  D017               	goto	l32245
 19889  0077EC  0E00               	movlw	0
 19890  0077EE  6E0F               	movwf	___fldiv@b^0,c
 19891  0077F0  0E00               	movlw	0
 19892  0077F2  6E10               	movwf	(___fldiv@b+1)^0,c
 19893  0077F4  0E00               	movlw	0
 19894  0077F6  6E11               	movwf	(___fldiv@b+2)^0,c
 19895  0077F8  0E00               	movlw	0
 19896  0077FA  6E12               	movwf	(___fldiv@b+3)^0,c
 19897  0077FC  0E80               	movlw	128
 19898  0077FE  1211               	iorwf	(___fldiv@b+2)^0,f,c
 19899  007800  0E7F               	movlw	127
 19900  007802  1212               	iorwf	(___fldiv@b+3)^0,f,c
 19901  007804                     l32239:
 19902  007804  501F               	movf	___fldiv@sign^0,w,c
 19903  007806  1212               	iorwf	(___fldiv@b+3)^0,f,c
 19904  007808  C00F  F00F         	movff	___fldiv@b,?___fldiv
 19905  00780C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 19906  007810  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 19907  007814  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 19908  007818  0012               	return	
 19909  00781A                     l32245:
 19910  00781A  5026               	movf	___fldiv@bexp^0,w,c
 19911  00781C  A4D8               	btfss	status,2,c
 19912  00781E  D009               	goto	l32253
 19913  007820  0E00               	movlw	0
 19914  007822  6E0F               	movwf	?___fldiv^0,c
 19915  007824  0E00               	movlw	0
 19916  007826  6E10               	movwf	(?___fldiv+1)^0,c
 19917  007828  0E00               	movlw	0
 19918  00782A  6E11               	movwf	(?___fldiv+2)^0,c
 19919  00782C  0E00               	movlw	0
 19920  00782E  6E12               	movwf	(?___fldiv+3)^0,c
 19921  007830  0012               	return	
 19922  007832                     l32253:
 19923  007832  5027               	movf	___fldiv@aexp^0,w,c
 19924  007834  C026  F017         	movff	___fldiv@bexp,??___fldiv
 19925  007838  6A18               	clrf	(??___fldiv+1)^0,c
 19926  00783A  5E17               	subwf	??___fldiv^0,f,c
 19927  00783C  0E00               	movlw	0
 19928  00783E  5A18               	subwfb	(??___fldiv+1)^0,f,c
 19929  007840  0E7F               	movlw	127
 19930  007842  2417               	addwf	??___fldiv^0,w,c
 19931  007844  6E20               	movwf	___fldiv@new_exp^0,c
 19932  007846  0E00               	movlw	0
 19933  007848  2018               	addwfc	(??___fldiv+1)^0,w,c
 19934  00784A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 19935  00784C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 19936  007850  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 19937  007854  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 19938  007858  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 19939  00785C  0E00               	movlw	0
 19940  00785E  6E0F               	movwf	___fldiv@b^0,c
 19941  007860  0E00               	movlw	0
 19942  007862  6E10               	movwf	(___fldiv@b+1)^0,c
 19943  007864  0E00               	movlw	0
 19944  007866  6E11               	movwf	(___fldiv@b+2)^0,c
 19945  007868  0E00               	movlw	0
 19946  00786A  6E12               	movwf	(___fldiv@b+3)^0,c
 19947  00786C  0E00               	movlw	0
 19948  00786E  6E22               	movwf	___fldiv@grs^0,c
 19949  007870  0E00               	movlw	0
 19950  007872  6E23               	movwf	(___fldiv@grs+1)^0,c
 19951  007874  0E00               	movlw	0
 19952  007876  6E24               	movwf	(___fldiv@grs+2)^0,c
 19953  007878  0E00               	movlw	0
 19954  00787A  6E25               	movwf	(___fldiv@grs+3)^0,c
 19955  00787C  0E00               	movlw	0
 19956  00787E  6E27               	movwf	___fldiv@aexp^0,c
 19957  007880  D028               	goto	l3409
 19958  007882                     l32263:
 19959  007882  5027               	movf	___fldiv@aexp^0,w,c
 19960  007884  B4D8               	btfsc	status,2,c
 19961  007886  D011               	goto	l32271
 19962  007888  90D8               	bcf	status,0,c
 19963  00788A  361B               	rlcf	___fldiv@rem^0,f,c
 19964  00788C  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 19965  00788E  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 19966  007890  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 19967  007892  90D8               	bcf	status,0,c
 19968  007894  360F               	rlcf	___fldiv@b^0,f,c
 19969  007896  3610               	rlcf	(___fldiv@b+1)^0,f,c
 19970  007898  3611               	rlcf	(___fldiv@b+2)^0,f,c
 19971  00789A  3612               	rlcf	(___fldiv@b+3)^0,f,c
 19972  00789C  BE25               	btfsc	(___fldiv@grs+3)^0,7,c
 19973  00789E  800F               	bsf	___fldiv@b^0,0,c
 19974  0078A0  90D8               	bcf	status,0,c
 19975  0078A2  3622               	rlcf	___fldiv@grs^0,f,c
 19976  0078A4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 19977  0078A6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 19978  0078A8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 19979  0078AA                     l32271:
 19980  0078AA  5013               	movf	___fldiv@a^0,w,c
 19981  0078AC  5C1B               	subwf	___fldiv@rem^0,w,c
 19982  0078AE  5014               	movf	(___fldiv@a+1)^0,w,c
 19983  0078B0  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 19984  0078B2  5015               	movf	(___fldiv@a+2)^0,w,c
 19985  0078B4  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 19986  0078B6  5016               	movf	(___fldiv@a+3)^0,w,c
 19987  0078B8  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 19988  0078BA  A0D8               	btfss	status,0,c
 19989  0078BC  D009               	goto	l32277
 19990  0078BE  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 19991  0078C0  5013               	movf	___fldiv@a^0,w,c
 19992  0078C2  5E1B               	subwf	___fldiv@rem^0,f,c
 19993  0078C4  5014               	movf	(___fldiv@a+1)^0,w,c
 19994  0078C6  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 19995  0078C8  5015               	movf	(___fldiv@a+2)^0,w,c
 19996  0078CA  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 19997  0078CC  5016               	movf	(___fldiv@a+3)^0,w,c
 19998  0078CE  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 19999  0078D0                     l32277:
 20000  0078D0  2A27               	incf	___fldiv@aexp^0,f,c
 20001  0078D2                     l3409:
 20002  0078D2  0E19               	movlw	25
 20003  0078D4  6427               	cpfsgt	___fldiv@aexp^0,c
 20004  0078D6  D7D5               	goto	l32263
 20005  0078D8  501B               	movf	___fldiv@rem^0,w,c
 20006  0078DA  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 20007  0078DC  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 20008  0078DE  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 20009  0078E0  B4D8               	btfsc	status,2,c
 20010  0078E2  D011               	goto	l32289
 20011  0078E4  8022               	bsf	___fldiv@grs^0,0,c
 20012  0078E6  D00F               	goto	l32289
 20013  0078E8                     l32283:
 20014  0078E8  90D8               	bcf	status,0,c
 20015  0078EA  360F               	rlcf	___fldiv@b^0,f,c
 20016  0078EC  3610               	rlcf	(___fldiv@b+1)^0,f,c
 20017  0078EE  3611               	rlcf	(___fldiv@b+2)^0,f,c
 20018  0078F0  3612               	rlcf	(___fldiv@b+3)^0,f,c
 20019  0078F2  BE25               	btfsc	(___fldiv@grs+3)^0,7,c
 20020  0078F4  800F               	bsf	___fldiv@b^0,0,c
 20021  0078F6  90D8               	bcf	status,0,c
 20022  0078F8  3622               	rlcf	___fldiv@grs^0,f,c
 20023  0078FA  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 20024  0078FC  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 20025  0078FE  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 20026  007900  0620               	decf	___fldiv@new_exp^0,f,c
 20027  007902  A0D8               	btfss	status,0,c
 20028  007904  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 20029  007906                     l32289:
 20030  007906  AE11               	btfss	(___fldiv@b+2)^0,7,c
 20031  007908  D7EF               	goto	l32283
 20032  00790A  0E00               	movlw	0
 20033  00790C  6E27               	movwf	___fldiv@aexp^0,c
 20034  00790E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 20035  007910  D017               	goto	l3420
 20036  007912  0EFF               	movlw	255
 20037  007914  1422               	andwf	___fldiv@grs^0,w,c
 20038  007916  6E17               	movwf	??___fldiv^0,c
 20039  007918  0EFF               	movlw	255
 20040  00791A  1423               	andwf	(___fldiv@grs+1)^0,w,c
 20041  00791C  6E18               	movwf	(??___fldiv+1)^0,c
 20042  00791E  0EFF               	movlw	255
 20043  007920  1424               	andwf	(___fldiv@grs+2)^0,w,c
 20044  007922  6E19               	movwf	(??___fldiv+2)^0,c
 20045  007924  0E7F               	movlw	127
 20046  007926  1425               	andwf	(___fldiv@grs+3)^0,w,c
 20047  007928  6E1A               	movwf	(??___fldiv+3)^0,c
 20048  00792A  5017               	movf	??___fldiv^0,w,c
 20049  00792C  1018               	iorwf	(??___fldiv+1)^0,w,c
 20050  00792E  1019               	iorwf	(??___fldiv+2)^0,w,c
 20051  007930  101A               	iorwf	(??___fldiv+3)^0,w,c
 20052  007932  B4D8               	btfsc	status,2,c
 20053  007934  D003               	goto	l3421
 20054  007936                     u40670:
 20055  007936  0E01               	movlw	1
 20056  007938  6E27               	movwf	___fldiv@aexp^0,c
 20057  00793A  D002               	goto	l3420
 20058  00793C                     l3421:
 20059  00793C  B00F               	btfsc	___fldiv@b^0,0,c
 20060  00793E  D7FB               	goto	u40670
 20061  007940                     l3420:
 20062  007940  5027               	movf	___fldiv@aexp^0,w,c
 20063  007942  B4D8               	btfsc	status,2,c
 20064  007944  D01F               	goto	l32309
 20065  007946  0E01               	movlw	1
 20066  007948  260F               	addwf	___fldiv@b^0,f,c
 20067  00794A  0E00               	movlw	0
 20068  00794C  2210               	addwfc	(___fldiv@b+1)^0,f,c
 20069  00794E  2211               	addwfc	(___fldiv@b+2)^0,f,c
 20070  007950  2212               	addwfc	(___fldiv@b+3)^0,f,c
 20071  007952  A012               	btfss	(___fldiv@b+3)^0,0,c
 20072  007954  D017               	goto	l32309
 20073  007956  C00F  F017         	movff	___fldiv@b,??___fldiv
 20074  00795A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 20075  00795E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 20076  007962  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 20077  007966  341A               	rlcf	(??___fldiv+3)^0,w,c
 20078  007968  321A               	rrcf	(??___fldiv+3)^0,f,c
 20079  00796A  3219               	rrcf	(??___fldiv+2)^0,f,c
 20080  00796C  3218               	rrcf	(??___fldiv+1)^0,f,c
 20081  00796E  3217               	rrcf	??___fldiv^0,f,c
 20082  007970  C017  F00F         	movff	??___fldiv,___fldiv@b
 20083  007974  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 20084  007978  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 20085  00797C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 20086  007980  4A20               	infsnz	___fldiv@new_exp^0,f,c
 20087  007982  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 20088  007984                     l32309:
 20089  007984  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 20090  007986  D010               	goto	l32313
 20091  007988  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 20092  00798A  E103               	bnz	u40710
 20093  00798C  2820               	incf	___fldiv@new_exp^0,w,c
 20094  00798E  A0D8               	btfss	status,0,c
 20095  007990  D00B               	goto	l32313
 20096  007992                     u40710:
 20097  007992  0E00               	movlw	0
 20098  007994  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 20099  007996  6820               	setf	___fldiv@new_exp^0,c
 20100  007998  0E00               	movlw	0
 20101  00799A  6E0F               	movwf	___fldiv@b^0,c
 20102  00799C  0E00               	movlw	0
 20103  00799E  6E10               	movwf	(___fldiv@b+1)^0,c
 20104  0079A0  0E00               	movlw	0
 20105  0079A2  6E11               	movwf	(___fldiv@b+2)^0,c
 20106  0079A4  0E00               	movlw	0
 20107  0079A6  6E12               	movwf	(___fldiv@b+3)^0,c
 20108  0079A8                     l32313:
 20109  0079A8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 20110  0079AA  D005               	goto	u40720
 20111  0079AC  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 20112  0079AE  E111               	bnz	l32317
 20113  0079B0  0420               	decf	___fldiv@new_exp^0,w,c
 20114  0079B2  B0D8               	btfsc	status,0,c
 20115  0079B4  D00E               	goto	l32317
 20116  0079B6                     u40720:
 20117  0079B6  0E00               	movlw	0
 20118  0079B8  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 20119  0079BA  0E00               	movlw	0
 20120  0079BC  6E20               	movwf	___fldiv@new_exp^0,c
 20121  0079BE  0E00               	movlw	0
 20122  0079C0  6E0F               	movwf	___fldiv@b^0,c
 20123  0079C2  0E00               	movlw	0
 20124  0079C4  6E10               	movwf	(___fldiv@b+1)^0,c
 20125  0079C6  0E00               	movlw	0
 20126  0079C8  6E11               	movwf	(___fldiv@b+2)^0,c
 20127  0079CA  0E00               	movlw	0
 20128  0079CC  6E12               	movwf	(___fldiv@b+3)^0,c
 20129  0079CE  0E00               	movlw	0
 20130  0079D0  6E1F               	movwf	___fldiv@sign^0,c
 20131  0079D2                     l32317:
 20132  0079D2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 20133  0079D6  A026               	btfss	___fldiv@bexp^0,0,c
 20134  0079D8  D002               	goto	l32323
 20135  0079DA  8E11               	bsf	(___fldiv@b+2)^0,7,c
 20136  0079DC  D001               	goto	l32325
 20137  0079DE                     l32323:
 20138  0079DE  9E11               	bcf	(___fldiv@b+2)^0,7,c
 20139  0079E0                     l32325:
 20140  0079E0  90D8               	bcf	status,0,c
 20141  0079E2  3026               	rrcf	___fldiv@bexp^0,w,c
 20142  0079E4  6E12               	movwf	(___fldiv@b+3)^0,c
 20143  0079E6  D70E               	goto	l32239
 20144  0079E8                     __end_of___fldiv:
 20145                           	callstack 0
 20146                           
 20147 ;; *************** function _ResetDeviceCleanly *****************
 20148 ;; Defined at:
 20149 ;;		line 297 in file "system.c"
 20150 ;; Parameters:    Size  Location     Type
 20151 ;;		None
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;		None
 20154 ;; Return value:  Size  Location     Type
 20155 ;;                  1    wreg      void 
 20156 ;; Registers used:
 20157 ;;		wreg, status,2, status,0, cstack
 20158 ;; Tracked objects:
 20159 ;;		On entry : 3F/0
 20160 ;;		On exit  : 0/0
 20161 ;;		Unchanged: 0/0
 20162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20167 ;;Total ram usage:        0 bytes
 20168 ;; Hardware stack levels used: 1
 20169 ;; Hardware stack levels required when called: 6
 20170 ;; This function calls:
 20171 ;;		_USBDisableWithLongDelay
 20172 ;; This function is called by:
 20173 ;;		_update_command
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177                           	psect	text94
 20178  00DEA4                     __ptext94:
 20179                           	callstack 0
 20180  00DEA4                     _ResetDeviceCleanly:
 20181                           	callstack 22
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;system.c: 299: USBDisableWithLongDelay();
 20185                           
 20186                           ;incstack = 0
 20187  00DEA4  ECD0  F06E         	call	_USBDisableWithLongDelay	;wreg free
 20188  00DEA8  00FF               	reset		;# 
 20189                           
 20190                           ;system.c: 301: __nop();
 20191  00DEAA  F000               	nop	
 20192                           
 20193                           ;system.c: 302: __nop();
 20194  00DEAC  F000               	nop	
 20195  00DEAE  0012               	return		;funcret
 20196  00DEB0                     __end_of_ResetDeviceCleanly:
 20197                           	callstack 0
 20198                           
 20199 ;; *************** function _ResetBootloaderCleanly *****************
 20200 ;; Defined at:
 20201 ;;		line 305 in file "system.c"
 20202 ;; Parameters:    Size  Location     Type
 20203 ;;		None
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;		None
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  1    wreg      void 
 20208 ;; Registers used:
 20209 ;;		wreg, status,2, status,0, cstack
 20210 ;; Tracked objects:
 20211 ;;		On entry : 3F/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20219 ;;Total ram usage:        0 bytes
 20220 ;; Hardware stack levels used: 1
 20221 ;; Hardware stack levels required when called: 6
 20222 ;; This function calls:
 20223 ;;		_USBDisableWithLongDelay
 20224 ;; This function is called by:
 20225 ;;		_update_command
 20226 ;; This function uses a non-reentrant model
 20227 ;;
 20228                           
 20229                           	psect	text95
 20230  00DE72                     __ptext95:
 20231                           	callstack 0
 20232  00DE72                     _ResetBootloaderCleanly:
 20233                           	callstack 22
 20234                           
 20235                           ; BSR set to: 0
 20236                           ;system.c: 307: USBDisableWithLongDelay();
 20237                           
 20238                           ;incstack = 0
 20239  00DE72  ECD0  F06E         	call	_USBDisableWithLongDelay	;wreg free
 20240  00DE76  EF0E F000          	goto	28	;# 
 20241                           
 20242                           ;system.c: 309: __nop();
 20243  00DE7A  F000               	nop	
 20244                           
 20245                           ;system.c: 310: __nop();
 20246  00DE7C  F000               	nop	
 20247  00DE7E  0012               	return		;funcret
 20248  00DE80                     __end_of_ResetBootloaderCleanly:
 20249                           	callstack 0
 20250                           
 20251 ;; *************** function _USBDisableWithLongDelay *****************
 20252 ;; Defined at:
 20253 ;;		line 281 in file "system.c"
 20254 ;; Parameters:    Size  Location     Type
 20255 ;;		None
 20256 ;; Auto vars:     Size  Location     Type
 20257 ;;		None
 20258 ;; Return value:  Size  Location     Type
 20259 ;;                  1    wreg      void 
 20260 ;; Registers used:
 20261 ;;		wreg, status,2, status,0, cstack
 20262 ;; Tracked objects:
 20263 ;;		On entry : 3F/0
 20264 ;;		On exit  : 3F/0
 20265 ;;		Unchanged: 0/0
 20266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20271 ;;Total ram usage:        0 bytes
 20272 ;; Hardware stack levels used: 1
 20273 ;; Hardware stack levels required when called: 5
 20274 ;; This function calls:
 20275 ;;		_DelayRoutine
 20276 ;; This function is called by:
 20277 ;;		_ResetDeviceCleanly
 20278 ;;		_ResetBootloaderCleanly
 20279 ;; This function uses a non-reentrant model
 20280 ;;
 20281                           
 20282                           	psect	text96
 20283  00DDA0                     __ptext96:
 20284                           	callstack 0
 20285  00DDA0                     _USBDisableWithLongDelay:
 20286                           	callstack 22
 20287                           
 20288                           ; BSR set to: 0
 20289                           ;system.c: 283: UCONbits.SUSPND = 0;
 20290                           
 20291                           ;incstack = 0
 20292  00DDA0  9265               	bcf	101,1,c	;volatile
 20293                           
 20294                           ; BSR set to: 0
 20295                           ;system.c: 284: UCON = 0x00;
 20296  00DDA2  0E00               	movlw	0
 20297  00DDA4  6E65               	movwf	101,c	;volatile
 20298                           
 20299                           ; BSR set to: 0
 20300                           ;system.c: 285: DelayRoutine(0xFFFF);
 20301  00DDA6  0EFF               	movlw	255
 20302  00DDA8  6E10               	movwf	(DelayRoutine@DelayAmount+1)^0,c
 20303  00DDAA  680F               	setf	DelayRoutine@DelayAmount^0,c
 20304  00DDAC  ECFD  F06E         	call	_DelayRoutine	;wreg free
 20305                           
 20306                           ;system.c: 286: USBDeviceState = DETACHED_STATE;
 20307  00DDB0  0E00               	movlw	0
 20308  00DDB2  0100               	movlb	0	; () banked
 20309  00DDB4  6FFA               	movwf	_USBDeviceState& (0+255),b
 20310                           
 20311                           ; BSR set to: 0
 20312  00DDB6  0012               	return		;funcret
 20313  00DDB8                     __end_of_USBDisableWithLongDelay:
 20314                           	callstack 0
 20315                           
 20316 ;; *************** function _DelayRoutine *****************
 20317 ;; Defined at:
 20318 ;;		line 269 in file "system.c"
 20319 ;; Parameters:    Size  Location     Type
 20320 ;;  DelayAmount     2   14[COMRAM] unsigned int 
 20321 ;; Auto vars:     Size  Location     Type
 20322 ;;		None
 20323 ;; Return value:  Size  Location     Type
 20324 ;;                  1    wreg      void 
 20325 ;; Registers used:
 20326 ;;		wreg, status,2, status,0
 20327 ;; Tracked objects:
 20328 ;;		On entry : 3F/0
 20329 ;;		On exit  : 0/0
 20330 ;;		Unchanged: 0/0
 20331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20336 ;;Total ram usage:        2 bytes
 20337 ;; Hardware stack levels used: 1
 20338 ;; Hardware stack levels required when called: 4
 20339 ;; This function calls:
 20340 ;;		Nothing
 20341 ;; This function is called by:
 20342 ;;		_USBDisableWithLongDelay
 20343 ;; This function uses a non-reentrant model
 20344 ;;
 20345                           
 20346                           	psect	text97
 20347  00DDFA                     __ptext97:
 20348                           	callstack 0
 20349  00DDFA                     _DelayRoutine:
 20350                           	callstack 22
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;system.c: 271: while(DelayAmount)
 20354                           
 20355                           ; BSR set to: 0
 20356                           ;incstack = 0
 20357  00DDFA  D004               	goto	l18615
 20358  00DDFC                     l1908:
 20359  00DDFC  0004               	clrwdt		;# 
 20360                           
 20361                           ;system.c: 274: DelayAmount--;
 20362  00DDFE  060F               	decf	DelayRoutine@DelayAmount^0,f,c
 20363  00DE00  A0D8               	btfss	status,0,c
 20364  00DE02  0610               	decf	(DelayRoutine@DelayAmount+1)^0,f,c
 20365  00DE04                     l18615:
 20366  00DE04  500F               	movf	DelayRoutine@DelayAmount^0,w,c
 20367  00DE06  1010               	iorwf	(DelayRoutine@DelayAmount+1)^0,w,c
 20368  00DE08  B4D8               	btfsc	status,2,c
 20369  00DE0A  0012               	return	
 20370  00DE0C  D7F7               	goto	l1908
 20371  00DE0E                     __end_of_DelayRoutine:
 20372                           	callstack 0
 20373                           
 20374 ;; *************** function _parse_command *****************
 20375 ;; Defined at:
 20376 ;;		line 349 in file "app_atcommand.c"
 20377 ;; Parameters:    Size  Location     Type
 20378 ;;  buff            2   36[COMRAM] PTR const unsigned char 
 20379 ;;		 -> g_atcommand.read_cmd(64), g_atcommand(242), 
 20380 ;;  status          2   38[COMRAM] PTR struct .
 20381 ;;		 -> g_atcommand(242), 
 20382 ;; Auto vars:     Size  Location     Type
 20383 ;;  idx             1   46[BANK0 ] char 
 20384 ;;  chno            1   33[BANK0 ] unsigned char 
 20385 ;;  param          32    0[BANK0 ] unsigned char [32]
 20386 ;;  cmd            11   34[BANK0 ] unsigned char [11]
 20387 ;;  ch              1   49[BANK0 ] unsigned char 
 20388 ;;  cmdidx          1   48[BANK0 ] unsigned char 
 20389 ;;  paramidx        1   47[BANK0 ] unsigned char 
 20390 ;;  seq             1   45[BANK0 ] enum E6547
 20391 ;;  retval          1   32[BANK0 ] enum E6553
 20392 ;; Return value:  Size  Location     Type
 20393 ;;                  1    wreg      enum E6553
 20394 ;; Registers used:
 20395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20396 ;; Tracked objects:
 20397 ;;		On entry : 0/6
 20398 ;;		On exit  : 0/0
 20399 ;;		Unchanged: 0/0
 20400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20402 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20404 ;;      Totals:         5      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20405 ;;Total ram usage:       55 bytes
 20406 ;; Hardware stack levels used: 1
 20407 ;; Hardware stack levels required when called: 6
 20408 ;; This function calls:
 20409 ;;		__strcpy
 20410 ;;		_check_atcommand
 20411 ;;		_param_copy
 20412 ;; This function is called by:
 20413 ;;		_atcommand_task
 20414 ;; This function uses a non-reentrant model
 20415 ;;
 20416                           
 20417                           	psect	text98
 20418  00606C                     __ptext98:
 20419                           	callstack 0
 20420  00606C                     _parse_command:
 20421                           	callstack 23
 20422                           
 20423                           ;app_atcommand.c: 351: e_Parsing_Seq seq = PARSE_READY;
 20424                           
 20425                           ;incstack = 0
 20426  00606C  0E00               	movlw	0
 20427  00606E  0100               	movlb	0	; () banked
 20428  006070  6F8D               	movwf	parse_command@seq& (0+255),b
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;app_atcommand.c: 353: char cmd[11] = {0};
 20432  006072  EE20  F082         	lfsr	2,parse_command@cmd
 20433  006076  0E0A               	movlw	10
 20434  006078                     u41371:
 20435  006078  6ADE               	clrf	postinc2,c
 20436  00607A  06E8               	decf	wreg,f,c
 20437  00607C  E2FD               	bc	u41371
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;app_atcommand.c: 354: char param[32] = {0};
 20441  00607E  EE20  F060         	lfsr	2,parse_command@param
 20442  006082  0E1F               	movlw	31
 20443  006084                     u41381:
 20444  006084  6ADE               	clrf	postinc2,c
 20445  006086  06E8               	decf	wreg,f,c
 20446  006088  E2FD               	bc	u41381
 20447                           
 20448                           ;app_atcommand.c: 355: uint8_t cmdidx = 0, paramidx = 0;
 20449  00608A  0E00               	movlw	0
 20450  00608C  6F90               	movwf	parse_command@cmdidx& (0+255),b
 20451  00608E  0E00               	movlw	0
 20452  006090  6F8F               	movwf	parse_command@paramidx& (0+255),b
 20453                           
 20454                           ;app_atcommand.c: 357: e_ParseState retval = AT_PARSE_NONE;
 20455  006092  0E00               	movlw	0
 20456  006094  6F80               	movwf	parse_command@retval& (0+255),b
 20457  006096                     l32823:
 20458                           
 20459                           ; BSR set to: 0
 20460                           ;app_atcommand.c: 361: {;app_atcommand.c: 362: ch = *buff;
 20461  006096  C025  FFD9         	movff	parse_command@buff,fsr2l
 20462  00609A  C026  FFDA         	movff	parse_command@buff+1,fsr2h
 20463  00609E  50DF               	movf	indf2,w,c
 20464  0060A0  6F91               	movwf	parse_command@ch& (0+255),b
 20465                           
 20466                           ;app_atcommand.c: 363: switch (seq) {
 20467  0060A2  D156               	goto	l32967
 20468  0060A4                     l32825:
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;app_atcommand.c: 365: if (ch == 'A' || ch == 'T' || ch == 'a' || ch == 't') {
 20472  0060A4  0E41               	movlw	65
 20473  0060A6  1991               	xorwf	parse_command@ch& (0+255),w,b
 20474  0060A8  B4D8               	btfsc	status,2,c
 20475  0060AA  D00C               	goto	u41420
 20476                           
 20477                           ; BSR set to: 0
 20478  0060AC  0E54               	movlw	84
 20479  0060AE  1991               	xorwf	parse_command@ch& (0+255),w,b
 20480  0060B0  B4D8               	btfsc	status,2,c
 20481  0060B2  D008               	goto	u41420
 20482                           
 20483                           ; BSR set to: 0
 20484  0060B4  0E61               	movlw	97
 20485  0060B6  1991               	xorwf	parse_command@ch& (0+255),w,b
 20486  0060B8  B4D8               	btfsc	status,2,c
 20487  0060BA  D004               	goto	u41420
 20488                           
 20489                           ; BSR set to: 0
 20490  0060BC  0E74               	movlw	116
 20491  0060BE  1991               	xorwf	parse_command@ch& (0+255),w,b
 20492  0060C0  A4D8               	btfss	status,2,c
 20493  0060C2  D153               	goto	l32969
 20494  0060C4                     u41420:
 20495                           
 20496                           ; BSR set to: 0
 20497                           ;app_atcommand.c: 366: cmd[cmdidx++] = ch;
 20498  0060C4  5190               	movf	parse_command@cmdidx& (0+255),w,b
 20499  0060C6  0F82               	addlw	low parse_command@cmd
 20500  0060C8  6ED9               	movwf	fsr2l,c
 20501  0060CA  6ADA               	clrf	fsr2h,c
 20502  0060CC  C091  FFDF         	movff	parse_command@ch,indf2
 20503                           
 20504                           ; BSR set to: 0
 20505  0060D0  2B90               	incf	parse_command@cmdidx& (0+255),f,b
 20506                           
 20507                           ; BSR set to: 0
 20508                           ;app_atcommand.c: 367: if (cmdidx > 1) {
 20509  0060D2  0E01               	movlw	1
 20510  0060D4  6590               	cpfsgt	parse_command@cmdidx& (0+255),b
 20511  0060D6  D149               	goto	l32969
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;app_atcommand.c: 368: if ((cmd[0] == 'A' || cmd[0] == 'a') &&;app_atcommand.c: 369: (cm
      +                          d[1] == 'T' || cmd[1] == 't')) {
 20515  0060D8  0E41               	movlw	65
 20516  0060DA  1982               	xorwf	parse_command@cmd& (0+255),w,b
 20517  0060DC  B4D8               	btfsc	status,2,c
 20518  0060DE  D004               	goto	u41450
 20519                           
 20520                           ; BSR set to: 0
 20521  0060E0  0E61               	movlw	97
 20522  0060E2  1982               	xorwf	parse_command@cmd& (0+255),w,b
 20523  0060E4  A4D8               	btfss	status,2,c
 20524  0060E6  D00A               	goto	l32849
 20525  0060E8                     u41450:
 20526                           
 20527                           ; BSR set to: 0
 20528  0060E8  0E54               	movlw	84
 20529  0060EA  1983               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 20530  0060EC  B4D8               	btfsc	status,2,c
 20531  0060EE  D004               	goto	u41470
 20532                           
 20533                           ; BSR set to: 0
 20534  0060F0  0E74               	movlw	116
 20535  0060F2  1983               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 20536  0060F4  A4D8               	btfss	status,2,c
 20537  0060F6  D002               	goto	l32849
 20538  0060F8                     u41470:
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;app_atcommand.c: 370: seq = PARSE_START;
 20542  0060F8  0E01               	movlw	1
 20543  0060FA  D068               	goto	L40
 20544  0060FC                     l32849:
 20545                           
 20546                           ; BSR set to: 0
 20547  0060FC  0E02               	movlw	2
 20548  0060FE  6F80               	movwf	parse_command@retval& (0+255),b
 20549  006100  D134               	goto	l32969
 20550  006102                     l32851:
 20551                           
 20552                           ; BSR set to: 0
 20553                           ;app_atcommand.c: 376: if (ch == ' ') {
 20554  006102  0E20               	movlw	32
 20555  006104  1991               	xorwf	parse_command@ch& (0+255),w,b
 20556  006106  A4D8               	btfss	status,2,c
 20557  006108  D005               	goto	l32855
 20558                           
 20559                           ; BSR set to: 0
 20560                           ;app_atcommand.c: 377: seq = PARSE_PARAM;
 20561  00610A  0E02               	movlw	2
 20562  00610C  6F8D               	movwf	parse_command@seq& (0+255),b
 20563                           
 20564                           ;app_atcommand.c: 378: paramidx = 0;
 20565  00610E  0E00               	movlw	0
 20566  006110  6F8F               	movwf	parse_command@paramidx& (0+255),b
 20567                           
 20568                           ;app_atcommand.c: 379: } else
 20569  006112  D12B               	goto	l32969
 20570  006114                     l32855:
 20571                           
 20572                           ; BSR set to: 0
 20573                           ;app_atcommand.c: 380: if (cmdidx > 8 &&;app_atcommand.c: 381: (cmd[0] == 'A' || cmd[0] 
      +                          == 'a') && (cmd[1] == 'T' || cmd[1] == 't') && (cmd[2] == 'C' || cmd[2] == 'c') &&;app_a
      +                          tcommand.c: 382: (cmd[3] == 'S' || cmd[3] == 's') && (cmd[4] == 'M' || cmd[4] == 'm') &&
      +                           (cmd[5] == 'O' || cmd[5] == 'o') &&;app_atcommand.c: 383: (cmd[6] == 'D' || cmd[6] == '
      +                          d') && (cmd[7] == 'E' || cmd[7] == 'e') && (cmd[8] == 'L' || cmd[8] == 'l'))
 20574  006114  0E08               	movlw	8
 20575  006116  6590               	cpfsgt	parse_command@cmdidx& (0+255),b
 20576  006118  D050               	goto	l32899
 20577                           
 20578                           ; BSR set to: 0
 20579  00611A  0E41               	movlw	65
 20580  00611C  1982               	xorwf	parse_command@cmd& (0+255),w,b
 20581  00611E  B4D8               	btfsc	status,2,c
 20582  006120  D004               	goto	u41510
 20583                           
 20584                           ; BSR set to: 0
 20585  006122  0E61               	movlw	97
 20586  006124  1982               	xorwf	parse_command@cmd& (0+255),w,b
 20587  006126  A4D8               	btfss	status,2,c
 20588  006128  D048               	goto	l32899
 20589  00612A                     u41510:
 20590                           
 20591                           ; BSR set to: 0
 20592  00612A  0E54               	movlw	84
 20593  00612C  1983               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 20594  00612E  B4D8               	btfsc	status,2,c
 20595  006130  D004               	goto	u41530
 20596                           
 20597                           ; BSR set to: 0
 20598  006132  0E74               	movlw	116
 20599  006134  1983               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 20600  006136  A4D8               	btfss	status,2,c
 20601  006138  D040               	goto	l32899
 20602  00613A                     u41530:
 20603                           
 20604                           ; BSR set to: 0
 20605  00613A  0E43               	movlw	67
 20606  00613C  1984               	xorwf	(parse_command@cmd+2)& (0+255),w,b
 20607  00613E  B4D8               	btfsc	status,2,c
 20608  006140  D004               	goto	u41550
 20609                           
 20610                           ; BSR set to: 0
 20611  006142  0E63               	movlw	99
 20612  006144  1984               	xorwf	(parse_command@cmd+2)& (0+255),w,b
 20613  006146  A4D8               	btfss	status,2,c
 20614  006148  D038               	goto	l32899
 20615  00614A                     u41550:
 20616                           
 20617                           ; BSR set to: 0
 20618  00614A  0E53               	movlw	83
 20619  00614C  1985               	xorwf	(parse_command@cmd+3)& (0+255),w,b
 20620  00614E  B4D8               	btfsc	status,2,c
 20621  006150  D004               	goto	u41570
 20622                           
 20623                           ; BSR set to: 0
 20624  006152  0E73               	movlw	115
 20625  006154  1985               	xorwf	(parse_command@cmd+3)& (0+255),w,b
 20626  006156  A4D8               	btfss	status,2,c
 20627  006158  D030               	goto	l32899
 20628  00615A                     u41570:
 20629                           
 20630                           ; BSR set to: 0
 20631  00615A  0E4D               	movlw	77
 20632  00615C  1986               	xorwf	(parse_command@cmd+4)& (0+255),w,b
 20633  00615E  B4D8               	btfsc	status,2,c
 20634  006160  D004               	goto	u41590
 20635                           
 20636                           ; BSR set to: 0
 20637  006162  0E6D               	movlw	109
 20638  006164  1986               	xorwf	(parse_command@cmd+4)& (0+255),w,b
 20639  006166  A4D8               	btfss	status,2,c
 20640  006168  D028               	goto	l32899
 20641  00616A                     u41590:
 20642                           
 20643                           ; BSR set to: 0
 20644  00616A  0E4F               	movlw	79
 20645  00616C  1987               	xorwf	(parse_command@cmd+5)& (0+255),w,b
 20646  00616E  B4D8               	btfsc	status,2,c
 20647  006170  D004               	goto	u41610
 20648                           
 20649                           ; BSR set to: 0
 20650  006172  0E6F               	movlw	111
 20651  006174  1987               	xorwf	(parse_command@cmd+5)& (0+255),w,b
 20652  006176  A4D8               	btfss	status,2,c
 20653  006178  D020               	goto	l32899
 20654  00617A                     u41610:
 20655                           
 20656                           ; BSR set to: 0
 20657  00617A  0E44               	movlw	68
 20658  00617C  1988               	xorwf	(parse_command@cmd+6)& (0+255),w,b
 20659  00617E  B4D8               	btfsc	status,2,c
 20660  006180  D004               	goto	u41630
 20661                           
 20662                           ; BSR set to: 0
 20663  006182  0E64               	movlw	100
 20664  006184  1988               	xorwf	(parse_command@cmd+6)& (0+255),w,b
 20665  006186  A4D8               	btfss	status,2,c
 20666  006188  D018               	goto	l32899
 20667  00618A                     u41630:
 20668                           
 20669                           ; BSR set to: 0
 20670  00618A  0E45               	movlw	69
 20671  00618C  1989               	xorwf	(parse_command@cmd+7)& (0+255),w,b
 20672  00618E  B4D8               	btfsc	status,2,c
 20673  006190  D004               	goto	u41650
 20674                           
 20675                           ; BSR set to: 0
 20676  006192  0E65               	movlw	101
 20677  006194  1989               	xorwf	(parse_command@cmd+7)& (0+255),w,b
 20678  006196  A4D8               	btfss	status,2,c
 20679  006198  D010               	goto	l32899
 20680  00619A                     u41650:
 20681                           
 20682                           ; BSR set to: 0
 20683  00619A  0E4C               	movlw	76
 20684  00619C  198A               	xorwf	(parse_command@cmd+8)& (0+255),w,b
 20685  00619E  B4D8               	btfsc	status,2,c
 20686  0061A0  D004               	goto	u41670
 20687                           
 20688                           ; BSR set to: 0
 20689  0061A2  0E6C               	movlw	108
 20690  0061A4  198A               	xorwf	(parse_command@cmd+8)& (0+255),w,b
 20691  0061A6  A4D8               	btfss	status,2,c
 20692  0061A8  D008               	goto	l32899
 20693  0061AA                     u41670:
 20694                           
 20695                           ; BSR set to: 0
 20696                           ;app_atcommand.c: 384: {;app_atcommand.c: 385: seq = PARSE_PARAM;
 20697  0061AA  0E02               	movlw	2
 20698  0061AC  6F8D               	movwf	parse_command@seq& (0+255),b
 20699                           
 20700                           ;app_atcommand.c: 386: paramidx = 0;
 20701  0061AE  0E00               	movlw	0
 20702  0061B0  6F8F               	movwf	parse_command@paramidx& (0+255),b
 20703                           
 20704                           ; BSR set to: 0
 20705                           ;app_atcommand.c: 387: param[paramidx++] = ch;
 20706  0061B2  C091  F060         	movff	parse_command@ch,parse_command@param
 20707  0061B6                     l32897:
 20708                           
 20709                           ; BSR set to: 0
 20710  0061B6  2B8F               	incf	parse_command@paramidx& (0+255),f,b
 20711                           
 20712                           ;app_atcommand.c: 388: } else
 20713  0061B8  D0D8               	goto	l32969
 20714  0061BA                     l32899:
 20715                           
 20716                           ; BSR set to: 0
 20717                           ;app_atcommand.c: 389: if (ch == '\r' || ch == '\n') {
 20718  0061BA  0E0D               	movlw	13
 20719  0061BC  1991               	xorwf	parse_command@ch& (0+255),w,b
 20720  0061BE  B4D8               	btfsc	status,2,c
 20721  0061C0  D004               	goto	u41690
 20722                           
 20723                           ; BSR set to: 0
 20724  0061C2  0E0A               	movlw	10
 20725  0061C4  1991               	xorwf	parse_command@ch& (0+255),w,b
 20726  0061C6  A4D8               	btfss	status,2,c
 20727  0061C8  D003               	goto	l32905
 20728  0061CA                     u41690:
 20729                           
 20730                           ; BSR set to: 0
 20731                           ;app_atcommand.c: 390: seq = PARSE_COMPL;
 20732  0061CA  0E03               	movlw	3
 20733  0061CC                     L40:
 20734  0061CC  6F8D               	movwf	parse_command@seq& (0+255),b
 20735                           
 20736                           ;app_atcommand.c: 391: } else {
 20737  0061CE  D0CD               	goto	l32969
 20738  0061D0                     l32905:
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;app_atcommand.c: 392: if (cmdidx >= sizeof(cmd)) cmdidx = 0;
 20742  0061D0  0E0A               	movlw	10
 20743  0061D2  6590               	cpfsgt	parse_command@cmdidx& (0+255),b
 20744  0061D4  D002               	goto	l32909
 20745                           
 20746                           ; BSR set to: 0
 20747  0061D6  0E00               	movlw	0
 20748  0061D8  6F90               	movwf	parse_command@cmdidx& (0+255),b
 20749  0061DA                     l32909:
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;app_atcommand.c: 393: cmd[cmdidx++] = ch;
 20753  0061DA  5190               	movf	parse_command@cmdidx& (0+255),w,b
 20754  0061DC  0F82               	addlw	low parse_command@cmd
 20755  0061DE  6ED9               	movwf	fsr2l,c
 20756  0061E0  6ADA               	clrf	fsr2h,c
 20757  0061E2  C091  FFDF         	movff	parse_command@ch,indf2
 20758                           
 20759                           ; BSR set to: 0
 20760  0061E6  2B90               	incf	parse_command@cmdidx& (0+255),f,b
 20761  0061E8  D0C0               	goto	l32969
 20762  0061EA                     l32913:
 20763                           
 20764                           ; BSR set to: 0
 20765                           ;app_atcommand.c: 397: if (ch == '\r' || ch == '\n') {
 20766  0061EA  0E0D               	movlw	13
 20767  0061EC  1991               	xorwf	parse_command@ch& (0+255),w,b
 20768  0061EE  B4D8               	btfsc	status,2,c
 20769  0061F0  D7EC               	goto	u41690
 20770                           
 20771                           ; BSR set to: 0
 20772  0061F2  0E0A               	movlw	10
 20773  0061F4  1991               	xorwf	parse_command@ch& (0+255),w,b
 20774  0061F6  B4D8               	btfsc	status,2,c
 20775  0061F8  D7E8               	goto	u41690
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;app_atcommand.c: 400: if (paramidx >= sizeof(param)) paramidx = 0;
 20779  0061FA  0E1F               	movlw	31
 20780  0061FC  658F               	cpfsgt	parse_command@paramidx& (0+255),b
 20781  0061FE  D002               	goto	l32923
 20782                           
 20783                           ; BSR set to: 0
 20784  006200  0E00               	movlw	0
 20785  006202  6F8F               	movwf	parse_command@paramidx& (0+255),b
 20786  006204                     l32923:
 20787                           
 20788                           ; BSR set to: 0
 20789                           ;app_atcommand.c: 401: param[paramidx++] = ch;
 20790  006204  518F               	movf	parse_command@paramidx& (0+255),w,b
 20791  006206  0F60               	addlw	low parse_command@param
 20792  006208  6ED9               	movwf	fsr2l,c
 20793  00620A  6ADA               	clrf	fsr2h,c
 20794  00620C  C091  FFDF         	movff	parse_command@ch,indf2
 20795  006210  D7D2               	goto	l32897
 20796  006212                     l32927:
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;app_atcommand.c: 405: {;app_atcommand.c: 406: uint8_t chno = 0;
 20800  006212  0E00               	movlw	0
 20801  006214  6F81               	movwf	parse_command@chno& (0+255),b
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;app_atcommand.c: 407: int8_t idx = check_atcommand(cmd, &chno);
 20805  006216  0E82               	movlw	low parse_command@cmd
 20806  006218  6E20               	movwf	check_atcommand@cmd^0,c
 20807  00621A  0E81               	movlw	low parse_command@chno
 20808  00621C  6E21               	movwf	check_atcommand@chno^0,c
 20809  00621E  EC77  F05F         	call	_check_atcommand	;wreg free
 20810  006222  0100               	movlb	0	; () banked
 20811  006224  6F8E               	movwf	parse_command@idx& (0+255),b
 20812                           
 20813                           ; BSR set to: 0
 20814                           ;app_atcommand.c: 408: if (idx >= 0) {
 20815  006226  BF8E               	btfsc	parse_command@idx& (0+255),7,b
 20816  006228  D091               	goto	l32961
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;app_atcommand.c: 409: status->channelno = chno;
 20820  00622A  C027  FFD9         	movff	parse_command@status,fsr2l
 20821  00622E  C028  FFDA         	movff	parse_command@status+1,fsr2h
 20822  006232  C081  FFDF         	movff	parse_command@chno,indf2
 20823                           
 20824                           ; BSR set to: 0
 20825                           ;app_atcommand.c: 410: status->atcommand = atcommand_type[idx].atcommand;
 20826  006236  518E               	movf	parse_command@idx& (0+255),w,b
 20827  006238  0D0D               	mullw	13
 20828  00623A  0E96               	movlw	low _atcommand_type
 20829  00623C  24F3               	addwf	243,w,c
 20830  00623E  6EF6               	movwf	tblptrl,c
 20831  006240  0E20               	movlw	high _atcommand_type
 20832  006242  20F4               	addwfc	244,w,c
 20833  006244  6EF7               	movwf	tblptrh,c
 20834  006246                     	if	0	;There are less than 3 active tblptr bytes
 20835  006246                     	endif
 20836  006246  EE20 F002          	lfsr	2,2
 20837  00624A  5027               	movf	parse_command@status^0,w,c
 20838  00624C  26D9               	addwf	fsr2l,f,c
 20839  00624E  5028               	movf	(parse_command@status+1)^0,w,c
 20840  006250  22DA               	addwfc	fsr2h,f,c
 20841  006252  0008               	tblrd		*
 20842  006254  CFF5 FFDF          	movff	tablat,indf2
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;app_atcommand.c: 411: status->type = atcommand_type[idx].type;
 20846  006258  518E               	movf	parse_command@idx& (0+255),w,b
 20847  00625A  0D0D               	mullw	13
 20848  00625C  0E0C               	movlw	12
 20849  00625E  26F3               	addwf	243,f,c
 20850  006260  0E00               	movlw	0
 20851  006262  22F4               	addwfc	244,f,c
 20852  006264  0E96               	movlw	low _atcommand_type
 20853  006266  24F3               	addwf	243,w,c
 20854  006268  6EF6               	movwf	tblptrl,c
 20855  00626A  0E20               	movlw	high _atcommand_type
 20856  00626C  20F4               	addwfc	244,w,c
 20857  00626E  6EF7               	movwf	tblptrh,c
 20858  006270                     	if	0	;There are less than 3 active tblptr bytes
 20859  006270                     	endif
 20860  006270  EE20 F0AF          	lfsr	2,175
 20861  006274  5027               	movf	parse_command@status^0,w,c
 20862  006276  26D9               	addwf	fsr2l,f,c
 20863  006278  5028               	movf	(parse_command@status+1)^0,w,c
 20864  00627A  22DA               	addwfc	fsr2h,f,c
 20865  00627C  0008               	tblrd		*
 20866  00627E  CFF5 FFDF          	movff	tablat,indf2
 20867                           
 20868                           ; BSR set to: 0
 20869                           ;app_atcommand.c: 412: _strcpy(status->szcommand, cmd);
 20870  006282  0E03               	movlw	3
 20871  006284  2427               	addwf	parse_command@status^0,w,c
 20872  006286  6E0F               	movwf	__strcpy@dest^0,c
 20873  006288  0E00               	movlw	0
 20874  00628A  2028               	addwfc	(parse_command@status+1)^0,w,c
 20875  00628C  6E10               	movwf	(__strcpy@dest+1)^0,c
 20876  00628E  0E82               	movlw	low parse_command@cmd
 20877  006290  6E11               	movwf	__strcpy@source^0,c
 20878  006292  6A12               	clrf	(__strcpy@source+1)^0,c
 20879  006294  EC4C  F063         	call	__strcpy	;wreg free
 20880                           
 20881                           ;app_atcommand.c: 413: switch (status->type) {
 20882  006298  D044               	goto	l32953
 20883  00629A                     l32941:
 20884  00629A  EE20 F00E          	lfsr	2,14
 20885  00629E  5027               	movf	parse_command@status^0,w,c
 20886  0062A0  26D9               	addwf	fsr2l,f,c
 20887  0062A2  5028               	movf	(parse_command@status+1)^0,w,c
 20888  0062A4  22DA               	addwfc	fsr2h,f,c
 20889  0062A6  0E00               	movlw	0
 20890  0062A8  D011               	goto	L41
 20891  0062AA                     l32943:
 20892  0062AA  0E0F               	movlw	15
 20893  0062AC  2427               	addwf	parse_command@status^0,w,c
 20894  0062AE  6E10               	movwf	param_copy@src1^0,c
 20895  0062B0  0E00               	movlw	0
 20896  0062B2  2028               	addwfc	(parse_command@status+1)^0,w,c
 20897  0062B4  6E11               	movwf	(param_copy@src1+1)^0,c
 20898  0062B6  0E60               	movlw	low parse_command@param
 20899  0062B8  6E12               	movwf	param_copy@src2^0,c
 20900  0062BA  EC5B  F065         	call	_param_copy	;wreg free
 20901  0062BE  EE20 F00E          	lfsr	2,14
 20902  0062C2  5027               	movf	parse_command@status^0,w,c
 20903  0062C4  26D9               	addwf	fsr2l,f,c
 20904  0062C6  5028               	movf	(parse_command@status+1)^0,w,c
 20905  0062C8  22DA               	addwfc	fsr2h,f,c
 20906  0062CA  0E01               	movlw	1
 20907  0062CC                     L41:
 20908  0062CC  6EDF               	movwf	indf2,c
 20909  0062CE  D03C               	goto	l32955
 20910  0062D0                     l32947:
 20911  0062D0  0E0F               	movlw	15
 20912  0062D2  2427               	addwf	parse_command@status^0,w,c
 20913  0062D4  6E10               	movwf	param_copy@src1^0,c
 20914  0062D6  0E00               	movlw	0
 20915  0062D8  2028               	addwfc	(parse_command@status+1)^0,w,c
 20916  0062DA  6E11               	movwf	(param_copy@src1+1)^0,c
 20917  0062DC  0E60               	movlw	low parse_command@param
 20918  0062DE  6E12               	movwf	param_copy@src2^0,c
 20919  0062E0  EC5B  F065         	call	_param_copy	;wreg free
 20920  0062E4  5010               	movf	?_param_copy^0,w,c
 20921  0062E6  1011               	iorwf	(?_param_copy+1)^0,w,c
 20922  0062E8  D018               	goto	L42
 20923  0062EA                     u41751:
 20924  0062EA  6A29               	clrf	??_parse_command^0,c
 20925  0062EC  2A29               	incf	??_parse_command^0,f,c
 20926  0062EE                     u41768:
 20927  0062EE  EE20 F00E          	lfsr	2,14
 20928  0062F2  5027               	movf	parse_command@status^0,w,c
 20929  0062F4  26D9               	addwf	fsr2l,f,c
 20930  0062F6  5028               	movf	(parse_command@status+1)^0,w,c
 20931  0062F8  22DA               	addwfc	fsr2h,f,c
 20932  0062FA  C029  FFDF         	movff	??_parse_command,indf2
 20933  0062FE  D024               	goto	l32955
 20934  006300                     l32949:
 20935  006300  0E0F               	movlw	15
 20936  006302  2427               	addwf	parse_command@status^0,w,c
 20937  006304  6E0F               	movwf	__strcpy@dest^0,c
 20938  006306  0E00               	movlw	0
 20939  006308  2028               	addwfc	(parse_command@status+1)^0,w,c
 20940  00630A  6E10               	movwf	(__strcpy@dest+1)^0,c
 20941  00630C  0E60               	movlw	low parse_command@param
 20942  00630E  6E11               	movwf	__strcpy@source^0,c
 20943  006310  6A12               	clrf	(__strcpy@source+1)^0,c
 20944  006312  EC4C  F063         	call	__strcpy	;wreg free
 20945  006316  500F               	movf	?__strcpy^0,w,c
 20946  006318  1010               	iorwf	(?__strcpy+1)^0,w,c
 20947  00631A                     L42:
 20948  00631A  A4D8               	btfss	status,2,c
 20949  00631C  D7E6               	goto	u41751
 20950  00631E  6A29               	clrf	??_parse_command^0,c
 20951  006320  D7E6               	goto	u41768
 20952  006322                     l32953:
 20953  006322  EE20 F0AF          	lfsr	2,175
 20954  006326  5027               	movf	parse_command@status^0,w,c
 20955  006328  26D9               	addwf	fsr2l,f,c
 20956  00632A  5028               	movf	(parse_command@status+1)^0,w,c
 20957  00632C  22DA               	addwfc	fsr2h,f,c
 20958  00632E  50DF               	movf	indf2,w,c
 20959                           
 20960                           ; Switch size 1, requested type "simple"
 20961                           ; Number of cases is 4, Range of values is 0 to 3
 20962                           ; switch strategies available:
 20963                           ; Name         Instructions Cycles
 20964                           ; simple_byte           13     7 (average)
 20965                           ;	Chosen strategy is simple_byte
 20966  006330  0A00               	xorlw	0	; case 0
 20967  006332  B4D8               	btfsc	status,2,c
 20968  006334  D7B2               	goto	l32941
 20969  006336  0A01               	xorlw	1	; case 1
 20970  006338  B4D8               	btfsc	status,2,c
 20971  00633A  D7B7               	goto	l32943
 20972  00633C  0A03               	xorlw	3	; case 2
 20973  00633E  B4D8               	btfsc	status,2,c
 20974  006340  D7C7               	goto	l32947
 20975  006342  0A01               	xorlw	1	; case 3
 20976  006344  B4D8               	btfsc	status,2,c
 20977  006346  D7DC               	goto	l32949
 20978  006348                     l32955:
 20979                           
 20980                           ;app_atcommand.c: 419: return AT_PARSE_OK;
 20981  006348  0E01               	movlw	1
 20982  00634A  0012               	return	
 20983  00634C                     l32961:
 20984                           
 20985                           ; BSR set to: 0
 20986                           ;app_atcommand.c: 421: return AT_PARSE_ERROR;
 20987  00634C  0E02               	movlw	2
 20988  00634E  0012               	return	
 20989  006350                     l32967:
 20990                           
 20991                           ; BSR set to: 0
 20992  006350  518D               	movf	parse_command@seq& (0+255),w,b
 20993                           
 20994                           ; Switch size 1, requested type "simple"
 20995                           ; Number of cases is 4, Range of values is 0 to 3
 20996                           ; switch strategies available:
 20997                           ; Name         Instructions Cycles
 20998                           ; simple_byte           13     7 (average)
 20999                           ;	Chosen strategy is simple_byte
 21000  006352  0A00               	xorlw	0	; case 0
 21001  006354  B4D8               	btfsc	status,2,c
 21002  006356  D6A6               	goto	l32825
 21003  006358  0A01               	xorlw	1	; case 1
 21004  00635A  B4D8               	btfsc	status,2,c
 21005  00635C  D6D2               	goto	l32851
 21006  00635E  0A03               	xorlw	3	; case 2
 21007  006360  B4D8               	btfsc	status,2,c
 21008  006362  D743               	goto	l32913
 21009  006364  0A01               	xorlw	1	; case 3
 21010  006366  B4D8               	btfsc	status,2,c
 21011  006368  D754               	goto	l32927
 21012  00636A                     l32969:
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;app_atcommand.c: 425: if (ch) buff++;
 21016  00636A  5191               	movf	parse_command@ch& (0+255),w,b
 21017  00636C  B4D8               	btfsc	status,2,c
 21018  00636E  D002               	goto	l32973
 21019                           
 21020                           ; BSR set to: 0
 21021  006370  4A25               	infsnz	parse_command@buff^0,f,c
 21022  006372  2A26               	incf	(parse_command@buff+1)^0,f,c
 21023  006374                     l32973:
 21024                           
 21025                           ; BSR set to: 0
 21026                           ;app_atcommand.c: 426: } while(ch);
 21027  006374  5191               	movf	parse_command@ch& (0+255),w,b
 21028  006376  A4D8               	btfss	status,2,c
 21029  006378  D68E               	goto	l32823
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;app_atcommand.c: 428: return retval;
 21033  00637A  5180               	movf	parse_command@retval& (0+255),w,b
 21034  00637C  0012               	return		;funcret
 21035  00637E                     __end_of_parse_command:
 21036                           	callstack 0
 21037                           
 21038 ;; *************** function _param_copy *****************
 21039 ;; Defined at:
 21040 ;;		line 300 in file "app_atcommand.c"
 21041 ;; Parameters:    Size  Location     Type
 21042 ;;  src1            2   15[COMRAM] PTR unsigned char 
 21043 ;;		 -> g_atcommand(242), 
 21044 ;;  src2            1   17[COMRAM] PTR const unsigned char 
 21045 ;;		 -> parse_command@param(32), 
 21046 ;; Auto vars:     Size  Location     Type
 21047 ;;  i               2   18[COMRAM] unsigned int 
 21048 ;;  ch              1   20[COMRAM] unsigned char 
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  2   15[COMRAM] unsigned int 
 21051 ;; Registers used:
 21052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21053 ;; Tracked objects:
 21054 ;;		On entry : 0/0
 21055 ;;		On exit  : 0/0
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21058 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21059 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21061 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21062 ;;Total ram usage:        6 bytes
 21063 ;; Hardware stack levels used: 1
 21064 ;; Hardware stack levels required when called: 5
 21065 ;; This function calls:
 21066 ;;		_check_param
 21067 ;; This function is called by:
 21068 ;;		_parse_command
 21069 ;; This function uses a non-reentrant model
 21070 ;;
 21071                           
 21072                           	psect	text99
 21073  00CAB6                     __ptext99:
 21074                           	callstack 0
 21075  00CAB6                     _param_copy:
 21076                           	callstack 23
 21077                           
 21078                           ;app_atcommand.c: 302: unsigned int i = 0;
 21079                           
 21080                           ;incstack = 0
 21081  00CAB6  0E00               	movlw	0
 21082  00CAB8  6E14               	movwf	(param_copy@i+1)^0,c
 21083  00CABA  0E00               	movlw	0
 21084  00CABC  6E13               	movwf	param_copy@i^0,c
 21085                           
 21086                           ;app_atcommand.c: 304: if(!src1 || !src2) return 0;
 21087  00CABE  5010               	movf	param_copy@src1^0,w,c
 21088  00CAC0  1011               	iorwf	(param_copy@src1+1)^0,w,c
 21089  00CAC2  B4D8               	btfsc	status,2,c
 21090  00CAC4  D003               	goto	u22930
 21091  00CAC6  5012               	movf	param_copy@src2^0,w,c
 21092  00CAC8  A4D8               	btfss	status,2,c
 21093  00CACA  D005               	goto	l19943
 21094  00CACC                     u22930:
 21095  00CACC  0E00               	movlw	0
 21096  00CACE  6E11               	movwf	(?_param_copy+1)^0,c
 21097  00CAD0  0E00               	movlw	0
 21098  00CAD2  6E10               	movwf	?_param_copy^0,c
 21099  00CAD4  0012               	return	
 21100  00CAD6                     l19943:
 21101                           
 21102                           ;app_atcommand.c: 306: ch = *src2++;
 21103  00CAD6  5012               	movf	param_copy@src2^0,w,c
 21104  00CAD8  6ED9               	movwf	fsr2l,c
 21105  00CADA  6ADA               	clrf	fsr2h,c
 21106  00CADC  50DF               	movf	indf2,w,c
 21107  00CADE  6E15               	movwf	param_copy@ch^0,c
 21108  00CAE0  2A12               	incf	param_copy@src2^0,f,c
 21109                           
 21110                           ;app_atcommand.c: 307: if (check_param(ch)) {
 21111  00CAE2  5015               	movf	param_copy@ch^0,w,c
 21112  00CAE4  EC4E  F06C         	call	_check_param
 21113  00CAE8  0900               	iorlw	0
 21114  00CAEA  B4D8               	btfsc	status,2,c
 21115  00CAEC  D00A               	goto	l19955
 21116                           
 21117                           ;app_atcommand.c: 308: *src1++ = ch;
 21118  00CAEE  C010  FFD9         	movff	param_copy@src1,fsr2l
 21119  00CAF2  C011  FFDA         	movff	param_copy@src1+1,fsr2h
 21120  00CAF6  C015  FFDF         	movff	param_copy@ch,indf2
 21121  00CAFA  4A10               	infsnz	param_copy@src1^0,f,c
 21122  00CAFC  2A11               	incf	(param_copy@src1+1)^0,f,c
 21123                           
 21124                           ;app_atcommand.c: 309: i++;
 21125  00CAFE  4A13               	infsnz	param_copy@i^0,f,c
 21126  00CB00  2A14               	incf	(param_copy@i+1)^0,f,c
 21127  00CB02                     l19955:
 21128                           
 21129                           ;app_atcommand.c: 310: };app_atcommand.c: 311: } while(ch);
 21130  00CB02  5015               	movf	param_copy@ch^0,w,c
 21131  00CB04  A4D8               	btfss	status,2,c
 21132  00CB06  D7E7               	goto	l19943
 21133                           
 21134                           ;app_atcommand.c: 312: return i;
 21135  00CB08  C013  F010         	movff	param_copy@i,?_param_copy
 21136  00CB0C  C014  F011         	movff	param_copy@i+1,?_param_copy+1
 21137  00CB10  0012               	return		;funcret
 21138  00CB12                     __end_of_param_copy:
 21139                           	callstack 0
 21140                           
 21141 ;; *************** function _check_param *****************
 21142 ;; Defined at:
 21143 ;;		line 292 in file "app_atcommand.c"
 21144 ;; Parameters:    Size  Location     Type
 21145 ;;  param           1    wreg     unsigned char 
 21146 ;; Auto vars:     Size  Location     Type
 21147 ;;  param           1   14[COMRAM] unsigned char 
 21148 ;; Return value:  Size  Location     Type
 21149 ;;                  1    wreg      unsigned char 
 21150 ;; Registers used:
 21151 ;;		wreg, status,2, status,0
 21152 ;; Tracked objects:
 21153 ;;		On entry : 0/0
 21154 ;;		On exit  : 0/0
 21155 ;;		Unchanged: 0/0
 21156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21161 ;;Total ram usage:        1 bytes
 21162 ;; Hardware stack levels used: 1
 21163 ;; Hardware stack levels required when called: 4
 21164 ;; This function calls:
 21165 ;;		Nothing
 21166 ;; This function is called by:
 21167 ;;		_param_copy
 21168 ;; This function uses a non-reentrant model
 21169 ;;
 21170                           
 21171                           	psect	text100
 21172  00D89C                     __ptext100:
 21173                           	callstack 0
 21174  00D89C                     _check_param:
 21175                           	callstack 23
 21176                           
 21177                           ;incstack = 0
 21178                           ;check_param@param stored from wreg
 21179  00D89C  6E0F               	movwf	check_param@param^0,c
 21180                           
 21181                           ;app_atcommand.c: 294: if (param == '-' || param == '.' || param == ',' ||;app_atcommand
      +                          .c: 295: (param >= '0' && param <= '9'))
 21182  00D89E  0E2D               	movlw	45
 21183  00D8A0  180F               	xorwf	check_param@param^0,w,c
 21184  00D8A2  B4D8               	btfsc	status,2,c
 21185  00D8A4  D00E               	goto	u21870
 21186  00D8A6  0E2E               	movlw	46
 21187  00D8A8  180F               	xorwf	check_param@param^0,w,c
 21188  00D8AA  B4D8               	btfsc	status,2,c
 21189  00D8AC  D00A               	goto	u21870
 21190  00D8AE  0E2C               	movlw	44
 21191  00D8B0  180F               	xorwf	check_param@param^0,w,c
 21192  00D8B2  B4D8               	btfsc	status,2,c
 21193  00D8B4  D006               	goto	u21870
 21194  00D8B6  0E2F               	movlw	47
 21195  00D8B8  640F               	cpfsgt	check_param@param^0,c
 21196  00D8BA  D005               	goto	l19269
 21197  00D8BC  0E3A               	movlw	58
 21198  00D8BE  600F               	cpfslt	check_param@param^0,c
 21199  00D8C0  D002               	goto	l19269
 21200  00D8C2                     u21870:
 21201                           
 21202                           ;app_atcommand.c: 296: return 1;
 21203  00D8C2  0E01               	movlw	1
 21204  00D8C4  0012               	return	
 21205  00D8C6                     l19269:
 21206                           
 21207                           ;app_atcommand.c: 297: return 0;
 21208  00D8C6  0E00               	movlw	0
 21209  00D8C8  0012               	return		;funcret
 21210  00D8CA                     __end_of_check_param:
 21211                           	callstack 0
 21212                           
 21213 ;; *************** function _check_atcommand *****************
 21214 ;; Defined at:
 21215 ;;		line 337 in file "app_atcommand.c"
 21216 ;; Parameters:    Size  Location     Type
 21217 ;;  cmd             1   31[COMRAM] PTR const unsigned char 
 21218 ;;		 -> parse_command@cmd(11), 
 21219 ;;  chno            1   32[COMRAM] PTR unsigned char 
 21220 ;;		 -> parse_command@chno(1), 
 21221 ;; Auto vars:     Size  Location     Type
 21222 ;;  i               1   35[COMRAM] unsigned char 
 21223 ;; Return value:  Size  Location     Type
 21224 ;;                  1    wreg      char 
 21225 ;; Registers used:
 21226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21227 ;; Tracked objects:
 21228 ;;		On entry : 3F/0
 21229 ;;		On exit  : 0/0
 21230 ;;		Unchanged: 0/0
 21231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21235 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21236 ;;Total ram usage:        5 bytes
 21237 ;; Hardware stack levels used: 1
 21238 ;; Hardware stack levels required when called: 5
 21239 ;; This function calls:
 21240 ;;		__strlen
 21241 ;;		_atcommand_compare
 21242 ;; This function is called by:
 21243 ;;		_parse_command
 21244 ;; This function uses a non-reentrant model
 21245 ;;
 21246                           
 21247                           	psect	text101
 21248  00BEEE                     __ptext101:
 21249                           	callstack 0
 21250  00BEEE                     _check_atcommand:
 21251                           	callstack 23
 21252                           
 21253                           ; BSR set to: 0
 21254                           ;app_atcommand.c: 339: for (uint8_t i = 0 ; i < sizeof(atcommand_type)/sizeof(s_Command_
      +                          type) ; i++) {
 21255                           
 21256                           ;incstack = 0
 21257  00BEEE  0E00               	movlw	0
 21258  00BEF0  6E24               	movwf	check_atcommand@i^0,c
 21259  00BEF2                     l19963:
 21260                           
 21261                           ;app_atcommand.c: 340: if (_strlen(cmd) == _strlen(atcommand_type[i].szcommand)) {
 21262  00BEF2  C020  F00F         	movff	check_atcommand@cmd,__strlen@source
 21263  00BEF6  6A10               	clrf	(__strlen@source+1)^0,c
 21264  00BEF8  ECC8  F068         	call	__strlen	;wreg free
 21265  00BEFC  C00F  F022         	movff	?__strlen,??_check_atcommand
 21266  00BF00  C010  F023         	movff	?__strlen+1,??_check_atcommand+1
 21267  00BF04  5024               	movf	check_atcommand@i^0,w,c
 21268  00BF06  0D0D               	mullw	13
 21269  00BF08  0E01               	movlw	1
 21270  00BF0A  26F3               	addwf	243,f,c
 21271  00BF0C  0E00               	movlw	0
 21272  00BF0E  22F4               	addwfc	244,f,c
 21273  00BF10  0E96               	movlw	low _atcommand_type
 21274  00BF12  24F3               	addwf	243,w,c
 21275  00BF14  6E0F               	movwf	__strlen@source^0,c
 21276  00BF16  0E20               	movlw	high _atcommand_type
 21277  00BF18  20F4               	addwfc	prodh,w,c
 21278  00BF1A  6E10               	movwf	(__strlen@source+1)^0,c
 21279  00BF1C  ECC8  F068         	call	__strlen	;wreg free
 21280  00BF20  500F               	movf	?__strlen^0,w,c
 21281  00BF22  1822               	xorwf	??_check_atcommand^0,w,c
 21282  00BF24  E122               	bnz	l19971
 21283  00BF26  5010               	movf	(?__strlen+1)^0,w,c
 21284  00BF28  1823               	xorwf	(??_check_atcommand+1)^0,w,c
 21285  00BF2A  A4D8               	btfss	status,2,c
 21286  00BF2C  D01E               	goto	l19971
 21287                           
 21288                           ;app_atcommand.c: 341: if (atcommand_compare(atcommand_type[i].szcommand, cmd, _strlen(c
      +                          md), chno)) {
 21289  00BF2E  5024               	movf	check_atcommand@i^0,w,c
 21290  00BF30  0D0D               	mullw	13
 21291  00BF32  0E01               	movlw	1
 21292  00BF34  26F3               	addwf	243,f,c
 21293  00BF36  0E00               	movlw	0
 21294  00BF38  22F4               	addwfc	244,f,c
 21295  00BF3A  0E96               	movlw	low _atcommand_type
 21296  00BF3C  24F3               	addwf	243,w,c
 21297  00BF3E  6E13               	movwf	atcommand_compare@src1^0,c
 21298  00BF40  0E20               	movlw	high _atcommand_type
 21299  00BF42  20F4               	addwfc	prodh,w,c
 21300  00BF44  6E14               	movwf	(atcommand_compare@src1+1)^0,c
 21301  00BF46  C020  F015         	movff	check_atcommand@cmd,atcommand_compare@src2
 21302  00BF4A  C020  F00F         	movff	check_atcommand@cmd,__strlen@source
 21303  00BF4E  6A10               	clrf	(__strlen@source+1)^0,c
 21304  00BF50  ECC8  F068         	call	__strlen	;wreg free
 21305  00BF54  500F               	movf	?__strlen^0,w,c
 21306  00BF56  6E16               	movwf	atcommand_compare@n^0,c
 21307  00BF58  C021  F017         	movff	check_atcommand@chno,atcommand_compare@channelno
 21308  00BF5C  EC5A  F05A         	call	_atcommand_compare	;wreg free
 21309  00BF60  0900               	iorlw	0
 21310  00BF62  B4D8               	btfsc	status,2,c
 21311  00BF64  D002               	goto	l19971
 21312                           
 21313                           ;app_atcommand.c: 342: return i;
 21314  00BF66  5024               	movf	check_atcommand@i^0,w,c
 21315  00BF68  0012               	return	
 21316  00BF6A                     l19971:
 21317  00BF6A  2A24               	incf	check_atcommand@i^0,f,c
 21318  00BF6C  0E25               	movlw	37
 21319  00BF6E  6424               	cpfsgt	check_atcommand@i^0,c
 21320  00BF70  D7C0               	goto	l19963
 21321                           
 21322                           ;app_atcommand.c: 343: };app_atcommand.c: 344: };app_atcommand.c: 345: };app_atcommand.c
      +                          : 346: return -1;
 21323  00BF72  0EFF               	movlw	255
 21324  00BF74  0012               	return		;funcret
 21325  00BF76                     __end_of_check_atcommand:
 21326                           	callstack 0
 21327                           
 21328 ;; *************** function _atcommand_compare *****************
 21329 ;; Defined at:
 21330 ;;		line 315 in file "app_atcommand.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;  src1            2   18[COMRAM] PTR const unsigned char 
 21333 ;;		 -> atcommand_type(494), 
 21334 ;;  src2            1   20[COMRAM] PTR const unsigned char 
 21335 ;;		 -> parse_command@cmd(11), 
 21336 ;;  n               1   21[COMRAM] unsigned char 
 21337 ;;  channelno       1   22[COMRAM] PTR unsigned char 
 21338 ;;		 -> parse_command@chno(1), 
 21339 ;; Auto vars:     Size  Location     Type
 21340 ;;  no              1   29[COMRAM] unsigned char 
 21341 ;;  ch              1   30[COMRAM] unsigned char 
 21342 ;; Return value:  Size  Location     Type
 21343 ;;                  1    wreg      unsigned char 
 21344 ;; Registers used:
 21345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21346 ;; Tracked objects:
 21347 ;;		On entry : 0/0
 21348 ;;		On exit  : 0/0
 21349 ;;		Unchanged: 0/0
 21350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21351 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21353 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21354 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21355 ;;Total ram usage:       13 bytes
 21356 ;; Hardware stack levels used: 1
 21357 ;; Hardware stack levels required when called: 4
 21358 ;; This function calls:
 21359 ;;		Nothing
 21360 ;; This function is called by:
 21361 ;;		_check_atcommand
 21362 ;; This function uses a non-reentrant model
 21363 ;;
 21364                           
 21365                           	psect	text102
 21366  00B4B4                     __ptext102:
 21367                           	callstack 0
 21368  00B4B4                     _atcommand_compare:
 21369                           	callstack 23
 21370                           
 21371                           ;app_atcommand.c: 317: if(!src1 || !src2 || n<=0) return 0;
 21372                           
 21373                           ;incstack = 0
 21374  00B4B4  5013               	movf	atcommand_compare@src1^0,w,c
 21375  00B4B6  1014               	iorwf	(atcommand_compare@src1+1)^0,w,c
 21376  00B4B8  B4D8               	btfsc	status,2,c
 21377  00B4BA  D006               	goto	u21900
 21378  00B4BC  5015               	movf	atcommand_compare@src2^0,w,c
 21379  00B4BE  B4D8               	btfsc	status,2,c
 21380  00B4C0  D003               	goto	u21900
 21381  00B4C2  5016               	movf	atcommand_compare@n^0,w,c
 21382  00B4C4  A4D8               	btfss	status,2,c
 21383  00B4C6  D045               	goto	l19309
 21384  00B4C8                     u21900:
 21385  00B4C8                     l19279:
 21386  00B4C8  0E00               	movlw	0
 21387  00B4CA  0012               	return	
 21388  00B4CC                     l19283:
 21389                           
 21390                           ;app_atcommand.c: 319: char ch = *src1;
 21391  00B4CC  C013  FFF6         	movff	atcommand_compare@src1,tblptrl
 21392  00B4D0  C014  FFF7         	movff	atcommand_compare@src1+1,tblptrh
 21393  00B4D4                     	if	0	;tblptru may be non-zero
 21394  00B4D4                     	endif
 21395  00B4D4                     	if	0	;tblptru may be non-zero
 21396  00B4D4                     	endif
 21397  00B4D4  0008               	tblrd		*
 21398  00B4D6  CFF5 F01F          	movff	tablat,atcommand_compare@ch
 21399                           
 21400                           ;app_atcommand.c: 320: if (ch == '%') {
 21401  00B4DA  0E25               	movlw	37
 21402  00B4DC  181F               	xorwf	atcommand_compare@ch^0,w,c
 21403  00B4DE  A4D8               	btfss	status,2,c
 21404  00B4E0  D016               	goto	l19299
 21405                           
 21406                           ;app_atcommand.c: 321: uint8_t no = *src2 - '0';
 21407  00B4E2  5015               	movf	atcommand_compare@src2^0,w,c
 21408  00B4E4  6ED9               	movwf	fsr2l,c
 21409  00B4E6  6ADA               	clrf	fsr2h,c
 21410  00B4E8  50DF               	movf	indf2,w,c
 21411  00B4EA  0FD0               	addlw	208
 21412  00B4EC  6E1E               	movwf	atcommand_compare@no^0,c
 21413                           
 21414                           ;app_atcommand.c: 322: if (no > 0 && no <= 2) {
 21415  00B4EE  501E               	movf	atcommand_compare@no^0,w,c
 21416  00B4F0  B4D8               	btfsc	status,2,c
 21417  00B4F2  D7EA               	goto	u21900
 21418  00B4F4  0E03               	movlw	3
 21419  00B4F6  601E               	cpfslt	atcommand_compare@no^0,c
 21420  00B4F8  D7E7               	goto	u21900
 21421                           
 21422                           ;app_atcommand.c: 323: *channelno = no;
 21423  00B4FA  5017               	movf	atcommand_compare@channelno^0,w,c
 21424  00B4FC  6ED9               	movwf	fsr2l,c
 21425  00B4FE  6ADA               	clrf	fsr2h,c
 21426  00B500  C01E  FFDF         	movff	atcommand_compare@no,indf2
 21427                           
 21428                           ;app_atcommand.c: 324: ch = *src2;
 21429  00B504  5015               	movf	atcommand_compare@src2^0,w,c
 21430  00B506  6ED9               	movwf	fsr2l,c
 21431  00B508  6ADA               	clrf	fsr2h,c
 21432  00B50A  50DF               	movf	indf2,w,c
 21433  00B50C  6E1F               	movwf	atcommand_compare@ch^0,c
 21434  00B50E                     l19299:
 21435                           
 21436                           ;app_atcommand.c: 327: };app_atcommand.c: 328: if (!(ch == *src2 || ch == (*src2 - 0x20)
      +                          ))
 21437  00B50E  5015               	movf	atcommand_compare@src2^0,w,c
 21438  00B510  6ED9               	movwf	fsr2l,c
 21439  00B512  6ADA               	clrf	fsr2h,c
 21440  00B514  501F               	movf	atcommand_compare@ch^0,w,c
 21441  00B516  18DE               	xorwf	postinc2,w,c
 21442  00B518  B4D8               	btfsc	status,2,c
 21443  00B51A  D018               	goto	l19307
 21444  00B51C  501F               	movf	atcommand_compare@ch^0,w,c
 21445  00B51E  6E18               	movwf	??_atcommand_compare^0,c
 21446  00B520  6A19               	clrf	(??_atcommand_compare+1)^0,c
 21447  00B522  0EE0               	movlw	224
 21448  00B524  6E1A               	movwf	(??_atcommand_compare+2)^0,c
 21449  00B526  0EFF               	movlw	255
 21450  00B528  6E1B               	movwf	(??_atcommand_compare+3)^0,c
 21451  00B52A  5015               	movf	atcommand_compare@src2^0,w,c
 21452  00B52C  6ED9               	movwf	fsr2l,c
 21453  00B52E  6ADA               	clrf	fsr2h,c
 21454  00B530  50DF               	movf	indf2,w,c
 21455  00B532  6E1C               	movwf	(??_atcommand_compare+4)^0,c
 21456  00B534  6A1D               	clrf	(??_atcommand_compare+5)^0,c
 21457  00B536  501A               	movf	(??_atcommand_compare+2)^0,w,c
 21458  00B538  261C               	addwf	(??_atcommand_compare+4)^0,f,c
 21459  00B53A  501B               	movf	(??_atcommand_compare+3)^0,w,c
 21460  00B53C  221D               	addwfc	(??_atcommand_compare+5)^0,f,c
 21461  00B53E  5018               	movf	??_atcommand_compare^0,w,c
 21462  00B540  181C               	xorwf	(??_atcommand_compare+4)^0,w,c
 21463  00B542  E1C2               	bnz	l19279
 21464  00B544  5019               	movf	(??_atcommand_compare+1)^0,w,c
 21465  00B546  181D               	xorwf	(??_atcommand_compare+5)^0,w,c
 21466  00B548  A4D8               	btfss	status,2,c
 21467  00B54A  D7BE               	goto	u21900
 21468  00B54C                     l19307:
 21469                           
 21470                           ;app_atcommand.c: 331: src1++;
 21471  00B54C  4A13               	infsnz	atcommand_compare@src1^0,f,c
 21472  00B54E  2A14               	incf	(atcommand_compare@src1+1)^0,f,c
 21473                           
 21474                           ;app_atcommand.c: 332: src2++;
 21475  00B550  2A15               	incf	atcommand_compare@src2^0,f,c
 21476  00B552                     l19309:
 21477  00B552  0616               	decf	atcommand_compare@n^0,f,c
 21478  00B554  2816               	incf	atcommand_compare@n^0,w,c
 21479  00B556  A4D8               	btfss	status,2,c
 21480  00B558  D7B9               	goto	l19283
 21481                           
 21482                           ;app_atcommand.c: 333: };app_atcommand.c: 334: return 1;
 21483  00B55A  0E01               	movlw	1
 21484  00B55C  0012               	return		;funcret
 21485  00B55E                     __end_of_atcommand_compare:
 21486                           	callstack 0
 21487                           
 21488 ;; *************** function _build_response *****************
 21489 ;; Defined at:
 21490 ;;		line 628 in file "app_atcommand.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;  status          2  109[BANK0 ] PTR const struct .
 21493 ;;		 -> g_atcommand.status(176), g_atcommand(242), 
 21494 ;; Auto vars:     Size  Location     Type
 21495 ;;  temp            4    8[BANK3 ] float 
 21496 ;;  len             1   14[BANK3 ] unsigned char 
 21497 ;;  chno            1   13[BANK3 ] unsigned char 
 21498 ;;  i               1   12[BANK3 ] unsigned char 
 21499 ;; Return value:  Size  Location     Type
 21500 ;;                  1    wreg      void 
 21501 ;; Registers used:
 21502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21503 ;; Tracked objects:
 21504 ;;		On entry : 3F/0
 21505 ;;		On exit  : 0/0
 21506 ;;		Unchanged: 0/0
 21507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21508 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21509 ;;      Locals:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0       0       0
 21510 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21511 ;;      Totals:         0       2       0       4       9       0       0       0       0       0       0       0       
      +0       0       0       0
 21512 ;;Total ram usage:       15 bytes
 21513 ;; Hardware stack levels used: 1
 21514 ;; Hardware stack levels required when called: 9
 21515 ;; This function calls:
 21516 ;;		___fleq
 21517 ;;		___flsub
 21518 ;;		__ftoa
 21519 ;;		__itoa
 21520 ;;		__strcpy
 21521 ;;		_display_sensor_value
 21522 ;;		_memcpy
 21523 ;;		_modbus_get_timeout
 21524 ;;		_modbus_set_swap
 21525 ;;		_nvm_read_flash_all
 21526 ;;		_sensMeasure_sensor_init
 21527 ;;		_sensor_temp_fahrenheit
 21528 ;;		_sprintf
 21529 ;;		_write_command
 21530 ;; This function is called by:
 21531 ;;		_atcommand_task
 21532 ;; This function uses a non-reentrant model
 21533 ;;
 21534                           
 21535                           	psect	text103
 21536  0023A0                     __ptext103:
 21537                           	callstack 0
 21538  0023A0                     _build_response:
 21539                           	callstack 20
 21540                           
 21541                           ; BSR set to: 0
 21542                           ;app_atcommand.c: 630: uint8_t i;;app_atcommand.c: 631: uint8_t chno = ((status->channel
      +                          no - 1) < 0) ? 0 : status->channelno - 1;
 21543                           
 21544                           ;incstack = 0
 21545  0023A0  C0CD  FFD9         	movff	build_response@status,fsr2l
 21546  0023A4  C0CE  FFDA         	movff	build_response@status+1,fsr2h
 21547  0023A8  50DF               	movf	indf2,w,c
 21548  0023AA  0102               	movlb	2	; () banked
 21549  0023AC  6FFC               	movwf	??_build_response& (0+255),b
 21550  0023AE  6BFD               	clrf	(??_build_response+1)& (0+255),b
 21551  0023B0  0EFF               	movlw	255
 21552  0023B2  25FC               	addwf	??_build_response& (0+255),w,b
 21553  0023B4  0EFF               	movlw	255
 21554  0023B6  21FD               	addwfc	(??_build_response+1)& (0+255),w,b
 21555  0023B8  0B80               	andlw	128
 21556  0023BA  A4D8               	btfss	status,2,c
 21557  0023BC  D00E               	goto	l33213
 21558                           
 21559                           ; BSR set to: 2
 21560  0023BE  C0CD  FFD9         	movff	build_response@status,fsr2l
 21561  0023C2  C0CE  FFDA         	movff	build_response@status+1,fsr2h
 21562  0023C6  50DF               	movf	indf2,w,c
 21563  0023C8  6FFC               	movwf	??_build_response& (0+255),b
 21564  0023CA  0EFF               	movlw	255
 21565  0023CC  25FC               	addwf	??_build_response& (0+255),w,b
 21566  0023CE  0103               	movlb	3	; () banked
 21567  0023D0  6FE9               	movwf	_build_response$4243& (0+255),b
 21568  0023D2  6BEA               	clrf	(_build_response$4243+1)& (0+255),b
 21569  0023D4  0EFF               	movlw	255
 21570  0023D6  23EA               	addwfc	(_build_response$4243+1)& (0+255),f,b
 21571  0023D8  D005               	goto	l33215
 21572  0023DA                     l33213:
 21573                           
 21574                           ; BSR set to: 2
 21575  0023DA  0E00               	movlw	0
 21576  0023DC  0103               	movlb	3	; () banked
 21577  0023DE  6FEA               	movwf	(_build_response$4243+1)& (0+255),b
 21578  0023E0  0E00               	movlw	0
 21579  0023E2  6FE9               	movwf	_build_response$4243& (0+255),b
 21580  0023E4                     l33215:
 21581                           
 21582                           ; BSR set to: 3
 21583  0023E4  C3E9  F3F0         	movff	_build_response$4243,build_response@chno
 21584                           
 21585                           ; BSR set to: 3
 21586                           ;app_atcommand.c: 632: uint8_t len = _strcpy(&writeBuffer[0], status->szcommand);
 21587  0023E8  0E08               	movlw	low _writeBuffer
 21588  0023EA  6E0F               	movwf	__strcpy@dest^0,c
 21589  0023EC  0E02               	movlw	high _writeBuffer
 21590  0023EE  6E10               	movwf	(__strcpy@dest+1)^0,c
 21591  0023F0  0E03               	movlw	3
 21592  0023F2  0100               	movlb	0	; () banked
 21593  0023F4  25CD               	addwf	build_response@status& (0+255),w,b
 21594  0023F6  6E11               	movwf	__strcpy@source^0,c
 21595  0023F8  0E00               	movlw	0
 21596  0023FA  21CE               	addwfc	(build_response@status+1)& (0+255),w,b
 21597  0023FC  6E12               	movwf	(__strcpy@source+1)^0,c
 21598  0023FE  EC4C  F063         	call	__strcpy	;wreg free
 21599  002402  500F               	movf	?__strcpy^0,w,c
 21600  002404  0103               	movlb	3	; () banked
 21601  002406  6FF1               	movwf	build_response@len& (0+255),b
 21602                           
 21603                           ; BSR set to: 3
 21604                           ;app_atcommand.c: 633: writeBuffer[len++] = ' ';
 21605  002408  0E08               	movlw	low _writeBuffer
 21606  00240A  25F1               	addwf	build_response@len& (0+255),w,b
 21607  00240C  6ED9               	movwf	fsr2l,c
 21608  00240E  6ADA               	clrf	fsr2h,c
 21609  002410  0E02               	movlw	high _writeBuffer
 21610  002412  22DA               	addwfc	fsr2h,f,c
 21611  002414  0E20               	movlw	32
 21612  002416  6EDF               	movwf	indf2,c
 21613                           
 21614                           ; BSR set to: 3
 21615  002418  2BF1               	incf	build_response@len& (0+255),f,b
 21616                           
 21617                           ; BSR set to: 3
 21618                           ;app_atcommand.c: 636: if (g_sens_measure.seq < SENS_READY) {
 21619  00241A  0E05               	movlw	5
 21620  00241C  0100               	movlb	0	; () banked
 21621  00241E  61CF               	cpfslt	_g_sens_measure& (0+255),b
 21622  002420  D007               	goto	l33229
 21623                           
 21624                           ; BSR set to: 0
 21625                           ;app_atcommand.c: 637: write_command("INITIALIZING...\r\n");
 21626  002422  0E39               	movlw	low STR_6
 21627  002424  6E16               	movwf	write_command@buff^0,c
 21628  002426  0E23               	movlw	high STR_6
 21629  002428  6E17               	movwf	(write_command@buff+1)^0,c
 21630  00242A  ECDF  F06D         	call	_write_command	;wreg free
 21631  00242E  0012               	return	
 21632  002430                     l33229:
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;app_atcommand.c: 639: };app_atcommand.c: 641: if (status->isApply) {
 21636  002430  EE20 F00E          	lfsr	2,14
 21637  002434  51CD               	movf	build_response@status& (0+255),w,b
 21638  002436  26D9               	addwf	fsr2l,f,c
 21639  002438  51CE               	movf	(build_response@status+1)& (0+255),w,b
 21640  00243A  22DA               	addwfc	fsr2h,f,c
 21641  00243C  50DF               	movf	indf2,w,c
 21642  00243E  B4D8               	btfsc	status,2,c
 21643  002440  EF2A  F018         	goto	l33477
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;app_atcommand.c: 642: if (status->atcommand >= ATCSMODEL && status->atcommand <= ATCMOD
      +                          TO)
 21647  002444  EE20 F002          	lfsr	2,2
 21648  002448  51CD               	movf	build_response@status& (0+255),w,b
 21649  00244A  26D9               	addwf	fsr2l,f,c
 21650  00244C  51CE               	movf	(build_response@status+1)& (0+255),w,b
 21651  00244E  22DA               	addwfc	fsr2h,f,c
 21652  002450  0E09               	movlw	9
 21653  002452  64DF               	cpfsgt	indf2,c
 21654  002454  D00F               	goto	l33237
 21655                           
 21656                           ; BSR set to: 0
 21657  002456  EE20 F002          	lfsr	2,2
 21658  00245A  51CD               	movf	build_response@status& (0+255),w,b
 21659  00245C  26D9               	addwf	fsr2l,f,c
 21660  00245E  51CE               	movf	(build_response@status+1)& (0+255),w,b
 21661  002460  22DA               	addwfc	fsr2h,f,c
 21662  002462  0E17               	movlw	23
 21663  002464  60DF               	cpfslt	indf2,c
 21664  002466  D006               	goto	l33237
 21665                           
 21666                           ; BSR set to: 0
 21667                           ;app_atcommand.c: 643: nvm_read_flash_all(&g_nvm.flash);
 21668  002468  0E52               	movlw	low _g_nvm
 21669  00246A  6E1F               	movwf	nvm_read_flash_all@flash^0,c
 21670  00246C  0E01               	movlw	high _g_nvm
 21671  00246E  6E20               	movwf	(nvm_read_flash_all@flash+1)^0,c
 21672  002470  ECB9  F06D         	call	_nvm_read_flash_all	;wreg free
 21673  002474                     l33237:
 21674                           
 21675                           ;app_atcommand.c: 645: if (status->atcommand >= ATCOFFG && status->atcommand <= ATCEXTM)
      +                           {
 21676  002474  0100               	movlb	0	; () banked
 21677  002476  EE20 F002          	lfsr	2,2
 21678  00247A  51CD               	movf	build_response@status& (0+255),w,b
 21679  00247C  26D9               	addwf	fsr2l,f,c
 21680  00247E  51CE               	movf	(build_response@status+1)& (0+255),w,b
 21681  002480  22DA               	addwfc	fsr2h,f,c
 21682  002482  0E16               	movlw	22
 21683  002484  64DF               	cpfsgt	indf2,c
 21684  002486  EF2A  F018         	goto	l33477
 21685                           
 21686                           ; BSR set to: 0
 21687  00248A  EE20 F002          	lfsr	2,2
 21688  00248E  51CD               	movf	build_response@status& (0+255),w,b
 21689  002490  26D9               	addwf	fsr2l,f,c
 21690  002492  51CE               	movf	(build_response@status+1)& (0+255),w,b
 21691  002494  22DA               	addwfc	fsr2h,f,c
 21692  002496  0E26               	movlw	38
 21693  002498  60DF               	cpfslt	indf2,c
 21694  00249A  EF2A  F018         	goto	l33477
 21695                           
 21696                           ; BSR set to: 0
 21697                           ;app_atcommand.c: 646: if (status->last_update == 0) memcpy(g_nvm.eeprm[chno].byte, g_ee
      +                          prmTemp[chno].byte, 62);
 21698  00249E  EE20 F001          	lfsr	2,1
 21699  0024A2  51CD               	movf	build_response@status& (0+255),w,b
 21700  0024A4  26D9               	addwf	fsr2l,f,c
 21701  0024A6  51CE               	movf	(build_response@status+1)& (0+255),w,b
 21702  0024A8  22DA               	addwfc	fsr2h,f,c
 21703  0024AA  50DF               	movf	indf2,w,c
 21704  0024AC  A4D8               	btfss	status,2,c
 21705  0024AE  EF2A  F018         	goto	l33477
 21706                           
 21707                           ; BSR set to: 0
 21708  0024B2  0103               	movlb	3	; () banked
 21709  0024B4  51F0               	movf	build_response@chno& (0+255),w,b
 21710  0024B6  0D3E               	mullw	62
 21711  0024B8  0E70               	movlw	low (_g_nvm+30)
 21712  0024BA  24F3               	addwf	243,w,c
 21713  0024BC  6E0F               	movwf	memcpy@d1^0,c
 21714  0024BE  0E01               	movlw	high (_g_nvm+30)
 21715  0024C0  20F4               	addwfc	prodh,w,c
 21716  0024C2  6E10               	movwf	(memcpy@d1+1)^0,c
 21717  0024C4  51F0               	movf	build_response@chno& (0+255),w,b
 21718  0024C6  0D3E               	mullw	62
 21719  0024C8  0E27               	movlw	low _g_eeprmTemp
 21720  0024CA  24F3               	addwf	243,w,c
 21721  0024CC  6E11               	movwf	memcpy@s1^0,c
 21722  0024CE  0E03               	movlw	high _g_eeprmTemp
 21723  0024D0  20F4               	addwfc	prodh,w,c
 21724  0024D2  6E12               	movwf	(memcpy@s1+1)^0,c
 21725  0024D4  0E00               	movlw	0
 21726  0024D6  6E14               	movwf	(memcpy@n+1)^0,c
 21727  0024D8  0E3E               	movlw	62
 21728  0024DA  6E13               	movwf	memcpy@n^0,c
 21729  0024DC  ECA6  F068         	call	_memcpy	;wreg free
 21730                           
 21731                           ; BSR set to: 0
 21732                           ;app_atcommand.c: 647: };app_atcommand.c: 648: };app_atcommand.c: 650: switch (status->a
      +                          tcommand)
 21733  0024E0  EF2A  F018         	goto	l33477
 21734  0024E4                     l33245:
 21735                           
 21736                           ; BSR set to: 0
 21737                           ;app_atcommand.c: 656: writeBuffer[len++] = 'O'; writeBuffer[len++] = 'K'; break;
 21738  0024E4  0E08               	movlw	low _writeBuffer
 21739  0024E6  0103               	movlb	3	; () banked
 21740  0024E8  25F1               	addwf	build_response@len& (0+255),w,b
 21741  0024EA  6ED9               	movwf	fsr2l,c
 21742  0024EC  6ADA               	clrf	fsr2h,c
 21743  0024EE  0E02               	movlw	high _writeBuffer
 21744  0024F0  22DA               	addwfc	fsr2h,f,c
 21745  0024F2  0E4F               	movlw	79
 21746  0024F4  6EDF               	movwf	indf2,c
 21747                           
 21748                           ; BSR set to: 3
 21749  0024F6  2BF1               	incf	build_response@len& (0+255),f,b
 21750                           
 21751                           ; BSR set to: 3
 21752  0024F8  0E08               	movlw	low _writeBuffer
 21753  0024FA  25F1               	addwf	build_response@len& (0+255),w,b
 21754  0024FC  6ED9               	movwf	fsr2l,c
 21755  0024FE  6ADA               	clrf	fsr2h,c
 21756  002500  0E02               	movlw	high _writeBuffer
 21757  002502  22DA               	addwfc	fsr2h,f,c
 21758  002504  0E4B               	movlw	75
 21759  002506  D3D7               	goto	L43
 21760  002508                     l33251:
 21761                           
 21762                           ; BSR set to: 0
 21763  002508  0E08               	movlw	low _writeBuffer
 21764  00250A  0103               	movlb	3	; () banked
 21765  00250C  25F1               	addwf	build_response@len& (0+255),w,b
 21766  00250E  6E0F               	movwf	__strcpy@dest^0,c
 21767  002510  6A10               	clrf	(__strcpy@dest+1)^0,c
 21768  002512  0E02               	movlw	high _writeBuffer
 21769  002514  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 21770  002516  0E5A               	movlw	low STR_7
 21771  002518  6E11               	movwf	__strcpy@source^0,c
 21772  00251A  0E23               	movlw	high STR_7
 21773  00251C  6E12               	movwf	(__strcpy@source+1)^0,c
 21774  00251E  EC4C  F063         	call	__strcpy	;wreg free
 21775  002522  D158               	goto	L44
 21776  002524                     l33253:
 21777                           
 21778                           ; BSR set to: 0
 21779                           ;app_atcommand.c: 660: for (i = 0 ; i < 2 ; i++) {
 21780  002524  0E00               	movlw	0
 21781  002526  0103               	movlb	3	; () banked
 21782  002528  6FEF               	movwf	build_response@i& (0+255),b
 21783  00252A                     l33255:
 21784                           
 21785                           ; BSR set to: 3
 21786  00252A  0E01               	movlw	1
 21787  00252C  65EF               	cpfsgt	build_response@i& (0+255),b
 21788  00252E  D002               	goto	l33259
 21789  002530  EFA6  F018         	goto	l33479
 21790  002534                     l33259:
 21791                           
 21792                           ; BSR set to: 3
 21793                           ;app_atcommand.c: 661: if (g_last_value[chno][i] == -999995.0f)
 21794  002534  51EF               	movf	build_response@i& (0+255),w,b
 21795  002536  0D04               	mullw	4
 21796  002538  CFF3 F2FC          	movff	prodl,??_build_response
 21797  00253C  CFF4 F2FD          	movff	prodh,??_build_response+1
 21798  002540  51F0               	movf	build_response@chno& (0+255),w,b
 21799  002542  0D0C               	mullw	12
 21800  002544  0E00               	movlw	low _g_last_value
 21801  002546  0102               	movlb	2	; () banked
 21802  002548  6FFE               	movwf	(??_build_response+2)& (0+255),b
 21803  00254A  0E01               	movlw	high _g_last_value
 21804  00254C  6FFF               	movwf	(??_build_response+3)& (0+255),b
 21805  00254E  50F3               	movf	243,w,c
 21806  002550  27FE               	addwf	(??_build_response+2)& (0+255),f,b
 21807  002552  50F4               	movf	244,w,c
 21808  002554  23FF               	addwfc	(??_build_response+3)& (0+255),f,b
 21809  002556  51FC               	movf	??_build_response& (0+255),w,b
 21810  002558  25FE               	addwf	(??_build_response+2)& (0+255),w,b
 21811  00255A  6ED9               	movwf	fsr2l,c
 21812  00255C  51FD               	movf	(??_build_response+1)& (0+255),w,b
 21813  00255E  21FF               	addwfc	(??_build_response+3)& (0+255),w,b
 21814  002560  6EDA               	movwf	fsr2h,c
 21815  002562  CFDE F091          	movff	postinc2,___fleq@ff1
 21816  002566  CFDE F092          	movff	postinc2,___fleq@ff1+1
 21817  00256A  CFDE F093          	movff	postinc2,___fleq@ff1+2
 21818  00256E  CFDE F094          	movff	postinc2,___fleq@ff1+3
 21819  002572  0EB0               	movlw	176
 21820  002574  0100               	movlb	0	; () banked
 21821  002576  6F95               	movwf	___fleq@ff2& (0+255),b
 21822  002578  0E23               	movlw	35
 21823  00257A  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 21824  00257C  0E74               	movlw	116
 21825  00257E  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 21826  002580  0EC9               	movlw	201
 21827  002582  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 21828  002584  EC32  F05F         	call	___fleq	;wreg free
 21829  002588  A0D8               	btfss	status,0,c
 21830  00258A  D00F               	goto	l33263
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;app_atcommand.c: 662: len += _strcpy(&writeBuffer[len], "----");
 21834  00258C  0E08               	movlw	low _writeBuffer
 21835  00258E  0103               	movlb	3	; () banked
 21836  002590  25F1               	addwf	build_response@len& (0+255),w,b
 21837  002592  6E0F               	movwf	__strcpy@dest^0,c
 21838  002594  6A10               	clrf	(__strcpy@dest+1)^0,c
 21839  002596  0E02               	movlw	high _writeBuffer
 21840  002598  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 21841  00259A  0E55               	movlw	low (STR_4+10)
 21842  00259C  6E11               	movwf	__strcpy@source^0,c
 21843  00259E  0E23               	movlw	high (STR_4+10)
 21844  0025A0  6E12               	movwf	(__strcpy@source+1)^0,c
 21845  0025A2  EC4C  F063         	call	__strcpy	;wreg free
 21846  0025A6  500F               	movf	?__strcpy^0,w,c
 21847  0025A8  D02B               	goto	L45
 21848  0025AA                     l33263:
 21849                           
 21850                           ; BSR set to: 0
 21851                           ;app_atcommand.c: 663: else;app_atcommand.c: 664: len += _ftoa(g_last_value[chno][i], &w
      +                          riteBuffer[len]);
 21852  0025AA  0103               	movlb	3	; () banked
 21853  0025AC  51EF               	movf	build_response@i& (0+255),w,b
 21854  0025AE  0D04               	mullw	4
 21855  0025B0  CFF3 F2FC          	movff	prodl,??_build_response
 21856  0025B4  CFF4 F2FD          	movff	prodh,??_build_response+1
 21857  0025B8  51F0               	movf	build_response@chno& (0+255),w,b
 21858  0025BA  0D0C               	mullw	12
 21859  0025BC  0E00               	movlw	low _g_last_value
 21860  0025BE  0102               	movlb	2	; () banked
 21861  0025C0  6FFE               	movwf	(??_build_response+2)& (0+255),b
 21862  0025C2  0E01               	movlw	high _g_last_value
 21863  0025C4  6FFF               	movwf	(??_build_response+3)& (0+255),b
 21864  0025C6  50F3               	movf	243,w,c
 21865  0025C8  27FE               	addwf	(??_build_response+2)& (0+255),f,b
 21866  0025CA  50F4               	movf	244,w,c
 21867  0025CC  23FF               	addwfc	(??_build_response+3)& (0+255),f,b
 21868  0025CE  51FC               	movf	??_build_response& (0+255),w,b
 21869  0025D0  25FE               	addwf	(??_build_response+2)& (0+255),w,b
 21870  0025D2  6ED9               	movwf	fsr2l,c
 21871  0025D4  51FD               	movf	(??_build_response+1)& (0+255),w,b
 21872  0025D6  21FF               	addwfc	(??_build_response+3)& (0+255),w,b
 21873  0025D8  6EDA               	movwf	fsr2h,c
 21874  0025DA  CFDE F0C3          	movff	postinc2,__ftoa@num
 21875  0025DE  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 21876  0025E2  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 21877  0025E6  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 21878  0025EA  0E08               	movlw	low _writeBuffer
 21879  0025EC  0103               	movlb	3	; () banked
 21880  0025EE  25F1               	addwf	build_response@len& (0+255),w,b
 21881  0025F0  0100               	movlb	0	; () banked
 21882  0025F2  6FC7               	movwf	__ftoa@str& (0+255),b
 21883  0025F4  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 21884  0025F6  0E02               	movlw	high _writeBuffer
 21885  0025F8  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 21886  0025FA  ECE9  F068         	call	__ftoa	;wreg free
 21887  0025FE  51C3               	movf	?__ftoa& (0+255),w,b
 21888  002600                     L45:
 21889  002600  0103               	movlb	3	; () banked
 21890  002602  27F1               	addwf	build_response@len& (0+255),f,b
 21891                           
 21892                           ; BSR set to: 3
 21893                           ;app_atcommand.c: 665: if (i != (2 - 1)) writeBuffer[len++] = ',';
 21894  002604  05EF               	decf	build_response@i& (0+255),w,b
 21895  002606  B4D8               	btfsc	status,2,c
 21896  002608  D009               	goto	l33271
 21897                           
 21898                           ; BSR set to: 3
 21899  00260A  0E08               	movlw	low _writeBuffer
 21900  00260C  25F1               	addwf	build_response@len& (0+255),w,b
 21901  00260E  6ED9               	movwf	fsr2l,c
 21902  002610  6ADA               	clrf	fsr2h,c
 21903  002612  0E02               	movlw	high _writeBuffer
 21904  002614  22DA               	addwfc	fsr2h,f,c
 21905  002616  0E2C               	movlw	44
 21906  002618  6EDF               	movwf	indf2,c
 21907                           
 21908                           ; BSR set to: 3
 21909  00261A  2BF1               	incf	build_response@len& (0+255),f,b
 21910  00261C                     l33271:
 21911                           
 21912                           ; BSR set to: 3
 21913  00261C  2BEF               	incf	build_response@i& (0+255),f,b
 21914  00261E  D785               	goto	l33255
 21915  002620                     l33275:
 21916                           
 21917                           ; BSR set to: 0
 21918                           ;app_atcommand.c: 669: if (g_sens_measure.isSensorInit[chno] == 1) {
 21919  002620  0103               	movlb	3	; () banked
 21920  002622  51F0               	movf	build_response@chno& (0+255),w,b
 21921  002624  0FD6               	addlw	low (_g_sens_measure+7)
 21922  002626  6ED9               	movwf	fsr2l,c
 21923  002628  6ADA               	clrf	fsr2h,c
 21924  00262A  04DE               	decf	postinc2,w,c
 21925  00262C  A4D8               	btfss	status,2,c
 21926  00262E  D10B               	goto	l33301
 21927                           
 21928                           ; BSR set to: 3
 21929                           ;app_atcommand.c: 670: if((g_nvm.eeprm[chno].span_uV - g_nvm.eeprm[chno].baseLine_uV) ==
      +                           0.0f ||;app_atcommand.c: 671: g_nvm.eeprm[chno].CalibrationGas == 0.0f || g_last_value[
      +                          chno][LV_GAS_PPM] == -999995.0f)
 21930  002630  51F0               	movf	build_response@chno& (0+255),w,b
 21931  002632  0D3E               	mullw	62
 21932  002634  0E7A               	movlw	low (_g_nvm+40)
 21933  002636  24F3               	addwf	243,w,c
 21934  002638  6ED9               	movwf	fsr2l,c
 21935  00263A  0E01               	movlw	high (_g_nvm+40)
 21936  00263C  20F4               	addwfc	prodh,w,c
 21937  00263E  6EDA               	movwf	fsr2h,c
 21938  002640  CFDE F064          	movff	postinc2,___flsub@a
 21939  002644  CFDE F065          	movff	postinc2,___flsub@a+1
 21940  002648  CFDE F066          	movff	postinc2,___flsub@a+2
 21941  00264C  CFDE F067          	movff	postinc2,___flsub@a+3
 21942  002650  51F0               	movf	build_response@chno& (0+255),w,b
 21943  002652  0D3E               	mullw	62
 21944  002654  0E7E               	movlw	low (_g_nvm+44)
 21945  002656  24F3               	addwf	243,w,c
 21946  002658  6ED9               	movwf	fsr2l,c
 21947  00265A  0E01               	movlw	high (_g_nvm+44)
 21948  00265C  20F4               	addwfc	prodh,w,c
 21949  00265E  6EDA               	movwf	fsr2h,c
 21950  002660  CFDE F060          	movff	postinc2,___flsub@b
 21951  002664  CFDE F061          	movff	postinc2,___flsub@b+1
 21952  002668  CFDE F062          	movff	postinc2,___flsub@b+2
 21953  00266C  CFDE F063          	movff	postinc2,___flsub@b+3
 21954  002670  EC1B  F068         	call	___flsub	;wreg free
 21955  002674  C060  F091         	movff	?___flsub,___fleq@ff1
 21956  002678  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 21957  00267C  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 21958  002680  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 21959  002684  0E00               	movlw	0
 21960  002686  0100               	movlb	0	; () banked
 21961  002688  6F95               	movwf	___fleq@ff2& (0+255),b
 21962  00268A  0E00               	movlw	0
 21963  00268C  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 21964  00268E  0E00               	movlw	0
 21965  002690  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 21966  002692  0E00               	movlw	0
 21967  002694  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 21968  002696  EC32  F05F         	call	___fleq	;wreg free
 21969  00269A  B0D8               	btfsc	status,0,c
 21970  00269C  D03C               	goto	u42390
 21971                           
 21972                           ; BSR set to: 0
 21973  00269E  0103               	movlb	3	; () banked
 21974  0026A0  51F0               	movf	build_response@chno& (0+255),w,b
 21975  0026A2  0D3E               	mullw	62
 21976  0026A4  0E82               	movlw	low (_g_nvm+48)
 21977  0026A6  24F3               	addwf	243,w,c
 21978  0026A8  6ED9               	movwf	fsr2l,c
 21979  0026AA  0E01               	movlw	high (_g_nvm+48)
 21980  0026AC  20F4               	addwfc	prodh,w,c
 21981  0026AE  6EDA               	movwf	fsr2h,c
 21982  0026B0  CFDE F091          	movff	postinc2,___fleq@ff1
 21983  0026B4  CFDE F092          	movff	postinc2,___fleq@ff1+1
 21984  0026B8  CFDE F093          	movff	postinc2,___fleq@ff1+2
 21985  0026BC  CFDE F094          	movff	postinc2,___fleq@ff1+3
 21986  0026C0  0E00               	movlw	0
 21987  0026C2  0100               	movlb	0	; () banked
 21988  0026C4  6F95               	movwf	___fleq@ff2& (0+255),b
 21989  0026C6  0E00               	movlw	0
 21990  0026C8  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 21991  0026CA  0E00               	movlw	0
 21992  0026CC  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 21993  0026CE  0E00               	movlw	0
 21994  0026D0  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 21995  0026D2  EC32  F05F         	call	___fleq	;wreg free
 21996  0026D6  B0D8               	btfsc	status,0,c
 21997  0026D8  D01E               	goto	u42390
 21998                           
 21999                           ; BSR set to: 0
 22000  0026DA  0103               	movlb	3	; () banked
 22001  0026DC  51F0               	movf	build_response@chno& (0+255),w,b
 22002  0026DE  0D0C               	mullw	12
 22003  0026E0  0E04               	movlw	low (_g_last_value+4)
 22004  0026E2  24F3               	addwf	243,w,c
 22005  0026E4  6ED9               	movwf	fsr2l,c
 22006  0026E6  0E01               	movlw	high (_g_last_value+4)
 22007  0026E8  20F4               	addwfc	prodh,w,c
 22008  0026EA  6EDA               	movwf	fsr2h,c
 22009  0026EC  CFDE F091          	movff	postinc2,___fleq@ff1
 22010  0026F0  CFDE F092          	movff	postinc2,___fleq@ff1+1
 22011  0026F4  CFDE F093          	movff	postinc2,___fleq@ff1+2
 22012  0026F8  CFDE F094          	movff	postinc2,___fleq@ff1+3
 22013  0026FC  0EB0               	movlw	176
 22014  0026FE  0100               	movlb	0	; () banked
 22015  002700  6F95               	movwf	___fleq@ff2& (0+255),b
 22016  002702  0E23               	movlw	35
 22017  002704  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 22018  002706  0E74               	movlw	116
 22019  002708  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 22020  00270A  0EC9               	movlw	201
 22021  00270C  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 22022  00270E  EC32  F05F         	call	___fleq	;wreg free
 22023  002712  A0D8               	btfss	status,0,c
 22024  002714  D00F               	goto	l33285
 22025  002716                     u42390:
 22026                           
 22027                           ; BSR set to: 0
 22028                           ;app_atcommand.c: 672: len += _strcpy(&writeBuffer[len], "----");
 22029  002716  0E08               	movlw	low _writeBuffer
 22030  002718  0103               	movlb	3	; () banked
 22031  00271A  25F1               	addwf	build_response@len& (0+255),w,b
 22032  00271C  6E0F               	movwf	__strcpy@dest^0,c
 22033  00271E  6A10               	clrf	(__strcpy@dest+1)^0,c
 22034  002720  0E02               	movlw	high _writeBuffer
 22035  002722  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 22036  002724  0E55               	movlw	low (STR_4+10)
 22037  002726  6E11               	movwf	__strcpy@source^0,c
 22038  002728  0E23               	movlw	high (STR_4+10)
 22039  00272A  6E12               	movwf	(__strcpy@source+1)^0,c
 22040  00272C  EC4C  F063         	call	__strcpy	;wreg free
 22041  002730  500F               	movf	?__strcpy^0,w,c
 22042  002732  D01B               	goto	L46
 22043  002734                     l33285:
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;app_atcommand.c: 673: else;app_atcommand.c: 674: len += _ftoa(g_last_value[chno][LV_GAS
      +                          _PPM], &writeBuffer[len]);
 22047  002734  0103               	movlb	3	; () banked
 22048  002736  51F0               	movf	build_response@chno& (0+255),w,b
 22049  002738  0D0C               	mullw	12
 22050  00273A  0E04               	movlw	low (_g_last_value+4)
 22051  00273C  24F3               	addwf	243,w,c
 22052  00273E  6ED9               	movwf	fsr2l,c
 22053  002740  0E01               	movlw	high (_g_last_value+4)
 22054  002742  20F4               	addwfc	prodh,w,c
 22055  002744  6EDA               	movwf	fsr2h,c
 22056  002746  CFDE F0C3          	movff	postinc2,__ftoa@num
 22057  00274A  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 22058  00274E  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 22059  002752  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 22060  002756  0E08               	movlw	low _writeBuffer
 22061  002758  25F1               	addwf	build_response@len& (0+255),w,b
 22062  00275A  0100               	movlb	0	; () banked
 22063  00275C  6FC7               	movwf	__ftoa@str& (0+255),b
 22064  00275E  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 22065  002760  0E02               	movlw	high _writeBuffer
 22066  002762  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 22067  002764  ECE9  F068         	call	__ftoa	;wreg free
 22068  002768  51C3               	movf	?__ftoa& (0+255),w,b
 22069  00276A                     L46:
 22070  00276A  0103               	movlb	3	; () banked
 22071  00276C  27F1               	addwf	build_response@len& (0+255),f,b
 22072                           
 22073                           ; BSR set to: 3
 22074                           ;app_atcommand.c: 675: writeBuffer[len++] = ',';
 22075  00276E  0E08               	movlw	low _writeBuffer
 22076  002770  25F1               	addwf	build_response@len& (0+255),w,b
 22077  002772  6ED9               	movwf	fsr2l,c
 22078  002774  6ADA               	clrf	fsr2h,c
 22079  002776  0E02               	movlw	high _writeBuffer
 22080  002778  22DA               	addwfc	fsr2h,f,c
 22081  00277A  0E2C               	movlw	44
 22082  00277C  6EDF               	movwf	indf2,c
 22083                           
 22084                           ; BSR set to: 3
 22085  00277E  2BF1               	incf	build_response@len& (0+255),f,b
 22086                           
 22087                           ; BSR set to: 3
 22088                           ;app_atcommand.c: 676: if(g_last_value[chno][LV_TEMP] == -999995.0f)
 22089  002780  51F0               	movf	build_response@chno& (0+255),w,b
 22090  002782  0D0C               	mullw	12
 22091  002784  0E08               	movlw	low (_g_last_value+8)
 22092  002786  24F3               	addwf	243,w,c
 22093  002788  6ED9               	movwf	fsr2l,c
 22094  00278A  0E01               	movlw	high (_g_last_value+8)
 22095  00278C  20F4               	addwfc	prodh,w,c
 22096  00278E  6EDA               	movwf	fsr2h,c
 22097  002790  CFDE F091          	movff	postinc2,___fleq@ff1
 22098  002794  CFDE F092          	movff	postinc2,___fleq@ff1+1
 22099  002798  CFDE F093          	movff	postinc2,___fleq@ff1+2
 22100  00279C  CFDE F094          	movff	postinc2,___fleq@ff1+3
 22101  0027A0  0EB0               	movlw	176
 22102  0027A2  0100               	movlb	0	; () banked
 22103  0027A4  6F95               	movwf	___fleq@ff2& (0+255),b
 22104  0027A6  0E23               	movlw	35
 22105  0027A8  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 22106  0027AA  0E74               	movlw	116
 22107  0027AC  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 22108  0027AE  0EC9               	movlw	201
 22109  0027B0  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 22110  0027B2  EC32  F05F         	call	___fleq	;wreg free
 22111  0027B6  A0D8               	btfss	status,0,c
 22112  0027B8  D00F               	goto	l33295
 22113                           
 22114                           ; BSR set to: 0
 22115                           ;app_atcommand.c: 677: len += _strcpy(&writeBuffer[len], "----");
 22116  0027BA  0E08               	movlw	low _writeBuffer
 22117  0027BC  0103               	movlb	3	; () banked
 22118  0027BE  25F1               	addwf	build_response@len& (0+255),w,b
 22119  0027C0  6E0F               	movwf	__strcpy@dest^0,c
 22120  0027C2  6A10               	clrf	(__strcpy@dest+1)^0,c
 22121  0027C4  0E02               	movlw	high _writeBuffer
 22122  0027C6  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 22123  0027C8  0E55               	movlw	low (STR_4+10)
 22124  0027CA  6E11               	movwf	__strcpy@source^0,c
 22125  0027CC  0E23               	movlw	high (STR_4+10)
 22126  0027CE  6E12               	movwf	(__strcpy@source+1)^0,c
 22127  0027D0  EC4C  F063         	call	__strcpy	;wreg free
 22128  0027D4                     L44:
 22129  0027D4  500F               	movf	?__strcpy^0,w,c
 22130  0027D6  D102               	goto	L49
 22131  0027D8                     l33295:
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;app_atcommand.c: 678: else {;app_atcommand.c: 679: float temp = g_last_value[chno][LV_T
      +                          EMP];
 22135  0027D8  0103               	movlb	3	; () banked
 22136  0027DA  51F0               	movf	build_response@chno& (0+255),w,b
 22137  0027DC  0D0C               	mullw	12
 22138  0027DE  0E08               	movlw	low (_g_last_value+8)
 22139  0027E0  24F3               	addwf	243,w,c
 22140  0027E2  6ED9               	movwf	fsr2l,c
 22141  0027E4  0E01               	movlw	high (_g_last_value+8)
 22142  0027E6  20F4               	addwfc	prodh,w,c
 22143  0027E8  6EDA               	movwf	fsr2h,c
 22144  0027EA  CFDE F3EB          	movff	postinc2,build_response@temp
 22145  0027EE  CFDE F3EC          	movff	postinc2,build_response@temp+1
 22146  0027F2  CFDE F3ED          	movff	postinc2,build_response@temp+2
 22147  0027F6  CFDE F3EE          	movff	postinc2,build_response@temp+3
 22148                           
 22149                           ;app_atcommand.c: 680: if (g_nvm.eeprm[chno].temp_corf == FAHRENHEIT)
 22150  0027FA  51F0               	movf	build_response@chno& (0+255),w,b
 22151  0027FC  0D3E               	mullw	62
 22152  0027FE  0E78               	movlw	low (_g_nvm+38)
 22153  002800  24F3               	addwf	243,w,c
 22154  002802  6ED9               	movwf	fsr2l,c
 22155  002804  0E01               	movlw	high (_g_nvm+38)
 22156  002806  20F4               	addwfc	prodh,w,c
 22157  002808  6EDA               	movwf	fsr2h,c
 22158  00280A  04DE               	decf	postinc2,w,c
 22159  00280C  A4D8               	btfss	status,2,c
 22160  00280E  D007               	goto	l33299
 22161                           
 22162                           ; BSR set to: 3
 22163                           ;app_atcommand.c: 681: sensor_temp_fahrenheit(&temp);
 22164  002810  0EEB               	movlw	low build_response@temp
 22165  002812  0100               	movlb	0	; () banked
 22166  002814  6F7D               	movwf	sensor_temp_fahrenheit@temp& (0+255),b
 22167  002816  0E03               	movlw	high build_response@temp
 22168  002818  6F7E               	movwf	(sensor_temp_fahrenheit@temp+1)& (0+255),b
 22169  00281A  EC29  F064         	call	_sensor_temp_fahrenheit	;wreg free
 22170  00281E                     l33299:
 22171                           
 22172                           ;app_atcommand.c: 682: len += _ftoa(temp, &writeBuffer[len]);
 22173  00281E  C3EB  F0C3         	movff	build_response@temp,__ftoa@num
 22174  002822  C3EC  F0C4         	movff	build_response@temp+1,__ftoa@num+1
 22175  002826  C3ED  F0C5         	movff	build_response@temp+2,__ftoa@num+2
 22176  00282A  C3EE  F0C6         	movff	build_response@temp+3,__ftoa@num+3
 22177  00282E  0E08               	movlw	low _writeBuffer
 22178  002830  0103               	movlb	3	; () banked
 22179  002832  25F1               	addwf	build_response@len& (0+255),w,b
 22180  002834  0100               	movlb	0	; () banked
 22181  002836  6FC7               	movwf	__ftoa@str& (0+255),b
 22182  002838  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 22183  00283A  0E02               	movlw	high _writeBuffer
 22184  00283C  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 22185  00283E  ECE9  F068         	call	__ftoa	;wreg free
 22186  002842                     L57:
 22187  002842  51C3               	movf	?__ftoa& (0+255),w,b
 22188  002844  D0CB               	goto	L49
 22189  002846                     l33301:
 22190                           
 22191                           ; BSR set to: 3
 22192                           ;app_atcommand.c: 685: else;app_atcommand.c: 686: {;app_atcommand.c: 687: len += _strcpy
      +                          (&writeBuffer[len], "----,----");
 22193  002846  0E08               	movlw	low _writeBuffer
 22194  002848  25F1               	addwf	build_response@len& (0+255),w,b
 22195  00284A  6E0F               	movwf	__strcpy@dest^0,c
 22196  00284C  6A10               	clrf	(__strcpy@dest+1)^0,c
 22197  00284E  0E02               	movlw	high _writeBuffer
 22198  002850  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 22199  002852  0E50               	movlw	low (STR_4+5)
 22200  002854  6E11               	movwf	__strcpy@source^0,c
 22201  002856  0E23               	movlw	high (STR_4+5)
 22202  002858  6E12               	movwf	(__strcpy@source+1)^0,c
 22203  00285A  EC4C  F063         	call	__strcpy	;wreg free
 22204  00285E  D7BA               	goto	L44
 22205  002860                     l33303:
 22206                           
 22207                           ; BSR set to: 0
 22208                           ;app_atcommand.c: 691: len = display_sensor_value(0, chno, len);
 22209  002860  C3F0  F0CB         	movff	build_response@chno,display_sensor_value@chno
 22210  002864  C3F1  F0CC         	movff	build_response@len,display_sensor_value@strlen
 22211  002868  0E00               	movlw	0
 22212  00286A  ECC4  F02A         	call	_display_sensor_value
 22213  00286E  D007               	goto	L50
 22214  002870                     l33305:
 22215                           
 22216                           ; BSR set to: 0
 22217                           ;app_atcommand.c: 694: len = display_sensor_value(1, chno, len);
 22218  002870  C3F0  F0CB         	movff	build_response@chno,display_sensor_value@chno
 22219  002874  C3F1  F0CC         	movff	build_response@len,display_sensor_value@strlen
 22220  002878  0E01               	movlw	1
 22221  00287A  ECC4  F02A         	call	_display_sensor_value
 22222  00287E                     L50:
 22223  00287E  6FF1               	movwf	build_response@len& (0+255),b
 22224                           
 22225                           ;app_atcommand.c: 695: break;
 22226  002880  EFA6  F018         	goto	l33479
 22227  002884                     l33307:
 22228                           
 22229                           ; BSR set to: 0
 22230  002884  0103               	movlb	3	; () banked
 22231  002886  07F1               	decf	build_response@len& (0+255),f,b
 22232  002888                     l33309:
 22233  002888  0E00               	movlw	0
 22234  00288A  0103               	movlb	3	; () banked
 22235  00288C  6FEF               	movwf	build_response@i& (0+255),b
 22236  00288E                     l33311:
 22237                           
 22238                           ; BSR set to: 3
 22239  00288E  0E07               	movlw	7
 22240  002890  65EF               	cpfsgt	build_response@i& (0+255),b
 22241  002892  D002               	goto	l33315
 22242  002894  EFA6  F018         	goto	l33479
 22243  002898                     l33315:
 22244                           
 22245                           ; BSR set to: 3
 22246  002898  0E68               	movlw	low (_g_nvm+22)
 22247  00289A  25EF               	addwf	build_response@i& (0+255),w,b
 22248  00289C  6ED9               	movwf	fsr2l,c
 22249  00289E  6ADA               	clrf	fsr2h,c
 22250  0028A0  0E01               	movlw	high (_g_nvm+22)
 22251  0028A2  22DA               	addwfc	fsr2h,f,c
 22252  0028A4  0E08               	movlw	low _writeBuffer
 22253  0028A6  25F1               	addwf	build_response@len& (0+255),w,b
 22254  0028A8  6EE1               	movwf	fsr1l,c
 22255  0028AA  6AE2               	clrf	fsr1h,c
 22256  0028AC  0E02               	movlw	high _writeBuffer
 22257  0028AE  22E2               	addwfc	fsr1h,f,c
 22258  0028B0  CFDF FFE7          	movff	indf2,indf1
 22259                           
 22260                           ; BSR set to: 3
 22261  0028B4  2BF1               	incf	build_response@len& (0+255),f,b
 22262                           
 22263                           ; BSR set to: 3
 22264  0028B6  2BEF               	incf	build_response@i& (0+255),f,b
 22265  0028B8  D7EA               	goto	l33311
 22266  0028BA                     l33323:
 22267                           
 22268                           ; BSR set to: 0
 22269                           ;app_atcommand.c: 703: if (status->last_update) {
 22270  0028BA  EE20 F001          	lfsr	2,1
 22271  0028BE  51CD               	movf	build_response@status& (0+255),w,b
 22272  0028C0  26D9               	addwf	fsr2l,f,c
 22273  0028C2  51CE               	movf	(build_response@status+1)& (0+255),w,b
 22274  0028C4  22DA               	addwfc	fsr2h,f,c
 22275  0028C6  50DF               	movf	indf2,w,c
 22276  0028C8  B4D8               	btfsc	status,2,c
 22277  0028CA  D012               	goto	l33331
 22278                           
 22279                           ; BSR set to: 0
 22280                           ;app_atcommand.c: 704: writeBuffer[len++] = 'O'; writeBuffer[len++] = 'K';
 22281  0028CC  0E08               	movlw	low _writeBuffer
 22282  0028CE  0103               	movlb	3	; () banked
 22283  0028D0  25F1               	addwf	build_response@len& (0+255),w,b
 22284  0028D2  6ED9               	movwf	fsr2l,c
 22285  0028D4  6ADA               	clrf	fsr2h,c
 22286  0028D6  0E02               	movlw	high _writeBuffer
 22287  0028D8  22DA               	addwfc	fsr2h,f,c
 22288  0028DA  0E4F               	movlw	79
 22289  0028DC  6EDF               	movwf	indf2,c
 22290                           
 22291                           ; BSR set to: 3
 22292  0028DE  2BF1               	incf	build_response@len& (0+255),f,b
 22293                           
 22294                           ; BSR set to: 3
 22295  0028E0  0E08               	movlw	low _writeBuffer
 22296  0028E2  25F1               	addwf	build_response@len& (0+255),w,b
 22297  0028E4  6ED9               	movwf	fsr2l,c
 22298  0028E6  6ADA               	clrf	fsr2h,c
 22299  0028E8  0E02               	movlw	high _writeBuffer
 22300  0028EA  22DA               	addwfc	fsr2h,f,c
 22301  0028EC  0E4B               	movlw	75
 22302  0028EE  D023               	goto	L54
 22303  0028F0                     l33331:
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;app_atcommand.c: 706: else { writeBuffer[len++] = 'F'; writeBuffer[len++] = 'A'; writeB
      +                          uffer[len++] = 'I'; writeBuffer[len++] = 'L'; }
 22307  0028F0  0E08               	movlw	low _writeBuffer
 22308  0028F2  0103               	movlb	3	; () banked
 22309  0028F4  25F1               	addwf	build_response@len& (0+255),w,b
 22310  0028F6  6ED9               	movwf	fsr2l,c
 22311  0028F8  6ADA               	clrf	fsr2h,c
 22312  0028FA  0E02               	movlw	high _writeBuffer
 22313  0028FC  22DA               	addwfc	fsr2h,f,c
 22314  0028FE  0E46               	movlw	70
 22315  002900  6EDF               	movwf	indf2,c
 22316                           
 22317                           ; BSR set to: 3
 22318  002902  2BF1               	incf	build_response@len& (0+255),f,b
 22319                           
 22320                           ; BSR set to: 3
 22321  002904  0E08               	movlw	low _writeBuffer
 22322  002906  25F1               	addwf	build_response@len& (0+255),w,b
 22323  002908  6ED9               	movwf	fsr2l,c
 22324  00290A  6ADA               	clrf	fsr2h,c
 22325  00290C  0E02               	movlw	high _writeBuffer
 22326  00290E  22DA               	addwfc	fsr2h,f,c
 22327  002910  0E41               	movlw	65
 22328  002912  6EDF               	movwf	indf2,c
 22329  002914  2BF1               	incf	build_response@len& (0+255),f,b
 22330                           
 22331                           ; BSR set to: 3
 22332  002916  0E08               	movlw	low _writeBuffer
 22333  002918  25F1               	addwf	build_response@len& (0+255),w,b
 22334  00291A  6ED9               	movwf	fsr2l,c
 22335  00291C  6ADA               	clrf	fsr2h,c
 22336  00291E  0E02               	movlw	high _writeBuffer
 22337  002920  22DA               	addwfc	fsr2h,f,c
 22338  002922  0E49               	movlw	73
 22339  002924  6EDF               	movwf	indf2,c
 22340                           
 22341                           ; BSR set to: 3
 22342  002926  2BF1               	incf	build_response@len& (0+255),f,b
 22343  002928  0E08               	movlw	low _writeBuffer
 22344  00292A  25F1               	addwf	build_response@len& (0+255),w,b
 22345  00292C  6ED9               	movwf	fsr2l,c
 22346  00292E  6ADA               	clrf	fsr2h,c
 22347  002930  0E02               	movlw	high _writeBuffer
 22348  002932  22DA               	addwfc	fsr2h,f,c
 22349  002934  0E4C               	movlw	76
 22350  002936                     L54:
 22351  002936  6EDF               	movwf	indf2,c
 22352                           
 22353                           ; BSR set to: 3
 22354  002938  2BF1               	incf	build_response@len& (0+255),f,b
 22355  00293A                     l33343:
 22356                           
 22357                           ;app_atcommand.c: 707: sensMeasure_sensor_init();
 22358  00293A  ECAF  F05A         	call	_sensMeasure_sensor_init	;wreg free
 22359                           
 22360                           ;app_atcommand.c: 708: break;
 22361  00293E  EFA6  F018         	goto	l33479
 22362  002942                     l33345:
 22363                           
 22364                           ; BSR set to: 0
 22365  002942  0101               	movlb	1	; () banked
 22366  002944  5153               	movf	(_g_nvm+1)& (0+255),w,b
 22367  002946  6E1D               	movwf	__itoa@num^0,c
 22368  002948  6A1E               	clrf	(__itoa@num+1)^0,c
 22369  00294A  6A1F               	clrf	(__itoa@num+2)^0,c
 22370  00294C  6A20               	clrf	(__itoa@num+3)^0,c
 22371  00294E  0E08               	movlw	low _writeBuffer
 22372  002950  0103               	movlb	3	; () banked
 22373  002952  25F1               	addwf	build_response@len& (0+255),w,b
 22374  002954  6E21               	movwf	__itoa@str^0,c
 22375  002956  6A22               	clrf	(__itoa@str+1)^0,c
 22376  002958  0E02               	movlw	high _writeBuffer
 22377  00295A  2222               	addwfc	(__itoa@str+1)^0,f,c
 22378  00295C  EC5D  F049         	call	__itoa	;wreg free
 22379  002960  501D               	movf	?__itoa^0,w,c
 22380  002962  0103               	movlb	3	; () banked
 22381  002964  27F1               	addwf	build_response@len& (0+255),f,b
 22382                           
 22383                           ; BSR set to: 3
 22384                           ;app_atcommand.c: 712: if (status->last_update) g_modbus.seq = MODBUS_INIT; break;
 22385  002966  0100               	movlb	0	; () banked
 22386  002968  EE20 F001          	lfsr	2,1
 22387  00296C  51CD               	movf	build_response@status& (0+255),w,b
 22388  00296E  26D9               	addwf	fsr2l,f,c
 22389  002970  51CE               	movf	(build_response@status+1)& (0+255),w,b
 22390  002972  22DA               	addwfc	fsr2h,f,c
 22391  002974  50DF               	movf	indf2,w,c
 22392  002976  B4D8               	btfsc	status,2,c
 22393  002978  D3E9               	goto	l33479
 22394  00297A                     u42440:
 22395                           
 22396                           ; BSR set to: 0
 22397  00297A  0E00               	movlw	0
 22398  00297C  0101               	movlb	1	; () banked
 22399  00297E  6F24               	movwf	_g_modbus& (0+255),b
 22400  002980  D3E5               	goto	l33479
 22401  002982                     l33351:
 22402                           
 22403                           ; BSR set to: 0
 22404  002982  0101               	movlb	1	; () banked
 22405  002984  5154               	movf	(_g_nvm+2)& (0+255),w,b
 22406  002986  6E1D               	movwf	__itoa@num^0,c
 22407  002988  6A1E               	clrf	(__itoa@num+1)^0,c
 22408  00298A  6A1F               	clrf	(__itoa@num+2)^0,c
 22409  00298C  6A20               	clrf	(__itoa@num+3)^0,c
 22410  00298E  0E08               	movlw	low _writeBuffer
 22411  002990  0103               	movlb	3	; () banked
 22412  002992  25F1               	addwf	build_response@len& (0+255),w,b
 22413  002994  6E21               	movwf	__itoa@str^0,c
 22414  002996  6A22               	clrf	(__itoa@str+1)^0,c
 22415  002998  0E02               	movlw	high _writeBuffer
 22416  00299A  2222               	addwfc	(__itoa@str+1)^0,f,c
 22417  00299C  EC5D  F049         	call	__itoa	;wreg free
 22418  0029A0                     L52:
 22419  0029A0  501D               	movf	?__itoa^0,w,c
 22420  0029A2  0103               	movlb	3	; () banked
 22421  0029A4  27F1               	addwf	build_response@len& (0+255),f,b
 22422                           
 22423                           ; BSR set to: 3
 22424                           ;app_atcommand.c: 714: if (status->last_update) g_modbus.seq = MODBUS_INIT; break;
 22425  0029A6  0100               	movlb	0	; () banked
 22426  0029A8  EE20 F001          	lfsr	2,1
 22427  0029AC  51CD               	movf	build_response@status& (0+255),w,b
 22428  0029AE  26D9               	addwf	fsr2l,f,c
 22429  0029B0  51CE               	movf	(build_response@status+1)& (0+255),w,b
 22430  0029B2  22DA               	addwfc	fsr2h,f,c
 22431  0029B4  50DF               	movf	indf2,w,c
 22432  0029B6  A4D8               	btfss	status,2,c
 22433  0029B8  D7E0               	goto	u42440
 22434  0029BA  D3C8               	goto	l33479
 22435  0029BC                     l33357:
 22436                           
 22437                           ; BSR set to: 0
 22438  0029BC  0101               	movlb	1	; () banked
 22439  0029BE  5155               	movf	(_g_nvm+3)& (0+255),w,b
 22440  0029C0  6E1D               	movwf	__itoa@num^0,c
 22441  0029C2  6A1E               	clrf	(__itoa@num+1)^0,c
 22442  0029C4  6A1F               	clrf	(__itoa@num+2)^0,c
 22443  0029C6  6A20               	clrf	(__itoa@num+3)^0,c
 22444  0029C8  0E08               	movlw	low _writeBuffer
 22445  0029CA  0103               	movlb	3	; () banked
 22446  0029CC  25F1               	addwf	build_response@len& (0+255),w,b
 22447  0029CE  6E21               	movwf	__itoa@str^0,c
 22448  0029D0  6A22               	clrf	(__itoa@str+1)^0,c
 22449  0029D2  0E02               	movlw	high _writeBuffer
 22450  0029D4  2222               	addwfc	(__itoa@str+1)^0,f,c
 22451  0029D6  EC5D  F049         	call	__itoa	;wreg free
 22452  0029DA  D33A               	goto	L64
 22453  0029DC                     L49:
 22454  0029DC  0103               	movlb	3	; () banked
 22455  0029DE  27F1               	addwf	build_response@len& (0+255),f,b
 22456  0029E0  D3B5               	goto	l33479
 22457  0029E2                     l33359:
 22458                           
 22459                           ; BSR set to: 0
 22460  0029E2  0101               	movlb	1	; () banked
 22461  0029E4  5156               	movf	(_g_nvm+4)& (0+255),w,b
 22462  0029E6  6E1D               	movwf	__itoa@num^0,c
 22463  0029E8  6A1E               	clrf	(__itoa@num+1)^0,c
 22464  0029EA  6A1F               	clrf	(__itoa@num+2)^0,c
 22465  0029EC  6A20               	clrf	(__itoa@num+3)^0,c
 22466  0029EE  0E08               	movlw	low _writeBuffer
 22467  0029F0  0103               	movlb	3	; () banked
 22468  0029F2  25F1               	addwf	build_response@len& (0+255),w,b
 22469  0029F4  6E21               	movwf	__itoa@str^0,c
 22470  0029F6  6A22               	clrf	(__itoa@str+1)^0,c
 22471  0029F8  0E02               	movlw	high _writeBuffer
 22472  0029FA  2222               	addwfc	(__itoa@str+1)^0,f,c
 22473  0029FC  EC5D  F049         	call	__itoa	;wreg free
 22474  002A00  D327               	goto	L64
 22475  002A02                     l33361:
 22476                           
 22477                           ; BSR set to: 0
 22478  002A02  0101               	movlb	1	; () banked
 22479  002A04  5157               	movf	(_g_nvm+5)& (0+255),w,b
 22480  002A06  6E1D               	movwf	__itoa@num^0,c
 22481  002A08  6A1E               	clrf	(__itoa@num+1)^0,c
 22482  002A0A  6A1F               	clrf	(__itoa@num+2)^0,c
 22483  002A0C  6A20               	clrf	(__itoa@num+3)^0,c
 22484  002A0E  0E08               	movlw	low _writeBuffer
 22485  002A10  0103               	movlb	3	; () banked
 22486  002A12  25F1               	addwf	build_response@len& (0+255),w,b
 22487  002A14  6E21               	movwf	__itoa@str^0,c
 22488  002A16  6A22               	clrf	(__itoa@str+1)^0,c
 22489  002A18  0E02               	movlw	high _writeBuffer
 22490  002A1A  2222               	addwfc	(__itoa@str+1)^0,f,c
 22491  002A1C  EC5D  F049         	call	__itoa	;wreg free
 22492  002A20  D317               	goto	L64
 22493  002A22                     l33363:
 22494                           
 22495                           ; BSR set to: 0
 22496  002A22  C158  F0C3         	movff	_g_nvm+6,__ftoa@num
 22497  002A26  C159  F0C4         	movff	_g_nvm+7,__ftoa@num+1
 22498  002A2A  C15A  F0C5         	movff	_g_nvm+8,__ftoa@num+2
 22499  002A2E  C15B  F0C6         	movff	_g_nvm+9,__ftoa@num+3
 22500  002A32  0E08               	movlw	low _writeBuffer
 22501  002A34  0103               	movlb	3	; () banked
 22502  002A36  25F1               	addwf	build_response@len& (0+255),w,b
 22503  002A38  0100               	movlb	0	; () banked
 22504  002A3A  6FC7               	movwf	__ftoa@str& (0+255),b
 22505  002A3C  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 22506  002A3E  0E02               	movlw	high _writeBuffer
 22507  002A40  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 22508  002A42  ECE9  F068         	call	__ftoa	;wreg free
 22509  002A46  D6FD               	goto	L57
 22510  002A48                     l33365:
 22511                           
 22512                           ; BSR set to: 0
 22513  002A48  C15C  F01D         	movff	_g_nvm+10,__itoa@num
 22514  002A4C  C15D  F01E         	movff	_g_nvm+11,__itoa@num+1
 22515  002A50  C15E  F01F         	movff	_g_nvm+12,__itoa@num+2
 22516  002A54  C15F  F020         	movff	_g_nvm+13,__itoa@num+3
 22517  002A58  0E08               	movlw	low _writeBuffer
 22518  002A5A  0103               	movlb	3	; () banked
 22519  002A5C  25F1               	addwf	build_response@len& (0+255),w,b
 22520  002A5E  6E21               	movwf	__itoa@str^0,c
 22521  002A60  6A22               	clrf	(__itoa@str+1)^0,c
 22522  002A62  0E02               	movlw	high _writeBuffer
 22523  002A64  2222               	addwfc	(__itoa@str+1)^0,f,c
 22524  002A66  EC5D  F049         	call	__itoa	;wreg free
 22525  002A6A  D2F2               	goto	L64
 22526  002A6C                     l33367:
 22527                           
 22528                           ; BSR set to: 0
 22529  002A6C  0101               	movlb	1	; () banked
 22530  002A6E  5160               	movf	(_g_nvm+14)& (0+255),w,b
 22531  002A70  6E1D               	movwf	__itoa@num^0,c
 22532  002A72  6A1E               	clrf	(__itoa@num+1)^0,c
 22533  002A74  6A1F               	clrf	(__itoa@num+2)^0,c
 22534  002A76  6A20               	clrf	(__itoa@num+3)^0,c
 22535  002A78  0E08               	movlw	low _writeBuffer
 22536  002A7A  0103               	movlb	3	; () banked
 22537  002A7C  25F1               	addwf	build_response@len& (0+255),w,b
 22538  002A7E  6E21               	movwf	__itoa@str^0,c
 22539  002A80  6A22               	clrf	(__itoa@str+1)^0,c
 22540  002A82  0E02               	movlw	high _writeBuffer
 22541  002A84  2222               	addwfc	(__itoa@str+1)^0,f,c
 22542  002A86  EC5D  F049         	call	__itoa	;wreg free
 22543  002A8A  501D               	movf	?__itoa^0,w,c
 22544  002A8C  0103               	movlb	3	; () banked
 22545  002A8E  27F1               	addwf	build_response@len& (0+255),f,b
 22546                           
 22547                           ; BSR set to: 3
 22548                           ;app_atcommand.c: 723: if (status->last_update) modbus_set_swap((bool)g_nvm.flash.byte_s
      +                          wap); break;
 22549  002A90  0100               	movlb	0	; () banked
 22550  002A92  EE20 F001          	lfsr	2,1
 22551  002A96  51CD               	movf	build_response@status& (0+255),w,b
 22552  002A98  26D9               	addwf	fsr2l,f,c
 22553  002A9A  51CE               	movf	(build_response@status+1)& (0+255),w,b
 22554  002A9C  22DA               	addwfc	fsr2h,f,c
 22555  002A9E  50DF               	movf	indf2,w,c
 22556  002AA0  B4D8               	btfsc	status,2,c
 22557  002AA2  D354               	goto	l33479
 22558                           
 22559                           ; BSR set to: 0
 22560  002AA4  0101               	movlb	1	; () banked
 22561  002AA6  5160               	movf	(_g_nvm+14)& (0+255),w,b
 22562  002AA8  EC77  F06F         	call	_modbus_set_swap
 22563  002AAC  D34F               	goto	l33479
 22564  002AAE                     l33373:
 22565                           
 22566                           ; BSR set to: 0
 22567  002AAE  0101               	movlb	1	; () banked
 22568  002AB0  5161               	movf	(_g_nvm+15)& (0+255),w,b
 22569  002AB2  6E1D               	movwf	__itoa@num^0,c
 22570  002AB4  6A1E               	clrf	(__itoa@num+1)^0,c
 22571  002AB6  6A1F               	clrf	(__itoa@num+2)^0,c
 22572  002AB8  6A20               	clrf	(__itoa@num+3)^0,c
 22573  002ABA  0E08               	movlw	low _writeBuffer
 22574  002ABC  0103               	movlb	3	; () banked
 22575  002ABE  25F1               	addwf	build_response@len& (0+255),w,b
 22576  002AC0  6E21               	movwf	__itoa@str^0,c
 22577  002AC2  6A22               	clrf	(__itoa@str+1)^0,c
 22578  002AC4  0E02               	movlw	high _writeBuffer
 22579  002AC6  2222               	addwfc	(__itoa@str+1)^0,f,c
 22580  002AC8  EC5D  F049         	call	__itoa	;wreg free
 22581  002ACC  D769               	goto	L52
 22582  002ACE                     l33379:
 22583                           
 22584                           ; BSR set to: 0
 22585  002ACE  0101               	movlb	1	; () banked
 22586  002AD0  5162               	movf	(_g_nvm+16)& (0+255),w,b
 22587  002AD2  6E1D               	movwf	__itoa@num^0,c
 22588  002AD4  6A1E               	clrf	(__itoa@num+1)^0,c
 22589  002AD6  6A1F               	clrf	(__itoa@num+2)^0,c
 22590  002AD8  6A20               	clrf	(__itoa@num+3)^0,c
 22591  002ADA  0E08               	movlw	low _writeBuffer
 22592  002ADC  0103               	movlb	3	; () banked
 22593  002ADE  25F1               	addwf	build_response@len& (0+255),w,b
 22594  002AE0  6E21               	movwf	__itoa@str^0,c
 22595  002AE2  6A22               	clrf	(__itoa@str+1)^0,c
 22596  002AE4  0E02               	movlw	high _writeBuffer
 22597  002AE6  2222               	addwfc	(__itoa@str+1)^0,f,c
 22598  002AE8  EC5D  F049         	call	__itoa	;wreg free
 22599  002AEC  D759               	goto	L52
 22600  002AEE                     l33385:
 22601                           
 22602                           ; BSR set to: 0
 22603  002AEE  0101               	movlb	1	; () banked
 22604  002AF0  5163               	movf	(_g_nvm+17)& (0+255),w,b
 22605  002AF2  6E1D               	movwf	__itoa@num^0,c
 22606  002AF4  6A1E               	clrf	(__itoa@num+1)^0,c
 22607  002AF6  6A1F               	clrf	(__itoa@num+2)^0,c
 22608  002AF8  6A20               	clrf	(__itoa@num+3)^0,c
 22609  002AFA  0E08               	movlw	low _writeBuffer
 22610  002AFC  0103               	movlb	3	; () banked
 22611  002AFE  25F1               	addwf	build_response@len& (0+255),w,b
 22612  002B00  6E21               	movwf	__itoa@str^0,c
 22613  002B02  6A22               	clrf	(__itoa@str+1)^0,c
 22614  002B04  0E02               	movlw	high _writeBuffer
 22615  002B06  2222               	addwfc	(__itoa@str+1)^0,f,c
 22616  002B08  EC5D  F049         	call	__itoa	;wreg free
 22617  002B0C  501D               	movf	?__itoa^0,w,c
 22618  002B0E  0103               	movlb	3	; () banked
 22619  002B10  27F1               	addwf	build_response@len& (0+255),f,b
 22620                           
 22621                           ; BSR set to: 3
 22622                           ;app_atcommand.c: 729: if (status->last_update) g_modbus.timeout = modbus_get_timeout(g_
      +                          nvm.flash.timeout); break;
 22623  002B12  0100               	movlb	0	; () banked
 22624  002B14  EE20 F001          	lfsr	2,1
 22625  002B18  51CD               	movf	build_response@status& (0+255),w,b
 22626  002B1A  26D9               	addwf	fsr2l,f,c
 22627  002B1C  51CE               	movf	(build_response@status+1)& (0+255),w,b
 22628  002B1E  22DA               	addwfc	fsr2h,f,c
 22629  002B20  50DF               	movf	indf2,w,c
 22630  002B22  B4D8               	btfsc	status,2,c
 22631  002B24  D313               	goto	l33479
 22632                           
 22633                           ; BSR set to: 0
 22634  002B26  0101               	movlb	1	; () banked
 22635  002B28  5163               	movf	(_g_nvm+17)& (0+255),w,b
 22636  002B2A  EC8B  F06E         	call	_modbus_get_timeout
 22637  002B2E  0101               	movlb	1	; () banked
 22638  002B30  6F25               	movwf	(_g_modbus+1)& (0+255),b
 22639  002B32  D30C               	goto	l33479
 22640  002B34                     l33391:
 22641                           
 22642                           ; BSR set to: 0
 22643  002B34  0103               	movlb	3	; () banked
 22644  002B36  51F0               	movf	build_response@chno& (0+255),w,b
 22645  002B38  0D3E               	mullw	62
 22646  002B3A  0E70               	movlw	low (_g_nvm+30)
 22647  002B3C  24F3               	addwf	243,w,c
 22648  002B3E  6ED9               	movwf	fsr2l,c
 22649  002B40  0E01               	movlw	high (_g_nvm+30)
 22650  002B42  20F4               	addwfc	prodh,w,c
 22651  002B44  6EDA               	movwf	fsr2h,c
 22652  002B46  50DF               	movf	indf2,w,c
 22653  002B48  0102               	movlb	2	; () banked
 22654  002B4A  6FFC               	movwf	??_build_response& (0+255),b
 22655  002B4C  51FC               	movf	??_build_response& (0+255),w,b
 22656  002B4E  6E1D               	movwf	__itoa@num^0,c
 22657  002B50  6A1E               	clrf	(__itoa@num+1)^0,c
 22658  002B52  6A1F               	clrf	(__itoa@num+2)^0,c
 22659  002B54  6A20               	clrf	(__itoa@num+3)^0,c
 22660  002B56  0E08               	movlw	low _writeBuffer
 22661  002B58  0103               	movlb	3	; () banked
 22662  002B5A  25F1               	addwf	build_response@len& (0+255),w,b
 22663  002B5C  6E21               	movwf	__itoa@str^0,c
 22664  002B5E  6A22               	clrf	(__itoa@str+1)^0,c
 22665  002B60  0E02               	movlw	high _writeBuffer
 22666  002B62  2222               	addwfc	(__itoa@str+1)^0,f,c
 22667  002B64  EC5D  F049         	call	__itoa	;wreg free
 22668  002B68  D273               	goto	L64
 22669  002B6A                     l33393:
 22670                           
 22671                           ; BSR set to: 0
 22672  002B6A  0103               	movlb	3	; () banked
 22673  002B6C  51F0               	movf	build_response@chno& (0+255),w,b
 22674  002B6E  0D3E               	mullw	62
 22675  002B70  0E71               	movlw	low (_g_nvm+31)
 22676  002B72  24F3               	addwf	243,w,c
 22677  002B74  6ED9               	movwf	fsr2l,c
 22678  002B76  0E01               	movlw	high (_g_nvm+31)
 22679  002B78  20F4               	addwfc	prodh,w,c
 22680  002B7A  6EDA               	movwf	fsr2h,c
 22681  002B7C  50DF               	movf	indf2,w,c
 22682  002B7E  0102               	movlb	2	; () banked
 22683  002B80  6FFC               	movwf	??_build_response& (0+255),b
 22684  002B82  51FC               	movf	??_build_response& (0+255),w,b
 22685  002B84  6E1D               	movwf	__itoa@num^0,c
 22686  002B86  6A1E               	clrf	(__itoa@num+1)^0,c
 22687  002B88  6A1F               	clrf	(__itoa@num+2)^0,c
 22688  002B8A  6A20               	clrf	(__itoa@num+3)^0,c
 22689  002B8C  0E08               	movlw	low _writeBuffer
 22690  002B8E  0103               	movlb	3	; () banked
 22691  002B90  25F1               	addwf	build_response@len& (0+255),w,b
 22692  002B92  6E21               	movwf	__itoa@str^0,c
 22693  002B94  6A22               	clrf	(__itoa@str+1)^0,c
 22694  002B96  0E02               	movlw	high _writeBuffer
 22695  002B98  2222               	addwfc	(__itoa@str+1)^0,f,c
 22696  002B9A  EC5D  F049         	call	__itoa	;wreg free
 22697  002B9E  501D               	movf	?__itoa^0,w,c
 22698  002BA0  0103               	movlb	3	; () banked
 22699  002BA2  27F1               	addwf	build_response@len& (0+255),f,b
 22700                           
 22701                           ; BSR set to: 3
 22702                           ;app_atcommand.c: 734: if (status->last_update) sensMeasure_sensor_init(); break;
 22703  002BA4  0100               	movlb	0	; () banked
 22704  002BA6  EE20 F001          	lfsr	2,1
 22705  002BAA  51CD               	movf	build_response@status& (0+255),w,b
 22706  002BAC  26D9               	addwf	fsr2l,f,c
 22707  002BAE  51CE               	movf	(build_response@status+1)& (0+255),w,b
 22708  002BB0  22DA               	addwfc	fsr2h,f,c
 22709  002BB2  50DF               	movf	indf2,w,c
 22710  002BB4  A4D8               	btfss	status,2,c
 22711  002BB6  D6C1               	goto	l33343
 22712  002BB8  D2C9               	goto	l33479
 22713  002BBA                     l33399:
 22714                           
 22715                           ; BSR set to: 0
 22716  002BBA  0103               	movlb	3	; () banked
 22717  002BBC  51F0               	movf	build_response@chno& (0+255),w,b
 22718  002BBE  0D3E               	mullw	62
 22719  002BC0  0EA7               	movlw	low (_g_nvm+85)
 22720  002BC2  24F3               	addwf	243,w,c
 22721  002BC4  6ED9               	movwf	fsr2l,c
 22722  002BC6  0E01               	movlw	high (_g_nvm+85)
 22723  002BC8  20F4               	addwfc	prodh,w,c
 22724  002BCA  6EDA               	movwf	fsr2h,c
 22725  002BCC  0E00               	movlw	0
 22726  002BCE  6EDF               	movwf	indf2,c
 22727                           
 22728                           ; BSR set to: 3
 22729  002BD0  0E08               	movlw	low _writeBuffer
 22730  002BD2  25F1               	addwf	build_response@len& (0+255),w,b
 22731  002BD4  6E0F               	movwf	__strcpy@dest^0,c
 22732  002BD6  6A10               	clrf	(__strcpy@dest+1)^0,c
 22733  002BD8  0E02               	movlw	high _writeBuffer
 22734  002BDA  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 22735  002BDC  51F0               	movf	build_response@chno& (0+255),w,b
 22736  002BDE  0D3E               	mullw	62
 22737  002BE0  0E9E               	movlw	low (_g_nvm+76)
 22738  002BE2  24F3               	addwf	243,w,c
 22739  002BE4  6E11               	movwf	__strcpy@source^0,c
 22740  002BE6  0E01               	movlw	high (_g_nvm+76)
 22741  002BE8  20F4               	addwfc	prodh,w,c
 22742  002BEA  6E12               	movwf	(__strcpy@source+1)^0,c
 22743  002BEC  EC4C  F063         	call	__strcpy	;wreg free
 22744  002BF0  D5F1               	goto	L44
 22745  002BF2                     l33403:
 22746                           
 22747                           ; BSR set to: 0
 22748  002BF2  0103               	movlb	3	; () banked
 22749  002BF4  51F0               	movf	build_response@chno& (0+255),w,b
 22750  002BF6  0D3E               	mullw	62
 22751  002BF8  0E76               	movlw	low (_g_nvm+36)
 22752  002BFA  24F3               	addwf	243,w,c
 22753  002BFC  6ED9               	movwf	fsr2l,c
 22754  002BFE  0E01               	movlw	high (_g_nvm+36)
 22755  002C00  20F4               	addwfc	prodh,w,c
 22756  002C02  6EDA               	movwf	fsr2h,c
 22757  002C04  50DF               	movf	indf2,w,c
 22758  002C06  0102               	movlb	2	; () banked
 22759  002C08  6FFC               	movwf	??_build_response& (0+255),b
 22760  002C0A  51FC               	movf	??_build_response& (0+255),w,b
 22761  002C0C  6E1D               	movwf	__itoa@num^0,c
 22762  002C0E  6A1E               	clrf	(__itoa@num+1)^0,c
 22763  002C10  6A1F               	clrf	(__itoa@num+2)^0,c
 22764  002C12  6A20               	clrf	(__itoa@num+3)^0,c
 22765  002C14  0E08               	movlw	low _writeBuffer
 22766  002C16  0103               	movlb	3	; () banked
 22767  002C18  25F1               	addwf	build_response@len& (0+255),w,b
 22768  002C1A  6E21               	movwf	__itoa@str^0,c
 22769  002C1C  6A22               	clrf	(__itoa@str+1)^0,c
 22770  002C1E  0E02               	movlw	high _writeBuffer
 22771  002C20  2222               	addwfc	(__itoa@str+1)^0,f,c
 22772  002C22  EC5D  F049         	call	__itoa	;wreg free
 22773  002C26  D214               	goto	L64
 22774  002C28                     l33405:
 22775                           
 22776                           ; BSR set to: 0
 22777  002C28  0103               	movlb	3	; () banked
 22778  002C2A  51F0               	movf	build_response@chno& (0+255),w,b
 22779  002C2C  0D3E               	mullw	62
 22780  002C2E  0E79               	movlw	low (_g_nvm+39)
 22781  002C30  24F3               	addwf	243,w,c
 22782  002C32  6ED9               	movwf	fsr2l,c
 22783  002C34  0E01               	movlw	high (_g_nvm+39)
 22784  002C36  20F4               	addwfc	prodh,w,c
 22785  002C38  6EDA               	movwf	fsr2h,c
 22786  002C3A  50DF               	movf	indf2,w,c
 22787  002C3C  0102               	movlb	2	; () banked
 22788  002C3E  6FFC               	movwf	??_build_response& (0+255),b
 22789  002C40  51FC               	movf	??_build_response& (0+255),w,b
 22790  002C42  6E1D               	movwf	__itoa@num^0,c
 22791  002C44  6A1E               	clrf	(__itoa@num+1)^0,c
 22792  002C46  6A1F               	clrf	(__itoa@num+2)^0,c
 22793  002C48  6A20               	clrf	(__itoa@num+3)^0,c
 22794  002C4A  0E08               	movlw	low _writeBuffer
 22795  002C4C  0103               	movlb	3	; () banked
 22796  002C4E  25F1               	addwf	build_response@len& (0+255),w,b
 22797  002C50  6E21               	movwf	__itoa@str^0,c
 22798  002C52  6A22               	clrf	(__itoa@str+1)^0,c
 22799  002C54  0E02               	movlw	high _writeBuffer
 22800  002C56  2222               	addwfc	(__itoa@str+1)^0,f,c
 22801  002C58  EC5D  F049         	call	__itoa	;wreg free
 22802  002C5C  D1F9               	goto	L64
 22803  002C5E                     l33407:
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;app_atcommand.c: 739: if (status->last_update) { writeBuffer[len++] = 'O'; writeBuffer[
      +                          len++] = 'K'; }
 22807  002C5E  EE20 F001          	lfsr	2,1
 22808  002C62  51CD               	movf	build_response@status& (0+255),w,b
 22809  002C64  26D9               	addwf	fsr2l,f,c
 22810  002C66  51CE               	movf	(build_response@status+1)& (0+255),w,b
 22811  002C68  22DA               	addwfc	fsr2h,f,c
 22812  002C6A  50DF               	movf	indf2,w,c
 22813  002C6C  A4D8               	btfss	status,2,c
 22814  002C6E  D43A               	goto	l33245
 22815                           
 22816                           ; BSR set to: 0
 22817                           ;app_atcommand.c: 740: else { writeBuffer[len++] = 'F'; writeBuffer[len++] = 'A'; writeB
      +                          uffer[len++] = 'I'; writeBuffer[len++] = 'L'; }
 22818  002C70  0E08               	movlw	low _writeBuffer
 22819  002C72  0103               	movlb	3	; () banked
 22820  002C74  25F1               	addwf	build_response@len& (0+255),w,b
 22821  002C76  6ED9               	movwf	fsr2l,c
 22822  002C78  6ADA               	clrf	fsr2h,c
 22823  002C7A  0E02               	movlw	high _writeBuffer
 22824  002C7C  22DA               	addwfc	fsr2h,f,c
 22825  002C7E  0E46               	movlw	70
 22826  002C80  6EDF               	movwf	indf2,c
 22827                           
 22828                           ; BSR set to: 3
 22829  002C82  2BF1               	incf	build_response@len& (0+255),f,b
 22830                           
 22831                           ; BSR set to: 3
 22832  002C84  0E08               	movlw	low _writeBuffer
 22833  002C86  25F1               	addwf	build_response@len& (0+255),w,b
 22834  002C88  6ED9               	movwf	fsr2l,c
 22835  002C8A  6ADA               	clrf	fsr2h,c
 22836  002C8C  0E02               	movlw	high _writeBuffer
 22837  002C8E  22DA               	addwfc	fsr2h,f,c
 22838  002C90  0E41               	movlw	65
 22839  002C92  6EDF               	movwf	indf2,c
 22840  002C94  2BF1               	incf	build_response@len& (0+255),f,b
 22841                           
 22842                           ; BSR set to: 3
 22843  002C96  0E08               	movlw	low _writeBuffer
 22844  002C98  25F1               	addwf	build_response@len& (0+255),w,b
 22845  002C9A  6ED9               	movwf	fsr2l,c
 22846  002C9C  6ADA               	clrf	fsr2h,c
 22847  002C9E  0E02               	movlw	high _writeBuffer
 22848  002CA0  22DA               	addwfc	fsr2h,f,c
 22849  002CA2  0E49               	movlw	73
 22850  002CA4  6EDF               	movwf	indf2,c
 22851                           
 22852                           ; BSR set to: 3
 22853  002CA6  2BF1               	incf	build_response@len& (0+255),f,b
 22854  002CA8  0E08               	movlw	low _writeBuffer
 22855  002CAA  25F1               	addwf	build_response@len& (0+255),w,b
 22856  002CAC  6ED9               	movwf	fsr2l,c
 22857  002CAE  6ADA               	clrf	fsr2h,c
 22858  002CB0  0E02               	movlw	high _writeBuffer
 22859  002CB2  22DA               	addwfc	fsr2h,f,c
 22860  002CB4  0E4C               	movlw	76
 22861  002CB6                     L43:
 22862  002CB6  6EDF               	movwf	indf2,c
 22863                           
 22864                           ; BSR set to: 3
 22865  002CB8  2BF1               	incf	build_response@len& (0+255),f,b
 22866  002CBA  D248               	goto	l33479
 22867  002CBC                     l33427:
 22868                           
 22869                           ; BSR set to: 0
 22870                           ;app_atcommand.c: 743: len += _ftoa(g_nvm.eeprm[chno].baseLine_uV, &writeBuffer[len]); w
      +                          riteBuffer[len++] = ',';
 22871  002CBC  0103               	movlb	3	; () banked
 22872  002CBE  51F0               	movf	build_response@chno& (0+255),w,b
 22873  002CC0  0D3E               	mullw	62
 22874  002CC2  0E7A               	movlw	low (_g_nvm+40)
 22875  002CC4  24F3               	addwf	243,w,c
 22876  002CC6  6ED9               	movwf	fsr2l,c
 22877  002CC8  0E01               	movlw	high (_g_nvm+40)
 22878  002CCA  20F4               	addwfc	prodh,w,c
 22879  002CCC  6EDA               	movwf	fsr2h,c
 22880  002CCE  CFDE F0C3          	movff	postinc2,__ftoa@num
 22881  002CD2  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 22882  002CD6  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 22883  002CDA  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 22884  002CDE  0E08               	movlw	low _writeBuffer
 22885  002CE0  25F1               	addwf	build_response@len& (0+255),w,b
 22886  002CE2  0100               	movlb	0	; () banked
 22887  002CE4  6FC7               	movwf	__ftoa@str& (0+255),b
 22888  002CE6  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 22889  002CE8  0E02               	movlw	high _writeBuffer
 22890  002CEA  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 22891  002CEC  ECE9  F068         	call	__ftoa	;wreg free
 22892  002CF0  51C3               	movf	?__ftoa& (0+255),w,b
 22893  002CF2  0103               	movlb	3	; () banked
 22894  002CF4  27F1               	addwf	build_response@len& (0+255),f,b
 22895                           
 22896                           ; BSR set to: 3
 22897  002CF6  0E08               	movlw	low _writeBuffer
 22898  002CF8  25F1               	addwf	build_response@len& (0+255),w,b
 22899  002CFA  6ED9               	movwf	fsr2l,c
 22900  002CFC  6ADA               	clrf	fsr2h,c
 22901  002CFE  0E02               	movlw	high _writeBuffer
 22902  002D00  22DA               	addwfc	fsr2h,f,c
 22903  002D02  0E2C               	movlw	44
 22904  002D04  6EDF               	movwf	indf2,c
 22905                           
 22906                           ; BSR set to: 3
 22907  002D06  2BF1               	incf	build_response@len& (0+255),f,b
 22908                           
 22909                           ; BSR set to: 3
 22910                           ;app_atcommand.c: 744: len += _ftoa(g_nvm.eeprm[chno].span_uV, &writeBuffer[len]); write
      +                          Buffer[len++] = ',';
 22911  002D08  51F0               	movf	build_response@chno& (0+255),w,b
 22912  002D0A  0D3E               	mullw	62
 22913  002D0C  0E7E               	movlw	low (_g_nvm+44)
 22914  002D0E  24F3               	addwf	243,w,c
 22915  002D10  6ED9               	movwf	fsr2l,c
 22916  002D12  0E01               	movlw	high (_g_nvm+44)
 22917  002D14  20F4               	addwfc	prodh,w,c
 22918  002D16  6EDA               	movwf	fsr2h,c
 22919  002D18  CFDE F0C3          	movff	postinc2,__ftoa@num
 22920  002D1C  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 22921  002D20  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 22922  002D24  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 22923  002D28  0E08               	movlw	low _writeBuffer
 22924  002D2A  25F1               	addwf	build_response@len& (0+255),w,b
 22925  002D2C  0100               	movlb	0	; () banked
 22926  002D2E  6FC7               	movwf	__ftoa@str& (0+255),b
 22927  002D30  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 22928  002D32  0E02               	movlw	high _writeBuffer
 22929  002D34  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 22930  002D36  ECE9  F068         	call	__ftoa	;wreg free
 22931  002D3A  51C3               	movf	?__ftoa& (0+255),w,b
 22932  002D3C  0103               	movlb	3	; () banked
 22933  002D3E  27F1               	addwf	build_response@len& (0+255),f,b
 22934                           
 22935                           ; BSR set to: 3
 22936  002D40  0E08               	movlw	low _writeBuffer
 22937  002D42  25F1               	addwf	build_response@len& (0+255),w,b
 22938  002D44  6ED9               	movwf	fsr2l,c
 22939  002D46  6ADA               	clrf	fsr2h,c
 22940  002D48  0E02               	movlw	high _writeBuffer
 22941  002D4A  22DA               	addwfc	fsr2h,f,c
 22942  002D4C  0E2C               	movlw	44
 22943  002D4E  6EDF               	movwf	indf2,c
 22944  002D50  2BF1               	incf	build_response@len& (0+255),f,b
 22945                           
 22946                           ; BSR set to: 3
 22947                           ;app_atcommand.c: 745: len += _ftoa(g_nvm.eeprm[chno].CalibrationGas, &writeBuffer[len])
      +                          ;
 22948  002D52  51F0               	movf	build_response@chno& (0+255),w,b
 22949  002D54  0D3E               	mullw	62
 22950  002D56  0E82               	movlw	low (_g_nvm+48)
 22951  002D58  24F3               	addwf	243,w,c
 22952  002D5A  6ED9               	movwf	fsr2l,c
 22953  002D5C  0E01               	movlw	high (_g_nvm+48)
 22954  002D5E  20F4               	addwfc	prodh,w,c
 22955  002D60  6EDA               	movwf	fsr2h,c
 22956  002D62  CFDE F0C3          	movff	postinc2,__ftoa@num
 22957  002D66  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 22958  002D6A  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 22959  002D6E  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 22960  002D72  0E08               	movlw	low _writeBuffer
 22961  002D74  25F1               	addwf	build_response@len& (0+255),w,b
 22962  002D76  0100               	movlb	0	; () banked
 22963  002D78  6FC7               	movwf	__ftoa@str& (0+255),b
 22964  002D7A  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 22965  002D7C  0E02               	movlw	high _writeBuffer
 22966  002D7E  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 22967  002D80  ECE9  F068         	call	__ftoa	;wreg free
 22968  002D84  D55E               	goto	L57
 22969  002D86                     l33439:
 22970                           
 22971                           ; BSR set to: 0
 22972  002D86  0103               	movlb	3	; () banked
 22973  002D88  51F0               	movf	build_response@chno& (0+255),w,b
 22974  002D8A  0D3E               	mullw	62
 22975  002D8C  0E7A               	movlw	low (_g_nvm+40)
 22976  002D8E  24F3               	addwf	243,w,c
 22977  002D90  6ED9               	movwf	fsr2l,c
 22978  002D92  0E01               	movlw	high (_g_nvm+40)
 22979  002D94  20F4               	addwfc	prodh,w,c
 22980  002D96  6EDA               	movwf	fsr2h,c
 22981  002D98  CFDE F0C3          	movff	postinc2,__ftoa@num
 22982  002D9C  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 22983  002DA0  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 22984  002DA4  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 22985  002DA8  0E08               	movlw	low _writeBuffer
 22986  002DAA  25F1               	addwf	build_response@len& (0+255),w,b
 22987  002DAC  0100               	movlb	0	; () banked
 22988  002DAE  6FC7               	movwf	__ftoa@str& (0+255),b
 22989  002DB0  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 22990  002DB2  0E02               	movlw	high _writeBuffer
 22991  002DB4  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 22992  002DB6  ECE9  F068         	call	__ftoa	;wreg free
 22993  002DBA  D543               	goto	L57
 22994  002DBC                     l33441:
 22995                           
 22996                           ; BSR set to: 0
 22997                           ;app_atcommand.c: 749: len += _ftoa(g_nvm.eeprm[chno].CalibrationGas, &writeBuffer[len])
      +                          ; writeBuffer[len++] = ',';
 22998  002DBC  0103               	movlb	3	; () banked
 22999  002DBE  51F0               	movf	build_response@chno& (0+255),w,b
 23000  002DC0  0D3E               	mullw	62
 23001  002DC2  0E82               	movlw	low (_g_nvm+48)
 23002  002DC4  24F3               	addwf	243,w,c
 23003  002DC6  6ED9               	movwf	fsr2l,c
 23004  002DC8  0E01               	movlw	high (_g_nvm+48)
 23005  002DCA  20F4               	addwfc	prodh,w,c
 23006  002DCC  6EDA               	movwf	fsr2h,c
 23007  002DCE  CFDE F0C3          	movff	postinc2,__ftoa@num
 23008  002DD2  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 23009  002DD6  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 23010  002DDA  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 23011  002DDE  0E08               	movlw	low _writeBuffer
 23012  002DE0  25F1               	addwf	build_response@len& (0+255),w,b
 23013  002DE2  0100               	movlb	0	; () banked
 23014  002DE4  6FC7               	movwf	__ftoa@str& (0+255),b
 23015  002DE6  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 23016  002DE8  0E02               	movlw	high _writeBuffer
 23017  002DEA  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 23018  002DEC  ECE9  F068         	call	__ftoa	;wreg free
 23019  002DF0  51C3               	movf	?__ftoa& (0+255),w,b
 23020  002DF2  0103               	movlb	3	; () banked
 23021  002DF4  27F1               	addwf	build_response@len& (0+255),f,b
 23022                           
 23023                           ; BSR set to: 3
 23024  002DF6  0E08               	movlw	low _writeBuffer
 23025  002DF8  25F1               	addwf	build_response@len& (0+255),w,b
 23026  002DFA  6ED9               	movwf	fsr2l,c
 23027  002DFC  6ADA               	clrf	fsr2h,c
 23028  002DFE  0E02               	movlw	high _writeBuffer
 23029  002E00  22DA               	addwfc	fsr2h,f,c
 23030  002E02  0E2C               	movlw	44
 23031  002E04  6EDF               	movwf	indf2,c
 23032                           
 23033                           ; BSR set to: 3
 23034  002E06  2BF1               	incf	build_response@len& (0+255),f,b
 23035                           
 23036                           ; BSR set to: 3
 23037                           ;app_atcommand.c: 750: len += sprintf(&writeBuffer[len], "%.2f", g_nvm.eeprm[chno].gas_s
      +                          lope); writeBuffer[len++] = ',';
 23038  002E08  0E08               	movlw	low _writeBuffer
 23039  002E0A  25F1               	addwf	build_response@len& (0+255),w,b
 23040  002E0C  0100               	movlb	0	; () banked
 23041  002E0E  6F9D               	movwf	sprintf@sp& (0+255),b
 23042  002E10  6B9E               	clrf	(sprintf@sp+1)& (0+255),b
 23043  002E12  0E02               	movlw	high _writeBuffer
 23044  002E14  239E               	addwfc	(sprintf@sp+1)& (0+255),f,b
 23045  002E16  0E96               	movlw	low STR_5
 23046  002E18  6F9F               	movwf	sprintf@f& (0+255),b
 23047  002E1A  0E23               	movlw	high STR_5
 23048  002E1C  6FA0               	movwf	(sprintf@f+1)& (0+255),b
 23049  002E1E  0103               	movlb	3	; () banked
 23050  002E20  51F0               	movf	build_response@chno& (0+255),w,b
 23051  002E22  0D3E               	mullw	62
 23052  002E24  0E86               	movlw	low (_g_nvm+52)
 23053  002E26  24F3               	addwf	243,w,c
 23054  002E28  6ED9               	movwf	fsr2l,c
 23055  002E2A  0E01               	movlw	high (_g_nvm+52)
 23056  002E2C  20F4               	addwfc	prodh,w,c
 23057  002E2E  6EDA               	movwf	fsr2h,c
 23058  002E30  CFDE F0A1          	movff	postinc2,?_sprintf+4
 23059  002E34  CFDE F0A2          	movff	postinc2,?_sprintf+5
 23060  002E38  CFDE F0A3          	movff	postinc2,?_sprintf+6
 23061  002E3C  CFDE F0A4          	movff	postinc2,?_sprintf+7
 23062  002E40  EC08  F01F         	call	_sprintf	;wreg free
 23063  002E44  519D               	movf	?_sprintf& (0+255),w,b
 23064  002E46  0103               	movlb	3	; () banked
 23065  002E48  27F1               	addwf	build_response@len& (0+255),f,b
 23066                           
 23067                           ; BSR set to: 3
 23068  002E4A  0E08               	movlw	low _writeBuffer
 23069  002E4C  25F1               	addwf	build_response@len& (0+255),w,b
 23070  002E4E  6ED9               	movwf	fsr2l,c
 23071  002E50  6ADA               	clrf	fsr2h,c
 23072  002E52  0E02               	movlw	high _writeBuffer
 23073  002E54  22DA               	addwfc	fsr2h,f,c
 23074  002E56  0E2C               	movlw	44
 23075  002E58  6EDF               	movwf	indf2,c
 23076  002E5A  2BF1               	incf	build_response@len& (0+255),f,b
 23077                           
 23078                           ; BSR set to: 3
 23079                           ;app_atcommand.c: 751: len += _ftoa(g_nvm.eeprm[chno].baseLine_uV, &writeBuffer[len]); w
      +                          riteBuffer[len++] = ',';
 23080  002E5C  51F0               	movf	build_response@chno& (0+255),w,b
 23081  002E5E  0D3E               	mullw	62
 23082  002E60  0E7A               	movlw	low (_g_nvm+40)
 23083  002E62  24F3               	addwf	243,w,c
 23084  002E64  6ED9               	movwf	fsr2l,c
 23085  002E66  0E01               	movlw	high (_g_nvm+40)
 23086  002E68  20F4               	addwfc	prodh,w,c
 23087  002E6A  6EDA               	movwf	fsr2h,c
 23088  002E6C  CFDE F0C3          	movff	postinc2,__ftoa@num
 23089  002E70  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 23090  002E74  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 23091  002E78  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 23092  002E7C  0E08               	movlw	low _writeBuffer
 23093  002E7E  25F1               	addwf	build_response@len& (0+255),w,b
 23094  002E80  0100               	movlb	0	; () banked
 23095  002E82  6FC7               	movwf	__ftoa@str& (0+255),b
 23096  002E84  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 23097  002E86  0E02               	movlw	high _writeBuffer
 23098  002E88  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 23099  002E8A  ECE9  F068         	call	__ftoa	;wreg free
 23100  002E8E  51C3               	movf	?__ftoa& (0+255),w,b
 23101  002E90  0103               	movlb	3	; () banked
 23102  002E92  27F1               	addwf	build_response@len& (0+255),f,b
 23103                           
 23104                           ; BSR set to: 3
 23105  002E94  0E08               	movlw	low _writeBuffer
 23106  002E96  25F1               	addwf	build_response@len& (0+255),w,b
 23107  002E98  6ED9               	movwf	fsr2l,c
 23108  002E9A  6ADA               	clrf	fsr2h,c
 23109  002E9C  0E02               	movlw	high _writeBuffer
 23110  002E9E  22DA               	addwfc	fsr2h,f,c
 23111  002EA0  0E2C               	movlw	44
 23112  002EA2  6EDF               	movwf	indf2,c
 23113                           
 23114                           ; BSR set to: 3
 23115  002EA4  2BF1               	incf	build_response@len& (0+255),f,b
 23116                           
 23117                           ; BSR set to: 3
 23118                           ;app_atcommand.c: 752: len += _ftoa(g_nvm.eeprm[chno].span_uV, &writeBuffer[len]); write
      +                          Buffer[len++] = ',';
 23119  002EA6  51F0               	movf	build_response@chno& (0+255),w,b
 23120  002EA8  0D3E               	mullw	62
 23121  002EAA  0E7E               	movlw	low (_g_nvm+44)
 23122  002EAC  24F3               	addwf	243,w,c
 23123  002EAE  6ED9               	movwf	fsr2l,c
 23124  002EB0  0E01               	movlw	high (_g_nvm+44)
 23125  002EB2  20F4               	addwfc	prodh,w,c
 23126  002EB4  6EDA               	movwf	fsr2h,c
 23127  002EB6  CFDE F0C3          	movff	postinc2,__ftoa@num
 23128  002EBA  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 23129  002EBE  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 23130  002EC2  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 23131  002EC6  0E08               	movlw	low _writeBuffer
 23132  002EC8  25F1               	addwf	build_response@len& (0+255),w,b
 23133  002ECA  0100               	movlb	0	; () banked
 23134  002ECC  6FC7               	movwf	__ftoa@str& (0+255),b
 23135  002ECE  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 23136  002ED0  0E02               	movlw	high _writeBuffer
 23137  002ED2  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 23138  002ED4  ECE9  F068         	call	__ftoa	;wreg free
 23139  002ED8  51C3               	movf	?__ftoa& (0+255),w,b
 23140  002EDA  0103               	movlb	3	; () banked
 23141  002EDC  27F1               	addwf	build_response@len& (0+255),f,b
 23142  002EDE  0E08               	movlw	low _writeBuffer
 23143  002EE0  25F1               	addwf	build_response@len& (0+255),w,b
 23144  002EE2  6ED9               	movwf	fsr2l,c
 23145  002EE4  6ADA               	clrf	fsr2h,c
 23146  002EE6  0E02               	movlw	high _writeBuffer
 23147  002EE8  22DA               	addwfc	fsr2h,f,c
 23148  002EEA  0E2C               	movlw	44
 23149  002EEC  6EDF               	movwf	indf2,c
 23150                           
 23151                           ; BSR set to: 3
 23152  002EEE  2BF1               	incf	build_response@len& (0+255),f,b
 23153                           
 23154                           ; BSR set to: 3
 23155                           ;app_atcommand.c: 753: len += _ftoa(g_nvm.eeprm[chno].baseLine_temp, &writeBuffer[len]);
 23156  002EF0  51F0               	movf	build_response@chno& (0+255),w,b
 23157  002EF2  0D3E               	mullw	62
 23158  002EF4  0EA8               	movlw	low (_g_nvm+86)
 23159  002EF6  24F3               	addwf	243,w,c
 23160  002EF8  6ED9               	movwf	fsr2l,c
 23161  002EFA  0E01               	movlw	high (_g_nvm+86)
 23162  002EFC  20F4               	addwfc	prodh,w,c
 23163  002EFE  6EDA               	movwf	fsr2h,c
 23164  002F00  CFDE F0C3          	movff	postinc2,__ftoa@num
 23165  002F04  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 23166  002F08  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 23167  002F0C  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 23168  002F10  0E08               	movlw	low _writeBuffer
 23169  002F12  25F1               	addwf	build_response@len& (0+255),w,b
 23170  002F14  0100               	movlb	0	; () banked
 23171  002F16  6FC7               	movwf	__ftoa@str& (0+255),b
 23172  002F18  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 23173  002F1A  0E02               	movlw	high _writeBuffer
 23174  002F1C  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 23175  002F1E  ECE9  F068         	call	__ftoa	;wreg free
 23176  002F22  D48F               	goto	L57
 23177  002F24                     l33463:
 23178                           
 23179                           ; BSR set to: 0
 23180  002F24  0103               	movlb	3	; () banked
 23181  002F26  51F0               	movf	build_response@chno& (0+255),w,b
 23182  002F28  0D3E               	mullw	62
 23183  002F2A  0E8E               	movlw	low (_g_nvm+60)
 23184  002F2C  24F3               	addwf	243,w,c
 23185  002F2E  6ED9               	movwf	fsr2l,c
 23186  002F30  0E01               	movlw	high (_g_nvm+60)
 23187  002F32  20F4               	addwfc	prodh,w,c
 23188  002F34  6EDA               	movwf	fsr2h,c
 23189  002F36  CFDE F0C3          	movff	postinc2,__ftoa@num
 23190  002F3A  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 23191  002F3E  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 23192  002F42  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 23193  002F46  0E08               	movlw	low _writeBuffer
 23194  002F48  25F1               	addwf	build_response@len& (0+255),w,b
 23195  002F4A  0100               	movlb	0	; () banked
 23196  002F4C  6FC7               	movwf	__ftoa@str& (0+255),b
 23197  002F4E  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 23198  002F50  0E02               	movlw	high _writeBuffer
 23199  002F52  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 23200  002F54  ECE9  F068         	call	__ftoa	;wreg free
 23201  002F58  D474               	goto	L57
 23202  002F5A                     l33465:
 23203                           
 23204                           ; BSR set to: 0
 23205  002F5A  0103               	movlb	3	; () banked
 23206  002F5C  51F0               	movf	build_response@chno& (0+255),w,b
 23207  002F5E  0D3E               	mullw	62
 23208  002F60  0E92               	movlw	low (_g_nvm+64)
 23209  002F62  24F3               	addwf	243,w,c
 23210  002F64  6ED9               	movwf	fsr2l,c
 23211  002F66  0E01               	movlw	high (_g_nvm+64)
 23212  002F68  20F4               	addwfc	prodh,w,c
 23213  002F6A  6EDA               	movwf	fsr2h,c
 23214  002F6C  CFDE F0C3          	movff	postinc2,__ftoa@num
 23215  002F70  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 23216  002F74  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 23217  002F78  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 23218  002F7C  0E08               	movlw	low _writeBuffer
 23219  002F7E  25F1               	addwf	build_response@len& (0+255),w,b
 23220  002F80  0100               	movlb	0	; () banked
 23221  002F82  6FC7               	movwf	__ftoa@str& (0+255),b
 23222  002F84  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 23223  002F86  0E02               	movlw	high _writeBuffer
 23224  002F88  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 23225  002F8A  ECE9  F068         	call	__ftoa	;wreg free
 23226  002F8E  D459               	goto	L57
 23227  002F90                     l33467:
 23228                           
 23229                           ; BSR set to: 0
 23230  002F90  0103               	movlb	3	; () banked
 23231  002F92  51F0               	movf	build_response@chno& (0+255),w,b
 23232  002F94  0D3E               	mullw	62
 23233  002F96  0E77               	movlw	low (_g_nvm+37)
 23234  002F98  24F3               	addwf	243,w,c
 23235  002F9A  6ED9               	movwf	fsr2l,c
 23236  002F9C  0E01               	movlw	high (_g_nvm+37)
 23237  002F9E  20F4               	addwfc	prodh,w,c
 23238  002FA0  6EDA               	movwf	fsr2h,c
 23239  002FA2  50DF               	movf	indf2,w,c
 23240  002FA4  0102               	movlb	2	; () banked
 23241  002FA6  6FFC               	movwf	??_build_response& (0+255),b
 23242  002FA8  51FC               	movf	??_build_response& (0+255),w,b
 23243  002FAA  6E1D               	movwf	__itoa@num^0,c
 23244  002FAC  6A1E               	clrf	(__itoa@num+1)^0,c
 23245  002FAE  6A1F               	clrf	(__itoa@num+2)^0,c
 23246  002FB0  6A20               	clrf	(__itoa@num+3)^0,c
 23247  002FB2  0E08               	movlw	low _writeBuffer
 23248  002FB4  0103               	movlb	3	; () banked
 23249  002FB6  25F1               	addwf	build_response@len& (0+255),w,b
 23250  002FB8  6E21               	movwf	__itoa@str^0,c
 23251  002FBA  6A22               	clrf	(__itoa@str+1)^0,c
 23252  002FBC  0E02               	movlw	high _writeBuffer
 23253  002FBE  2222               	addwfc	(__itoa@str+1)^0,f,c
 23254  002FC0  EC5D  F049         	call	__itoa	;wreg free
 23255  002FC4  D045               	goto	L64
 23256  002FC6                     l33469:
 23257                           
 23258                           ; BSR set to: 0
 23259  002FC6  0103               	movlb	3	; () banked
 23260  002FC8  51F0               	movf	build_response@chno& (0+255),w,b
 23261  002FCA  0D3E               	mullw	62
 23262  002FCC  0E96               	movlw	low (_g_nvm+68)
 23263  002FCE  24F3               	addwf	243,w,c
 23264  002FD0  6ED9               	movwf	fsr2l,c
 23265  002FD2  0E01               	movlw	high (_g_nvm+68)
 23266  002FD4  20F4               	addwfc	prodh,w,c
 23267  002FD6  6EDA               	movwf	fsr2h,c
 23268  002FD8  CFDE F01D          	movff	postinc2,__itoa@num
 23269  002FDC  CFDE F01E          	movff	postinc2,__itoa@num+1
 23270  002FE0  CFDE F01F          	movff	postinc2,__itoa@num+2
 23271  002FE4  CFDE F020          	movff	postinc2,__itoa@num+3
 23272  002FE8  0E08               	movlw	low _writeBuffer
 23273  002FEA  25F1               	addwf	build_response@len& (0+255),w,b
 23274  002FEC  6E21               	movwf	__itoa@str^0,c
 23275  002FEE  6A22               	clrf	(__itoa@str+1)^0,c
 23276  002FF0  0E02               	movlw	high _writeBuffer
 23277  002FF2  2222               	addwfc	(__itoa@str+1)^0,f,c
 23278  002FF4  EC5D  F049         	call	__itoa	;wreg free
 23279  002FF8  D02B               	goto	L64
 23280  002FFA                     l33471:
 23281                           
 23282                           ; BSR set to: 0
 23283  002FFA  0103               	movlb	3	; () banked
 23284  002FFC  51F0               	movf	build_response@chno& (0+255),w,b
 23285  002FFE  0D3E               	mullw	62
 23286  003000  0E9A               	movlw	low (_g_nvm+72)
 23287  003002  24F3               	addwf	243,w,c
 23288  003004  6ED9               	movwf	fsr2l,c
 23289  003006  0E01               	movlw	high (_g_nvm+72)
 23290  003008  20F4               	addwfc	prodh,w,c
 23291  00300A  6EDA               	movwf	fsr2h,c
 23292  00300C  CFDE F01D          	movff	postinc2,__itoa@num
 23293  003010  CFDE F01E          	movff	postinc2,__itoa@num+1
 23294  003014  CFDE F01F          	movff	postinc2,__itoa@num+2
 23295  003018  CFDE F020          	movff	postinc2,__itoa@num+3
 23296  00301C  0E08               	movlw	low _writeBuffer
 23297  00301E  25F1               	addwf	build_response@len& (0+255),w,b
 23298  003020  6E21               	movwf	__itoa@str^0,c
 23299  003022  6A22               	clrf	(__itoa@str+1)^0,c
 23300  003024  0E02               	movlw	high _writeBuffer
 23301  003026  2222               	addwfc	(__itoa@str+1)^0,f,c
 23302  003028  EC5D  F049         	call	__itoa	;wreg free
 23303  00302C  D011               	goto	L64
 23304  00302E                     l33473:
 23305                           
 23306                           ; BSR set to: 0
 23307  00302E  C164  F01D         	movff	_g_nvm+18,__itoa@num
 23308  003032  C165  F01E         	movff	_g_nvm+19,__itoa@num+1
 23309  003036  C166  F01F         	movff	_g_nvm+20,__itoa@num+2
 23310  00303A  C167  F020         	movff	_g_nvm+21,__itoa@num+3
 23311  00303E  0E08               	movlw	low _writeBuffer
 23312  003040  0103               	movlb	3	; () banked
 23313  003042  25F1               	addwf	build_response@len& (0+255),w,b
 23314  003044  6E21               	movwf	__itoa@str^0,c
 23315  003046  6A22               	clrf	(__itoa@str+1)^0,c
 23316  003048  0E02               	movlw	high _writeBuffer
 23317  00304A  2222               	addwfc	(__itoa@str+1)^0,f,c
 23318  00304C  EC5D  F049         	call	__itoa	;wreg free
 23319  003050                     L64:
 23320  003050  501D               	movf	?__itoa^0,w,c
 23321  003052  D4C4               	goto	L49
 23322  003054                     l33477:
 23323  003054  0100               	movlb	0	; () banked
 23324  003056  EE20 F002          	lfsr	2,2
 23325  00305A  51CD               	movf	build_response@status& (0+255),w,b
 23326  00305C  26D9               	addwf	fsr2l,f,c
 23327  00305E  51CE               	movf	(build_response@status+1)& (0+255),w,b
 23328  003060  22DA               	addwfc	fsr2h,f,c
 23329  003062  50DF               	movf	indf2,w,c
 23330                           
 23331                           ; Switch size 1, requested type "simple"
 23332                           ; Number of cases is 36, Range of values is 1 to 38
 23333                           ; switch strategies available:
 23334                           ; Name         Instructions Cycles
 23335                           ; simple_byte          109    55 (average)
 23336                           ;	Chosen strategy is simple_byte
 23337  003064  0A01               	xorlw	1	; case 1
 23338  003066  B4D8               	btfsc	status,2,c
 23339  003068  EF72  F012         	goto	l33245
 23340  00306C  0A03               	xorlw	3	; case 2
 23341  00306E  B4D8               	btfsc	status,2,c
 23342  003070  EF84  F012         	goto	l33251
 23343  003074  0A07               	xorlw	7	; case 5
 23344  003076  B4D8               	btfsc	status,2,c
 23345  003078  EF10  F013         	goto	l33275
 23346  00307C  0A03               	xorlw	3	; case 6
 23347  00307E  B4D8               	btfsc	status,2,c
 23348  003080  EF30  F014         	goto	l33303
 23349  003084  0A01               	xorlw	1	; case 7
 23350  003086  B4D8               	btfsc	status,2,c
 23351  003088  EF38  F014         	goto	l33305
 23352  00308C  0A0F               	xorlw	15	; case 8
 23353  00308E  B4D8               	btfsc	status,2,c
 23354  003090  EF92  F012         	goto	l33253
 23355  003094  0A01               	xorlw	1	; case 9
 23356  003096  B4D8               	btfsc	status,2,c
 23357  003098  EF44  F014         	goto	l33309
 23358  00309C  0A03               	xorlw	3	; case 10
 23359  00309E  B4D8               	btfsc	status,2,c
 23360  0030A0  EF42  F014         	goto	l33307
 23361  0030A4  0A01               	xorlw	1	; case 11
 23362  0030A6  B4D8               	btfsc	status,2,c
 23363  0030A8  D408               	goto	l33323
 23364  0030AA  0A07               	xorlw	7	; case 12
 23365  0030AC  B4D8               	btfsc	status,2,c
 23366  0030AE  D449               	goto	l33345
 23367  0030B0  0A01               	xorlw	1	; case 13
 23368  0030B2  B4D8               	btfsc	status,2,c
 23369  0030B4  D466               	goto	l33351
 23370  0030B6  0A03               	xorlw	3	; case 14
 23371  0030B8  B4D8               	btfsc	status,2,c
 23372  0030BA  D480               	goto	l33357
 23373  0030BC  0A01               	xorlw	1	; case 15
 23374  0030BE  B4D8               	btfsc	status,2,c
 23375  0030C0  D490               	goto	l33359
 23376  0030C2  0A1F               	xorlw	31	; case 16
 23377  0030C4  B4D8               	btfsc	status,2,c
 23378  0030C6  D49D               	goto	l33361
 23379  0030C8  0A01               	xorlw	1	; case 17
 23380  0030CA  B4D8               	btfsc	status,2,c
 23381  0030CC  D4AA               	goto	l33363
 23382  0030CE  0A03               	xorlw	3	; case 18
 23383  0030D0  B4D8               	btfsc	status,2,c
 23384  0030D2  D4BA               	goto	l33365
 23385  0030D4  0A01               	xorlw	1	; case 19
 23386  0030D6  B4D8               	btfsc	status,2,c
 23387  0030D8  D4EA               	goto	l33373
 23388  0030DA  0A07               	xorlw	7	; case 20
 23389  0030DC  B4D8               	btfsc	status,2,c
 23390  0030DE  D4F7               	goto	l33379
 23391  0030E0  0A01               	xorlw	1	; case 21
 23392  0030E2  B4D8               	btfsc	status,2,c
 23393  0030E4  D4C3               	goto	l33367
 23394  0030E6  0A03               	xorlw	3	; case 22
 23395  0030E8  B4D8               	btfsc	status,2,c
 23396  0030EA  D501               	goto	l33385
 23397  0030EC  0A01               	xorlw	1	; case 23
 23398  0030EE  B4D8               	btfsc	status,2,c
 23399  0030F0  D719               	goto	l33463
 23400  0030F2  0A0F               	xorlw	15	; case 24
 23401  0030F4  B4D8               	btfsc	status,2,c
 23402  0030F6  D731               	goto	l33465
 23403  0030F8  0A01               	xorlw	1	; case 25
 23404  0030FA  B4D8               	btfsc	status,2,c
 23405  0030FC  D51B               	goto	l33391
 23406  0030FE  0A03               	xorlw	3	; case 26
 23407  003100  B4D8               	btfsc	status,2,c
 23408  003102  D533               	goto	l33393
 23409  003104  0A01               	xorlw	1	; case 27
 23410  003106  B4D8               	btfsc	status,2,c
 23411  003108  D558               	goto	l33399
 23412  00310A  0A07               	xorlw	7	; case 28
 23413  00310C  B4D8               	btfsc	status,2,c
 23414  00310E  D5D6               	goto	l33427
 23415  003110  0A01               	xorlw	1	; case 29
 23416  003112  B4D8               	btfsc	status,2,c
 23417  003114  D638               	goto	l33439
 23418  003116  0A03               	xorlw	3	; case 30
 23419  003118  B4D8               	btfsc	status,2,c
 23420  00311A  D650               	goto	l33441
 23421  00311C  0A01               	xorlw	1	; case 31
 23422  00311E  B4D8               	btfsc	status,2,c
 23423  003120  D568               	goto	l33403
 23424  003122  0A3F               	xorlw	63	; case 32
 23425  003124  B4D8               	btfsc	status,2,c
 23426  003126  D580               	goto	l33405
 23427  003128  0A01               	xorlw	1	; case 33
 23428  00312A  B4D8               	btfsc	status,2,c
 23429  00312C  D598               	goto	l33407
 23430  00312E  0A03               	xorlw	3	; case 34
 23431  003130  B4D8               	btfsc	status,2,c
 23432  003132  D595               	goto	l33407
 23433  003134  0A01               	xorlw	1	; case 35
 23434  003136  B4D8               	btfsc	status,2,c
 23435  003138  D72B               	goto	l33467
 23436  00313A  0A07               	xorlw	7	; case 36
 23437  00313C  B4D8               	btfsc	status,2,c
 23438  00313E  D75D               	goto	l33471
 23439  003140  0A01               	xorlw	1	; case 37
 23440  003142  B4D8               	btfsc	status,2,c
 23441  003144  D740               	goto	l33469
 23442  003146  0A03               	xorlw	3	; case 38
 23443  003148  B4D8               	btfsc	status,2,c
 23444  00314A  D771               	goto	l33473
 23445  00314C                     l33479:
 23446                           
 23447                           ;app_atcommand.c: 762: writeBuffer[len++] = '\r'; writeBuffer[len++] = '\n'; writeBuffer
      +                          [len++] = '\0';
 23448  00314C  0E08               	movlw	low _writeBuffer
 23449  00314E  0103               	movlb	3	; () banked
 23450  003150  25F1               	addwf	build_response@len& (0+255),w,b
 23451  003152  6ED9               	movwf	fsr2l,c
 23452  003154  6ADA               	clrf	fsr2h,c
 23453  003156  0E02               	movlw	high _writeBuffer
 23454  003158  22DA               	addwfc	fsr2h,f,c
 23455  00315A  0E0D               	movlw	13
 23456  00315C  6EDF               	movwf	indf2,c
 23457                           
 23458                           ; BSR set to: 3
 23459  00315E  2BF1               	incf	build_response@len& (0+255),f,b
 23460                           
 23461                           ; BSR set to: 3
 23462  003160  0E08               	movlw	low _writeBuffer
 23463  003162  25F1               	addwf	build_response@len& (0+255),w,b
 23464  003164  6ED9               	movwf	fsr2l,c
 23465  003166  6ADA               	clrf	fsr2h,c
 23466  003168  0E02               	movlw	high _writeBuffer
 23467  00316A  22DA               	addwfc	fsr2h,f,c
 23468  00316C  0E0A               	movlw	10
 23469  00316E  6EDF               	movwf	indf2,c
 23470  003170  2BF1               	incf	build_response@len& (0+255),f,b
 23471                           
 23472                           ; BSR set to: 3
 23473  003172  0E08               	movlw	low _writeBuffer
 23474  003174  25F1               	addwf	build_response@len& (0+255),w,b
 23475  003176  6ED9               	movwf	fsr2l,c
 23476  003178  6ADA               	clrf	fsr2h,c
 23477  00317A  0E02               	movlw	high _writeBuffer
 23478  00317C  22DA               	addwfc	fsr2h,f,c
 23479  00317E  0E00               	movlw	0
 23480  003180  6EDF               	movwf	indf2,c
 23481                           
 23482                           ; BSR set to: 3
 23483  003182  2BF1               	incf	build_response@len& (0+255),f,b
 23484                           
 23485                           ; BSR set to: 3
 23486                           ;app_atcommand.c: 763: write_command(writeBuffer);
 23487  003184  0E08               	movlw	low _writeBuffer
 23488  003186  6E16               	movwf	write_command@buff^0,c
 23489  003188  0E02               	movlw	high _writeBuffer
 23490  00318A  6E17               	movwf	(write_command@buff+1)^0,c
 23491  00318C  ECDF  F06D         	call	_write_command	;wreg free
 23492  003190  0012               	return		;funcret
 23493  003192                     __end_of_build_response:
 23494                           	callstack 0
 23495                           
 23496 ;; *************** function _write_command *****************
 23497 ;; Defined at:
 23498 ;;		line 238 in file "app_atcommand.c"
 23499 ;; Parameters:    Size  Location     Type
 23500 ;;  buff            2   21[COMRAM] PTR const unsigned char 
 23501 ;;		 -> STR_6(18), writeBuffer(64), 
 23502 ;; Auto vars:     Size  Location     Type
 23503 ;;		None
 23504 ;; Return value:  Size  Location     Type
 23505 ;;                  1    wreg      void 
 23506 ;; Registers used:
 23507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23508 ;; Tracked objects:
 23509 ;;		On entry : 3C/0
 23510 ;;		On exit  : 0/0
 23511 ;;		Unchanged: 0/0
 23512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23517 ;;Total ram usage:        2 bytes
 23518 ;; Hardware stack levels used: 1
 23519 ;; Hardware stack levels required when called: 5
 23520 ;; This function calls:
 23521 ;;		__strlen
 23522 ;;		_putUSBUSART
 23523 ;; This function is called by:
 23524 ;;		_build_response
 23525 ;; This function uses a non-reentrant model
 23526 ;;
 23527                           
 23528                           	psect	text104
 23529  00DBBE                     __ptext104:
 23530                           	callstack 0
 23531  00DBBE                     _write_command:
 23532                           	callstack 23
 23533                           
 23534                           ;app_atcommand.c: 240: if((cdc_trf_state == 0) == 1)
 23535                           
 23536                           ;incstack = 0
 23537  00DBBE  504F               	movf	_cdc_trf_state^0,w,c
 23538  00DBC0  A4D8               	btfss	status,2,c
 23539  00DBC2  0012               	return	
 23540                           
 23541                           ;app_atcommand.c: 241: {;app_atcommand.c: 242: putUSBUSART((uint8_t*)buff, (uint8_t)_str
      +                          len(buff));
 23542  00DBC4  C016  F013         	movff	write_command@buff,putUSBUSART@data
 23543  00DBC8  C017  F014         	movff	write_command@buff+1,putUSBUSART@data+1
 23544  00DBCC  C016  F00F         	movff	write_command@buff,__strlen@source
 23545  00DBD0  C017  F010         	movff	write_command@buff+1,__strlen@source+1
 23546  00DBD4  ECC8  F068         	call	__strlen	;wreg free
 23547  00DBD8  500F               	movf	?__strlen^0,w,c
 23548  00DBDA  6E15               	movwf	putUSBUSART@length^0,c
 23549  00DBDC  EC22  F06E         	call	_putUSBUSART	;wreg free
 23550  00DBE0  0012               	return		;funcret
 23551  00DBE2                     __end_of_write_command:
 23552                           	callstack 0
 23553                           
 23554 ;; *************** function _putUSBUSART *****************
 23555 ;; Defined at:
 23556 ;;		line 557 in file "usb/usb_device_cdc.c"
 23557 ;; Parameters:    Size  Location     Type
 23558 ;;  data            2   18[COMRAM] PTR unsigned char 
 23559 ;;		 -> STR_6(18), writeBuffer(64), 
 23560 ;;  length          1   20[COMRAM] unsigned char 
 23561 ;; Auto vars:     Size  Location     Type
 23562 ;;		None
 23563 ;; Return value:  Size  Location     Type
 23564 ;;                  1    wreg      void 
 23565 ;; Registers used:
 23566 ;;		wreg, status,2, status,0
 23567 ;; Tracked objects:
 23568 ;;		On entry : 0/0
 23569 ;;		On exit  : 0/0
 23570 ;;		Unchanged: 0/0
 23571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23572 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23576 ;;Total ram usage:        3 bytes
 23577 ;; Hardware stack levels used: 1
 23578 ;; Hardware stack levels required when called: 4
 23579 ;; This function calls:
 23580 ;;		Nothing
 23581 ;; This function is called by:
 23582 ;;		_write_command
 23583 ;; This function uses a non-reentrant model
 23584 ;;
 23585                           
 23586                           	psect	text105
 23587  00DC44                     __ptext105:
 23588                           	callstack 0
 23589  00DC44                     _putUSBUSART:
 23590                           	callstack 23
 23591                           
 23592                           ;usb_device_cdc.c: 582: ;;usb_device_cdc.c: 583: if(cdc_trf_state == 0)
 23593                           
 23594                           ;incstack = 0
 23595  00DC44  504F               	movf	_cdc_trf_state^0,w,c
 23596  00DC46  A4D8               	btfss	status,2,c
 23597  00DC48  0012               	return	
 23598                           
 23599                           ;usb_device_cdc.c: 584: {;usb_device_cdc.c: 585: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx
      +                          _len = length; cdc_mem_type = 0x01; cdc_trf_state = 1; };
 23600  00DC4A  C013  F145         	movff	putUSBUSART@data,_pCDCSrc
 23601  00DC4E  C014  F146         	movff	putUSBUSART@data+1,_pCDCSrc+1
 23602  00DC52  C015  F0EA         	movff	putUSBUSART@length,_cdc_tx_len
 23603  00DC56  0E01               	movlw	1
 23604  00DC58  0100               	movlb	0	; () banked
 23605  00DC5A  6FE9               	movwf	_cdc_mem_type& (0+255),b
 23606                           
 23607                           ; BSR set to: 0
 23608  00DC5C  0E01               	movlw	1
 23609  00DC5E  6E4F               	movwf	_cdc_trf_state^0,c
 23610  00DC60  0012               	return		;funcret
 23611  00DC62                     __end_of_putUSBUSART:
 23612                           	callstack 0
 23613                           
 23614 ;; *************** function __strlen *****************
 23615 ;; Defined at:
 23616 ;;		line 18 in file "util/_string.c"
 23617 ;; Parameters:    Size  Location     Type
 23618 ;;  source          2   14[COMRAM] PTR const unsigned char 
 23619 ;;		 -> g_atcommand.apply_params(32), STR_6(18), writeBuffer(64), parse_command@cmd(11), 
 23620 ;;		 -> g_atcommand(242), atcommand_type(494), 
 23621 ;; Auto vars:     Size  Location     Type
 23622 ;;  sc              2   16[COMRAM] PTR const unsigned char 
 23623 ;;		 -> g_atcommand.apply_params(32), STR_6(18), writeBuffer(64), parse_command@cmd(11), 
 23624 ;;		 -> g_atcommand(242), atcommand_type(494), 
 23625 ;; Return value:  Size  Location     Type
 23626 ;;                  2   14[COMRAM] unsigned int 
 23627 ;; Registers used:
 23628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 23629 ;; Tracked objects:
 23630 ;;		On entry : 0/0
 23631 ;;		On exit  : 0/0
 23632 ;;		Unchanged: 0/0
 23633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23638 ;;Total ram usage:        4 bytes
 23639 ;; Hardware stack levels used: 1
 23640 ;; Hardware stack levels required when called: 4
 23641 ;; This function calls:
 23642 ;;		Nothing
 23643 ;; This function is called by:
 23644 ;;		_write_command
 23645 ;;		_check_atcommand
 23646 ;;		_split_param
 23647 ;;		_update_command
 23648 ;; This function uses a non-reentrant model
 23649 ;;
 23650                           
 23651                           	psect	text106
 23652  00D190                     __ptext106:
 23653                           	callstack 0
 23654  00D190                     __strlen:
 23655                           	callstack 23
 23656                           
 23657                           ;_string.c: 20: const char* sc = source;
 23658                           
 23659                           ;incstack = 0
 23660  00D190  C00F  F011         	movff	__strlen@source,__strlen@sc
 23661  00D194  C010  F012         	movff	__strlen@source+1,__strlen@sc+1
 23662                           
 23663                           ;_string.c: 21: while(*sc) ++sc;
 23664  00D198  D002               	goto	l19239
 23665  00D19A                     l19237:
 23666  00D19A  4A11               	infsnz	__strlen@sc^0,f,c
 23667  00D19C  2A12               	incf	(__strlen@sc+1)^0,f,c
 23668  00D19E                     l19239:
 23669  00D19E  C011  FFF6         	movff	__strlen@sc,tblptrl
 23670  00D1A2  C012  FFF7         	movff	__strlen@sc+1,tblptrh
 23671  00D1A6  6AF8               	clrf	tblptru,c
 23672  00D1A8  0E0E               	movlw	(high __ramtop+-1)
 23673  00D1AA  64F7               	cpfsgt	tblptrh,c
 23674  00D1AC  D003               	bra	u21807
 23675  00D1AE  0008               	tblrd		*
 23676  00D1B0  50F5               	movf	tablat,w,c
 23677  00D1B2  D005               	bra	u21800
 23678  00D1B4                     u21807:
 23679  00D1B4  CFF6 FFE1          	movff	tblptrl,fsr1l
 23680  00D1B8  CFF7 FFE2          	movff	tblptrh,fsr1h
 23681  00D1BC  50E7               	movf	indf1,w,c
 23682  00D1BE                     u21800:
 23683  00D1BE  0900               	iorlw	0
 23684  00D1C0  A4D8               	btfss	status,2,c
 23685  00D1C2  D7EB               	goto	l19237
 23686                           
 23687                           ;_string.c: 22: return sc-source;
 23688  00D1C4  500F               	movf	__strlen@source^0,w,c
 23689  00D1C6  5C11               	subwf	__strlen@sc^0,w,c
 23690  00D1C8  6E0F               	movwf	?__strlen^0,c
 23691  00D1CA  5010               	movf	(__strlen@source+1)^0,w,c
 23692  00D1CC  5812               	subwfb	(__strlen@sc+1)^0,w,c
 23693  00D1CE  6E10               	movwf	(?__strlen+1)^0,c
 23694  00D1D0  0012               	return		;funcret
 23695  00D1D2                     __end_of__strlen:
 23696                           	callstack 0
 23697                           
 23698 ;; *************** function _modbus_set_swap *****************
 23699 ;; Defined at:
 23700 ;;		line 75 in file "app_modbus.c"
 23701 ;; Parameters:    Size  Location     Type
 23702 ;;  isSwap          1    wreg     unsigned char 
 23703 ;; Auto vars:     Size  Location     Type
 23704 ;;  isSwap          1   14[COMRAM] unsigned char 
 23705 ;; Return value:  Size  Location     Type
 23706 ;;                  1    wreg      void 
 23707 ;; Registers used:
 23708 ;;		wreg
 23709 ;; Tracked objects:
 23710 ;;		On entry : 3F/1
 23711 ;;		On exit  : 0/0
 23712 ;;		Unchanged: 0/0
 23713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23718 ;;Total ram usage:        1 bytes
 23719 ;; Hardware stack levels used: 1
 23720 ;; Hardware stack levels required when called: 4
 23721 ;; This function calls:
 23722 ;;		Nothing
 23723 ;; This function is called by:
 23724 ;;		_build_response
 23725 ;; This function uses a non-reentrant model
 23726 ;;
 23727                           
 23728                           	psect	text107
 23729  00DEEE                     __ptext107:
 23730                           	callstack 0
 23731  00DEEE                     _modbus_set_swap:
 23732                           	callstack 24
 23733                           
 23734                           ;incstack = 0
 23735                           ;modbus_set_swap@isSwap stored from wreg
 23736  00DEEE  6E0F               	movwf	modbus_set_swap@isSwap^0,c
 23737                           
 23738                           ;app_modbus.c: 77: g_swap = isSwap;
 23739  00DEF0  C00F  F0FC         	movff	modbus_set_swap@isSwap,_g_swap
 23740  00DEF4  0012               	return		;funcret
 23741  00DEF6                     __end_of_modbus_set_swap:
 23742                           	callstack 0
 23743                           
 23744 ;; *************** function _display_sensor_value *****************
 23745 ;; Defined at:
 23746 ;;		line 586 in file "app_atcommand.c"
 23747 ;; Parameters:    Size  Location     Type
 23748 ;;  ishex           1    wreg     const unsigned char 
 23749 ;;  chno            1  107[BANK0 ] const unsigned char 
 23750 ;;  strlen          1  108[BANK0 ] const unsigned char 
 23751 ;; Auto vars:     Size  Location     Type
 23752 ;;  ishex           1    0[BANK3 ] const unsigned char 
 23753 ;;  temp            4    1[BANK3 ] float 
 23754 ;;  len             1    5[BANK3 ] unsigned char 
 23755 ;; Return value:  Size  Location     Type
 23756 ;;                  1    wreg      unsigned char 
 23757 ;; Registers used:
 23758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23759 ;; Tracked objects:
 23760 ;;		On entry : 3F/0
 23761 ;;		On exit  : 3F/3
 23762 ;;		Unchanged: 0/0
 23763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23765 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0
 23766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23767 ;;      Totals:         1       2       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0
 23768 ;;Total ram usage:        9 bytes
 23769 ;; Hardware stack levels used: 1
 23770 ;; Hardware stack levels required when called: 8
 23771 ;; This function calls:
 23772 ;;		___fleq
 23773 ;;		___flsub
 23774 ;;		__ftoa
 23775 ;;		__strcpy
 23776 ;;		_sensor_temp_fahrenheit
 23777 ;;		_sprintf
 23778 ;; This function is called by:
 23779 ;;		_build_response
 23780 ;; This function uses a non-reentrant model
 23781 ;;
 23782                           
 23783                           	psect	text108
 23784  005588                     __ptext108:
 23785                           	callstack 0
 23786  005588                     _display_sensor_value:
 23787                           	callstack 20
 23788                           
 23789                           ;incstack = 0
 23790                           ;display_sensor_value@ishex stored from wreg
 23791  005588  0103               	movlb	3	; () banked
 23792  00558A  6FE3               	movwf	display_sensor_value@ishex& (0+255),b
 23793                           
 23794                           ;app_atcommand.c: 588: uint8_t len = strlen;
 23795  00558C  C0CC  F3E8         	movff	display_sensor_value@strlen,display_sensor_value@len
 23796                           
 23797                           ;app_atcommand.c: 590: if (g_sens_measure.isSensorInit[chno] == 1)
 23798  005590  0100               	movlb	0	; () banked
 23799  005592  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 23800  005594  0FD6               	addlw	low (_g_sens_measure+7)
 23801  005596  6ED9               	movwf	fsr2l,c
 23802  005598  6ADA               	clrf	fsr2h,c
 23803  00559A  04DE               	decf	postinc2,w,c
 23804  00559C  A4D8               	btfss	status,2,c
 23805  00559E  D156               	goto	l32611
 23806                           
 23807                           ; BSR set to: 0
 23808                           ;app_atcommand.c: 591: {;app_atcommand.c: 592: if (g_last_value[chno][LV_GAS_VOLT] == -9
      +                          99995.0f)
 23809  0055A0  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 23810  0055A2  0D0C               	mullw	12
 23811  0055A4  0E00               	movlw	low _g_last_value
 23812  0055A6  24F3               	addwf	243,w,c
 23813  0055A8  6ED9               	movwf	fsr2l,c
 23814  0055AA  0E01               	movlw	high _g_last_value
 23815  0055AC  20F4               	addwfc	prodh,w,c
 23816  0055AE  6EDA               	movwf	fsr2h,c
 23817  0055B0  CFDE F091          	movff	postinc2,___fleq@ff1
 23818  0055B4  CFDE F092          	movff	postinc2,___fleq@ff1+1
 23819  0055B8  CFDE F093          	movff	postinc2,___fleq@ff1+2
 23820  0055BC  CFDE F094          	movff	postinc2,___fleq@ff1+3
 23821  0055C0  0EB0               	movlw	176
 23822  0055C2  6F95               	movwf	___fleq@ff2& (0+255),b
 23823  0055C4  0E23               	movlw	35
 23824  0055C6  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 23825  0055C8  0E74               	movlw	116
 23826  0055CA  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 23827  0055CC  0EC9               	movlw	201
 23828  0055CE  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 23829  0055D0  EC32  F05F         	call	___fleq	;wreg free
 23830  0055D4  A0D8               	btfss	status,0,c
 23831  0055D6  D00F               	goto	l32581
 23832                           
 23833                           ; BSR set to: 0
 23834                           ;app_atcommand.c: 593: len += _strcpy(&writeBuffer[len], "----");
 23835  0055D8  0E08               	movlw	low _writeBuffer
 23836  0055DA  0103               	movlb	3	; () banked
 23837  0055DC  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 23838  0055DE  6E0F               	movwf	__strcpy@dest^0,c
 23839  0055E0  6A10               	clrf	(__strcpy@dest+1)^0,c
 23840  0055E2  0E02               	movlw	high _writeBuffer
 23841  0055E4  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 23842  0055E6  0E55               	movlw	low (STR_4+10)
 23843  0055E8  6E11               	movwf	__strcpy@source^0,c
 23844  0055EA  0E23               	movlw	high (STR_4+10)
 23845  0055EC  6E12               	movwf	(__strcpy@source+1)^0,c
 23846  0055EE  EC4C  F063         	call	__strcpy	;wreg free
 23847  0055F2  500F               	movf	?__strcpy^0,w,c
 23848  0055F4  D01B               	goto	L65
 23849  0055F6                     l32581:
 23850                           
 23851                           ; BSR set to: 0
 23852                           ;app_atcommand.c: 594: else;app_atcommand.c: 595: len += _ftoa(g_last_value[chno][LV_GAS
      +                          _VOLT] , &writeBuffer[len]);
 23853  0055F6  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 23854  0055F8  0D0C               	mullw	12
 23855  0055FA  0E00               	movlw	low _g_last_value
 23856  0055FC  24F3               	addwf	243,w,c
 23857  0055FE  6ED9               	movwf	fsr2l,c
 23858  005600  0E01               	movlw	high _g_last_value
 23859  005602  20F4               	addwfc	prodh,w,c
 23860  005604  6EDA               	movwf	fsr2h,c
 23861  005606  CFDE F0C3          	movff	postinc2,__ftoa@num
 23862  00560A  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 23863  00560E  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 23864  005612  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 23865  005616  0E08               	movlw	low _writeBuffer
 23866  005618  0103               	movlb	3	; () banked
 23867  00561A  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 23868  00561C  0100               	movlb	0	; () banked
 23869  00561E  6FC7               	movwf	__ftoa@str& (0+255),b
 23870  005620  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 23871  005622  0E02               	movlw	high _writeBuffer
 23872  005624  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 23873  005626  ECE9  F068         	call	__ftoa	;wreg free
 23874  00562A  51C3               	movf	?__ftoa& (0+255),w,b
 23875  00562C                     L65:
 23876  00562C  0103               	movlb	3	; () banked
 23877  00562E  27E8               	addwf	display_sensor_value@len& (0+255),f,b
 23878                           
 23879                           ; BSR set to: 3
 23880                           ;app_atcommand.c: 596: writeBuffer[len++] = ',';
 23881  005630  0E08               	movlw	low _writeBuffer
 23882  005632  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 23883  005634  6ED9               	movwf	fsr2l,c
 23884  005636  6ADA               	clrf	fsr2h,c
 23885  005638  0E02               	movlw	high _writeBuffer
 23886  00563A  22DA               	addwfc	fsr2h,f,c
 23887  00563C  0E2C               	movlw	44
 23888  00563E  6EDF               	movwf	indf2,c
 23889                           
 23890                           ; BSR set to: 3
 23891  005640  2BE8               	incf	display_sensor_value@len& (0+255),f,b
 23892                           
 23893                           ; BSR set to: 3
 23894                           ;app_atcommand.c: 597: if((g_nvm.eeprm[chno].span_uV - g_nvm.eeprm[chno].baseLine_uV) ==
      +                           0.0f ||;app_atcommand.c: 598: g_nvm.eeprm[chno].CalibrationGas == 0.0f || g_last_value[
      +                          chno][LV_GAS_PPM] == -999995.0f)
 23895  005642  0100               	movlb	0	; () banked
 23896  005644  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 23897  005646  0D3E               	mullw	62
 23898  005648  0E7A               	movlw	low (_g_nvm+40)
 23899  00564A  24F3               	addwf	243,w,c
 23900  00564C  6ED9               	movwf	fsr2l,c
 23901  00564E  0E01               	movlw	high (_g_nvm+40)
 23902  005650  20F4               	addwfc	prodh,w,c
 23903  005652  6EDA               	movwf	fsr2h,c
 23904  005654  CFDE F064          	movff	postinc2,___flsub@a
 23905  005658  CFDE F065          	movff	postinc2,___flsub@a+1
 23906  00565C  CFDE F066          	movff	postinc2,___flsub@a+2
 23907  005660  CFDE F067          	movff	postinc2,___flsub@a+3
 23908  005664  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 23909  005666  0D3E               	mullw	62
 23910  005668  0E7E               	movlw	low (_g_nvm+44)
 23911  00566A  24F3               	addwf	243,w,c
 23912  00566C  6ED9               	movwf	fsr2l,c
 23913  00566E  0E01               	movlw	high (_g_nvm+44)
 23914  005670  20F4               	addwfc	prodh,w,c
 23915  005672  6EDA               	movwf	fsr2h,c
 23916  005674  CFDE F060          	movff	postinc2,___flsub@b
 23917  005678  CFDE F061          	movff	postinc2,___flsub@b+1
 23918  00567C  CFDE F062          	movff	postinc2,___flsub@b+2
 23919  005680  CFDE F063          	movff	postinc2,___flsub@b+3
 23920  005684  EC1B  F068         	call	___flsub	;wreg free
 23921  005688  C060  F091         	movff	?___flsub,___fleq@ff1
 23922  00568C  C061  F092         	movff	?___flsub+1,___fleq@ff1+1
 23923  005690  C062  F093         	movff	?___flsub+2,___fleq@ff1+2
 23924  005694  C063  F094         	movff	?___flsub+3,___fleq@ff1+3
 23925  005698  0E00               	movlw	0
 23926  00569A  0100               	movlb	0	; () banked
 23927  00569C  6F95               	movwf	___fleq@ff2& (0+255),b
 23928  00569E  0E00               	movlw	0
 23929  0056A0  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 23930  0056A2  0E00               	movlw	0
 23931  0056A4  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 23932  0056A6  0E00               	movlw	0
 23933  0056A8  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 23934  0056AA  EC32  F05F         	call	___fleq	;wreg free
 23935  0056AE  B0D8               	btfsc	status,0,c
 23936  0056B0  D038               	goto	u41130
 23937                           
 23938                           ; BSR set to: 0
 23939  0056B2  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 23940  0056B4  0D3E               	mullw	62
 23941  0056B6  0E82               	movlw	low (_g_nvm+48)
 23942  0056B8  24F3               	addwf	243,w,c
 23943  0056BA  6ED9               	movwf	fsr2l,c
 23944  0056BC  0E01               	movlw	high (_g_nvm+48)
 23945  0056BE  20F4               	addwfc	prodh,w,c
 23946  0056C0  6EDA               	movwf	fsr2h,c
 23947  0056C2  CFDE F091          	movff	postinc2,___fleq@ff1
 23948  0056C6  CFDE F092          	movff	postinc2,___fleq@ff1+1
 23949  0056CA  CFDE F093          	movff	postinc2,___fleq@ff1+2
 23950  0056CE  CFDE F094          	movff	postinc2,___fleq@ff1+3
 23951  0056D2  0E00               	movlw	0
 23952  0056D4  6F95               	movwf	___fleq@ff2& (0+255),b
 23953  0056D6  0E00               	movlw	0
 23954  0056D8  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 23955  0056DA  0E00               	movlw	0
 23956  0056DC  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 23957  0056DE  0E00               	movlw	0
 23958  0056E0  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 23959  0056E2  EC32  F05F         	call	___fleq	;wreg free
 23960  0056E6  B0D8               	btfsc	status,0,c
 23961  0056E8  D01C               	goto	u41130
 23962                           
 23963                           ; BSR set to: 0
 23964  0056EA  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 23965  0056EC  0D0C               	mullw	12
 23966  0056EE  0E04               	movlw	low (_g_last_value+4)
 23967  0056F0  24F3               	addwf	243,w,c
 23968  0056F2  6ED9               	movwf	fsr2l,c
 23969  0056F4  0E01               	movlw	high (_g_last_value+4)
 23970  0056F6  20F4               	addwfc	prodh,w,c
 23971  0056F8  6EDA               	movwf	fsr2h,c
 23972  0056FA  CFDE F091          	movff	postinc2,___fleq@ff1
 23973  0056FE  CFDE F092          	movff	postinc2,___fleq@ff1+1
 23974  005702  CFDE F093          	movff	postinc2,___fleq@ff1+2
 23975  005706  CFDE F094          	movff	postinc2,___fleq@ff1+3
 23976  00570A  0EB0               	movlw	176
 23977  00570C  6F95               	movwf	___fleq@ff2& (0+255),b
 23978  00570E  0E23               	movlw	35
 23979  005710  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 23980  005712  0E74               	movlw	116
 23981  005714  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 23982  005716  0EC9               	movlw	201
 23983  005718  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 23984  00571A  EC32  F05F         	call	___fleq	;wreg free
 23985  00571E  A0D8               	btfss	status,0,c
 23986  005720  D00F               	goto	l32595
 23987  005722                     u41130:
 23988                           
 23989                           ; BSR set to: 0
 23990                           ;app_atcommand.c: 599: len += _strcpy(&writeBuffer[len], "----");
 23991  005722  0E08               	movlw	low _writeBuffer
 23992  005724  0103               	movlb	3	; () banked
 23993  005726  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 23994  005728  6E0F               	movwf	__strcpy@dest^0,c
 23995  00572A  6A10               	clrf	(__strcpy@dest+1)^0,c
 23996  00572C  0E02               	movlw	high _writeBuffer
 23997  00572E  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 23998  005730  0E55               	movlw	low (STR_4+10)
 23999  005732  6E11               	movwf	__strcpy@source^0,c
 24000  005734  0E23               	movlw	high (STR_4+10)
 24001  005736  6E12               	movwf	(__strcpy@source+1)^0,c
 24002  005738  EC4C  F063         	call	__strcpy	;wreg free
 24003  00573C  500F               	movf	?__strcpy^0,w,c
 24004  00573E  D01B               	goto	L66
 24005  005740                     l32595:
 24006                           
 24007                           ; BSR set to: 0
 24008                           ;app_atcommand.c: 600: else;app_atcommand.c: 601: len += _ftoa(g_last_value[chno][LV_GAS
      +                          _PPM], &writeBuffer[len]);
 24009  005740  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 24010  005742  0D0C               	mullw	12
 24011  005744  0E04               	movlw	low (_g_last_value+4)
 24012  005746  24F3               	addwf	243,w,c
 24013  005748  6ED9               	movwf	fsr2l,c
 24014  00574A  0E01               	movlw	high (_g_last_value+4)
 24015  00574C  20F4               	addwfc	prodh,w,c
 24016  00574E  6EDA               	movwf	fsr2h,c
 24017  005750  CFDE F0C3          	movff	postinc2,__ftoa@num
 24018  005754  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 24019  005758  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 24020  00575C  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 24021  005760  0E08               	movlw	low _writeBuffer
 24022  005762  0103               	movlb	3	; () banked
 24023  005764  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24024  005766  0100               	movlb	0	; () banked
 24025  005768  6FC7               	movwf	__ftoa@str& (0+255),b
 24026  00576A  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 24027  00576C  0E02               	movlw	high _writeBuffer
 24028  00576E  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 24029  005770  ECE9  F068         	call	__ftoa	;wreg free
 24030  005774  51C3               	movf	?__ftoa& (0+255),w,b
 24031  005776                     L66:
 24032  005776  0103               	movlb	3	; () banked
 24033  005778  27E8               	addwf	display_sensor_value@len& (0+255),f,b
 24034                           
 24035                           ; BSR set to: 3
 24036                           ;app_atcommand.c: 602: writeBuffer[len++] = ',';
 24037  00577A  0E08               	movlw	low _writeBuffer
 24038  00577C  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24039  00577E  6ED9               	movwf	fsr2l,c
 24040  005780  6ADA               	clrf	fsr2h,c
 24041  005782  0E02               	movlw	high _writeBuffer
 24042  005784  22DA               	addwfc	fsr2h,f,c
 24043  005786  0E2C               	movlw	44
 24044  005788  6EDF               	movwf	indf2,c
 24045                           
 24046                           ; BSR set to: 3
 24047  00578A  2BE8               	incf	display_sensor_value@len& (0+255),f,b
 24048                           
 24049                           ; BSR set to: 3
 24050                           ;app_atcommand.c: 603: if(g_last_value[chno][LV_TEMP] == -999995.0f) {
 24051  00578C  0100               	movlb	0	; () banked
 24052  00578E  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 24053  005790  0D0C               	mullw	12
 24054  005792  0E08               	movlw	low (_g_last_value+8)
 24055  005794  24F3               	addwf	243,w,c
 24056  005796  6ED9               	movwf	fsr2l,c
 24057  005798  0E01               	movlw	high (_g_last_value+8)
 24058  00579A  20F4               	addwfc	prodh,w,c
 24059  00579C  6EDA               	movwf	fsr2h,c
 24060  00579E  CFDE F091          	movff	postinc2,___fleq@ff1
 24061  0057A2  CFDE F092          	movff	postinc2,___fleq@ff1+1
 24062  0057A6  CFDE F093          	movff	postinc2,___fleq@ff1+2
 24063  0057AA  CFDE F094          	movff	postinc2,___fleq@ff1+3
 24064  0057AE  0EB0               	movlw	176
 24065  0057B0  6F95               	movwf	___fleq@ff2& (0+255),b
 24066  0057B2  0E23               	movlw	35
 24067  0057B4  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 24068  0057B6  0E74               	movlw	116
 24069  0057B8  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 24070  0057BA  0EC9               	movlw	201
 24071  0057BC  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 24072  0057BE  EC32  F05F         	call	___fleq	;wreg free
 24073  0057C2  A0D8               	btfss	status,0,c
 24074  0057C4  D00E               	goto	l32605
 24075                           
 24076                           ; BSR set to: 0
 24077                           ;app_atcommand.c: 604: len += _strcpy(&writeBuffer[len], "----");
 24078  0057C6  0E08               	movlw	low _writeBuffer
 24079  0057C8  0103               	movlb	3	; () banked
 24080  0057CA  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24081  0057CC  6E0F               	movwf	__strcpy@dest^0,c
 24082  0057CE  6A10               	clrf	(__strcpy@dest+1)^0,c
 24083  0057D0  0E02               	movlw	high _writeBuffer
 24084  0057D2  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 24085  0057D4  0E55               	movlw	low (STR_4+10)
 24086  0057D6  6E11               	movwf	__strcpy@source^0,c
 24087  0057D8  0E23               	movlw	high (STR_4+10)
 24088  0057DA  6E12               	movwf	(__strcpy@source+1)^0,c
 24089  0057DC  EC4C  F063         	call	__strcpy	;wreg free
 24090  0057E0  D042               	goto	L67
 24091  0057E2                     l32605:
 24092                           
 24093                           ; BSR set to: 0
 24094                           ;app_atcommand.c: 606: float temp = g_last_value[chno][LV_TEMP];
 24095  0057E2  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 24096  0057E4  0D0C               	mullw	12
 24097  0057E6  0E08               	movlw	low (_g_last_value+8)
 24098  0057E8  24F3               	addwf	243,w,c
 24099  0057EA  6ED9               	movwf	fsr2l,c
 24100  0057EC  0E01               	movlw	high (_g_last_value+8)
 24101  0057EE  20F4               	addwfc	prodh,w,c
 24102  0057F0  6EDA               	movwf	fsr2h,c
 24103  0057F2  CFDE F3E4          	movff	postinc2,display_sensor_value@temp
 24104  0057F6  CFDE F3E5          	movff	postinc2,display_sensor_value@temp+1
 24105  0057FA  CFDE F3E6          	movff	postinc2,display_sensor_value@temp+2
 24106  0057FE  CFDE F3E7          	movff	postinc2,display_sensor_value@temp+3
 24107                           
 24108                           ;app_atcommand.c: 607: if (g_nvm.eeprm[chno].temp_corf == FAHRENHEIT)
 24109  005802  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 24110  005804  0D3E               	mullw	62
 24111  005806  0E78               	movlw	low (_g_nvm+38)
 24112  005808  24F3               	addwf	243,w,c
 24113  00580A  6ED9               	movwf	fsr2l,c
 24114  00580C  0E01               	movlw	high (_g_nvm+38)
 24115  00580E  20F4               	addwfc	prodh,w,c
 24116  005810  6EDA               	movwf	fsr2h,c
 24117  005812  04DE               	decf	postinc2,w,c
 24118  005814  A4D8               	btfss	status,2,c
 24119  005816  D006               	goto	l32609
 24120                           
 24121                           ; BSR set to: 0
 24122                           ;app_atcommand.c: 608: sensor_temp_fahrenheit(&temp);
 24123  005818  0EE4               	movlw	low display_sensor_value@temp
 24124  00581A  6F7D               	movwf	sensor_temp_fahrenheit@temp& (0+255),b
 24125  00581C  0E03               	movlw	high display_sensor_value@temp
 24126  00581E  6F7E               	movwf	(sensor_temp_fahrenheit@temp+1)& (0+255),b
 24127  005820  EC29  F064         	call	_sensor_temp_fahrenheit	;wreg free
 24128  005824                     l32609:
 24129                           
 24130                           ;app_atcommand.c: 609: len += _ftoa(temp, &writeBuffer[len]);
 24131  005824  C3E4  F0C3         	movff	display_sensor_value@temp,__ftoa@num
 24132  005828  C3E5  F0C4         	movff	display_sensor_value@temp+1,__ftoa@num+1
 24133  00582C  C3E6  F0C5         	movff	display_sensor_value@temp+2,__ftoa@num+2
 24134  005830  C3E7  F0C6         	movff	display_sensor_value@temp+3,__ftoa@num+3
 24135  005834  0E08               	movlw	low _writeBuffer
 24136  005836  0103               	movlb	3	; () banked
 24137  005838  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24138  00583A  0100               	movlb	0	; () banked
 24139  00583C  6FC7               	movwf	__ftoa@str& (0+255),b
 24140  00583E  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 24141  005840  0E02               	movlw	high _writeBuffer
 24142  005842  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 24143  005844  ECE9  F068         	call	__ftoa	;wreg free
 24144  005848  51C3               	movf	?__ftoa& (0+255),w,b
 24145  00584A  D00E               	goto	L68
 24146  00584C                     l32611:
 24147                           
 24148                           ; BSR set to: 0
 24149                           ;app_atcommand.c: 612: else;app_atcommand.c: 613: {;app_atcommand.c: 614: len += _strcpy
      +                          (&writeBuffer[len], "----,----,----");
 24150  00584C  0E08               	movlw	low _writeBuffer
 24151  00584E  0103               	movlb	3	; () banked
 24152  005850  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24153  005852  6E0F               	movwf	__strcpy@dest^0,c
 24154  005854  6A10               	clrf	(__strcpy@dest+1)^0,c
 24155  005856  0E02               	movlw	high _writeBuffer
 24156  005858  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 24157  00585A  0E4B               	movlw	low STR_4
 24158  00585C  6E11               	movwf	__strcpy@source^0,c
 24159  00585E  0E23               	movlw	high STR_4
 24160  005860  6E12               	movwf	(__strcpy@source+1)^0,c
 24161  005862  EC4C  F063         	call	__strcpy	;wreg free
 24162  005866                     L67:
 24163  005866  500F               	movf	?__strcpy^0,w,c
 24164  005868                     L68:
 24165  005868  0103               	movlb	3	; () banked
 24166  00586A  27E8               	addwf	display_sensor_value@len& (0+255),f,b
 24167                           
 24168                           ; BSR set to: 3
 24169                           ;app_atcommand.c: 615: };app_atcommand.c: 616: writeBuffer[len++] = ',';
 24170  00586C  0E08               	movlw	low _writeBuffer
 24171  00586E  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24172  005870  6ED9               	movwf	fsr2l,c
 24173  005872  6ADA               	clrf	fsr2h,c
 24174  005874  0E02               	movlw	high _writeBuffer
 24175  005876  22DA               	addwfc	fsr2h,f,c
 24176  005878  0E2C               	movlw	44
 24177  00587A  6EDF               	movwf	indf2,c
 24178                           
 24179                           ; BSR set to: 3
 24180  00587C  2BE8               	incf	display_sensor_value@len& (0+255),f,b
 24181                           
 24182                           ; BSR set to: 3
 24183                           ;app_atcommand.c: 617: len += _ftoa(g_nvm.eeprm[chno].baseLine_uV, &writeBuffer[len]); w
      +                          riteBuffer[len++] = ',';
 24184  00587E  0100               	movlb	0	; () banked
 24185  005880  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 24186  005882  0D3E               	mullw	62
 24187  005884  0E7A               	movlw	low (_g_nvm+40)
 24188  005886  24F3               	addwf	243,w,c
 24189  005888  6ED9               	movwf	fsr2l,c
 24190  00588A  0E01               	movlw	high (_g_nvm+40)
 24191  00588C  20F4               	addwfc	prodh,w,c
 24192  00588E  6EDA               	movwf	fsr2h,c
 24193  005890  CFDE F0C3          	movff	postinc2,__ftoa@num
 24194  005894  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 24195  005898  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 24196  00589C  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 24197  0058A0  0E08               	movlw	low _writeBuffer
 24198  0058A2  0103               	movlb	3	; () banked
 24199  0058A4  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24200  0058A6  0100               	movlb	0	; () banked
 24201  0058A8  6FC7               	movwf	__ftoa@str& (0+255),b
 24202  0058AA  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 24203  0058AC  0E02               	movlw	high _writeBuffer
 24204  0058AE  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 24205  0058B0  ECE9  F068         	call	__ftoa	;wreg free
 24206  0058B4  51C3               	movf	?__ftoa& (0+255),w,b
 24207  0058B6  0103               	movlb	3	; () banked
 24208  0058B8  27E8               	addwf	display_sensor_value@len& (0+255),f,b
 24209                           
 24210                           ; BSR set to: 3
 24211  0058BA  0E08               	movlw	low _writeBuffer
 24212  0058BC  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24213  0058BE  6ED9               	movwf	fsr2l,c
 24214  0058C0  6ADA               	clrf	fsr2h,c
 24215  0058C2  0E02               	movlw	high _writeBuffer
 24216  0058C4  22DA               	addwfc	fsr2h,f,c
 24217  0058C6  0E2C               	movlw	44
 24218  0058C8  6EDF               	movwf	indf2,c
 24219                           
 24220                           ; BSR set to: 3
 24221  0058CA  2BE8               	incf	display_sensor_value@len& (0+255),f,b
 24222                           
 24223                           ; BSR set to: 3
 24224                           ;app_atcommand.c: 618: len += sprintf (&writeBuffer[len], "%.2f", g_nvm.eeprm[chno].gas_
      +                          slope);
 24225  0058CC  0E08               	movlw	low _writeBuffer
 24226  0058CE  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24227  0058D0  0100               	movlb	0	; () banked
 24228  0058D2  6F9D               	movwf	sprintf@sp& (0+255),b
 24229  0058D4  6B9E               	clrf	(sprintf@sp+1)& (0+255),b
 24230  0058D6  0E02               	movlw	high _writeBuffer
 24231  0058D8  239E               	addwfc	(sprintf@sp+1)& (0+255),f,b
 24232  0058DA  0E96               	movlw	low STR_5
 24233  0058DC  6F9F               	movwf	sprintf@f& (0+255),b
 24234  0058DE  0E23               	movlw	high STR_5
 24235  0058E0  6FA0               	movwf	(sprintf@f+1)& (0+255),b
 24236  0058E2  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 24237  0058E4  0D3E               	mullw	62
 24238  0058E6  0E86               	movlw	low (_g_nvm+52)
 24239  0058E8  24F3               	addwf	243,w,c
 24240  0058EA  6ED9               	movwf	fsr2l,c
 24241  0058EC  0E01               	movlw	high (_g_nvm+52)
 24242  0058EE  20F4               	addwfc	prodh,w,c
 24243  0058F0  6EDA               	movwf	fsr2h,c
 24244  0058F2  CFDE F0A1          	movff	postinc2,?_sprintf+4
 24245  0058F6  CFDE F0A2          	movff	postinc2,?_sprintf+5
 24246  0058FA  CFDE F0A3          	movff	postinc2,?_sprintf+6
 24247  0058FE  CFDE F0A4          	movff	postinc2,?_sprintf+7
 24248  005902  EC08  F01F         	call	_sprintf	;wreg free
 24249  005906  519D               	movf	?_sprintf& (0+255),w,b
 24250  005908  0103               	movlb	3	; () banked
 24251  00590A  27E8               	addwf	display_sensor_value@len& (0+255),f,b
 24252                           
 24253                           ; BSR set to: 3
 24254                           ;app_atcommand.c: 620: if (ishex) {
 24255  00590C  51E3               	movf	display_sensor_value@ishex& (0+255),w,b
 24256  00590E  B4D8               	btfsc	status,2,c
 24257  005910  D027               	goto	l32633
 24258                           
 24259                           ; BSR set to: 3
 24260                           ;app_atcommand.c: 621: writeBuffer[len++] = ',';
 24261  005912  0E08               	movlw	low _writeBuffer
 24262  005914  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24263  005916  6ED9               	movwf	fsr2l,c
 24264  005918  6ADA               	clrf	fsr2h,c
 24265  00591A  0E02               	movlw	high _writeBuffer
 24266  00591C  22DA               	addwfc	fsr2h,f,c
 24267  00591E  0E2C               	movlw	44
 24268  005920  6EDF               	movwf	indf2,c
 24269                           
 24270                           ; BSR set to: 3
 24271  005922  2BE8               	incf	display_sensor_value@len& (0+255),f,b
 24272                           
 24273                           ; BSR set to: 3
 24274                           ;app_atcommand.c: 622: len += _ftoa(g_nvm.eeprm[chno].calib_baseLine, &writeBuffer[len])
      +                          ;
 24275  005924  0100               	movlb	0	; () banked
 24276  005926  51CB               	movf	display_sensor_value@chno& (0+255),w,b
 24277  005928  0D3E               	mullw	62
 24278  00592A  0E8A               	movlw	low (_g_nvm+56)
 24279  00592C  24F3               	addwf	243,w,c
 24280  00592E  6ED9               	movwf	fsr2l,c
 24281  005930  0E01               	movlw	high (_g_nvm+56)
 24282  005932  20F4               	addwfc	prodh,w,c
 24283  005934  6EDA               	movwf	fsr2h,c
 24284  005936  CFDE F0C3          	movff	postinc2,__ftoa@num
 24285  00593A  CFDE F0C4          	movff	postinc2,__ftoa@num+1
 24286  00593E  CFDE F0C5          	movff	postinc2,__ftoa@num+2
 24287  005942  CFDE F0C6          	movff	postinc2,__ftoa@num+3
 24288  005946  0E08               	movlw	low _writeBuffer
 24289  005948  0103               	movlb	3	; () banked
 24290  00594A  25E8               	addwf	display_sensor_value@len& (0+255),w,b
 24291  00594C  0100               	movlb	0	; () banked
 24292  00594E  6FC7               	movwf	__ftoa@str& (0+255),b
 24293  005950  6BC8               	clrf	(__ftoa@str+1)& (0+255),b
 24294  005952  0E02               	movlw	high _writeBuffer
 24295  005954  23C8               	addwfc	(__ftoa@str+1)& (0+255),f,b
 24296  005956  ECE9  F068         	call	__ftoa	;wreg free
 24297  00595A  51C3               	movf	?__ftoa& (0+255),w,b
 24298  00595C  0103               	movlb	3	; () banked
 24299  00595E  27E8               	addwf	display_sensor_value@len& (0+255),f,b
 24300  005960                     l32633:
 24301                           
 24302                           ; BSR set to: 3
 24303                           ;app_atcommand.c: 623: };app_atcommand.c: 625: return len;
 24304  005960  51E8               	movf	display_sensor_value@len& (0+255),w,b
 24305                           
 24306                           ; BSR set to: 3
 24307  005962  0012               	return		;funcret
 24308  005964                     __end_of_display_sensor_value:
 24309                           	callstack 0
 24310                           
 24311 ;; *************** function _sensor_temp_fahrenheit *****************
 24312 ;; Defined at:
 24313 ;;		line 170 in file "sensor.c"
 24314 ;; Parameters:    Size  Location     Type
 24315 ;;  temp            2   29[BANK0 ] PTR float 
 24316 ;;		 -> build_response@temp(4), display_sensor_value@temp(4), 
 24317 ;; Auto vars:     Size  Location     Type
 24318 ;;		None
 24319 ;; Return value:  Size  Location     Type
 24320 ;;                  1    wreg      void 
 24321 ;; Registers used:
 24322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24323 ;; Tracked objects:
 24324 ;;		On entry : 3F/0
 24325 ;;		On exit  : 0/0
 24326 ;;		Unchanged: 0/0
 24327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24332 ;;Total ram usage:        2 bytes
 24333 ;; Hardware stack levels used: 1
 24334 ;; Hardware stack levels required when called: 5
 24335 ;; This function calls:
 24336 ;;		___fladd
 24337 ;;		___flmul
 24338 ;; This function is called by:
 24339 ;;		_display_sensor_value
 24340 ;;		_build_response
 24341 ;; This function uses a non-reentrant model
 24342 ;;
 24343                           
 24344                           	psect	text109
 24345  00C852                     __ptext109:
 24346                           	callstack 0
 24347  00C852                     _sensor_temp_fahrenheit:
 24348                           	callstack 23
 24349                           
 24350                           ; BSR set to: 0
 24351                           ;sensor.c: 172: *temp = (*temp * 1.8f) + 32.0f;
 24352                           
 24353                           ; BSR set to: 3
 24354                           ;incstack = 0
 24355  00C852  0E66               	movlw	102
 24356  00C854  6E3C               	movwf	___flmul@a^0,c
 24357  00C856  0E66               	movlw	102
 24358  00C858  6E3D               	movwf	(___flmul@a+1)^0,c
 24359  00C85A  0EE6               	movlw	230
 24360  00C85C  6E3E               	movwf	(___flmul@a+2)^0,c
 24361  00C85E  0E3F               	movlw	63
 24362  00C860  6E3F               	movwf	(___flmul@a+3)^0,c
 24363  00C862  C07D  FFD9         	movff	sensor_temp_fahrenheit@temp,fsr2l
 24364  00C866  C07E  FFDA         	movff	sensor_temp_fahrenheit@temp+1,fsr2h
 24365  00C86A  CFDE F038          	movff	postinc2,___flmul@b
 24366  00C86E  CFDE F039          	movff	postinc2,___flmul@b+1
 24367  00C872  CFDE F03A          	movff	postinc2,___flmul@b+2
 24368  00C876  CFDE F03B          	movff	postinc2,___flmul@b+3
 24369  00C87A  EC9F  F02E         	call	___flmul	;wreg free
 24370  00C87E  C038  F028         	movff	?___flmul,___fladd@b
 24371  00C882  C039  F029         	movff	?___flmul+1,___fladd@b+1
 24372  00C886  C03A  F02A         	movff	?___flmul+2,___fladd@b+2
 24373  00C88A  C03B  F02B         	movff	?___flmul+3,___fladd@b+3
 24374  00C88E  0E00               	movlw	0
 24375  00C890  6E2C               	movwf	___fladd@a^0,c
 24376  00C892  0E00               	movlw	0
 24377  00C894  6E2D               	movwf	(___fladd@a+1)^0,c
 24378  00C896  0E00               	movlw	0
 24379  00C898  6E2E               	movwf	(___fladd@a+2)^0,c
 24380  00C89A  0E42               	movlw	66
 24381  00C89C  6E2F               	movwf	(___fladd@a+3)^0,c
 24382  00C89E  ECBF  F031         	call	___fladd	;wreg free
 24383  00C8A2  C07D  FFD9         	movff	sensor_temp_fahrenheit@temp,fsr2l
 24384  00C8A6  C07E  FFDA         	movff	sensor_temp_fahrenheit@temp+1,fsr2h
 24385  00C8AA  C028  FFDE         	movff	?___fladd,postinc2
 24386  00C8AE  C029  FFDE         	movff	?___fladd+1,postinc2
 24387  00C8B2  C02A  FFDE         	movff	?___fladd+2,postinc2
 24388  00C8B6  C02B  FFDE         	movff	?___fladd+3,postinc2
 24389  00C8BA  0012               	return		;funcret
 24390  00C8BC                     __end_of_sensor_temp_fahrenheit:
 24391                           	callstack 0
 24392                           
 24393 ;; *************** function __strcpy *****************
 24394 ;; Defined at:
 24395 ;;		line 4 in file "util/_string.c"
 24396 ;; Parameters:    Size  Location     Type
 24397 ;;  dest            2   14[COMRAM] PTR unsigned char 
 24398 ;;		 -> writeBuffer(64), g_nvm.eeprm.sensor_name(10), g_atcommand(242), g_nvm.eeprm(124), 
 24399 ;;  source          2   16[COMRAM] PTR const unsigned char 
 24400 ;;		 -> g_atcommand.apply_params(32), STR_16(9), STR_15(3), STR_14(7), 
 24401 ;;		 -> STR_13(8), STR_11(10), STR_10(5), STR_9(5), 
 24402 ;;		 -> STR_8(5), STR_7(15), STR_4(15), STR_3(5), 
 24403 ;;		 -> STR_2(5), STR_1(5), g_nvm.eeprm.sensor_name(10), parse_command@param(32), 
 24404 ;;		 -> parse_command@cmd(11), g_atcommand.status(176), g_atcommand(242), g_nvm.eeprm(124), 
 24405 ;; Auto vars:     Size  Location     Type
 24406 ;;  i               2   20[COMRAM] unsigned int 
 24407 ;; Return value:  Size  Location     Type
 24408 ;;                  2   14[COMRAM] unsigned int 
 24409 ;; Registers used:
 24410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24411 ;; Tracked objects:
 24412 ;;		On entry : 0/0
 24413 ;;		On exit  : 0/0
 24414 ;;		Unchanged: 0/0
 24415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24419 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24420 ;;Total ram usage:        8 bytes
 24421 ;; Hardware stack levels used: 1
 24422 ;; Hardware stack levels required when called: 4
 24423 ;; This function calls:
 24424 ;;		Nothing
 24425 ;; This function is called by:
 24426 ;;		_parse_command
 24427 ;;		_update_command
 24428 ;;		_display_sensor_value
 24429 ;;		_build_response
 24430 ;;		_nvm_sensor_type_channel
 24431 ;; This function uses a non-reentrant model
 24432 ;;
 24433                           
 24434                           	psect	text110
 24435  00C698                     __ptext110:
 24436                           	callstack 0
 24437  00C698                     __strcpy:
 24438                           	callstack 23
 24439                           
 24440                           ;_string.c: 6: unsigned int i = 0;
 24441                           
 24442                           ;incstack = 0
 24443  00C698  0E00               	movlw	0
 24444  00C69A  6E16               	movwf	(__strcpy@i+1)^0,c
 24445  00C69C  0E00               	movlw	0
 24446  00C69E  6E15               	movwf	__strcpy@i^0,c
 24447                           
 24448                           ;_string.c: 7: if(!source || !dest) return i;
 24449  00C6A0  5011               	movf	__strcpy@source^0,w,c
 24450  00C6A2  1012               	iorwf	(__strcpy@source+1)^0,w,c
 24451  00C6A4  B4D8               	btfsc	status,2,c
 24452  00C6A6  D004               	goto	u40250
 24453  00C6A8  500F               	movf	__strcpy@dest^0,w,c
 24454  00C6AA  1010               	iorwf	(__strcpy@dest+1)^0,w,c
 24455  00C6AC  A4D8               	btfss	status,2,c
 24456  00C6AE  D007               	goto	l32057
 24457  00C6B0                     u40250:
 24458  00C6B0  0E00               	movlw	0
 24459  00C6B2  6E10               	movwf	(?__strcpy+1)^0,c
 24460  00C6B4  0E00               	movlw	0
 24461  00C6B6  6E0F               	movwf	?__strcpy^0,c
 24462  00C6B8  0012               	return	
 24463  00C6BA                     l32055:
 24464  00C6BA  4A15               	infsnz	__strcpy@i^0,f,c
 24465  00C6BC  2A16               	incf	(__strcpy@i+1)^0,f,c
 24466  00C6BE                     l32057:
 24467  00C6BE  5011               	movf	__strcpy@source^0,w,c
 24468  00C6C0  6E13               	movwf	??__strcpy^0,c
 24469  00C6C2  5012               	movf	(__strcpy@source+1)^0,w,c
 24470  00C6C4  6E14               	movwf	(??__strcpy+1)^0,c
 24471  00C6C6  4A11               	infsnz	__strcpy@source^0,f,c
 24472  00C6C8  2A12               	incf	(__strcpy@source+1)^0,f,c
 24473  00C6CA  C013  FFF6         	movff	??__strcpy,tblptrl
 24474  00C6CE  C014  FFF7         	movff	??__strcpy+1,tblptrh
 24475  00C6D2  6AF8               	clrf	tblptru,c
 24476  00C6D4  C00F  FFD9         	movff	__strcpy@dest,fsr2l
 24477  00C6D8  C010  FFDA         	movff	__strcpy@dest+1,fsr2h
 24478  00C6DC  4A0F               	infsnz	__strcpy@dest^0,f,c
 24479  00C6DE  2A10               	incf	(__strcpy@dest+1)^0,f,c
 24480  00C6E0  0E0E               	movlw	(high __ramtop+-1)
 24481  00C6E2  64F7               	cpfsgt	tblptrh,c
 24482  00C6E4  D003               	bra	u40267
 24483  00C6E6  0008               	tblrd		*
 24484  00C6E8  50F5               	movf	tablat,w,c
 24485  00C6EA  D005               	bra	u40260
 24486  00C6EC                     u40267:
 24487  00C6EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 24488  00C6F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 24489  00C6F4  50E7               	movf	indf1,w,c
 24490  00C6F6                     u40260:
 24491  00C6F6  6EDF               	movwf	indf2,c
 24492  00C6F8  50DF               	movf	indf2,w,c
 24493  00C6FA  A4D8               	btfss	status,2,c
 24494  00C6FC  D7DE               	goto	l32055
 24495                           
 24496                           ;_string.c: 9: return i;
 24497  00C6FE  C015  F00F         	movff	__strcpy@i,?__strcpy
 24498  00C702  C016  F010         	movff	__strcpy@i+1,?__strcpy+1
 24499  00C706  0012               	return		;funcret
 24500  00C708                     __end_of__strcpy:
 24501                           	callstack 0
 24502                           
 24503 ;; *************** function __ftoa *****************
 24504 ;; Defined at:
 24505 ;;		line 8 in file "util/_ftoa.c"
 24506 ;; Parameters:    Size  Location     Type
 24507 ;;  num             4   99[BANK0 ] const float 
 24508 ;;  str             2  103[BANK0 ] PTR unsigned char 
 24509 ;;		 -> writeBuffer(64), 
 24510 ;; Auto vars:     Size  Location     Type
 24511 ;;  len             2  105[BANK0 ] int 
 24512 ;; Return value:  Size  Location     Type
 24513 ;;                  2   99[BANK0 ] unsigned int 
 24514 ;; Registers used:
 24515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24516 ;; Tracked objects:
 24517 ;;		On entry : 3F/0
 24518 ;;		On exit  : 3F/0
 24519 ;;		Unchanged: 0/0
 24520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24521 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24525 ;;Total ram usage:        8 bytes
 24526 ;; Hardware stack levels used: 1
 24527 ;; Hardware stack levels required when called: 7
 24528 ;; This function calls:
 24529 ;;		_sprintf
 24530 ;; This function is called by:
 24531 ;;		_display_sensor_value
 24532 ;;		_build_response
 24533 ;; This function uses a non-reentrant model
 24534 ;;
 24535                           
 24536                           	psect	text111
 24537  00D1D2                     __ptext111:
 24538                           	callstack 0
 24539  00D1D2                     __ftoa:
 24540                           	callstack 20
 24541                           
 24542                           ; BSR set to: 0
 24543                           ;_ftoa.c: 10: int len = sprintf (str, "%.2f", num);
 24544                           
 24545                           ;incstack = 0
 24546  00D1D2  C0C7  F09D         	movff	__ftoa@str,sprintf@sp
 24547  00D1D6  C0C8  F09E         	movff	__ftoa@str+1,sprintf@sp+1
 24548  00D1DA  0E96               	movlw	low STR_5
 24549  00D1DC  6F9F               	movwf	sprintf@f& (0+255),b
 24550  00D1DE  0E23               	movlw	high STR_5
 24551  00D1E0  6FA0               	movwf	(sprintf@f+1)& (0+255),b
 24552  00D1E2  C0C3  F0A1         	movff	__ftoa@num,?_sprintf+4
 24553  00D1E6  C0C4  F0A2         	movff	__ftoa@num+1,?_sprintf+5
 24554  00D1EA  C0C5  F0A3         	movff	__ftoa@num+2,?_sprintf+6
 24555  00D1EE  C0C6  F0A4         	movff	__ftoa@num+3,?_sprintf+7
 24556  00D1F2  EC08  F01F         	call	_sprintf	;wreg free
 24557  00D1F6  C09D  F0C9         	movff	?_sprintf,__ftoa@len
 24558  00D1FA  C09E  F0CA         	movff	?_sprintf+1,__ftoa@len+1
 24559                           
 24560                           ; BSR set to: 0
 24561                           ;_ftoa.c: 11: if (len < 0) len = 0;
 24562  00D1FE  AFCA               	btfss	(__ftoa@len+1)& (0+255),7,b
 24563  00D200  D004               	goto	l32065
 24564                           
 24565                           ; BSR set to: 0
 24566  00D202  0E00               	movlw	0
 24567  00D204  6FCA               	movwf	(__ftoa@len+1)& (0+255),b
 24568  00D206  0E00               	movlw	0
 24569  00D208  6FC9               	movwf	__ftoa@len& (0+255),b
 24570  00D20A                     l32065:
 24571                           
 24572                           ; BSR set to: 0
 24573                           ;_ftoa.c: 12: return len;
 24574  00D20A  C0C9  F0C3         	movff	__ftoa@len,?__ftoa
 24575  00D20E  C0CA  F0C4         	movff	__ftoa@len+1,?__ftoa+1
 24576                           
 24577                           ; BSR set to: 0
 24578  00D212  0012               	return		;funcret
 24579  00D214                     __end_of__ftoa:
 24580                           	callstack 0
 24581                           
 24582 ;; *************** function _sprintf *****************
 24583 ;; Defined at:
 24584 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 24585 ;; Parameters:    Size  Location     Type
 24586 ;;  sp              2   61[BANK0 ] PTR unsigned char 
 24587 ;;		 -> writeBuffer(64), 
 24588 ;;  f               2   63[BANK0 ] PTR const unsigned char 
 24589 ;;		 -> STR_17(5), STR_12(5), STR_5(5), 
 24590 ;; Auto vars:     Size  Location     Type
 24591 ;;  fval            4   94[BANK0 ] PTR const unsigned char 
 24592 ;;  tmpval          4   88[BANK0 ] struct .
 24593 ;;  val             4   82[BANK0 ] unsigned long 
 24594 ;;  cp              3    0        PTR const unsigned char 
 24595 ;;  prec            2   92[BANK0 ] int 
 24596 ;;  eexp            2   86[BANK0 ] int 
 24597 ;;  flag            2   80[BANK0 ] unsigned short 
 24598 ;;  ccnt            2   78[BANK0 ] int 
 24599 ;;  len             2    0        unsigned int 
 24600 ;;  width           2    0        int 
 24601 ;;  c               1   98[BANK0 ] unsigned char 
 24602 ;;  ap              1   77[BANK0 ] PTR void [1]
 24603 ;;		 -> ?_sprintf(2), 
 24604 ;;  d               1    0        unsigned char 
 24605 ;; Return value:  Size  Location     Type
 24606 ;;                  2   61[BANK0 ] int 
 24607 ;; Registers used:
 24608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24609 ;; Tracked objects:
 24610 ;;		On entry : 3C/3
 24611 ;;		On exit  : 3F/0
 24612 ;;		Unchanged: 0/0
 24613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24614 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24615 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24617 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24618 ;;Total ram usage:       38 bytes
 24619 ;; Hardware stack levels used: 1
 24620 ;; Hardware stack levels required when called: 6
 24621 ;; This function calls:
 24622 ;;		___awdiv
 24623 ;;		___fladd
 24624 ;;		___fleq
 24625 ;;		___flge
 24626 ;;		___flmul
 24627 ;;		___flneg
 24628 ;;		___flsub
 24629 ;;		___fltol
 24630 ;;		___lldiv
 24631 ;;		___llmod
 24632 ;;		___wmul
 24633 ;;		___xxtofl
 24634 ;;		__div_to_l_
 24635 ;;		__tdiv_to_l_
 24636 ;;		_fround
 24637 ;;		_isdigit
 24638 ;;		_scale
 24639 ;; This function is called by:
 24640 ;;		_display_sensor_value
 24641 ;;		_build_response
 24642 ;;		__ftoa
 24643 ;; This function uses a non-reentrant model
 24644 ;;
 24645                           
 24646                           	psect	text112
 24647  003E10                     __ptext112:
 24648                           	callstack 0
 24649  003E10                     _sprintf:
 24650                           	callstack 22
 24651                           
 24652                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 527: int ccnt = 0;
 24653                           
 24654                           ; BSR set to: 0
 24655                           ;incstack = 0
 24656  003E10  0E00               	movlw	0
 24657  003E12  0100               	movlb	0	; () banked
 24658  003E14  6FAF               	movwf	(sprintf@ccnt+1)& (0+255),b
 24659  003E16  0E00               	movlw	0
 24660  003E18  6FAE               	movwf	sprintf@ccnt& (0+255),b
 24661                           
 24662                           ; BSR set to: 0
 24663                           ;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534: int eexp;;doprnt.c: 5
      +                          40: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543:
      +                           } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547:
      +                           const char * cp;;doprnt.c: 550: *ap = __va_start();
 24664  003E1A  0EA1               	movlw	low (?_sprintf+4)
 24665  003E1C  6FAD               	movwf	sprintf@ap& (0+255),b
 24666                           
 24667                           ;doprnt.c: 553: while((c = *f++)) {
 24668  003E1E  D3A8               	goto	l31737
 24669  003E20                     l31521:
 24670                           
 24671                           ; BSR set to: 0
 24672                           ;doprnt.c: 555: if(c != '%')
 24673  003E20  0E25               	movlw	37
 24674  003E22  19C2               	xorwf	sprintf@c& (0+255),w,b
 24675  003E24  B4D8               	btfsc	status,2,c
 24676  003E26  D00B               	goto	l31529
 24677                           
 24678                           ; BSR set to: 0
 24679                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)),(++ccnt));
 24680  003E28  C09D  FFD9         	movff	sprintf@sp,fsr2l
 24681  003E2C  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 24682  003E30  C0C2  FFDF         	movff	sprintf@c,indf2
 24683  003E34                     l31525:
 24684                           
 24685                           ; BSR set to: 0
 24686  003E34  4B9D               	infsnz	sprintf@sp& (0+255),f,b
 24687  003E36  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
 24688                           
 24689                           ; BSR set to: 0
 24690  003E38  4BAE               	infsnz	sprintf@ccnt& (0+255),f,b
 24691  003E3A  2BAF               	incf	(sprintf@ccnt+1)& (0+255),f,b
 24692                           
 24693                           ;doprnt.c: 559: continue;
 24694  003E3C  D399               	goto	l31737
 24695  003E3E                     l31529:
 24696                           
 24697                           ; BSR set to: 0
 24698                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
 24699  003E3E  0E00               	movlw	0
 24700  003E40  6FB1               	movwf	(sprintf@flag+1)& (0+255),b
 24701  003E42  0E00               	movlw	0
 24702  003E44  6FB0               	movwf	sprintf@flag& (0+255),b
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;doprnt.c: 628: if(*f == '.') {
 24706  003E46  C09F  FFF6         	movff	sprintf@f,tblptrl
 24707  003E4A  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
 24708  003E4E                     	if	0	;tblptru may be non-zero
 24709  003E4E                     	endif
 24710  003E4E                     	if	0	;tblptru may be non-zero
 24711  003E4E                     	endif
 24712  003E4E  0008               	tblrd		*
 24713  003E50  50F5               	movf	tablat,w,c
 24714  003E52  0A2E               	xorlw	46
 24715  003E54  A4D8               	btfss	status,2,c
 24716  003E56  D038               	goto	l31545
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;doprnt.c: 629: flag |= 0x4000;
 24720  003E58  8DB1               	bsf	(sprintf@flag+1)& (0+255),6,b
 24721                           
 24722                           ;doprnt.c: 630: f++;
 24723  003E5A  4B9F               	infsnz	sprintf@f& (0+255),f,b
 24724  003E5C  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
 24725                           
 24726                           ; BSR set to: 0
 24727                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 24728  003E5E  0E00               	movlw	0
 24729  003E60  6FBD               	movwf	(sprintf@prec+1)& (0+255),b
 24730  003E62  0E00               	movlw	0
 24731  003E64  6FBC               	movwf	sprintf@prec& (0+255),b
 24732                           
 24733                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 24734  003E66  D025               	goto	l31543
 24735  003E68                     l31537:
 24736                           
 24737                           ;doprnt.c: 647: prec *= 10;
 24738  003E68  C0BC  F00F         	movff	sprintf@prec,___wmul@multiplier
 24739  003E6C  C0BD  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
 24740  003E70  0E00               	movlw	0
 24741  003E72  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 24742  003E74  0E0A               	movlw	10
 24743  003E76  6E11               	movwf	___wmul@multiplicand^0,c
 24744  003E78  ECCC  F06D         	call	___wmul	;wreg free
 24745  003E7C  C00F  F0BC         	movff	?___wmul,sprintf@prec
 24746  003E80  C010  F0BD         	movff	?___wmul+1,sprintf@prec+1
 24747                           
 24748                           ;doprnt.c: 648: prec += *f++ - '0';
 24749  003E84  0ED0               	movlw	208
 24750  003E86  0100               	movlb	0	; () banked
 24751  003E88  6FA5               	movwf	??_sprintf& (0+255),b
 24752  003E8A  0EFF               	movlw	255
 24753  003E8C  6FA6               	movwf	(??_sprintf+1)& (0+255),b
 24754  003E8E  C09F  FFF6         	movff	sprintf@f,tblptrl
 24755  003E92  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
 24756  003E96                     	if	0	;tblptru may be non-zero
 24757  003E96                     	endif
 24758  003E96                     	if	0	;tblptru may be non-zero
 24759  003E96                     	endif
 24760  003E96  0008               	tblrd		*
 24761  003E98  50F5               	movf	tablat,w,c
 24762  003E9A  6FA7               	movwf	(??_sprintf+2)& (0+255),b
 24763  003E9C  6BA8               	clrf	(??_sprintf+3)& (0+255),b
 24764  003E9E  51A5               	movf	??_sprintf& (0+255),w,b
 24765  003EA0  27A7               	addwf	(??_sprintf+2)& (0+255),f,b
 24766  003EA2  51A6               	movf	(??_sprintf+1)& (0+255),w,b
 24767  003EA4  23A8               	addwfc	(??_sprintf+3)& (0+255),f,b
 24768  003EA6  51A7               	movf	(??_sprintf+2)& (0+255),w,b
 24769  003EA8  27BC               	addwf	sprintf@prec& (0+255),f,b
 24770  003EAA  51A8               	movf	(??_sprintf+3)& (0+255),w,b
 24771  003EAC  23BD               	addwfc	(sprintf@prec+1)& (0+255),f,b
 24772                           
 24773                           ; BSR set to: 0
 24774  003EAE  4B9F               	infsnz	sprintf@f& (0+255),f,b
 24775  003EB0  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
 24776  003EB2                     l31543:
 24777                           
 24778                           ; BSR set to: 0
 24779  003EB2  C09F  FFF6         	movff	sprintf@f,tblptrl
 24780  003EB6  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
 24781  003EBA                     	if	0	;tblptru may be non-zero
 24782  003EBA                     	endif
 24783  003EBA                     	if	0	;tblptru may be non-zero
 24784  003EBA                     	endif
 24785  003EBA  0008               	tblrd		*
 24786  003EBC  50F5               	movf	tablat,w,c
 24787  003EBE  EC31  F06E         	call	_isdigit
 24788  003EC2  A0D8               	btfss	status,0,c
 24789  003EC4  D009               	goto	l31553
 24790  003EC6  D7D0               	goto	l31537
 24791  003EC8                     l31545:
 24792                           
 24793                           ; BSR set to: 0
 24794                           ;doprnt.c: 652: prec = 0;
 24795  003EC8  0E00               	movlw	0
 24796  003ECA  6FBD               	movwf	(sprintf@prec+1)& (0+255),b
 24797  003ECC  0E00               	movlw	0
 24798  003ECE  6FBC               	movwf	sprintf@prec& (0+255),b
 24799                           
 24800                           ; BSR set to: 0
 24801                           ;doprnt.c: 654: flag |= 0x1000;
 24802  003ED0  89B1               	bsf	(sprintf@flag+1)& (0+255),4,b
 24803  003ED2  D002               	goto	l31553
 24804  003ED4                     l31549:
 24805                           
 24806                           ; BSR set to: 0
 24807                           ;doprnt.c: 689: flag |= 0x400;
 24808  003ED4  85B1               	bsf	(sprintf@flag+1)& (0+255),2,b
 24809                           
 24810                           ;doprnt.c: 690: break;
 24811  003ED6  D012               	goto	l31555
 24812  003ED8                     l31553:
 24813  003ED8  C09F  FFF6         	movff	sprintf@f,tblptrl
 24814  003EDC  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
 24815  003EE0  0100               	movlb	0	; () banked
 24816  003EE2  4B9F               	infsnz	sprintf@f& (0+255),f,b
 24817  003EE4  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
 24818  003EE6                     	if	0	;tblptru may be non-zero
 24819  003EE6                     	endif
 24820  003EE6                     	if	0	;tblptru may be non-zero
 24821  003EE6                     	endif
 24822  003EE6  0008               	tblrd		*
 24823  003EE8  CFF5 F0C2          	movff	tablat,sprintf@c
 24824  003EEC  51C2               	movf	sprintf@c& (0+255),w,b
 24825                           
 24826                           ; Switch size 1, requested type "simple"
 24827                           ; Number of cases is 2, Range of values is 0 to 102
 24828                           ; switch strategies available:
 24829                           ; Name         Instructions Cycles
 24830                           ; simple_byte            7     4 (average)
 24831                           ;	Chosen strategy is simple_byte
 24832  003EEE  0A00               	xorlw	0	; case 0
 24833  003EF0  B4D8               	btfsc	status,2,c
 24834  003EF2  D34A               	goto	u39830
 24835  003EF4  0A66               	xorlw	102	; case 102
 24836  003EF6  B4D8               	btfsc	status,2,c
 24837  003EF8  D7ED               	goto	l31549
 24838  003EFA  D33A               	goto	l31737
 24839  003EFC                     l31555:
 24840                           
 24841                           ; BSR set to: 0
 24842                           ;doprnt.c: 851: if(flag & (0x700)) {
 24843  003EFC  0E07               	movlw	7
 24844  003EFE  15B1               	andwf	(sprintf@flag+1)& (0+255),w,b
 24845  003F00  B4D8               	btfsc	status,2,c
 24846  003F02  D305               	goto	l31715
 24847                           
 24848                           ; BSR set to: 0
 24849                           ;doprnt.c: 853: if(flag & 0x1000)
 24850  003F04  A9B1               	btfss	(sprintf@flag+1)& (0+255),4,b
 24851  003F06  D004               	goto	l31561
 24852                           
 24853                           ; BSR set to: 0
 24854                           ;doprnt.c: 855: prec = 6;
 24855  003F08  0E00               	movlw	0
 24856  003F0A  6FBD               	movwf	(sprintf@prec+1)& (0+255),b
 24857  003F0C  0E06               	movlw	6
 24858  003F0E  6FBC               	movwf	sprintf@prec& (0+255),b
 24859  003F10                     l31561:
 24860                           
 24861                           ; BSR set to: 0
 24862                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 24863  003F10  51AD               	movf	sprintf@ap& (0+255),w,b
 24864  003F12  6ED9               	movwf	fsr2l,c
 24865  003F14  6ADA               	clrf	fsr2h,c
 24866  003F16  CFDE F0BE          	movff	postinc2,sprintf@fval
 24867  003F1A  CFDE F0BF          	movff	postinc2,sprintf@fval+1
 24868  003F1E  CFDE F0C0          	movff	postinc2,sprintf@fval+2
 24869  003F22  CFDE F0C1          	movff	postinc2,sprintf@fval+3
 24870                           
 24871                           ; BSR set to: 0
 24872  003F26  0E04               	movlw	4
 24873  003F28  27AD               	addwf	sprintf@ap& (0+255),f,b
 24874                           
 24875                           ; BSR set to: 0
 24876                           ;doprnt.c: 857: if(fval < 0.0) {
 24877  003F2A  AFC1               	btfss	(sprintf@fval+3)& (0+255),7,b
 24878  003F2C  D014               	goto	l31571
 24879                           
 24880                           ; BSR set to: 0
 24881                           ;doprnt.c: 858: fval = -fval;
 24882  003F2E  C0BE  F00F         	movff	sprintf@fval,___flneg@f1
 24883  003F32  C0BF  F010         	movff	sprintf@fval+1,___flneg@f1+1
 24884  003F36  C0C0  F011         	movff	sprintf@fval+2,___flneg@f1+2
 24885  003F3A  C0C1  F012         	movff	sprintf@fval+3,___flneg@f1+3
 24886  003F3E  EC65  F06C         	call	___flneg	;wreg free
 24887  003F42  C00F  F0BE         	movff	?___flneg,sprintf@fval
 24888  003F46  C010  F0BF         	movff	?___flneg+1,sprintf@fval+1
 24889  003F4A  C011  F0C0         	movff	?___flneg+2,sprintf@fval+2
 24890  003F4E  C012  F0C1         	movff	?___flneg+3,sprintf@fval+3
 24891                           
 24892                           ; BSR set to: 0
 24893                           ;doprnt.c: 859: flag |= 0x03;
 24894  003F52  0E03               	movlw	3
 24895  003F54  13B0               	iorwf	sprintf@flag& (0+255),f,b
 24896  003F56                     l31571:
 24897                           
 24898                           ; BSR set to: 0
 24899                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 24900  003F56  0E00               	movlw	0
 24901  003F58  6FB7               	movwf	(sprintf@eexp+1)& (0+255),b
 24902  003F5A  0E00               	movlw	0
 24903  003F5C  6FB6               	movwf	sprintf@eexp& (0+255),b
 24904                           
 24905                           ; BSR set to: 0
 24906                           ;doprnt.c: 862: if( fval!=0) {
 24907  003F5E  C0BE  F091         	movff	sprintf@fval,___fleq@ff1
 24908  003F62  C0BF  F092         	movff	sprintf@fval+1,___fleq@ff1+1
 24909  003F66  C0C0  F093         	movff	sprintf@fval+2,___fleq@ff1+2
 24910  003F6A  C0C1  F094         	movff	sprintf@fval+3,___fleq@ff1+3
 24911  003F6E  0E00               	movlw	0
 24912  003F70  6F95               	movwf	___fleq@ff2& (0+255),b
 24913  003F72  0E00               	movlw	0
 24914  003F74  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 24915  003F76  0E00               	movlw	0
 24916  003F78  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 24917  003F7A  0E00               	movlw	0
 24918  003F7C  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 24919  003F7E  EC32  F05F         	call	___fleq	;wreg free
 24920  003F82  B0D8               	btfsc	status,0,c
 24921  003F84  D080               	goto	l31599
 24922                           
 24923                           ; BSR set to: 0
 24924                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 24925  003F86  35C0               	rlcf	(sprintf@fval+2)& (0+255),w,b
 24926  003F88  35C1               	rlcf	(sprintf@fval+3)& (0+255),w,b
 24927  003F8A  0F82               	addlw	130
 24928  003F8C  6FB6               	movwf	sprintf@eexp& (0+255),b
 24929  003F8E  6BB7               	clrf	(sprintf@eexp+1)& (0+255),b
 24930  003F90  0EFF               	movlw	255
 24931  003F92  23B7               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;doprnt.c: 864: eexp--;
 24935  003F94  07B6               	decf	sprintf@eexp& (0+255),f,b
 24936  003F96  A0D8               	btfss	status,0,c
 24937  003F98  07B7               	decf	(sprintf@eexp+1)& (0+255),f,b
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;doprnt.c: 865: eexp *= 3;
 24941  003F9A  C0B6  F00F         	movff	sprintf@eexp,___wmul@multiplier
 24942  003F9E  C0B7  F010         	movff	sprintf@eexp+1,___wmul@multiplier+1
 24943  003FA2  0E00               	movlw	0
 24944  003FA4  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 24945  003FA6  0E03               	movlw	3
 24946  003FA8  6E11               	movwf	___wmul@multiplicand^0,c
 24947  003FAA  ECCC  F06D         	call	___wmul	;wreg free
 24948  003FAE  C00F  F0B6         	movff	?___wmul,sprintf@eexp
 24949  003FB2  C010  F0B7         	movff	?___wmul+1,sprintf@eexp+1
 24950                           
 24951                           ;doprnt.c: 866: eexp /= 10;
 24952  003FB6  C0B6  F015         	movff	sprintf@eexp,___awdiv@dividend
 24953  003FBA  C0B7  F016         	movff	sprintf@eexp+1,___awdiv@dividend+1
 24954  003FBE  0E00               	movlw	0
 24955  003FC0  6E18               	movwf	(___awdiv@divisor+1)^0,c
 24956  003FC2  0E0A               	movlw	10
 24957  003FC4  6E17               	movwf	___awdiv@divisor^0,c
 24958  003FC6  ECFE  F05F         	call	___awdiv	;wreg free
 24959  003FCA  C015  F0B6         	movff	?___awdiv,sprintf@eexp
 24960  003FCE  C016  F0B7         	movff	?___awdiv+1,sprintf@eexp+1
 24961                           
 24962                           ;doprnt.c: 867: if(eexp < 0)
 24963  003FD2  0100               	movlb	0	; () banked
 24964  003FD4  AFB7               	btfss	(sprintf@eexp+1)& (0+255),7,b
 24965  003FD6  D003               	goto	l31587
 24966                           
 24967                           ; BSR set to: 0
 24968                           ;doprnt.c: 868: eexp--;
 24969  003FD8  07B6               	decf	sprintf@eexp& (0+255),f,b
 24970  003FDA  A0D8               	btfss	status,0,c
 24971  003FDC  07B7               	decf	(sprintf@eexp+1)& (0+255),f,b
 24972  003FDE                     l31587:
 24973                           
 24974                           ; BSR set to: 0
 24975                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 24976  003FDE  51B6               	movf	sprintf@eexp& (0+255),w,b
 24977  003FE0  0800               	sublw	0
 24978  003FE2  ECB2  F02C         	call	_scale
 24979  003FE6  C07D  F0B8         	movff	?_scale,sprintf@tmpval
 24980  003FEA  C07E  F0B9         	movff	?_scale+1,sprintf@tmpval+1
 24981  003FEE  C07F  F0BA         	movff	?_scale+2,sprintf@tmpval+2
 24982  003FF2  C080  F0BB         	movff	?_scale+3,sprintf@tmpval+3
 24983                           
 24984                           ; BSR set to: 0
 24985                           ;doprnt.c: 873: tmpval.integ *= fval;
 24986  003FF6  C0B8  F038         	movff	sprintf@tmpval,___flmul@b
 24987  003FFA  C0B9  F039         	movff	sprintf@tmpval+1,___flmul@b+1
 24988  003FFE  C0BA  F03A         	movff	sprintf@tmpval+2,___flmul@b+2
 24989  004002  C0BB  F03B         	movff	sprintf@tmpval+3,___flmul@b+3
 24990  004006  C0BE  F03C         	movff	sprintf@fval,___flmul@a
 24991  00400A  C0BF  F03D         	movff	sprintf@fval+1,___flmul@a+1
 24992  00400E  C0C0  F03E         	movff	sprintf@fval+2,___flmul@a+2
 24993  004012  C0C1  F03F         	movff	sprintf@fval+3,___flmul@a+3
 24994  004016  EC9F  F02E         	call	___flmul	;wreg free
 24995  00401A  C038  F0B8         	movff	?___flmul,sprintf@tmpval
 24996  00401E  C039  F0B9         	movff	?___flmul+1,sprintf@tmpval+1
 24997  004022  C03A  F0BA         	movff	?___flmul+2,sprintf@tmpval+2
 24998  004026  C03B  F0BB         	movff	?___flmul+3,sprintf@tmpval+3
 24999                           
 25000                           ; BSR set to: 0
 25001                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 25002  00402A  C0B8  F091         	movff	sprintf@tmpval,___flge@ff1
 25003  00402E  C0B9  F092         	movff	sprintf@tmpval+1,___flge@ff1+1
 25004  004032  C0BA  F093         	movff	sprintf@tmpval+2,___flge@ff1+2
 25005  004036  C0BB  F094         	movff	sprintf@tmpval+3,___flge@ff1+3
 25006  00403A  0E00               	movlw	0
 25007  00403C  6F95               	movwf	___flge@ff2& (0+255),b
 25008  00403E  0E00               	movlw	0
 25009  004040  6F96               	movwf	(___flge@ff2+1)& (0+255),b
 25010  004042  0E80               	movlw	128
 25011  004044  6F97               	movwf	(___flge@ff2+2)& (0+255),b
 25012  004046  0E3F               	movlw	63
 25013  004048  6F98               	movwf	(___flge@ff2+3)& (0+255),b
 25014  00404A  EC31  F056         	call	___flge	;wreg free
 25015  00404E  B0D8               	btfsc	status,0,c
 25016  004050  D004               	goto	l31595
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;doprnt.c: 875: eexp--;
 25020  004052  07B6               	decf	sprintf@eexp& (0+255),f,b
 25021  004054  A0D8               	btfss	status,0,c
 25022  004056  07B7               	decf	(sprintf@eexp+1)& (0+255),f,b
 25023  004058  D016               	goto	l31599
 25024  00405A                     l31595:
 25025                           
 25026                           ; BSR set to: 0
 25027                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 25028  00405A  C0B8  F091         	movff	sprintf@tmpval,___flge@ff1
 25029  00405E  C0B9  F092         	movff	sprintf@tmpval+1,___flge@ff1+1
 25030  004062  C0BA  F093         	movff	sprintf@tmpval+2,___flge@ff1+2
 25031  004066  C0BB  F094         	movff	sprintf@tmpval+3,___flge@ff1+3
 25032  00406A  0E00               	movlw	0
 25033  00406C  6F95               	movwf	___flge@ff2& (0+255),b
 25034  00406E  0E00               	movlw	0
 25035  004070  6F96               	movwf	(___flge@ff2+1)& (0+255),b
 25036  004072  0E20               	movlw	32
 25037  004074  6F97               	movwf	(___flge@ff2+2)& (0+255),b
 25038  004076  0E41               	movlw	65
 25039  004078  6F98               	movwf	(___flge@ff2+3)& (0+255),b
 25040  00407A  EC31  F056         	call	___flge	;wreg free
 25041  00407E  A0D8               	btfss	status,0,c
 25042  004080  D002               	goto	l31599
 25043                           
 25044                           ; BSR set to: 0
 25045                           ;doprnt.c: 877: eexp++;
 25046  004082  4BB6               	infsnz	sprintf@eexp& (0+255),f,b
 25047  004084  2BB7               	incf	(sprintf@eexp+1)& (0+255),f,b
 25048  004086                     l31599:
 25049                           
 25050                           ; BSR set to: 0
 25051                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 25052  004086  BFBD               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25053  004088  D006               	goto	u39630
 25054  00408A  51BD               	movf	(sprintf@prec+1)& (0+255),w,b
 25055  00408C  E121               	bnz	l31603
 25056  00408E  0E0D               	movlw	13
 25057  004090  5DBC               	subwf	sprintf@prec& (0+255),w,b
 25058  004092  B0D8               	btfsc	status,0,c
 25059  004094  D01D               	goto	l31603
 25060  004096                     u39630:
 25061                           
 25062                           ; BSR set to: 0
 25063                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 25064  004096  C0BE  F028         	movff	sprintf@fval,___fladd@b
 25065  00409A  C0BF  F029         	movff	sprintf@fval+1,___fladd@b+1
 25066  00409E  C0C0  F02A         	movff	sprintf@fval+2,___fladd@b+2
 25067  0040A2  C0C1  F02B         	movff	sprintf@fval+3,___fladd@b+3
 25068  0040A6  51BC               	movf	sprintf@prec& (0+255),w,b
 25069  0040A8  ECF4  F03C         	call	_fround
 25070  0040AC  C07D  F02C         	movff	?_fround,___fladd@a
 25071  0040B0  C07E  F02D         	movff	?_fround+1,___fladd@a+1
 25072  0040B4  C07F  F02E         	movff	?_fround+2,___fladd@a+2
 25073  0040B8  C080  F02F         	movff	?_fround+3,___fladd@a+3
 25074  0040BC  ECBF  F031         	call	___fladd	;wreg free
 25075  0040C0  C028  F0BE         	movff	?___fladd,sprintf@fval
 25076  0040C4  C029  F0BF         	movff	?___fladd+1,sprintf@fval+1
 25077  0040C8  C02A  F0C0         	movff	?___fladd+2,sprintf@fval+2
 25078  0040CC  C02B  F0C1         	movff	?___fladd+3,sprintf@fval+3
 25079  0040D0                     l31603:
 25080                           
 25081                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 25082  0040D0  0100               	movlb	0	; () banked
 25083  0040D2  BFB7               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 25084  0040D4  D006               	goto	u39640
 25085  0040D6  51B7               	movf	(sprintf@eexp+1)& (0+255),w,b
 25086  0040D8  E12F               	bnz	l31611
 25087  0040DA  0E0A               	movlw	10
 25088  0040DC  5DB6               	subwf	sprintf@eexp& (0+255),w,b
 25089  0040DE  B0D8               	btfsc	status,0,c
 25090  0040E0  D02B               	goto	u39670
 25091  0040E2                     u39640:
 25092                           
 25093                           ; BSR set to: 0
 25094  0040E2  C0BE  F091         	movff	sprintf@fval,___fleq@ff1
 25095  0040E6  C0BF  F092         	movff	sprintf@fval+1,___fleq@ff1+1
 25096  0040EA  C0C0  F093         	movff	sprintf@fval+2,___fleq@ff1+2
 25097  0040EE  C0C1  F094         	movff	sprintf@fval+3,___fleq@ff1+3
 25098  0040F2  0E00               	movlw	0
 25099  0040F4  6F95               	movwf	___fleq@ff2& (0+255),b
 25100  0040F6  0E00               	movlw	0
 25101  0040F8  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 25102  0040FA  0E00               	movlw	0
 25103  0040FC  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 25104  0040FE  0E00               	movlw	0
 25105  004100  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 25106  004102  EC32  F05F         	call	___fleq	;wreg free
 25107  004106  B0D8               	btfsc	status,0,c
 25108  004108  D05F               	goto	l31625
 25109                           
 25110                           ; BSR set to: 0
 25111  00410A  C0BE  F07D         	movff	sprintf@fval,___fltol@f1
 25112  00410E  C0BF  F07E         	movff	sprintf@fval+1,___fltol@f1+1
 25113  004112  C0C0  F07F         	movff	sprintf@fval+2,___fltol@f1+2
 25114  004116  C0C1  F080         	movff	sprintf@fval+3,___fltol@f1+3
 25115  00411A  EC52  F059         	call	___fltol	;wreg free
 25116  00411E  517D               	movf	?___fltol& (0+255),w,b
 25117  004120  117E               	iorwf	(?___fltol+1)& (0+255),w,b
 25118  004122  117F               	iorwf	(?___fltol+2)& (0+255),w,b
 25119  004124  1180               	iorwf	(?___fltol+3)& (0+255),w,b
 25120  004126  B4D8               	btfsc	status,2,c
 25121                           
 25122                           ; BSR set to: 0
 25123  004128  BFB7               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 25124  00412A  D04E               	goto	l31625
 25125  00412C  51B7               	movf	(sprintf@eexp+1)& (0+255),w,b
 25126  00412E  E104               	bnz	u39670
 25127  004130  0E02               	movlw	2
 25128  004132  5DB6               	subwf	sprintf@eexp& (0+255),w,b
 25129  004134  A0D8               	btfss	status,0,c
 25130  004136  D048               	goto	l31625
 25131  004138                     u39670:
 25132  004138                     l31611:
 25133                           
 25134                           ; BSR set to: 0
 25135                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 25136  004138  C0B8  F091         	movff	sprintf@tmpval,___flge@ff1
 25137  00413C  C0B9  F092         	movff	sprintf@tmpval+1,___flge@ff1+1
 25138  004140  C0BA  F093         	movff	sprintf@tmpval+2,___flge@ff1+2
 25139  004144  C0BB  F094         	movff	sprintf@tmpval+3,___flge@ff1+3
 25140  004148  0E5F               	movlw	95
 25141  00414A  6F95               	movwf	___flge@ff2& (0+255),b
 25142  00414C  0E70               	movlw	112
 25143  00414E  6F96               	movwf	(___flge@ff2+1)& (0+255),b
 25144  004150  0E89               	movlw	137
 25145  004152  6F97               	movwf	(___flge@ff2+2)& (0+255),b
 25146  004154  0E40               	movlw	64
 25147  004156  6F98               	movwf	(___flge@ff2+3)& (0+255),b
 25148  004158  EC31  F056         	call	___flge	;wreg free
 25149  00415C  B0D8               	btfsc	status,0,c
 25150  00415E  D002               	goto	l31615
 25151                           
 25152                           ; BSR set to: 0
 25153                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25154  004160  0EF7               	movlw	247
 25155  004162  D001               	goto	L69
 25156  004164                     l31615:
 25157                           
 25158                           ; BSR set to: 0
 25159                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25160  004164  0EF8               	movlw	248
 25161  004166                     L69:
 25162  004166  27B6               	addwf	sprintf@eexp& (0+255),f,b
 25163  004168  0EFF               	movlw	255
 25164  00416A  23B7               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 25165                           
 25166                           ; BSR set to: 0
 25167                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25168  00416C  51B6               	movf	sprintf@eexp& (0+255),w,b
 25169  00416E  ECB2  F02C         	call	_scale
 25170  004172  C07D  F0B8         	movff	?_scale,sprintf@tmpval
 25171  004176  C07E  F0B9         	movff	?_scale+1,sprintf@tmpval+1
 25172  00417A  C07F  F0BA         	movff	?_scale+2,sprintf@tmpval+2
 25173  00417E  C080  F0BB         	movff	?_scale+3,sprintf@tmpval+3
 25174                           
 25175                           ; BSR set to: 0
 25176  004182  C0BE  F00F         	movff	sprintf@fval,__div_to_l_@f1
 25177  004186  C0BF  F010         	movff	sprintf@fval+1,__div_to_l_@f1+1
 25178  00418A  C0C0  F011         	movff	sprintf@fval+2,__div_to_l_@f1+2
 25179  00418E  C0C1  F012         	movff	sprintf@fval+3,__div_to_l_@f1+3
 25180  004192  C0B8  F013         	movff	sprintf@tmpval,__div_to_l_@f2
 25181  004196  C0B9  F014         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 25182  00419A  C0BA  F015         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 25183  00419E  C0BB  F016         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
 25184  0041A2  EC1B  F053         	call	__div_to_l_	;wreg free
 25185  0041A6  C00F  F0B2         	movff	?__div_to_l_,sprintf@val
 25186  0041AA  C010  F0B3         	movff	?__div_to_l_+1,sprintf@val+1
 25187  0041AE  C011  F0B4         	movff	?__div_to_l_+2,sprintf@val+2
 25188  0041B2  C012  F0B5         	movff	?__div_to_l_+3,sprintf@val+3
 25189                           
 25190                           ; BSR set to: 0
 25191                           ;doprnt.c: 1155: fval = 0.0;
 25192  0041B6  0E00               	movlw	0
 25193  0041B8  6FBE               	movwf	sprintf@fval& (0+255),b
 25194  0041BA  0E00               	movlw	0
 25195  0041BC  6FBF               	movwf	(sprintf@fval+1)& (0+255),b
 25196  0041BE  0E00               	movlw	0
 25197  0041C0  6FC0               	movwf	(sprintf@fval+2)& (0+255),b
 25198  0041C2  0E00               	movlw	0
 25199  0041C4  6FC1               	movwf	(sprintf@fval+3)& (0+255),b
 25200                           
 25201                           ;doprnt.c: 1156: } else {
 25202  0041C6  D03C               	goto	l31629
 25203  0041C8                     l31625:
 25204                           
 25205                           ; BSR set to: 0
 25206                           ;doprnt.c: 1157: val = (unsigned long)fval;
 25207  0041C8  C0BE  F07D         	movff	sprintf@fval,___fltol@f1
 25208  0041CC  C0BF  F07E         	movff	sprintf@fval+1,___fltol@f1+1
 25209  0041D0  C0C0  F07F         	movff	sprintf@fval+2,___fltol@f1+2
 25210  0041D4  C0C1  F080         	movff	sprintf@fval+3,___fltol@f1+3
 25211  0041D8  EC52  F059         	call	___fltol	;wreg free
 25212  0041DC  C07D  F0B2         	movff	?___fltol,sprintf@val
 25213  0041E0  C07E  F0B3         	movff	?___fltol+1,sprintf@val+1
 25214  0041E4  C07F  F0B4         	movff	?___fltol+2,sprintf@val+2
 25215  0041E8  C080  F0B5         	movff	?___fltol+3,sprintf@val+3
 25216                           
 25217                           ;doprnt.c: 1158: fval -= (double)val;
 25218  0041EC  C0BE  F060         	movff	sprintf@fval,___flsub@b
 25219  0041F0  C0BF  F061         	movff	sprintf@fval+1,___flsub@b+1
 25220  0041F4  C0C0  F062         	movff	sprintf@fval+2,___flsub@b+2
 25221  0041F8  C0C1  F063         	movff	sprintf@fval+3,___flsub@b+3
 25222  0041FC  C0B2  F00F         	movff	sprintf@val,___xxtofl@val
 25223  004200  C0B3  F010         	movff	sprintf@val+1,___xxtofl@val+1
 25224  004204  C0B4  F011         	movff	sprintf@val+2,___xxtofl@val+2
 25225  004208  C0B5  F012         	movff	sprintf@val+3,___xxtofl@val+3
 25226  00420C  0E00               	movlw	0
 25227  00420E  EC4B  F04B         	call	___xxtofl
 25228  004212  C00F  F064         	movff	?___xxtofl,___flsub@a
 25229  004216  C010  F065         	movff	?___xxtofl+1,___flsub@a+1
 25230  00421A  C011  F066         	movff	?___xxtofl+2,___flsub@a+2
 25231  00421E  C012  F067         	movff	?___xxtofl+3,___flsub@a+3
 25232  004222  EC1B  F068         	call	___flsub	;wreg free
 25233  004226  C060  F0BE         	movff	?___flsub,sprintf@fval
 25234  00422A  C061  F0BF         	movff	?___flsub+1,sprintf@fval+1
 25235  00422E  C062  F0C0         	movff	?___flsub+2,sprintf@fval+2
 25236  004232  C063  F0C1         	movff	?___flsub+3,sprintf@fval+3
 25237                           
 25238                           ;doprnt.c: 1159: eexp = 0;
 25239  004236  0E00               	movlw	0
 25240  004238  0100               	movlb	0	; () banked
 25241  00423A  6FB7               	movwf	(sprintf@eexp+1)& (0+255),b
 25242  00423C  0E00               	movlw	0
 25243  00423E  6FB6               	movwf	sprintf@eexp& (0+255),b
 25244  004240                     l31629:
 25245                           
 25246                           ; BSR set to: 0
 25247                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 25248  004240  0E01               	movlw	1
 25249  004242  6FC2               	movwf	sprintf@c& (0+255),b
 25250  004244                     l31635:
 25251                           
 25252                           ; BSR set to: 0
 25253                           ;doprnt.c: 1163: if(val < dpowers[c])
 25254  004244  51C2               	movf	sprintf@c& (0+255),w,b
 25255  004246  0D04               	mullw	4
 25256  004248  0EFB               	movlw	low _dpowers
 25257  00424A  24F3               	addwf	243,w,c
 25258  00424C  6EF6               	movwf	tblptrl,c
 25259  00424E  0E22               	movlw	high _dpowers
 25260  004250  20F4               	addwfc	244,w,c
 25261  004252  6EF7               	movwf	tblptrh,c
 25262  004254                     	if	0	;There are less than 3 active tblptr bytes
 25263  004254                     	endif
 25264  004254  0009               	tblrd		*+
 25265  004256  50F5               	movf	tablat,w,c
 25266  004258  5DB2               	subwf	sprintf@val& (0+255),w,b
 25267  00425A  0009               	tblrd		*+
 25268  00425C  50F5               	movf	tablat,w,c
 25269  00425E  59B3               	subwfb	(sprintf@val+1)& (0+255),w,b
 25270  004260  0009               	tblrd		*+
 25271  004262  50F5               	movf	tablat,w,c
 25272  004264  59B4               	subwfb	(sprintf@val+2)& (0+255),w,b
 25273  004266  0009               	tblrd		*+
 25274  004268  50F5               	movf	tablat,w,c
 25275  00426A  59B5               	subwfb	(sprintf@val+3)& (0+255),w,b
 25276  00426C  A0D8               	btfss	status,0,c
 25277  00426E  D005               	goto	u39700
 25278                           
 25279                           ; BSR set to: 0
 25280  004270  2BC2               	incf	sprintf@c& (0+255),f,b
 25281                           
 25282                           ; BSR set to: 0
 25283  004272  0E0A               	movlw	10
 25284  004274  19C2               	xorwf	sprintf@c& (0+255),w,b
 25285  004276  A4D8               	btfss	status,2,c
 25286  004278  D7E5               	goto	l31635
 25287  00427A                     u39700:
 25288                           
 25289                           ; BSR set to: 0
 25290                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
 25291  00427A  C0B0  F0A5         	movff	sprintf@flag,??_sprintf
 25292  00427E  0E03               	movlw	3
 25293  004280  17A5               	andwf	??_sprintf& (0+255),f,b
 25294  004282  B4D8               	btfsc	status,2,c
 25295  004284  D053               	goto	l31661
 25296                           
 25297                           ; BSR set to: 0
 25298                           ;doprnt.c: 1216: ((*sp++ = ('-')),(++ccnt));
 25299  004286  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25300  00428A  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25301  00428E  0E2D               	movlw	45
 25302  004290  6EDF               	movwf	indf2,c
 25303                           
 25304                           ; BSR set to: 0
 25305  004292  4B9D               	infsnz	sprintf@sp& (0+255),f,b
 25306  004294  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
 25307                           
 25308                           ; BSR set to: 0
 25309  004296  4BAE               	infsnz	sprintf@ccnt& (0+255),f,b
 25310  004298  2BAF               	incf	(sprintf@ccnt+1)& (0+255),f,b
 25311  00429A  D048               	goto	l31661
 25312  00429C                     l31651:
 25313                           
 25314                           ; BSR set to: 0
 25315                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 25316  00429C  C0B2  F00F         	movff	sprintf@val,___lldiv@dividend
 25317  0042A0  C0B3  F010         	movff	sprintf@val+1,___lldiv@dividend+1
 25318  0042A4  C0B4  F011         	movff	sprintf@val+2,___lldiv@dividend+2
 25319  0042A8  C0B5  F012         	movff	sprintf@val+3,___lldiv@dividend+3
 25320  0042AC  51C2               	movf	sprintf@c& (0+255),w,b
 25321  0042AE  0D04               	mullw	4
 25322  0042B0  0EFB               	movlw	low _dpowers
 25323  0042B2  24F3               	addwf	243,w,c
 25324  0042B4  6EF6               	movwf	tblptrl,c
 25325  0042B6  0E22               	movlw	high _dpowers
 25326  0042B8  20F4               	addwfc	244,w,c
 25327  0042BA  6EF7               	movwf	tblptrh,c
 25328  0042BC                     	if	0	;There are less than 3 active tblptr bytes
 25329  0042BC                     	endif
 25330  0042BC  0009               	tblrd		*+
 25331  0042BE  CFF5 F013          	movff	tablat,___lldiv@divisor
 25332  0042C2  0009               	tblrd		*+
 25333  0042C4  CFF5 F014          	movff	tablat,___lldiv@divisor+1
 25334  0042C8  0009               	tblrd		*+
 25335  0042CA  CFF5 F015          	movff	tablat,___lldiv@divisor+2
 25336  0042CE  000A               	tblrd		*-
 25337  0042D0  CFF5 F016          	movff	tablat,___lldiv@divisor+3
 25338  0042D4  EC82  F060         	call	___lldiv	;wreg free
 25339  0042D8  C00F  F0B8         	movff	?___lldiv,sprintf@tmpval
 25340  0042DC  C010  F0B9         	movff	?___lldiv+1,sprintf@tmpval+1
 25341  0042E0  C011  F0BA         	movff	?___lldiv+2,sprintf@tmpval+2
 25342  0042E4  C012  F0BB         	movff	?___lldiv+3,sprintf@tmpval+3
 25343                           
 25344                           ;doprnt.c: 1228: tmpval.vd %= 10;
 25345  0042E8  C0B8  F00F         	movff	sprintf@tmpval,___llmod@dividend
 25346  0042EC  C0B9  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
 25347  0042F0  C0BA  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
 25348  0042F4  C0BB  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
 25349  0042F8  0E0A               	movlw	10
 25350  0042FA  6E13               	movwf	___llmod@divisor^0,c
 25351  0042FC  0E00               	movlw	0
 25352  0042FE  6E14               	movwf	(___llmod@divisor+1)^0,c
 25353  004300  0E00               	movlw	0
 25354  004302  6E15               	movwf	(___llmod@divisor+2)^0,c
 25355  004304  0E00               	movlw	0
 25356  004306  6E16               	movwf	(___llmod@divisor+3)^0,c
 25357  004308  ECC6  F064         	call	___llmod	;wreg free
 25358  00430C  C00F  F0B8         	movff	?___llmod,sprintf@tmpval
 25359  004310  C010  F0B9         	movff	?___llmod+1,sprintf@tmpval+1
 25360  004314  C011  F0BA         	movff	?___llmod+2,sprintf@tmpval+2
 25361  004318  C012  F0BB         	movff	?___llmod+3,sprintf@tmpval+3
 25362                           
 25363                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 25364  00431C  0100               	movlb	0	; () banked
 25365  00431E  51B8               	movf	sprintf@tmpval& (0+255),w,b
 25366  004320  0F30               	addlw	48
 25367  004322  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25368  004326  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25369  00432A  D7B2               	goto	L70
 25370  00432C                     l31661:
 25371                           
 25372                           ; BSR set to: 0
 25373  00432C  07C2               	decf	sprintf@c& (0+255),f,b
 25374  00432E  29C2               	incf	sprintf@c& (0+255),w,b
 25375  004330  B4D8               	btfsc	status,2,c
 25376  004332  D00E               	goto	l31671
 25377  004334  D7B3               	goto	l31651
 25378  004336                     l31663:
 25379                           
 25380                           ; BSR set to: 0
 25381                           ;doprnt.c: 1234: ((*sp++ = ('0')),(++ccnt));
 25382  004336  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25383  00433A  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25384  00433E  0E30               	movlw	48
 25385  004340  6EDF               	movwf	indf2,c
 25386                           
 25387                           ; BSR set to: 0
 25388  004342  4B9D               	infsnz	sprintf@sp& (0+255),f,b
 25389  004344  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
 25390                           
 25391                           ; BSR set to: 0
 25392  004346  4BAE               	infsnz	sprintf@ccnt& (0+255),f,b
 25393  004348  2BAF               	incf	(sprintf@ccnt+1)& (0+255),f,b
 25394                           
 25395                           ; BSR set to: 0
 25396                           ;doprnt.c: 1235: eexp--;
 25397  00434A  07B6               	decf	sprintf@eexp& (0+255),f,b
 25398  00434C  A0D8               	btfss	status,0,c
 25399  00434E  07B7               	decf	(sprintf@eexp+1)& (0+255),f,b
 25400  004350                     l31671:
 25401                           
 25402                           ; BSR set to: 0
 25403  004350  BFB7               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 25404  004352  D005               	goto	u39730
 25405  004354  51B7               	movf	(sprintf@eexp+1)& (0+255),w,b
 25406  004356  E1EF               	bnz	l31663
 25407  004358  05B6               	decf	sprintf@eexp& (0+255),w,b
 25408  00435A  B0D8               	btfsc	status,0,c
 25409  00435C  D7EC               	goto	l31663
 25410  00435E                     u39730:
 25411                           
 25412                           ; BSR set to: 0
 25413                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 25414  00435E  BFBD               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25415  004360  D009               	goto	l2785
 25416  004362  51BD               	movf	(sprintf@prec+1)& (0+255),w,b
 25417  004364  E104               	bnz	u39740
 25418  004366  0E09               	movlw	9
 25419  004368  5DBC               	subwf	sprintf@prec& (0+255),w,b
 25420  00436A  A0D8               	btfss	status,0,c
 25421  00436C  D003               	goto	l2785
 25422  00436E                     u39740:
 25423                           
 25424                           ; BSR set to: 0
 25425                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25426  00436E  0E08               	movlw	8
 25427  004370  6FC2               	movwf	sprintf@c& (0+255),b
 25428  004372  D002               	goto	l31677
 25429  004374                     l2785:
 25430                           
 25431                           ; BSR set to: 0
 25432                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 25433  004374  C0BC  F0C2         	movff	sprintf@prec,sprintf@c
 25434  004378                     l31677:
 25435                           
 25436                           ; BSR set to: 0
 25437                           ;doprnt.c: 1241: prec -= (int)c;
 25438  004378  51C2               	movf	sprintf@c& (0+255),w,b
 25439  00437A  5FBC               	subwf	sprintf@prec& (0+255),f,b
 25440  00437C  0E00               	movlw	0
 25441  00437E  5BBD               	subwfb	(sprintf@prec+1)& (0+255),f,b
 25442                           
 25443                           ; BSR set to: 0
 25444                           ;doprnt.c: 1245: if(c)
 25445  004380  51C2               	movf	sprintf@c& (0+255),w,b
 25446  004382  B4D8               	btfsc	status,2,c
 25447  004384  D00A               	goto	l31687
 25448                           
 25449                           ; BSR set to: 0
 25450                           ;doprnt.c: 1247: ((*sp++ = ('.')),(++ccnt));
 25451  004386  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25452  00438A  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25453  00438E  0E2E               	movlw	46
 25454  004390  6EDF               	movwf	indf2,c
 25455                           
 25456                           ; BSR set to: 0
 25457  004392  4B9D               	infsnz	sprintf@sp& (0+255),f,b
 25458  004394  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
 25459                           
 25460                           ; BSR set to: 0
 25461  004396  4BAE               	infsnz	sprintf@ccnt& (0+255),f,b
 25462  004398  2BAF               	incf	(sprintf@ccnt+1)& (0+255),f,b
 25463  00439A                     l31687:
 25464                           
 25465                           ; BSR set to: 0
 25466                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 25467  00439A  51C2               	movf	sprintf@c& (0+255),w,b
 25468  00439C  ECB2  F02C         	call	_scale
 25469  0043A0  C07D  F0A9         	movff	?_scale,_sprintf$9460
 25470  0043A4  C07E  F0AA         	movff	?_scale+1,_sprintf$9460+1
 25471  0043A8  C07F  F0AB         	movff	?_scale+2,_sprintf$9460+2
 25472  0043AC  C080  F0AC         	movff	?_scale+3,_sprintf$9460+3
 25473                           
 25474                           ; BSR set to: 0
 25475                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 25476  0043B0  C0BE  F03C         	movff	sprintf@fval,___flmul@a
 25477  0043B4  C0BF  F03D         	movff	sprintf@fval+1,___flmul@a+1
 25478  0043B8  C0C0  F03E         	movff	sprintf@fval+2,___flmul@a+2
 25479  0043BC  C0C1  F03F         	movff	sprintf@fval+3,___flmul@a+3
 25480  0043C0  C0A9  F038         	movff	_sprintf$9460,___flmul@b
 25481  0043C4  C0AA  F039         	movff	_sprintf$9460+1,___flmul@b+1
 25482  0043C8  C0AB  F03A         	movff	_sprintf$9460+2,___flmul@b+2
 25483  0043CC  C0AC  F03B         	movff	_sprintf$9460+3,___flmul@b+3
 25484  0043D0  EC9F  F02E         	call	___flmul	;wreg free
 25485  0043D4  C038  F07D         	movff	?___flmul,___fltol@f1
 25486  0043D8  C039  F07E         	movff	?___flmul+1,___fltol@f1+1
 25487  0043DC  C03A  F07F         	movff	?___flmul+2,___fltol@f1+2
 25488  0043E0  C03B  F080         	movff	?___flmul+3,___fltol@f1+3
 25489  0043E4  EC52  F059         	call	___fltol	;wreg free
 25490  0043E8  C07D  F0B2         	movff	?___fltol,sprintf@val
 25491  0043EC  C07E  F0B3         	movff	?___fltol+1,sprintf@val+1
 25492  0043F0  C07F  F0B4         	movff	?___fltol+2,sprintf@val+2
 25493  0043F4  C080  F0B5         	movff	?___fltol+3,sprintf@val+3
 25494                           
 25495                           ;doprnt.c: 1254: while(c--) {
 25496  0043F8  D072               	goto	l31703
 25497  0043FA                     l31691:
 25498                           
 25499                           ; BSR set to: 0
 25500                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 25501  0043FA  C0B2  F00F         	movff	sprintf@val,___lldiv@dividend
 25502  0043FE  C0B3  F010         	movff	sprintf@val+1,___lldiv@dividend+1
 25503  004402  C0B4  F011         	movff	sprintf@val+2,___lldiv@dividend+2
 25504  004406  C0B5  F012         	movff	sprintf@val+3,___lldiv@dividend+3
 25505  00440A  51C2               	movf	sprintf@c& (0+255),w,b
 25506  00440C  0D04               	mullw	4
 25507  00440E  0EFB               	movlw	low _dpowers
 25508  004410  24F3               	addwf	243,w,c
 25509  004412  6EF6               	movwf	tblptrl,c
 25510  004414  0E22               	movlw	high _dpowers
 25511  004416  20F4               	addwfc	244,w,c
 25512  004418  6EF7               	movwf	tblptrh,c
 25513  00441A                     	if	0	;There are less than 3 active tblptr bytes
 25514  00441A                     	endif
 25515  00441A  0009               	tblrd		*+
 25516  00441C  CFF5 F013          	movff	tablat,___lldiv@divisor
 25517  004420  0009               	tblrd		*+
 25518  004422  CFF5 F014          	movff	tablat,___lldiv@divisor+1
 25519  004426  0009               	tblrd		*+
 25520  004428  CFF5 F015          	movff	tablat,___lldiv@divisor+2
 25521  00442C  000A               	tblrd		*-
 25522  00442E  CFF5 F016          	movff	tablat,___lldiv@divisor+3
 25523  004432  EC82  F060         	call	___lldiv	;wreg free
 25524  004436  C00F  F0B8         	movff	?___lldiv,sprintf@tmpval
 25525  00443A  C010  F0B9         	movff	?___lldiv+1,sprintf@tmpval+1
 25526  00443E  C011  F0BA         	movff	?___lldiv+2,sprintf@tmpval+2
 25527  004442  C012  F0BB         	movff	?___lldiv+3,sprintf@tmpval+3
 25528                           
 25529                           ;doprnt.c: 1256: tmpval.vd %= 10;
 25530  004446  C0B8  F00F         	movff	sprintf@tmpval,___llmod@dividend
 25531  00444A  C0B9  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
 25532  00444E  C0BA  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
 25533  004452  C0BB  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
 25534  004456  0E0A               	movlw	10
 25535  004458  6E13               	movwf	___llmod@divisor^0,c
 25536  00445A  0E00               	movlw	0
 25537  00445C  6E14               	movwf	(___llmod@divisor+1)^0,c
 25538  00445E  0E00               	movlw	0
 25539  004460  6E15               	movwf	(___llmod@divisor+2)^0,c
 25540  004462  0E00               	movlw	0
 25541  004464  6E16               	movwf	(___llmod@divisor+3)^0,c
 25542  004466  ECC6  F064         	call	___llmod	;wreg free
 25543  00446A  C00F  F0B8         	movff	?___llmod,sprintf@tmpval
 25544  00446E  C010  F0B9         	movff	?___llmod+1,sprintf@tmpval+1
 25545  004472  C011  F0BA         	movff	?___llmod+2,sprintf@tmpval+2
 25546  004476  C012  F0BB         	movff	?___llmod+3,sprintf@tmpval+3
 25547                           
 25548                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 25549  00447A  0100               	movlb	0	; () banked
 25550  00447C  51B8               	movf	sprintf@tmpval& (0+255),w,b
 25551  00447E  0F30               	addlw	48
 25552  004480  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25553  004484  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25554  004488  6EDF               	movwf	indf2,c
 25555                           
 25556                           ; BSR set to: 0
 25557  00448A  4B9D               	infsnz	sprintf@sp& (0+255),f,b
 25558  00448C  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
 25559                           
 25560                           ; BSR set to: 0
 25561  00448E  4BAE               	infsnz	sprintf@ccnt& (0+255),f,b
 25562  004490  2BAF               	incf	(sprintf@ccnt+1)& (0+255),f,b
 25563                           
 25564                           ; BSR set to: 0
 25565                           ;doprnt.c: 1258: val %= dpowers[c];
 25566  004492  C0B2  F00F         	movff	sprintf@val,___llmod@dividend
 25567  004496  C0B3  F010         	movff	sprintf@val+1,___llmod@dividend+1
 25568  00449A  C0B4  F011         	movff	sprintf@val+2,___llmod@dividend+2
 25569  00449E  C0B5  F012         	movff	sprintf@val+3,___llmod@dividend+3
 25570  0044A2  51C2               	movf	sprintf@c& (0+255),w,b
 25571  0044A4  0D04               	mullw	4
 25572  0044A6  0EFB               	movlw	low _dpowers
 25573  0044A8  24F3               	addwf	243,w,c
 25574  0044AA  6EF6               	movwf	tblptrl,c
 25575  0044AC  0E22               	movlw	high _dpowers
 25576  0044AE  20F4               	addwfc	244,w,c
 25577  0044B0  6EF7               	movwf	tblptrh,c
 25578  0044B2                     	if	0	;There are less than 3 active tblptr bytes
 25579  0044B2                     	endif
 25580  0044B2  0009               	tblrd		*+
 25581  0044B4  CFF5 F013          	movff	tablat,___llmod@divisor
 25582  0044B8  0009               	tblrd		*+
 25583  0044BA  CFF5 F014          	movff	tablat,___llmod@divisor+1
 25584  0044BE  0009               	tblrd		*+
 25585  0044C0  CFF5 F015          	movff	tablat,___llmod@divisor+2
 25586  0044C4  000A               	tblrd		*-
 25587  0044C6  CFF5 F016          	movff	tablat,___llmod@divisor+3
 25588  0044CA  ECC6  F064         	call	___llmod	;wreg free
 25589  0044CE  C00F  F0B2         	movff	?___llmod,sprintf@val
 25590  0044D2  C010  F0B3         	movff	?___llmod+1,sprintf@val+1
 25591  0044D6  C011  F0B4         	movff	?___llmod+2,sprintf@val+2
 25592  0044DA  C012  F0B5         	movff	?___llmod+3,sprintf@val+3
 25593  0044DE                     l31703:
 25594  0044DE  0100               	movlb	0	; () banked
 25595  0044E0  07C2               	decf	sprintf@c& (0+255),f,b
 25596  0044E2  29C2               	incf	sprintf@c& (0+255),w,b
 25597  0044E4  B4D8               	btfsc	status,2,c
 25598  0044E6  D00E               	goto	l31713
 25599  0044E8  D788               	goto	l31691
 25600  0044EA                     l31705:
 25601                           
 25602                           ; BSR set to: 0
 25603                           ;doprnt.c: 1262: ((*sp++ = ('0')),(++ccnt));
 25604  0044EA  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25605  0044EE  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25606  0044F2  0E30               	movlw	48
 25607  0044F4  6EDF               	movwf	indf2,c
 25608                           
 25609                           ; BSR set to: 0
 25610  0044F6  4B9D               	infsnz	sprintf@sp& (0+255),f,b
 25611  0044F8  2B9E               	incf	(sprintf@sp+1)& (0+255),f,b
 25612                           
 25613                           ; BSR set to: 0
 25614  0044FA  4BAE               	infsnz	sprintf@ccnt& (0+255),f,b
 25615  0044FC  2BAF               	incf	(sprintf@ccnt+1)& (0+255),f,b
 25616                           
 25617                           ; BSR set to: 0
 25618                           ;doprnt.c: 1263: prec--;
 25619  0044FE  07BC               	decf	sprintf@prec& (0+255),f,b
 25620  004500  A0D8               	btfss	status,0,c
 25621  004502  07BD               	decf	(sprintf@prec+1)& (0+255),f,b
 25622  004504                     l31713:
 25623                           
 25624                           ; BSR set to: 0
 25625  004504  51BC               	movf	sprintf@prec& (0+255),w,b
 25626  004506  11BD               	iorwf	(sprintf@prec+1)& (0+255),w,b
 25627  004508  B4D8               	btfsc	status,2,c
 25628  00450A  D032               	goto	l31737
 25629  00450C  D7EE               	goto	l31705
 25630  00450E                     l31715:
 25631                           
 25632                           ; BSR set to: 0
 25633                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
 25634  00450E  51BC               	movf	sprintf@prec& (0+255),w,b
 25635  004510  11BD               	iorwf	(sprintf@prec+1)& (0+255),w,b
 25636  004512  A4D8               	btfss	status,2,c
 25637  004514  D008               	goto	l31721
 25638                           
 25639                           ; BSR set to: 0
 25640  004516  51B2               	movf	sprintf@val& (0+255),w,b
 25641  004518  11B3               	iorwf	(sprintf@val+1)& (0+255),w,b
 25642  00451A  11B4               	iorwf	(sprintf@val+2)& (0+255),w,b
 25643  00451C  11B5               	iorwf	(sprintf@val+3)& (0+255),w,b
 25644  00451E  A4D8               	btfss	status,2,c
 25645  004520  D002               	goto	l31721
 25646                           
 25647                           ; BSR set to: 0
 25648                           ;doprnt.c: 1317: prec++;
 25649  004522  4BBC               	infsnz	sprintf@prec& (0+255),f,b
 25650  004524  2BBD               	incf	(sprintf@prec+1)& (0+255),f,b
 25651  004526                     l31721:
 25652                           
 25653                           ; BSR set to: 0
 25654                           ;doprnt.c: 1365: if(c < prec)
 25655  004526  51C2               	movf	sprintf@c& (0+255),w,b
 25656  004528  6FA5               	movwf	??_sprintf& (0+255),b
 25657  00452A  6BA6               	clrf	(??_sprintf+1)& (0+255),b
 25658  00452C  51BC               	movf	sprintf@prec& (0+255),w,b
 25659  00452E  5DA5               	subwf	??_sprintf& (0+255),w,b
 25660  004530  51A6               	movf	(??_sprintf+1)& (0+255),w,b
 25661  004532  0A80               	xorlw	128
 25662  004534  6FA7               	movwf	(??_sprintf+2)& (0+255),b
 25663  004536  51BD               	movf	(sprintf@prec+1)& (0+255),w,b
 25664  004538  0A80               	xorlw	128
 25665  00453A  59A7               	subwfb	(??_sprintf+2)& (0+255),w,b
 25666  00453C  A0D8               	btfss	status,0,c
 25667  00453E  D00B               	goto	u39811
 25668                           
 25669                           ; BSR set to: 0
 25670                           ;doprnt.c: 1367: else if(prec < c)
 25671                           
 25672                           ; BSR set to: 0
 25673  004540  51C2               	movf	sprintf@c& (0+255),w,b
 25674  004542  6FA5               	movwf	??_sprintf& (0+255),b
 25675  004544  6BA6               	clrf	(??_sprintf+1)& (0+255),b
 25676  004546  51A5               	movf	??_sprintf& (0+255),w,b
 25677  004548  5DBC               	subwf	sprintf@prec& (0+255),w,b
 25678  00454A  51BD               	movf	(sprintf@prec+1)& (0+255),w,b
 25679  00454C  0A80               	xorlw	128
 25680  00454E  6FA7               	movwf	(??_sprintf+2)& (0+255),b
 25681  004550  51A6               	movf	(??_sprintf+1)& (0+255),w,b
 25682  004552  0A80               	xorlw	128
 25683  004554  59A7               	subwfb	(??_sprintf+2)& (0+255),w,b
 25684  004556                     u39811:
 25685                           
 25686                           ; BSR set to: 0
 25687                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
 25688                           
 25689                           ; BSR set to: 0
 25690  004556  C0B0  F0A5         	movff	sprintf@flag,??_sprintf
 25691  00455A  0E03               	movlw	3
 25692  00455C  17A5               	andwf	??_sprintf& (0+255),f,b
 25693  00455E  B4D8               	btfsc	status,2,c
 25694  004560  D007               	goto	l31737
 25695                           
 25696                           ; BSR set to: 0
 25697                           ;doprnt.c: 1465: ((*sp++ = ('-')),(++ccnt));
 25698  004562  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25699  004566  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25700  00456A  0E2D               	movlw	45
 25701  00456C  6EDF               	movwf	indf2,c
 25702  00456E  D462               	goto	l31525
 25703  004570                     l31737:
 25704                           
 25705                           ; BSR set to: 0
 25706  004570  C09F  FFF6         	movff	sprintf@f,tblptrl
 25707  004574  C0A0  FFF7         	movff	sprintf@f+1,tblptrh
 25708  004578  4B9F               	infsnz	sprintf@f& (0+255),f,b
 25709  00457A  2BA0               	incf	(sprintf@f+1)& (0+255),f,b
 25710  00457C                     	if	0	;tblptru may be non-zero
 25711  00457C                     	endif
 25712  00457C                     	if	0	;tblptru may be non-zero
 25713  00457C                     	endif
 25714  00457C  0008               	tblrd		*
 25715  00457E  CFF5 F0C2          	movff	tablat,sprintf@c
 25716  004582  51C2               	movf	sprintf@c& (0+255),w,b
 25717  004584  A4D8               	btfss	status,2,c
 25718  004586  D44C               	goto	l31521
 25719  004588                     u39830:
 25720                           
 25721                           ; BSR set to: 0
 25722                           ;doprnt.c: 1564: *sp = 0;
 25723  004588  C09D  FFD9         	movff	sprintf@sp,fsr2l
 25724  00458C  C09E  FFDA         	movff	sprintf@sp+1,fsr2h
 25725  004590  0E00               	movlw	0
 25726  004592  6EDF               	movwf	indf2,c
 25727                           
 25728                           ; BSR set to: 0
 25729                           ;doprnt.c: 1566: return ccnt;
 25730  004594  C0AE  F09D         	movff	sprintf@ccnt,?_sprintf
 25731  004598  C0AF  F09E         	movff	sprintf@ccnt+1,?_sprintf+1
 25732                           
 25733                           ; BSR set to: 0
 25734  00459C  0012               	return		;funcret
 25735  00459E                     __end_of_sprintf:
 25736                           	callstack 0
 25737                           
 25738 ;; *************** function _scale *****************
 25739 ;; Defined at:
 25740 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 25741 ;; Parameters:    Size  Location     Type
 25742 ;;  scl             1    wreg     char 
 25743 ;; Auto vars:     Size  Location     Type
 25744 ;;  scl             1   37[BANK0 ] char 
 25745 ;; Return value:  Size  Location     Type
 25746 ;;                  4   29[BANK0 ] char 
 25747 ;; Registers used:
 25748 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25749 ;; Tracked objects:
 25750 ;;		On entry : 3F/0
 25751 ;;		On exit  : 3F/0
 25752 ;;		Unchanged: 0/0
 25753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25754 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25755 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25757 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25758 ;;Total ram usage:        9 bytes
 25759 ;; Hardware stack levels used: 1
 25760 ;; Hardware stack levels required when called: 5
 25761 ;; This function calls:
 25762 ;;		___awdiv
 25763 ;;		___awmod
 25764 ;;		___flmul
 25765 ;; This function is called by:
 25766 ;;		_sprintf
 25767 ;; This function uses a non-reentrant model
 25768 ;;
 25769                           
 25770                           	psect	text113
 25771  005964                     __ptext113:
 25772                           	callstack 0
 25773  005964                     _scale:
 25774                           	callstack 22
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;incstack = 0
 25778                           ;scale@scl stored from wreg
 25779  005964  6F85               	movwf	scale@scl& (0+255),b
 25780                           
 25781                           ;doprnt.c: 436: if(scl < 0) {
 25782  005966  0100               	movlb	0	; () banked
 25783  005968  AF85               	btfss	scale@scl& (0+255),7,b
 25784  00596A  D0F5               	goto	l31129
 25785                           
 25786                           ; BSR set to: 0
 25787                           ;doprnt.c: 437: scl = -scl;
 25788  00596C  6D85               	negf	scale@scl& (0+255),b
 25789                           
 25790                           ;doprnt.c: 438: if(scl>=110)
 25791  00596E  5185               	movf	scale@scl& (0+255),w,b
 25792  005970  0A80               	xorlw	128
 25793  005972  0F12               	addlw	-238
 25794  005974  A0D8               	btfss	status,0,c
 25795  005976  D089               	goto	l31119
 25796                           
 25797                           ; BSR set to: 0
 25798                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 25799  005978  0E00               	movlw	0
 25800  00597A  6E18               	movwf	(___awdiv@divisor+1)^0,c
 25801  00597C  0E0A               	movlw	10
 25802  00597E  6E17               	movwf	___awdiv@divisor^0,c
 25803  005980  0E00               	movlw	0
 25804  005982  6E12               	movwf	(___awmod@divisor+1)^0,c
 25805  005984  0E64               	movlw	100
 25806  005986  6E11               	movwf	___awmod@divisor^0,c
 25807  005988  5185               	movf	scale@scl& (0+255),w,b
 25808  00598A  6E0F               	movwf	___awmod@dividend^0,c
 25809  00598C  6A10               	clrf	(___awmod@dividend+1)^0,c
 25810  00598E  BE0F               	btfsc	___awmod@dividend^0,7,c
 25811  005990  0610               	decf	(___awmod@dividend+1)^0,f,c
 25812  005992  EC84  F063         	call	___awmod	;wreg free
 25813  005996  C00F  F015         	movff	?___awmod,___awdiv@dividend
 25814  00599A  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
 25815  00599E  ECFE  F05F         	call	___awdiv	;wreg free
 25816  0059A2  0E09               	movlw	9
 25817  0059A4  2615               	addwf	?___awdiv^0,f,c
 25818  0059A6  5015               	movf	?___awdiv^0,w,c
 25819  0059A8  0D04               	mullw	4
 25820  0059AA  0E3D               	movlw	low __npowers_
 25821  0059AC  24F3               	addwf	243,w,c
 25822  0059AE  6EF6               	movwf	tblptrl,c
 25823  0059B0  0E20               	movlw	high __npowers_
 25824  0059B2  20F4               	addwfc	244,w,c
 25825  0059B4  6EF7               	movwf	tblptrh,c
 25826  0059B6                     	if	0	;There are less than 3 active tblptr bytes
 25827  0059B6                     	endif
 25828  0059B6  0009               	tblrd		*+
 25829  0059B8  CFF5 F03C          	movff	tablat,___flmul@a
 25830  0059BC  0009               	tblrd		*+
 25831  0059BE  CFF5 F03D          	movff	tablat,___flmul@a+1
 25832  0059C2  0009               	tblrd		*+
 25833  0059C4  CFF5 F03E          	movff	tablat,___flmul@a+2
 25834  0059C8  000A               	tblrd		*-
 25835  0059CA  CFF5 F03F          	movff	tablat,___flmul@a+3
 25836  0059CE  0E00               	movlw	0
 25837  0059D0  6E18               	movwf	(___awdiv@divisor+1)^0,c
 25838  0059D2  0E64               	movlw	100
 25839  0059D4  6E17               	movwf	___awdiv@divisor^0,c
 25840  0059D6  0100               	movlb	0	; () banked
 25841  0059D8  5185               	movf	scale@scl& (0+255),w,b
 25842  0059DA  6E15               	movwf	___awdiv@dividend^0,c
 25843  0059DC  6A16               	clrf	(___awdiv@dividend+1)^0,c
 25844  0059DE  BE15               	btfsc	___awdiv@dividend^0,7,c
 25845  0059E0  0616               	decf	(___awdiv@dividend+1)^0,f,c
 25846  0059E2  ECFE  F05F         	call	___awdiv	;wreg free
 25847  0059E6  0E12               	movlw	18
 25848  0059E8  2615               	addwf	?___awdiv^0,f,c
 25849  0059EA  5015               	movf	?___awdiv^0,w,c
 25850  0059EC  0D04               	mullw	4
 25851  0059EE  0E3D               	movlw	low __npowers_
 25852  0059F0  24F3               	addwf	243,w,c
 25853  0059F2  6EF6               	movwf	tblptrl,c
 25854  0059F4  0E20               	movlw	high __npowers_
 25855  0059F6  20F4               	addwfc	244,w,c
 25856  0059F8  6EF7               	movwf	tblptrh,c
 25857  0059FA                     	if	0	;There are less than 3 active tblptr bytes
 25858  0059FA                     	endif
 25859  0059FA  0009               	tblrd		*+
 25860  0059FC  CFF5 F038          	movff	tablat,___flmul@b
 25861  005A00  0009               	tblrd		*+
 25862  005A02  CFF5 F039          	movff	tablat,___flmul@b+1
 25863  005A06  0009               	tblrd		*+
 25864  005A08  CFF5 F03A          	movff	tablat,___flmul@b+2
 25865  005A0C  000A               	tblrd		*-
 25866  005A0E  CFF5 F03B          	movff	tablat,___flmul@b+3
 25867  005A12  EC9F  F02E         	call	___flmul	;wreg free
 25868  005A16  C038  F081         	movff	?___flmul,_scale$9459
 25869  005A1A  C039  F082         	movff	?___flmul+1,_scale$9459+1
 25870  005A1E  C03A  F083         	movff	?___flmul+2,_scale$9459+2
 25871  005A22  C03B  F084         	movff	?___flmul+3,_scale$9459+3
 25872                           
 25873                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 25874  005A26  C081  F038         	movff	_scale$9459,___flmul@b
 25875  005A2A  C082  F039         	movff	_scale$9459+1,___flmul@b+1
 25876  005A2E  C083  F03A         	movff	_scale$9459+2,___flmul@b+2
 25877  005A32  C084  F03B         	movff	_scale$9459+3,___flmul@b+3
 25878  005A36  0E00               	movlw	0
 25879  005A38  6E12               	movwf	(___awmod@divisor+1)^0,c
 25880  005A3A  0E0A               	movlw	10
 25881  005A3C  6E11               	movwf	___awmod@divisor^0,c
 25882  005A3E  5185               	movf	scale@scl& (0+255),w,b
 25883  005A40  6E0F               	movwf	___awmod@dividend^0,c
 25884  005A42  6A10               	clrf	(___awmod@dividend+1)^0,c
 25885  005A44  BE0F               	btfsc	___awmod@dividend^0,7,c
 25886  005A46  0610               	decf	(___awmod@dividend+1)^0,f,c
 25887  005A48  EC84  F063         	call	___awmod	;wreg free
 25888  005A4C  500F               	movf	?___awmod^0,w,c
 25889  005A4E  0D04               	mullw	4
 25890  005A50  0E3D               	movlw	low __npowers_
 25891  005A52  24F3               	addwf	243,w,c
 25892  005A54  6EF6               	movwf	tblptrl,c
 25893  005A56  0E20               	movlw	high __npowers_
 25894  005A58  20F4               	addwfc	244,w,c
 25895  005A5A  6EF7               	movwf	tblptrh,c
 25896  005A5C                     	if	0	;There are less than 3 active tblptr bytes
 25897  005A5C                     	endif
 25898  005A5C  0009               	tblrd		*+
 25899  005A5E  CFF5 F03C          	movff	tablat,___flmul@a
 25900  005A62  0009               	tblrd		*+
 25901  005A64  CFF5 F03D          	movff	tablat,___flmul@a+1
 25902  005A68  0009               	tblrd		*+
 25903  005A6A  CFF5 F03E          	movff	tablat,___flmul@a+2
 25904  005A6E  000A               	tblrd		*-
 25905  005A70  CFF5 F03F          	movff	tablat,___flmul@a+3
 25906  005A74  EC9F  F02E         	call	___flmul	;wreg free
 25907  005A78  C038  F07D         	movff	?___flmul,?_scale
 25908  005A7C  C039  F07E         	movff	?___flmul+1,?_scale+1
 25909  005A80  C03A  F07F         	movff	?___flmul+2,?_scale+2
 25910  005A84  C03B  F080         	movff	?___flmul+3,?_scale+3
 25911  005A88  0012               	return	
 25912  005A8A                     l31119:
 25913                           
 25914                           ; BSR set to: 0
 25915                           ;doprnt.c: 440: else if(scl > 10)
 25916  005A8A  5185               	movf	scale@scl& (0+255),w,b
 25917  005A8C  0A80               	xorlw	128
 25918  005A8E  0F75               	addlw	-139
 25919  005A90  A0D8               	btfss	status,0,c
 25920  005A92  D04C               	goto	l31125
 25921                           
 25922                           ; BSR set to: 0
 25923                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 25924  005A94  0E00               	movlw	0
 25925  005A96  6E18               	movwf	(___awdiv@divisor+1)^0,c
 25926  005A98  0E0A               	movlw	10
 25927  005A9A  6E17               	movwf	___awdiv@divisor^0,c
 25928  005A9C  5185               	movf	scale@scl& (0+255),w,b
 25929  005A9E  6E15               	movwf	___awdiv@dividend^0,c
 25930  005AA0  6A16               	clrf	(___awdiv@dividend+1)^0,c
 25931  005AA2  BE15               	btfsc	___awdiv@dividend^0,7,c
 25932  005AA4  0616               	decf	(___awdiv@dividend+1)^0,f,c
 25933  005AA6  ECFE  F05F         	call	___awdiv	;wreg free
 25934  005AAA  0E09               	movlw	9
 25935  005AAC  2615               	addwf	?___awdiv^0,f,c
 25936  005AAE  5015               	movf	?___awdiv^0,w,c
 25937  005AB0  0D04               	mullw	4
 25938  005AB2  0E3D               	movlw	low __npowers_
 25939  005AB4  24F3               	addwf	243,w,c
 25940  005AB6  6EF6               	movwf	tblptrl,c
 25941  005AB8  0E20               	movlw	high __npowers_
 25942  005ABA  20F4               	addwfc	244,w,c
 25943  005ABC  6EF7               	movwf	tblptrh,c
 25944  005ABE                     	if	0	;There are less than 3 active tblptr bytes
 25945  005ABE                     	endif
 25946  005ABE  0009               	tblrd		*+
 25947  005AC0  CFF5 F038          	movff	tablat,___flmul@b
 25948  005AC4  0009               	tblrd		*+
 25949  005AC6  CFF5 F039          	movff	tablat,___flmul@b+1
 25950  005ACA  0009               	tblrd		*+
 25951  005ACC  CFF5 F03A          	movff	tablat,___flmul@b+2
 25952  005AD0  000A               	tblrd		*-
 25953  005AD2  CFF5 F03B          	movff	tablat,___flmul@b+3
 25954  005AD6  0E00               	movlw	0
 25955  005AD8  6E12               	movwf	(___awmod@divisor+1)^0,c
 25956  005ADA  0E0A               	movlw	10
 25957  005ADC  6E11               	movwf	___awmod@divisor^0,c
 25958  005ADE  0100               	movlb	0	; () banked
 25959  005AE0  5185               	movf	scale@scl& (0+255),w,b
 25960  005AE2  6E0F               	movwf	___awmod@dividend^0,c
 25961  005AE4  6A10               	clrf	(___awmod@dividend+1)^0,c
 25962  005AE6  BE0F               	btfsc	___awmod@dividend^0,7,c
 25963  005AE8  0610               	decf	(___awmod@dividend+1)^0,f,c
 25964  005AEA  EC84  F063         	call	___awmod	;wreg free
 25965  005AEE  500F               	movf	?___awmod^0,w,c
 25966  005AF0  0D04               	mullw	4
 25967  005AF2  0E3D               	movlw	low __npowers_
 25968  005AF4  24F3               	addwf	243,w,c
 25969  005AF6  6EF6               	movwf	tblptrl,c
 25970  005AF8  0E20               	movlw	high __npowers_
 25971  005AFA  20F4               	addwfc	244,w,c
 25972  005AFC  6EF7               	movwf	tblptrh,c
 25973  005AFE                     	if	0	;There are less than 3 active tblptr bytes
 25974  005AFE                     	endif
 25975  005AFE  0009               	tblrd		*+
 25976  005B00  CFF5 F03C          	movff	tablat,___flmul@a
 25977  005B04  0009               	tblrd		*+
 25978  005B06  CFF5 F03D          	movff	tablat,___flmul@a+1
 25979  005B0A  0009               	tblrd		*+
 25980  005B0C  CFF5 F03E          	movff	tablat,___flmul@a+2
 25981  005B10  000A               	tblrd		*-
 25982  005B12  CFF5 F03F          	movff	tablat,___flmul@a+3
 25983  005B16  EC9F  F02E         	call	___flmul	;wreg free
 25984  005B1A  C038  F07D         	movff	?___flmul,?_scale
 25985  005B1E  C039  F07E         	movff	?___flmul+1,?_scale+1
 25986  005B22  C03A  F07F         	movff	?___flmul+2,?_scale+2
 25987  005B26  C03B  F080         	movff	?___flmul+3,?_scale+3
 25988  005B2A  0012               	return	
 25989  005B2C                     l31125:
 25990                           
 25991                           ; BSR set to: 0
 25992                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 25993  005B2C  5185               	movf	scale@scl& (0+255),w,b
 25994  005B2E  0D04               	mullw	4
 25995  005B30  0E3D               	movlw	low __npowers_
 25996  005B32  24F3               	addwf	243,w,c
 25997  005B34  6EF6               	movwf	tblptrl,c
 25998  005B36  0E20               	movlw	high __npowers_
 25999  005B38  20F4               	addwfc	244,w,c
 26000  005B3A  6EF7               	movwf	tblptrh,c
 26001  005B3C                     	if	0	;There are less than 3 active tblptr bytes
 26002  005B3C                     	endif
 26003  005B3C  0009               	tblrd		*+
 26004  005B3E  CFF5 F07D          	movff	tablat,?_scale
 26005  005B42  0009               	tblrd		*+
 26006  005B44  CFF5 F07E          	movff	tablat,?_scale+1
 26007  005B48  0009               	tblrd		*+
 26008  005B4A  CFF5 F07F          	movff	tablat,?_scale+2
 26009  005B4E  000A               	tblrd		*-
 26010  005B50  CFF5 F080          	movff	tablat,?_scale+3
 26011  005B54  0012               	return	
 26012  005B56                     l31129:
 26013                           
 26014                           ; BSR set to: 0
 26015                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 26016  005B56  5185               	movf	scale@scl& (0+255),w,b
 26017  005B58  0A80               	xorlw	128
 26018  005B5A  0F12               	addlw	-238
 26019  005B5C  A0D8               	btfss	status,0,c
 26020  005B5E  D089               	goto	l31137
 26021                           
 26022                           ; BSR set to: 0
 26023                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26024  005B60  0E00               	movlw	0
 26025  005B62  6E18               	movwf	(___awdiv@divisor+1)^0,c
 26026  005B64  0E0A               	movlw	10
 26027  005B66  6E17               	movwf	___awdiv@divisor^0,c
 26028  005B68  0E00               	movlw	0
 26029  005B6A  6E12               	movwf	(___awmod@divisor+1)^0,c
 26030  005B6C  0E64               	movlw	100
 26031  005B6E  6E11               	movwf	___awmod@divisor^0,c
 26032  005B70  5185               	movf	scale@scl& (0+255),w,b
 26033  005B72  6E0F               	movwf	___awmod@dividend^0,c
 26034  005B74  6A10               	clrf	(___awmod@dividend+1)^0,c
 26035  005B76  BE0F               	btfsc	___awmod@dividend^0,7,c
 26036  005B78  0610               	decf	(___awmod@dividend+1)^0,f,c
 26037  005B7A  EC84  F063         	call	___awmod	;wreg free
 26038  005B7E  C00F  F015         	movff	?___awmod,___awdiv@dividend
 26039  005B82  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
 26040  005B86  ECFE  F05F         	call	___awdiv	;wreg free
 26041  005B8A  0E09               	movlw	9
 26042  005B8C  2615               	addwf	?___awdiv^0,f,c
 26043  005B8E  5015               	movf	?___awdiv^0,w,c
 26044  005B90  0D04               	mullw	4
 26045  005B92  0E09               	movlw	low __powers_
 26046  005B94  24F3               	addwf	243,w,c
 26047  005B96  6EF6               	movwf	tblptrl,c
 26048  005B98  0E20               	movlw	high __powers_
 26049  005B9A  20F4               	addwfc	244,w,c
 26050  005B9C  6EF7               	movwf	tblptrh,c
 26051  005B9E                     	if	0	;There are less than 3 active tblptr bytes
 26052  005B9E                     	endif
 26053  005B9E  0009               	tblrd		*+
 26054  005BA0  CFF5 F03C          	movff	tablat,___flmul@a
 26055  005BA4  0009               	tblrd		*+
 26056  005BA6  CFF5 F03D          	movff	tablat,___flmul@a+1
 26057  005BAA  0009               	tblrd		*+
 26058  005BAC  CFF5 F03E          	movff	tablat,___flmul@a+2
 26059  005BB0  000A               	tblrd		*-
 26060  005BB2  CFF5 F03F          	movff	tablat,___flmul@a+3
 26061  005BB6  0E00               	movlw	0
 26062  005BB8  6E18               	movwf	(___awdiv@divisor+1)^0,c
 26063  005BBA  0E64               	movlw	100
 26064  005BBC  6E17               	movwf	___awdiv@divisor^0,c
 26065  005BBE  0100               	movlb	0	; () banked
 26066  005BC0  5185               	movf	scale@scl& (0+255),w,b
 26067  005BC2  6E15               	movwf	___awdiv@dividend^0,c
 26068  005BC4  6A16               	clrf	(___awdiv@dividend+1)^0,c
 26069  005BC6  BE15               	btfsc	___awdiv@dividend^0,7,c
 26070  005BC8  0616               	decf	(___awdiv@dividend+1)^0,f,c
 26071  005BCA  ECFE  F05F         	call	___awdiv	;wreg free
 26072  005BCE  0E12               	movlw	18
 26073  005BD0  2615               	addwf	?___awdiv^0,f,c
 26074  005BD2  5015               	movf	?___awdiv^0,w,c
 26075  005BD4  0D04               	mullw	4
 26076  005BD6  0E09               	movlw	low __powers_
 26077  005BD8  24F3               	addwf	243,w,c
 26078  005BDA  6EF6               	movwf	tblptrl,c
 26079  005BDC  0E20               	movlw	high __powers_
 26080  005BDE  20F4               	addwfc	244,w,c
 26081  005BE0  6EF7               	movwf	tblptrh,c
 26082  005BE2                     	if	0	;There are less than 3 active tblptr bytes
 26083  005BE2                     	endif
 26084  005BE2  0009               	tblrd		*+
 26085  005BE4  CFF5 F038          	movff	tablat,___flmul@b
 26086  005BE8  0009               	tblrd		*+
 26087  005BEA  CFF5 F039          	movff	tablat,___flmul@b+1
 26088  005BEE  0009               	tblrd		*+
 26089  005BF0  CFF5 F03A          	movff	tablat,___flmul@b+2
 26090  005BF4  000A               	tblrd		*-
 26091  005BF6  CFF5 F03B          	movff	tablat,___flmul@b+3
 26092  005BFA  EC9F  F02E         	call	___flmul	;wreg free
 26093  005BFE  C038  F081         	movff	?___flmul,_scale$9459
 26094  005C02  C039  F082         	movff	?___flmul+1,_scale$9459+1
 26095  005C06  C03A  F083         	movff	?___flmul+2,_scale$9459+2
 26096  005C0A  C03B  F084         	movff	?___flmul+3,_scale$9459+3
 26097                           
 26098                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26099  005C0E  C081  F038         	movff	_scale$9459,___flmul@b
 26100  005C12  C082  F039         	movff	_scale$9459+1,___flmul@b+1
 26101  005C16  C083  F03A         	movff	_scale$9459+2,___flmul@b+2
 26102  005C1A  C084  F03B         	movff	_scale$9459+3,___flmul@b+3
 26103  005C1E  0E00               	movlw	0
 26104  005C20  6E12               	movwf	(___awmod@divisor+1)^0,c
 26105  005C22  0E0A               	movlw	10
 26106  005C24  6E11               	movwf	___awmod@divisor^0,c
 26107  005C26  5185               	movf	scale@scl& (0+255),w,b
 26108  005C28  6E0F               	movwf	___awmod@dividend^0,c
 26109  005C2A  6A10               	clrf	(___awmod@dividend+1)^0,c
 26110  005C2C  BE0F               	btfsc	___awmod@dividend^0,7,c
 26111  005C2E  0610               	decf	(___awmod@dividend+1)^0,f,c
 26112  005C30  EC84  F063         	call	___awmod	;wreg free
 26113  005C34  500F               	movf	?___awmod^0,w,c
 26114  005C36  0D04               	mullw	4
 26115  005C38  0E09               	movlw	low __powers_
 26116  005C3A  24F3               	addwf	243,w,c
 26117  005C3C  6EF6               	movwf	tblptrl,c
 26118  005C3E  0E20               	movlw	high __powers_
 26119  005C40  20F4               	addwfc	244,w,c
 26120  005C42  6EF7               	movwf	tblptrh,c
 26121  005C44                     	if	0	;There are less than 3 active tblptr bytes
 26122  005C44                     	endif
 26123  005C44  0009               	tblrd		*+
 26124  005C46  CFF5 F03C          	movff	tablat,___flmul@a
 26125  005C4A  0009               	tblrd		*+
 26126  005C4C  CFF5 F03D          	movff	tablat,___flmul@a+1
 26127  005C50  0009               	tblrd		*+
 26128  005C52  CFF5 F03E          	movff	tablat,___flmul@a+2
 26129  005C56  000A               	tblrd		*-
 26130  005C58  CFF5 F03F          	movff	tablat,___flmul@a+3
 26131  005C5C  EC9F  F02E         	call	___flmul	;wreg free
 26132  005C60  C038  F07D         	movff	?___flmul,?_scale
 26133  005C64  C039  F07E         	movff	?___flmul+1,?_scale+1
 26134  005C68  C03A  F07F         	movff	?___flmul+2,?_scale+2
 26135  005C6C  C03B  F080         	movff	?___flmul+3,?_scale+3
 26136  005C70  0012               	return	
 26137  005C72                     l31137:
 26138                           
 26139                           ; BSR set to: 0
 26140                           ;doprnt.c: 446: else if(scl > 10)
 26141  005C72  5185               	movf	scale@scl& (0+255),w,b
 26142  005C74  0A80               	xorlw	128
 26143  005C76  0F75               	addlw	-139
 26144  005C78  A0D8               	btfss	status,0,c
 26145  005C7A  D04C               	goto	l31143
 26146                           
 26147                           ; BSR set to: 0
 26148                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 26149  005C7C  0E00               	movlw	0
 26150  005C7E  6E18               	movwf	(___awdiv@divisor+1)^0,c
 26151  005C80  0E0A               	movlw	10
 26152  005C82  6E17               	movwf	___awdiv@divisor^0,c
 26153  005C84  5185               	movf	scale@scl& (0+255),w,b
 26154  005C86  6E15               	movwf	___awdiv@dividend^0,c
 26155  005C88  6A16               	clrf	(___awdiv@dividend+1)^0,c
 26156  005C8A  BE15               	btfsc	___awdiv@dividend^0,7,c
 26157  005C8C  0616               	decf	(___awdiv@dividend+1)^0,f,c
 26158  005C8E  ECFE  F05F         	call	___awdiv	;wreg free
 26159  005C92  0E09               	movlw	9
 26160  005C94  2615               	addwf	?___awdiv^0,f,c
 26161  005C96  5015               	movf	?___awdiv^0,w,c
 26162  005C98  0D04               	mullw	4
 26163  005C9A  0E09               	movlw	low __powers_
 26164  005C9C  24F3               	addwf	243,w,c
 26165  005C9E  6EF6               	movwf	tblptrl,c
 26166  005CA0  0E20               	movlw	high __powers_
 26167  005CA2  20F4               	addwfc	244,w,c
 26168  005CA4  6EF7               	movwf	tblptrh,c
 26169  005CA6                     	if	0	;There are less than 3 active tblptr bytes
 26170  005CA6                     	endif
 26171  005CA6  0009               	tblrd		*+
 26172  005CA8  CFF5 F038          	movff	tablat,___flmul@b
 26173  005CAC  0009               	tblrd		*+
 26174  005CAE  CFF5 F039          	movff	tablat,___flmul@b+1
 26175  005CB2  0009               	tblrd		*+
 26176  005CB4  CFF5 F03A          	movff	tablat,___flmul@b+2
 26177  005CB8  000A               	tblrd		*-
 26178  005CBA  CFF5 F03B          	movff	tablat,___flmul@b+3
 26179  005CBE  0E00               	movlw	0
 26180  005CC0  6E12               	movwf	(___awmod@divisor+1)^0,c
 26181  005CC2  0E0A               	movlw	10
 26182  005CC4  6E11               	movwf	___awmod@divisor^0,c
 26183  005CC6  0100               	movlb	0	; () banked
 26184  005CC8  5185               	movf	scale@scl& (0+255),w,b
 26185  005CCA  6E0F               	movwf	___awmod@dividend^0,c
 26186  005CCC  6A10               	clrf	(___awmod@dividend+1)^0,c
 26187  005CCE  BE0F               	btfsc	___awmod@dividend^0,7,c
 26188  005CD0  0610               	decf	(___awmod@dividend+1)^0,f,c
 26189  005CD2  EC84  F063         	call	___awmod	;wreg free
 26190  005CD6  500F               	movf	?___awmod^0,w,c
 26191  005CD8  0D04               	mullw	4
 26192  005CDA  0E09               	movlw	low __powers_
 26193  005CDC  24F3               	addwf	243,w,c
 26194  005CDE  6EF6               	movwf	tblptrl,c
 26195  005CE0  0E20               	movlw	high __powers_
 26196  005CE2  20F4               	addwfc	244,w,c
 26197  005CE4  6EF7               	movwf	tblptrh,c
 26198  005CE6                     	if	0	;There are less than 3 active tblptr bytes
 26199  005CE6                     	endif
 26200  005CE6  0009               	tblrd		*+
 26201  005CE8  CFF5 F03C          	movff	tablat,___flmul@a
 26202  005CEC  0009               	tblrd		*+
 26203  005CEE  CFF5 F03D          	movff	tablat,___flmul@a+1
 26204  005CF2  0009               	tblrd		*+
 26205  005CF4  CFF5 F03E          	movff	tablat,___flmul@a+2
 26206  005CF8  000A               	tblrd		*-
 26207  005CFA  CFF5 F03F          	movff	tablat,___flmul@a+3
 26208  005CFE  EC9F  F02E         	call	___flmul	;wreg free
 26209  005D02  C038  F07D         	movff	?___flmul,?_scale
 26210  005D06  C039  F07E         	movff	?___flmul+1,?_scale+1
 26211  005D0A  C03A  F07F         	movff	?___flmul+2,?_scale+2
 26212  005D0E  C03B  F080         	movff	?___flmul+3,?_scale+3
 26213  005D12  0012               	return	
 26214  005D14                     l31143:
 26215                           
 26216                           ; BSR set to: 0
 26217                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 26218  005D14  5185               	movf	scale@scl& (0+255),w,b
 26219  005D16  0D04               	mullw	4
 26220  005D18  0E09               	movlw	low __powers_
 26221  005D1A  24F3               	addwf	243,w,c
 26222  005D1C  6EF6               	movwf	tblptrl,c
 26223  005D1E  0E20               	movlw	high __powers_
 26224  005D20  20F4               	addwfc	244,w,c
 26225  005D22  6EF7               	movwf	tblptrh,c
 26226  005D24                     	if	0	;There are less than 3 active tblptr bytes
 26227  005D24                     	endif
 26228  005D24  0009               	tblrd		*+
 26229  005D26  CFF5 F07D          	movff	tablat,?_scale
 26230  005D2A  0009               	tblrd		*+
 26231  005D2C  CFF5 F07E          	movff	tablat,?_scale+1
 26232  005D30  0009               	tblrd		*+
 26233  005D32  CFF5 F07F          	movff	tablat,?_scale+2
 26234  005D36  000A               	tblrd		*-
 26235  005D38  CFF5 F080          	movff	tablat,?_scale+3
 26236                           
 26237                           ; BSR set to: 0
 26238  005D3C  0012               	return		;funcret
 26239  005D3E                     __end_of_scale:
 26240                           	callstack 0
 26241                           
 26242 ;; *************** function ___awmod *****************
 26243 ;; Defined at:
 26244 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
 26245 ;; Parameters:    Size  Location     Type
 26246 ;;  dividend        2   14[COMRAM] int 
 26247 ;;  divisor         2   16[COMRAM] int 
 26248 ;; Auto vars:     Size  Location     Type
 26249 ;;  sign            1   19[COMRAM] unsigned char 
 26250 ;;  counter         1   18[COMRAM] unsigned char 
 26251 ;; Return value:  Size  Location     Type
 26252 ;;                  2   14[COMRAM] int 
 26253 ;; Registers used:
 26254 ;;		wreg, status,2, status,0
 26255 ;; Tracked objects:
 26256 ;;		On entry : 3F/0
 26257 ;;		On exit  : 3F/0
 26258 ;;		Unchanged: 3F/0
 26259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26264 ;;Total ram usage:        6 bytes
 26265 ;; Hardware stack levels used: 1
 26266 ;; Hardware stack levels required when called: 4
 26267 ;; This function calls:
 26268 ;;		Nothing
 26269 ;; This function is called by:
 26270 ;;		_scale
 26271 ;; This function uses a non-reentrant model
 26272 ;;
 26273                           
 26274                           	psect	text114
 26275  00C708                     __ptext114:
 26276                           	callstack 0
 26277  00C708                     ___awmod:
 26278                           	callstack 22
 26279                           
 26280                           ; BSR set to: 0
 26281                           
 26282                           ; BSR set to: 0
 26283                           ;incstack = 0
 26284  00C708  0E00               	movlw	0
 26285  00C70A  6E14               	movwf	___awmod@sign^0,c
 26286                           
 26287                           ; BSR set to: 0
 26288  00C70C  AE10               	btfss	(___awmod@dividend+1)^0,7,c
 26289  00C70E  D006               	goto	l30933
 26290                           
 26291                           ; BSR set to: 0
 26292  00C710  6C0F               	negf	___awmod@dividend^0,c
 26293  00C712  1E10               	comf	(___awmod@dividend+1)^0,f,c
 26294  00C714  B0D8               	btfsc	status,0,c
 26295  00C716  2A10               	incf	(___awmod@dividend+1)^0,f,c
 26296                           
 26297                           ; BSR set to: 0
 26298  00C718  0E01               	movlw	1
 26299  00C71A  6E14               	movwf	___awmod@sign^0,c
 26300  00C71C                     l30933:
 26301                           
 26302                           ; BSR set to: 0
 26303  00C71C  AE12               	btfss	(___awmod@divisor+1)^0,7,c
 26304  00C71E  D004               	goto	l30937
 26305                           
 26306                           ; BSR set to: 0
 26307  00C720  6C11               	negf	___awmod@divisor^0,c
 26308  00C722  1E12               	comf	(___awmod@divisor+1)^0,f,c
 26309  00C724  B0D8               	btfsc	status,0,c
 26310  00C726  2A12               	incf	(___awmod@divisor+1)^0,f,c
 26311  00C728                     l30937:
 26312                           
 26313                           ; BSR set to: 0
 26314  00C728  5011               	movf	___awmod@divisor^0,w,c
 26315  00C72A  1012               	iorwf	(___awmod@divisor+1)^0,w,c
 26316  00C72C  B4D8               	btfsc	status,2,c
 26317  00C72E  D018               	goto	l30953
 26318                           
 26319                           ; BSR set to: 0
 26320  00C730  0E01               	movlw	1
 26321  00C732  6E13               	movwf	___awmod@counter^0,c
 26322  00C734  D004               	goto	l30943
 26323  00C736                     l30941:
 26324                           
 26325                           ; BSR set to: 0
 26326  00C736  90D8               	bcf	status,0,c
 26327  00C738  3611               	rlcf	___awmod@divisor^0,f,c
 26328  00C73A  3612               	rlcf	(___awmod@divisor+1)^0,f,c
 26329  00C73C  2A13               	incf	___awmod@counter^0,f,c
 26330  00C73E                     l30943:
 26331                           
 26332                           ; BSR set to: 0
 26333  00C73E  AE12               	btfss	(___awmod@divisor+1)^0,7,c
 26334  00C740  D7FA               	goto	l30941
 26335  00C742                     u38730:
 26336                           
 26337                           ; BSR set to: 0
 26338  00C742  5011               	movf	___awmod@divisor^0,w,c
 26339  00C744  5C0F               	subwf	___awmod@dividend^0,w,c
 26340  00C746  5012               	movf	(___awmod@divisor+1)^0,w,c
 26341  00C748  5810               	subwfb	(___awmod@dividend+1)^0,w,c
 26342  00C74A  A0D8               	btfss	status,0,c
 26343  00C74C  D004               	goto	l30949
 26344                           
 26345                           ; BSR set to: 0
 26346  00C74E  5011               	movf	___awmod@divisor^0,w,c
 26347  00C750  5E0F               	subwf	___awmod@dividend^0,f,c
 26348  00C752  5012               	movf	(___awmod@divisor+1)^0,w,c
 26349  00C754  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
 26350  00C756                     l30949:
 26351                           
 26352                           ; BSR set to: 0
 26353  00C756  90D8               	bcf	status,0,c
 26354  00C758  3212               	rrcf	(___awmod@divisor+1)^0,f,c
 26355  00C75A  3211               	rrcf	___awmod@divisor^0,f,c
 26356                           
 26357                           ; BSR set to: 0
 26358  00C75C  2E13               	decfsz	___awmod@counter^0,f,c
 26359  00C75E  D7F1               	goto	u38730
 26360  00C760                     l30953:
 26361                           
 26362                           ; BSR set to: 0
 26363  00C760  5014               	movf	___awmod@sign^0,w,c
 26364  00C762  B4D8               	btfsc	status,2,c
 26365  00C764  D004               	goto	l30957
 26366                           
 26367                           ; BSR set to: 0
 26368  00C766  6C0F               	negf	___awmod@dividend^0,c
 26369  00C768  1E10               	comf	(___awmod@dividend+1)^0,f,c
 26370  00C76A  B0D8               	btfsc	status,0,c
 26371  00C76C  2A10               	incf	(___awmod@dividend+1)^0,f,c
 26372  00C76E                     l30957:
 26373                           
 26374                           ; BSR set to: 0
 26375  00C76E  C00F  F00F         	movff	___awmod@dividend,?___awmod
 26376  00C772  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
 26377                           
 26378                           ; BSR set to: 0
 26379  00C776  0012               	return		;funcret
 26380  00C778                     __end_of___awmod:
 26381                           	callstack 0
 26382                           
 26383 ;; *************** function ___awdiv *****************
 26384 ;; Defined at:
 26385 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
 26386 ;; Parameters:    Size  Location     Type
 26387 ;;  dividend        2   20[COMRAM] int 
 26388 ;;  divisor         2   22[COMRAM] int 
 26389 ;; Auto vars:     Size  Location     Type
 26390 ;;  quotient        2   26[COMRAM] int 
 26391 ;;  sign            1   25[COMRAM] unsigned char 
 26392 ;;  counter         1   24[COMRAM] unsigned char 
 26393 ;; Return value:  Size  Location     Type
 26394 ;;                  2   20[COMRAM] int 
 26395 ;; Registers used:
 26396 ;;		wreg, status,2, status,0
 26397 ;; Tracked objects:
 26398 ;;		On entry : 0/0
 26399 ;;		On exit  : 0/0
 26400 ;;		Unchanged: 0/0
 26401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26403 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26405 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26406 ;;Total ram usage:        8 bytes
 26407 ;; Hardware stack levels used: 1
 26408 ;; Hardware stack levels required when called: 4
 26409 ;; This function calls:
 26410 ;;		Nothing
 26411 ;; This function is called by:
 26412 ;;		_scale
 26413 ;;		_sprintf
 26414 ;; This function uses a non-reentrant model
 26415 ;;
 26416                           
 26417                           	psect	text115
 26418  00BFFC                     __ptext115:
 26419                           	callstack 0
 26420  00BFFC                     ___awdiv:
 26421                           	callstack 22
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;incstack = 0
 26425  00BFFC  0E00               	movlw	0
 26426  00BFFE  6E1A               	movwf	___awdiv@sign^0,c
 26427  00C000  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
 26428  00C002  D006               	goto	l30889
 26429  00C004  6C17               	negf	___awdiv@divisor^0,c
 26430  00C006  1E18               	comf	(___awdiv@divisor+1)^0,f,c
 26431  00C008  B0D8               	btfsc	status,0,c
 26432  00C00A  2A18               	incf	(___awdiv@divisor+1)^0,f,c
 26433  00C00C  0E01               	movlw	1
 26434  00C00E  6E1A               	movwf	___awdiv@sign^0,c
 26435  00C010                     l30889:
 26436  00C010  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
 26437  00C012  D006               	goto	l30895
 26438  00C014  6C15               	negf	___awdiv@dividend^0,c
 26439  00C016  1E16               	comf	(___awdiv@dividend+1)^0,f,c
 26440  00C018  B0D8               	btfsc	status,0,c
 26441  00C01A  2A16               	incf	(___awdiv@dividend+1)^0,f,c
 26442  00C01C  0E01               	movlw	1
 26443  00C01E  1A1A               	xorwf	___awdiv@sign^0,f,c
 26444  00C020                     l30895:
 26445  00C020  0E00               	movlw	0
 26446  00C022  6E1C               	movwf	(___awdiv@quotient+1)^0,c
 26447  00C024  0E00               	movlw	0
 26448  00C026  6E1B               	movwf	___awdiv@quotient^0,c
 26449  00C028  5017               	movf	___awdiv@divisor^0,w,c
 26450  00C02A  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
 26451  00C02C  B4D8               	btfsc	status,2,c
 26452  00C02E  D01C               	goto	l30917
 26453  00C030  0E01               	movlw	1
 26454  00C032  6E19               	movwf	___awdiv@counter^0,c
 26455  00C034  D004               	goto	l30903
 26456  00C036                     l30901:
 26457  00C036  90D8               	bcf	status,0,c
 26458  00C038  3617               	rlcf	___awdiv@divisor^0,f,c
 26459  00C03A  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
 26460  00C03C  2A19               	incf	___awdiv@counter^0,f,c
 26461  00C03E                     l30903:
 26462  00C03E  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
 26463  00C040  D7FA               	goto	l30901
 26464  00C042                     u38670:
 26465  00C042  90D8               	bcf	status,0,c
 26466  00C044  361B               	rlcf	___awdiv@quotient^0,f,c
 26467  00C046  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
 26468  00C048  5017               	movf	___awdiv@divisor^0,w,c
 26469  00C04A  5C15               	subwf	___awdiv@dividend^0,w,c
 26470  00C04C  5018               	movf	(___awdiv@divisor+1)^0,w,c
 26471  00C04E  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
 26472  00C050  A0D8               	btfss	status,0,c
 26473  00C052  D005               	goto	l30913
 26474  00C054  5017               	movf	___awdiv@divisor^0,w,c
 26475  00C056  5E15               	subwf	___awdiv@dividend^0,f,c
 26476  00C058  5018               	movf	(___awdiv@divisor+1)^0,w,c
 26477  00C05A  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
 26478  00C05C  801B               	bsf	___awdiv@quotient^0,0,c
 26479  00C05E                     l30913:
 26480  00C05E  90D8               	bcf	status,0,c
 26481  00C060  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
 26482  00C062  3217               	rrcf	___awdiv@divisor^0,f,c
 26483  00C064  2E19               	decfsz	___awdiv@counter^0,f,c
 26484  00C066  D7ED               	goto	u38670
 26485  00C068                     l30917:
 26486  00C068  501A               	movf	___awdiv@sign^0,w,c
 26487  00C06A  B4D8               	btfsc	status,2,c
 26488  00C06C  D004               	goto	l30921
 26489  00C06E  6C1B               	negf	___awdiv@quotient^0,c
 26490  00C070  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
 26491  00C072  B0D8               	btfsc	status,0,c
 26492  00C074  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
 26493  00C076                     l30921:
 26494  00C076  C01B  F015         	movff	___awdiv@quotient,?___awdiv
 26495  00C07A  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
 26496  00C07E  0012               	return		;funcret
 26497  00C080                     __end_of___awdiv:
 26498                           	callstack 0
 26499                           
 26500 ;; *************** function _isdigit *****************
 26501 ;; Defined at:
 26502 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
 26503 ;; Parameters:    Size  Location     Type
 26504 ;;  c               1    wreg     unsigned char 
 26505 ;; Auto vars:     Size  Location     Type
 26506 ;;  c               1   16[COMRAM] unsigned char 
 26507 ;; Return value:  Size  Location     Type
 26508 ;;		None               void
 26509 ;; Registers used:
 26510 ;;		wreg, status,2, status,0
 26511 ;; Tracked objects:
 26512 ;;		On entry : 3F/0
 26513 ;;		On exit  : 0/0
 26514 ;;		Unchanged: 0/0
 26515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26519 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26520 ;;Total ram usage:        3 bytes
 26521 ;; Hardware stack levels used: 1
 26522 ;; Hardware stack levels required when called: 4
 26523 ;; This function calls:
 26524 ;;		Nothing
 26525 ;; This function is called by:
 26526 ;;		_sprintf
 26527 ;; This function uses a non-reentrant model
 26528 ;;
 26529                           
 26530                           	psect	text116
 26531  00DC62                     __ptext116:
 26532                           	callstack 0
 26533  00DC62                     _isdigit:
 26534                           	callstack 23
 26535                           
 26536                           ;incstack = 0
 26537                           ;isdigit@c stored from wreg
 26538  00DC62  6E11               	movwf	isdigit@c^0,c
 26539  00DC64  0E00               	movlw	0
 26540  00DC66  6E10               	movwf	_isdigit$8830^0,c
 26541  00DC68  0E3A               	movlw	58
 26542  00DC6A  6011               	cpfslt	isdigit@c^0,c
 26543  00DC6C  D005               	goto	l31155
 26544  00DC6E  0E2F               	movlw	47
 26545  00DC70  6411               	cpfsgt	isdigit@c^0,c
 26546  00DC72  D002               	goto	l31155
 26547  00DC74  0E01               	movlw	1
 26548  00DC76  6E10               	movwf	_isdigit$8830^0,c
 26549  00DC78                     l31155:
 26550  00DC78  C010  F00F         	movff	_isdigit$8830,??_isdigit
 26551  00DC7C  300F               	rrcf	??_isdigit^0,w,c
 26552  00DC7E  0012               	return		;funcret
 26553  00DC80                     __end_of_isdigit:
 26554                           	callstack 0
 26555                           
 26556 ;; *************** function _fround *****************
 26557 ;; Defined at:
 26558 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 26559 ;; Parameters:    Size  Location     Type
 26560 ;;  prec            1    wreg     unsigned char 
 26561 ;; Auto vars:     Size  Location     Type
 26562 ;;  prec            1   41[BANK0 ] unsigned char 
 26563 ;; Return value:  Size  Location     Type
 26564 ;;                  4   29[BANK0 ] unsigned char 
 26565 ;; Registers used:
 26566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26567 ;; Tracked objects:
 26568 ;;		On entry : 3F/0
 26569 ;;		On exit  : 3F/0
 26570 ;;		Unchanged: 0/0
 26571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26573 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26575 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26576 ;;Total ram usage:       15 bytes
 26577 ;; Hardware stack levels used: 1
 26578 ;; Hardware stack levels required when called: 5
 26579 ;; This function calls:
 26580 ;;		___flmul
 26581 ;;		___lbdiv
 26582 ;;		___lbmod
 26583 ;; This function is called by:
 26584 ;;		_sprintf
 26585 ;; This function uses a non-reentrant model
 26586 ;;
 26587                           
 26588                           	psect	text117
 26589  0079E8                     __ptext117:
 26590                           	callstack 0
 26591  0079E8                     _fround:
 26592                           	callstack 22
 26593                           
 26594                           ;incstack = 0
 26595                           ;fround@prec stored from wreg
 26596  0079E8  6F89               	movwf	fround@prec& (0+255),b
 26597                           
 26598                           ;doprnt.c: 421: if(prec>=110)
 26599  0079EA  0E6D               	movlw	109
 26600  0079EC  0100               	movlb	0	; () banked
 26601  0079EE  6589               	cpfsgt	fround@prec& (0+255),b
 26602  0079F0  D0A0               	goto	l31099
 26603                           
 26604                           ; BSR set to: 0
 26605                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 26606  0079F2  0E00               	movlw	0
 26607  0079F4  6E3C               	movwf	___flmul@a^0,c
 26608  0079F6  0E00               	movlw	0
 26609  0079F8  6E3D               	movwf	(___flmul@a+1)^0,c
 26610  0079FA  0E00               	movlw	0
 26611  0079FC  6E3E               	movwf	(___flmul@a+2)^0,c
 26612  0079FE  0E3F               	movlw	63
 26613  007A00  6E3F               	movwf	(___flmul@a+3)^0,c
 26614  007A02  0E64               	movlw	100
 26615  007A04  6E13               	movwf	___lbdiv@divisor^0,c
 26616  007A06  5189               	movf	fround@prec& (0+255),w,b
 26617  007A08  EC82  F06A         	call	___lbdiv
 26618  007A0C  6E40               	movwf	??_fround^0,c
 26619  007A0E  6A41               	clrf	(??_fround+1)^0,c
 26620  007A10  90D8               	bcf	status,0,c
 26621  007A12  3640               	rlcf	??_fround^0,f,c
 26622  007A14  3641               	rlcf	(??_fround+1)^0,f,c
 26623  007A16  90D8               	bcf	status,0,c
 26624  007A18  3640               	rlcf	??_fround^0,f,c
 26625  007A1A  3641               	rlcf	(??_fround+1)^0,f,c
 26626  007A1C  0E48               	movlw	72
 26627  007A1E  2640               	addwf	??_fround^0,f,c
 26628  007A20  0E00               	movlw	0
 26629  007A22  2241               	addwfc	(??_fround+1)^0,f,c
 26630  007A24  0E3D               	movlw	low __npowers_
 26631  007A26  2440               	addwf	??_fround^0,w,c
 26632  007A28  6EF6               	movwf	tblptrl,c
 26633  007A2A  0E20               	movlw	high __npowers_
 26634  007A2C  2041               	addwfc	(??_fround+1)^0,w,c
 26635  007A2E  6EF7               	movwf	tblptrh,c
 26636  007A30                     	if	0	;There are less than 3 active tblptr bytes
 26637  007A30                     	endif
 26638  007A30  0009               	tblrd		*+
 26639  007A32  CFF5 F038          	movff	tablat,___flmul@b
 26640  007A36  0009               	tblrd		*+
 26641  007A38  CFF5 F039          	movff	tablat,___flmul@b+1
 26642  007A3C  0009               	tblrd		*+
 26643  007A3E  CFF5 F03A          	movff	tablat,___flmul@b+2
 26644  007A42  000A               	tblrd		*-
 26645  007A44  CFF5 F03B          	movff	tablat,___flmul@b+3
 26646  007A48  EC9F  F02E         	call	___flmul	;wreg free
 26647  007A4C  C038  F085         	movff	?___flmul,_fround$9457
 26648  007A50  C039  F086         	movff	?___flmul+1,_fround$9457+1
 26649  007A54  C03A  F087         	movff	?___flmul+2,_fround$9457+2
 26650  007A58  C03B  F088         	movff	?___flmul+3,_fround$9457+3
 26651                           
 26652                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 26653  007A5C  0E0A               	movlw	10
 26654  007A5E  6E13               	movwf	___lbdiv@divisor^0,c
 26655  007A60  0E64               	movlw	100
 26656  007A62  6E0F               	movwf	___lbmod@divisor^0,c
 26657  007A64  5189               	movf	fround@prec& (0+255),w,b
 26658  007A66  EC56  F06D         	call	___lbmod
 26659  007A6A  EC82  F06A         	call	___lbdiv
 26660  007A6E  6E40               	movwf	??_fround^0,c
 26661  007A70  6A41               	clrf	(??_fround+1)^0,c
 26662  007A72  90D8               	bcf	status,0,c
 26663  007A74  3640               	rlcf	??_fround^0,f,c
 26664  007A76  3641               	rlcf	(??_fround+1)^0,f,c
 26665  007A78  90D8               	bcf	status,0,c
 26666  007A7A  3640               	rlcf	??_fround^0,f,c
 26667  007A7C  3641               	rlcf	(??_fround+1)^0,f,c
 26668  007A7E  0E24               	movlw	36
 26669  007A80  2640               	addwf	??_fround^0,f,c
 26670  007A82  0E00               	movlw	0
 26671  007A84  2241               	addwfc	(??_fround+1)^0,f,c
 26672  007A86  0E3D               	movlw	low __npowers_
 26673  007A88  2440               	addwf	??_fround^0,w,c
 26674  007A8A  6EF6               	movwf	tblptrl,c
 26675  007A8C  0E20               	movlw	high __npowers_
 26676  007A8E  2041               	addwfc	(??_fround+1)^0,w,c
 26677  007A90  6EF7               	movwf	tblptrh,c
 26678  007A92                     	if	0	;There are less than 3 active tblptr bytes
 26679  007A92                     	endif
 26680  007A92  0009               	tblrd		*+
 26681  007A94  CFF5 F03C          	movff	tablat,___flmul@a
 26682  007A98  0009               	tblrd		*+
 26683  007A9A  CFF5 F03D          	movff	tablat,___flmul@a+1
 26684  007A9E  0009               	tblrd		*+
 26685  007AA0  CFF5 F03E          	movff	tablat,___flmul@a+2
 26686  007AA4  000A               	tblrd		*-
 26687  007AA6  CFF5 F03F          	movff	tablat,___flmul@a+3
 26688  007AAA  C085  F038         	movff	_fround$9457,___flmul@b
 26689  007AAE  C086  F039         	movff	_fround$9457+1,___flmul@b+1
 26690  007AB2  C087  F03A         	movff	_fround$9457+2,___flmul@b+2
 26691  007AB6  C088  F03B         	movff	_fround$9457+3,___flmul@b+3
 26692  007ABA  EC9F  F02E         	call	___flmul	;wreg free
 26693  007ABE  C038  F081         	movff	?___flmul,_fround$9458
 26694  007AC2  C039  F082         	movff	?___flmul+1,_fround$9458+1
 26695  007AC6  C03A  F083         	movff	?___flmul+2,_fround$9458+2
 26696  007ACA  C03B  F084         	movff	?___flmul+3,_fround$9458+3
 26697                           
 26698                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 26699  007ACE  C081  F038         	movff	_fround$9458,___flmul@b
 26700  007AD2  C082  F039         	movff	_fround$9458+1,___flmul@b+1
 26701  007AD6  C083  F03A         	movff	_fround$9458+2,___flmul@b+2
 26702  007ADA  C084  F03B         	movff	_fround$9458+3,___flmul@b+3
 26703  007ADE  0E0A               	movlw	10
 26704  007AE0  6E0F               	movwf	___lbmod@divisor^0,c
 26705  007AE2  5189               	movf	fround@prec& (0+255),w,b
 26706  007AE4  EC56  F06D         	call	___lbmod
 26707  007AE8  6E40               	movwf	??_fround^0,c
 26708  007AEA  6A41               	clrf	(??_fround+1)^0,c
 26709  007AEC  90D8               	bcf	status,0,c
 26710  007AEE  3640               	rlcf	??_fround^0,f,c
 26711  007AF0  3641               	rlcf	(??_fround+1)^0,f,c
 26712  007AF2  90D8               	bcf	status,0,c
 26713  007AF4  3640               	rlcf	??_fround^0,f,c
 26714  007AF6  3641               	rlcf	(??_fround+1)^0,f,c
 26715  007AF8  0E3D               	movlw	low __npowers_
 26716  007AFA  2440               	addwf	??_fround^0,w,c
 26717  007AFC  6EF6               	movwf	tblptrl,c
 26718  007AFE  0E20               	movlw	high __npowers_
 26719  007B00  2041               	addwfc	(??_fround+1)^0,w,c
 26720  007B02  6EF7               	movwf	tblptrh,c
 26721  007B04                     	if	0	;There are less than 3 active tblptr bytes
 26722  007B04                     	endif
 26723  007B04  0009               	tblrd		*+
 26724  007B06  CFF5 F03C          	movff	tablat,___flmul@a
 26725  007B0A  0009               	tblrd		*+
 26726  007B0C  CFF5 F03D          	movff	tablat,___flmul@a+1
 26727  007B10  0009               	tblrd		*+
 26728  007B12  CFF5 F03E          	movff	tablat,___flmul@a+2
 26729  007B16  000A               	tblrd		*-
 26730  007B18  CFF5 F03F          	movff	tablat,___flmul@a+3
 26731  007B1C  EC9F  F02E         	call	___flmul	;wreg free
 26732  007B20  C038  F07D         	movff	?___flmul,?_fround
 26733  007B24  C039  F07E         	movff	?___flmul+1,?_fround+1
 26734  007B28  C03A  F07F         	movff	?___flmul+2,?_fround+2
 26735  007B2C  C03B  F080         	movff	?___flmul+3,?_fround+3
 26736  007B30  0012               	return	
 26737  007B32                     l31099:
 26738                           
 26739                           ; BSR set to: 0
 26740                           ;doprnt.c: 423: else if(prec > 10)
 26741  007B32  0E0A               	movlw	10
 26742  007B34  6589               	cpfsgt	fround@prec& (0+255),b
 26743  007B36  D067               	goto	l31105
 26744                           
 26745                           ; BSR set to: 0
 26746                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 26747  007B38  0E00               	movlw	0
 26748  007B3A  6E3C               	movwf	___flmul@a^0,c
 26749  007B3C  0E00               	movlw	0
 26750  007B3E  6E3D               	movwf	(___flmul@a+1)^0,c
 26751  007B40  0E00               	movlw	0
 26752  007B42  6E3E               	movwf	(___flmul@a+2)^0,c
 26753  007B44  0E3F               	movlw	63
 26754  007B46  6E3F               	movwf	(___flmul@a+3)^0,c
 26755  007B48  0E0A               	movlw	10
 26756  007B4A  6E13               	movwf	___lbdiv@divisor^0,c
 26757  007B4C  5189               	movf	fround@prec& (0+255),w,b
 26758  007B4E  EC82  F06A         	call	___lbdiv
 26759  007B52  6E40               	movwf	??_fround^0,c
 26760  007B54  6A41               	clrf	(??_fround+1)^0,c
 26761  007B56  90D8               	bcf	status,0,c
 26762  007B58  3640               	rlcf	??_fround^0,f,c
 26763  007B5A  3641               	rlcf	(??_fround+1)^0,f,c
 26764  007B5C  90D8               	bcf	status,0,c
 26765  007B5E  3640               	rlcf	??_fround^0,f,c
 26766  007B60  3641               	rlcf	(??_fround+1)^0,f,c
 26767  007B62  0E24               	movlw	36
 26768  007B64  2640               	addwf	??_fround^0,f,c
 26769  007B66  0E00               	movlw	0
 26770  007B68  2241               	addwfc	(??_fround+1)^0,f,c
 26771  007B6A  0E3D               	movlw	low __npowers_
 26772  007B6C  2440               	addwf	??_fround^0,w,c
 26773  007B6E  6EF6               	movwf	tblptrl,c
 26774  007B70  0E20               	movlw	high __npowers_
 26775  007B72  2041               	addwfc	(??_fround+1)^0,w,c
 26776  007B74  6EF7               	movwf	tblptrh,c
 26777  007B76                     	if	0	;There are less than 3 active tblptr bytes
 26778  007B76                     	endif
 26779  007B76  0009               	tblrd		*+
 26780  007B78  CFF5 F038          	movff	tablat,___flmul@b
 26781  007B7C  0009               	tblrd		*+
 26782  007B7E  CFF5 F039          	movff	tablat,___flmul@b+1
 26783  007B82  0009               	tblrd		*+
 26784  007B84  CFF5 F03A          	movff	tablat,___flmul@b+2
 26785  007B88  000A               	tblrd		*-
 26786  007B8A  CFF5 F03B          	movff	tablat,___flmul@b+3
 26787  007B8E  EC9F  F02E         	call	___flmul	;wreg free
 26788  007B92  C038  F085         	movff	?___flmul,_fround$9457
 26789  007B96  C039  F086         	movff	?___flmul+1,_fround$9457+1
 26790  007B9A  C03A  F087         	movff	?___flmul+2,_fround$9457+2
 26791  007B9E  C03B  F088         	movff	?___flmul+3,_fround$9457+3
 26792                           
 26793                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 26794  007BA2  C085  F038         	movff	_fround$9457,___flmul@b
 26795  007BA6  C086  F039         	movff	_fround$9457+1,___flmul@b+1
 26796  007BAA  C087  F03A         	movff	_fround$9457+2,___flmul@b+2
 26797  007BAE  C088  F03B         	movff	_fround$9457+3,___flmul@b+3
 26798  007BB2  0E0A               	movlw	10
 26799  007BB4  6E0F               	movwf	___lbmod@divisor^0,c
 26800  007BB6  5189               	movf	fround@prec& (0+255),w,b
 26801  007BB8  EC56  F06D         	call	___lbmod
 26802  007BBC  6E40               	movwf	??_fround^0,c
 26803  007BBE  6A41               	clrf	(??_fround+1)^0,c
 26804  007BC0  90D8               	bcf	status,0,c
 26805  007BC2  3640               	rlcf	??_fround^0,f,c
 26806  007BC4  3641               	rlcf	(??_fround+1)^0,f,c
 26807  007BC6  90D8               	bcf	status,0,c
 26808  007BC8  3640               	rlcf	??_fround^0,f,c
 26809  007BCA  3641               	rlcf	(??_fround+1)^0,f,c
 26810  007BCC  0E3D               	movlw	low __npowers_
 26811  007BCE  2440               	addwf	??_fround^0,w,c
 26812  007BD0  6EF6               	movwf	tblptrl,c
 26813  007BD2  0E20               	movlw	high __npowers_
 26814  007BD4  2041               	addwfc	(??_fround+1)^0,w,c
 26815  007BD6  6EF7               	movwf	tblptrh,c
 26816  007BD8                     	if	0	;There are less than 3 active tblptr bytes
 26817  007BD8                     	endif
 26818  007BD8  0009               	tblrd		*+
 26819  007BDA  CFF5 F03C          	movff	tablat,___flmul@a
 26820  007BDE  0009               	tblrd		*+
 26821  007BE0  CFF5 F03D          	movff	tablat,___flmul@a+1
 26822  007BE4  0009               	tblrd		*+
 26823  007BE6  CFF5 F03E          	movff	tablat,___flmul@a+2
 26824  007BEA  000A               	tblrd		*-
 26825  007BEC  CFF5 F03F          	movff	tablat,___flmul@a+3
 26826  007BF0  EC9F  F02E         	call	___flmul	;wreg free
 26827  007BF4  C038  F07D         	movff	?___flmul,?_fround
 26828  007BF8  C039  F07E         	movff	?___flmul+1,?_fround+1
 26829  007BFC  C03A  F07F         	movff	?___flmul+2,?_fround+2
 26830  007C00  C03B  F080         	movff	?___flmul+3,?_fround+3
 26831  007C04  0012               	return	
 26832  007C06                     l31105:
 26833                           
 26834                           ; BSR set to: 0
 26835                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 26836  007C06  5189               	movf	fround@prec& (0+255),w,b
 26837  007C08  0D04               	mullw	4
 26838  007C0A  0E3D               	movlw	low __npowers_
 26839  007C0C  24F3               	addwf	243,w,c
 26840  007C0E  6EF6               	movwf	tblptrl,c
 26841  007C10  0E20               	movlw	high __npowers_
 26842  007C12  20F4               	addwfc	244,w,c
 26843  007C14  6EF7               	movwf	tblptrh,c
 26844  007C16                     	if	0	;There are less than 3 active tblptr bytes
 26845  007C16                     	endif
 26846  007C16  0009               	tblrd		*+
 26847  007C18  CFF5 F038          	movff	tablat,___flmul@b
 26848  007C1C  0009               	tblrd		*+
 26849  007C1E  CFF5 F039          	movff	tablat,___flmul@b+1
 26850  007C22  0009               	tblrd		*+
 26851  007C24  CFF5 F03A          	movff	tablat,___flmul@b+2
 26852  007C28  000A               	tblrd		*-
 26853  007C2A  CFF5 F03B          	movff	tablat,___flmul@b+3
 26854  007C2E  0E00               	movlw	0
 26855  007C30  6E3C               	movwf	___flmul@a^0,c
 26856  007C32  0E00               	movlw	0
 26857  007C34  6E3D               	movwf	(___flmul@a+1)^0,c
 26858  007C36  0E00               	movlw	0
 26859  007C38  6E3E               	movwf	(___flmul@a+2)^0,c
 26860  007C3A  0E3F               	movlw	63
 26861  007C3C  6E3F               	movwf	(___flmul@a+3)^0,c
 26862  007C3E  EC9F  F02E         	call	___flmul	;wreg free
 26863  007C42  C038  F07D         	movff	?___flmul,?_fround
 26864  007C46  C039  F07E         	movff	?___flmul+1,?_fround+1
 26865  007C4A  C03A  F07F         	movff	?___flmul+2,?_fround+2
 26866  007C4E  C03B  F080         	movff	?___flmul+3,?_fround+3
 26867                           
 26868                           ; BSR set to: 0
 26869  007C52  0012               	return		;funcret
 26870  007C54                     __end_of_fround:
 26871                           	callstack 0
 26872                           
 26873 ;; *************** function ___lbmod *****************
 26874 ;; Defined at:
 26875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbmod.c"
 26876 ;; Parameters:    Size  Location     Type
 26877 ;;  dividend        1    wreg     unsigned char 
 26878 ;;  divisor         1   14[COMRAM] unsigned char 
 26879 ;; Auto vars:     Size  Location     Type
 26880 ;;  dividend        1   15[COMRAM] unsigned char 
 26881 ;;  rem             1   17[COMRAM] unsigned char 
 26882 ;;  counter         1   16[COMRAM] unsigned char 
 26883 ;; Return value:  Size  Location     Type
 26884 ;;                  1    wreg      unsigned char 
 26885 ;; Registers used:
 26886 ;;		wreg, status,2, status,0
 26887 ;; Tracked objects:
 26888 ;;		On entry : 3F/0
 26889 ;;		On exit  : 0/0
 26890 ;;		Unchanged: 0/0
 26891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26893 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26896 ;;Total ram usage:        4 bytes
 26897 ;; Hardware stack levels used: 1
 26898 ;; Hardware stack levels required when called: 4
 26899 ;; This function calls:
 26900 ;;		Nothing
 26901 ;; This function is called by:
 26902 ;;		_fround
 26903 ;; This function uses a non-reentrant model
 26904 ;;
 26905                           
 26906                           	psect	text118
 26907  00DAAC                     __ptext118:
 26908                           	callstack 0
 26909  00DAAC                     ___lbmod:
 26910                           	callstack 22
 26911                           
 26912                           ; BSR set to: 0
 26913                           ;incstack = 0
 26914                           ;___lbmod@dividend stored from wreg
 26915  00DAAC  6E10               	movwf	___lbmod@dividend^0,c
 26916  00DAAE  0E08               	movlw	8
 26917  00DAB0  6E11               	movwf	___lbmod@counter^0,c
 26918  00DAB2  0E00               	movlw	0
 26919  00DAB4  6E12               	movwf	___lbmod@rem^0,c
 26920  00DAB6                     l30989:
 26921  00DAB6  90D8               	bcf	status,0,c
 26922  00DAB8  3410               	rlcf	___lbmod@dividend^0,w,c
 26923  00DABA  3412               	rlcf	___lbmod@rem^0,w,c
 26924  00DABC  6E12               	movwf	___lbmod@rem^0,c
 26925  00DABE  90D8               	bcf	status,0,c
 26926  00DAC0  3610               	rlcf	___lbmod@dividend^0,f,c
 26927  00DAC2  500F               	movf	___lbmod@divisor^0,w,c
 26928  00DAC4  5C12               	subwf	___lbmod@rem^0,w,c
 26929  00DAC6  A0D8               	btfss	status,0,c
 26930  00DAC8  D002               	goto	l30997
 26931  00DACA  500F               	movf	___lbmod@divisor^0,w,c
 26932  00DACC  5E12               	subwf	___lbmod@rem^0,f,c
 26933  00DACE                     l30997:
 26934  00DACE  2E11               	decfsz	___lbmod@counter^0,f,c
 26935  00DAD0  D7F2               	goto	l30989
 26936  00DAD2  5012               	movf	___lbmod@rem^0,w,c
 26937  00DAD4  0012               	return		;funcret
 26938  00DAD6                     __end_of___lbmod:
 26939                           	callstack 0
 26940                           
 26941 ;; *************** function ___lbdiv *****************
 26942 ;; Defined at:
 26943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lbdiv.c"
 26944 ;; Parameters:    Size  Location     Type
 26945 ;;  dividend        1    wreg     unsigned char 
 26946 ;;  divisor         1   18[COMRAM] unsigned char 
 26947 ;; Auto vars:     Size  Location     Type
 26948 ;;  dividend        1   19[COMRAM] unsigned char 
 26949 ;;  quotient        1   21[COMRAM] unsigned char 
 26950 ;;  counter         1   20[COMRAM] unsigned char 
 26951 ;; Return value:  Size  Location     Type
 26952 ;;                  1    wreg      unsigned char 
 26953 ;; Registers used:
 26954 ;;		wreg, status,2, status,0
 26955 ;; Tracked objects:
 26956 ;;		On entry : 0/0
 26957 ;;		On exit  : 0/0
 26958 ;;		Unchanged: 0/0
 26959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26961 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26964 ;;Total ram usage:        4 bytes
 26965 ;; Hardware stack levels used: 1
 26966 ;; Hardware stack levels required when called: 4
 26967 ;; This function calls:
 26968 ;;		Nothing
 26969 ;; This function is called by:
 26970 ;;		_fround
 26971 ;; This function uses a non-reentrant model
 26972 ;;
 26973                           
 26974                           	psect	text119
 26975  00D504                     __ptext119:
 26976                           	callstack 0
 26977  00D504                     ___lbdiv:
 26978                           	callstack 22
 26979                           
 26980                           ;incstack = 0
 26981                           ;___lbdiv@dividend stored from wreg
 26982  00D504  6E14               	movwf	___lbdiv@dividend^0,c
 26983  00D506  0E00               	movlw	0
 26984  00D508  6E16               	movwf	___lbdiv@quotient^0,c
 26985  00D50A  5013               	movf	___lbdiv@divisor^0,w,c
 26986  00D50C  B4D8               	btfsc	status,2,c
 26987  00D50E  D015               	goto	l30983
 26988  00D510  0E01               	movlw	1
 26989  00D512  6E15               	movwf	___lbdiv@counter^0,c
 26990  00D514  D003               	goto	l30971
 26991  00D516                     l30967:
 26992  00D516  90D8               	bcf	status,0,c
 26993  00D518  3613               	rlcf	___lbdiv@divisor^0,f,c
 26994  00D51A  2A15               	incf	___lbdiv@counter^0,f,c
 26995  00D51C                     l30971:
 26996  00D51C  AE13               	btfss	___lbdiv@divisor^0,7,c
 26997  00D51E  D7FB               	goto	l30967
 26998  00D520                     u38770:
 26999  00D520  90D8               	bcf	status,0,c
 27000  00D522  3616               	rlcf	___lbdiv@quotient^0,f,c
 27001  00D524  5013               	movf	___lbdiv@divisor^0,w,c
 27002  00D526  5C14               	subwf	___lbdiv@dividend^0,w,c
 27003  00D528  A0D8               	btfss	status,0,c
 27004  00D52A  D003               	goto	l30979
 27005  00D52C  5013               	movf	___lbdiv@divisor^0,w,c
 27006  00D52E  5E14               	subwf	___lbdiv@dividend^0,f,c
 27007  00D530  8016               	bsf	___lbdiv@quotient^0,0,c
 27008  00D532                     l30979:
 27009  00D532  90D8               	bcf	status,0,c
 27010  00D534  3213               	rrcf	___lbdiv@divisor^0,f,c
 27011  00D536  2E15               	decfsz	___lbdiv@counter^0,f,c
 27012  00D538  D7F3               	goto	u38770
 27013  00D53A                     l30983:
 27014  00D53A  5016               	movf	___lbdiv@quotient^0,w,c
 27015  00D53C  0012               	return		;funcret
 27016  00D53E                     __end_of___lbdiv:
 27017                           	callstack 0
 27018                           
 27019 ;; *************** function ___flmul *****************
 27020 ;; Defined at:
 27021 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
 27022 ;; Parameters:    Size  Location     Type
 27023 ;;  b               4   55[COMRAM] unsigned char 
 27024 ;;  a               4   59[COMRAM] unsigned char 
 27025 ;; Auto vars:     Size  Location     Type
 27026 ;;  prod            4   23[BANK0 ] struct .
 27027 ;;  grs             4   19[BANK0 ] unsigned long 
 27028 ;;  temp            2   27[BANK0 ] struct .
 27029 ;;  bexp            1   18[BANK0 ] unsigned char 
 27030 ;;  aexp            1   17[BANK0 ] unsigned char 
 27031 ;;  sign            1   16[BANK0 ] unsigned char 
 27032 ;; Return value:  Size  Location     Type
 27033 ;;                  4   55[COMRAM] unsigned char 
 27034 ;; Registers used:
 27035 ;;		wreg, status,2, status,0, prodl, prodh
 27036 ;; Tracked objects:
 27037 ;;		On entry : 0/0
 27038 ;;		On exit  : 3F/0
 27039 ;;		Unchanged: 0/0
 27040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27041 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27042 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27043 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27044 ;;      Totals:         8      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27045 ;;Total ram usage:       25 bytes
 27046 ;; Hardware stack levels used: 1
 27047 ;; Hardware stack levels required when called: 4
 27048 ;; This function calls:
 27049 ;;		Nothing
 27050 ;; This function is called by:
 27051 ;;		_sensor_temp_fahrenheit
 27052 ;;		_ADCto_uVoltage
 27053 ;;		_compensate_temperature
 27054 ;;		_gasSensor_calib
 27055 ;;		_gasSensor_temperature
 27056 ;;		_ewmaFilter_get
 27057 ;;		_Kalman_updateEstimate
 27058 ;;		__atof
 27059 ;;		_fround
 27060 ;;		_scale
 27061 ;;		_sprintf
 27062 ;; This function uses a non-reentrant model
 27063 ;;
 27064                           
 27065                           	psect	text120
 27066  005D3E                     __ptext120:
 27067                           	callstack 0
 27068  005D3E                     ___flmul:
 27069                           	callstack 23
 27070                           
 27071                           ;incstack = 0
 27072  005D3E  503B               	movf	(___flmul@b+3)^0,w,c
 27073  005D40  0B80               	andlw	128
 27074  005D42  0100               	movlb	0	; () banked
 27075  005D44  6F70               	movwf	___flmul@sign& (0+255),b
 27076  005D46  503B               	movf	(___flmul@b+3)^0,w,c
 27077  005D48  243B               	addwf	(___flmul@b+3)^0,w,c
 27078  005D4A  6F72               	movwf	___flmul@bexp& (0+255),b
 27079                           
 27080                           ; BSR set to: 0
 27081  005D4C  BE3A               	btfsc	(___flmul@b+2)^0,7,c
 27082                           
 27083                           ; BSR set to: 0
 27084  005D4E  8172               	bsf	___flmul@bexp& (0+255),0,b
 27085                           
 27086                           ; BSR set to: 0
 27087  005D50  5172               	movf	___flmul@bexp& (0+255),w,b
 27088  005D52  B4D8               	btfsc	status,2,c
 27089  005D54  D00D               	goto	l30765
 27090                           
 27091                           ; BSR set to: 0
 27092  005D56  2972               	incf	___flmul@bexp& (0+255),w,b
 27093  005D58  A4D8               	btfss	status,2,c
 27094  005D5A  D008               	goto	l30763
 27095                           
 27096                           ; BSR set to: 0
 27097  005D5C  0E00               	movlw	0
 27098  005D5E  6E38               	movwf	___flmul@b^0,c
 27099  005D60  0E00               	movlw	0
 27100  005D62  6E39               	movwf	(___flmul@b+1)^0,c
 27101  005D64  0E00               	movlw	0
 27102  005D66  6E3A               	movwf	(___flmul@b+2)^0,c
 27103  005D68  0E00               	movlw	0
 27104  005D6A  6E3B               	movwf	(___flmul@b+3)^0,c
 27105  005D6C                     l30763:
 27106                           
 27107                           ; BSR set to: 0
 27108  005D6C  8E3A               	bsf	(___flmul@b+2)^0,7,c
 27109  005D6E  D008               	goto	l30767
 27110  005D70                     l30765:
 27111                           
 27112                           ; BSR set to: 0
 27113  005D70  0E00               	movlw	0
 27114  005D72  6E38               	movwf	___flmul@b^0,c
 27115  005D74  0E00               	movlw	0
 27116  005D76  6E39               	movwf	(___flmul@b+1)^0,c
 27117  005D78  0E00               	movlw	0
 27118  005D7A  6E3A               	movwf	(___flmul@b+2)^0,c
 27119  005D7C  0E00               	movlw	0
 27120  005D7E  6E3B               	movwf	(___flmul@b+3)^0,c
 27121  005D80                     l30767:
 27122                           
 27123                           ; BSR set to: 0
 27124  005D80  503F               	movf	(___flmul@a+3)^0,w,c
 27125  005D82  0B80               	andlw	128
 27126  005D84  1B70               	xorwf	___flmul@sign& (0+255),f,b
 27127                           
 27128                           ; BSR set to: 0
 27129  005D86  503F               	movf	(___flmul@a+3)^0,w,c
 27130  005D88  243F               	addwf	(___flmul@a+3)^0,w,c
 27131  005D8A  6F71               	movwf	___flmul@aexp& (0+255),b
 27132                           
 27133                           ; BSR set to: 0
 27134  005D8C  BE3E               	btfsc	(___flmul@a+2)^0,7,c
 27135                           
 27136                           ; BSR set to: 0
 27137  005D8E  8171               	bsf	___flmul@aexp& (0+255),0,b
 27138                           
 27139                           ; BSR set to: 0
 27140  005D90  5171               	movf	___flmul@aexp& (0+255),w,b
 27141  005D92  B4D8               	btfsc	status,2,c
 27142  005D94  D00D               	goto	l30783
 27143                           
 27144                           ; BSR set to: 0
 27145  005D96  2971               	incf	___flmul@aexp& (0+255),w,b
 27146  005D98  A4D8               	btfss	status,2,c
 27147  005D9A  D008               	goto	l30781
 27148                           
 27149                           ; BSR set to: 0
 27150  005D9C  0E00               	movlw	0
 27151  005D9E  6E3C               	movwf	___flmul@a^0,c
 27152  005DA0  0E00               	movlw	0
 27153  005DA2  6E3D               	movwf	(___flmul@a+1)^0,c
 27154  005DA4  0E00               	movlw	0
 27155  005DA6  6E3E               	movwf	(___flmul@a+2)^0,c
 27156  005DA8  0E00               	movlw	0
 27157  005DAA  6E3F               	movwf	(___flmul@a+3)^0,c
 27158  005DAC                     l30781:
 27159                           
 27160                           ; BSR set to: 0
 27161  005DAC  8E3E               	bsf	(___flmul@a+2)^0,7,c
 27162  005DAE  D008               	goto	l3439
 27163  005DB0                     l30783:
 27164                           
 27165                           ; BSR set to: 0
 27166  005DB0  0E00               	movlw	0
 27167  005DB2  6E3C               	movwf	___flmul@a^0,c
 27168  005DB4  0E00               	movlw	0
 27169  005DB6  6E3D               	movwf	(___flmul@a+1)^0,c
 27170  005DB8  0E00               	movlw	0
 27171  005DBA  6E3E               	movwf	(___flmul@a+2)^0,c
 27172  005DBC  0E00               	movlw	0
 27173  005DBE  6E3F               	movwf	(___flmul@a+3)^0,c
 27174  005DC0                     l3439:
 27175                           
 27176                           ; BSR set to: 0
 27177  005DC0  5171               	movf	___flmul@aexp& (0+255),w,b
 27178  005DC2  B4D8               	btfsc	status,2,c
 27179  005DC4  D003               	goto	u38530
 27180                           
 27181                           ; BSR set to: 0
 27182  005DC6  5172               	movf	___flmul@bexp& (0+255),w,b
 27183  005DC8  A4D8               	btfss	status,2,c
 27184  005DCA  D009               	goto	l30791
 27185  005DCC                     u38530:
 27186                           
 27187                           ; BSR set to: 0
 27188  005DCC  0E00               	movlw	0
 27189  005DCE  6E38               	movwf	?___flmul^0,c
 27190  005DD0  0E00               	movlw	0
 27191  005DD2  6E39               	movwf	(?___flmul+1)^0,c
 27192  005DD4  0E00               	movlw	0
 27193  005DD6  6E3A               	movwf	(?___flmul+2)^0,c
 27194  005DD8  0E00               	movlw	0
 27195  005DDA  6E3B               	movwf	(?___flmul+3)^0,c
 27196  005DDC  0012               	return	
 27197  005DDE                     l30791:
 27198                           
 27199                           ; BSR set to: 0
 27200  005DDE  503E               	movf	(___flmul@a+2)^0,w,c
 27201  005DE0  0238               	mulwf	___flmul@b^0,c
 27202  005DE2  CFF3 F07B          	movff	prodl,___flmul@temp
 27203  005DE6  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27204                           
 27205                           ; BSR set to: 0
 27206  005DEA  517B               	movf	___flmul@temp& (0+255),w,b
 27207  005DEC  6F73               	movwf	___flmul@grs& (0+255),b
 27208  005DEE  6B74               	clrf	(___flmul@grs+1)& (0+255),b
 27209  005DF0  6B75               	clrf	(___flmul@grs+2)& (0+255),b
 27210  005DF2  6B76               	clrf	(___flmul@grs+3)& (0+255),b
 27211                           
 27212                           ; BSR set to: 0
 27213  005DF4  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27214  005DF6  6F77               	movwf	___flmul@prod& (0+255),b
 27215  005DF8  6B78               	clrf	(___flmul@prod+1)& (0+255),b
 27216  005DFA  6B79               	clrf	(___flmul@prod+2)& (0+255),b
 27217  005DFC  6B7A               	clrf	(___flmul@prod+3)& (0+255),b
 27218  005DFE  503D               	movf	(___flmul@a+1)^0,w,c
 27219  005E00  0239               	mulwf	(___flmul@b+1)^0,c
 27220  005E02  CFF3 F07B          	movff	prodl,___flmul@temp
 27221  005E06  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27222                           
 27223                           ; BSR set to: 0
 27224  005E0A  517B               	movf	___flmul@temp& (0+255),w,b
 27225  005E0C  2773               	addwf	___flmul@grs& (0+255),f,b
 27226  005E0E  0E00               	movlw	0
 27227  005E10  2374               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27228  005E12  2375               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27229  005E14  2376               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27230                           
 27231                           ; BSR set to: 0
 27232  005E16  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27233  005E18  2777               	addwf	___flmul@prod& (0+255),f,b
 27234  005E1A  0E00               	movlw	0
 27235  005E1C  2378               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27236  005E1E  2379               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27237  005E20  237A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27238  005E22  503C               	movf	___flmul@a^0,w,c
 27239  005E24  023A               	mulwf	(___flmul@b+2)^0,c
 27240  005E26  CFF3 F07B          	movff	prodl,___flmul@temp
 27241  005E2A  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27242                           
 27243                           ; BSR set to: 0
 27244  005E2E  517B               	movf	___flmul@temp& (0+255),w,b
 27245  005E30  2773               	addwf	___flmul@grs& (0+255),f,b
 27246  005E32  0E00               	movlw	0
 27247  005E34  2374               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27248  005E36  2375               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27249  005E38  2376               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27250                           
 27251                           ; BSR set to: 0
 27252  005E3A  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27253  005E3C  2777               	addwf	___flmul@prod& (0+255),f,b
 27254  005E3E  0E00               	movlw	0
 27255  005E40  2378               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27256  005E42  2379               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27257  005E44  237A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27258                           
 27259                           ; BSR set to: 0
 27260  005E46  C075  F076         	movff	___flmul@grs+2,___flmul@grs+3
 27261  005E4A  C074  F075         	movff	___flmul@grs+1,___flmul@grs+2
 27262  005E4E  C073  F074         	movff	___flmul@grs,___flmul@grs+1
 27263  005E52  6B73               	clrf	___flmul@grs& (0+255),b
 27264                           
 27265                           ; BSR set to: 0
 27266  005E54  503C               	movf	___flmul@a^0,w,c
 27267  005E56  0239               	mulwf	(___flmul@b+1)^0,c
 27268  005E58  CFF3 F07B          	movff	prodl,___flmul@temp
 27269  005E5C  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27270                           
 27271                           ; BSR set to: 0
 27272  005E60  517B               	movf	___flmul@temp& (0+255),w,b
 27273  005E62  2773               	addwf	___flmul@grs& (0+255),f,b
 27274  005E64  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27275  005E66  2374               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27276  005E68  0E00               	movlw	0
 27277  005E6A  2375               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27278  005E6C  0E00               	movlw	0
 27279  005E6E  2376               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27280                           
 27281                           ; BSR set to: 0
 27282  005E70  503D               	movf	(___flmul@a+1)^0,w,c
 27283  005E72  0238               	mulwf	___flmul@b^0,c
 27284  005E74  CFF3 F07B          	movff	prodl,___flmul@temp
 27285  005E78  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27286                           
 27287                           ; BSR set to: 0
 27288  005E7C  517B               	movf	___flmul@temp& (0+255),w,b
 27289  005E7E  2773               	addwf	___flmul@grs& (0+255),f,b
 27290  005E80  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27291  005E82  2374               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27292  005E84  0E00               	movlw	0
 27293  005E86  2375               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27294  005E88  0E00               	movlw	0
 27295  005E8A  2376               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27296                           
 27297                           ; BSR set to: 0
 27298  005E8C  C075  F076         	movff	___flmul@grs+2,___flmul@grs+3
 27299  005E90  C074  F075         	movff	___flmul@grs+1,___flmul@grs+2
 27300  005E94  C073  F074         	movff	___flmul@grs,___flmul@grs+1
 27301  005E98  6B73               	clrf	___flmul@grs& (0+255),b
 27302  005E9A  503C               	movf	___flmul@a^0,w,c
 27303  005E9C  0238               	mulwf	___flmul@b^0,c
 27304  005E9E  CFF3 F07B          	movff	prodl,___flmul@temp
 27305  005EA2  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27306                           
 27307                           ; BSR set to: 0
 27308  005EA6  517B               	movf	___flmul@temp& (0+255),w,b
 27309  005EA8  2773               	addwf	___flmul@grs& (0+255),f,b
 27310  005EAA  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27311  005EAC  2374               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27312  005EAE  0E00               	movlw	0
 27313  005EB0  2375               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27314  005EB2  0E00               	movlw	0
 27315  005EB4  2376               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27316                           
 27317                           ; BSR set to: 0
 27318  005EB6  503E               	movf	(___flmul@a+2)^0,w,c
 27319  005EB8  0239               	mulwf	(___flmul@b+1)^0,c
 27320  005EBA  CFF3 F07B          	movff	prodl,___flmul@temp
 27321  005EBE  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27322  005EC2  517B               	movf	___flmul@temp& (0+255),w,b
 27323  005EC4  2777               	addwf	___flmul@prod& (0+255),f,b
 27324  005EC6  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27325  005EC8  2378               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27326  005ECA  0E00               	movlw	0
 27327  005ECC  2379               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27328  005ECE  0E00               	movlw	0
 27329  005ED0  237A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27330                           
 27331                           ; BSR set to: 0
 27332  005ED2  503D               	movf	(___flmul@a+1)^0,w,c
 27333  005ED4  023A               	mulwf	(___flmul@b+2)^0,c
 27334  005ED6  CFF3 F07B          	movff	prodl,___flmul@temp
 27335  005EDA  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27336                           
 27337                           ; BSR set to: 0
 27338  005EDE  517B               	movf	___flmul@temp& (0+255),w,b
 27339  005EE0  2777               	addwf	___flmul@prod& (0+255),f,b
 27340  005EE2  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27341  005EE4  2378               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27342  005EE6  0E00               	movlw	0
 27343  005EE8  2379               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27344  005EEA  0E00               	movlw	0
 27345  005EEC  237A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27346  005EEE  503E               	movf	(___flmul@a+2)^0,w,c
 27347  005EF0  023A               	mulwf	(___flmul@b+2)^0,c
 27348  005EF2  CFF3 F07B          	movff	prodl,___flmul@temp
 27349  005EF6  CFF4 F07C          	movff	prodh,___flmul@temp+1
 27350                           
 27351                           ; BSR set to: 0
 27352  005EFA  517B               	movf	___flmul@temp& (0+255),w,b
 27353  005EFC  6F6C               	movwf	??___flmul& (0+255),b
 27354  005EFE  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27355  005F00  6F6D               	movwf	(??___flmul+1)& (0+255),b
 27356  005F02  6B6E               	clrf	(??___flmul+2)& (0+255),b
 27357  005F04  6B6F               	clrf	(??___flmul+3)& (0+255),b
 27358  005F06  C06E  F06F         	movff	??___flmul+2,??___flmul+3
 27359  005F0A  C06D  F06E         	movff	??___flmul+1,??___flmul+2
 27360  005F0E  C06C  F06D         	movff	??___flmul,??___flmul+1
 27361  005F12  6B6C               	clrf	??___flmul& (0+255),b
 27362  005F14  516C               	movf	??___flmul& (0+255),w,b
 27363  005F16  2777               	addwf	___flmul@prod& (0+255),f,b
 27364  005F18  516D               	movf	(??___flmul+1)& (0+255),w,b
 27365  005F1A  2378               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27366  005F1C  516E               	movf	(??___flmul+2)& (0+255),w,b
 27367  005F1E  2379               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27368  005F20  516F               	movf	(??___flmul+3)& (0+255),w,b
 27369  005F22  237A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27370                           
 27371                           ; BSR set to: 0
 27372  005F24  5176               	movf	(___flmul@grs+3)& (0+255),w,b
 27373  005F26  2777               	addwf	___flmul@prod& (0+255),f,b
 27374  005F28  0E00               	movlw	0
 27375  005F2A  2378               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27376  005F2C  2379               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27377  005F2E  237A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27378                           
 27379                           ; BSR set to: 0
 27380  005F30  C075  F076         	movff	___flmul@grs+2,___flmul@grs+3
 27381  005F34  C074  F075         	movff	___flmul@grs+1,___flmul@grs+2
 27382  005F38  C073  F074         	movff	___flmul@grs,___flmul@grs+1
 27383  005F3C  6B73               	clrf	___flmul@grs& (0+255),b
 27384                           
 27385                           ; BSR set to: 0
 27386  005F3E  5171               	movf	___flmul@aexp& (0+255),w,b
 27387  005F40  C072  F06C         	movff	___flmul@bexp,??___flmul
 27388  005F44  6B6D               	clrf	(??___flmul+1)& (0+255),b
 27389  005F46  276C               	addwf	??___flmul& (0+255),f,b
 27390  005F48  0E00               	movlw	0
 27391  005F4A  236D               	addwfc	(??___flmul+1)& (0+255),f,b
 27392  005F4C  0E82               	movlw	130
 27393  005F4E  256C               	addwf	??___flmul& (0+255),w,b
 27394  005F50  6F7B               	movwf	___flmul@temp& (0+255),b
 27395  005F52  0EFF               	movlw	255
 27396  005F54  216D               	addwfc	(??___flmul+1)& (0+255),w,b
 27397  005F56  6F7C               	movwf	(___flmul@temp+1)& (0+255),b
 27398  005F58  D00F               	goto	l30839
 27399  005F5A                     l30833:
 27400                           
 27401                           ; BSR set to: 0
 27402  005F5A  90D8               	bcf	status,0,c
 27403  005F5C  3777               	rlcf	___flmul@prod& (0+255),f,b
 27404  005F5E  3778               	rlcf	(___flmul@prod+1)& (0+255),f,b
 27405  005F60  3779               	rlcf	(___flmul@prod+2)& (0+255),f,b
 27406  005F62  377A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 27407                           
 27408                           ; BSR set to: 0
 27409  005F64  BF76               	btfsc	(___flmul@grs+3)& (0+255),7,b
 27410                           
 27411                           ; BSR set to: 0
 27412  005F66  8177               	bsf	___flmul@prod& (0+255),0,b
 27413                           
 27414                           ; BSR set to: 0
 27415  005F68  90D8               	bcf	status,0,c
 27416  005F6A  3773               	rlcf	___flmul@grs& (0+255),f,b
 27417  005F6C  3774               	rlcf	(___flmul@grs+1)& (0+255),f,b
 27418  005F6E  3775               	rlcf	(___flmul@grs+2)& (0+255),f,b
 27419  005F70  3776               	rlcf	(___flmul@grs+3)& (0+255),f,b
 27420  005F72  077B               	decf	___flmul@temp& (0+255),f,b
 27421  005F74  A0D8               	btfss	status,0,c
 27422  005F76  077C               	decf	(___flmul@temp+1)& (0+255),f,b
 27423  005F78                     l30839:
 27424                           
 27425                           ; BSR set to: 0
 27426  005F78  AF79               	btfss	(___flmul@prod+2)& (0+255),7,b
 27427  005F7A  D7EF               	goto	l30833
 27428                           
 27429                           ; BSR set to: 0
 27430  005F7C  0E00               	movlw	0
 27431  005F7E  6F71               	movwf	___flmul@aexp& (0+255),b
 27432                           
 27433                           ; BSR set to: 0
 27434  005F80  AF76               	btfss	(___flmul@grs+3)& (0+255),7,b
 27435  005F82  D017               	goto	l3448
 27436                           
 27437                           ; BSR set to: 0
 27438  005F84  0EFF               	movlw	255
 27439  005F86  1573               	andwf	___flmul@grs& (0+255),w,b
 27440  005F88  6F6C               	movwf	??___flmul& (0+255),b
 27441  005F8A  0EFF               	movlw	255
 27442  005F8C  1574               	andwf	(___flmul@grs+1)& (0+255),w,b
 27443  005F8E  6F6D               	movwf	(??___flmul+1)& (0+255),b
 27444  005F90  0EFF               	movlw	255
 27445  005F92  1575               	andwf	(___flmul@grs+2)& (0+255),w,b
 27446  005F94  6F6E               	movwf	(??___flmul+2)& (0+255),b
 27447  005F96  0E7F               	movlw	127
 27448  005F98  1576               	andwf	(___flmul@grs+3)& (0+255),w,b
 27449  005F9A  6F6F               	movwf	(??___flmul+3)& (0+255),b
 27450  005F9C  516C               	movf	??___flmul& (0+255),w,b
 27451  005F9E  116D               	iorwf	(??___flmul+1)& (0+255),w,b
 27452  005FA0  116E               	iorwf	(??___flmul+2)& (0+255),w,b
 27453  005FA2  116F               	iorwf	(??___flmul+3)& (0+255),w,b
 27454  005FA4  B4D8               	btfsc	status,2,c
 27455  005FA6  D003               	goto	l3449
 27456  005FA8                     u38570:
 27457                           
 27458                           ; BSR set to: 0
 27459  005FA8  0E01               	movlw	1
 27460  005FAA  6F71               	movwf	___flmul@aexp& (0+255),b
 27461  005FAC  D002               	goto	l3448
 27462  005FAE                     l3449:
 27463                           
 27464                           ; BSR set to: 0
 27465  005FAE  B177               	btfsc	___flmul@prod& (0+255),0,b
 27466  005FB0  D7FB               	goto	u38570
 27467  005FB2                     l3448:
 27468                           
 27469                           ; BSR set to: 0
 27470  005FB2  5171               	movf	___flmul@aexp& (0+255),w,b
 27471  005FB4  B4D8               	btfsc	status,2,c
 27472  005FB6  D01F               	goto	l30859
 27473                           
 27474                           ; BSR set to: 0
 27475  005FB8  0E01               	movlw	1
 27476  005FBA  2777               	addwf	___flmul@prod& (0+255),f,b
 27477  005FBC  0E00               	movlw	0
 27478  005FBE  2378               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27479  005FC0  2379               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27480  005FC2  237A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27481                           
 27482                           ; BSR set to: 0
 27483  005FC4  A17A               	btfss	(___flmul@prod+3)& (0+255),0,b
 27484  005FC6  D017               	goto	l30859
 27485                           
 27486                           ; BSR set to: 0
 27487  005FC8  C077  F06C         	movff	___flmul@prod,??___flmul
 27488  005FCC  C078  F06D         	movff	___flmul@prod+1,??___flmul+1
 27489  005FD0  C079  F06E         	movff	___flmul@prod+2,??___flmul+2
 27490  005FD4  C07A  F06F         	movff	___flmul@prod+3,??___flmul+3
 27491  005FD8  356F               	rlcf	(??___flmul+3)& (0+255),w,b
 27492  005FDA  336F               	rrcf	(??___flmul+3)& (0+255),f,b
 27493  005FDC  336E               	rrcf	(??___flmul+2)& (0+255),f,b
 27494  005FDE  336D               	rrcf	(??___flmul+1)& (0+255),f,b
 27495  005FE0  336C               	rrcf	??___flmul& (0+255),f,b
 27496  005FE2  C06C  F077         	movff	??___flmul,___flmul@prod
 27497  005FE6  C06D  F078         	movff	??___flmul+1,___flmul@prod+1
 27498  005FEA  C06E  F079         	movff	??___flmul+2,___flmul@prod+2
 27499  005FEE  C06F  F07A         	movff	??___flmul+3,___flmul@prod+3
 27500                           
 27501                           ; BSR set to: 0
 27502  005FF2  4B7B               	infsnz	___flmul@temp& (0+255),f,b
 27503  005FF4  2B7C               	incf	(___flmul@temp+1)& (0+255),f,b
 27504  005FF6                     l30859:
 27505                           
 27506                           ; BSR set to: 0
 27507  005FF6  BF7C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 27508  005FF8  D00D               	goto	l30863
 27509  005FFA  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27510  005FFC  E103               	bnz	u38610
 27511  005FFE  297B               	incf	___flmul@temp& (0+255),w,b
 27512  006000  A0D8               	btfss	status,0,c
 27513  006002  D008               	goto	l30863
 27514  006004                     u38610:
 27515                           
 27516                           ; BSR set to: 0
 27517  006004  0E00               	movlw	0
 27518  006006  6F77               	movwf	___flmul@prod& (0+255),b
 27519  006008  0E00               	movlw	0
 27520  00600A  6F78               	movwf	(___flmul@prod+1)& (0+255),b
 27521  00600C  0E80               	movlw	128
 27522  00600E  6F79               	movwf	(___flmul@prod+2)& (0+255),b
 27523  006010  0E7F               	movlw	127
 27524  006012  D020               	goto	L71
 27525  006014                     l30863:
 27526                           
 27527                           ; BSR set to: 0
 27528  006014  BF7C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 27529  006016  D005               	goto	u38620
 27530  006018  517C               	movf	(___flmul@temp+1)& (0+255),w,b
 27531  00601A  E10E               	bnz	l3456
 27532  00601C  057B               	decf	___flmul@temp& (0+255),w,b
 27533  00601E  B0D8               	btfsc	status,0,c
 27534  006020  D00B               	goto	l3456
 27535  006022                     u38620:
 27536                           
 27537                           ; BSR set to: 0
 27538  006022  0E00               	movlw	0
 27539  006024  6F77               	movwf	___flmul@prod& (0+255),b
 27540  006026  0E00               	movlw	0
 27541  006028  6F78               	movwf	(___flmul@prod+1)& (0+255),b
 27542  00602A  0E00               	movlw	0
 27543  00602C  6F79               	movwf	(___flmul@prod+2)& (0+255),b
 27544  00602E  0E00               	movlw	0
 27545  006030  6F7A               	movwf	(___flmul@prod+3)& (0+255),b
 27546  006032  0E00               	movlw	0
 27547  006034  6F70               	movwf	___flmul@sign& (0+255),b
 27548  006036  D00F               	goto	l30875
 27549  006038                     l3456:
 27550                           
 27551                           ; BSR set to: 0
 27552  006038  C07B  F072         	movff	___flmul@temp,___flmul@bexp
 27553                           
 27554                           ; BSR set to: 0
 27555  00603C  0EFF               	movlw	255
 27556  00603E  1777               	andwf	___flmul@prod& (0+255),f,b
 27557  006040  0EFF               	movlw	255
 27558  006042  1778               	andwf	(___flmul@prod+1)& (0+255),f,b
 27559  006044  0E7F               	movlw	127
 27560  006046  1779               	andwf	(___flmul@prod+2)& (0+255),f,b
 27561  006048  0E00               	movlw	0
 27562  00604A  177A               	andwf	(___flmul@prod+3)& (0+255),f,b
 27563                           
 27564                           ; BSR set to: 0
 27565  00604C  B172               	btfsc	___flmul@bexp& (0+255),0,b
 27566                           
 27567                           ; BSR set to: 0
 27568  00604E  8F79               	bsf	(___flmul@prod+2)& (0+255),7,b
 27569                           
 27570                           ; BSR set to: 0
 27571  006050  90D8               	bcf	status,0,c
 27572  006052  3172               	rrcf	___flmul@bexp& (0+255),w,b
 27573  006054                     L71:
 27574  006054  6F7A               	movwf	(___flmul@prod+3)& (0+255),b
 27575  006056                     l30875:
 27576                           
 27577                           ; BSR set to: 0
 27578  006056  5170               	movf	___flmul@sign& (0+255),w,b
 27579  006058  137A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 27580                           
 27581                           ; BSR set to: 0
 27582  00605A  C077  F038         	movff	___flmul@prod,?___flmul
 27583  00605E  C078  F039         	movff	___flmul@prod+1,?___flmul+1
 27584  006062  C079  F03A         	movff	___flmul@prod+2,?___flmul+2
 27585  006066  C07A  F03B         	movff	___flmul@prod+3,?___flmul+3
 27586                           
 27587                           ; BSR set to: 0
 27588  00606A  0012               	return		;funcret
 27589  00606C                     __end_of___flmul:
 27590                           	callstack 0
 27591                           
 27592 ;; *************** function __tdiv_to_l_ *****************
 27593 ;; Defined at:
 27594 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
 27595 ;; Parameters:    Size  Location     Type
 27596 ;;  f1              4   14[COMRAM] float 
 27597 ;;  f2              4   18[COMRAM] float 
 27598 ;; Auto vars:     Size  Location     Type
 27599 ;;  quot            4   25[COMRAM] unsigned long 
 27600 ;;  exp1            1   30[COMRAM] unsigned char 
 27601 ;;  cntr            1   29[COMRAM] unsigned char 
 27602 ;; Return value:  Size  Location     Type
 27603 ;;                  4   14[COMRAM] unsigned long 
 27604 ;; Registers used:
 27605 ;;		wreg, status,2, status,0
 27606 ;; Tracked objects:
 27607 ;;		On entry : 0/0
 27608 ;;		On exit  : 0/0
 27609 ;;		Unchanged: 0/0
 27610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27611 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27612 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27613 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27614 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27615 ;;Total ram usage:       17 bytes
 27616 ;; Hardware stack levels used: 1
 27617 ;; Hardware stack levels required when called: 4
 27618 ;; This function calls:
 27619 ;;		Nothing
 27620 ;; This function is called by:
 27621 ;;		_sprintf
 27622 ;; This function uses a non-reentrant model
 27623 ;;
 27624                           
 27625                           	psect	text121
 27626  00A43E                     __ptext121:
 27627                           	callstack 0
 27628  00A43E                     __tdiv_to_l_:
 27629                           	callstack 23
 27630                           
 27631                           ; BSR set to: 0
 27632                           ;incstack = 0
 27633  00A43E  C011  F017         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 27634  00A442  6A18               	clrf	(??__tdiv_to_l_+1)^0,c
 27635  00A444  6A19               	clrf	(??__tdiv_to_l_+2)^0,c
 27636  00A446  3410               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
 27637  00A448  3617               	rlcf	??__tdiv_to_l_^0,f,c
 27638  00A44A  E301               	bnc	u38991
 27639  00A44C  8018               	bsf	(??__tdiv_to_l_+1)^0,0,c
 27640  00A44E                     u38991:
 27641  00A44E  5017               	movf	??__tdiv_to_l_^0,w,c
 27642  00A450  6E1F               	movwf	__tdiv_to_l_@exp1^0,c
 27643  00A452  501F               	movf	__tdiv_to_l_@exp1^0,w,c
 27644  00A454  A4D8               	btfss	status,2,c
 27645  00A456  D009               	goto	l31165
 27646  00A458                     u39000:
 27647  00A458  0E00               	movlw	0
 27648  00A45A  6E0F               	movwf	?__tdiv_to_l_^0,c
 27649  00A45C  0E00               	movlw	0
 27650  00A45E  6E10               	movwf	(?__tdiv_to_l_+1)^0,c
 27651  00A460  0E00               	movlw	0
 27652  00A462  6E11               	movwf	(?__tdiv_to_l_+2)^0,c
 27653  00A464  0E00               	movlw	0
 27654  00A466  6E12               	movwf	(?__tdiv_to_l_+3)^0,c
 27655  00A468  0012               	return	
 27656  00A46A                     l31165:
 27657  00A46A  C015  F017         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 27658  00A46E  6A18               	clrf	(??__tdiv_to_l_+1)^0,c
 27659  00A470  6A19               	clrf	(??__tdiv_to_l_+2)^0,c
 27660  00A472  3414               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
 27661  00A474  3617               	rlcf	??__tdiv_to_l_^0,f,c
 27662  00A476  E301               	bnc	u39011
 27663  00A478  8018               	bsf	(??__tdiv_to_l_+1)^0,0,c
 27664  00A47A                     u39011:
 27665  00A47A  5017               	movf	??__tdiv_to_l_^0,w,c
 27666  00A47C  6E1E               	movwf	__tdiv_to_l_@cntr^0,c
 27667  00A47E  501E               	movf	__tdiv_to_l_@cntr^0,w,c
 27668  00A480  B4D8               	btfsc	status,2,c
 27669  00A482  D7EA               	goto	u39000
 27670  00A484  8E10               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
 27671  00A486  0EFF               	movlw	255
 27672  00A488  160F               	andwf	__tdiv_to_l_@f1^0,f,c
 27673  00A48A  0EFF               	movlw	255
 27674  00A48C  1610               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
 27675  00A48E  0E00               	movlw	0
 27676  00A490  1611               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
 27677  00A492  8E14               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
 27678  00A494  0EFF               	movlw	255
 27679  00A496  1613               	andwf	__tdiv_to_l_@f2^0,f,c
 27680  00A498  0EFF               	movlw	255
 27681  00A49A  1614               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
 27682  00A49C  0E00               	movlw	0
 27683  00A49E  1615               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
 27684  00A4A0  0E00               	movlw	0
 27685  00A4A2  6E1A               	movwf	__tdiv_to_l_@quot^0,c
 27686  00A4A4  0E00               	movlw	0
 27687  00A4A6  6E1B               	movwf	(__tdiv_to_l_@quot+1)^0,c
 27688  00A4A8  0E00               	movlw	0
 27689  00A4AA  6E1C               	movwf	(__tdiv_to_l_@quot+2)^0,c
 27690  00A4AC  0E00               	movlw	0
 27691  00A4AE  6E1D               	movwf	(__tdiv_to_l_@quot+3)^0,c
 27692  00A4B0  0E7F               	movlw	127
 27693  00A4B2  5E1F               	subwf	__tdiv_to_l_@exp1^0,f,c
 27694  00A4B4  501E               	movf	__tdiv_to_l_@cntr^0,w,c
 27695  00A4B6  0F98               	addlw	152
 27696  00A4B8  5E1F               	subwf	__tdiv_to_l_@exp1^0,f,c
 27697  00A4BA  0E18               	movlw	24
 27698  00A4BC  6E1E               	movwf	__tdiv_to_l_@cntr^0,c
 27699  00A4BE                     l3168:
 27700  00A4BE  90D8               	bcf	status,0,c
 27701  00A4C0  361A               	rlcf	__tdiv_to_l_@quot^0,f,c
 27702  00A4C2  361B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 27703  00A4C4  361C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 27704  00A4C6  361D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 27705  00A4C8  5013               	movf	__tdiv_to_l_@f2^0,w,c
 27706  00A4CA  5C0F               	subwf	__tdiv_to_l_@f1^0,w,c
 27707  00A4CC  5014               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 27708  00A4CE  5810               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
 27709  00A4D0  5015               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 27710  00A4D2  5811               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
 27711  00A4D4  A0D8               	btfss	status,0,c
 27712  00A4D6  D007               	goto	l3169
 27713  00A4D8  5013               	movf	__tdiv_to_l_@f2^0,w,c
 27714  00A4DA  5E0F               	subwf	__tdiv_to_l_@f1^0,f,c
 27715  00A4DC  5014               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 27716  00A4DE  5A10               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
 27717  00A4E0  5015               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 27718  00A4E2  5A11               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
 27719  00A4E4  801A               	bsf	__tdiv_to_l_@quot^0,0,c
 27720  00A4E6                     l3169:
 27721  00A4E6  90D8               	bcf	status,0,c
 27722  00A4E8  360F               	rlcf	__tdiv_to_l_@f1^0,f,c
 27723  00A4EA  3610               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
 27724  00A4EC  3611               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
 27725  00A4EE  2E1E               	decfsz	__tdiv_to_l_@cntr^0,f,c
 27726  00A4F0  D7E6               	goto	l3168
 27727  00A4F2  AE1F               	btfss	__tdiv_to_l_@exp1^0,7,c
 27728  00A4F4  D00D               	goto	l31205
 27729  00A4F6  501F               	movf	__tdiv_to_l_@exp1^0,w,c
 27730  00A4F8  0A80               	xorlw	128
 27731  00A4FA  0F97               	addlw	151
 27732  00A4FC  A0D8               	btfss	status,0,c
 27733  00A4FE  D7AC               	goto	u39000
 27734  00A500                     l31201:
 27735  00A500  90D8               	bcf	status,0,c
 27736  00A502  321D               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
 27737  00A504  321C               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
 27738  00A506  321B               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
 27739  00A508  321A               	rrcf	__tdiv_to_l_@quot^0,f,c
 27740  00A50A  3E1F               	incfsz	__tdiv_to_l_@exp1^0,f,c
 27741  00A50C  D7F9               	goto	l31201
 27742  00A50E  D00D               	goto	u39070
 27743  00A510                     l31205:
 27744  00A510  0E17               	movlw	23
 27745  00A512  641F               	cpfsgt	__tdiv_to_l_@exp1^0,c
 27746  00A514  D007               	goto	l31213
 27747  00A516  D7A0               	goto	u39000
 27748  00A518                     l31211:
 27749  00A518  90D8               	bcf	status,0,c
 27750  00A51A  361A               	rlcf	__tdiv_to_l_@quot^0,f,c
 27751  00A51C  361B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 27752  00A51E  361C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 27753  00A520  361D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 27754  00A522  061F               	decf	__tdiv_to_l_@exp1^0,f,c
 27755  00A524                     l31213:
 27756  00A524  501F               	movf	__tdiv_to_l_@exp1^0,w,c
 27757  00A526  A4D8               	btfss	status,2,c
 27758  00A528  D7F7               	goto	l31211
 27759  00A52A                     u39070:
 27760  00A52A  C01A  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 27761  00A52E  C01B  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 27762  00A532  C01C  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 27763  00A536  C01D  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 27764  00A53A  0012               	return		;funcret
 27765  00A53C                     __end_of__tdiv_to_l_:
 27766                           	callstack 0
 27767                           
 27768 ;; *************** function __div_to_l_ *****************
 27769 ;; Defined at:
 27770 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
 27771 ;; Parameters:    Size  Location     Type
 27772 ;;  f1              4   14[COMRAM] unsigned long 
 27773 ;;  f2              4   18[COMRAM] unsigned long 
 27774 ;; Auto vars:     Size  Location     Type
 27775 ;;  quot            4   22[COMRAM] unsigned long 
 27776 ;;  exp1            1   27[COMRAM] unsigned char 
 27777 ;;  cntr            1   26[COMRAM] unsigned char 
 27778 ;; Return value:  Size  Location     Type
 27779 ;;                  4   14[COMRAM] unsigned long 
 27780 ;; Registers used:
 27781 ;;		wreg, status,2, status,0
 27782 ;; Tracked objects:
 27783 ;;		On entry : 3F/0
 27784 ;;		On exit  : 3F/0
 27785 ;;		Unchanged: 3F/0
 27786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27787 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27788 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27790 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27791 ;;Total ram usage:       14 bytes
 27792 ;; Hardware stack levels used: 1
 27793 ;; Hardware stack levels required when called: 4
 27794 ;; This function calls:
 27795 ;;		Nothing
 27796 ;; This function is called by:
 27797 ;;		_sprintf
 27798 ;; This function uses a non-reentrant model
 27799 ;;
 27800                           
 27801                           	psect	text122
 27802  00A636                     __ptext122:
 27803                           	callstack 0
 27804  00A636                     __div_to_l_:
 27805                           	callstack 23
 27806                           
 27807                           ; BSR set to: 0
 27808                           
 27809                           ;incstack = 0
 27810  00A636  3411               	rlcf	(__div_to_l_@f1+2)^0,w,c
 27811  00A638  3412               	rlcf	(__div_to_l_@f1+3)^0,w,c
 27812  00A63A  6E1C               	movwf	__div_to_l_@exp1^0,c
 27813  00A63C  501C               	movf	__div_to_l_@exp1^0,w,c
 27814  00A63E  A4D8               	btfss	status,2,c
 27815  00A640  D009               	goto	l31221
 27816  00A642                     u39080:
 27817                           
 27818                           ; BSR set to: 0
 27819  00A642  0E00               	movlw	0
 27820  00A644  6E0F               	movwf	?__div_to_l_^0,c
 27821  00A646  0E00               	movlw	0
 27822  00A648  6E10               	movwf	(?__div_to_l_+1)^0,c
 27823  00A64A  0E00               	movlw	0
 27824  00A64C  6E11               	movwf	(?__div_to_l_+2)^0,c
 27825  00A64E  0E00               	movlw	0
 27826  00A650  6E12               	movwf	(?__div_to_l_+3)^0,c
 27827  00A652  0012               	return	
 27828  00A654                     l31221:
 27829                           
 27830                           ; BSR set to: 0
 27831  00A654  3415               	rlcf	(__div_to_l_@f2+2)^0,w,c
 27832  00A656  3416               	rlcf	(__div_to_l_@f2+3)^0,w,c
 27833  00A658  6E1B               	movwf	__div_to_l_@cntr^0,c
 27834  00A65A  501B               	movf	__div_to_l_@cntr^0,w,c
 27835  00A65C  B4D8               	btfsc	status,2,c
 27836  00A65E  D7F1               	goto	u39080
 27837                           
 27838                           ; BSR set to: 0
 27839  00A660  8E11               	bsf	(__div_to_l_@f1+2)^0,7,c
 27840                           
 27841                           ; BSR set to: 0
 27842  00A662  0EFF               	movlw	255
 27843  00A664  160F               	andwf	__div_to_l_@f1^0,f,c
 27844  00A666  0EFF               	movlw	255
 27845  00A668  1610               	andwf	(__div_to_l_@f1+1)^0,f,c
 27846  00A66A  0EFF               	movlw	255
 27847  00A66C  1611               	andwf	(__div_to_l_@f1+2)^0,f,c
 27848  00A66E  0E00               	movlw	0
 27849  00A670  1612               	andwf	(__div_to_l_@f1+3)^0,f,c
 27850                           
 27851                           ; BSR set to: 0
 27852  00A672  8E15               	bsf	(__div_to_l_@f2+2)^0,7,c
 27853  00A674  0EFF               	movlw	255
 27854  00A676  1613               	andwf	__div_to_l_@f2^0,f,c
 27855  00A678  0EFF               	movlw	255
 27856  00A67A  1614               	andwf	(__div_to_l_@f2+1)^0,f,c
 27857  00A67C  0EFF               	movlw	255
 27858  00A67E  1615               	andwf	(__div_to_l_@f2+2)^0,f,c
 27859  00A680  0E00               	movlw	0
 27860  00A682  1616               	andwf	(__div_to_l_@f2+3)^0,f,c
 27861                           
 27862                           ; BSR set to: 0
 27863  00A684  0E00               	movlw	0
 27864  00A686  6E17               	movwf	__div_to_l_@quot^0,c
 27865  00A688  0E00               	movlw	0
 27866  00A68A  6E18               	movwf	(__div_to_l_@quot+1)^0,c
 27867  00A68C  0E00               	movlw	0
 27868  00A68E  6E19               	movwf	(__div_to_l_@quot+2)^0,c
 27869  00A690  0E00               	movlw	0
 27870  00A692  6E1A               	movwf	(__div_to_l_@quot+3)^0,c
 27871                           
 27872                           ; BSR set to: 0
 27873  00A694  0E7F               	movlw	127
 27874  00A696  5E1C               	subwf	__div_to_l_@exp1^0,f,c
 27875                           
 27876                           ; BSR set to: 0
 27877  00A698  501B               	movf	__div_to_l_@cntr^0,w,c
 27878  00A69A  0FA0               	addlw	160
 27879  00A69C  5E1C               	subwf	__div_to_l_@exp1^0,f,c
 27880                           
 27881                           ; BSR set to: 0
 27882  00A69E  0E20               	movlw	32
 27883  00A6A0  6E1B               	movwf	__div_to_l_@cntr^0,c
 27884  00A6A2                     l31241:
 27885                           
 27886                           ; BSR set to: 0
 27887  00A6A2  90D8               	bcf	status,0,c
 27888  00A6A4  3617               	rlcf	__div_to_l_@quot^0,f,c
 27889  00A6A6  3618               	rlcf	(__div_to_l_@quot+1)^0,f,c
 27890  00A6A8  3619               	rlcf	(__div_to_l_@quot+2)^0,f,c
 27891  00A6AA  361A               	rlcf	(__div_to_l_@quot+3)^0,f,c
 27892                           
 27893                           ; BSR set to: 0
 27894  00A6AC  5013               	movf	__div_to_l_@f2^0,w,c
 27895  00A6AE  5C0F               	subwf	__div_to_l_@f1^0,w,c
 27896  00A6B0  5014               	movf	(__div_to_l_@f2+1)^0,w,c
 27897  00A6B2  5810               	subwfb	(__div_to_l_@f1+1)^0,w,c
 27898  00A6B4  5015               	movf	(__div_to_l_@f2+2)^0,w,c
 27899  00A6B6  5811               	subwfb	(__div_to_l_@f1+2)^0,w,c
 27900  00A6B8  5016               	movf	(__div_to_l_@f2+3)^0,w,c
 27901  00A6BA  5812               	subwfb	(__div_to_l_@f1+3)^0,w,c
 27902  00A6BC  A0D8               	btfss	status,0,c
 27903  00A6BE  D009               	goto	l31249
 27904                           
 27905                           ; BSR set to: 0
 27906  00A6C0  5013               	movf	__div_to_l_@f2^0,w,c
 27907  00A6C2  5E0F               	subwf	__div_to_l_@f1^0,f,c
 27908  00A6C4  5014               	movf	(__div_to_l_@f2+1)^0,w,c
 27909  00A6C6  5A10               	subwfb	(__div_to_l_@f1+1)^0,f,c
 27910  00A6C8  5015               	movf	(__div_to_l_@f2+2)^0,w,c
 27911  00A6CA  5A11               	subwfb	(__div_to_l_@f1+2)^0,f,c
 27912  00A6CC  5016               	movf	(__div_to_l_@f2+3)^0,w,c
 27913  00A6CE  5A12               	subwfb	(__div_to_l_@f1+3)^0,f,c
 27914                           
 27915                           ; BSR set to: 0
 27916  00A6D0  8017               	bsf	__div_to_l_@quot^0,0,c
 27917  00A6D2                     l31249:
 27918                           
 27919                           ; BSR set to: 0
 27920  00A6D2  90D8               	bcf	status,0,c
 27921  00A6D4  360F               	rlcf	__div_to_l_@f1^0,f,c
 27922  00A6D6  3610               	rlcf	(__div_to_l_@f1+1)^0,f,c
 27923  00A6D8  3611               	rlcf	(__div_to_l_@f1+2)^0,f,c
 27924  00A6DA  3612               	rlcf	(__div_to_l_@f1+3)^0,f,c
 27925                           
 27926                           ; BSR set to: 0
 27927  00A6DC  2E1B               	decfsz	__div_to_l_@cntr^0,f,c
 27928  00A6DE  D7E1               	goto	l31241
 27929                           
 27930                           ; BSR set to: 0
 27931  00A6E0  AE1C               	btfss	__div_to_l_@exp1^0,7,c
 27932  00A6E2  D00D               	goto	l31265
 27933                           
 27934                           ; BSR set to: 0
 27935  00A6E4  501C               	movf	__div_to_l_@exp1^0,w,c
 27936  00A6E6  0A80               	xorlw	128
 27937  00A6E8  0F9F               	addlw	159
 27938  00A6EA  A0D8               	btfss	status,0,c
 27939  00A6EC  D7AA               	goto	u39080
 27940  00A6EE                     l31261:
 27941                           
 27942                           ; BSR set to: 0
 27943  00A6EE  90D8               	bcf	status,0,c
 27944  00A6F0  321A               	rrcf	(__div_to_l_@quot+3)^0,f,c
 27945  00A6F2  3219               	rrcf	(__div_to_l_@quot+2)^0,f,c
 27946  00A6F4  3218               	rrcf	(__div_to_l_@quot+1)^0,f,c
 27947  00A6F6  3217               	rrcf	__div_to_l_@quot^0,f,c
 27948                           
 27949                           ; BSR set to: 0
 27950  00A6F8  3E1C               	incfsz	__div_to_l_@exp1^0,f,c
 27951  00A6FA  D7F9               	goto	l31261
 27952  00A6FC  D00D               	goto	u39140
 27953  00A6FE                     l31265:
 27954                           
 27955                           ; BSR set to: 0
 27956  00A6FE  0E1F               	movlw	31
 27957  00A700  641C               	cpfsgt	__div_to_l_@exp1^0,c
 27958  00A702  D007               	goto	l31273
 27959  00A704  D79E               	goto	u39080
 27960  00A706                     l31271:
 27961                           
 27962                           ; BSR set to: 0
 27963  00A706  90D8               	bcf	status,0,c
 27964  00A708  3617               	rlcf	__div_to_l_@quot^0,f,c
 27965  00A70A  3618               	rlcf	(__div_to_l_@quot+1)^0,f,c
 27966  00A70C  3619               	rlcf	(__div_to_l_@quot+2)^0,f,c
 27967  00A70E  361A               	rlcf	(__div_to_l_@quot+3)^0,f,c
 27968  00A710  061C               	decf	__div_to_l_@exp1^0,f,c
 27969  00A712                     l31273:
 27970                           
 27971                           ; BSR set to: 0
 27972  00A712  501C               	movf	__div_to_l_@exp1^0,w,c
 27973  00A714  A4D8               	btfss	status,2,c
 27974  00A716  D7F7               	goto	l31271
 27975  00A718                     u39140:
 27976                           
 27977                           ; BSR set to: 0
 27978  00A718  C017  F00F         	movff	__div_to_l_@quot,?__div_to_l_
 27979  00A71C  C018  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 27980  00A720  C019  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 27981  00A724  C01A  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 27982                           
 27983                           ; BSR set to: 0
 27984  00A728  0012               	return		;funcret
 27985  00A72A                     __end_of__div_to_l_:
 27986                           	callstack 0
 27987                           
 27988 ;; *************** function ___xxtofl *****************
 27989 ;; Defined at:
 27990 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
 27991 ;; Parameters:    Size  Location     Type
 27992 ;;  sign            1    wreg     unsigned char 
 27993 ;;  val             4   14[COMRAM] long 
 27994 ;; Auto vars:     Size  Location     Type
 27995 ;;  sign            1   22[COMRAM] unsigned char 
 27996 ;;  arg             4   24[COMRAM] unsigned long 
 27997 ;;  exp             1   23[COMRAM] unsigned char 
 27998 ;; Return value:  Size  Location     Type
 27999 ;;                  4   14[COMRAM] unsigned char 
 28000 ;; Registers used:
 28001 ;;		wreg, status,2, status,0
 28002 ;; Tracked objects:
 28003 ;;		On entry : 0/0
 28004 ;;		On exit  : 0/0
 28005 ;;		Unchanged: 0/0
 28006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28008 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28009 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28010 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28011 ;;Total ram usage:       14 bytes
 28012 ;; Hardware stack levels used: 1
 28013 ;; Hardware stack levels required when called: 4
 28014 ;; This function calls:
 28015 ;;		Nothing
 28016 ;; This function is called by:
 28017 ;;		_ADCto_uVoltage
 28018 ;;		__atof
 28019 ;;		_sprintf
 28020 ;; This function uses a non-reentrant model
 28021 ;;
 28022                           
 28023                           	psect	text123
 28024  009696                     __ptext123:
 28025                           	callstack 0
 28026  009696                     ___xxtofl:
 28027                           	callstack 23
 28028                           
 28029                           ; BSR set to: 0
 28030                           ;incstack = 0
 28031                           ;___xxtofl@sign stored from wreg
 28032  009696  6E17               	movwf	___xxtofl@sign^0,c
 28033  009698  5017               	movf	___xxtofl@sign^0,w,c
 28034  00969A  A4D8               	btfss	status,2,c
 28035  00969C  AE12               	btfss	(___xxtofl@val+3)^0,7,c
 28036  00969E  D01A               	goto	l3480
 28037  0096A0  C00F  F013         	movff	___xxtofl@val,??___xxtofl
 28038  0096A4  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
 28039  0096A8  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
 28040  0096AC  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
 28041  0096B0  1E13               	comf	??___xxtofl^0,f,c
 28042  0096B2  1E14               	comf	(??___xxtofl+1)^0,f,c
 28043  0096B4  1E15               	comf	(??___xxtofl+2)^0,f,c
 28044  0096B6  1E16               	comf	(??___xxtofl+3)^0,f,c
 28045  0096B8  2A13               	incf	??___xxtofl^0,f,c
 28046  0096BA  0E00               	movlw	0
 28047  0096BC  2214               	addwfc	(??___xxtofl+1)^0,f,c
 28048  0096BE  2215               	addwfc	(??___xxtofl+2)^0,f,c
 28049  0096C0  2216               	addwfc	(??___xxtofl+3)^0,f,c
 28050  0096C2  C013  F019         	movff	??___xxtofl,___xxtofl@arg
 28051  0096C6  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
 28052  0096CA  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
 28053  0096CE  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
 28054  0096D2  D008               	goto	l31415
 28055  0096D4                     l3480:
 28056  0096D4  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
 28057  0096D8  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 28058  0096DC  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 28059  0096E0  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 28060  0096E4                     l31415:
 28061  0096E4  500F               	movf	___xxtofl@val^0,w,c
 28062  0096E6  1010               	iorwf	(___xxtofl@val+1)^0,w,c
 28063  0096E8  1011               	iorwf	(___xxtofl@val+2)^0,w,c
 28064  0096EA  1012               	iorwf	(___xxtofl@val+3)^0,w,c
 28065  0096EC  A4D8               	btfss	status,2,c
 28066  0096EE  D009               	goto	l31421
 28067  0096F0  0E00               	movlw	0
 28068  0096F2  6E0F               	movwf	?___xxtofl^0,c
 28069  0096F4  0E00               	movlw	0
 28070  0096F6  6E10               	movwf	(?___xxtofl+1)^0,c
 28071  0096F8  0E00               	movlw	0
 28072  0096FA  6E11               	movwf	(?___xxtofl+2)^0,c
 28073  0096FC  0E00               	movlw	0
 28074  0096FE  6E12               	movwf	(?___xxtofl+3)^0,c
 28075  009700  0012               	return	
 28076  009702                     l31421:
 28077  009702  0E96               	movlw	150
 28078  009704  6E18               	movwf	___xxtofl@exp^0,c
 28079  009706  D006               	goto	l31425
 28080  009708                     l31423:
 28081  009708  2A18               	incf	___xxtofl@exp^0,f,c
 28082  00970A  90D8               	bcf	status,0,c
 28083  00970C  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
 28084  00970E  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
 28085  009710  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
 28086  009712  3219               	rrcf	___xxtofl@arg^0,f,c
 28087  009714                     l31425:
 28088  009714  0E00               	movlw	0
 28089  009716  1419               	andwf	___xxtofl@arg^0,w,c
 28090  009718  6E13               	movwf	??___xxtofl^0,c
 28091  00971A  0E00               	movlw	0
 28092  00971C  141A               	andwf	(___xxtofl@arg+1)^0,w,c
 28093  00971E  6E14               	movwf	(??___xxtofl+1)^0,c
 28094  009720  0E00               	movlw	0
 28095  009722  141B               	andwf	(___xxtofl@arg+2)^0,w,c
 28096  009724  6E15               	movwf	(??___xxtofl+2)^0,c
 28097  009726  0EFE               	movlw	254
 28098  009728  141C               	andwf	(___xxtofl@arg+3)^0,w,c
 28099  00972A  6E16               	movwf	(??___xxtofl+3)^0,c
 28100  00972C  5013               	movf	??___xxtofl^0,w,c
 28101  00972E  1014               	iorwf	(??___xxtofl+1)^0,w,c
 28102  009730  1015               	iorwf	(??___xxtofl+2)^0,w,c
 28103  009732  1016               	iorwf	(??___xxtofl+3)^0,w,c
 28104  009734  B4D8               	btfsc	status,2,c
 28105  009736  D00D               	goto	l3487
 28106  009738  D7E7               	goto	l31423
 28107  00973A                     l31427:
 28108  00973A  2A18               	incf	___xxtofl@exp^0,f,c
 28109  00973C  0E01               	movlw	1
 28110  00973E  2619               	addwf	___xxtofl@arg^0,f,c
 28111  009740  0E00               	movlw	0
 28112  009742  221A               	addwfc	(___xxtofl@arg+1)^0,f,c
 28113  009744  221B               	addwfc	(___xxtofl@arg+2)^0,f,c
 28114  009746  221C               	addwfc	(___xxtofl@arg+3)^0,f,c
 28115  009748  90D8               	bcf	status,0,c
 28116  00974A  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
 28117  00974C  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
 28118  00974E  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
 28119  009750  3219               	rrcf	___xxtofl@arg^0,f,c
 28120  009752                     l3487:
 28121  009752  0E00               	movlw	0
 28122  009754  1419               	andwf	___xxtofl@arg^0,w,c
 28123  009756  6E13               	movwf	??___xxtofl^0,c
 28124  009758  0E00               	movlw	0
 28125  00975A  141A               	andwf	(___xxtofl@arg+1)^0,w,c
 28126  00975C  6E14               	movwf	(??___xxtofl+1)^0,c
 28127  00975E  0E00               	movlw	0
 28128  009760  141B               	andwf	(___xxtofl@arg+2)^0,w,c
 28129  009762  6E15               	movwf	(??___xxtofl+2)^0,c
 28130  009764  0EFF               	movlw	255
 28131  009766  141C               	andwf	(___xxtofl@arg+3)^0,w,c
 28132  009768  6E16               	movwf	(??___xxtofl+3)^0,c
 28133  00976A  5013               	movf	??___xxtofl^0,w,c
 28134  00976C  1014               	iorwf	(??___xxtofl+1)^0,w,c
 28135  00976E  1015               	iorwf	(??___xxtofl+2)^0,w,c
 28136  009770  1016               	iorwf	(??___xxtofl+3)^0,w,c
 28137  009772  B4D8               	btfsc	status,2,c
 28138  009774  D007               	goto	l31435
 28139  009776  D7E1               	goto	l31427
 28140  009778                     l31433:
 28141  009778  0618               	decf	___xxtofl@exp^0,f,c
 28142  00977A  90D8               	bcf	status,0,c
 28143  00977C  3619               	rlcf	___xxtofl@arg^0,f,c
 28144  00977E  361A               	rlcf	(___xxtofl@arg+1)^0,f,c
 28145  009780  361B               	rlcf	(___xxtofl@arg+2)^0,f,c
 28146  009782  361C               	rlcf	(___xxtofl@arg+3)^0,f,c
 28147  009784                     l31435:
 28148  009784  BE1B               	btfsc	(___xxtofl@arg+2)^0,7,c
 28149  009786  D003               	goto	u39430
 28150  009788  0E02               	movlw	2
 28151  00978A  6018               	cpfslt	___xxtofl@exp^0,c
 28152  00978C  D7F5               	goto	l31433
 28153  00978E                     u39430:
 28154  00978E  A018               	btfss	___xxtofl@exp^0,0,c
 28155  009790  9E1B               	bcf	(___xxtofl@arg+2)^0,7,c
 28156  009792  90D8               	bcf	status,0,c
 28157  009794  3218               	rrcf	___xxtofl@exp^0,f,c
 28158  009796  C018  F013         	movff	___xxtofl@exp,??___xxtofl
 28159  00979A  6A14               	clrf	(??___xxtofl+1)^0,c
 28160  00979C  6A15               	clrf	(??___xxtofl+2)^0,c
 28161  00979E  6A16               	clrf	(??___xxtofl+3)^0,c
 28162  0097A0  C013  F016         	movff	??___xxtofl,??___xxtofl+3
 28163  0097A4  6A15               	clrf	(??___xxtofl+2)^0,c
 28164  0097A6  6A14               	clrf	(??___xxtofl+1)^0,c
 28165  0097A8  6A13               	clrf	??___xxtofl^0,c
 28166  0097AA  5013               	movf	??___xxtofl^0,w,c
 28167  0097AC  1219               	iorwf	___xxtofl@arg^0,f,c
 28168  0097AE  5014               	movf	(??___xxtofl+1)^0,w,c
 28169  0097B0  121A               	iorwf	(___xxtofl@arg+1)^0,f,c
 28170  0097B2  5015               	movf	(??___xxtofl+2)^0,w,c
 28171  0097B4  121B               	iorwf	(___xxtofl@arg+2)^0,f,c
 28172  0097B6  5016               	movf	(??___xxtofl+3)^0,w,c
 28173  0097B8  121C               	iorwf	(___xxtofl@arg+3)^0,f,c
 28174  0097BA  5017               	movf	___xxtofl@sign^0,w,c
 28175  0097BC  A4D8               	btfss	status,2,c
 28176  0097BE  AE12               	btfss	(___xxtofl@val+3)^0,7,c
 28177  0097C0  D001               	goto	l31451
 28178  0097C2  8E1C               	bsf	(___xxtofl@arg+3)^0,7,c
 28179  0097C4                     l31451:
 28180  0097C4  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
 28181  0097C8  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
 28182  0097CC  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
 28183  0097D0  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
 28184  0097D4  0012               	return		;funcret
 28185  0097D6                     __end_of___xxtofl:
 28186                           	callstack 0
 28187                           
 28188 ;; *************** function ___llmod *****************
 28189 ;; Defined at:
 28190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
 28191 ;; Parameters:    Size  Location     Type
 28192 ;;  dividend        4   14[COMRAM] unsigned long 
 28193 ;;  divisor         4   18[COMRAM] unsigned long 
 28194 ;; Auto vars:     Size  Location     Type
 28195 ;;  counter         1   22[COMRAM] unsigned char 
 28196 ;; Return value:  Size  Location     Type
 28197 ;;                  4   14[COMRAM] unsigned long 
 28198 ;; Registers used:
 28199 ;;		wreg, status,2, status,0
 28200 ;; Tracked objects:
 28201 ;;		On entry : 0/0
 28202 ;;		On exit  : 0/0
 28203 ;;		Unchanged: 0/0
 28204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28205 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28208 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28209 ;;Total ram usage:        9 bytes
 28210 ;; Hardware stack levels used: 1
 28211 ;; Hardware stack levels required when called: 4
 28212 ;; This function calls:
 28213 ;;		Nothing
 28214 ;; This function is called by:
 28215 ;;		_sprintf
 28216 ;; This function uses a non-reentrant model
 28217 ;;
 28218                           
 28219                           	psect	text124
 28220  00C98C                     __ptext124:
 28221                           	callstack 0
 28222  00C98C                     ___llmod:
 28223                           	callstack 23
 28224                           
 28225                           ;incstack = 0
 28226  00C98C  5013               	movf	___llmod@divisor^0,w,c
 28227  00C98E  1014               	iorwf	(___llmod@divisor+1)^0,w,c
 28228  00C990  1015               	iorwf	(___llmod@divisor+2)^0,w,c
 28229  00C992  1016               	iorwf	(___llmod@divisor+3)^0,w,c
 28230  00C994  B4D8               	btfsc	status,2,c
 28231  00C996  D024               	goto	l3245
 28232  00C998  0E01               	movlw	1
 28233  00C99A  6E17               	movwf	___llmod@counter^0,c
 28234  00C99C  D006               	goto	l31399
 28235  00C99E                     l31397:
 28236  00C99E  90D8               	bcf	status,0,c
 28237  00C9A0  3613               	rlcf	___llmod@divisor^0,f,c
 28238  00C9A2  3614               	rlcf	(___llmod@divisor+1)^0,f,c
 28239  00C9A4  3615               	rlcf	(___llmod@divisor+2)^0,f,c
 28240  00C9A6  3616               	rlcf	(___llmod@divisor+3)^0,f,c
 28241  00C9A8  2A17               	incf	___llmod@counter^0,f,c
 28242  00C9AA                     l31399:
 28243  00C9AA  AE16               	btfss	(___llmod@divisor+3)^0,7,c
 28244  00C9AC  D7F8               	goto	l31397
 28245  00C9AE                     u39350:
 28246  00C9AE  5013               	movf	___llmod@divisor^0,w,c
 28247  00C9B0  5C0F               	subwf	___llmod@dividend^0,w,c
 28248  00C9B2  5014               	movf	(___llmod@divisor+1)^0,w,c
 28249  00C9B4  5810               	subwfb	(___llmod@dividend+1)^0,w,c
 28250  00C9B6  5015               	movf	(___llmod@divisor+2)^0,w,c
 28251  00C9B8  5811               	subwfb	(___llmod@dividend+2)^0,w,c
 28252  00C9BA  5016               	movf	(___llmod@divisor+3)^0,w,c
 28253  00C9BC  5812               	subwfb	(___llmod@dividend+3)^0,w,c
 28254  00C9BE  A0D8               	btfss	status,0,c
 28255  00C9C0  D008               	goto	l31405
 28256  00C9C2  5013               	movf	___llmod@divisor^0,w,c
 28257  00C9C4  5E0F               	subwf	___llmod@dividend^0,f,c
 28258  00C9C6  5014               	movf	(___llmod@divisor+1)^0,w,c
 28259  00C9C8  5A10               	subwfb	(___llmod@dividend+1)^0,f,c
 28260  00C9CA  5015               	movf	(___llmod@divisor+2)^0,w,c
 28261  00C9CC  5A11               	subwfb	(___llmod@dividend+2)^0,f,c
 28262  00C9CE  5016               	movf	(___llmod@divisor+3)^0,w,c
 28263  00C9D0  5A12               	subwfb	(___llmod@dividend+3)^0,f,c
 28264  00C9D2                     l31405:
 28265  00C9D2  90D8               	bcf	status,0,c
 28266  00C9D4  3216               	rrcf	(___llmod@divisor+3)^0,f,c
 28267  00C9D6  3215               	rrcf	(___llmod@divisor+2)^0,f,c
 28268  00C9D8  3214               	rrcf	(___llmod@divisor+1)^0,f,c
 28269  00C9DA  3213               	rrcf	___llmod@divisor^0,f,c
 28270  00C9DC  2E17               	decfsz	___llmod@counter^0,f,c
 28271  00C9DE  D7E7               	goto	u39350
 28272  00C9E0                     l3245:
 28273  00C9E0  C00F  F00F         	movff	___llmod@dividend,?___llmod
 28274  00C9E4  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
 28275  00C9E8  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
 28276  00C9EC  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
 28277  00C9F0  0012               	return		;funcret
 28278  00C9F2                     __end_of___llmod:
 28279                           	callstack 0
 28280                           
 28281 ;; *************** function ___fltol *****************
 28282 ;; Defined at:
 28283 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
 28284 ;; Parameters:    Size  Location     Type
 28285 ;;  f1              4   29[BANK0 ] unsigned long 
 28286 ;; Auto vars:     Size  Location     Type
 28287 ;;  exp1            1   64[COMRAM] unsigned char 
 28288 ;;  sign1           1   63[COMRAM] unsigned char 
 28289 ;; Return value:  Size  Location     Type
 28290 ;;                  4   29[BANK0 ] long 
 28291 ;; Registers used:
 28292 ;;		wreg, status,2, status,0
 28293 ;; Tracked objects:
 28294 ;;		On entry : 3F/0
 28295 ;;		On exit  : 3F/0
 28296 ;;		Unchanged: 0/0
 28297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28298 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28300 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28301 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28302 ;;Total ram usage:       10 bytes
 28303 ;; Hardware stack levels used: 1
 28304 ;; Hardware stack levels required when called: 4
 28305 ;; This function calls:
 28306 ;;		Nothing
 28307 ;; This function is called by:
 28308 ;;		_sprintf
 28309 ;; This function uses a non-reentrant model
 28310 ;;
 28311                           
 28312                           	psect	text125
 28313  00B2A4                     __ptext125:
 28314                           	callstack 0
 28315  00B2A4                     ___fltol:
 28316                           	callstack 23
 28317                           
 28318                           ; BSR set to: 0
 28319                           
 28320                           ;incstack = 0
 28321  00B2A4  357F               	rlcf	(___fltol@f1+2)& (0+255),w,b
 28322  00B2A6  3580               	rlcf	(___fltol@f1+3)& (0+255),w,b
 28323  00B2A8  6E41               	movwf	___fltol@exp1^0,c
 28324  00B2AA  5041               	movf	___fltol@exp1^0,w,c
 28325  00B2AC  A4D8               	btfss	status,2,c
 28326  00B2AE  D009               	goto	l31355
 28327  00B2B0                     u39270:
 28328                           
 28329                           ; BSR set to: 0
 28330  00B2B0  0E00               	movlw	0
 28331  00B2B2  6F7D               	movwf	?___fltol& (0+255),b
 28332  00B2B4  0E00               	movlw	0
 28333  00B2B6  6F7E               	movwf	(?___fltol+1)& (0+255),b
 28334  00B2B8  0E00               	movlw	0
 28335  00B2BA  6F7F               	movwf	(?___fltol+2)& (0+255),b
 28336  00B2BC  0E00               	movlw	0
 28337  00B2BE  6F80               	movwf	(?___fltol+3)& (0+255),b
 28338  00B2C0  0012               	return	
 28339  00B2C2                     l31355:
 28340                           
 28341                           ; BSR set to: 0
 28342  00B2C2  C07D  F081         	movff	___fltol@f1,??___fltol
 28343  00B2C6  C07E  F082         	movff	___fltol@f1+1,??___fltol+1
 28344  00B2CA  C07F  F083         	movff	___fltol@f1+2,??___fltol+2
 28345  00B2CE  C080  F084         	movff	___fltol@f1+3,??___fltol+3
 28346  00B2D2  0E20               	movlw	32
 28347  00B2D4  D005               	goto	u39280
 28348  00B2D6                     u39285:
 28349  00B2D6  90D8               	bcf	status,0,c
 28350  00B2D8  3384               	rrcf	(??___fltol+3)& (0+255),f,b
 28351  00B2DA  3383               	rrcf	(??___fltol+2)& (0+255),f,b
 28352  00B2DC  3382               	rrcf	(??___fltol+1)& (0+255),f,b
 28353  00B2DE  3381               	rrcf	??___fltol& (0+255),f,b
 28354  00B2E0                     u39280:
 28355  00B2E0  2EE8               	decfsz	wreg,f,c
 28356  00B2E2  D7F9               	goto	u39285
 28357  00B2E4  5181               	movf	??___fltol& (0+255),w,b
 28358  00B2E6  6E40               	movwf	___fltol@sign1^0,c
 28359                           
 28360                           ; BSR set to: 0
 28361  00B2E8  8F7F               	bsf	(___fltol@f1+2)& (0+255),7,b
 28362                           
 28363                           ; BSR set to: 0
 28364  00B2EA  0EFF               	movlw	255
 28365  00B2EC  177D               	andwf	___fltol@f1& (0+255),f,b
 28366  00B2EE  0EFF               	movlw	255
 28367  00B2F0  177E               	andwf	(___fltol@f1+1)& (0+255),f,b
 28368  00B2F2  0EFF               	movlw	255
 28369  00B2F4  177F               	andwf	(___fltol@f1+2)& (0+255),f,b
 28370  00B2F6  0E00               	movlw	0
 28371  00B2F8  1780               	andwf	(___fltol@f1+3)& (0+255),f,b
 28372                           
 28373                           ; BSR set to: 0
 28374  00B2FA  0E96               	movlw	150
 28375  00B2FC  5E41               	subwf	___fltol@exp1^0,f,c
 28376                           
 28377                           ; BSR set to: 0
 28378  00B2FE  AE41               	btfss	___fltol@exp1^0,7,c
 28379  00B300  D00D               	goto	l31375
 28380                           
 28381                           ; BSR set to: 0
 28382  00B302  5041               	movf	___fltol@exp1^0,w,c
 28383  00B304  0A80               	xorlw	128
 28384  00B306  0F97               	addlw	151
 28385  00B308  A0D8               	btfss	status,0,c
 28386  00B30A  D7D2               	goto	u39270
 28387  00B30C                     l31371:
 28388                           
 28389                           ; BSR set to: 0
 28390  00B30C  90D8               	bcf	status,0,c
 28391  00B30E  3380               	rrcf	(___fltol@f1+3)& (0+255),f,b
 28392  00B310  337F               	rrcf	(___fltol@f1+2)& (0+255),f,b
 28393  00B312  337E               	rrcf	(___fltol@f1+1)& (0+255),f,b
 28394  00B314  337D               	rrcf	___fltol@f1& (0+255),f,b
 28395                           
 28396                           ; BSR set to: 0
 28397  00B316  3E41               	incfsz	___fltol@exp1^0,f,c
 28398  00B318  D7F9               	goto	l31371
 28399  00B31A  D00D               	goto	u39320
 28400  00B31C                     l31375:
 28401                           
 28402                           ; BSR set to: 0
 28403  00B31C  0E1F               	movlw	31
 28404  00B31E  6441               	cpfsgt	___fltol@exp1^0,c
 28405  00B320  D007               	goto	l31383
 28406  00B322  D7C6               	goto	u39270
 28407  00B324                     l31381:
 28408                           
 28409                           ; BSR set to: 0
 28410  00B324  90D8               	bcf	status,0,c
 28411  00B326  377D               	rlcf	___fltol@f1& (0+255),f,b
 28412  00B328  377E               	rlcf	(___fltol@f1+1)& (0+255),f,b
 28413  00B32A  377F               	rlcf	(___fltol@f1+2)& (0+255),f,b
 28414  00B32C  3780               	rlcf	(___fltol@f1+3)& (0+255),f,b
 28415  00B32E  0641               	decf	___fltol@exp1^0,f,c
 28416  00B330                     l31383:
 28417                           
 28418                           ; BSR set to: 0
 28419  00B330  5041               	movf	___fltol@exp1^0,w,c
 28420  00B332  A4D8               	btfss	status,2,c
 28421  00B334  D7F7               	goto	l31381
 28422  00B336                     u39320:
 28423                           
 28424                           ; BSR set to: 0
 28425  00B336  5040               	movf	___fltol@sign1^0,w,c
 28426  00B338  B4D8               	btfsc	status,2,c
 28427  00B33A  D008               	goto	l31389
 28428                           
 28429                           ; BSR set to: 0
 28430  00B33C  1F80               	comf	(___fltol@f1+3)& (0+255),f,b
 28431  00B33E  1F7F               	comf	(___fltol@f1+2)& (0+255),f,b
 28432  00B340  1F7E               	comf	(___fltol@f1+1)& (0+255),f,b
 28433  00B342  6D7D               	negf	___fltol@f1& (0+255),b
 28434  00B344  0E00               	movlw	0
 28435  00B346  237E               	addwfc	(___fltol@f1+1)& (0+255),f,b
 28436  00B348  237F               	addwfc	(___fltol@f1+2)& (0+255),f,b
 28437  00B34A  2380               	addwfc	(___fltol@f1+3)& (0+255),f,b
 28438  00B34C                     l31389:
 28439                           
 28440                           ; BSR set to: 0
 28441  00B34C  C07D  F07D         	movff	___fltol@f1,?___fltol
 28442  00B350  C07E  F07E         	movff	___fltol@f1+1,?___fltol+1
 28443  00B354  C07F  F07F         	movff	___fltol@f1+2,?___fltol+2
 28444  00B358  C080  F080         	movff	___fltol@f1+3,?___fltol+3
 28445                           
 28446                           ; BSR set to: 0
 28447  00B35C  0012               	return		;funcret
 28448  00B35E                     __end_of___fltol:
 28449                           	callstack 0
 28450                           
 28451 ;; *************** function ___flsub *****************
 28452 ;; Defined at:
 28453 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 28454 ;; Parameters:    Size  Location     Type
 28455 ;;  b               4    0[BANK0 ] long 
 28456 ;;  a               4    4[BANK0 ] long 
 28457 ;; Auto vars:     Size  Location     Type
 28458 ;;		None
 28459 ;; Return value:  Size  Location     Type
 28460 ;;                  4    0[BANK0 ] long 
 28461 ;; Registers used:
 28462 ;;		wreg, status,2, status,0, cstack
 28463 ;; Tracked objects:
 28464 ;;		On entry : 0/0
 28465 ;;		On exit  : 0/0
 28466 ;;		Unchanged: 0/0
 28467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28468 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28471 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28472 ;;Total ram usage:        8 bytes
 28473 ;; Hardware stack levels used: 1
 28474 ;; Hardware stack levels required when called: 5
 28475 ;; This function calls:
 28476 ;;		___fladd
 28477 ;; This function is called by:
 28478 ;;		_update_command
 28479 ;;		_display_sensor_value
 28480 ;;		_build_response
 28481 ;;		_gasSensor_calib
 28482 ;;		_ewmaFilter_get
 28483 ;;		_Kalman_updateEstimate
 28484 ;;		_sprintf
 28485 ;; This function uses a non-reentrant model
 28486 ;;
 28487                           
 28488                           	psect	text126
 28489  00D036                     __ptext126:
 28490                           	callstack 0
 28491  00D036                     ___flsub:
 28492                           	callstack 22
 28493                           
 28494                           ; BSR set to: 0
 28495                           ;incstack = 0
 28496  00D036  0E00               	movlw	0
 28497  00D038  0100               	movlb	0	; () banked
 28498  00D03A  1B64               	xorwf	___flsub@a& (0+255),f,b
 28499  00D03C  0E00               	movlw	0
 28500  00D03E  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
 28501  00D040  0E00               	movlw	0
 28502  00D042  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
 28503  00D044  0E80               	movlw	128
 28504  00D046  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
 28505                           
 28506                           ; BSR set to: 0
 28507  00D048  C060  F028         	movff	___flsub@b,___fladd@b
 28508  00D04C  C061  F029         	movff	___flsub@b+1,___fladd@b+1
 28509  00D050  C062  F02A         	movff	___flsub@b+2,___fladd@b+2
 28510  00D054  C063  F02B         	movff	___flsub@b+3,___fladd@b+3
 28511  00D058  C064  F02C         	movff	___flsub@a,___fladd@a
 28512  00D05C  C065  F02D         	movff	___flsub@a+1,___fladd@a+1
 28513  00D060  C066  F02E         	movff	___flsub@a+2,___fladd@a+2
 28514  00D064  C067  F02F         	movff	___flsub@a+3,___fladd@a+3
 28515  00D068  ECBF  F031         	call	___fladd	;wreg free
 28516  00D06C  C028  F060         	movff	?___fladd,?___flsub
 28517  00D070  C029  F061         	movff	?___fladd+1,?___flsub+1
 28518  00D074  C02A  F062         	movff	?___fladd+2,?___flsub+2
 28519  00D078  C02B  F063         	movff	?___fladd+3,?___flsub+3
 28520  00D07C  0012               	return		;funcret
 28521  00D07E                     __end_of___flsub:
 28522                           	callstack 0
 28523                           
 28524 ;; *************** function ___fladd *****************
 28525 ;; Defined at:
 28526 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 28527 ;; Parameters:    Size  Location     Type
 28528 ;;  b               4   39[COMRAM] long 
 28529 ;;  a               4   43[COMRAM] long 
 28530 ;; Auto vars:     Size  Location     Type
 28531 ;;  grs             1   54[COMRAM] unsigned char 
 28532 ;;  bexp            1   53[COMRAM] unsigned char 
 28533 ;;  aexp            1   52[COMRAM] unsigned char 
 28534 ;;  signs           1   51[COMRAM] unsigned char 
 28535 ;; Return value:  Size  Location     Type
 28536 ;;                  4   39[COMRAM] unsigned char 
 28537 ;; Registers used:
 28538 ;;		wreg, status,2, status,0
 28539 ;; Tracked objects:
 28540 ;;		On entry : 0/0
 28541 ;;		On exit  : 0/0
 28542 ;;		Unchanged: 0/0
 28543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28544 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28545 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28546 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28547 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28548 ;;Total ram usage:       16 bytes
 28549 ;; Hardware stack levels used: 1
 28550 ;; Hardware stack levels required when called: 4
 28551 ;; This function calls:
 28552 ;;		Nothing
 28553 ;; This function is called by:
 28554 ;;		_sensMeasure_temp_read
 28555 ;;		_sensMeasure_task
 28556 ;;		_sensor_temp_fahrenheit
 28557 ;;		_compensate_temperature
 28558 ;;		_gasSensor_temperature
 28559 ;;		_ewmaFilter_get
 28560 ;;		_Kalman_updateEstimate
 28561 ;;		__atof
 28562 ;;		_sprintf
 28563 ;;		___flsub
 28564 ;; This function uses a non-reentrant model
 28565 ;;
 28566                           
 28567                           	psect	text127
 28568  00637E                     __ptext127:
 28569                           	callstack 0
 28570  00637E                     ___fladd:
 28571                           	callstack 23
 28572                           
 28573                           ;incstack = 0
 28574  00637E  502B               	movf	(___fladd@b+3)^0,w,c
 28575  006380  0B80               	andlw	128
 28576  006382  6E34               	movwf	___fladd@signs^0,c
 28577  006384  502B               	movf	(___fladd@b+3)^0,w,c
 28578  006386  242B               	addwf	(___fladd@b+3)^0,w,c
 28579  006388  6E36               	movwf	___fladd@bexp^0,c
 28580  00638A  BE2A               	btfsc	(___fladd@b+2)^0,7,c
 28581  00638C  8036               	bsf	___fladd@bexp^0,0,c
 28582  00638E  5036               	movf	___fladd@bexp^0,w,c
 28583  006390  B4D8               	btfsc	status,2,c
 28584  006392  D00D               	goto	l30565
 28585  006394  2836               	incf	___fladd@bexp^0,w,c
 28586  006396  A4D8               	btfss	status,2,c
 28587  006398  D008               	goto	l30561
 28588  00639A  0E00               	movlw	0
 28589  00639C  6E28               	movwf	___fladd@b^0,c
 28590  00639E  0E00               	movlw	0
 28591  0063A0  6E29               	movwf	(___fladd@b+1)^0,c
 28592  0063A2  0E00               	movlw	0
 28593  0063A4  6E2A               	movwf	(___fladd@b+2)^0,c
 28594  0063A6  0E00               	movlw	0
 28595  0063A8  6E2B               	movwf	(___fladd@b+3)^0,c
 28596  0063AA                     l30561:
 28597  0063AA  8E2A               	bsf	(___fladd@b+2)^0,7,c
 28598  0063AC  D006               	goto	L72
 28599  0063AE                     l30565:
 28600  0063AE  0E00               	movlw	0
 28601  0063B0  6E28               	movwf	___fladd@b^0,c
 28602  0063B2  0E00               	movlw	0
 28603  0063B4  6E29               	movwf	(___fladd@b+1)^0,c
 28604  0063B6  0E00               	movlw	0
 28605  0063B8  6E2A               	movwf	(___fladd@b+2)^0,c
 28606  0063BA                     L72:
 28607  0063BA  0E00               	movlw	0
 28608  0063BC  6E2B               	movwf	(___fladd@b+3)^0,c
 28609  0063BE  502F               	movf	(___fladd@a+3)^0,w,c
 28610  0063C0  0B80               	andlw	128
 28611  0063C2  6E35               	movwf	___fladd@aexp^0,c
 28612  0063C4  5034               	movf	___fladd@signs^0,w,c
 28613  0063C6  1835               	xorwf	___fladd@aexp^0,w,c
 28614  0063C8  A4D8               	btfss	status,2,c
 28615  0063CA  8C34               	bsf	___fladd@signs^0,6,c
 28616  0063CC  502F               	movf	(___fladd@a+3)^0,w,c
 28617  0063CE  242F               	addwf	(___fladd@a+3)^0,w,c
 28618  0063D0  6E35               	movwf	___fladd@aexp^0,c
 28619  0063D2  BE2E               	btfsc	(___fladd@a+2)^0,7,c
 28620  0063D4  8035               	bsf	___fladd@aexp^0,0,c
 28621  0063D6  5035               	movf	___fladd@aexp^0,w,c
 28622  0063D8  B4D8               	btfsc	status,2,c
 28623  0063DA  D00D               	goto	l30589
 28624  0063DC  2835               	incf	___fladd@aexp^0,w,c
 28625  0063DE  A4D8               	btfss	status,2,c
 28626  0063E0  D008               	goto	l30585
 28627  0063E2  0E00               	movlw	0
 28628  0063E4  6E2C               	movwf	___fladd@a^0,c
 28629  0063E6  0E00               	movlw	0
 28630  0063E8  6E2D               	movwf	(___fladd@a+1)^0,c
 28631  0063EA  0E00               	movlw	0
 28632  0063EC  6E2E               	movwf	(___fladd@a+2)^0,c
 28633  0063EE  0E00               	movlw	0
 28634  0063F0  6E2F               	movwf	(___fladd@a+3)^0,c
 28635  0063F2                     l30585:
 28636  0063F2  8E2E               	bsf	(___fladd@a+2)^0,7,c
 28637  0063F4  D006               	goto	L73
 28638  0063F6                     l30589:
 28639  0063F6  0E00               	movlw	0
 28640  0063F8  6E2C               	movwf	___fladd@a^0,c
 28641  0063FA  0E00               	movlw	0
 28642  0063FC  6E2D               	movwf	(___fladd@a+1)^0,c
 28643  0063FE  0E00               	movlw	0
 28644  006400  6E2E               	movwf	(___fladd@a+2)^0,c
 28645  006402                     L73:
 28646  006402  0E00               	movlw	0
 28647  006404  6E2F               	movwf	(___fladd@a+3)^0,c
 28648  006406  5036               	movf	___fladd@bexp^0,w,c
 28649  006408  5C35               	subwf	___fladd@aexp^0,w,c
 28650  00640A  B0D8               	btfsc	status,0,c
 28651  00640C  D022               	goto	l30627
 28652  00640E  AC34               	btfss	___fladd@signs^0,6,c
 28653  006410  D002               	goto	l30597
 28654  006412  0E80               	movlw	128
 28655  006414  1A34               	xorwf	___fladd@signs^0,f,c
 28656  006416                     l30597:
 28657  006416  C036  F037         	movff	___fladd@bexp,___fladd@grs
 28658  00641A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
 28659  00641E  C037  F035         	movff	___fladd@grs,___fladd@aexp
 28660  006422  C028  F037         	movff	___fladd@b,___fladd@grs
 28661  006426  C02C  F028         	movff	___fladd@a,___fladd@b
 28662  00642A  C037  F02C         	movff	___fladd@grs,___fladd@a
 28663  00642E  C029  F037         	movff	___fladd@b+1,___fladd@grs
 28664  006432  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
 28665  006436  C037  F02D         	movff	___fladd@grs,___fladd@a+1
 28666  00643A  C02A  F037         	movff	___fladd@b+2,___fladd@grs
 28667  00643E  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
 28668  006442  C037  F02E         	movff	___fladd@grs,___fladd@a+2
 28669  006446  C02B  F037         	movff	___fladd@b+3,___fladd@grs
 28670  00644A  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
 28671  00644E  C037  F02F         	movff	___fladd@grs,___fladd@a+3
 28672  006452                     l30627:
 28673  006452  0E00               	movlw	0
 28674  006454  6E37               	movwf	___fladd@grs^0,c
 28675  006456  5036               	movf	___fladd@bexp^0,w,c
 28676  006458  C035  F030         	movff	___fladd@aexp,??___fladd
 28677  00645C  6A31               	clrf	(??___fladd+1)^0,c
 28678  00645E  5E30               	subwf	??___fladd^0,f,c
 28679  006460  0E00               	movlw	0
 28680  006462  5A31               	subwfb	(??___fladd+1)^0,f,c
 28681  006464  BE31               	btfsc	(??___fladd+1)^0,7,c
 28682  006466  D02C               	goto	l3354
 28683  006468  5031               	movf	(??___fladd+1)^0,w,c
 28684  00646A  E104               	bnz	u38160
 28685  00646C  0E1A               	movlw	26
 28686  00646E  5C30               	subwf	??___fladd^0,w,c
 28687  006470  A0D8               	btfss	status,0,c
 28688  006472  D026               	goto	l3354
 28689  006474                     u38160:
 28690  006474  5028               	movf	___fladd@b^0,w,c
 28691  006476  1029               	iorwf	(___fladd@b+1)^0,w,c
 28692  006478  102A               	iorwf	(___fladd@b+2)^0,w,c
 28693  00647A  102B               	iorwf	(___fladd@b+3)^0,w,c
 28694  00647C  B4D8               	btfsc	status,2,c
 28695  00647E  D002               	goto	u38170
 28696  006480  0E01               	movlw	1
 28697  006482  D001               	goto	u38180
 28698  006484                     u38170:
 28699  006484  0E00               	movlw	0
 28700  006486                     u38180:
 28701  006486  6E37               	movwf	___fladd@grs^0,c
 28702  006488  0E00               	movlw	0
 28703  00648A  6E28               	movwf	___fladd@b^0,c
 28704  00648C  0E00               	movlw	0
 28705  00648E  6E29               	movwf	(___fladd@b+1)^0,c
 28706  006490  0E00               	movlw	0
 28707  006492  6E2A               	movwf	(___fladd@b+2)^0,c
 28708  006494  0E00               	movlw	0
 28709  006496  6E2B               	movwf	(___fladd@b+3)^0,c
 28710  006498  C035  F036         	movff	___fladd@aexp,___fladd@bexp
 28711  00649C  D015               	goto	u38210
 28712  00649E                     l3355:
 28713  00649E  A037               	btfss	___fladd@grs^0,0,c
 28714  0064A0  D005               	goto	l30639
 28715  0064A2  90D8               	bcf	status,0,c
 28716  0064A4  3037               	rrcf	___fladd@grs^0,w,c
 28717  0064A6  0901               	iorlw	1
 28718  0064A8  6E37               	movwf	___fladd@grs^0,c
 28719  0064AA  D002               	goto	l30641
 28720  0064AC                     l30639:
 28721  0064AC  90D8               	bcf	status,0,c
 28722  0064AE  3237               	rrcf	___fladd@grs^0,f,c
 28723  0064B0                     l30641:
 28724  0064B0  B028               	btfsc	___fladd@b^0,0,c
 28725  0064B2  8E37               	bsf	___fladd@grs^0,7,c
 28726  0064B4  342B               	rlcf	(___fladd@b+3)^0,w,c
 28727  0064B6  322B               	rrcf	(___fladd@b+3)^0,f,c
 28728  0064B8  322A               	rrcf	(___fladd@b+2)^0,f,c
 28729  0064BA  3229               	rrcf	(___fladd@b+1)^0,f,c
 28730  0064BC  3228               	rrcf	___fladd@b^0,f,c
 28731  0064BE  2A36               	incf	___fladd@bexp^0,f,c
 28732  0064C0                     l3354:
 28733  0064C0  5035               	movf	___fladd@aexp^0,w,c
 28734  0064C2  5C36               	subwf	___fladd@bexp^0,w,c
 28735  0064C4  A0D8               	btfss	status,0,c
 28736  0064C6  D7EB               	goto	l3355
 28737  0064C8                     u38210:
 28738  0064C8  BC34               	btfsc	___fladd@signs^0,6,c
 28739  0064CA  D028               	goto	l30673
 28740  0064CC  5036               	movf	___fladd@bexp^0,w,c
 28741  0064CE  A4D8               	btfss	status,2,c
 28742  0064D0  D009               	goto	l30655
 28743  0064D2  0E00               	movlw	0
 28744  0064D4  6E28               	movwf	?___fladd^0,c
 28745  0064D6  0E00               	movlw	0
 28746  0064D8  6E29               	movwf	(?___fladd+1)^0,c
 28747  0064DA  0E00               	movlw	0
 28748  0064DC  6E2A               	movwf	(?___fladd+2)^0,c
 28749  0064DE  0E00               	movlw	0
 28750  0064E0  6E2B               	movwf	(?___fladd+3)^0,c
 28751  0064E2  0012               	return	
 28752  0064E4                     l30655:
 28753  0064E4  502C               	movf	___fladd@a^0,w,c
 28754  0064E6  2628               	addwf	___fladd@b^0,f,c
 28755  0064E8  502D               	movf	(___fladd@a+1)^0,w,c
 28756  0064EA  2229               	addwfc	(___fladd@b+1)^0,f,c
 28757  0064EC  502E               	movf	(___fladd@a+2)^0,w,c
 28758  0064EE  222A               	addwfc	(___fladd@b+2)^0,f,c
 28759  0064F0  502F               	movf	(___fladd@a+3)^0,w,c
 28760  0064F2  222B               	addwfc	(___fladd@b+3)^0,f,c
 28761  0064F4  A02B               	btfss	(___fladd@b+3)^0,0,c
 28762  0064F6  D071               	goto	u38340
 28763  0064F8  A037               	btfss	___fladd@grs^0,0,c
 28764  0064FA  D005               	goto	l30663
 28765  0064FC  90D8               	bcf	status,0,c
 28766  0064FE  3037               	rrcf	___fladd@grs^0,w,c
 28767  006500  0901               	iorlw	1
 28768  006502  6E37               	movwf	___fladd@grs^0,c
 28769  006504  D002               	goto	l30665
 28770  006506                     l30663:
 28771  006506  90D8               	bcf	status,0,c
 28772  006508  3237               	rrcf	___fladd@grs^0,f,c
 28773  00650A                     l30665:
 28774  00650A  B028               	btfsc	___fladd@b^0,0,c
 28775  00650C  8E37               	bsf	___fladd@grs^0,7,c
 28776  00650E  342B               	rlcf	(___fladd@b+3)^0,w,c
 28777  006510  322B               	rrcf	(___fladd@b+3)^0,f,c
 28778  006512  322A               	rrcf	(___fladd@b+2)^0,f,c
 28779  006514  3229               	rrcf	(___fladd@b+1)^0,f,c
 28780  006516  3228               	rrcf	___fladd@b^0,f,c
 28781  006518  2A36               	incf	___fladd@bexp^0,f,c
 28782  00651A  D05F               	goto	u38340
 28783  00651C                     l30673:
 28784  00651C  502C               	movf	___fladd@a^0,w,c
 28785  00651E  5C28               	subwf	___fladd@b^0,w,c
 28786  006520  502D               	movf	(___fladd@a+1)^0,w,c
 28787  006522  5829               	subwfb	(___fladd@b+1)^0,w,c
 28788  006524  502E               	movf	(___fladd@a+2)^0,w,c
 28789  006526  582A               	subwfb	(___fladd@b+2)^0,w,c
 28790  006528  502B               	movf	(___fladd@b+3)^0,w,c
 28791  00652A  0A80               	xorlw	128
 28792  00652C  6E30               	movwf	??___fladd^0,c
 28793  00652E  502F               	movf	(___fladd@a+3)^0,w,c
 28794  006530  0A80               	xorlw	128
 28795  006532  5830               	subwfb	??___fladd^0,w,c
 28796  006534  B0D8               	btfsc	status,0,c
 28797  006536  D025               	goto	l30683
 28798  006538  5028               	movf	___fladd@b^0,w,c
 28799  00653A  5C2C               	subwf	___fladd@a^0,w,c
 28800  00653C  6E30               	movwf	??___fladd^0,c
 28801  00653E  5029               	movf	(___fladd@b+1)^0,w,c
 28802  006540  582D               	subwfb	(___fladd@a+1)^0,w,c
 28803  006542  6E31               	movwf	(??___fladd+1)^0,c
 28804  006544  502A               	movf	(___fladd@b+2)^0,w,c
 28805  006546  582E               	subwfb	(___fladd@a+2)^0,w,c
 28806  006548  6E32               	movwf	(??___fladd+2)^0,c
 28807  00654A  502B               	movf	(___fladd@b+3)^0,w,c
 28808  00654C  582F               	subwfb	(___fladd@a+3)^0,w,c
 28809  00654E  6E33               	movwf	(??___fladd+3)^0,c
 28810  006550  0EFF               	movlw	255
 28811  006552  2430               	addwf	??___fladd^0,w,c
 28812  006554  6E28               	movwf	___fladd@b^0,c
 28813  006556  0EFF               	movlw	255
 28814  006558  2031               	addwfc	(??___fladd+1)^0,w,c
 28815  00655A  6E29               	movwf	(___fladd@b+1)^0,c
 28816  00655C  0EFF               	movlw	255
 28817  00655E  2032               	addwfc	(??___fladd+2)^0,w,c
 28818  006560  6E2A               	movwf	(___fladd@b+2)^0,c
 28819  006562  0EFF               	movlw	255
 28820  006564  2033               	addwfc	(??___fladd+3)^0,w,c
 28821  006566  6E2B               	movwf	(___fladd@b+3)^0,c
 28822  006568  0E80               	movlw	128
 28823  00656A  1A34               	xorwf	___fladd@signs^0,f,c
 28824  00656C  6C37               	negf	___fladd@grs^0,c
 28825  00656E  5037               	movf	___fladd@grs^0,w,c
 28826  006570  A4D8               	btfss	status,2,c
 28827  006572  D00F               	goto	l3370
 28828  006574  0E01               	movlw	1
 28829  006576  2628               	addwf	___fladd@b^0,f,c
 28830  006578  0E00               	movlw	0
 28831  00657A  2229               	addwfc	(___fladd@b+1)^0,f,c
 28832  00657C  222A               	addwfc	(___fladd@b+2)^0,f,c
 28833  00657E  222B               	addwfc	(___fladd@b+3)^0,f,c
 28834  006580  D008               	goto	l3370
 28835  006582                     l30683:
 28836  006582  502C               	movf	___fladd@a^0,w,c
 28837  006584  5E28               	subwf	___fladd@b^0,f,c
 28838  006586  502D               	movf	(___fladd@a+1)^0,w,c
 28839  006588  5A29               	subwfb	(___fladd@b+1)^0,f,c
 28840  00658A  502E               	movf	(___fladd@a+2)^0,w,c
 28841  00658C  5A2A               	subwfb	(___fladd@b+2)^0,f,c
 28842  00658E  502F               	movf	(___fladd@a+3)^0,w,c
 28843  006590  5A2B               	subwfb	(___fladd@b+3)^0,f,c
 28844  006592                     l3370:
 28845  006592  5028               	movf	___fladd@b^0,w,c
 28846  006594  1029               	iorwf	(___fladd@b+1)^0,w,c
 28847  006596  102A               	iorwf	(___fladd@b+2)^0,w,c
 28848  006598  102B               	iorwf	(___fladd@b+3)^0,w,c
 28849  00659A  A4D8               	btfss	status,2,c
 28850  00659C  D01C               	goto	l30707
 28851  00659E  5037               	movf	___fladd@grs^0,w,c
 28852  0065A0  A4D8               	btfss	status,2,c
 28853  0065A2  D019               	goto	l30707
 28854  0065A4  0E00               	movlw	0
 28855  0065A6  6E28               	movwf	?___fladd^0,c
 28856  0065A8  0E00               	movlw	0
 28857  0065AA  6E29               	movwf	(?___fladd+1)^0,c
 28858  0065AC  0E00               	movlw	0
 28859  0065AE  6E2A               	movwf	(?___fladd+2)^0,c
 28860  0065B0  0E00               	movlw	0
 28861  0065B2  6E2B               	movwf	(?___fladd+3)^0,c
 28862  0065B4  0012               	return	
 28863  0065B6                     l30691:
 28864  0065B6  90D8               	bcf	status,0,c
 28865  0065B8  3628               	rlcf	___fladd@b^0,f,c
 28866  0065BA  3629               	rlcf	(___fladd@b+1)^0,f,c
 28867  0065BC  362A               	rlcf	(___fladd@b+2)^0,f,c
 28868  0065BE  362B               	rlcf	(___fladd@b+3)^0,f,c
 28869  0065C0  BE37               	btfsc	___fladd@grs^0,7,c
 28870  0065C2  8028               	bsf	___fladd@b^0,0,c
 28871  0065C4  A037               	btfss	___fladd@grs^0,0,c
 28872  0065C6  D002               	goto	l30701
 28873  0065C8  80D8               	bsf	status,0,c
 28874  0065CA  D001               	goto	L74
 28875  0065CC                     l30701:
 28876  0065CC  90D8               	bcf	status,0,c
 28877  0065CE                     L74:
 28878  0065CE  3637               	rlcf	___fladd@grs^0,f,c
 28879  0065D0  5036               	movf	___fladd@bexp^0,w,c
 28880  0065D2  A4D8               	btfss	status,2,c
 28881  0065D4  0636               	decf	___fladd@bexp^0,f,c
 28882  0065D6                     l30707:
 28883  0065D6  AE2A               	btfss	(___fladd@b+2)^0,7,c
 28884  0065D8  D7EE               	goto	l30691
 28885  0065DA                     u38340:
 28886  0065DA  0E00               	movlw	0
 28887  0065DC  6E35               	movwf	___fladd@aexp^0,c
 28888  0065DE  AE37               	btfss	___fladd@grs^0,7,c
 28889  0065E0  D00B               	goto	l3379
 28890  0065E2  C037  F030         	movff	___fladd@grs,??___fladd
 28891  0065E6  0E7F               	movlw	127
 28892  0065E8  1630               	andwf	??___fladd^0,f,c
 28893  0065EA  B4D8               	btfsc	status,2,c
 28894  0065EC  D003               	goto	l3380
 28895  0065EE                     u38360:
 28896  0065EE  0E01               	movlw	1
 28897  0065F0  6E35               	movwf	___fladd@aexp^0,c
 28898  0065F2  D002               	goto	l3379
 28899  0065F4                     l3380:
 28900  0065F4  B028               	btfsc	___fladd@b^0,0,c
 28901  0065F6  D7FB               	goto	u38360
 28902  0065F8                     l3379:
 28903  0065F8  5035               	movf	___fladd@aexp^0,w,c
 28904  0065FA  B4D8               	btfsc	status,2,c
 28905  0065FC  D020               	goto	l30727
 28906  0065FE  0E01               	movlw	1
 28907  006600  2628               	addwf	___fladd@b^0,f,c
 28908  006602  0E00               	movlw	0
 28909  006604  2229               	addwfc	(___fladd@b+1)^0,f,c
 28910  006606  222A               	addwfc	(___fladd@b+2)^0,f,c
 28911  006608  222B               	addwfc	(___fladd@b+3)^0,f,c
 28912  00660A  A02B               	btfss	(___fladd@b+3)^0,0,c
 28913  00660C  D018               	goto	l30727
 28914  00660E  C028  F030         	movff	___fladd@b,??___fladd
 28915  006612  C029  F031         	movff	___fladd@b+1,??___fladd+1
 28916  006616  C02A  F032         	movff	___fladd@b+2,??___fladd+2
 28917  00661A  C02B  F033         	movff	___fladd@b+3,??___fladd+3
 28918  00661E  3433               	rlcf	(??___fladd+3)^0,w,c
 28919  006620  3233               	rrcf	(??___fladd+3)^0,f,c
 28920  006622  3232               	rrcf	(??___fladd+2)^0,f,c
 28921  006624  3231               	rrcf	(??___fladd+1)^0,f,c
 28922  006626  3230               	rrcf	??___fladd^0,f,c
 28923  006628  C030  F028         	movff	??___fladd,___fladd@b
 28924  00662C  C031  F029         	movff	??___fladd+1,___fladd@b+1
 28925  006630  C032  F02A         	movff	??___fladd+2,___fladd@b+2
 28926  006634  C033  F02B         	movff	??___fladd+3,___fladd@b+3
 28927  006638  2836               	incf	___fladd@bexp^0,w,c
 28928  00663A  A4D8               	btfss	status,2,c
 28929  00663C  2A36               	incf	___fladd@bexp^0,f,c
 28930  00663E                     l30727:
 28931  00663E  2836               	incf	___fladd@bexp^0,w,c
 28932  006640  B4D8               	btfsc	status,2,c
 28933  006642  D003               	goto	u38420
 28934  006644  5036               	movf	___fladd@bexp^0,w,c
 28935  006646  A4D8               	btfss	status,2,c
 28936  006648  D00D               	goto	l30735
 28937  00664A                     u38420:
 28938  00664A  0E00               	movlw	0
 28939  00664C  6E28               	movwf	___fladd@b^0,c
 28940  00664E  0E00               	movlw	0
 28941  006650  6E29               	movwf	(___fladd@b+1)^0,c
 28942  006652  0E00               	movlw	0
 28943  006654  6E2A               	movwf	(___fladd@b+2)^0,c
 28944  006656  0E00               	movlw	0
 28945  006658  6E2B               	movwf	(___fladd@b+3)^0,c
 28946  00665A  5036               	movf	___fladd@bexp^0,w,c
 28947  00665C  A4D8               	btfss	status,2,c
 28948  00665E  D002               	goto	l30735
 28949  006660  0E00               	movlw	0
 28950  006662  6E34               	movwf	___fladd@signs^0,c
 28951  006664                     l30735:
 28952  006664  A036               	btfss	___fladd@bexp^0,0,c
 28953  006666  D002               	goto	l30739
 28954  006668  8E2A               	bsf	(___fladd@b+2)^0,7,c
 28955  00666A  D001               	goto	l30741
 28956  00666C                     l30739:
 28957  00666C  9E2A               	bcf	(___fladd@b+2)^0,7,c
 28958  00666E                     l30741:
 28959  00666E  90D8               	bcf	status,0,c
 28960  006670  3036               	rrcf	___fladd@bexp^0,w,c
 28961  006672  6E2B               	movwf	(___fladd@b+3)^0,c
 28962  006674  BE34               	btfsc	___fladd@signs^0,7,c
 28963  006676  8E2B               	bsf	(___fladd@b+3)^0,7,c
 28964  006678  C028  F028         	movff	___fladd@b,?___fladd
 28965  00667C  C029  F029         	movff	___fladd@b+1,?___fladd+1
 28966  006680  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
 28967  006684  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
 28968  006688  0012               	return		;funcret
 28969  00668A                     __end_of___fladd:
 28970                           	callstack 0
 28971                           
 28972 ;; *************** function ___flneg *****************
 28973 ;; Defined at:
 28974 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
 28975 ;; Parameters:    Size  Location     Type
 28976 ;;  f1              4   14[COMRAM] unsigned char 
 28977 ;; Auto vars:     Size  Location     Type
 28978 ;;		None
 28979 ;; Return value:  Size  Location     Type
 28980 ;;                  4   14[COMRAM] unsigned char 
 28981 ;; Registers used:
 28982 ;;		wreg, status,2, status,0
 28983 ;; Tracked objects:
 28984 ;;		On entry : 3F/0
 28985 ;;		On exit  : 3F/0
 28986 ;;		Unchanged: 3F/0
 28987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28992 ;;Total ram usage:        4 bytes
 28993 ;; Hardware stack levels used: 1
 28994 ;; Hardware stack levels required when called: 4
 28995 ;; This function calls:
 28996 ;;		Nothing
 28997 ;; This function is called by:
 28998 ;;		_sprintf
 28999 ;;		_fabs
 29000 ;; This function uses a non-reentrant model
 29001 ;;
 29002                           
 29003                           	psect	text128
 29004  00D8CA                     __ptext128:
 29005                           	callstack 0
 29006  00D8CA                     ___flneg:
 29007                           	callstack 22
 29008                           
 29009                           ; BSR set to: 0
 29010                           
 29011                           ;incstack = 0
 29012  00D8CA  500F               	movf	___flneg@f1^0,w,c
 29013  00D8CC  1010               	iorwf	(___flneg@f1+1)^0,w,c
 29014  00D8CE  1011               	iorwf	(___flneg@f1+2)^0,w,c
 29015  00D8D0  1012               	iorwf	(___flneg@f1+3)^0,w,c
 29016  00D8D2  B4D8               	btfsc	status,2,c
 29017  00D8D4  D008               	goto	l31345
 29018                           
 29019                           ; BSR set to: 0
 29020  00D8D6  0E00               	movlw	0
 29021  00D8D8  1A0F               	xorwf	___flneg@f1^0,f,c
 29022  00D8DA  0E00               	movlw	0
 29023  00D8DC  1A10               	xorwf	(___flneg@f1+1)^0,f,c
 29024  00D8DE  0E00               	movlw	0
 29025  00D8E0  1A11               	xorwf	(___flneg@f1+2)^0,f,c
 29026  00D8E2  0E80               	movlw	128
 29027  00D8E4  1A12               	xorwf	(___flneg@f1+3)^0,f,c
 29028  00D8E6                     l31345:
 29029                           
 29030                           ; BSR set to: 0
 29031  00D8E6  C00F  F00F         	movff	___flneg@f1,?___flneg
 29032  00D8EA  C010  F010         	movff	___flneg@f1+1,?___flneg+1
 29033  00D8EE  C011  F011         	movff	___flneg@f1+2,?___flneg+2
 29034  00D8F2  C012  F012         	movff	___flneg@f1+3,?___flneg+3
 29035                           
 29036                           ; BSR set to: 0
 29037  00D8F6  0012               	return		;funcret
 29038  00D8F8                     __end_of___flneg:
 29039                           	callstack 0
 29040                           
 29041 ;; *************** function ___flge *****************
 29042 ;; Defined at:
 29043 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 29044 ;; Parameters:    Size  Location     Type
 29045 ;;  ff1             4   49[BANK0 ] unsigned char 
 29046 ;;  ff2             4   53[BANK0 ] unsigned char 
 29047 ;; Auto vars:     Size  Location     Type
 29048 ;;		None
 29049 ;; Return value:  Size  Location     Type
 29050 ;;		None               void
 29051 ;; Registers used:
 29052 ;;		wreg, status,2, status,0
 29053 ;; Tracked objects:
 29054 ;;		On entry : 3F/0
 29055 ;;		On exit  : 3F/0
 29056 ;;		Unchanged: 0/0
 29057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29058 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29060 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29061 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29062 ;;Total ram usage:       12 bytes
 29063 ;; Hardware stack levels used: 1
 29064 ;; Hardware stack levels required when called: 4
 29065 ;; This function calls:
 29066 ;;		Nothing
 29067 ;; This function is called by:
 29068 ;;		_update_command
 29069 ;;		_modbus_check_threshold
 29070 ;;		_gasSensor_filter
 29071 ;;		_compensate_temperature
 29072 ;;		_gasSensor_calib
 29073 ;;		_sprintf
 29074 ;; This function uses a non-reentrant model
 29075 ;;
 29076                           
 29077                           	psect	text129
 29078  00AC62                     __ptext129:
 29079                           	callstack 0
 29080  00AC62                     ___flge:
 29081                           	callstack 22
 29082                           
 29083                           ; BSR set to: 0
 29084                           
 29085                           ; BSR set to: 0
 29086                           ;incstack = 0
 29087  00AC62  0E00               	movlw	0
 29088  00AC64  1591               	andwf	___flge@ff1& (0+255),w,b
 29089  00AC66  6F99               	movwf	??___flge& (0+255),b
 29090  00AC68  0E00               	movlw	0
 29091  00AC6A  1592               	andwf	(___flge@ff1+1)& (0+255),w,b
 29092  00AC6C  6F9A               	movwf	(??___flge+1)& (0+255),b
 29093  00AC6E  0E80               	movlw	128
 29094  00AC70  1593               	andwf	(___flge@ff1+2)& (0+255),w,b
 29095  00AC72  6F9B               	movwf	(??___flge+2)& (0+255),b
 29096  00AC74  0E7F               	movlw	127
 29097  00AC76  1594               	andwf	(___flge@ff1+3)& (0+255),w,b
 29098  00AC78  6F9C               	movwf	(??___flge+3)& (0+255),b
 29099  00AC7A  5199               	movf	??___flge& (0+255),w,b
 29100  00AC7C  119A               	iorwf	(??___flge+1)& (0+255),w,b
 29101  00AC7E  119B               	iorwf	(??___flge+2)& (0+255),w,b
 29102  00AC80  119C               	iorwf	(??___flge+3)& (0+255),w,b
 29103  00AC82  A4D8               	btfss	status,2,c
 29104  00AC84  D008               	goto	l31323
 29105                           
 29106                           ; BSR set to: 0
 29107  00AC86  0E00               	movlw	0
 29108  00AC88  6F91               	movwf	___flge@ff1& (0+255),b
 29109  00AC8A  0E00               	movlw	0
 29110  00AC8C  6F92               	movwf	(___flge@ff1+1)& (0+255),b
 29111  00AC8E  0E00               	movlw	0
 29112  00AC90  6F93               	movwf	(___flge@ff1+2)& (0+255),b
 29113  00AC92  0E00               	movlw	0
 29114  00AC94  6F94               	movwf	(___flge@ff1+3)& (0+255),b
 29115  00AC96                     l31323:
 29116                           
 29117                           ; BSR set to: 0
 29118  00AC96  0E00               	movlw	0
 29119  00AC98  1595               	andwf	___flge@ff2& (0+255),w,b
 29120  00AC9A  6F99               	movwf	??___flge& (0+255),b
 29121  00AC9C  0E00               	movlw	0
 29122  00AC9E  1596               	andwf	(___flge@ff2+1)& (0+255),w,b
 29123  00ACA0  6F9A               	movwf	(??___flge+1)& (0+255),b
 29124  00ACA2  0E80               	movlw	128
 29125  00ACA4  1597               	andwf	(___flge@ff2+2)& (0+255),w,b
 29126  00ACA6  6F9B               	movwf	(??___flge+2)& (0+255),b
 29127  00ACA8  0E7F               	movlw	127
 29128  00ACAA  1598               	andwf	(___flge@ff2+3)& (0+255),w,b
 29129  00ACAC  6F9C               	movwf	(??___flge+3)& (0+255),b
 29130  00ACAE  5199               	movf	??___flge& (0+255),w,b
 29131  00ACB0  119A               	iorwf	(??___flge+1)& (0+255),w,b
 29132  00ACB2  119B               	iorwf	(??___flge+2)& (0+255),w,b
 29133  00ACB4  119C               	iorwf	(??___flge+3)& (0+255),w,b
 29134  00ACB6  A4D8               	btfss	status,2,c
 29135  00ACB8  D008               	goto	l31327
 29136                           
 29137                           ; BSR set to: 0
 29138  00ACBA  0E00               	movlw	0
 29139  00ACBC  6F95               	movwf	___flge@ff2& (0+255),b
 29140  00ACBE  0E00               	movlw	0
 29141  00ACC0  6F96               	movwf	(___flge@ff2+1)& (0+255),b
 29142  00ACC2  0E00               	movlw	0
 29143  00ACC4  6F97               	movwf	(___flge@ff2+2)& (0+255),b
 29144  00ACC6  0E00               	movlw	0
 29145  00ACC8  6F98               	movwf	(___flge@ff2+3)& (0+255),b
 29146  00ACCA                     l31327:
 29147                           
 29148                           ; BSR set to: 0
 29149  00ACCA  AF94               	btfss	(___flge@ff1+3)& (0+255),7,b
 29150  00ACCC  D009               	goto	l31331
 29151                           
 29152                           ; BSR set to: 0
 29153  00ACCE  6D91               	negf	___flge@ff1& (0+255),b
 29154  00ACD0  1F92               	comf	(___flge@ff1+1)& (0+255),f,b
 29155  00ACD2  B0D8               	btfsc	status,0,c
 29156  00ACD4  2B92               	incf	(___flge@ff1+1)& (0+255),f,b
 29157  00ACD6  1F93               	comf	(___flge@ff1+2)& (0+255),f,b
 29158  00ACD8  B0D8               	btfsc	status,0,c
 29159  00ACDA  2B93               	incf	(___flge@ff1+2)& (0+255),f,b
 29160  00ACDC  0E80               	movlw	128
 29161  00ACDE  5794               	subfwb	(___flge@ff1+3)& (0+255),f,b
 29162  00ACE0                     l31331:
 29163                           
 29164                           ; BSR set to: 0
 29165  00ACE0  AF98               	btfss	(___flge@ff2+3)& (0+255),7,b
 29166  00ACE2  D009               	goto	l3081
 29167                           
 29168                           ; BSR set to: 0
 29169  00ACE4  6D95               	negf	___flge@ff2& (0+255),b
 29170  00ACE6  1F96               	comf	(___flge@ff2+1)& (0+255),f,b
 29171  00ACE8  B0D8               	btfsc	status,0,c
 29172  00ACEA  2B96               	incf	(___flge@ff2+1)& (0+255),f,b
 29173  00ACEC  1F97               	comf	(___flge@ff2+2)& (0+255),f,b
 29174  00ACEE  B0D8               	btfsc	status,0,c
 29175  00ACF0  2B97               	incf	(___flge@ff2+2)& (0+255),f,b
 29176  00ACF2  0E80               	movlw	128
 29177  00ACF4  5798               	subfwb	(___flge@ff2+3)& (0+255),f,b
 29178  00ACF6                     l3081:
 29179                           
 29180                           ; BSR set to: 0
 29181  00ACF6  0E00               	movlw	0
 29182  00ACF8  1B91               	xorwf	___flge@ff1& (0+255),f,b
 29183  00ACFA  0E00               	movlw	0
 29184  00ACFC  1B92               	xorwf	(___flge@ff1+1)& (0+255),f,b
 29185  00ACFE  0E00               	movlw	0
 29186  00AD00  1B93               	xorwf	(___flge@ff1+2)& (0+255),f,b
 29187  00AD02  0E80               	movlw	128
 29188  00AD04  1B94               	xorwf	(___flge@ff1+3)& (0+255),f,b
 29189  00AD06  0E00               	movlw	0
 29190  00AD08  1B95               	xorwf	___flge@ff2& (0+255),f,b
 29191  00AD0A  0E00               	movlw	0
 29192  00AD0C  1B96               	xorwf	(___flge@ff2+1)& (0+255),f,b
 29193  00AD0E  0E00               	movlw	0
 29194  00AD10  1B97               	xorwf	(___flge@ff2+2)& (0+255),f,b
 29195  00AD12  0E80               	movlw	128
 29196  00AD14  1B98               	xorwf	(___flge@ff2+3)& (0+255),f,b
 29197  00AD16  5195               	movf	___flge@ff2& (0+255),w,b
 29198  00AD18  5D91               	subwf	___flge@ff1& (0+255),w,b
 29199  00AD1A  5196               	movf	(___flge@ff2+1)& (0+255),w,b
 29200  00AD1C  5992               	subwfb	(___flge@ff1+1)& (0+255),w,b
 29201  00AD1E  5197               	movf	(___flge@ff2+2)& (0+255),w,b
 29202  00AD20  5993               	subwfb	(___flge@ff1+2)& (0+255),w,b
 29203  00AD22  5198               	movf	(___flge@ff2+3)& (0+255),w,b
 29204  00AD24  5994               	subwfb	(___flge@ff1+3)& (0+255),w,b
 29205  00AD26  B0D8               	btfsc	status,0,c
 29206  00AD28  D002               	goto	l31337
 29207                           
 29208                           ; BSR set to: 0
 29209  00AD2A  90D8               	bcf	status,0,c
 29210  00AD2C  0012               	return	
 29211  00AD2E                     l31337:
 29212                           
 29213                           ; BSR set to: 0
 29214  00AD2E  80D8               	bsf	status,0,c
 29215                           
 29216                           ; BSR set to: 0
 29217  00AD30  0012               	return		;funcret
 29218  00AD32                     __end_of___flge:
 29219                           	callstack 0
 29220                           
 29221 ;; *************** function ___fleq *****************
 29222 ;; Defined at:
 29223 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 29224 ;; Parameters:    Size  Location     Type
 29225 ;;  ff1             4   49[BANK0 ] unsigned char 
 29226 ;;  ff2             4   53[BANK0 ] unsigned char 
 29227 ;; Auto vars:     Size  Location     Type
 29228 ;;		None
 29229 ;; Return value:  Size  Location     Type
 29230 ;;		None               void
 29231 ;; Registers used:
 29232 ;;		wreg, status,2, status,0
 29233 ;; Tracked objects:
 29234 ;;		On entry : 3F/0
 29235 ;;		On exit  : 3F/0
 29236 ;;		Unchanged: 0/0
 29237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29238 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29240 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29241 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29242 ;;Total ram usage:       12 bytes
 29243 ;; Hardware stack levels used: 1
 29244 ;; Hardware stack levels required when called: 4
 29245 ;; This function calls:
 29246 ;;		Nothing
 29247 ;; This function is called by:
 29248 ;;		_update_command
 29249 ;;		_display_sensor_value
 29250 ;;		_build_response
 29251 ;;		_gasSensor_calib
 29252 ;;		_sprintf
 29253 ;; This function uses a non-reentrant model
 29254 ;;
 29255                           
 29256                           	psect	text130
 29257  00BE64                     __ptext130:
 29258                           	callstack 0
 29259  00BE64                     ___fleq:
 29260                           	callstack 23
 29261                           
 29262                           ; BSR set to: 0
 29263                           
 29264                           ; BSR set to: 0
 29265                           ;incstack = 0
 29266  00BE64  0E00               	movlw	0
 29267  00BE66  1591               	andwf	___fleq@ff1& (0+255),w,b
 29268  00BE68  6F99               	movwf	??___fleq& (0+255),b
 29269  00BE6A  0E00               	movlw	0
 29270  00BE6C  1592               	andwf	(___fleq@ff1+1)& (0+255),w,b
 29271  00BE6E  6F9A               	movwf	(??___fleq+1)& (0+255),b
 29272  00BE70  0E80               	movlw	128
 29273  00BE72  1593               	andwf	(___fleq@ff1+2)& (0+255),w,b
 29274  00BE74  6F9B               	movwf	(??___fleq+2)& (0+255),b
 29275  00BE76  0E7F               	movlw	127
 29276  00BE78  1594               	andwf	(___fleq@ff1+3)& (0+255),w,b
 29277  00BE7A  6F9C               	movwf	(??___fleq+3)& (0+255),b
 29278  00BE7C  5199               	movf	??___fleq& (0+255),w,b
 29279  00BE7E  119A               	iorwf	(??___fleq+1)& (0+255),w,b
 29280  00BE80  119B               	iorwf	(??___fleq+2)& (0+255),w,b
 29281  00BE82  119C               	iorwf	(??___fleq+3)& (0+255),w,b
 29282  00BE84  A4D8               	btfss	status,2,c
 29283  00BE86  D008               	goto	l31307
 29284                           
 29285                           ; BSR set to: 0
 29286  00BE88  0E00               	movlw	0
 29287  00BE8A  6F91               	movwf	___fleq@ff1& (0+255),b
 29288  00BE8C  0E00               	movlw	0
 29289  00BE8E  6F92               	movwf	(___fleq@ff1+1)& (0+255),b
 29290  00BE90  0E00               	movlw	0
 29291  00BE92  6F93               	movwf	(___fleq@ff1+2)& (0+255),b
 29292  00BE94  0E00               	movlw	0
 29293  00BE96  6F94               	movwf	(___fleq@ff1+3)& (0+255),b
 29294  00BE98                     l31307:
 29295                           
 29296                           ; BSR set to: 0
 29297  00BE98  0E00               	movlw	0
 29298  00BE9A  1595               	andwf	___fleq@ff2& (0+255),w,b
 29299  00BE9C  6F99               	movwf	??___fleq& (0+255),b
 29300  00BE9E  0E00               	movlw	0
 29301  00BEA0  1596               	andwf	(___fleq@ff2+1)& (0+255),w,b
 29302  00BEA2  6F9A               	movwf	(??___fleq+1)& (0+255),b
 29303  00BEA4  0E80               	movlw	128
 29304  00BEA6  1597               	andwf	(___fleq@ff2+2)& (0+255),w,b
 29305  00BEA8  6F9B               	movwf	(??___fleq+2)& (0+255),b
 29306  00BEAA  0E7F               	movlw	127
 29307  00BEAC  1598               	andwf	(___fleq@ff2+3)& (0+255),w,b
 29308  00BEAE  6F9C               	movwf	(??___fleq+3)& (0+255),b
 29309  00BEB0  5199               	movf	??___fleq& (0+255),w,b
 29310  00BEB2  119A               	iorwf	(??___fleq+1)& (0+255),w,b
 29311  00BEB4  119B               	iorwf	(??___fleq+2)& (0+255),w,b
 29312  00BEB6  119C               	iorwf	(??___fleq+3)& (0+255),w,b
 29313  00BEB8  A4D8               	btfss	status,2,c
 29314  00BEBA  D008               	goto	l31311
 29315                           
 29316                           ; BSR set to: 0
 29317  00BEBC  0E00               	movlw	0
 29318  00BEBE  6F95               	movwf	___fleq@ff2& (0+255),b
 29319  00BEC0  0E00               	movlw	0
 29320  00BEC2  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 29321  00BEC4  0E00               	movlw	0
 29322  00BEC6  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 29323  00BEC8  0E00               	movlw	0
 29324  00BECA  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 29325  00BECC                     l31311:
 29326                           
 29327                           ; BSR set to: 0
 29328  00BECC  5195               	movf	___fleq@ff2& (0+255),w,b
 29329  00BECE  1991               	xorwf	___fleq@ff1& (0+255),w,b
 29330  00BED0  E10A               	bnz	u39200
 29331  00BED2  5196               	movf	(___fleq@ff2+1)& (0+255),w,b
 29332  00BED4  1992               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 29333  00BED6  E107               	bnz	u39200
 29334  00BED8  5197               	movf	(___fleq@ff2+2)& (0+255),w,b
 29335  00BEDA  1993               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 29336  00BEDC  E104               	bnz	u39200
 29337  00BEDE  5198               	movf	(___fleq@ff2+3)& (0+255),w,b
 29338  00BEE0  1994               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 29339  00BEE2  B4D8               	btfsc	status,2,c
 29340  00BEE4  D002               	goto	l31315
 29341  00BEE6                     u39200:
 29342                           
 29343                           ; BSR set to: 0
 29344  00BEE6  90D8               	bcf	status,0,c
 29345  00BEE8  0012               	return	
 29346  00BEEA                     l31315:
 29347                           
 29348                           ; BSR set to: 0
 29349  00BEEA  80D8               	bsf	status,0,c
 29350                           
 29351                           ; BSR set to: 0
 29352  00BEEC  0012               	return		;funcret
 29353  00BEEE                     __end_of___fleq:
 29354                           	callstack 0
 29355                           
 29356 ;; *************** function __itoa *****************
 29357 ;; Defined at:
 29358 ;;		line 4 in file "util/_itoa.c"
 29359 ;; Parameters:    Size  Location     Type
 29360 ;;  num             4   28[COMRAM] const long 
 29361 ;;  str             2   32[COMRAM] PTR unsigned char 
 29362 ;;		 -> writeBuffer(64), 
 29363 ;; Auto vars:     Size  Location     Type
 29364 ;;  n               4   42[COMRAM] long 
 29365 ;;  shifter         4   36[COMRAM] long 
 29366 ;;  p               2   40[COMRAM] PTR unsigned char 
 29367 ;;		 -> writeBuffer(64), 
 29368 ;;  len             2   34[COMRAM] unsigned int 
 29369 ;; Return value:  Size  Location     Type
 29370 ;;                  2   28[COMRAM] unsigned int 
 29371 ;; Registers used:
 29372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29373 ;; Tracked objects:
 29374 ;;		On entry : 3F/3
 29375 ;;		On exit  : 0/0
 29376 ;;		Unchanged: 0/0
 29377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29378 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29379 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29381 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29382 ;;Total ram usage:       18 bytes
 29383 ;; Hardware stack levels used: 1
 29384 ;; Hardware stack levels required when called: 5
 29385 ;; This function calls:
 29386 ;;		___aldiv
 29387 ;;		___almod
 29388 ;;		___lmul
 29389 ;; This function is called by:
 29390 ;;		_build_response
 29391 ;; This function uses a non-reentrant model
 29392 ;;
 29393                           
 29394                           	psect	text131
 29395  0092BA                     __ptext131:
 29396                           	callstack 0
 29397  0092BA                     __itoa:
 29398                           	callstack 23
 29399                           
 29400                           ; BSR set to: 3
 29401                           ;_itoa.c: 6: long shifter;;_itoa.c: 7: long n;;_itoa.c: 8: unsigned len = 0;
 29402                           
 29403                           ; BSR set to: 0
 29404                           ;incstack = 0
 29405  0092BA  0E00               	movlw	0
 29406  0092BC  6E24               	movwf	(__itoa@len+1)^0,c
 29407  0092BE  0E00               	movlw	0
 29408  0092C0  6E23               	movwf	__itoa@len^0,c
 29409                           
 29410                           ; BSR set to: 3
 29411                           ;_itoa.c: 9: char* p = str;
 29412  0092C2  C021  F029         	movff	__itoa@str,__itoa@p
 29413  0092C6  C022  F02A         	movff	__itoa@str+1,__itoa@p+1
 29414                           
 29415                           ; BSR set to: 3
 29416                           ;_itoa.c: 11: n = num;
 29417  0092CA  C01D  F02B         	movff	__itoa@num,__itoa@n
 29418  0092CE  C01E  F02C         	movff	__itoa@num+1,__itoa@n+1
 29419  0092D2  C01F  F02D         	movff	__itoa@num+2,__itoa@n+2
 29420  0092D6  C020  F02E         	movff	__itoa@num+3,__itoa@n+3
 29421                           
 29422                           ; BSR set to: 3
 29423                           ;_itoa.c: 12: if (num < 0){
 29424  0092DA  AE20               	btfss	(__itoa@num+3)^0,7,c
 29425  0092DC  D024               	goto	l20277
 29426                           
 29427                           ; BSR set to: 3
 29428                           ;_itoa.c: 13: n *= -1;
 29429  0092DE  C02B  F00F         	movff	__itoa@n,___lmul@multiplier
 29430  0092E2  C02C  F010         	movff	__itoa@n+1,___lmul@multiplier+1
 29431  0092E6  C02D  F011         	movff	__itoa@n+2,___lmul@multiplier+2
 29432  0092EA  C02E  F012         	movff	__itoa@n+3,___lmul@multiplier+3
 29433  0092EE  0EFF               	movlw	255
 29434  0092F0  6E13               	movwf	___lmul@multiplicand^0,c
 29435  0092F2  0EFF               	movlw	255
 29436  0092F4  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 29437  0092F6  0EFF               	movlw	255
 29438  0092F8  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 29439  0092FA  0EFF               	movlw	255
 29440  0092FC  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 29441  0092FE  EC69  F066         	call	___lmul	;wreg free
 29442  009302  C00F  F02B         	movff	?___lmul,__itoa@n
 29443  009306  C010  F02C         	movff	?___lmul+1,__itoa@n+1
 29444  00930A  C011  F02D         	movff	?___lmul+2,__itoa@n+2
 29445  00930E  C012  F02E         	movff	?___lmul+3,__itoa@n+3
 29446                           
 29447                           ;_itoa.c: 14: *p = '-';
 29448  009312  C029  FFD9         	movff	__itoa@p,fsr2l
 29449  009316  C02A  FFDA         	movff	__itoa@p+1,fsr2h
 29450  00931A  0E2D               	movlw	45
 29451  00931C  6EDF               	movwf	indf2,c
 29452                           
 29453                           ;_itoa.c: 15: p++; len++;
 29454  00931E  4A29               	infsnz	__itoa@p^0,f,c
 29455  009320  2A2A               	incf	(__itoa@p+1)^0,f,c
 29456  009322  4A23               	infsnz	__itoa@len^0,f,c
 29457  009324  2A24               	incf	(__itoa@len+1)^0,f,c
 29458  009326                     l20277:
 29459                           
 29460                           ;_itoa.c: 16: };_itoa.c: 18: shifter = n;
 29461  009326  C02B  F025         	movff	__itoa@n,__itoa@shifter
 29462  00932A  C02C  F026         	movff	__itoa@n+1,__itoa@shifter+1
 29463  00932E  C02D  F027         	movff	__itoa@n+2,__itoa@shifter+2
 29464  009332  C02E  F028         	movff	__itoa@n+3,__itoa@shifter+3
 29465  009336                     l20279:
 29466                           
 29467                           ;_itoa.c: 20: shifter /= 10;
 29468  009336  C025  F00F         	movff	__itoa@shifter,___aldiv@dividend
 29469  00933A  C026  F010         	movff	__itoa@shifter+1,___aldiv@dividend+1
 29470  00933E  C027  F011         	movff	__itoa@shifter+2,___aldiv@dividend+2
 29471  009342  C028  F012         	movff	__itoa@shifter+3,___aldiv@dividend+3
 29472  009346  0E0A               	movlw	10
 29473  009348  6E13               	movwf	___aldiv@divisor^0,c
 29474  00934A  0E00               	movlw	0
 29475  00934C  6E14               	movwf	(___aldiv@divisor+1)^0,c
 29476  00934E  0E00               	movlw	0
 29477  009350  6E15               	movwf	(___aldiv@divisor+2)^0,c
 29478  009352  0E00               	movlw	0
 29479  009354  6E16               	movwf	(___aldiv@divisor+3)^0,c
 29480  009356  EC01  F057         	call	___aldiv	;wreg free
 29481  00935A  C00F  F025         	movff	?___aldiv,__itoa@shifter
 29482  00935E  C010  F026         	movff	?___aldiv+1,__itoa@shifter+1
 29483  009362  C011  F027         	movff	?___aldiv+2,__itoa@shifter+2
 29484  009366  C012  F028         	movff	?___aldiv+3,__itoa@shifter+3
 29485                           
 29486                           ;_itoa.c: 21: p++; len++;
 29487  00936A  4A29               	infsnz	__itoa@p^0,f,c
 29488  00936C  2A2A               	incf	(__itoa@p+1)^0,f,c
 29489  00936E  4A23               	infsnz	__itoa@len^0,f,c
 29490  009370  2A24               	incf	(__itoa@len+1)^0,f,c
 29491                           
 29492                           ;_itoa.c: 22: } while (shifter);
 29493  009372  5025               	movf	__itoa@shifter^0,w,c
 29494  009374  1026               	iorwf	(__itoa@shifter+1)^0,w,c
 29495  009376  1027               	iorwf	(__itoa@shifter+2)^0,w,c
 29496  009378  1028               	iorwf	(__itoa@shifter+3)^0,w,c
 29497  00937A  A4D8               	btfss	status,2,c
 29498  00937C  D7DC               	goto	l20279
 29499                           
 29500                           ;_itoa.c: 24: *p = '\0';
 29501  00937E  C029  FFD9         	movff	__itoa@p,fsr2l
 29502  009382  C02A  FFDA         	movff	__itoa@p+1,fsr2h
 29503  009386  0E00               	movlw	0
 29504  009388  6EDF               	movwf	indf2,c
 29505  00938A                     l20289:
 29506                           
 29507                           ;_itoa.c: 27: *--p = (n % 10) + '0';
 29508  00938A  C02B  F00F         	movff	__itoa@n,___almod@dividend
 29509  00938E  C02C  F010         	movff	__itoa@n+1,___almod@dividend+1
 29510  009392  C02D  F011         	movff	__itoa@n+2,___almod@dividend+2
 29511  009396  C02E  F012         	movff	__itoa@n+3,___almod@dividend+3
 29512  00939A  0E0A               	movlw	10
 29513  00939C  6E13               	movwf	___almod@divisor^0,c
 29514  00939E  0E00               	movlw	0
 29515  0093A0  6E14               	movwf	(___almod@divisor+1)^0,c
 29516  0093A2  0E00               	movlw	0
 29517  0093A4  6E15               	movwf	(___almod@divisor+2)^0,c
 29518  0093A6  0E00               	movlw	0
 29519  0093A8  6E16               	movwf	(___almod@divisor+3)^0,c
 29520  0093AA  ECAF  F059         	call	___almod	;wreg free
 29521  0093AE  500F               	movf	?___almod^0,w,c
 29522  0093B0  0F30               	addlw	48
 29523  0093B2  0629               	decf	__itoa@p^0,f,c
 29524  0093B4  A0D8               	btfss	status,0,c
 29525  0093B6  062A               	decf	(__itoa@p+1)^0,f,c
 29526  0093B8  C029  FFD9         	movff	__itoa@p,fsr2l
 29527  0093BC  C02A  FFDA         	movff	__itoa@p+1,fsr2h
 29528  0093C0  6EDF               	movwf	indf2,c
 29529                           
 29530                           ;_itoa.c: 28: n /= 10;
 29531  0093C2  C02B  F00F         	movff	__itoa@n,___aldiv@dividend
 29532  0093C6  C02C  F010         	movff	__itoa@n+1,___aldiv@dividend+1
 29533  0093CA  C02D  F011         	movff	__itoa@n+2,___aldiv@dividend+2
 29534  0093CE  C02E  F012         	movff	__itoa@n+3,___aldiv@dividend+3
 29535  0093D2  0E0A               	movlw	10
 29536  0093D4  6E13               	movwf	___aldiv@divisor^0,c
 29537  0093D6  0E00               	movlw	0
 29538  0093D8  6E14               	movwf	(___aldiv@divisor+1)^0,c
 29539  0093DA  0E00               	movlw	0
 29540  0093DC  6E15               	movwf	(___aldiv@divisor+2)^0,c
 29541  0093DE  0E00               	movlw	0
 29542  0093E0  6E16               	movwf	(___aldiv@divisor+3)^0,c
 29543  0093E2  EC01  F057         	call	___aldiv	;wreg free
 29544  0093E6  C00F  F02B         	movff	?___aldiv,__itoa@n
 29545  0093EA  C010  F02C         	movff	?___aldiv+1,__itoa@n+1
 29546  0093EE  C011  F02D         	movff	?___aldiv+2,__itoa@n+2
 29547  0093F2  C012  F02E         	movff	?___aldiv+3,__itoa@n+3
 29548                           
 29549                           ;_itoa.c: 29: } while (n);
 29550  0093F6  502B               	movf	__itoa@n^0,w,c
 29551  0093F8  102C               	iorwf	(__itoa@n+1)^0,w,c
 29552  0093FA  102D               	iorwf	(__itoa@n+2)^0,w,c
 29553  0093FC  102E               	iorwf	(__itoa@n+3)^0,w,c
 29554  0093FE  A4D8               	btfss	status,2,c
 29555  009400  D7C4               	goto	l20289
 29556                           
 29557                           ;_itoa.c: 31: return len;
 29558  009402  C023  F01D         	movff	__itoa@len,?__itoa
 29559  009406  C024  F01E         	movff	__itoa@len+1,?__itoa+1
 29560  00940A  0012               	return		;funcret
 29561  00940C                     __end_of__itoa:
 29562                           	callstack 0
 29563                           
 29564 ;; *************** function ___almod *****************
 29565 ;; Defined at:
 29566 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\almod.c"
 29567 ;; Parameters:    Size  Location     Type
 29568 ;;  dividend        4   14[COMRAM] long 
 29569 ;;  divisor         4   18[COMRAM] long 
 29570 ;; Auto vars:     Size  Location     Type
 29571 ;;  sign            1   23[COMRAM] unsigned char 
 29572 ;;  counter         1   22[COMRAM] unsigned char 
 29573 ;; Return value:  Size  Location     Type
 29574 ;;                  4   14[COMRAM] long 
 29575 ;; Registers used:
 29576 ;;		wreg, status,2, status,0
 29577 ;; Tracked objects:
 29578 ;;		On entry : 0/3
 29579 ;;		On exit  : 0/0
 29580 ;;		Unchanged: 0/0
 29581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29582 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29585 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29586 ;;Total ram usage:       10 bytes
 29587 ;; Hardware stack levels used: 1
 29588 ;; Hardware stack levels required when called: 4
 29589 ;; This function calls:
 29590 ;;		Nothing
 29591 ;; This function is called by:
 29592 ;;		__itoa
 29593 ;; This function uses a non-reentrant model
 29594 ;;
 29595                           
 29596                           	psect	text132
 29597  00B35E                     __ptext132:
 29598                           	callstack 0
 29599  00B35E                     ___almod:
 29600                           	callstack 23
 29601                           
 29602                           ;incstack = 0
 29603  00B35E  0E00               	movlw	0
 29604  00B360  6E18               	movwf	___almod@sign^0,c
 29605  00B362  AE12               	btfss	(___almod@dividend+3)^0,7,c
 29606  00B364  D00A               	goto	l19499
 29607  00B366  1E12               	comf	(___almod@dividend+3)^0,f,c
 29608  00B368  1E11               	comf	(___almod@dividend+2)^0,f,c
 29609  00B36A  1E10               	comf	(___almod@dividend+1)^0,f,c
 29610  00B36C  6C0F               	negf	___almod@dividend^0,c
 29611  00B36E  0E00               	movlw	0
 29612  00B370  2210               	addwfc	(___almod@dividend+1)^0,f,c
 29613  00B372  2211               	addwfc	(___almod@dividend+2)^0,f,c
 29614  00B374  2212               	addwfc	(___almod@dividend+3)^0,f,c
 29615  00B376  0E01               	movlw	1
 29616  00B378  6E18               	movwf	___almod@sign^0,c
 29617  00B37A                     l19499:
 29618  00B37A  AE16               	btfss	(___almod@divisor+3)^0,7,c
 29619  00B37C  D008               	goto	l19503
 29620  00B37E  1E16               	comf	(___almod@divisor+3)^0,f,c
 29621  00B380  1E15               	comf	(___almod@divisor+2)^0,f,c
 29622  00B382  1E14               	comf	(___almod@divisor+1)^0,f,c
 29623  00B384  6C13               	negf	___almod@divisor^0,c
 29624  00B386  0E00               	movlw	0
 29625  00B388  2214               	addwfc	(___almod@divisor+1)^0,f,c
 29626  00B38A  2215               	addwfc	(___almod@divisor+2)^0,f,c
 29627  00B38C  2216               	addwfc	(___almod@divisor+3)^0,f,c
 29628  00B38E                     l19503:
 29629  00B38E  5013               	movf	___almod@divisor^0,w,c
 29630  00B390  1014               	iorwf	(___almod@divisor+1)^0,w,c
 29631  00B392  1015               	iorwf	(___almod@divisor+2)^0,w,c
 29632  00B394  1016               	iorwf	(___almod@divisor+3)^0,w,c
 29633  00B396  B4D8               	btfsc	status,2,c
 29634  00B398  D024               	goto	l19519
 29635  00B39A  0E01               	movlw	1
 29636  00B39C  6E17               	movwf	___almod@counter^0,c
 29637  00B39E  D006               	goto	l19509
 29638  00B3A0                     l19507:
 29639  00B3A0  90D8               	bcf	status,0,c
 29640  00B3A2  3613               	rlcf	___almod@divisor^0,f,c
 29641  00B3A4  3614               	rlcf	(___almod@divisor+1)^0,f,c
 29642  00B3A6  3615               	rlcf	(___almod@divisor+2)^0,f,c
 29643  00B3A8  3616               	rlcf	(___almod@divisor+3)^0,f,c
 29644  00B3AA  2A17               	incf	___almod@counter^0,f,c
 29645  00B3AC                     l19509:
 29646  00B3AC  AE16               	btfss	(___almod@divisor+3)^0,7,c
 29647  00B3AE  D7F8               	goto	l19507
 29648  00B3B0                     u22310:
 29649  00B3B0  5013               	movf	___almod@divisor^0,w,c
 29650  00B3B2  5C0F               	subwf	___almod@dividend^0,w,c
 29651  00B3B4  5014               	movf	(___almod@divisor+1)^0,w,c
 29652  00B3B6  5810               	subwfb	(___almod@dividend+1)^0,w,c
 29653  00B3B8  5015               	movf	(___almod@divisor+2)^0,w,c
 29654  00B3BA  5811               	subwfb	(___almod@dividend+2)^0,w,c
 29655  00B3BC  5016               	movf	(___almod@divisor+3)^0,w,c
 29656  00B3BE  5812               	subwfb	(___almod@dividend+3)^0,w,c
 29657  00B3C0  A0D8               	btfss	status,0,c
 29658  00B3C2  D008               	goto	l19515
 29659  00B3C4  5013               	movf	___almod@divisor^0,w,c
 29660  00B3C6  5E0F               	subwf	___almod@dividend^0,f,c
 29661  00B3C8  5014               	movf	(___almod@divisor+1)^0,w,c
 29662  00B3CA  5A10               	subwfb	(___almod@dividend+1)^0,f,c
 29663  00B3CC  5015               	movf	(___almod@divisor+2)^0,w,c
 29664  00B3CE  5A11               	subwfb	(___almod@dividend+2)^0,f,c
 29665  00B3D0  5016               	movf	(___almod@divisor+3)^0,w,c
 29666  00B3D2  5A12               	subwfb	(___almod@dividend+3)^0,f,c
 29667  00B3D4                     l19515:
 29668  00B3D4  90D8               	bcf	status,0,c
 29669  00B3D6  3216               	rrcf	(___almod@divisor+3)^0,f,c
 29670  00B3D8  3215               	rrcf	(___almod@divisor+2)^0,f,c
 29671  00B3DA  3214               	rrcf	(___almod@divisor+1)^0,f,c
 29672  00B3DC  3213               	rrcf	___almod@divisor^0,f,c
 29673  00B3DE  2E17               	decfsz	___almod@counter^0,f,c
 29674  00B3E0  D7E7               	goto	u22310
 29675  00B3E2                     l19519:
 29676  00B3E2  5018               	movf	___almod@sign^0,w,c
 29677  00B3E4  B4D8               	btfsc	status,2,c
 29678  00B3E6  D008               	goto	l19523
 29679  00B3E8  1E12               	comf	(___almod@dividend+3)^0,f,c
 29680  00B3EA  1E11               	comf	(___almod@dividend+2)^0,f,c
 29681  00B3EC  1E10               	comf	(___almod@dividend+1)^0,f,c
 29682  00B3EE  6C0F               	negf	___almod@dividend^0,c
 29683  00B3F0  0E00               	movlw	0
 29684  00B3F2  2210               	addwfc	(___almod@dividend+1)^0,f,c
 29685  00B3F4  2211               	addwfc	(___almod@dividend+2)^0,f,c
 29686  00B3F6  2212               	addwfc	(___almod@dividend+3)^0,f,c
 29687  00B3F8                     l19523:
 29688  00B3F8  C00F  F00F         	movff	___almod@dividend,?___almod
 29689  00B3FC  C010  F010         	movff	___almod@dividend+1,?___almod+1
 29690  00B400  C011  F011         	movff	___almod@dividend+2,?___almod+2
 29691  00B404  C012  F012         	movff	___almod@dividend+3,?___almod+3
 29692  00B408  0012               	return		;funcret
 29693  00B40A                     __end_of___almod:
 29694                           	callstack 0
 29695                           
 29696 ;; *************** function ___aldiv *****************
 29697 ;; Defined at:
 29698 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
 29699 ;; Parameters:    Size  Location     Type
 29700 ;;  dividend        4   14[COMRAM] long 
 29701 ;;  divisor         4   18[COMRAM] long 
 29702 ;; Auto vars:     Size  Location     Type
 29703 ;;  quotient        4   24[COMRAM] long 
 29704 ;;  sign            1   23[COMRAM] unsigned char 
 29705 ;;  counter         1   22[COMRAM] unsigned char 
 29706 ;; Return value:  Size  Location     Type
 29707 ;;                  4   14[COMRAM] long 
 29708 ;; Registers used:
 29709 ;;		wreg, status,2, status,0
 29710 ;; Tracked objects:
 29711 ;;		On entry : 0/3
 29712 ;;		On exit  : 0/0
 29713 ;;		Unchanged: 0/0
 29714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29715 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29716 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29718 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29719 ;;Total ram usage:       14 bytes
 29720 ;; Hardware stack levels used: 1
 29721 ;; Hardware stack levels required when called: 4
 29722 ;; This function calls:
 29723 ;;		Nothing
 29724 ;; This function is called by:
 29725 ;;		__itoa
 29726 ;; This function uses a non-reentrant model
 29727 ;;
 29728                           
 29729                           	psect	text133
 29730  00AE02                     __ptext133:
 29731                           	callstack 0
 29732  00AE02                     ___aldiv:
 29733                           	callstack 23
 29734                           
 29735                           ;incstack = 0
 29736  00AE02  0E00               	movlw	0
 29737  00AE04  6E18               	movwf	___aldiv@sign^0,c
 29738  00AE06  AE16               	btfss	(___aldiv@divisor+3)^0,7,c
 29739  00AE08  D00A               	goto	l19455
 29740  00AE0A  1E16               	comf	(___aldiv@divisor+3)^0,f,c
 29741  00AE0C  1E15               	comf	(___aldiv@divisor+2)^0,f,c
 29742  00AE0E  1E14               	comf	(___aldiv@divisor+1)^0,f,c
 29743  00AE10  6C13               	negf	___aldiv@divisor^0,c
 29744  00AE12  0E00               	movlw	0
 29745  00AE14  2214               	addwfc	(___aldiv@divisor+1)^0,f,c
 29746  00AE16  2215               	addwfc	(___aldiv@divisor+2)^0,f,c
 29747  00AE18  2216               	addwfc	(___aldiv@divisor+3)^0,f,c
 29748  00AE1A  0E01               	movlw	1
 29749  00AE1C  6E18               	movwf	___aldiv@sign^0,c
 29750  00AE1E                     l19455:
 29751  00AE1E  AE12               	btfss	(___aldiv@dividend+3)^0,7,c
 29752  00AE20  D00A               	goto	l19461
 29753  00AE22  1E12               	comf	(___aldiv@dividend+3)^0,f,c
 29754  00AE24  1E11               	comf	(___aldiv@dividend+2)^0,f,c
 29755  00AE26  1E10               	comf	(___aldiv@dividend+1)^0,f,c
 29756  00AE28  6C0F               	negf	___aldiv@dividend^0,c
 29757  00AE2A  0E00               	movlw	0
 29758  00AE2C  2210               	addwfc	(___aldiv@dividend+1)^0,f,c
 29759  00AE2E  2211               	addwfc	(___aldiv@dividend+2)^0,f,c
 29760  00AE30  2212               	addwfc	(___aldiv@dividend+3)^0,f,c
 29761  00AE32  0E01               	movlw	1
 29762  00AE34  1A18               	xorwf	___aldiv@sign^0,f,c
 29763  00AE36                     l19461:
 29764  00AE36  0E00               	movlw	0
 29765  00AE38  6E19               	movwf	___aldiv@quotient^0,c
 29766  00AE3A  0E00               	movlw	0
 29767  00AE3C  6E1A               	movwf	(___aldiv@quotient+1)^0,c
 29768  00AE3E  0E00               	movlw	0
 29769  00AE40  6E1B               	movwf	(___aldiv@quotient+2)^0,c
 29770  00AE42  0E00               	movlw	0
 29771  00AE44  6E1C               	movwf	(___aldiv@quotient+3)^0,c
 29772  00AE46  5013               	movf	___aldiv@divisor^0,w,c
 29773  00AE48  1014               	iorwf	(___aldiv@divisor+1)^0,w,c
 29774  00AE4A  1015               	iorwf	(___aldiv@divisor+2)^0,w,c
 29775  00AE4C  1016               	iorwf	(___aldiv@divisor+3)^0,w,c
 29776  00AE4E  B4D8               	btfsc	status,2,c
 29777  00AE50  D02A               	goto	l19483
 29778  00AE52  0E01               	movlw	1
 29779  00AE54  6E17               	movwf	___aldiv@counter^0,c
 29780  00AE56  D006               	goto	l19469
 29781  00AE58                     l19467:
 29782  00AE58  90D8               	bcf	status,0,c
 29783  00AE5A  3613               	rlcf	___aldiv@divisor^0,f,c
 29784  00AE5C  3614               	rlcf	(___aldiv@divisor+1)^0,f,c
 29785  00AE5E  3615               	rlcf	(___aldiv@divisor+2)^0,f,c
 29786  00AE60  3616               	rlcf	(___aldiv@divisor+3)^0,f,c
 29787  00AE62  2A17               	incf	___aldiv@counter^0,f,c
 29788  00AE64                     l19469:
 29789  00AE64  AE16               	btfss	(___aldiv@divisor+3)^0,7,c
 29790  00AE66  D7F8               	goto	l19467
 29791  00AE68                     u22250:
 29792  00AE68  90D8               	bcf	status,0,c
 29793  00AE6A  3619               	rlcf	___aldiv@quotient^0,f,c
 29794  00AE6C  361A               	rlcf	(___aldiv@quotient+1)^0,f,c
 29795  00AE6E  361B               	rlcf	(___aldiv@quotient+2)^0,f,c
 29796  00AE70  361C               	rlcf	(___aldiv@quotient+3)^0,f,c
 29797  00AE72  5013               	movf	___aldiv@divisor^0,w,c
 29798  00AE74  5C0F               	subwf	___aldiv@dividend^0,w,c
 29799  00AE76  5014               	movf	(___aldiv@divisor+1)^0,w,c
 29800  00AE78  5810               	subwfb	(___aldiv@dividend+1)^0,w,c
 29801  00AE7A  5015               	movf	(___aldiv@divisor+2)^0,w,c
 29802  00AE7C  5811               	subwfb	(___aldiv@dividend+2)^0,w,c
 29803  00AE7E  5016               	movf	(___aldiv@divisor+3)^0,w,c
 29804  00AE80  5812               	subwfb	(___aldiv@dividend+3)^0,w,c
 29805  00AE82  A0D8               	btfss	status,0,c
 29806  00AE84  D009               	goto	l19479
 29807  00AE86  5013               	movf	___aldiv@divisor^0,w,c
 29808  00AE88  5E0F               	subwf	___aldiv@dividend^0,f,c
 29809  00AE8A  5014               	movf	(___aldiv@divisor+1)^0,w,c
 29810  00AE8C  5A10               	subwfb	(___aldiv@dividend+1)^0,f,c
 29811  00AE8E  5015               	movf	(___aldiv@divisor+2)^0,w,c
 29812  00AE90  5A11               	subwfb	(___aldiv@dividend+2)^0,f,c
 29813  00AE92  5016               	movf	(___aldiv@divisor+3)^0,w,c
 29814  00AE94  5A12               	subwfb	(___aldiv@dividend+3)^0,f,c
 29815  00AE96  8019               	bsf	___aldiv@quotient^0,0,c
 29816  00AE98                     l19479:
 29817  00AE98  90D8               	bcf	status,0,c
 29818  00AE9A  3216               	rrcf	(___aldiv@divisor+3)^0,f,c
 29819  00AE9C  3215               	rrcf	(___aldiv@divisor+2)^0,f,c
 29820  00AE9E  3214               	rrcf	(___aldiv@divisor+1)^0,f,c
 29821  00AEA0  3213               	rrcf	___aldiv@divisor^0,f,c
 29822  00AEA2  2E17               	decfsz	___aldiv@counter^0,f,c
 29823  00AEA4  D7E1               	goto	u22250
 29824  00AEA6                     l19483:
 29825  00AEA6  5018               	movf	___aldiv@sign^0,w,c
 29826  00AEA8  B4D8               	btfsc	status,2,c
 29827  00AEAA  D008               	goto	l19487
 29828  00AEAC  1E1C               	comf	(___aldiv@quotient+3)^0,f,c
 29829  00AEAE  1E1B               	comf	(___aldiv@quotient+2)^0,f,c
 29830  00AEB0  1E1A               	comf	(___aldiv@quotient+1)^0,f,c
 29831  00AEB2  6C19               	negf	___aldiv@quotient^0,c
 29832  00AEB4  0E00               	movlw	0
 29833  00AEB6  221A               	addwfc	(___aldiv@quotient+1)^0,f,c
 29834  00AEB8  221B               	addwfc	(___aldiv@quotient+2)^0,f,c
 29835  00AEBA  221C               	addwfc	(___aldiv@quotient+3)^0,f,c
 29836  00AEBC                     l19487:
 29837  00AEBC  C019  F00F         	movff	___aldiv@quotient,?___aldiv
 29838  00AEC0  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
 29839  00AEC4  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
 29840  00AEC8  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
 29841  00AECC  0012               	return		;funcret
 29842  00AECE                     __end_of___aldiv:
 29843                           	callstack 0
 29844                           
 29845 ;; *************** function _buffer_de_queue *****************
 29846 ;; Defined at:
 29847 ;;		line 22 in file "util/buffer.c"
 29848 ;; Parameters:    Size  Location     Type
 29849 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 29850 ;;		 -> g_usb_queue(67), 
 29851 ;; Auto vars:     Size  Location     Type
 29852 ;;  ch              1   19[COMRAM] unsigned char 
 29853 ;; Return value:  Size  Location     Type
 29854 ;;                  1    wreg      unsigned char 
 29855 ;; Registers used:
 29856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29857 ;; Tracked objects:
 29858 ;;		On entry : 0/6
 29859 ;;		On exit  : 0/0
 29860 ;;		Unchanged: 0/0
 29861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29864 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29866 ;;Total ram usage:        6 bytes
 29867 ;; Hardware stack levels used: 1
 29868 ;; Hardware stack levels required when called: 4
 29869 ;; This function calls:
 29870 ;;		Nothing
 29871 ;; This function is called by:
 29872 ;;		_atcommand_task
 29873 ;; This function uses a non-reentrant model
 29874 ;;
 29875                           
 29876                           	psect	text134
 29877  00C540                     __ptext134:
 29878                           	callstack 0
 29879  00C540                     _buffer_de_queue:
 29880                           	callstack 25
 29881                           
 29882                           ;buffer.c: 25: if (queue->read_pos == queue->write_pos)
 29883                           
 29884                           ;incstack = 0
 29885  00C540  EE20 F002          	lfsr	2,2
 29886  00C544  500F               	movf	buffer_de_queue@queue^0,w,c
 29887  00C546  26D9               	addwf	fsr2l,f,c
 29888  00C548  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 29889  00C54A  22DA               	addwfc	fsr2h,f,c
 29890  00C54C  EE10 F001          	lfsr	1,1
 29891  00C550  500F               	movf	buffer_de_queue@queue^0,w,c
 29892  00C552  26E1               	addwf	fsr1l,f,c
 29893  00C554  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 29894  00C556  22E2               	addwfc	fsr1h,f,c
 29895  00C558  50DE               	movf	postinc2,w,c
 29896  00C55A  18E6               	xorwf	postinc1,w,c
 29897  00C55C  A4D8               	btfss	status,2,c
 29898  00C55E  D002               	goto	l20641
 29899                           
 29900                           ;buffer.c: 26: return ch;
 29901  00C560  0E00               	movlw	0
 29902  00C562  0012               	return	
 29903  00C564                     l20641:
 29904                           
 29905                           ;buffer.c: 27: else {;buffer.c: 28: ch = queue->buffer[queue->read_pos];
 29906  00C564  EE20 F001          	lfsr	2,1
 29907  00C568  500F               	movf	buffer_de_queue@queue^0,w,c
 29908  00C56A  26D9               	addwf	fsr2l,f,c
 29909  00C56C  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 29910  00C56E  22DA               	addwfc	fsr2h,f,c
 29911  00C570  50DF               	movf	indf2,w,c
 29912  00C572  6E11               	movwf	??_buffer_de_queue^0,c
 29913  00C574  5011               	movf	??_buffer_de_queue^0,w,c
 29914  00C576  240F               	addwf	buffer_de_queue@queue^0,w,c
 29915  00C578  6E12               	movwf	(??_buffer_de_queue+1)^0,c
 29916  00C57A  0E00               	movlw	0
 29917  00C57C  2010               	addwfc	(buffer_de_queue@queue+1)^0,w,c
 29918  00C57E  6E13               	movwf	(??_buffer_de_queue+2)^0,c
 29919  00C580  0E03               	movlw	3
 29920  00C582  2412               	addwf	(??_buffer_de_queue+1)^0,w,c
 29921  00C584  6ED9               	movwf	fsr2l,c
 29922  00C586  0E00               	movlw	0
 29923  00C588  2013               	addwfc	(??_buffer_de_queue+2)^0,w,c
 29924  00C58A  6EDA               	movwf	fsr2h,c
 29925  00C58C  50DF               	movf	indf2,w,c
 29926  00C58E  6E14               	movwf	buffer_de_queue@ch^0,c
 29927                           
 29928                           ;buffer.c: 29: queue->read_pos = (++queue->read_pos)%64;
 29929  00C590  EE20 F001          	lfsr	2,1
 29930  00C594  500F               	movf	buffer_de_queue@queue^0,w,c
 29931  00C596  26D9               	addwf	fsr2l,f,c
 29932  00C598  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 29933  00C59A  22DA               	addwfc	fsr2h,f,c
 29934  00C59C  EE10 F001          	lfsr	1,1
 29935  00C5A0  500F               	movf	buffer_de_queue@queue^0,w,c
 29936  00C5A2  26E1               	addwf	fsr1l,f,c
 29937  00C5A4  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 29938  00C5A6  22E2               	addwfc	fsr1h,f,c
 29939  00C5A8  2AE7               	incf	indf1,f,c
 29940  00C5AA  50E7               	movf	indf1,w,c
 29941  00C5AC  0B3F               	andlw	63
 29942  00C5AE  6EDF               	movwf	indf2,c
 29943                           
 29944                           ;buffer.c: 30: };buffer.c: 31: return ch;
 29945  00C5B0  5014               	movf	buffer_de_queue@ch^0,w,c
 29946  00C5B2  0012               	return		;funcret
 29947  00C5B4                     __end_of_buffer_de_queue:
 29948                           	callstack 0
 29949                           
 29950 ;; *************** function _app_usb_task *****************
 29951 ;; Defined at:
 29952 ;;		line 72 in file "app_usb_cdc.c"
 29953 ;; Parameters:    Size  Location     Type
 29954 ;;		None
 29955 ;; Auto vars:     Size  Location     Type
 29956 ;;  i               1   28[COMRAM] unsigned char 
 29957 ;;  numBytesRead    1   27[COMRAM] unsigned char 
 29958 ;; Return value:  Size  Location     Type
 29959 ;;                  1    wreg      void 
 29960 ;; Registers used:
 29961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29962 ;; Tracked objects:
 29963 ;;		On entry : 0/0
 29964 ;;		On exit  : 0/0
 29965 ;;		Unchanged: 0/0
 29966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29971 ;;Total ram usage:        2 bytes
 29972 ;; Hardware stack levels used: 1
 29973 ;; Hardware stack levels required when called: 6
 29974 ;; This function calls:
 29975 ;;		_CDCTxService
 29976 ;;		_buffer_en_queue
 29977 ;;		_getsUSBUSART
 29978 ;; This function is called by:
 29979 ;;		_main
 29980 ;; This function uses a non-reentrant model
 29981 ;;
 29982                           
 29983                           	psect	text135
 29984  00CA58                     __ptext135:
 29985                           	callstack 0
 29986  00CA58                     _app_usb_task:
 29987                           	callstack 24
 29988                           
 29989                           ;app_usb_cdc.c: 77: if( USBDeviceState < CONFIGURED_STATE )
 29990                           
 29991                           ;incstack = 0
 29992  00CA58  0E20               	movlw	32
 29993  00CA5A  0100               	movlb	0	; () banked
 29994  00CA5C  61FA               	cpfslt	_USBDeviceState& (0+255),b
 29995  00CA5E  D001               	goto	l1509
 29996  00CA60  0012               	return	
 29997  00CA62                     l1509:
 29998                           
 29999                           ; BSR set to: 0
 30000                           ;app_usb_cdc.c: 80: };app_usb_cdc.c: 86: if( UCONbits.SUSPND== 1 )
 30001  00CA62  B265               	btfsc	101,1,c	;volatile
 30002  00CA64  0012               	return	
 30003                           
 30004                           ; BSR set to: 0
 30005                           ;app_usb_cdc.c: 89: };app_usb_cdc.c: 94: if( (cdc_trf_state == 0) == 1)
 30006  00CA66  504F               	movf	_cdc_trf_state^0,w,c
 30007  00CA68  A4D8               	btfss	status,2,c
 30008  00CA6A  D022               	goto	u25910
 30009                           
 30010                           ; BSR set to: 0
 30011                           ;app_usb_cdc.c: 95: {;app_usb_cdc.c: 96: uint8_t i;;app_usb_cdc.c: 97: uint8_t numBytesR
      +                          ead;;app_usb_cdc.c: 99: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
 30012  00CA6C  0E83               	movlw	low _readBuffer
 30013  00CA6E  6E18               	movwf	getsUSBUSART@buffer^0,c
 30014  00CA70  0E05               	movlw	high _readBuffer
 30015  00CA72  6E19               	movwf	(getsUSBUSART@buffer+1)^0,c
 30016  00CA74  0E40               	movlw	64
 30017  00CA76  6E1A               	movwf	getsUSBUSART@len^0,c
 30018  00CA78  ECA7  F05E         	call	_getsUSBUSART	;wreg free
 30019  00CA7C  6E1C               	movwf	app_usb_task@numBytesRead^0,c
 30020                           
 30021                           ; BSR set to: 0
 30022                           ;app_usb_cdc.c: 101: if(numBytesRead > 0)
 30023  00CA7E  501C               	movf	app_usb_task@numBytesRead^0,w,c
 30024  00CA80  B4D8               	btfsc	status,2,c
 30025  00CA82  D016               	goto	u25910
 30026                           
 30027                           ; BSR set to: 0
 30028                           ;app_usb_cdc.c: 102: {;app_usb_cdc.c: 103: for (i = 0 ; i < numBytesRead ; i++) {
 30029  00CA84  0E00               	movlw	0
 30030  00CA86  6E1D               	movwf	app_usb_task@i^0,c
 30031  00CA88  D00F               	goto	l22009
 30032  00CA8A                     l22005:
 30033                           
 30034                           ;app_usb_cdc.c: 104: buffer_en_queue(&g_usb_queue, readBuffer[i]);
 30035  00CA8A  0E00               	movlw	low _g_usb_queue
 30036  00CA8C  6E0F               	movwf	buffer_en_queue@queue^0,c
 30037  00CA8E  0E05               	movlw	high _g_usb_queue
 30038  00CA90  6E10               	movwf	(buffer_en_queue@queue+1)^0,c
 30039  00CA92  0E83               	movlw	low _readBuffer
 30040  00CA94  241D               	addwf	app_usb_task@i^0,w,c
 30041  00CA96  6ED9               	movwf	fsr2l,c
 30042  00CA98  6ADA               	clrf	fsr2h,c
 30043  00CA9A  0E05               	movlw	high _readBuffer
 30044  00CA9C  22DA               	addwfc	fsr2h,f,c
 30045  00CA9E  50DF               	movf	indf2,w,c
 30046  00CAA0  6E11               	movwf	buffer_en_queue@ch^0,c
 30047  00CAA2  EC39  F067         	call	_buffer_en_queue	;wreg free
 30048  00CAA6  2A1D               	incf	app_usb_task@i^0,f,c
 30049  00CAA8                     l22009:
 30050  00CAA8  501C               	movf	app_usb_task@numBytesRead^0,w,c
 30051  00CAAA  5C1D               	subwf	app_usb_task@i^0,w,c
 30052  00CAAC  A0D8               	btfss	status,0,c
 30053  00CAAE  D7ED               	goto	l22005
 30054  00CAB0                     u25910:
 30055                           
 30056                           ;app_usb_cdc.c: 105: };app_usb_cdc.c: 106: };app_usb_cdc.c: 107: };app_usb_cdc.c: 109: C
      +                          DCTxService();
 30057  00CAB0  EC8A  F04C         	call	_CDCTxService	;wreg free
 30058  00CAB4  0012               	return		;funcret
 30059  00CAB6                     __end_of_app_usb_task:
 30060                           	callstack 0
 30061                           
 30062 ;; *************** function _getsUSBUSART *****************
 30063 ;; Defined at:
 30064 ;;		line 486 in file "usb/usb_device_cdc.c"
 30065 ;; Parameters:    Size  Location     Type
 30066 ;;  buffer          2   23[COMRAM] PTR unsigned char 
 30067 ;;		 -> readBuffer(64), 
 30068 ;;  len             1   25[COMRAM] unsigned char 
 30069 ;; Auto vars:     Size  Location     Type
 30070 ;;		None
 30071 ;; Return value:  Size  Location     Type
 30072 ;;                  1    wreg      unsigned char 
 30073 ;; Registers used:
 30074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30075 ;; Tracked objects:
 30076 ;;		On entry : 3F/0
 30077 ;;		On exit  : 3F/0
 30078 ;;		Unchanged: 0/0
 30079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30080 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30084 ;;Total ram usage:        4 bytes
 30085 ;; Hardware stack levels used: 1
 30086 ;; Hardware stack levels required when called: 5
 30087 ;; This function calls:
 30088 ;;		_USBTransferOnePacket
 30089 ;; This function is called by:
 30090 ;;		_app_usb_task
 30091 ;; This function uses a non-reentrant model
 30092 ;;
 30093                           
 30094                           	psect	text136
 30095  00BD4E                     __ptext136:
 30096                           	callstack 0
 30097  00BD4E                     _getsUSBUSART:
 30098                           	callstack 24
 30099                           
 30100                           ; BSR set to: 0
 30101                           ;usb_device_cdc.c: 488: cdc_rx_len = 0;
 30102                           
 30103                           ;incstack = 0
 30104  00BD4E  0E00               	movlw	0
 30105  00BD50  6FEB               	movwf	_cdc_rx_len& (0+255),b
 30106                           
 30107                           ; BSR set to: 0
 30108                           ;usb_device_cdc.c: 490: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 30109  00BD52  51DE               	movf	_CDCDataOutHandle& (0+255),w,b
 30110  00BD54  11DF               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 30111  00BD56  B4D8               	btfsc	status,2,c
 30112  00BD58  D006               	goto	u25290
 30113                           
 30114                           ; BSR set to: 0
 30115  00BD5A  C0DE  FFD9         	movff	_CDCDataOutHandle,fsr2l
 30116  00BD5E  C0DF  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 30117  00BD62  BEDF               	btfsc	indf2,7,c
 30118  00BD64  D037               	goto	l21643
 30119  00BD66                     u25290:
 30120                           
 30121                           ; BSR set to: 0
 30122                           ;usb_device_cdc.c: 491: {;usb_device_cdc.c: 496: if(len > (((volatile BDT_ENTRY*)CDCData
      +                          OutHandle)->CNT))
 30123  00BD66  EE20 F001          	lfsr	2,1
 30124  00BD6A  51DE               	movf	_CDCDataOutHandle& (0+255),w,b
 30125  00BD6C  26D9               	addwf	fsr2l,f,c
 30126  00BD6E  51DF               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 30127  00BD70  22DA               	addwfc	fsr2h,f,c
 30128  00BD72  501A               	movf	getsUSBUSART@len^0,w,c
 30129  00BD74  5CDE               	subwf	postinc2,w,c
 30130  00BD76  B0D8               	btfsc	status,0,c
 30131  00BD78  D008               	goto	l21633
 30132                           
 30133                           ; BSR set to: 0
 30134                           ;usb_device_cdc.c: 497: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 30135  00BD7A  EE20 F001          	lfsr	2,1
 30136  00BD7E  51DE               	movf	_CDCDataOutHandle& (0+255),w,b
 30137  00BD80  26D9               	addwf	fsr2l,f,c
 30138  00BD82  51DF               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 30139  00BD84  22DA               	addwfc	fsr2h,f,c
 30140  00BD86  50DF               	movf	indf2,w,c
 30141  00BD88  6E1A               	movwf	getsUSBUSART@len^0,c
 30142  00BD8A                     l21633:
 30143                           
 30144                           ; BSR set to: 0
 30145                           ;usb_device_cdc.c: 502: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 30146  00BD8A  0E00               	movlw	0
 30147  00BD8C  6FEB               	movwf	_cdc_rx_len& (0+255),b
 30148  00BD8E  D00F               	goto	l21639
 30149  00BD90                     l21635:
 30150                           
 30151                           ; BSR set to: 0
 30152                           ;usb_device_cdc.c: 503: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 30153  00BD90  0EA3               	movlw	low _cdc_data_rx
 30154  00BD92  25EB               	addwf	_cdc_rx_len& (0+255),w,b
 30155  00BD94  6ED9               	movwf	fsr2l,c
 30156  00BD96  6ADA               	clrf	fsr2h,c
 30157  00BD98  0E03               	movlw	high _cdc_data_rx
 30158  00BD9A  22DA               	addwfc	fsr2h,f,c
 30159  00BD9C  51EB               	movf	_cdc_rx_len& (0+255),w,b
 30160  00BD9E  2418               	addwf	getsUSBUSART@buffer^0,w,c
 30161  00BDA0  6EE1               	movwf	fsr1l,c
 30162  00BDA2  0E00               	movlw	0
 30163  00BDA4  2019               	addwfc	(getsUSBUSART@buffer+1)^0,w,c
 30164  00BDA6  6EE2               	movwf	fsr1h,c
 30165  00BDA8  CFDF FFE7          	movff	indf2,indf1
 30166                           
 30167                           ; BSR set to: 0
 30168  00BDAC  2BEB               	incf	_cdc_rx_len& (0+255),f,b
 30169  00BDAE                     l21639:
 30170                           
 30171                           ; BSR set to: 0
 30172  00BDAE  501A               	movf	getsUSBUSART@len^0,w,c
 30173  00BDB0  5DEB               	subwf	_cdc_rx_len& (0+255),w,b
 30174  00BDB2  A0D8               	btfss	status,0,c
 30175  00BDB4  D7ED               	goto	l21635
 30176                           
 30177                           ; BSR set to: 0
 30178                           ;usb_device_cdc.c: 509: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 30179  00BDB6  0E00               	movlw	0
 30180  00BDB8  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 30181  00BDBA  0EA3               	movlw	low _cdc_data_rx
 30182  00BDBC  6E10               	movwf	USBTransferOnePacket@data^0,c
 30183  00BDBE  0E03               	movlw	high _cdc_data_rx
 30184  00BDC0  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 30185  00BDC2  0E40               	movlw	64
 30186  00BDC4  6E12               	movwf	USBTransferOnePacket@len^0,c
 30187  00BDC6  0E02               	movlw	2
 30188  00BDC8  EC9E  F052         	call	_USBTransferOnePacket
 30189  00BDCC  C00F  F0DE         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 30190  00BDD0  C010  F0DF         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 30191  00BDD4                     l21643:
 30192                           
 30193                           ;usb_device_cdc.c: 511: };usb_device_cdc.c: 513: return cdc_rx_len;
 30194  00BDD4  0100               	movlb	0	; () banked
 30195  00BDD6  51EB               	movf	_cdc_rx_len& (0+255),w,b
 30196                           
 30197                           ; BSR set to: 0
 30198  00BDD8  0012               	return		;funcret
 30199  00BDDA                     __end_of_getsUSBUSART:
 30200                           	callstack 0
 30201                           
 30202 ;; *************** function _buffer_en_queue *****************
 30203 ;; Defined at:
 30204 ;;		line 15 in file "util/buffer.c"
 30205 ;; Parameters:    Size  Location     Type
 30206 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 30207 ;;		 -> g_modbus_queue(67), g_usb_queue(67), 
 30208 ;;  ch              1   16[COMRAM] unsigned char 
 30209 ;; Auto vars:     Size  Location     Type
 30210 ;;		None
 30211 ;; Return value:  Size  Location     Type
 30212 ;;                  1    wreg      void 
 30213 ;; Registers used:
 30214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30215 ;; Tracked objects:
 30216 ;;		On entry : 0/0
 30217 ;;		On exit  : 0/0
 30218 ;;		Unchanged: 0/0
 30219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30222 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30224 ;;Total ram usage:        6 bytes
 30225 ;; Hardware stack levels used: 1
 30226 ;; Hardware stack levels required when called: 4
 30227 ;; This function calls:
 30228 ;;		Nothing
 30229 ;; This function is called by:
 30230 ;;		_app_usb_task
 30231 ;; This function uses a non-reentrant model
 30232 ;;
 30233                           
 30234                           	psect	text137
 30235  00CE72                     __ptext137:
 30236                           	callstack 0
 30237  00CE72                     _buffer_en_queue:
 30238                           	callstack 25
 30239                           
 30240                           ;buffer.c: 17: queue->buffer[queue->write_pos] = ch;
 30241                           
 30242                           ; BSR set to: 0
 30243                           ;incstack = 0
 30244  00CE72  EE20 F002          	lfsr	2,2
 30245  00CE76  500F               	movf	buffer_en_queue@queue^0,w,c
 30246  00CE78  26D9               	addwf	fsr2l,f,c
 30247  00CE7A  5010               	movf	(buffer_en_queue@queue+1)^0,w,c
 30248  00CE7C  22DA               	addwfc	fsr2h,f,c
 30249  00CE7E  50DF               	movf	indf2,w,c
 30250  00CE80  6E12               	movwf	??_buffer_en_queue^0,c
 30251  00CE82  5012               	movf	??_buffer_en_queue^0,w,c
 30252  00CE84  240F               	addwf	buffer_en_queue@queue^0,w,c
 30253  00CE86  6E13               	movwf	(??_buffer_en_queue+1)^0,c
 30254  00CE88  0E00               	movlw	0
 30255  00CE8A  2010               	addwfc	(buffer_en_queue@queue+1)^0,w,c
 30256  00CE8C  6E14               	movwf	(??_buffer_en_queue+2)^0,c
 30257  00CE8E  0E03               	movlw	3
 30258  00CE90  2413               	addwf	(??_buffer_en_queue+1)^0,w,c
 30259  00CE92  6ED9               	movwf	fsr2l,c
 30260  00CE94  0E00               	movlw	0
 30261  00CE96  2014               	addwfc	(??_buffer_en_queue+2)^0,w,c
 30262  00CE98  6EDA               	movwf	fsr2h,c
 30263  00CE9A  C011  FFDF         	movff	buffer_en_queue@ch,indf2
 30264                           
 30265                           ;buffer.c: 18: queue->write_pos = (++queue->write_pos)%64;
 30266  00CE9E  EE20 F002          	lfsr	2,2
 30267  00CEA2  500F               	movf	buffer_en_queue@queue^0,w,c
 30268  00CEA4  26D9               	addwf	fsr2l,f,c
 30269  00CEA6  5010               	movf	(buffer_en_queue@queue+1)^0,w,c
 30270  00CEA8  22DA               	addwfc	fsr2h,f,c
 30271  00CEAA  EE10 F002          	lfsr	1,2
 30272  00CEAE  500F               	movf	buffer_en_queue@queue^0,w,c
 30273  00CEB0  26E1               	addwf	fsr1l,f,c
 30274  00CEB2  5010               	movf	(buffer_en_queue@queue+1)^0,w,c
 30275  00CEB4  22E2               	addwfc	fsr1h,f,c
 30276  00CEB6  2AE7               	incf	indf1,f,c
 30277  00CEB8  50E7               	movf	indf1,w,c
 30278  00CEBA  0B3F               	andlw	63
 30279  00CEBC  6EDF               	movwf	indf2,c
 30280  00CEBE  0012               	return		;funcret
 30281  00CEC0                     __end_of_buffer_en_queue:
 30282                           	callstack 0
 30283                           
 30284 ;; *************** function _CDCTxService *****************
 30285 ;; Defined at:
 30286 ;;		line 837 in file "usb/usb_device_cdc.c"
 30287 ;; Parameters:    Size  Location     Type
 30288 ;;		None
 30289 ;; Auto vars:     Size  Location     Type
 30290 ;;  byte_to_send    1   24[COMRAM] unsigned char 
 30291 ;;  i               1   23[COMRAM] unsigned char 
 30292 ;; Return value:  Size  Location     Type
 30293 ;;                  1    wreg      void 
 30294 ;; Registers used:
 30295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30296 ;; Tracked objects:
 30297 ;;		On entry : 0/0
 30298 ;;		On exit  : 0/0
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30305 ;;Total ram usage:        2 bytes
 30306 ;; Hardware stack levels used: 1
 30307 ;; Hardware stack levels required when called: 5
 30308 ;; This function calls:
 30309 ;;		_USBTransferOnePacket
 30310 ;; This function is called by:
 30311 ;;		_app_usb_task
 30312 ;; This function uses a non-reentrant model
 30313 ;;
 30314                           
 30315                           	psect	text138
 30316  009914                     __ptext138:
 30317                           	callstack 0
 30318  009914                     _CDCTxService:
 30319                           	callstack 24
 30320                           
 30321                           ;usb_device_cdc.c: 839: uint8_t byte_to_send;;usb_device_cdc.c: 840: uint8_t i;;usb_devi
      +                          ce_cdc.c: 842: ;;usb_device_cdc.c: 844: {};;usb_device_cdc.c: 846: if(((CDCDataInHandle 
      +                          != 0x0000) && ((*(volatile uint8_t*)CDCDataInHandle & 0x80) != 0x00)))
 30322                           
 30323                           ;incstack = 0
 30324  009914  0101               	movlb	1	; () banked
 30325  009916  514E               	movf	_CDCDataInHandle& (0+255),w,b
 30326  009918  114F               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 30327  00991A  B4D8               	btfsc	status,2,c
 30328  00991C  D006               	goto	l15965
 30329                           
 30330                           ; BSR set to: 1
 30331  00991E  C14E  FFD9         	movff	_CDCDataInHandle,fsr2l
 30332  009922  C14F  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 30333  009926  BEDF               	btfsc	indf2,7,c
 30334  009928  0012               	return	
 30335  00992A                     l15965:
 30336                           
 30337                           ; BSR set to: 1
 30338                           ;usb_device_cdc.c: 850: };usb_device_cdc.c: 857: if(cdc_trf_state == 3)
 30339  00992A  0E03               	movlw	3
 30340  00992C  184F               	xorwf	_cdc_trf_state^0,w,c
 30341  00992E  A4D8               	btfss	status,2,c
 30342  009930  D002               	goto	l2473
 30343                           
 30344                           ; BSR set to: 1
 30345                           ;usb_device_cdc.c: 858: cdc_trf_state = 0;
 30346  009932  0E00               	movlw	0
 30347  009934  6E4F               	movwf	_cdc_trf_state^0,c
 30348  009936                     l2473:
 30349                           
 30350                           ; BSR set to: 1
 30351                           ;usb_device_cdc.c: 863: if(cdc_trf_state == 0)
 30352  009936  504F               	movf	_cdc_trf_state^0,w,c
 30353  009938  B4D8               	btfsc	status,2,c
 30354  00993A  0012               	return	
 30355                           
 30356                           ; BSR set to: 1
 30357                           ;usb_device_cdc.c: 867: };usb_device_cdc.c: 872: if(cdc_trf_state == 2)
 30358  00993C  0E02               	movlw	2
 30359  00993E  184F               	xorwf	_cdc_trf_state^0,w,c
 30360  009940  A4D8               	btfss	status,2,c
 30361  009942  D012               	goto	l15977
 30362                           
 30363                           ; BSR set to: 1
 30364                           ;usb_device_cdc.c: 873: {;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(0),0);
 30365  009944  0E01               	movlw	1
 30366  009946  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 30367  009948  0E00               	movlw	0
 30368  00994A  6E10               	movwf	USBTransferOnePacket@data^0,c
 30369  00994C  0E00               	movlw	0
 30370  00994E  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 30371  009950  0E00               	movlw	0
 30372  009952  6E12               	movwf	USBTransferOnePacket@len^0,c
 30373  009954  0E02               	movlw	2
 30374  009956  EC9E  F052         	call	_USBTransferOnePacket
 30375  00995A  C00F  F14E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 30376  00995E  C010  F14F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 30377                           
 30378                           ;usb_device_cdc.c: 876: cdc_trf_state = 3;
 30379  009962  0E03               	movlw	3
 30380  009964  6E4F               	movwf	_cdc_trf_state^0,c
 30381                           
 30382                           ;usb_device_cdc.c: 877: }
 30383  009966  0012               	return	
 30384  009968                     l15977:
 30385                           
 30386                           ; BSR set to: 1
 30387                           ;usb_device_cdc.c: 878: else if(cdc_trf_state == 1)
 30388  009968  044F               	decf	_cdc_trf_state^0,w,c
 30389  00996A  A4D8               	btfss	status,2,c
 30390  00996C  0012               	return	
 30391                           
 30392                           ; BSR set to: 1
 30393                           ;usb_device_cdc.c: 879: {;usb_device_cdc.c: 883: if(cdc_tx_len > sizeof(cdc_data_tx))
 30394  00996E  0E40               	movlw	64
 30395  009970  0100               	movlb	0	; () banked
 30396  009972  65EA               	cpfsgt	_cdc_tx_len& (0+255),b
 30397  009974  D003               	goto	l2478
 30398                           
 30399                           ; BSR set to: 0
 30400                           ;usb_device_cdc.c: 884: byte_to_send = sizeof(cdc_data_tx);
 30401  009976  0E40               	movlw	64
 30402  009978  6E19               	movwf	CDCTxService@byte_to_send^0,c
 30403  00997A  D002               	goto	l15983
 30404  00997C                     l2478:
 30405                           
 30406                           ; BSR set to: 0
 30407                           ;usb_device_cdc.c: 885: else;usb_device_cdc.c: 886: byte_to_send = cdc_tx_len;
 30408  00997C  C0EA  F019         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 30409  009980                     l15983:
 30410                           
 30411                           ; BSR set to: 0
 30412                           ;usb_device_cdc.c: 891: cdc_tx_len = cdc_tx_len - byte_to_send;
 30413  009980  5019               	movf	CDCTxService@byte_to_send^0,w,c
 30414  009982  5DEA               	subwf	_cdc_tx_len& (0+255),w,b
 30415  009984  6FEA               	movwf	_cdc_tx_len& (0+255),b
 30416                           
 30417                           ;usb_device_cdc.c: 893: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 30418  009986  0E43               	movlw	low _cdc_data_tx
 30419  009988  0101               	movlb	1	; () banked
 30420  00998A  6F42               	movwf	_pCDCDst& (0+255),b
 30421  00998C  0E05               	movlw	high _cdc_data_tx
 30422  00998E  6F43               	movwf	(_pCDCDst+1)& (0+255),b
 30423                           
 30424                           ; BSR set to: 1
 30425                           ;usb_device_cdc.c: 895: i = byte_to_send;
 30426  009990  C019  F018         	movff	CDCTxService@byte_to_send,CDCTxService@i
 30427                           
 30428                           ; BSR set to: 1
 30429                           ;usb_device_cdc.c: 896: if(cdc_mem_type == 0x00)
 30430  009994  0100               	movlb	0	; () banked
 30431  009996  51E9               	movf	_cdc_mem_type& (0+255),w,b
 30432  009998  B4D8               	btfsc	status,2,c
 30433  00999A  D01C               	goto	l15999
 30434  00999C  D03A               	goto	l16009
 30435  00999E                     l15991:
 30436                           
 30437                           ;usb_device_cdc.c: 899: {;usb_device_cdc.c: 900: *pCDCDst.bRam = *pCDCSrc.bRom;
 30438  00999E  C145  FFF6         	movff	_pCDCSrc,tblptrl
 30439  0099A2  C146  FFF7         	movff	_pCDCSrc+1,tblptrh
 30440  0099A6  6AF8               	clrf	tblptru,c
 30441  0099A8  C142  FFD9         	movff	_pCDCDst,fsr2l
 30442  0099AC  C143  FFDA         	movff	_pCDCDst+1,fsr2h
 30443  0099B0  0E0E               	movlw	(high __ramtop+-1)
 30444  0099B2  64F7               	cpfsgt	tblptrh,c
 30445  0099B4  D003               	bra	u17237
 30446  0099B6  0008               	tblrd		*
 30447  0099B8  50F5               	movf	tablat,w,c
 30448  0099BA  D005               	bra	u17230
 30449  0099BC                     u17237:
 30450  0099BC  CFF6 FFE1          	movff	tblptrl,fsr1l
 30451  0099C0  CFF7 FFE2          	movff	tblptrh,fsr1h
 30452  0099C4  50E7               	movf	indf1,w,c
 30453  0099C6                     u17230:
 30454  0099C6  6EDF               	movwf	indf2,c
 30455                           
 30456                           ;usb_device_cdc.c: 901: pCDCDst.bRam++;
 30457  0099C8  0101               	movlb	1	; () banked
 30458  0099CA  4B42               	infsnz	_pCDCDst& (0+255),f,b
 30459  0099CC  2B43               	incf	(_pCDCDst+1)& (0+255),f,b
 30460                           
 30461                           ; BSR set to: 1
 30462                           ;usb_device_cdc.c: 902: pCDCSrc.bRom++;
 30463  0099CE  4B45               	infsnz	_pCDCSrc& (0+255),f,b
 30464  0099D0  2B46               	incf	(_pCDCSrc+1)& (0+255),f,b
 30465                           
 30466                           ; BSR set to: 1
 30467                           ;usb_device_cdc.c: 903: i--;
 30468  0099D2  0618               	decf	CDCTxService@i^0,f,c
 30469  0099D4                     l15999:
 30470  0099D4  5018               	movf	CDCTxService@i^0,w,c
 30471  0099D6  B4D8               	btfsc	status,2,c
 30472  0099D8  D01F               	goto	u17260
 30473  0099DA  D7E1               	goto	l15991
 30474  0099DC                     l16001:
 30475                           
 30476                           ;usb_device_cdc.c: 909: {;usb_device_cdc.c: 910: *pCDCDst.bRam = *pCDCSrc.bRam;
 30477  0099DC  C145  FFF6         	movff	_pCDCSrc,tblptrl
 30478  0099E0  C146  FFF7         	movff	_pCDCSrc+1,tblptrh
 30479  0099E4  6AF8               	clrf	tblptru,c
 30480  0099E6  C142  FFD9         	movff	_pCDCDst,fsr2l
 30481  0099EA  C143  FFDA         	movff	_pCDCDst+1,fsr2h
 30482  0099EE  0E0E               	movlw	(high __ramtop+-1)
 30483  0099F0  64F7               	cpfsgt	tblptrh,c
 30484  0099F2  D003               	bra	u17257
 30485  0099F4  0008               	tblrd		*
 30486  0099F6  50F5               	movf	tablat,w,c
 30487  0099F8  D005               	bra	u17250
 30488  0099FA                     u17257:
 30489  0099FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 30490  0099FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 30491  009A02  50E7               	movf	indf1,w,c
 30492  009A04                     u17250:
 30493  009A04  6EDF               	movwf	indf2,c
 30494                           
 30495                           ;usb_device_cdc.c: 911: pCDCDst.bRam++;
 30496  009A06  0101               	movlb	1	; () banked
 30497  009A08  4B42               	infsnz	_pCDCDst& (0+255),f,b
 30498  009A0A  2B43               	incf	(_pCDCDst+1)& (0+255),f,b
 30499                           
 30500                           ; BSR set to: 1
 30501                           ;usb_device_cdc.c: 912: pCDCSrc.bRam++;
 30502  009A0C  4B45               	infsnz	_pCDCSrc& (0+255),f,b
 30503  009A0E  2B46               	incf	(_pCDCSrc+1)& (0+255),f,b
 30504                           
 30505                           ; BSR set to: 1
 30506                           ;usb_device_cdc.c: 913: i--;
 30507  009A10  0618               	decf	CDCTxService@i^0,f,c
 30508  009A12                     l16009:
 30509  009A12  5018               	movf	CDCTxService@i^0,w,c
 30510  009A14  A4D8               	btfss	status,2,c
 30511  009A16  D7E2               	goto	l16001
 30512  009A18                     u17260:
 30513                           
 30514                           ;usb_device_cdc.c: 914: };usb_device_cdc.c: 915: };usb_device_cdc.c: 921: if(cdc_tx_len 
      +                          == 0)
 30515  009A18  0100               	movlb	0	; () banked
 30516  009A1A  51EA               	movf	_cdc_tx_len& (0+255),w,b
 30517  009A1C  A4D8               	btfss	status,2,c
 30518  009A1E  D008               	goto	l16019
 30519                           
 30520                           ; BSR set to: 0
 30521                           ;usb_device_cdc.c: 922: {;usb_device_cdc.c: 923: if(byte_to_send == 64)
 30522  009A20  0E40               	movlw	64
 30523  009A22  1819               	xorwf	CDCTxService@byte_to_send^0,w,c
 30524  009A24  A4D8               	btfss	status,2,c
 30525  009A26  D002               	goto	l16017
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;usb_device_cdc.c: 924: cdc_trf_state = 2;
 30529  009A28  0E02               	movlw	2
 30530  009A2A  D001               	goto	L75
 30531  009A2C                     l16017:
 30532                           
 30533                           ; BSR set to: 0
 30534                           ;usb_device_cdc.c: 925: else;usb_device_cdc.c: 926: cdc_trf_state = 3;
 30535  009A2C  0E03               	movlw	3
 30536  009A2E                     L75:
 30537  009A2E  6E4F               	movwf	_cdc_trf_state^0,c
 30538  009A30                     l16019:
 30539                           
 30540                           ; BSR set to: 0
 30541                           ;usb_device_cdc.c: 927: };usb_device_cdc.c: 928: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(uint8_t*)&cdc_data_tx,byte_to_send);
 30542  009A30  0E01               	movlw	1
 30543  009A32  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 30544  009A34  0E43               	movlw	low _cdc_data_tx
 30545  009A36  6E10               	movwf	USBTransferOnePacket@data^0,c
 30546  009A38  0E05               	movlw	high _cdc_data_tx
 30547  009A3A  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 30548  009A3C  C019  F012         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 30549  009A40  0E02               	movlw	2
 30550  009A42  EC9E  F052         	call	_USBTransferOnePacket
 30551  009A46  C00F  F14E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 30552  009A4A  C010  F14F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 30553  009A4E  0012               	return		;funcret
 30554  009A50                     __end_of_CDCTxService:
 30555                           	callstack 0
 30556                           
 30557 ;; *************** function _WDT_initialize *****************
 30558 ;; Defined at:
 30559 ;;		line 56 in file "main.c"
 30560 ;; Parameters:    Size  Location     Type
 30561 ;;		None
 30562 ;; Auto vars:     Size  Location     Type
 30563 ;;		None
 30564 ;; Return value:  Size  Location     Type
 30565 ;;                  1    wreg      void 
 30566 ;; Registers used:
 30567 ;;		None
 30568 ;; Tracked objects:
 30569 ;;		On entry : 3F/0
 30570 ;;		On exit  : 3F/0
 30571 ;;		Unchanged: 3F/0
 30572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30577 ;;Total ram usage:        0 bytes
 30578 ;; Hardware stack levels used: 1
 30579 ;; Hardware stack levels required when called: 4
 30580 ;; This function calls:
 30581 ;;		Nothing
 30582 ;; This function is called by:
 30583 ;;		_main
 30584 ;; This function uses a non-reentrant model
 30585 ;;
 30586                           
 30587                           	psect	text139
 30588  00DEF6                     __ptext139:
 30589                           	callstack 0
 30590  00DEF6                     _WDT_initialize:
 30591                           	callstack 26
 30592                           
 30593                           ; BSR set to: 0
 30594                           ;main.c: 58: WDTCONbits.SWDTEN = 1;
 30595                           
 30596                           ;incstack = 0
 30597  00DEF6  80C0               	bsf	192,0,c	;volatile
 30598                           
 30599                           ; BSR set to: 0
 30600  00DEF8  0012               	return		;funcret
 30601  00DEFA                     __end_of_WDT_initialize:
 30602                           	callstack 0
 30603                           
 30604 ;; *************** function _USBDeviceTasks *****************
 30605 ;; Defined at:
 30606 ;;		line 481 in file "usb/usb_device.c"
 30607 ;; Parameters:    Size  Location     Type
 30608 ;;		None
 30609 ;; Auto vars:     Size  Location     Type
 30610 ;;  i               1   42[COMRAM] unsigned char 
 30611 ;; Return value:  Size  Location     Type
 30612 ;;                  1    wreg      void 
 30613 ;; Registers used:
 30614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30615 ;; Tracked objects:
 30616 ;;		On entry : 0/0
 30617 ;;		On exit  : 0/0
 30618 ;;		Unchanged: 0/0
 30619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30624 ;;Total ram usage:        1 bytes
 30625 ;; Hardware stack levels used: 1
 30626 ;; Hardware stack levels required when called: 12
 30627 ;; This function calls:
 30628 ;;		_USBCtrlEPAllowStatusStage
 30629 ;;		_USBCtrlEPService
 30630 ;;		_USBDeviceInit
 30631 ;;		_USBIncrement1msInternalTimers
 30632 ;;		_USBStallHandler
 30633 ;;		_USBSuspend
 30634 ;;		_USBWakeFromSuspend
 30635 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30636 ;; This function is called by:
 30637 ;;		_main
 30638 ;; This function uses a non-reentrant model
 30639 ;;
 30640                           
 30641                           	psect	text140
 30642  008E96                     __ptext140:
 30643                           	callstack 0
 30644  008E96                     _USBDeviceTasks:
 30645                           	callstack 18
 30646                           
 30647                           ;usb_device.c: 548: };usb_device.c: 570: if(USBDeviceState == DETACHED_STATE)
 30648                           
 30649                           ;usb_device.c: 483: uint8_t i;;usb_device.c: 509: if (1 != 1)
 30650                           
 30651                           ; BSR set to: 0
 30652                           ;incstack = 0
 30653  008E96  0100               	movlb	0	; () banked
 30654  008E98  51FA               	movf	_USBDeviceState& (0+255),w,b
 30655  008E9A  A4D8               	btfss	status,2,c
 30656  008E9C  D012               	goto	l22065
 30657                           
 30658                           ; BSR set to: 0
 30659                           ;usb_device.c: 571: {;usb_device.c: 573: UCON = 0;
 30660  008E9E  0E00               	movlw	0
 30661  008EA0  6E65               	movwf	101,c	;volatile
 30662                           
 30663                           ;usb_device.c: 576: UIE = 0;
 30664  008EA2  0E00               	movlw	0
 30665  008EA4  010F               	movlb	15	; () banked
 30666  008EA6  6F36               	movwf	54,b	;volatile
 30667                           
 30668                           ;usb_device.c: 580: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 30669  008EA8  0E16               	movlw	22
 30670  008EAA  6F39               	movwf	57,b	;volatile
 30671  008EAC  0E9F               	movlw	159
 30672  008EAE  6F37               	movwf	55,b	;volatile
 30673  008EB0  0E7B               	movlw	123
 30674  008EB2  6F36               	movwf	54,b	;volatile
 30675                           
 30676                           ;usb_device.c: 583: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 30677  008EB4  D001               	goto	l2134
 30678  008EB6                     l2135:
 30679  008EB6  8665               	bsf	101,3,c	;volatile
 30680  008EB8                     l2134:
 30681  008EB8  A665               	btfss	101,3,c	;volatile
 30682  008EBA  D7FD               	goto	l2135
 30683                           
 30684                           ;usb_device.c: 586: USBDeviceState = ATTACHED_STATE;
 30685  008EBC  0E01               	movlw	1
 30686  008EBE  0100               	movlb	0	; () banked
 30687  008EC0  6FFA               	movwf	_USBDeviceState& (0+255),b
 30688  008EC2                     l22065:
 30689                           
 30690                           ; BSR set to: 0
 30691                           ;usb_device.c: 591: };usb_device.c: 594: if(USBDeviceState == ATTACHED_STATE)
 30692  008EC2  05FA               	decf	_USBDeviceState& (0+255),w,b
 30693  008EC4  B4D8               	btfsc	status,2,c
 30694                           
 30695                           ; BSR set to: 0
 30696                           ;usb_device.c: 595: {;usb_device.c: 605: if(!UCONbits.SE0)
 30697  008EC6  BA65               	btfsc	101,5,c	;volatile
 30698  008EC8  D00A               	goto	l22075
 30699                           
 30700                           ; BSR set to: 0
 30701                           ;usb_device.c: 606: {;usb_device.c: 612: {UIR = 0;};
 30702  008ECA  0E00               	movlw	0
 30703  008ECC  6E62               	movwf	98,c	;volatile
 30704                           
 30705                           ;usb_device.c: 616: UIE=0;
 30706  008ECE  0E00               	movlw	0
 30707  008ED0  010F               	movlb	15	; () banked
 30708  008ED2  6F36               	movwf	54,b	;volatile
 30709                           
 30710                           ; BSR set to: 15
 30711                           ;usb_device.c: 618: UIEbits.URSTIE = 1;
 30712  008ED4  8136               	bsf	54,0,b	;volatile
 30713                           
 30714                           ; BSR set to: 15
 30715                           ;usb_device.c: 619: UIEbits.IDLEIE = 1;
 30716  008ED6  8936               	bsf	54,4,b	;volatile
 30717                           
 30718                           ;usb_device.c: 620: USBDeviceState = POWERED_STATE;
 30719  008ED8  0E02               	movlw	2
 30720  008EDA  0100               	movlb	0	; () banked
 30721  008EDC  6FFA               	movwf	_USBDeviceState& (0+255),b
 30722  008EDE                     l22075:
 30723                           
 30724                           ; BSR set to: 0
 30725                           ;usb_device.c: 621: };usb_device.c: 622: };usb_device.c: 638: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 30726  008EDE  A462               	btfss	98,2,c	;volatile
 30727  008EE0  D006               	goto	l22083
 30728                           
 30729                           ; BSR set to: 0
 30730  008EE2  010F               	movlb	15	; () banked
 30731  008EE4  A536               	btfss	54,2,b	;volatile
 30732  008EE6  D003               	goto	l22083
 30733                           
 30734                           ; BSR set to: 15
 30735                           ;usb_device.c: 639: {;usb_device.c: 640: (UIR &= 0xFB);
 30736  008EE8  9462               	bcf	98,2,c	;volatile
 30737                           
 30738                           ; BSR set to: 15
 30739                           ;usb_device.c: 644: USBWakeFromSuspend();
 30740  008EEA  ECF3  F06A         	call	_USBWakeFromSuspend	;wreg free
 30741  008EEE                     l22083:
 30742                           
 30743                           ;usb_device.c: 646: };usb_device.c: 651: if(UCONbits.SUSPND==1)
 30744  008EEE  A265               	btfss	101,1,c	;volatile
 30745  008EF0  D002               	goto	l2140
 30746                           
 30747                           ;usb_device.c: 652: {;usb_device.c: 653: {PIR2bits.USBIF = 0;};
 30748  008EF2  98A1               	bcf	161,4,c	;volatile
 30749                           
 30750                           ;usb_device.c: 654: return;
 30751  008EF4  0012               	return	
 30752  008EF6                     l2140:
 30753                           
 30754                           ;usb_device.c: 655: };usb_device.c: 667: if(UIRbits.URSTIF && UIEbits.URSTIE)
 30755  008EF6  A062               	btfss	98,0,c	;volatile
 30756  008EF8  D008               	goto	l22095
 30757  008EFA  010F               	movlb	15	; () banked
 30758  008EFC  A136               	btfss	54,0,b	;volatile
 30759  008EFE  D005               	goto	l22095
 30760                           
 30761                           ; BSR set to: 15
 30762                           ;usb_device.c: 668: {;usb_device.c: 669: USBDeviceInit();
 30763  008F00  EC28  F04D         	call	_USBDeviceInit	;wreg free
 30764                           
 30765                           ; BSR set to: 0
 30766                           ;usb_device.c: 673: ;;usb_device.c: 675: USBDeviceState = DEFAULT_STATE;
 30767  008F04  0E04               	movlw	4
 30768  008F06  6FFA               	movwf	_USBDeviceState& (0+255),b
 30769                           
 30770                           ; BSR set to: 0
 30771                           ;usb_device.c: 685: (UIR &= 0xFE);
 30772  008F08  9062               	bcf	98,0,c	;volatile
 30773  008F0A                     l22095:
 30774                           
 30775                           ;usb_device.c: 686: };usb_device.c: 691: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 30776  008F0A  A862               	btfss	98,4,c	;volatile
 30777  008F0C  D004               	goto	l22101
 30778  008F0E  010F               	movlb	15	; () banked
 30779  008F10  B936               	btfsc	54,4,b	;volatile
 30780                           
 30781                           ; BSR set to: 15
 30782                           ;usb_device.c: 692: {;usb_device.c: 698: USBSuspend();
 30783  008F12  EC7C  F06C         	call	_USBSuspend	;wreg free
 30784  008F16                     l22101:
 30785                           
 30786                           ;usb_device.c: 700: };usb_device.c: 712: if(UIRbits.SOFIF)
 30787  008F16  AC62               	btfss	98,6,c	;volatile
 30788  008F18  D01B               	goto	l22119
 30789                           
 30790                           ;usb_device.c: 713: {;usb_device.c: 715: if(UIEbits.SOFIE)
 30791  008F1A  010F               	movlb	15	; () banked
 30792  008F1C  AD36               	btfss	54,6,b	;volatile
 30793  008F1E  D00E               	goto	l22107
 30794                           
 30795                           ; BSR set to: 15
 30796                           ;usb_device.c: 716: {;usb_device.c: 717: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVEN
      +                          T_SOF,0,1);
 30797  008F20  0E00               	movlw	0
 30798  008F22  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 30799  008F24  0E73               	movlw	115
 30800  008F26  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 30801  008F28  0E00               	movlw	0
 30802  008F2A  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 30803  008F2C  0E00               	movlw	0
 30804  008F2E  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 30805  008F30  0E00               	movlw	0
 30806  008F32  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 30807  008F34  0E01               	movlw	1
 30808  008F36  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 30809  008F38  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30810  008F3C                     l22107:
 30811                           
 30812                           ;usb_device.c: 718: };usb_device.c: 719: (UIR &= 0xBF);
 30813  008F3C  9C62               	bcf	98,6,c	;volatile
 30814                           
 30815                           ;usb_device.c: 722: USBIncrement1msInternalTimers();
 30816  008F3E  EC02  F06E         	call	_USBIncrement1msInternalTimers	;wreg free
 30817                           
 30818                           ; BSR set to: 0
 30819                           ;usb_device.c: 739: if(USBStatusStageTimeoutCounter != 0u)
 30820  008F42  51F1               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 30821  008F44  A4D8               	btfss	status,2,c
 30822                           
 30823                           ; BSR set to: 0
 30824                           ;usb_device.c: 740: {;usb_device.c: 741: USBStatusStageTimeoutCounter--;
 30825  008F46  07F1               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 30826                           
 30827                           ; BSR set to: 0
 30828                           ;usb_device.c: 742: };usb_device.c: 748: if(USBStatusStageTimeoutCounter == 0)
 30829  008F48  51F1               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 30830  008F4A  B4D8               	btfsc	status,2,c
 30831                           
 30832                           ; BSR set to: 0
 30833                           ;usb_device.c: 749: {;usb_device.c: 750: USBCtrlEPAllowStatusStage();
 30834  008F4C  EC2D  F058         	call	_USBCtrlEPAllowStatusStage	;wreg free
 30835  008F50                     l22119:
 30836                           
 30837                           ;usb_device.c: 751: };usb_device.c: 753: };usb_device.c: 755: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 30838  008F50  AA62               	btfss	98,5,c	;volatile
 30839  008F52  D004               	goto	l22125
 30840  008F54  010F               	movlb	15	; () banked
 30841  008F56  BB36               	btfsc	54,5,b	;volatile
 30842                           
 30843                           ; BSR set to: 15
 30844                           ;usb_device.c: 756: {;usb_device.c: 757: USBStallHandler();
 30845  008F58  EC0A  F069         	call	_USBStallHandler	;wreg free
 30846  008F5C                     l22125:
 30847                           
 30848                           ;usb_device.c: 758: };usb_device.c: 760: if(UIRbits.UERRIF && UIEbits.UERRIE)
 30849  008F5C  A262               	btfss	98,1,c	;volatile
 30850  008F5E  D012               	goto	l22133
 30851  008F60  010F               	movlb	15	; () banked
 30852  008F62  A336               	btfss	54,1,b	;volatile
 30853  008F64  D00F               	goto	l22133
 30854                           
 30855                           ; BSR set to: 15
 30856                           ;usb_device.c: 761: {;usb_device.c: 762: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVEN
      +                          T_BUS_ERROR,0,1);
 30857  008F66  0E7F               	movlw	127
 30858  008F68  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 30859  008F6A  681B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 30860  008F6C  0E00               	movlw	0
 30861  008F6E  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 30862  008F70  0E00               	movlw	0
 30863  008F72  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 30864  008F74  0E00               	movlw	0
 30865  008F76  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 30866  008F78  0E01               	movlw	1
 30867  008F7A  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 30868  008F7C  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30869                           
 30870                           ;usb_device.c: 763: {UEIR = 0;};
 30871  008F80  0E00               	movlw	0
 30872  008F82  6E63               	movwf	99,c	;volatile
 30873  008F84                     l22133:
 30874                           
 30875                           ;usb_device.c: 771: };usb_device.c: 778: if(USBDeviceState < DEFAULT_STATE)
 30876  008F84  0E04               	movlw	4
 30877  008F86  0100               	movlb	0	; () banked
 30878  008F88  61FA               	cpfslt	_USBDeviceState& (0+255),b
 30879  008F8A  D002               	goto	l2149
 30880                           
 30881                           ; BSR set to: 0
 30882                           ;usb_device.c: 779: {;usb_device.c: 780: {PIR2bits.USBIF = 0;};
 30883  008F8C  98A1               	bcf	161,4,c	;volatile
 30884                           
 30885                           ;usb_device.c: 781: return;
 30886  008F8E  0012               	return	
 30887  008F90                     l2149:
 30888                           
 30889                           ; BSR set to: 0
 30890                           ;usb_device.c: 782: };usb_device.c: 787: if(UIEbits.TRNIE)
 30891  008F90  010F               	movlb	15	; () banked
 30892  008F92  A736               	btfss	54,3,b	;volatile
 30893  008F94  D035               	goto	u26190
 30894                           
 30895                           ; BSR set to: 15
 30896                           ;usb_device.c: 788: {;usb_device.c: 789: for(i = 0; i < 4u; i++)
 30897  008F96  0E00               	movlw	0
 30898  008F98  6E2B               	movwf	USBDeviceTasks@i^0,c
 30899  008F9A                     l2151:
 30900                           
 30901                           ;usb_device.c: 790: {;usb_device.c: 791: if(UIRbits.TRNIF)
 30902  008F9A  A662               	btfss	98,3,c	;volatile
 30903  008F9C  D031               	goto	u26190
 30904                           
 30905                           ;usb_device.c: 792: {;usb_device.c: 794: USTATcopy.Val = USTAT;
 30906  008F9E  CF64 F050          	movff	3940,_USTATcopy	;volatile
 30907                           
 30908                           ;usb_device.c: 795: endpoint_number = USTATcopy.endpoint_number;
 30909  008FA2  3050               	rrcf	_USTATcopy^0,w,c
 30910  008FA4  32E8               	rrcf	wreg,f,c
 30911  008FA6  32E8               	rrcf	wreg,f,c
 30912  008FA8  0B0F               	andlw	15
 30913  008FAA  0100               	movlb	0	; () banked
 30914  008FAC  6FF3               	movwf	_endpoint_number& (0+255),b
 30915                           
 30916                           ; BSR set to: 0
 30917                           ;usb_device.c: 797: (UIR &= 0xF7);
 30918  008FAE  9662               	bcf	98,3,c	;volatile
 30919                           
 30920                           ; BSR set to: 0
 30921                           ;usb_device.c: 802: if(USTATcopy.direction == 0)
 30922  008FB0  B450               	btfsc	_USTATcopy^0,2,c
 30923  008FB2  D006               	goto	l22153
 30924                           
 30925                           ; BSR set to: 0
 30926                           ;usb_device.c: 803: {;usb_device.c: 804: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 30927  008FB4  0E48               	movlw	low _ep_data_out
 30928  008FB6  25F3               	addwf	_endpoint_number& (0+255),w,b
 30929  008FB8  6ED9               	movwf	fsr2l,c
 30930  008FBA  6ADA               	clrf	fsr2h,c
 30931  008FBC  0E01               	movlw	high _ep_data_out
 30932  008FBE  D005               	goto	L76
 30933  008FC0                     l22153:
 30934                           
 30935                           ; BSR set to: 0
 30936                           ;usb_device.c: 806: else;usb_device.c: 807: {;usb_device.c: 808: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 30937  008FC0  0E4B               	movlw	low _ep_data_in
 30938  008FC2  25F3               	addwf	_endpoint_number& (0+255),w,b
 30939  008FC4  6ED9               	movwf	fsr2l,c
 30940  008FC6  6ADA               	clrf	fsr2h,c
 30941  008FC8  0E01               	movlw	high _ep_data_in
 30942  008FCA                     L76:
 30943  008FCA  22DA               	addwfc	fsr2h,f,c
 30944  008FCC  0101               	movlb	1	; () banked
 30945  008FCE  70DF               	btg	indf2,0,c
 30946                           
 30947                           ; BSR set to: 1
 30948                           ;usb_device.c: 809: };usb_device.c: 814: if(endpoint_number == 0)
 30949  008FD0  0100               	movlb	0	; () banked
 30950  008FD2  51F3               	movf	_endpoint_number& (0+255),w,b
 30951  008FD4  A4D8               	btfss	status,2,c
 30952  008FD6  D003               	goto	l22159
 30953                           
 30954                           ; BSR set to: 0
 30955                           ;usb_device.c: 815: {;usb_device.c: 816: USBCtrlEPService();
 30956  008FD8  ECEE  F05C         	call	_USBCtrlEPService	;wreg free
 30957                           
 30958                           ;usb_device.c: 817: }
 30959  008FDC  D00D               	goto	l22161
 30960  008FDE                     l22159:
 30961                           
 30962                           ; BSR set to: 0
 30963                           ;usb_device.c: 818: else;usb_device.c: 819: {;usb_device.c: 820: USER_USB_CALLBACK_EVENT
      +                          _HANDLER((USB_EVENT)EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 30964  008FDE  0E00               	movlw	0
 30965  008FE0  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 30966  008FE2  0E72               	movlw	114
 30967  008FE4  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 30968  008FE6  0E50               	movlw	low _USTATcopy
 30969  008FE8  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 30970  008FEA  6A1E               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 30971  008FEC  0E00               	movlw	0
 30972  008FEE  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 30973  008FF0  0E00               	movlw	0
 30974  008FF2  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 30975  008FF4  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30976  008FF8                     l22161:
 30977  008FF8  2A2B               	incf	USBDeviceTasks@i^0,f,c
 30978  008FFA  0E03               	movlw	3
 30979  008FFC  642B               	cpfsgt	USBDeviceTasks@i^0,c
 30980  008FFE  D7CD               	goto	l2151
 30981  009000                     u26190:
 30982                           
 30983                           ;usb_device.c: 826: };usb_device.c: 827: };usb_device.c: 828: };usb_device.c: 830: {PIR2
      +                          bits.USBIF = 0;};
 30984  009000  98A1               	bcf	161,4,c	;volatile
 30985  009002  0012               	return		;funcret
 30986  009004                     __end_of_USBDeviceTasks:
 30987                           	callstack 0
 30988                           
 30989 ;; *************** function _USBWakeFromSuspend *****************
 30990 ;; Defined at:
 30991 ;;		line 2310 in file "usb/usb_device.c"
 30992 ;; Parameters:    Size  Location     Type
 30993 ;;		None
 30994 ;; Auto vars:     Size  Location     Type
 30995 ;;		None
 30996 ;; Return value:  Size  Location     Type
 30997 ;;                  1    wreg      void 
 30998 ;; Registers used:
 30999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31000 ;; Tracked objects:
 31001 ;;		On entry : 3F/F
 31002 ;;		On exit  : 3F/0
 31003 ;;		Unchanged: 0/0
 31004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31009 ;;Total ram usage:        0 bytes
 31010 ;; Hardware stack levels used: 1
 31011 ;; Hardware stack levels required when called: 8
 31012 ;; This function calls:
 31013 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31014 ;; This function is called by:
 31015 ;;		_USBDeviceTasks
 31016 ;; This function uses a non-reentrant model
 31017 ;;
 31018                           
 31019                           	psect	text141
 31020  00D5E6                     __ptext141:
 31021                           	callstack 0
 31022  00D5E6                     _USBWakeFromSuspend:
 31023                           	callstack 21
 31024                           
 31025                           ; BSR set to: 15
 31026                           ;usb_device.c: 2312: USBBusIsSuspended = 0;
 31027                           
 31028                           ;incstack = 0
 31029  00D5E6  0E00               	movlw	0
 31030  00D5E8  0100               	movlb	0	; () banked
 31031  00D5EA  6FF4               	movwf	_USBBusIsSuspended& (0+255),b
 31032                           
 31033                           ; BSR set to: 0
 31034                           ;usb_device.c: 2318: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_RESUME,0,0);
 31035  00D5EC  0E00               	movlw	0
 31036  00D5EE  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 31037  00D5F0  0E74               	movlw	116
 31038  00D5F2  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 31039  00D5F4  0E00               	movlw	0
 31040  00D5F6  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 31041  00D5F8  0E00               	movlw	0
 31042  00D5FA  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 31043  00D5FC  0E00               	movlw	0
 31044  00D5FE  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 31045  00D600  0E00               	movlw	0
 31046  00D602  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 31047  00D604  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31048                           
 31049                           ;usb_device.c: 2325: UCONbits.SUSPND = 0;
 31050  00D608  9265               	bcf	101,1,c	;volatile
 31051                           
 31052                           ;usb_device.c: 2330: UIEbits.ACTVIE = 0;
 31053  00D60A  010F               	movlb	15	; () banked
 31054  00D60C  9536               	bcf	54,2,b	;volatile
 31055                           
 31056                           ;usb_device.c: 2348: while(UIRbits.ACTVIF)
 31057  00D60E  D001               	goto	l16135
 31058  00D610                     l16133:
 31059                           
 31060                           ; BSR set to: 15
 31061                           ;usb_device.c: 2350: {;usb_device.c: 2351: (UIR &= 0xFB);
 31062  00D610  9462               	bcf	98,2,c	;volatile
 31063  00D612                     l16135:
 31064                           
 31065                           ; BSR set to: 15
 31066  00D612  B462               	btfsc	98,2,c	;volatile
 31067  00D614  D7FD               	goto	l16133
 31068                           
 31069                           ; BSR set to: 15
 31070                           ;usb_device.c: 2352: };usb_device.c: 2354: USBTicksSinceSuspendEnd = 0;
 31071  00D616  0E00               	movlw	0
 31072  00D618  0100               	movlb	0	; () banked
 31073  00D61A  6FEC               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 31074                           
 31075                           ; BSR set to: 0
 31076  00D61C  0012               	return		;funcret
 31077  00D61E                     __end_of_USBWakeFromSuspend:
 31078                           	callstack 0
 31079                           
 31080 ;; *************** function _USBSuspend *****************
 31081 ;; Defined at:
 31082 ;;		line 2252 in file "usb/usb_device.c"
 31083 ;; Parameters:    Size  Location     Type
 31084 ;;		None
 31085 ;; Auto vars:     Size  Location     Type
 31086 ;;		None
 31087 ;; Return value:  Size  Location     Type
 31088 ;;                  1    wreg      void 
 31089 ;; Registers used:
 31090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31091 ;; Tracked objects:
 31092 ;;		On entry : 3F/F
 31093 ;;		On exit  : 0/0
 31094 ;;		Unchanged: 0/0
 31095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31100 ;;Total ram usage:        0 bytes
 31101 ;; Hardware stack levels used: 1
 31102 ;; Hardware stack levels required when called: 8
 31103 ;; This function calls:
 31104 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31105 ;; This function is called by:
 31106 ;;		_USBDeviceTasks
 31107 ;; This function uses a non-reentrant model
 31108 ;;
 31109                           
 31110                           	psect	text142
 31111  00D8F8                     __ptext142:
 31112                           	callstack 0
 31113  00D8F8                     _USBSuspend:
 31114                           	callstack 21
 31115                           
 31116                           ; BSR set to: 15
 31117                           ;usb_device.c: 2277: UIEbits.ACTVIE = 1;
 31118                           
 31119                           ; BSR set to: 0
 31120                           ;incstack = 0
 31121  00D8F8  8536               	bsf	54,2,b	;volatile
 31122                           
 31123                           ; BSR set to: 15
 31124                           ;usb_device.c: 2278: (UIR &= 0xEF);
 31125  00D8FA  9862               	bcf	98,4,c	;volatile
 31126                           
 31127                           ; BSR set to: 15
 31128                           ;usb_device.c: 2281: UCONbits.SUSPND = 1;
 31129  00D8FC  8265               	bsf	101,1,c	;volatile
 31130                           
 31131                           ; BSR set to: 15
 31132                           ;usb_device.c: 2284: USBBusIsSuspended = 1;
 31133  00D8FE  0E01               	movlw	1
 31134  00D900  0100               	movlb	0	; () banked
 31135  00D902  6FF4               	movwf	_USBBusIsSuspended& (0+255),b
 31136                           
 31137                           ; BSR set to: 0
 31138                           ;usb_device.c: 2285: USBTicksSinceSuspendEnd = 0;
 31139  00D904  0E00               	movlw	0
 31140  00D906  6FEC               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 31141                           
 31142                           ; BSR set to: 0
 31143                           ;usb_device.c: 2292: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SUSPEND,0,0);
 31144  00D908  0E00               	movlw	0
 31145  00D90A  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 31146  00D90C  0E75               	movlw	117
 31147  00D90E  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 31148  00D910  0E00               	movlw	0
 31149  00D912  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 31150  00D914  0E00               	movlw	0
 31151  00D916  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 31152  00D918  0E00               	movlw	0
 31153  00D91A  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 31154  00D91C  0E00               	movlw	0
 31155  00D91E  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 31156  00D920  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31157  00D924  0012               	return		;funcret
 31158  00D926                     __end_of_USBSuspend:
 31159                           	callstack 0
 31160                           
 31161 ;; *************** function _USBStallHandler *****************
 31162 ;; Defined at:
 31163 ;;		line 2209 in file "usb/usb_device.c"
 31164 ;; Parameters:    Size  Location     Type
 31165 ;;		None
 31166 ;; Auto vars:     Size  Location     Type
 31167 ;;		None
 31168 ;; Return value:  Size  Location     Type
 31169 ;;                  1    wreg      void 
 31170 ;; Registers used:
 31171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31172 ;; Tracked objects:
 31173 ;;		On entry : 3F/F
 31174 ;;		On exit  : 3F/F
 31175 ;;		Unchanged: 0/0
 31176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31181 ;;Total ram usage:        1 bytes
 31182 ;; Hardware stack levels used: 1
 31183 ;; Hardware stack levels required when called: 4
 31184 ;; This function calls:
 31185 ;;		Nothing
 31186 ;; This function is called by:
 31187 ;;		_USBDeviceTasks
 31188 ;; This function uses a non-reentrant model
 31189 ;;
 31190                           
 31191                           	psect	text143
 31192  00D214                     __ptext143:
 31193                           	callstack 0
 31194  00D214                     _USBStallHandler:
 31195                           	callstack 25
 31196                           
 31197                           ; BSR set to: 15
 31198                           ;usb_device.c: 2221: if(UEP0bits.EPSTALL == 1)
 31199                           
 31200                           ;incstack = 0
 31201  00D214  A126               	btfss	38,0,b	;volatile
 31202  00D216  D01D               	goto	l2279
 31203                           
 31204                           ; BSR set to: 15
 31205                           ;usb_device.c: 2222: {;usb_device.c: 2224: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 31206  00D218  C04B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31207  00D21C  C04C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31208  00D220  0E80               	movlw	128
 31209  00D222  18DE               	xorwf	postinc2,w,c
 31210  00D224  A4D8               	btfss	status,2,c
 31211  00D226  D014               	goto	l16171
 31212                           
 31213                           ; BSR set to: 15
 31214  00D228  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 31215  00D22C  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31216  00D230  0E84               	movlw	132
 31217  00D232  18DE               	xorwf	postinc2,w,c
 31218  00D234  A4D8               	btfss	status,2,c
 31219  00D236  D00C               	goto	l16171
 31220                           
 31221                           ; BSR set to: 15
 31222                           ;usb_device.c: 2225: {;usb_device.c: 2227: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 31223  00D238  C04B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31224  00D23C  C04C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31225  00D240  0E0C               	movlw	12
 31226  00D242  6EDF               	movwf	indf2,c
 31227                           
 31228                           ; BSR set to: 15
 31229                           ;usb_device.c: 2228: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 31230  00D244  C04B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31231  00D248  C04C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31232  00D24C  0E00               	movlw	0
 31233  00D24E  8EDB               	bsf	plusw2,7,c
 31234  00D250                     l16171:
 31235                           
 31236                           ; BSR set to: 15
 31237                           ;usb_device.c: 2229: };usb_device.c: 2230: UEP0bits.EPSTALL = 0;
 31238  00D250  9126               	bcf	38,0,b	;volatile
 31239  00D252                     l2279:
 31240                           
 31241                           ; BSR set to: 15
 31242                           ;usb_device.c: 2231: };usb_device.c: 2233: (UIR &= 0xDF);
 31243  00D252  9A62               	bcf	98,5,c	;volatile
 31244                           
 31245                           ; BSR set to: 15
 31246  00D254  0012               	return		;funcret
 31247  00D256                     __end_of_USBStallHandler:
 31248                           	callstack 0
 31249                           
 31250 ;; *************** function _USBIncrement1msInternalTimers *****************
 31251 ;; Defined at:
 31252 ;;		line 2998 in file "usb/usb_device.c"
 31253 ;; Parameters:    Size  Location     Type
 31254 ;;		None
 31255 ;; Auto vars:     Size  Location     Type
 31256 ;;		None
 31257 ;; Return value:  Size  Location     Type
 31258 ;;                  1    wreg      void 
 31259 ;; Registers used:
 31260 ;;		wreg, status,2, status,0
 31261 ;; Tracked objects:
 31262 ;;		On entry : 0/F
 31263 ;;		On exit  : 3F/0
 31264 ;;		Unchanged: 0/0
 31265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31270 ;;Total ram usage:        0 bytes
 31271 ;; Hardware stack levels used: 1
 31272 ;; Hardware stack levels required when called: 4
 31273 ;; This function calls:
 31274 ;;		Nothing
 31275 ;; This function is called by:
 31276 ;;		_USBDeviceTasks
 31277 ;; This function uses a non-reentrant model
 31278 ;;
 31279                           
 31280                           	psect	text144
 31281  00DC04                     __ptext144:
 31282                           	callstack 0
 31283  00DC04                     _USBIncrement1msInternalTimers:
 31284                           	callstack 25
 31285                           
 31286                           ;usb_device.c: 3006: USB1msTickCount++;
 31287                           
 31288                           ; BSR set to: 15
 31289                           ;incstack = 0
 31290  00DC04  0E01               	movlw	1
 31291  00DC06  0102               	movlb	2	; () banked
 31292  00DC08  2704               	addwf	_USB1msTickCount& (0+255),f,b
 31293  00DC0A  0E00               	movlw	0
 31294  00DC0C  2305               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 31295  00DC0E  2306               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 31296  00DC10  2307               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 31297                           
 31298                           ; BSR set to: 2
 31299                           ;usb_device.c: 3007: if(USBBusIsSuspended == 0)
 31300  00DC12  0100               	movlb	0	; () banked
 31301  00DC14  51F4               	movf	_USBBusIsSuspended& (0+255),w,b
 31302  00DC16  A4D8               	btfss	status,2,c
 31303  00DC18  0012               	return	
 31304                           
 31305                           ; BSR set to: 0
 31306                           ;usb_device.c: 3008: {;usb_device.c: 3009: USBTicksSinceSuspendEnd++;
 31307  00DC1A  2BEC               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 31308                           
 31309                           ; BSR set to: 0
 31310                           ;usb_device.c: 3011: if(USBTicksSinceSuspendEnd == 0)
 31311  00DC1C  51EC               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 31312  00DC1E  A4D8               	btfss	status,2,c
 31313  00DC20  0012               	return	
 31314                           
 31315                           ; BSR set to: 0
 31316                           ;usb_device.c: 3012: {;usb_device.c: 3013: USBTicksSinceSuspendEnd = 255;
 31317  00DC22  69EC               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 31318                           
 31319                           ; BSR set to: 0
 31320  00DC24  0012               	return		;funcret
 31321  00DC26                     __end_of_USBIncrement1msInternalTimers:
 31322                           	callstack 0
 31323                           
 31324 ;; *************** function _USBDeviceInit *****************
 31325 ;; Defined at:
 31326 ;;		line 281 in file "usb/usb_device.c"
 31327 ;; Parameters:    Size  Location     Type
 31328 ;;		None
 31329 ;; Auto vars:     Size  Location     Type
 31330 ;;  i               1   28[COMRAM] unsigned char 
 31331 ;; Return value:  Size  Location     Type
 31332 ;;                  1    wreg      void 
 31333 ;; Registers used:
 31334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31335 ;; Tracked objects:
 31336 ;;		On entry : 0/0
 31337 ;;		On exit  : 3F/0
 31338 ;;		Unchanged: 0/0
 31339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31344 ;;Total ram usage:        1 bytes
 31345 ;; Hardware stack levels used: 1
 31346 ;; Hardware stack levels required when called: 5
 31347 ;; This function calls:
 31348 ;;		_memset
 31349 ;; This function is called by:
 31350 ;;		_main
 31351 ;;		_USBDeviceTasks
 31352 ;; This function uses a non-reentrant model
 31353 ;;
 31354                           
 31355                           	psect	text145
 31356  009A50                     __ptext145:
 31357                           	callstack 0
 31358  009A50                     _USBDeviceInit:
 31359                           	callstack 24
 31360                           
 31361                           ;usb_device.c: 283: uint8_t i;;usb_device.c: 285: {PIE2bits.USBIE = 0;};
 31362                           
 31363                           ; BSR set to: 0
 31364                           ;incstack = 0
 31365  009A50  98A0               	bcf	160,4,c	;volatile
 31366                           
 31367                           ;usb_device.c: 289: ;;usb_device.c: 292: {UEIR = 0;};
 31368  009A52  0E00               	movlw	0
 31369  009A54  6E63               	movwf	99,c	;volatile
 31370                           
 31371                           ;usb_device.c: 295: {UIR = 0;};
 31372  009A56  0E00               	movlw	0
 31373  009A58  6E62               	movwf	98,c	;volatile
 31374                           
 31375                           ;usb_device.c: 298: UEP0 = 0;
 31376  009A5A  0E00               	movlw	0
 31377  009A5C  010F               	movlb	15	; () banked
 31378  009A5E  6F26               	movwf	38,b	;volatile
 31379                           
 31380                           ; BSR set to: 15
 31381                           ;usb_device.c: 300: memset((void*)&UEP1,0x00,(2));;
 31382  009A60  0E27               	movlw	39
 31383  009A62  6E15               	movwf	memset@p1^0,c
 31384  009A64  0E0F               	movlw	15
 31385  009A66  6E16               	movwf	(memset@p1+1)^0,c
 31386  009A68  0E00               	movlw	0
 31387  009A6A  6E18               	movwf	(memset@c+1)^0,c
 31388  009A6C  0E00               	movlw	0
 31389  009A6E  6E17               	movwf	memset@c^0,c
 31390  009A70  0E00               	movlw	0
 31391  009A72  6E1A               	movwf	(memset@n+1)^0,c
 31392  009A74  0E02               	movlw	2
 31393  009A76  6E19               	movwf	memset@n^0,c
 31394  009A78  ECD6  F06C         	call	_memset	;wreg free
 31395                           
 31396                           ;usb_device.c: 302: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 31397  009A7C  0E16               	movlw	22
 31398  009A7E  010F               	movlb	15	; () banked
 31399  009A80  6F39               	movwf	57,b	;volatile
 31400                           
 31401                           ; BSR set to: 15
 31402  009A82  0E9F               	movlw	159
 31403  009A84  6F37               	movwf	55,b	;volatile
 31404                           
 31405                           ; BSR set to: 15
 31406  009A86  0E7B               	movlw	123
 31407  009A88  6F36               	movwf	54,b	;volatile
 31408                           
 31409                           ; BSR set to: 15
 31410                           ;usb_device.c: 305: ;;usb_device.c: 308: ;;usb_device.c: 311: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 31411  009A8A  0E00               	movlw	0
 31412  009A8C  6E1D               	movwf	USBDeviceInit@i^0,c
 31413  009A8E                     l16067:
 31414                           
 31415                           ;usb_device.c: 312: {;usb_device.c: 313: BDT[i].Val = 0x00;
 31416  009A8E  501D               	movf	USBDeviceInit@i^0,w,c
 31417  009A90  0D04               	mullw	4
 31418  009A92  0E00               	movlw	0
 31419  009A94  24F3               	addwf	243,w,c
 31420  009A96  6ED9               	movwf	fsr2l,c
 31421  009A98  0E04               	movlw	4
 31422  009A9A  20F4               	addwfc	prodh,w,c
 31423  009A9C  6EDA               	movwf	fsr2h,c
 31424  009A9E  6ADE               	clrf	postinc2,c
 31425  009AA0  6ADE               	clrf	postinc2,c
 31426  009AA2  6ADE               	clrf	postinc2,c
 31427  009AA4  6ADD               	clrf	postdec2,c
 31428  009AA6  2A1D               	incf	USBDeviceInit@i^0,f,c
 31429  009AA8  0E0B               	movlw	11
 31430  009AAA  641D               	cpfsgt	USBDeviceInit@i^0,c
 31431  009AAC  D7F0               	goto	l16067
 31432                           
 31433                           ;usb_device.c: 314: };usb_device.c: 317: UCONbits.PPBRST = 1;
 31434  009AAE  8C65               	bsf	101,6,c	;volatile
 31435                           
 31436                           ;usb_device.c: 320: UADDR = 0x00;
 31437  009AB0  0E00               	movlw	0
 31438  009AB2  010F               	movlb	15	; () banked
 31439  009AB4  6F38               	movwf	56,b	;volatile
 31440                           
 31441                           ; BSR set to: 15
 31442                           ;usb_device.c: 323: UCONbits.PKTDIS = 0;
 31443  009AB6  9865               	bcf	101,4,c	;volatile
 31444                           
 31445                           ; BSR set to: 15
 31446                           ;usb_device.c: 326: UCONbits.PPBRST = 0;
 31447  009AB8  9C65               	bcf	101,6,c	;volatile
 31448  009ABA                     l16079:
 31449                           
 31450                           ;usb_device.c: 330: {;usb_device.c: 331: (UIR &= 0xF7);
 31451  009ABA  9662               	bcf	98,3,c	;volatile
 31452                           
 31453                           ;usb_device.c: 333: inPipes[0].info.Val = 0;
 31454  009ABC  0E00               	movlw	0
 31455  009ABE  6E46               	movwf	(_inPipes+3)^0,c
 31456                           
 31457                           ;usb_device.c: 334: outPipes[0].info.Val = 0;
 31458  009AC0  0E00               	movlw	0
 31459  009AC2  0101               	movlb	1	; () banked
 31460  009AC4  6F33               	movwf	(_outPipes+3)& (0+255),b
 31461                           
 31462                           ; BSR set to: 1
 31463                           ;usb_device.c: 335: outPipes[0].wCount.Val = 0;
 31464  009AC6  0E00               	movlw	0
 31465  009AC8  6F35               	movwf	(_outPipes+5)& (0+255),b
 31466  009ACA  0E00               	movlw	0
 31467  009ACC  6F34               	movwf	(_outPipes+4)& (0+255),b
 31468                           
 31469                           ; BSR set to: 1
 31470                           ;usb_device.c: 336: }while(UIRbits.TRNIF == 1);
 31471  009ACE  B662               	btfsc	98,3,c	;volatile
 31472  009AD0  D7F4               	goto	l16079
 31473                           
 31474                           ; BSR set to: 1
 31475                           ;usb_device.c: 340: USBStatusStageEnabledFlag1 = 1;
 31476  009AD2  0E01               	movlw	1
 31477  009AD4  0100               	movlb	0	; () banked
 31478  009AD6  6FF0               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31479                           
 31480                           ;usb_device.c: 341: USBStatusStageEnabledFlag2 = 1;
 31481  009AD8  0E01               	movlw	1
 31482  009ADA  6FEF               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31483                           
 31484                           ;usb_device.c: 343: USBDeferINDataStagePackets = 0;
 31485  009ADC  0E00               	movlw	0
 31486  009ADE  6FEE               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 31487                           
 31488                           ;usb_device.c: 344: USBDeferOUTDataStagePackets = 0;
 31489  009AE0  0E00               	movlw	0
 31490  009AE2  6FED               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 31491                           
 31492                           ;usb_device.c: 345: USBBusIsSuspended = 0;
 31493  009AE4  0E00               	movlw	0
 31494  009AE6  6FF4               	movwf	_USBBusIsSuspended& (0+255),b
 31495                           
 31496                           ;usb_device.c: 349: for(i = 0; i < (uint8_t)(2+1u); i++)
 31497  009AE8  0E00               	movlw	0
 31498  009AEA  6E1D               	movwf	USBDeviceInit@i^0,c
 31499  009AEC                     l16095:
 31500                           
 31501                           ;usb_device.c: 350: {;usb_device.c: 351: pBDTEntryIn[i] = 0u;
 31502  009AEC  501D               	movf	USBDeviceInit@i^0,w,c
 31503  009AEE  0D02               	mullw	2
 31504  009AF0  50F3               	movf	243,w,c
 31505  009AF2  0FD8               	addlw	low _pBDTEntryIn
 31506  009AF4  6ED9               	movwf	fsr2l,c
 31507  009AF6  6ADA               	clrf	fsr2h,c
 31508  009AF8  0E00               	movlw	0
 31509  009AFA  6EDE               	movwf	postinc2,c
 31510  009AFC  0E00               	movlw	0
 31511  009AFE  6EDD               	movwf	postdec2,c
 31512                           
 31513                           ;usb_device.c: 352: pBDTEntryOut[i] = 0u;
 31514  009B00  501D               	movf	USBDeviceInit@i^0,w,c
 31515  009B02  0D02               	mullw	2
 31516  009B04  0E38               	movlw	low _pBDTEntryOut
 31517  009B06  24F3               	addwf	243,w,c
 31518  009B08  6ED9               	movwf	fsr2l,c
 31519  009B0A  0E01               	movlw	high _pBDTEntryOut
 31520  009B0C  20F4               	addwfc	prodh,w,c
 31521  009B0E  6EDA               	movwf	fsr2h,c
 31522  009B10  0E00               	movlw	0
 31523  009B12  6EDE               	movwf	postinc2,c
 31524  009B14  0E00               	movlw	0
 31525  009B16  6EDD               	movwf	postdec2,c
 31526                           
 31527                           ;usb_device.c: 353: ep_data_in[i].Val = 0u;
 31528  009B18  0E4B               	movlw	low _ep_data_in
 31529  009B1A  241D               	addwf	USBDeviceInit@i^0,w,c
 31530  009B1C  6ED9               	movwf	fsr2l,c
 31531  009B1E  6ADA               	clrf	fsr2h,c
 31532  009B20  0E01               	movlw	high _ep_data_in
 31533  009B22  22DA               	addwfc	fsr2h,f,c
 31534  009B24  0E00               	movlw	0
 31535  009B26  6EDF               	movwf	indf2,c
 31536                           
 31537                           ;usb_device.c: 354: ep_data_out[i].Val = 0u;
 31538  009B28  0E48               	movlw	low _ep_data_out
 31539  009B2A  241D               	addwf	USBDeviceInit@i^0,w,c
 31540  009B2C  6ED9               	movwf	fsr2l,c
 31541  009B2E  6ADA               	clrf	fsr2h,c
 31542  009B30  0E01               	movlw	high _ep_data_out
 31543  009B32  22DA               	addwfc	fsr2h,f,c
 31544  009B34  0E00               	movlw	0
 31545  009B36  6EDF               	movwf	indf2,c
 31546  009B38  2A1D               	incf	USBDeviceInit@i^0,f,c
 31547  009B3A  0E02               	movlw	2
 31548  009B3C  641D               	cpfsgt	USBDeviceInit@i^0,c
 31549  009B3E  D7D6               	goto	l16095
 31550                           
 31551                           ;usb_device.c: 355: };usb_device.c: 358: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31552  009B40  0E08               	movlw	8
 31553  009B42  0100               	movlb	0	; () banked
 31554  009B44  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 31555  009B46  0E04               	movlw	4
 31556  009B48  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31557                           
 31558                           ; BSR set to: 0
 31559                           ;usb_device.c: 360: UEP0 = 0x06|0x10;
 31560  009B4A  0E16               	movlw	22
 31561  009B4C  010F               	movlb	15	; () banked
 31562  009B4E  6F26               	movwf	38,b	;volatile
 31563                           
 31564                           ; BSR set to: 15
 31565                           ;usb_device.c: 362: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31566  009B50  0E04               	movlw	4
 31567  009B52  0104               	movlb	4	; () banked
 31568  009B54  6F03               	movwf	3,b	;volatile
 31569  009B56  0E30               	movlw	48
 31570  009B58  6F02               	movwf	2,b	;volatile
 31571                           
 31572                           ; BSR set to: 4
 31573                           ;usb_device.c: 363: BDT[0].CNT = 8;
 31574  009B5A  0E08               	movlw	8
 31575  009B5C  6F01               	movwf	1,b	;volatile
 31576                           
 31577                           ; BSR set to: 4
 31578                           ;usb_device.c: 364: BDT[0].STAT.Val = 0x00|0x04;
 31579  009B5E  0E04               	movlw	4
 31580  009B60  6F00               	movwf	0,b	;volatile
 31581                           
 31582                           ; BSR set to: 4
 31583                           ;usb_device.c: 365: BDT[0].STAT.Val |= 0x80;
 31584  009B62  8F00               	bsf	0,7,b	;volatile
 31585                           
 31586                           ; BSR set to: 4
 31587                           ;usb_device.c: 368: USBActiveConfiguration = 0;
 31588  009B64  0E00               	movlw	0
 31589  009B66  0100               	movlb	0	; () banked
 31590  009B68  6FFD               	movwf	_USBActiveConfiguration& (0+255),b
 31591                           
 31592                           ; BSR set to: 0
 31593                           ;usb_device.c: 370: USB1msTickCount = 0;
 31594  009B6A  0E00               	movlw	0
 31595  009B6C  0102               	movlb	2	; () banked
 31596  009B6E  6F04               	movwf	_USB1msTickCount& (0+255),b
 31597  009B70  0E00               	movlw	0
 31598  009B72  6F05               	movwf	(_USB1msTickCount+1)& (0+255),b
 31599  009B74  0E00               	movlw	0
 31600  009B76  6F06               	movwf	(_USB1msTickCount+2)& (0+255),b
 31601  009B78  0E00               	movlw	0
 31602  009B7A  6F07               	movwf	(_USB1msTickCount+3)& (0+255),b
 31603                           
 31604                           ; BSR set to: 2
 31605                           ;usb_device.c: 371: USBTicksSinceSuspendEnd = 0;
 31606  009B7C  0E00               	movlw	0
 31607  009B7E  0100               	movlb	0	; () banked
 31608  009B80  6FEC               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 31609                           
 31610                           ; BSR set to: 0
 31611                           ;usb_device.c: 374: USBDeviceState = DETACHED_STATE;
 31612  009B82  0E00               	movlw	0
 31613  009B84  6FFA               	movwf	_USBDeviceState& (0+255),b
 31614                           
 31615                           ; BSR set to: 0
 31616  009B86  0012               	return		;funcret
 31617  009B88                     __end_of_USBDeviceInit:
 31618                           	callstack 0
 31619                           
 31620 ;; *************** function _USBCtrlEPService *****************
 31621 ;; Defined at:
 31622 ;;		line 2379 in file "usb/usb_device.c"
 31623 ;; Parameters:    Size  Location     Type
 31624 ;;		None
 31625 ;; Auto vars:     Size  Location     Type
 31626 ;;		None
 31627 ;; Return value:  Size  Location     Type
 31628 ;;                  1    wreg      void 
 31629 ;; Registers used:
 31630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31631 ;; Tracked objects:
 31632 ;;		On entry : 3F/0
 31633 ;;		On exit  : 3E/0
 31634 ;;		Unchanged: 0/0
 31635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31640 ;;Total ram usage:        1 bytes
 31641 ;; Hardware stack levels used: 1
 31642 ;; Hardware stack levels required when called: 11
 31643 ;; This function calls:
 31644 ;;		_USBCtrlTrfInHandler
 31645 ;;		_USBCtrlTrfOutHandler
 31646 ;;		_USBCtrlTrfSetupHandler
 31647 ;;		_memcpy
 31648 ;; This function is called by:
 31649 ;;		_USBDeviceTasks
 31650 ;; This function uses a non-reentrant model
 31651 ;;
 31652                           
 31653                           	psect	text146
 31654  00B9DC                     __ptext146:
 31655                           	callstack 0
 31656  00B9DC                     _USBCtrlEPService:
 31657                           	callstack 18
 31658                           
 31659                           ; BSR set to: 0
 31660                           ;usb_device.c: 2385: USBStatusStageTimeoutCounter = (uint8_t)45;
 31661                           
 31662                           ; BSR set to: 0
 31663                           ;incstack = 0
 31664  00B9DC  0E2D               	movlw	45
 31665  00B9DE  6FF1               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 31666                           
 31667                           ; BSR set to: 0
 31668                           ;usb_device.c: 2389: if((USTATcopy.Val & ~0x02) == 0x00)
 31669  00B9E0  C050  F02A         	movff	_USTATcopy,??_USBCtrlEPService
 31670  00B9E4  0EFD               	movlw	253
 31671  00B9E6  162A               	andwf	??_USBCtrlEPService^0,f,c
 31672  00B9E8  A4D8               	btfss	status,2,c
 31673  00B9EA  D03B               	goto	l21687
 31674                           
 31675                           ; BSR set to: 0
 31676                           ;usb_device.c: 2390: {;usb_device.c: 2393: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 31677  00B9EC  C050  F02A         	movff	_USTATcopy,??_USBCtrlEPService
 31678  00B9F0  90D8               	bcf	status,0,c
 31679  00B9F2  322A               	rrcf	??_USBCtrlEPService^0,f,c
 31680  00B9F4  0E3F               	movlw	63
 31681  00B9F6  162A               	andwf	??_USBCtrlEPService^0,f,c
 31682  00B9F8  502A               	movf	??_USBCtrlEPService^0,w,c
 31683  00B9FA  0D04               	mullw	4
 31684  00B9FC  0E00               	movlw	0
 31685  00B9FE  24F3               	addwf	243,w,c
 31686  00BA00  6E4B               	movwf	_pBDTEntryEP0OutCurrent^0,c
 31687  00BA02  0E04               	movlw	4
 31688  00BA04  20F4               	addwfc	prodh,w,c
 31689  00BA06  6E4C               	movwf	(_pBDTEntryEP0OutCurrent+1)^0,c
 31690                           
 31691                           ; BSR set to: 0
 31692                           ;usb_device.c: 2401: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 31693  00BA08  C04B  F049         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 31694  00BA0C  C04C  F04A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;usb_device.c: 2403: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 31698  00BA10  0E04               	movlw	4
 31699  00BA12  1849               	xorwf	_pBDTEntryEP0OutNext^0,w,c
 31700  00BA14  6E49               	movwf	_pBDTEntryEP0OutNext^0,c
 31701  00BA16  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 31702  00BA18  6E4A               	movwf	(_pBDTEntryEP0OutNext+1)^0,c
 31703                           
 31704                           ; BSR set to: 0
 31705                           ;usb_device.c: 2406: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 31706  00BA1A  C04B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31707  00BA1E  C04C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31708  00BA22  30DF               	rrcf	indf2,w,c
 31709  00BA24  32E8               	rrcf	wreg,f,c
 31710  00BA26  0B0F               	andlw	15
 31711  00BA28  0A0D               	xorlw	13
 31712  00BA2A  A4D8               	btfss	status,2,c
 31713  00BA2C  D017               	goto	l21685
 31714                           
 31715                           ; BSR set to: 0
 31716                           ;usb_device.c: 2407: {;usb_device.c: 2412: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 31717  00BA2E  0E30               	movlw	48
 31718  00BA30  6E0F               	movwf	memcpy@d1^0,c
 31719  00BA32  0E04               	movlw	4
 31720  00BA34  6E10               	movwf	(memcpy@d1+1)^0,c
 31721  00BA36  EE20 F002          	lfsr	2,2
 31722  00BA3A  504B               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 31723  00BA3C  26D9               	addwf	fsr2l,f,c
 31724  00BA3E  504C               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 31725  00BA40  22DA               	addwfc	fsr2h,f,c
 31726  00BA42  CFDE F011          	movff	postinc2,memcpy@s1
 31727  00BA46  CFDD F012          	movff	postdec2,memcpy@s1+1
 31728  00BA4A  0E00               	movlw	0
 31729  00BA4C  6E14               	movwf	(memcpy@n+1)^0,c
 31730  00BA4E  0E08               	movlw	8
 31731  00BA50  6E13               	movwf	memcpy@n^0,c
 31732  00BA52  ECA6  F068         	call	_memcpy	;wreg free
 31733                           
 31734                           ;usb_device.c: 2415: USBCtrlTrfSetupHandler();
 31735  00BA56  EC16  F05E         	call	_USBCtrlTrfSetupHandler	;wreg free
 31736                           
 31737                           ;usb_device.c: 2416: }
 31738  00BA5A  0012               	return	
 31739  00BA5C                     l21685:
 31740                           
 31741                           ; BSR set to: 0
 31742                           ;usb_device.c: 2417: else;usb_device.c: 2418: {;usb_device.c: 2420: USBCtrlTrfOutHandler
      +                          ();
 31743  00BA5C  EC89  F065         	call	_USBCtrlTrfOutHandler	;wreg free
 31744  00BA60  0012               	return	
 31745  00BA62                     l21687:
 31746                           
 31747                           ; BSR set to: 0
 31748                           ;usb_device.c: 2423: else if((USTATcopy.Val & ~0x02) == 0x04)
 31749  00BA62  5050               	movf	_USTATcopy^0,w,c
 31750  00BA64  0BFD               	andlw	253
 31751  00BA66  0A04               	xorlw	4
 31752  00BA68  A4D8               	btfss	status,2,c
 31753  00BA6A  0012               	return	
 31754                           
 31755                           ; BSR set to: 0
 31756                           ;usb_device.c: 2424: {;usb_device.c: 2427: USBCtrlTrfInHandler();
 31757  00BA6C  EC8F  F058         	call	_USBCtrlTrfInHandler	;wreg free
 31758  00BA70  0012               	return		;funcret
 31759  00BA72                     __end_of_USBCtrlEPService:
 31760                           	callstack 0
 31761                           
 31762 ;; *************** function _memcpy *****************
 31763 ;; Defined at:
 31764 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
 31765 ;; Parameters:    Size  Location     Type
 31766 ;;  d1              2   14[COMRAM] PTR void 
 31767 ;;		 -> SetupPkt(8), g_master.data..(3), g_nvm.eeprm(124), g_eeprmTemp(124), 
 31768 ;;		 -> g_nvm(154), modbusParseResponse@crcreq(2), modbusParseResponse@crcresp(2), modbusParseRequest@crc(2), 
 31769 ;;  s1              2   16[COMRAM] PTR const void 
 31770 ;;		 -> CtrlTrfData(8), RAM(3775), SetupPkt(8), g_slave.request.frame(9), 
 31771 ;;		 -> g_master.response.frame(9), g_master.request.frame(9), g_nvm.eeprm(124), g_eeprmTemp(124), 
 31772 ;;		 -> g_nvm(154), modbusParseResponse0102@parser(2), 
 31773 ;;  n               2   18[COMRAM] unsigned int 
 31774 ;; Auto vars:     Size  Location     Type
 31775 ;;  s               2   23[COMRAM] PTR const unsigned char 
 31776 ;;		 -> CtrlTrfData(8), RAM(3775), SetupPkt(8), g_slave.request.frame(9), 
 31777 ;;		 -> g_master.response.frame(9), g_master.request.frame(9), g_nvm.eeprm(124), g_eeprmTemp(124), 
 31778 ;;		 -> g_nvm(154), modbusParseResponse0102@parser(2), 
 31779 ;;  d               2   21[COMRAM] PTR unsigned char 
 31780 ;;		 -> SetupPkt(8), g_master.data..(3), g_nvm.eeprm(124), g_eeprmTemp(124), 
 31781 ;;		 -> g_nvm(154), modbusParseResponse@crcreq(2), modbusParseResponse@crcresp(2), modbusParseRequest@crc(2), 
 31782 ;;  tmp             1   20[COMRAM] unsigned char 
 31783 ;; Return value:  Size  Location     Type
 31784 ;;                  2   14[COMRAM] PTR void 
 31785 ;; Registers used:
 31786 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31787 ;; Tracked objects:
 31788 ;;		On entry : 0/0
 31789 ;;		On exit  : 0/0
 31790 ;;		Unchanged: 0/0
 31791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31792 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31793 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31795 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31796 ;;Total ram usage:       11 bytes
 31797 ;; Hardware stack levels used: 1
 31798 ;; Hardware stack levels required when called: 4
 31799 ;; This function calls:
 31800 ;;		Nothing
 31801 ;; This function is called by:
 31802 ;;		_modbusParseResponse0102
 31803 ;;		_modbusParseRequest
 31804 ;;		_modbusParseResponse
 31805 ;;		_eeprom_update_all
 31806 ;;		_update_command
 31807 ;;		_build_response
 31808 ;;		_usedtime_task
 31809 ;;		_USBCtrlEPService
 31810 ;; This function uses a non-reentrant model
 31811 ;;
 31812                           
 31813                           	psect	text147
 31814  00D14C                     __ptext147:
 31815                           	callstack 0
 31816  00D14C                     _memcpy:
 31817                           	callstack 25
 31818                           
 31819                           ;incstack = 0
 31820  00D14C  C011  F018         	movff	memcpy@s1,memcpy@s
 31821  00D150  C012  F019         	movff	memcpy@s1+1,memcpy@s+1
 31822  00D154  C00F  F016         	movff	memcpy@d1,memcpy@d
 31823  00D158  C010  F017         	movff	memcpy@d1+1,memcpy@d+1
 31824  00D15C  D010               	goto	l18107
 31825  00D15E                     l18099:
 31826  00D15E  C018  FFD9         	movff	memcpy@s,fsr2l
 31827  00D162  C019  FFDA         	movff	memcpy@s+1,fsr2h
 31828  00D166  50DF               	movf	indf2,w,c
 31829  00D168  6E15               	movwf	memcpy@tmp^0,c
 31830  00D16A  4A18               	infsnz	memcpy@s^0,f,c
 31831  00D16C  2A19               	incf	(memcpy@s+1)^0,f,c
 31832  00D16E  C016  FFD9         	movff	memcpy@d,fsr2l
 31833  00D172  C017  FFDA         	movff	memcpy@d+1,fsr2h
 31834  00D176  C015  FFDF         	movff	memcpy@tmp,indf2
 31835  00D17A  4A16               	infsnz	memcpy@d^0,f,c
 31836  00D17C  2A17               	incf	(memcpy@d+1)^0,f,c
 31837  00D17E                     l18107:
 31838  00D17E  0613               	decf	memcpy@n^0,f,c
 31839  00D180  A0D8               	btfss	status,0,c
 31840  00D182  0614               	decf	(memcpy@n+1)^0,f,c
 31841  00D184  2813               	incf	memcpy@n^0,w,c
 31842  00D186  E1EB               	bnz	l18099
 31843  00D188  2814               	incf	(memcpy@n+1)^0,w,c
 31844  00D18A  B4D8               	btfsc	status,2,c
 31845  00D18C  0012               	return	
 31846  00D18E  D7E7               	goto	l18099
 31847  00D190                     __end_of_memcpy:
 31848                           	callstack 0
 31849                           
 31850 ;; *************** function _USBCtrlTrfSetupHandler *****************
 31851 ;; Defined at:
 31852 ;;		line 2472 in file "usb/usb_device.c"
 31853 ;; Parameters:    Size  Location     Type
 31854 ;;		None
 31855 ;; Auto vars:     Size  Location     Type
 31856 ;;		None
 31857 ;; Return value:  Size  Location     Type
 31858 ;;                  1    wreg      void 
 31859 ;; Registers used:
 31860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31861 ;; Tracked objects:
 31862 ;;		On entry : 0/0
 31863 ;;		On exit  : 3E/0
 31864 ;;		Unchanged: 0/0
 31865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31870 ;;Total ram usage:        0 bytes
 31871 ;; Hardware stack levels used: 1
 31872 ;; Hardware stack levels required when called: 10
 31873 ;; This function calls:
 31874 ;;		_USBCheckStdRequest
 31875 ;;		_USBCtrlEPServiceComplete
 31876 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31877 ;; This function is called by:
 31878 ;;		_USBCtrlEPService
 31879 ;; This function uses a non-reentrant model
 31880 ;;
 31881                           
 31882                           	psect	text148
 31883  00BC2C                     __ptext148:
 31884                           	callstack 0
 31885  00BC2C                     _USBCtrlTrfSetupHandler:
 31886                           	callstack 18
 31887                           
 31888                           ;usb_device.c: 2477: shortPacketStatus = 0;
 31889                           
 31890                           ;incstack = 0
 31891  00BC2C  0E00               	movlw	0
 31892  00BC2E  0100               	movlb	0	; () banked
 31893  00BC30  6FF6               	movwf	_shortPacketStatus& (0+255),b
 31894                           
 31895                           ;usb_device.c: 2478: USBDeferStatusStagePacket = 0;
 31896  00BC32  0E00               	movlw	0
 31897  00BC34  6E4D               	movwf	_USBDeferStatusStagePacket^0,c	;volatile
 31898                           
 31899                           ;usb_device.c: 2479: USBDeferINDataStagePackets = 0;
 31900  00BC36  0E00               	movlw	0
 31901  00BC38  6FEE               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 31902                           
 31903                           ;usb_device.c: 2480: USBDeferOUTDataStagePackets = 0;
 31904  00BC3A  0E00               	movlw	0
 31905  00BC3C  6FED               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 31906                           
 31907                           ;usb_device.c: 2481: BothEP0OutUOWNsSet = 0;
 31908  00BC3E  0E00               	movlw	0
 31909  00BC40  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 31910                           
 31911                           ;usb_device.c: 2482: controlTransferState = 0;
 31912  00BC42  0E00               	movlw	0
 31913  00BC44  6E4E               	movwf	_controlTransferState^0,c
 31914                           
 31915                           ; BSR set to: 0
 31916                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 31917  00BC46  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 31918  00BC4A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31919  00BC4E  0E7F               	movlw	127
 31920  00BC50  16DF               	andwf	indf2,f,c
 31921                           
 31922                           ; BSR set to: 0
 31923                           ;usb_device.c: 2493: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 31924  00BC52  0E04               	movlw	4
 31925  00BC54  19D8               	xorwf	_pBDTEntryIn& (0+255),w,b
 31926  00BC56  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 31927  00BC58  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 31928  00BC5A  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31929                           
 31930                           ; BSR set to: 0
 31931                           ;usb_device.c: 2494: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 31932  00BC5C  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 31933  00BC60  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31934  00BC64  0E7F               	movlw	127
 31935  00BC66  16DF               	andwf	indf2,f,c
 31936                           
 31937                           ; BSR set to: 0
 31938                           ;usb_device.c: 2495: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 31939  00BC68  0E04               	movlw	4
 31940  00BC6A  19D8               	xorwf	_pBDTEntryIn& (0+255),w,b
 31941  00BC6C  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 31942  00BC6E  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 31943  00BC70  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31944                           
 31945                           ; BSR set to: 0
 31946                           ;usb_device.c: 2496: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 31947  00BC72  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31948  00BC76  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31949  00BC7A  0E7F               	movlw	127
 31950  00BC7C  16DF               	andwf	indf2,f,c
 31951                           
 31952                           ; BSR set to: 0
 31953                           ;usb_device.c: 2498: inPipes[0].info.Val = 0;
 31954  00BC7E  0E00               	movlw	0
 31955  00BC80  6E46               	movwf	(_inPipes+3)^0,c
 31956                           
 31957                           ; BSR set to: 0
 31958                           ;usb_device.c: 2499: inPipes[0].wCount.Val = 0;
 31959  00BC82  0E00               	movlw	0
 31960  00BC84  6E48               	movwf	(_inPipes+5)^0,c
 31961  00BC86  0E00               	movlw	0
 31962  00BC88  6E47               	movwf	(_inPipes+4)^0,c
 31963                           
 31964                           ; BSR set to: 0
 31965                           ;usb_device.c: 2500: outPipes[0].info.Val = 0;
 31966  00BC8A  0E00               	movlw	0
 31967  00BC8C  0101               	movlb	1	; () banked
 31968  00BC8E  6F33               	movwf	(_outPipes+3)& (0+255),b
 31969                           
 31970                           ; BSR set to: 1
 31971                           ;usb_device.c: 2501: outPipes[0].wCount.Val = 0;
 31972  00BC90  0E00               	movlw	0
 31973  00BC92  6F35               	movwf	(_outPipes+5)& (0+255),b
 31974  00BC94  0E00               	movlw	0
 31975  00BC96  6F34               	movwf	(_outPipes+4)& (0+255),b
 31976                           
 31977                           ; BSR set to: 1
 31978                           ;usb_device.c: 2507: USBCheckStdRequest();
 31979  00BC98  ECCB  F057         	call	_USBCheckStdRequest	;wreg free
 31980                           
 31981                           ;usb_device.c: 2508: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_EP0_REQUEST,0,0);
 31982  00BC9C  0E00               	movlw	0
 31983  00BC9E  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 31984  00BCA0  0E03               	movlw	3
 31985  00BCA2  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 31986  00BCA4  0E00               	movlw	0
 31987  00BCA6  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 31988  00BCA8  0E00               	movlw	0
 31989  00BCAA  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 31990  00BCAC  0E00               	movlw	0
 31991  00BCAE  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 31992  00BCB0  0E00               	movlw	0
 31993  00BCB2  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 31994  00BCB4  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31995                           
 31996                           ;usb_device.c: 2521: USBCtrlEPServiceComplete();
 31997  00BCB8  EC0C  F054         	call	_USBCtrlEPServiceComplete	;wreg free
 31998  00BCBC  0012               	return		;funcret
 31999  00BCBE                     __end_of_USBCtrlTrfSetupHandler:
 32000                           	callstack 0
 32001                           
 32002 ;; *************** function _USBCtrlEPServiceComplete *****************
 32003 ;; Defined at:
 32004 ;;		line 1620 in file "usb/usb_device.c"
 32005 ;; Parameters:    Size  Location     Type
 32006 ;;		None
 32007 ;; Auto vars:     Size  Location     Type
 32008 ;;		None
 32009 ;; Return value:  Size  Location     Type
 32010 ;;                  1    wreg      void 
 32011 ;; Registers used:
 32012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32013 ;; Tracked objects:
 32014 ;;		On entry : 0/1
 32015 ;;		On exit  : 3E/0
 32016 ;;		Unchanged: 0/0
 32017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32022 ;;Total ram usage:        0 bytes
 32023 ;; Hardware stack levels used: 1
 32024 ;; Hardware stack levels required when called: 6
 32025 ;; This function calls:
 32026 ;;		_USBCtrlEPAllowDataStage
 32027 ;;		_USBCtrlEPAllowStatusStage
 32028 ;; This function is called by:
 32029 ;;		_USBCtrlTrfSetupHandler
 32030 ;; This function uses a non-reentrant model
 32031 ;;
 32032                           
 32033                           	psect	text149
 32034  00A818                     __ptext149:
 32035                           	callstack 0
 32036  00A818                     _USBCtrlEPServiceComplete:
 32037                           	callstack 21
 32038                           
 32039                           ;usb_device.c: 1626: UCONbits.PKTDIS = 0;
 32040                           
 32041                           ;incstack = 0
 32042  00A818  9865               	bcf	101,4,c	;volatile
 32043                           
 32044                           ;usb_device.c: 1632: if(inPipes[0].info.bits.busy == 0)
 32045  00A81A  BE46               	btfsc	(_inPipes+3)^0,7,c
 32046  00A81C  D03A               	goto	l2202
 32047                           
 32048                           ;usb_device.c: 1633: {;usb_device.c: 1634: if(outPipes[0].info.bits.busy == 1)
 32049  00A81E  0101               	movlb	1	; () banked
 32050  00A820  AF33               	btfss	(_outPipes+3)& (0+255),7,b
 32051  00A822  D00C               	goto	l13493
 32052                           
 32053                           ; BSR set to: 1
 32054                           ;usb_device.c: 1635: {;usb_device.c: 1636: controlTransferState = 2;
 32055  00A824  0E02               	movlw	2
 32056  00A826  6E4E               	movwf	_controlTransferState^0,c
 32057                           
 32058                           ;usb_device.c: 1647: if(USBDeferOUTDataStagePackets == 0)
 32059  00A828  0100               	movlb	0	; () banked
 32060  00A82A  51ED               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 32061  00A82C  B4D8               	btfsc	status,2,c
 32062                           
 32063                           ; BSR set to: 0
 32064                           ;usb_device.c: 1648: {;usb_device.c: 1649: USBCtrlEPAllowDataStage();
 32065  00A82E  ECA2  F05C         	call	_USBCtrlEPAllowDataStage	;wreg free
 32066                           
 32067                           ; BSR set to: 0
 32068                           ;usb_device.c: 1650: };usb_device.c: 1654: USBStatusStageEnabledFlag2 = 0;
 32069  00A832  0E00               	movlw	0
 32070  00A834  6FEF               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 32071                           
 32072                           ; BSR set to: 0
 32073                           ;usb_device.c: 1655: USBStatusStageEnabledFlag1 = 0;
 32074  00A836  0E00               	movlw	0
 32075  00A838  6FF0               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 32076                           
 32077                           ;usb_device.c: 1656: }
 32078  00A83A  0012               	return	
 32079  00A83C                     l13493:
 32080                           
 32081                           ; BSR set to: 1
 32082                           ;usb_device.c: 1657: else;usb_device.c: 1658: {;usb_device.c: 1663: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 32083  00A83C  EE20 F001          	lfsr	2,1
 32084  00A840  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 32085  00A842  26D9               	addwf	fsr2l,f,c
 32086  00A844  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 32087  00A846  22DA               	addwfc	fsr2h,f,c
 32088  00A848  0E08               	movlw	8
 32089  00A84A  6EDF               	movwf	indf2,c
 32090                           
 32091                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32092  00A84C  EE20 F002          	lfsr	2,2
 32093  00A850  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 32094  00A852  26D9               	addwf	fsr2l,f,c
 32095  00A854  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 32096  00A856  22DA               	addwfc	fsr2h,f,c
 32097  00A858  0E30               	movlw	48
 32098  00A85A  6EDE               	movwf	postinc2,c
 32099  00A85C  0E04               	movlw	4
 32100  00A85E  6EDD               	movwf	postdec2,c
 32101                           
 32102                           ; BSR set to: 1
 32103                           ;usb_device.c: 1665: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32104  00A860  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32105  00A864  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32106  00A868  0E0C               	movlw	12
 32107  00A86A  6EDF               	movwf	indf2,c
 32108                           
 32109                           ; BSR set to: 1
 32110                           ;usb_device.c: 1666: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32111  00A86C  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32112  00A870  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32113  00A874  0E00               	movlw	0
 32114  00A876  8EDB               	bsf	plusw2,7,c
 32115                           
 32116                           ;usb_device.c: 1667: pBDTEntryIn[0]->STAT.Val = 0x04;
 32117  00A878  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 32118  00A87C  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32119  00A880  0E04               	movlw	4
 32120  00A882  6EDF               	movwf	indf2,c
 32121                           
 32122                           ; BSR set to: 1
 32123                           ;usb_device.c: 1668: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32124  00A884  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 32125  00A888  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32126  00A88C  0E00               	movlw	0
 32127  00A88E  8EDB               	bsf	plusw2,7,c
 32128  00A890  0012               	return	
 32129  00A892                     l2202:
 32130                           
 32131                           ;usb_device.c: 1671: else;usb_device.c: 1672: {;usb_device.c: 1673: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 32132  00A892  0104               	movlb	4	; () banked
 32133  00A894  AF30               	btfss	48,7,b	;volatile
 32134  00A896  D011               	goto	l13513
 32135                           
 32136                           ; BSR set to: 4
 32137                           ;usb_device.c: 1674: {;usb_device.c: 1675: controlTransferState = 1;
 32138  00A898  0E01               	movlw	1
 32139  00A89A  6E4E               	movwf	_controlTransferState^0,c
 32140                           
 32141                           ;usb_device.c: 1689: if(USBDeferINDataStagePackets == 0)
 32142  00A89C  0100               	movlb	0	; () banked
 32143  00A89E  51EE               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 32144  00A8A0  B4D8               	btfsc	status,2,c
 32145                           
 32146                           ; BSR set to: 0
 32147                           ;usb_device.c: 1690: {;usb_device.c: 1691: USBCtrlEPAllowDataStage();
 32148  00A8A2  ECA2  F05C         	call	_USBCtrlEPAllowDataStage	;wreg free
 32149                           
 32150                           ; BSR set to: 0
 32151                           ;usb_device.c: 1692: };usb_device.c: 1714: USBStatusStageEnabledFlag2 = 0;
 32152  00A8A6  0E00               	movlw	0
 32153  00A8A8  6FEF               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 32154                           
 32155                           ; BSR set to: 0
 32156                           ;usb_device.c: 1715: USBStatusStageEnabledFlag1 = 0;
 32157  00A8AA  0E00               	movlw	0
 32158  00A8AC  6FF0               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 32159                           
 32160                           ; BSR set to: 0
 32161                           ;usb_device.c: 1716: if(USBDeferStatusStagePacket == 0)
 32162  00A8AE  504D               	movf	_USBDeferStatusStagePacket^0,w,c	;volatile
 32163  00A8B0  A4D8               	btfss	status,2,c
 32164  00A8B2  0012               	return	
 32165                           
 32166                           ; BSR set to: 0
 32167                           ;usb_device.c: 1717: {;usb_device.c: 1718: USBCtrlEPAllowStatusStage();
 32168  00A8B4  EC2D  F058         	call	_USBCtrlEPAllowStatusStage	;wreg free
 32169  00A8B8  0012               	return	
 32170  00A8BA                     l13513:
 32171                           
 32172                           ; BSR set to: 4
 32173                           ;usb_device.c: 1721: else;usb_device.c: 1722: {;usb_device.c: 1733: controlTransferState
      +                           = 2;
 32174  00A8BA  0E02               	movlw	2
 32175  00A8BC  6E4E               	movwf	_controlTransferState^0,c
 32176                           
 32177                           ; BSR set to: 4
 32178                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->CNT = 8;
 32179  00A8BE  EE20 F001          	lfsr	2,1
 32180  00A8C2  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 32181  00A8C4  26D9               	addwf	fsr2l,f,c
 32182  00A8C6  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 32183  00A8C8  22DA               	addwfc	fsr2h,f,c
 32184  00A8CA  0E08               	movlw	8
 32185  00A8CC  6EDF               	movwf	indf2,c
 32186                           
 32187                           ; BSR set to: 4
 32188                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32189  00A8CE  EE20 F002          	lfsr	2,2
 32190  00A8D2  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 32191  00A8D4  26D9               	addwf	fsr2l,f,c
 32192  00A8D6  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 32193  00A8D8  22DA               	addwfc	fsr2h,f,c
 32194  00A8DA  0E30               	movlw	48
 32195  00A8DC  6EDE               	movwf	postinc2,c
 32196  00A8DE  0E04               	movlw	4
 32197  00A8E0  6EDD               	movwf	postdec2,c
 32198                           
 32199                           ; BSR set to: 4
 32200                           ;usb_device.c: 1738: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 32201  00A8E2  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32202  00A8E6  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32203  00A8EA  0E04               	movlw	4
 32204  00A8EC  6EDF               	movwf	indf2,c
 32205                           
 32206                           ; BSR set to: 4
 32207                           ;usb_device.c: 1739: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32208  00A8EE  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32209  00A8F2  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32210  00A8F6  0E00               	movlw	0
 32211  00A8F8  8EDB               	bsf	plusw2,7,c
 32212                           
 32213                           ; BSR set to: 4
 32214                           ;usb_device.c: 1742: USBStatusStageEnabledFlag2 = 0;
 32215  00A8FA  0E00               	movlw	0
 32216  00A8FC  0100               	movlb	0	; () banked
 32217  00A8FE  D7D4               	goto	L93
 32218  00A900                     __end_of_USBCtrlEPServiceComplete:
 32219                           	callstack 0
 32220                           
 32221 ;; *************** function _USBCtrlEPAllowDataStage *****************
 32222 ;; Defined at:
 32223 ;;		line 1492 in file "usb/usb_device.c"
 32224 ;; Parameters:    Size  Location     Type
 32225 ;;		None
 32226 ;; Auto vars:     Size  Location     Type
 32227 ;;		None
 32228 ;; Return value:  Size  Location     Type
 32229 ;;                  1    wreg      void 
 32230 ;; Registers used:
 32231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32232 ;; Tracked objects:
 32233 ;;		On entry : 3F/0
 32234 ;;		On exit  : 3F/0
 32235 ;;		Unchanged: 0/0
 32236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32241 ;;Total ram usage:        0 bytes
 32242 ;; Hardware stack levels used: 1
 32243 ;; Hardware stack levels required when called: 5
 32244 ;; This function calls:
 32245 ;;		_USBCtrlTrfTxService
 32246 ;; This function is called by:
 32247 ;;		_USBCtrlEPServiceComplete
 32248 ;; This function uses a non-reentrant model
 32249 ;;
 32250                           
 32251                           	psect	text150
 32252  00B944                     __ptext150:
 32253                           	callstack 0
 32254  00B944                     _USBCtrlEPAllowDataStage:
 32255                           	callstack 21
 32256                           
 32257                           ; BSR set to: 0
 32258                           ;usb_device.c: 1494: USBDeferINDataStagePackets = 0;
 32259                           
 32260                           ;incstack = 0
 32261  00B944  0E00               	movlw	0
 32262  00B946  6FEE               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 32263                           
 32264                           ;usb_device.c: 1495: USBDeferOUTDataStagePackets = 0;
 32265  00B948  0E00               	movlw	0
 32266  00B94A  6FED               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 32267                           
 32268                           ; BSR set to: 0
 32269                           ;usb_device.c: 1497: if(controlTransferState == 2)
 32270  00B94C  0E02               	movlw	2
 32271  00B94E  184E               	xorwf	_controlTransferState^0,w,c
 32272  00B950  A4D8               	btfss	status,2,c
 32273  00B952  D01F               	goto	l12403
 32274                           
 32275                           ; BSR set to: 0
 32276                           ;usb_device.c: 1498: {;usb_device.c: 1500: pBDTEntryEP0OutNext->CNT = 8;
 32277  00B954  EE20 F001          	lfsr	2,1
 32278  00B958  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 32279  00B95A  26D9               	addwf	fsr2l,f,c
 32280  00B95C  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 32281  00B95E  22DA               	addwfc	fsr2h,f,c
 32282  00B960  0E08               	movlw	8
 32283  00B962  6EDF               	movwf	indf2,c
 32284                           
 32285                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 32286  00B964  EE20 F002          	lfsr	2,2
 32287  00B968  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 32288  00B96A  26D9               	addwf	fsr2l,f,c
 32289  00B96C  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 32290  00B96E  22DA               	addwfc	fsr2h,f,c
 32291  00B970  0E38               	movlw	56
 32292  00B972  6EDE               	movwf	postinc2,c
 32293  00B974  0E04               	movlw	4
 32294  00B976  6EDD               	movwf	postdec2,c
 32295                           
 32296                           ; BSR set to: 0
 32297                           ;usb_device.c: 1502: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 32298  00B978  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32299  00B97C  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32300  00B980  0E48               	movlw	72
 32301  00B982  6EDF               	movwf	indf2,c
 32302                           
 32303                           ; BSR set to: 0
 32304                           ;usb_device.c: 1503: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32305  00B984  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32306  00B988  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32307  00B98C  0E00               	movlw	0
 32308  00B98E  8EDB               	bsf	plusw2,7,c
 32309                           
 32310                           ;usb_device.c: 1504: }
 32311  00B990  0012               	return	
 32312  00B992                     l12403:
 32313                           
 32314                           ; BSR set to: 0
 32315                           ;usb_device.c: 1505: else;usb_device.c: 1506: {;usb_device.c: 1509: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 32316  00B992  5047               	movf	(_inPipes+4)^0,w,c
 32317  00B994  0104               	movlb	4	; () banked
 32318  00B996  5D36               	subwf	54,w,b	;volatile
 32319  00B998  5048               	movf	(_inPipes+5)^0,w,c
 32320  00B99A  5937               	subwfb	55,w,b	;volatile
 32321  00B99C  B0D8               	btfsc	status,0,c
 32322  00B99E  D004               	goto	l12407
 32323                           
 32324                           ; BSR set to: 4
 32325                           ;usb_device.c: 1510: {;usb_device.c: 1511: inPipes[0].wCount.Val = SetupPkt.wLength;
 32326  00B9A0  C436 F047          	movff	1078,_inPipes+4	;volatile
 32327  00B9A4  C437 F048          	movff	1079,_inPipes+5	;volatile
 32328  00B9A8                     l12407:
 32329                           
 32330                           ; BSR set to: 4
 32331                           ;usb_device.c: 1512: };usb_device.c: 1513: USBCtrlTrfTxService();
 32332  00B9A8  EC99  F056         	call	_USBCtrlTrfTxService	;wreg free
 32333                           
 32334                           ; BSR set to: 1
 32335                           ;usb_device.c: 1518: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 32336  00B9AC  0100               	movlb	0	; () banked
 32337  00B9AE  EE20 F002          	lfsr	2,2
 32338  00B9B2  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 32339  00B9B4  26D9               	addwf	fsr2l,f,c
 32340  00B9B6  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 32341  00B9B8  22DA               	addwfc	fsr2h,f,c
 32342  00B9BA  0E38               	movlw	56
 32343  00B9BC  6EDE               	movwf	postinc2,c
 32344  00B9BE  0E04               	movlw	4
 32345  00B9C0  6EDD               	movwf	postdec2,c
 32346                           
 32347                           ; BSR set to: 0
 32348                           ;usb_device.c: 1519: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 32349  00B9C2  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 32350  00B9C6  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32351  00B9CA  0E48               	movlw	72
 32352  00B9CC  6EDF               	movwf	indf2,c
 32353                           
 32354                           ; BSR set to: 0
 32355                           ;usb_device.c: 1520: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32356  00B9CE  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 32357  00B9D2  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32358  00B9D6  0E00               	movlw	0
 32359  00B9D8  8EDB               	bsf	plusw2,7,c
 32360                           
 32361                           ; BSR set to: 0
 32362  00B9DA  0012               	return		;funcret
 32363  00B9DC                     __end_of_USBCtrlEPAllowDataStage:
 32364                           	callstack 0
 32365                           
 32366 ;; *************** function _USBCheckStdRequest *****************
 32367 ;; Defined at:
 32368 ;;		line 2693 in file "usb/usb_device.c"
 32369 ;; Parameters:    Size  Location     Type
 32370 ;;		None
 32371 ;; Auto vars:     Size  Location     Type
 32372 ;;		None
 32373 ;; Return value:  Size  Location     Type
 32374 ;;                  1    wreg      void 
 32375 ;; Registers used:
 32376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32377 ;; Tracked objects:
 32378 ;;		On entry : 3F/1
 32379 ;;		On exit  : 0/0
 32380 ;;		Unchanged: 0/0
 32381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32386 ;;Total ram usage:        0 bytes
 32387 ;; Hardware stack levels used: 1
 32388 ;; Hardware stack levels required when called: 9
 32389 ;; This function calls:
 32390 ;;		_USBStdFeatureReqHandler
 32391 ;;		_USBStdGetDscHandler
 32392 ;;		_USBStdGetStatusHandler
 32393 ;;		_USBStdSetCfgHandler
 32394 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32395 ;; This function is called by:
 32396 ;;		_USBCtrlTrfSetupHandler
 32397 ;; This function uses a non-reentrant model
 32398 ;;
 32399                           
 32400                           	psect	text151
 32401  00AF96                     __ptext151:
 32402                           	callstack 0
 32403  00AF96                     _USBCheckStdRequest:
 32404                           	callstack 18
 32405                           
 32406                           ; BSR set to: 1
 32407                           ;usb_device.c: 2695: if(SetupPkt.RequestType != (0x00>>5)) return;
 32408                           
 32409                           ; BSR set to: 0
 32410                           ;incstack = 0
 32411  00AF96  0104               	movlb	4	; () banked
 32412  00AF98  3930               	swapf	48,w,b	;volatile
 32413  00AF9A  32E8               	rrcf	wreg,f,c
 32414  00AF9C  0B03               	andlw	3
 32415  00AF9E  0900               	iorlw	0
 32416  00AFA0  A4D8               	btfss	status,2,c
 32417  00AFA2  0012               	return	
 32418  00AFA4  D039               	goto	l13611
 32419  00AFA6                     l2328:
 32420                           
 32421                           ; BSR set to: 4
 32422                           ;usb_device.c: 2700: inPipes[0].info.bits.busy = 1;
 32423  00AFA6  8E46               	bsf	(_inPipes+3)^0,7,c
 32424                           
 32425                           ; BSR set to: 4
 32426                           ;usb_device.c: 2701: USBDeviceState = ADR_PENDING_STATE;
 32427  00AFA8  0E08               	movlw	8
 32428  00AFAA  0100               	movlb	0	; () banked
 32429  00AFAC  6FFA               	movwf	_USBDeviceState& (0+255),b
 32430                           
 32431                           ;usb_device.c: 2703: break;
 32432  00AFAE  0012               	return	
 32433  00AFB0                     l13581:
 32434                           
 32435                           ; BSR set to: 4
 32436                           ;usb_device.c: 2705: USBStdGetDscHandler();
 32437  00AFB0  EC92  F050         	call	_USBStdGetDscHandler	;wreg free
 32438                           
 32439                           ;usb_device.c: 2706: break;
 32440  00AFB4  0012               	return	
 32441  00AFB6                     l13583:
 32442                           
 32443                           ; BSR set to: 4
 32444                           ;usb_device.c: 2708: USBStdSetCfgHandler();
 32445  00AFB6  EC60  F055         	call	_USBStdSetCfgHandler	;wreg free
 32446                           
 32447                           ;usb_device.c: 2709: break;
 32448  00AFBA  0012               	return	
 32449  00AFBC                     l13585:
 32450                           
 32451                           ; BSR set to: 4
 32452                           ;usb_device.c: 2711: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 32453  00AFBC  0EFD               	movlw	low _USBActiveConfiguration
 32454  00AFBE  6E43               	movwf	_inPipes^0,c
 32455  00AFC0  6A44               	clrf	(_inPipes+1)^0,c
 32456  00AFC2                     l13587:
 32457                           
 32458                           ; BSR set to: 4
 32459                           ;usb_device.c: 2712: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 32460  00AFC2  8046               	bsf	(_inPipes+3)^0,0,c
 32461                           
 32462                           ; BSR set to: 4
 32463                           ;usb_device.c: 2713: inPipes[0].wCount.v[0] = 1;
 32464  00AFC4  0E01               	movlw	1
 32465  00AFC6  6E47               	movwf	(_inPipes+4)^0,c
 32466                           
 32467                           ; BSR set to: 4
 32468                           ;usb_device.c: 2714: inPipes[0].info.bits.busy = 1;
 32469  00AFC8  8E46               	bsf	(_inPipes+3)^0,7,c
 32470                           
 32471                           ;usb_device.c: 2715: break;
 32472  00AFCA  0012               	return	
 32473  00AFCC                     l13593:
 32474                           
 32475                           ; BSR set to: 4
 32476                           ;usb_device.c: 2717: USBStdGetStatusHandler();
 32477  00AFCC  EC57  F05B         	call	_USBStdGetStatusHandler	;wreg free
 32478                           
 32479                           ;usb_device.c: 2718: break;
 32480  00AFD0  0012               	return	
 32481  00AFD2                     l13595:
 32482                           
 32483                           ; BSR set to: 4
 32484                           ;usb_device.c: 2720: case 3:;usb_device.c: 2721: USBStdFeatureReqHandler();
 32485  00AFD2  EC2A  F03E         	call	_USBStdFeatureReqHandler	;wreg free
 32486                           
 32487                           ;usb_device.c: 2722: break;
 32488  00AFD6  0012               	return	
 32489  00AFD8                     l13597:
 32490                           
 32491                           ; BSR set to: 4
 32492                           ;usb_device.c: 2724: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 32493  00AFD8  0EF3               	movlw	low _USBAlternateInterface
 32494  00AFDA  2534               	addwf	52,w,b	;volatile
 32495  00AFDC  6E43               	movwf	_inPipes^0,c
 32496  00AFDE  6A44               	clrf	(_inPipes+1)^0,c
 32497  00AFE0  0E01               	movlw	high _USBAlternateInterface
 32498  00AFE2  2244               	addwfc	(_inPipes+1)^0,f,c
 32499  00AFE4  D7EE               	goto	l13587
 32500  00AFE6                     l2337:
 32501                           
 32502                           ; BSR set to: 4
 32503                           ;usb_device.c: 2730: inPipes[0].info.bits.busy = 1;
 32504  00AFE6  8E46               	bsf	(_inPipes+3)^0,7,c
 32505                           
 32506                           ; BSR set to: 4
 32507                           ;usb_device.c: 2731: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 32508  00AFE8  0EF3               	movlw	low _USBAlternateInterface
 32509  00AFEA  2534               	addwf	52,w,b	;volatile
 32510  00AFEC  6ED9               	movwf	fsr2l,c
 32511  00AFEE  6ADA               	clrf	fsr2h,c
 32512  00AFF0  0E01               	movlw	high _USBAlternateInterface
 32513  00AFF2  22DA               	addwfc	fsr2h,f,c
 32514  00AFF4  C432 FFDF          	movff	1074,indf2	;volatile
 32515                           
 32516                           ;usb_device.c: 2732: break;
 32517  00AFF8  0012               	return	
 32518  00AFFA                     l13607:
 32519                           
 32520                           ; BSR set to: 4
 32521                           ;usb_device.c: 2734: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SET_DESCRIPTOR,0,0
      +                          );
 32522  00AFFA  0E00               	movlw	0
 32523  00AFFC  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 32524  00AFFE  0E02               	movlw	2
 32525  00B000  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 32526  00B002  0E00               	movlw	0
 32527  00B004  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 32528  00B006  0E00               	movlw	0
 32529  00B008  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 32530  00B00A  0E00               	movlw	0
 32531  00B00C  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 32532  00B00E  0E00               	movlw	0
 32533  00B010  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 32534  00B012  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 32535                           
 32536                           ;usb_device.c: 2735: break;
 32537  00B016  0012               	return	
 32538  00B018                     l13611:
 32539                           
 32540                           ; BSR set to: 4
 32541  00B018  5131               	movf	49,w,b	;volatile
 32542                           
 32543                           ; Switch size 1, requested type "simple"
 32544                           ; Number of cases is 11, Range of values is 0 to 12
 32545                           ; switch strategies available:
 32546                           ; Name         Instructions Cycles
 32547                           ; simple_byte           34    18 (average)
 32548                           ;	Chosen strategy is simple_byte
 32549  00B01A  0A00               	xorlw	0	; case 0
 32550  00B01C  B4D8               	btfsc	status,2,c
 32551  00B01E  D7D6               	goto	l13593
 32552  00B020  0A01               	xorlw	1	; case 1
 32553  00B022  B4D8               	btfsc	status,2,c
 32554  00B024  D7D6               	goto	l13595
 32555  00B026  0A02               	xorlw	2	; case 3
 32556  00B028  B4D8               	btfsc	status,2,c
 32557  00B02A  D7D3               	goto	l13595
 32558  00B02C  0A06               	xorlw	6	; case 5
 32559  00B02E  B4D8               	btfsc	status,2,c
 32560  00B030  D7BA               	goto	l2328
 32561  00B032  0A03               	xorlw	3	; case 6
 32562  00B034  B4D8               	btfsc	status,2,c
 32563  00B036  D7BC               	goto	l13581
 32564  00B038  0A01               	xorlw	1	; case 7
 32565  00B03A  B4D8               	btfsc	status,2,c
 32566  00B03C  D7DE               	goto	l13607
 32567  00B03E  0A0F               	xorlw	15	; case 8
 32568  00B040  B4D8               	btfsc	status,2,c
 32569  00B042  D7BC               	goto	l13585
 32570  00B044  0A01               	xorlw	1	; case 9
 32571  00B046  B4D8               	btfsc	status,2,c
 32572  00B048  D7B6               	goto	l13583
 32573  00B04A  0A03               	xorlw	3	; case 10
 32574  00B04C  B4D8               	btfsc	status,2,c
 32575  00B04E  D7C4               	goto	l13597
 32576  00B050  0A01               	xorlw	1	; case 11
 32577  00B052  B4D8               	btfsc	status,2,c
 32578  00B054  D7C8               	goto	l2337
 32579  00B056  0A07               	xorlw	7	; case 12
 32580  00B058  0012               	return	
 32581  00B05A                     __end_of_USBCheckStdRequest:
 32582                           	callstack 0
 32583                           
 32584 ;; *************** function _USBStdSetCfgHandler *****************
 32585 ;; Defined at:
 32586 ;;		line 1972 in file "usb/usb_device.c"
 32587 ;; Parameters:    Size  Location     Type
 32588 ;;		None
 32589 ;; Auto vars:     Size  Location     Type
 32590 ;;  i               1   34[COMRAM] unsigned char 
 32591 ;; Return value:  Size  Location     Type
 32592 ;;                  1    wreg      void 
 32593 ;; Registers used:
 32594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32595 ;; Tracked objects:
 32596 ;;		On entry : 3A/4
 32597 ;;		On exit  : 3F/0
 32598 ;;		Unchanged: 0/0
 32599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32604 ;;Total ram usage:        1 bytes
 32605 ;; Hardware stack levels used: 1
 32606 ;; Hardware stack levels required when called: 8
 32607 ;; This function calls:
 32608 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32609 ;;		_memset
 32610 ;; This function is called by:
 32611 ;;		_USBCheckStdRequest
 32612 ;; This function uses a non-reentrant model
 32613 ;;
 32614                           
 32615                           	psect	text152
 32616  00AAC0                     __ptext152:
 32617                           	callstack 0
 32618  00AAC0                     _USBStdSetCfgHandler:
 32619                           	callstack 18
 32620                           
 32621                           ;usb_device.c: 1974: uint8_t i;;usb_device.c: 1977: inPipes[0].info.bits.busy = 1;
 32622                           
 32623                           ;incstack = 0
 32624  00AAC0  8E46               	bsf	(_inPipes+3)^0,7,c
 32625                           
 32626                           ;usb_device.c: 1980: memset((void*)&UEP1,0x00,(2));;
 32627  00AAC2  0E27               	movlw	39
 32628  00AAC4  6E15               	movwf	memset@p1^0,c
 32629  00AAC6  0E0F               	movlw	15
 32630  00AAC8  6E16               	movwf	(memset@p1+1)^0,c
 32631  00AACA  0E00               	movlw	0
 32632  00AACC  6E18               	movwf	(memset@c+1)^0,c
 32633  00AACE  0E00               	movlw	0
 32634  00AAD0  6E17               	movwf	memset@c^0,c
 32635  00AAD2  0E00               	movlw	0
 32636  00AAD4  6E1A               	movwf	(memset@n+1)^0,c
 32637  00AAD6  0E02               	movlw	2
 32638  00AAD8  6E19               	movwf	memset@n^0,c
 32639  00AADA  ECD6  F06C         	call	_memset	;wreg free
 32640                           
 32641                           ;usb_device.c: 1983: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 32642  00AADE  0E00               	movlw	0
 32643  00AAE0  6E15               	movwf	memset@p1^0,c
 32644  00AAE2  0E04               	movlw	4
 32645  00AAE4  6E16               	movwf	(memset@p1+1)^0,c
 32646  00AAE6  0E00               	movlw	0
 32647  00AAE8  6E18               	movwf	(memset@c+1)^0,c
 32648  00AAEA  0E00               	movlw	0
 32649  00AAEC  6E17               	movwf	memset@c^0,c
 32650  00AAEE  0E00               	movlw	0
 32651  00AAF0  6E1A               	movwf	(memset@n+1)^0,c
 32652  00AAF2  0E30               	movlw	48
 32653  00AAF4  6E19               	movwf	memset@n^0,c
 32654  00AAF6  ECD6  F06C         	call	_memset	;wreg free
 32655                           
 32656                           ;usb_device.c: 1986: UCONbits.PPBRST = 1;
 32657  00AAFA  8C65               	bsf	101,6,c	;volatile
 32658                           
 32659                           ;usb_device.c: 1991: for(i = 0; i < (uint8_t)(2+1u); i++)
 32660  00AAFC  0E00               	movlw	0
 32661  00AAFE  6E23               	movwf	USBStdSetCfgHandler@i^0,c
 32662  00AB00                     l12427:
 32663                           
 32664                           ;usb_device.c: 1992: {;usb_device.c: 1993: ep_data_in[i].Val = 0u;
 32665  00AB00  0E4B               	movlw	low _ep_data_in
 32666  00AB02  2423               	addwf	USBStdSetCfgHandler@i^0,w,c
 32667  00AB04  6ED9               	movwf	fsr2l,c
 32668  00AB06  6ADA               	clrf	fsr2h,c
 32669  00AB08  0E01               	movlw	high _ep_data_in
 32670  00AB0A  22DA               	addwfc	fsr2h,f,c
 32671  00AB0C  0E00               	movlw	0
 32672  00AB0E  6EDF               	movwf	indf2,c
 32673                           
 32674                           ;usb_device.c: 1994: ep_data_out[i].Val = 0u;
 32675  00AB10  0E48               	movlw	low _ep_data_out
 32676  00AB12  2423               	addwf	USBStdSetCfgHandler@i^0,w,c
 32677  00AB14  6ED9               	movwf	fsr2l,c
 32678  00AB16  6ADA               	clrf	fsr2h,c
 32679  00AB18  0E01               	movlw	high _ep_data_out
 32680  00AB1A  22DA               	addwfc	fsr2h,f,c
 32681  00AB1C  0E00               	movlw	0
 32682  00AB1E  6EDF               	movwf	indf2,c
 32683  00AB20  2A23               	incf	USBStdSetCfgHandler@i^0,f,c
 32684  00AB22  0E02               	movlw	2
 32685  00AB24  6423               	cpfsgt	USBStdSetCfgHandler@i^0,c
 32686  00AB26  D7EC               	goto	l12427
 32687                           
 32688                           ;usb_device.c: 1995: };usb_device.c: 1998: memset((void*)&USBAlternateInterface,0x00,2);
 32689  00AB28  0EF3               	movlw	low _USBAlternateInterface
 32690  00AB2A  6E15               	movwf	memset@p1^0,c
 32691  00AB2C  0E01               	movlw	high _USBAlternateInterface
 32692  00AB2E  6E16               	movwf	(memset@p1+1)^0,c
 32693  00AB30  0E00               	movlw	0
 32694  00AB32  6E18               	movwf	(memset@c+1)^0,c
 32695  00AB34  0E00               	movlw	0
 32696  00AB36  6E17               	movwf	memset@c^0,c
 32697  00AB38  0E00               	movlw	0
 32698  00AB3A  6E1A               	movwf	(memset@n+1)^0,c
 32699  00AB3C  0E02               	movlw	2
 32700  00AB3E  6E19               	movwf	memset@n^0,c
 32701  00AB40  ECD6  F06C         	call	_memset	;wreg free
 32702                           
 32703                           ;usb_device.c: 2001: UCONbits.PPBRST = 0;
 32704  00AB44  9C65               	bcf	101,6,c	;volatile
 32705                           
 32706                           ;usb_device.c: 2003: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 32707  00AB46  0E08               	movlw	8
 32708  00AB48  0100               	movlb	0	; () banked
 32709  00AB4A  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 32710  00AB4C  0E04               	movlw	4
 32711  00AB4E  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 32712                           
 32713                           ; BSR set to: 0
 32714                           ;usb_device.c: 2006: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 32715  00AB50  0E00               	movlw	0
 32716  00AB52  6E4B               	movwf	_pBDTEntryEP0OutCurrent^0,c
 32717  00AB54  0E04               	movlw	4
 32718  00AB56  6E4C               	movwf	(_pBDTEntryEP0OutCurrent+1)^0,c
 32719                           
 32720                           ; BSR set to: 0
 32721                           ;usb_device.c: 2007: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 32722  00AB58  C04B  F049         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 32723  00AB5C  C04C  F04A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 32724                           
 32725                           ; BSR set to: 0
 32726                           ;usb_device.c: 2010: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 32727  00AB60  C432 F0FD          	movff	1074,_USBActiveConfiguration	;volatile
 32728                           
 32729                           ; BSR set to: 0
 32730                           ;usb_device.c: 2013: if(USBActiveConfiguration == 0)
 32731  00AB64  51FD               	movf	_USBActiveConfiguration& (0+255),w,b
 32732  00AB66  A4D8               	btfss	status,2,c
 32733  00AB68  D003               	goto	l12449
 32734                           
 32735                           ; BSR set to: 0
 32736                           ;usb_device.c: 2014: {;usb_device.c: 2016: USBDeviceState = ADDRESS_STATE;
 32737  00AB6A  0E10               	movlw	16
 32738  00AB6C  6FFA               	movwf	_USBDeviceState& (0+255),b
 32739                           
 32740                           ;usb_device.c: 2017: }
 32741  00AB6E  0012               	return	
 32742  00AB70                     l12449:
 32743                           
 32744                           ; BSR set to: 0
 32745                           ;usb_device.c: 2018: else;usb_device.c: 2019: {;usb_device.c: 2021: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER((USB_EVENT)EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 32746  00AB70  0E00               	movlw	0
 32747  00AB72  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 32748  00AB74  0E01               	movlw	1
 32749  00AB76  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 32750  00AB78  0EFD               	movlw	low _USBActiveConfiguration
 32751  00AB7A  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 32752  00AB7C  6A1E               	clrf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 32753  00AB7E  0E00               	movlw	0
 32754  00AB80  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 32755  00AB82  0E01               	movlw	1
 32756  00AB84  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 32757  00AB86  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 32758                           
 32759                           ;usb_device.c: 2026: USBDeviceState = CONFIGURED_STATE;
 32760  00AB8A  0E20               	movlw	32
 32761  00AB8C  0100               	movlb	0	; () banked
 32762  00AB8E  6FFA               	movwf	_USBDeviceState& (0+255),b
 32763                           
 32764                           ; BSR set to: 0
 32765  00AB90  0012               	return		;funcret
 32766  00AB92                     __end_of_USBStdSetCfgHandler:
 32767                           	callstack 0
 32768                           
 32769 ;; *************** function _USBStdGetStatusHandler *****************
 32770 ;; Defined at:
 32771 ;;		line 2133 in file "usb/usb_device.c"
 32772 ;; Parameters:    Size  Location     Type
 32773 ;;		None
 32774 ;; Auto vars:     Size  Location     Type
 32775 ;;  p               2   15[COMRAM] PTR struct __BDT
 32776 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 32777 ;; Return value:  Size  Location     Type
 32778 ;;                  1    wreg      void 
 32779 ;; Registers used:
 32780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32781 ;; Tracked objects:
 32782 ;;		On entry : 3A/4
 32783 ;;		On exit  : 3B/0
 32784 ;;		Unchanged: 0/0
 32785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;Total ram usage:        3 bytes
 32791 ;; Hardware stack levels used: 1
 32792 ;; Hardware stack levels required when called: 4
 32793 ;; This function calls:
 32794 ;;		Nothing
 32795 ;; This function is called by:
 32796 ;;		_USBCheckStdRequest
 32797 ;; This function uses a non-reentrant model
 32798 ;;
 32799                           
 32800                           	psect	text153
 32801  00B6AE                     __ptext153:
 32802                           	callstack 0
 32803  00B6AE                     _USBStdGetStatusHandler:
 32804                           	callstack 22
 32805                           
 32806                           ;usb_device.c: 2135: CtrlTrfData[0] = 0;
 32807                           
 32808                           ; BSR set to: 0
 32809                           ;incstack = 0
 32810  00B6AE  0E00               	movlw	0
 32811  00B6B0  0104               	movlb	4	; () banked
 32812  00B6B2  6F38               	movwf	56,b	;volatile
 32813                           
 32814                           ;usb_device.c: 2136: CtrlTrfData[1] = 0;
 32815  00B6B4  0E00               	movlw	0
 32816  00B6B6  6F39               	movwf	57,b	;volatile
 32817                           
 32818                           ;usb_device.c: 2138: switch(SetupPkt.Recipient)
 32819  00B6B8  D038               	goto	l12509
 32820  00B6BA                     l2265:
 32821                           
 32822                           ; BSR set to: 4
 32823                           ;usb_device.c: 2141: inPipes[0].info.bits.busy = 1;
 32824  00B6BA  8E46               	bsf	(_inPipes+3)^0,7,c
 32825                           
 32826                           ; BSR set to: 4
 32827                           ;usb_device.c: 2149: };usb_device.c: 2151: if(RemoteWakeup == 1)
 32828                           
 32829                           ;usb_device.c: 2146: if(0 == 1)
 32830  00B6BC  0100               	movlb	0	; () banked
 32831  00B6BE  05F5               	decf	_RemoteWakeup& (0+255),w,b
 32832  00B6C0  A4D8               	btfss	status,2,c
 32833  00B6C2  D03E               	goto	l2268
 32834                           
 32835                           ; BSR set to: 0
 32836                           ;usb_device.c: 2152: {;usb_device.c: 2153: CtrlTrfData[0]|=0x02;
 32837  00B6C4  0104               	movlb	4	; () banked
 32838  00B6C6  8338               	bsf	56,1,b	;volatile
 32839  00B6C8  D03B               	goto	l2268
 32840  00B6CA                     l2269:
 32841                           
 32842                           ; BSR set to: 4
 32843                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 32844  00B6CA  8E46               	bsf	(_inPipes+3)^0,7,c
 32845                           
 32846                           ;usb_device.c: 2158: break;
 32847  00B6CC  D039               	goto	l2268
 32848  00B6CE                     l2270:
 32849                           
 32850                           ; BSR set to: 4
 32851                           ;usb_device.c: 2160: inPipes[0].info.bits.busy = 1;
 32852  00B6CE  8E46               	bsf	(_inPipes+3)^0,7,c
 32853                           
 32854                           ; BSR set to: 4
 32855                           ;usb_device.c: 2164: if(SetupPkt.EPNum != 0)
 32856  00B6D0  5134               	movf	52,w,b	;volatile
 32857  00B6D2  0B0F               	andlw	15
 32858  00B6D4  0900               	iorlw	0
 32859  00B6D6  B4D8               	btfsc	status,2,c
 32860  00B6D8  D033               	goto	l2268
 32861                           
 32862                           ; BSR set to: 4
 32863                           ;usb_device.c: 2165: {;usb_device.c: 2166: BDT_ENTRY *p;;usb_device.c: 2168: if(SetupPkt
      +                          .EPDir == 0)
 32864  00B6DA  BF34               	btfsc	52,7,b	;volatile
 32865  00B6DC  D00C               	goto	l12499
 32866                           
 32867                           ; BSR set to: 4
 32868                           ;usb_device.c: 2169: {;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 32869  00B6DE  5134               	movf	52,w,b	;volatile
 32870  00B6E0  0B0F               	andlw	15
 32871  00B6E2  6E0F               	movwf	??_USBStdGetStatusHandler^0,c
 32872  00B6E4  500F               	movf	??_USBStdGetStatusHandler^0,w,c
 32873  00B6E6  0D02               	mullw	2
 32874  00B6E8  0E38               	movlw	low _pBDTEntryOut
 32875  00B6EA  24F3               	addwf	243,w,c
 32876  00B6EC  6ED9               	movwf	fsr2l,c
 32877  00B6EE  0E01               	movlw	high _pBDTEntryOut
 32878  00B6F0  20F4               	addwfc	prodh,w,c
 32879  00B6F2  6EDA               	movwf	fsr2h,c
 32880  00B6F4  D007               	goto	L77
 32881  00B6F6                     l12499:
 32882                           
 32883                           ; BSR set to: 4
 32884                           ;usb_device.c: 2172: else;usb_device.c: 2173: {;usb_device.c: 2174: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 32885  00B6F6  5134               	movf	52,w,b	;volatile
 32886  00B6F8  0B0F               	andlw	15
 32887  00B6FA  0D02               	mullw	2
 32888  00B6FC  50F3               	movf	243,w,c
 32889  00B6FE  0FD8               	addlw	low _pBDTEntryIn
 32890  00B700  6ED9               	movwf	fsr2l,c
 32891  00B702  6ADA               	clrf	fsr2h,c
 32892  00B704                     L77:
 32893  00B704  CFDE F010          	movff	postinc2,USBStdGetStatusHandler@p
 32894  00B708  CFDD F011          	movff	postdec2,USBStdGetStatusHandler@p+1
 32895                           
 32896                           ; BSR set to: 4
 32897                           ;usb_device.c: 2175: };usb_device.c: 2177: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 32898  00B70C  C010  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 32899  00B710  C011  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 32900  00B714  AEDF               	btfss	indf2,7,c
 32901  00B716  D014               	goto	l2268
 32902                           
 32903                           ; BSR set to: 4
 32904  00B718  C010  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 32905  00B71C  C011  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 32906  00B720  A4DF               	btfss	indf2,2,c
 32907  00B722  D00E               	goto	l2268
 32908                           
 32909                           ; BSR set to: 4
 32910                           ;usb_device.c: 2178: {;usb_device.c: 2179: CtrlTrfData[0]=0x01;
 32911  00B724  0E01               	movlw	1
 32912  00B726  6F38               	movwf	56,b	;volatile
 32913  00B728  D00B               	goto	l2268
 32914  00B72A                     l12509:
 32915                           
 32916                           ; BSR set to: 4
 32917  00B72A  5130               	movf	48,w,b	;volatile
 32918  00B72C  0B1F               	andlw	31
 32919                           
 32920                           ; Switch size 1, requested type "simple"
 32921                           ; Number of cases is 3, Range of values is 0 to 2
 32922                           ; switch strategies available:
 32923                           ; Name         Instructions Cycles
 32924                           ; simple_byte           10     6 (average)
 32925                           ;	Chosen strategy is simple_byte
 32926  00B72E  0A00               	xorlw	0	; case 0
 32927  00B730  B4D8               	btfsc	status,2,c
 32928  00B732  D7C3               	goto	l2265
 32929  00B734  0A01               	xorlw	1	; case 1
 32930  00B736  B4D8               	btfsc	status,2,c
 32931  00B738  D7C8               	goto	l2269
 32932  00B73A  0A03               	xorlw	3	; case 2
 32933  00B73C  B4D8               	btfsc	status,2,c
 32934  00B73E  D7C7               	goto	l2270
 32935  00B740                     l2268:
 32936                           
 32937                           ;usb_device.c: 2185: if(inPipes[0].info.bits.busy == 1)
 32938  00B740  AE46               	btfss	(_inPipes+3)^0,7,c
 32939  00B742  0012               	return	
 32940                           
 32941                           ;usb_device.c: 2186: {;usb_device.c: 2187: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 32942  00B744  0E38               	movlw	56
 32943  00B746  6E43               	movwf	_inPipes^0,c
 32944  00B748  0E04               	movlw	4
 32945  00B74A  6E44               	movwf	(_inPipes+1)^0,c
 32946                           
 32947                           ;usb_device.c: 2188: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 32948  00B74C  8046               	bsf	(_inPipes+3)^0,0,c
 32949                           
 32950                           ;usb_device.c: 2189: inPipes[0].wCount.v[0] = 2;
 32951  00B74E  0E02               	movlw	2
 32952  00B750  6E47               	movwf	(_inPipes+4)^0,c
 32953  00B752  0012               	return		;funcret
 32954  00B754                     __end_of_USBStdGetStatusHandler:
 32955                           	callstack 0
 32956                           
 32957 ;; *************** function _USBStdGetDscHandler *****************
 32958 ;; Defined at:
 32959 ;;		line 2047 in file "usb/usb_device.c"
 32960 ;; Parameters:    Size  Location     Type
 32961 ;;		None
 32962 ;; Auto vars:     Size  Location     Type
 32963 ;;		None
 32964 ;; Return value:  Size  Location     Type
 32965 ;;                  1    wreg      void 
 32966 ;; Registers used:
 32967 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32968 ;; Tracked objects:
 32969 ;;		On entry : 3A/4
 32970 ;;		On exit  : 0/0
 32971 ;;		Unchanged: 0/0
 32972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32977 ;;Total ram usage:        2 bytes
 32978 ;; Hardware stack levels used: 1
 32979 ;; Hardware stack levels required when called: 4
 32980 ;; This function calls:
 32981 ;;		Nothing
 32982 ;; This function is called by:
 32983 ;;		_USBCheckStdRequest
 32984 ;; This function uses a non-reentrant model
 32985 ;;
 32986                           
 32987                           	psect	text154
 32988  00A124                     __ptext154:
 32989                           	callstack 0
 32990  00A124                     _USBStdGetDscHandler:
 32991                           	callstack 22
 32992                           
 32993                           ;usb_device.c: 2049: if(SetupPkt.bmRequestType == 0x80)
 32994                           
 32995                           ;incstack = 0
 32996  00A124  0E80               	movlw	128
 32997  00A126  0104               	movlb	4	; () banked
 32998  00A128  1930               	xorwf	48,w,b	;volatile
 32999  00A12A  A4D8               	btfss	status,2,c
 33000  00A12C  0012               	return	
 33001                           
 33002                           ; BSR set to: 4
 33003                           ;usb_device.c: 2050: {;usb_device.c: 2051: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 33004  00A12E  0EC0               	movlw	192
 33005  00A130  6E46               	movwf	(_inPipes+3)^0,c
 33006                           
 33007                           ;usb_device.c: 2053: switch(SetupPkt.bDescriptorType)
 33008  00A132  D072               	goto	l12483
 33009  00A134                     l12457:
 33010                           
 33011                           ; BSR set to: 4
 33012                           ;usb_device.c: 2059: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 33013  00A134  0E23               	movlw	low _device_dsc
 33014  00A136  6E43               	movwf	_inPipes^0,c
 33015  00A138  0E23               	movlw	high _device_dsc
 33016  00A13A  6E44               	movwf	(_inPipes+1)^0,c
 33017                           
 33018                           ; BSR set to: 4
 33019                           ;usb_device.c: 2061: inPipes[0].wCount.Val = sizeof(device_dsc);
 33020  00A13C  0E00               	movlw	0
 33021  00A13E  6E48               	movwf	(_inPipes+5)^0,c
 33022  00A140  0E12               	movlw	18
 33023  00A142  6E47               	movwf	(_inPipes+4)^0,c
 33024                           
 33025                           ;usb_device.c: 2062: break;
 33026  00A144  0012               	return	
 33027  00A146                     l12461:
 33028                           
 33029                           ; BSR set to: 4
 33030                           ;usb_device.c: 2067: if(SetupPkt.bDscIndex < 1)
 33031  00A146  5132               	movf	50,w,b	;volatile
 33032  00A148  A4D8               	btfss	status,2,c
 33033  00A14A  D03D               	goto	l12469
 33034                           
 33035                           ; BSR set to: 4
 33036                           ;usb_device.c: 2068: {;usb_device.c: 2072: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 33037  00A14C  5132               	movf	50,w,b	;volatile
 33038  00A14E  0D02               	mullw	2
 33039  00A150  0E94               	movlw	low _USB_CD_Ptr
 33040  00A152  24F3               	addwf	243,w,c
 33041  00A154  6EF6               	movwf	tblptrl,c
 33042  00A156  0E20               	movlw	high _USB_CD_Ptr
 33043  00A158  20F4               	addwfc	244,w,c
 33044  00A15A  6EF7               	movwf	tblptrh,c
 33045  00A15C                     	if	0	;There are less than 3 active tblptr bytes
 33046  00A15C                     	endif
 33047  00A15C  0009               	tblrd		*+
 33048  00A15E  CFF5 F043          	movff	tablat,_inPipes
 33049  00A162  000A               	tblrd		*-
 33050  00A164  CFF5 F044          	movff	tablat,_inPipes+1
 33051                           
 33052                           ; BSR set to: 4
 33053                           ;usb_device.c: 2078: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 33054  00A168  0E02               	movlw	2
 33055  00A16A  2443               	addwf	_inPipes^0,w,c
 33056  00A16C  6E0F               	movwf	??_USBStdGetDscHandler^0,c
 33057  00A16E  0E00               	movlw	0
 33058  00A170  2044               	addwfc	(_inPipes+1)^0,w,c
 33059  00A172  6E10               	movwf	(??_USBStdGetDscHandler+1)^0,c
 33060  00A174  C00F  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 33061  00A178  C010  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 33062  00A17C  6AF8               	clrf	tblptru,c
 33063  00A17E  0E0E               	movlw	(high __ramtop+-1)
 33064  00A180  64F7               	cpfsgt	tblptrh,c
 33065  00A182  D003               	bra	u12247
 33066  00A184  0008               	tblrd		*
 33067  00A186  50F5               	movf	tablat,w,c
 33068  00A188  D005               	bra	u12240
 33069  00A18A                     u12247:
 33070  00A18A  CFF6 FFE1          	movff	tblptrl,fsr1l
 33071  00A18E  CFF7 FFE2          	movff	tblptrh,fsr1h
 33072  00A192  50E7               	movf	indf1,w,c
 33073  00A194                     u12240:
 33074  00A194  6E47               	movwf	(_inPipes+4)^0,c
 33075                           
 33076                           ;usb_device.c: 2079: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 33077  00A196  0E03               	movlw	3
 33078  00A198  2443               	addwf	_inPipes^0,w,c
 33079  00A19A  6E0F               	movwf	??_USBStdGetDscHandler^0,c
 33080  00A19C  0E00               	movlw	0
 33081  00A19E  2044               	addwfc	(_inPipes+1)^0,w,c
 33082  00A1A0  6E10               	movwf	(??_USBStdGetDscHandler+1)^0,c
 33083  00A1A2  C00F  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 33084  00A1A6  C010  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 33085  00A1AA  6AF8               	clrf	tblptru,c
 33086  00A1AC  0E0E               	movlw	(high __ramtop+-1)
 33087  00A1AE  64F7               	cpfsgt	tblptrh,c
 33088  00A1B0  D003               	bra	u12257
 33089  00A1B2  0008               	tblrd		*
 33090  00A1B4  50F5               	movf	tablat,w,c
 33091  00A1B6  D005               	bra	u12250
 33092  00A1B8                     u12257:
 33093  00A1B8  CFF6 FFE1          	movff	tblptrl,fsr1l
 33094  00A1BC  CFF7 FFE2          	movff	tblptrh,fsr1h
 33095  00A1C0  50E7               	movf	indf1,w,c
 33096  00A1C2                     u12250:
 33097  00A1C2  6E48               	movwf	(_inPipes+5)^0,c
 33098                           
 33099                           ;usb_device.c: 2080: }
 33100  00A1C4  0012               	return	
 33101  00A1C6                     l12469:
 33102                           
 33103                           ; BSR set to: 4
 33104                           ;usb_device.c: 2081: else;usb_device.c: 2082: {;usb_device.c: 2083: inPipes[0].info.Val 
      +                          = 0;
 33105  00A1C6  0E00               	movlw	0
 33106  00A1C8  6E46               	movwf	(_inPipes+3)^0,c
 33107  00A1CA  0012               	return	
 33108  00A1CC                     l12471:
 33109                           
 33110                           ; BSR set to: 4
 33111                           ;usb_device.c: 2090: if(SetupPkt.bDscIndex<3)
 33112  00A1CC  0E03               	movlw	3
 33113  00A1CE  6132               	cpfslt	50,b	;volatile
 33114  00A1D0  D7FA               	goto	l12469
 33115                           
 33116                           ; BSR set to: 4
 33117                           ;usb_device.c: 2091: {;usb_device.c: 2093: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 33118  00A1D2  5132               	movf	50,w,b	;volatile
 33119  00A1D4  0D02               	mullw	2
 33120  00A1D6  0E89               	movlw	low _USB_SD_Ptr
 33121  00A1D8  24F3               	addwf	243,w,c
 33122  00A1DA  6EF6               	movwf	tblptrl,c
 33123  00A1DC  0E20               	movlw	high _USB_SD_Ptr
 33124  00A1DE  20F4               	addwfc	244,w,c
 33125  00A1E0  6EF7               	movwf	tblptrh,c
 33126  00A1E2                     	if	0	;There are less than 3 active tblptr bytes
 33127  00A1E2                     	endif
 33128  00A1E2  0009               	tblrd		*+
 33129  00A1E4  CFF5 F043          	movff	tablat,_inPipes
 33130  00A1E8  000A               	tblrd		*-
 33131  00A1EA  CFF5 F044          	movff	tablat,_inPipes+1
 33132                           
 33133                           ; BSR set to: 4
 33134                           ;usb_device.c: 2095: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 33135  00A1EE  C043  FFF6         	movff	_inPipes,tblptrl
 33136  00A1F2  C044  FFF7         	movff	_inPipes+1,tblptrh
 33137  00A1F6  6AF8               	clrf	tblptru,c
 33138  00A1F8  0E0E               	movlw	(high __ramtop+-1)
 33139  00A1FA  64F7               	cpfsgt	tblptrh,c
 33140  00A1FC  D003               	bra	u12277
 33141  00A1FE  0008               	tblrd		*
 33142  00A200  50F5               	movf	tablat,w,c
 33143  00A202  D005               	bra	u12270
 33144  00A204                     u12277:
 33145  00A204  CFF6 FFE1          	movff	tblptrl,fsr1l
 33146  00A208  CFF7 FFE2          	movff	tblptrh,fsr1h
 33147  00A20C  50E7               	movf	indf1,w,c
 33148  00A20E                     u12270:
 33149  00A20E  6E0F               	movwf	??_USBStdGetDscHandler^0,c
 33150  00A210  500F               	movf	??_USBStdGetDscHandler^0,w,c
 33151  00A212  6E47               	movwf	(_inPipes+4)^0,c
 33152  00A214  6A48               	clrf	(_inPipes+5)^0,c
 33153                           
 33154                           ;usb_device.c: 2096: }
 33155  00A216  0012               	return	
 33156  00A218                     l12483:
 33157                           
 33158                           ; BSR set to: 4
 33159  00A218  5133               	movf	51,w,b	;volatile
 33160                           
 33161                           ; Switch size 1, requested type "simple"
 33162                           ; Number of cases is 3, Range of values is 1 to 3
 33163                           ; switch strategies available:
 33164                           ; Name         Instructions Cycles
 33165                           ; simple_byte           10     6 (average)
 33166                           ;	Chosen strategy is simple_byte
 33167  00A21A  0A01               	xorlw	1	; case 1
 33168  00A21C  B4D8               	btfsc	status,2,c
 33169  00A21E  D78A               	goto	l12457
 33170  00A220  0A03               	xorlw	3	; case 2
 33171  00A222  B4D8               	btfsc	status,2,c
 33172  00A224  D790               	goto	l12461
 33173  00A226  0A01               	xorlw	1	; case 3
 33174  00A228  B4D8               	btfsc	status,2,c
 33175  00A22A  D7D0               	goto	l12471
 33176  00A22C  D7CC               	goto	l12469
 33177  00A22E                     __end_of_USBStdGetDscHandler:
 33178                           	callstack 0
 33179                           
 33180 ;; *************** function _USBStdFeatureReqHandler *****************
 33181 ;; Defined at:
 33182 ;;		line 2761 in file "usb/usb_device.c"
 33183 ;; Parameters:    Size  Location     Type
 33184 ;;		None
 33185 ;; Auto vars:     Size  Location     Type
 33186 ;;  p               2   39[COMRAM] PTR struct __BDT
 33187 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 33188 ;;  pUEP            2   36[COMRAM] PTR unsigned char 
 33189 ;;		 -> UEP0(1), 
 33190 ;;  current_ep_d    1   38[COMRAM] struct .
 33191 ;; Return value:  Size  Location     Type
 33192 ;;                  1    wreg      void 
 33193 ;; Registers used:
 33194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33195 ;; Tracked objects:
 33196 ;;		On entry : 3A/4
 33197 ;;		On exit  : 3A/0
 33198 ;;		Unchanged: 0/0
 33199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33201 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33203 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33204 ;;Total ram usage:        7 bytes
 33205 ;; Hardware stack levels used: 1
 33206 ;; Hardware stack levels required when called: 8
 33207 ;; This function calls:
 33208 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33209 ;; This function is called by:
 33210 ;;		_USBCheckStdRequest
 33211 ;; This function uses a non-reentrant model
 33212 ;;
 33213                           
 33214                           	psect	text155
 33215  007C54                     __ptext155:
 33216                           	callstack 0
 33217  007C54                     _USBStdFeatureReqHandler:
 33218                           	callstack 18
 33219                           
 33220                           ;usb_device.c: 2763: BDT_ENTRY *p;;usb_device.c: 2764: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2768: unsigned char* pUEP;;usb_device.c: 2772: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2773: (SetupPkt.Recipient == (0x00)))
 33221                           
 33222                           ;incstack = 0
 33223  007C54  0104               	movlb	4	; () banked
 33224  007C56  0532               	decf	50,w,b	;volatile
 33225  007C58  A4D8               	btfss	status,2,c
 33226  007C5A  D00F               	goto	l2343
 33227                           
 33228                           ; BSR set to: 4
 33229  007C5C  5130               	movf	48,w,b	;volatile
 33230  007C5E  0B1F               	andlw	31
 33231  007C60  0900               	iorlw	0
 33232  007C62  A4D8               	btfss	status,2,c
 33233  007C64  D00A               	goto	l2343
 33234                           
 33235                           ; BSR set to: 4
 33236                           ;usb_device.c: 2774: {;usb_device.c: 2775: inPipes[0].info.bits.busy = 1;
 33237  007C66  8E46               	bsf	(_inPipes+3)^0,7,c
 33238                           
 33239                           ; BSR set to: 4
 33240                           ;usb_device.c: 2776: if(SetupPkt.bRequest == 3)
 33241  007C68  0E03               	movlw	3
 33242  007C6A  1931               	xorwf	49,w,b	;volatile
 33243  007C6C  A4D8               	btfss	status,2,c
 33244  007C6E  D002               	goto	l12527
 33245                           
 33246                           ; BSR set to: 4
 33247                           ;usb_device.c: 2777: RemoteWakeup = 1;
 33248  007C70  0E01               	movlw	1
 33249  007C72  D001               	goto	L78
 33250  007C74                     l12527:
 33251                           
 33252                           ; BSR set to: 4
 33253                           ;usb_device.c: 2778: else;usb_device.c: 2779: RemoteWakeup = 0;
 33254  007C74  0E00               	movlw	0
 33255  007C76                     L78:
 33256  007C76  0100               	movlb	0	; () banked
 33257  007C78  6FF5               	movwf	_RemoteWakeup& (0+255),b
 33258  007C7A                     l2343:
 33259                           
 33260                           ;usb_device.c: 2780: };usb_device.c: 2783: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          784: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2785: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2786: (USBDeviceState == CONFIGURED_STATE))
 33261  007C7A  0104               	movlb	4	; () banked
 33262  007C7C  5132               	movf	50,w,b	;volatile
 33263  007C7E  A4D8               	btfss	status,2,c
 33264  007C80  0012               	return	
 33265                           
 33266                           ; BSR set to: 4
 33267  007C82  5130               	movf	48,w,b	;volatile
 33268  007C84  0B1F               	andlw	31
 33269  007C86  0A02               	xorlw	2
 33270  007C88  A4D8               	btfss	status,2,c
 33271  007C8A  0012               	return	
 33272                           
 33273                           ; BSR set to: 4
 33274  007C8C  5134               	movf	52,w,b	;volatile
 33275  007C8E  0B0F               	andlw	15
 33276  007C90  0900               	iorlw	0
 33277  007C92  B4D8               	btfsc	status,2,c
 33278  007C94  0012               	return	
 33279                           
 33280                           ; BSR set to: 4
 33281  007C96  5134               	movf	52,w,b	;volatile
 33282  007C98  0B0F               	andlw	15
 33283  007C9A  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33284  007C9C  0E03               	movlw	3
 33285  007C9E  6023               	cpfslt	??_USBStdFeatureReqHandler^0,c
 33286  007CA0  0012               	return	
 33287                           
 33288                           ; BSR set to: 4
 33289  007CA2  0E20               	movlw	32
 33290  007CA4  0100               	movlb	0	; () banked
 33291  007CA6  19FA               	xorwf	_USBDeviceState& (0+255),w,b
 33292  007CA8  A4D8               	btfss	status,2,c
 33293  007CAA  0012               	return	
 33294                           
 33295                           ; BSR set to: 0
 33296                           ;usb_device.c: 2787: {;usb_device.c: 2790: inPipes[0].info.bits.busy = 1;
 33297  007CAC  8E46               	bsf	(_inPipes+3)^0,7,c
 33298                           
 33299                           ;usb_device.c: 2793: if(SetupPkt.EPDir == 0)
 33300  007CAE  0104               	movlb	4	; () banked
 33301  007CB0  BF34               	btfsc	52,7,b	;volatile
 33302  007CB2  D018               	goto	l12543
 33303                           
 33304                           ; BSR set to: 4
 33305                           ;usb_device.c: 2794: {;usb_device.c: 2795: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 33306  007CB4  5134               	movf	52,w,b	;volatile
 33307  007CB6  0B0F               	andlw	15
 33308  007CB8  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33309  007CBA  5023               	movf	??_USBStdFeatureReqHandler^0,w,c
 33310  007CBC  0D02               	mullw	2
 33311  007CBE  0E38               	movlw	low _pBDTEntryOut
 33312  007CC0  24F3               	addwf	243,w,c
 33313  007CC2  6ED9               	movwf	fsr2l,c
 33314  007CC4  0E01               	movlw	high _pBDTEntryOut
 33315  007CC6  20F4               	addwfc	prodh,w,c
 33316  007CC8  6EDA               	movwf	fsr2h,c
 33317  007CCA  CFDE F028          	movff	postinc2,USBStdFeatureReqHandler@p
 33318  007CCE  CFDD F029          	movff	postdec2,USBStdFeatureReqHandler@p+1
 33319                           
 33320                           ; BSR set to: 4
 33321                           ;usb_device.c: 2796: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 33322  007CD2  5134               	movf	52,w,b	;volatile
 33323  007CD4  0B0F               	andlw	15
 33324  007CD6  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33325  007CD8  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 33326  007CDA  0E48               	movlw	low _ep_data_out
 33327  007CDC  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 33328  007CDE  6ED9               	movwf	fsr2l,c
 33329  007CE0  0E01               	movlw	high _ep_data_out
 33330  007CE2  D013               	goto	L79
 33331  007CE4                     l12543:
 33332                           
 33333                           ; BSR set to: 4
 33334                           ;usb_device.c: 2798: else;usb_device.c: 2799: {;usb_device.c: 2800: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 33335  007CE4  5134               	movf	52,w,b	;volatile
 33336  007CE6  0B0F               	andlw	15
 33337  007CE8  0D02               	mullw	2
 33338  007CEA  50F3               	movf	243,w,c
 33339  007CEC  0FD8               	addlw	low _pBDTEntryIn
 33340  007CEE  6ED9               	movwf	fsr2l,c
 33341  007CF0  6ADA               	clrf	fsr2h,c
 33342  007CF2  CFDE F028          	movff	postinc2,USBStdFeatureReqHandler@p
 33343  007CF6  CFDD F029          	movff	postdec2,USBStdFeatureReqHandler@p+1
 33344                           
 33345                           ; BSR set to: 4
 33346                           ;usb_device.c: 2801: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 33347  007CFA  5134               	movf	52,w,b	;volatile
 33348  007CFC  0B0F               	andlw	15
 33349  007CFE  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33350  007D00  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 33351  007D02  0E4B               	movlw	low _ep_data_in
 33352  007D04  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 33353  007D06  6ED9               	movwf	fsr2l,c
 33354  007D08  0E01               	movlw	high _ep_data_in
 33355  007D0A                     L79:
 33356  007D0A  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 33357  007D0C  6EDA               	movwf	fsr2h,c
 33358  007D0E  50DF               	movf	indf2,w,c
 33359  007D10  6E27               	movwf	USBStdFeatureReqHandler@current_ep_data^0,c
 33360                           
 33361                           ; BSR set to: 4
 33362                           ;usb_device.c: 2802: };usb_device.c: 2808: if(current_ep_data.bits.ping_pong_state == 0)
 33363  007D12  B027               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,0,c
 33364  007D14  D006               	goto	l12551
 33365                           
 33366                           ; BSR set to: 4
 33367                           ;usb_device.c: 2809: {;usb_device.c: 2810: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 33368  007D16  0EFB               	movlw	251
 33369  007D18  1428               	andwf	USBStdFeatureReqHandler@p^0,w,c
 33370  007D1A  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 33371  007D1C  0EFF               	movlw	255
 33372  007D1E  1429               	andwf	(USBStdFeatureReqHandler@p+1)^0,w,c
 33373  007D20  D004               	goto	L80
 33374  007D22                     l12551:
 33375                           
 33376                           ; BSR set to: 4
 33377                           ;usb_device.c: 2812: else;usb_device.c: 2813: {;usb_device.c: 2814: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 33378  007D22  0E04               	movlw	4
 33379  007D24  1028               	iorwf	USBStdFeatureReqHandler@p^0,w,c
 33380  007D26  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 33381  007D28  5029               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 33382  007D2A                     L80:
 33383  007D2A  6E29               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 33384                           
 33385                           ; BSR set to: 4
 33386                           ;usb_device.c: 2815: };usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 33387  007D2C  BF34               	btfsc	52,7,b	;volatile
 33388  007D2E  D00C               	goto	l12557
 33389                           
 33390                           ; BSR set to: 4
 33391                           ;usb_device.c: 2821: {;usb_device.c: 2822: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 33392  007D30  5134               	movf	52,w,b	;volatile
 33393  007D32  0B0F               	andlw	15
 33394  007D34  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33395  007D36  5023               	movf	??_USBStdFeatureReqHandler^0,w,c
 33396  007D38  0D02               	mullw	2
 33397  007D3A  0E38               	movlw	low _pBDTEntryOut
 33398  007D3C  24F3               	addwf	243,w,c
 33399  007D3E  6ED9               	movwf	fsr2l,c
 33400  007D40  0E01               	movlw	high _pBDTEntryOut
 33401  007D42  20F4               	addwfc	prodh,w,c
 33402  007D44  6EDA               	movwf	fsr2h,c
 33403  007D46  D007               	goto	L81
 33404  007D48                     l12557:
 33405                           
 33406                           ; BSR set to: 4
 33407                           ;usb_device.c: 2824: else;usb_device.c: 2825: {;usb_device.c: 2826: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 33408  007D48  5134               	movf	52,w,b	;volatile
 33409  007D4A  0B0F               	andlw	15
 33410  007D4C  0D02               	mullw	2
 33411  007D4E  50F3               	movf	243,w,c
 33412  007D50  0FD8               	addlw	low _pBDTEntryIn
 33413  007D52  6ED9               	movwf	fsr2l,c
 33414  007D54  6ADA               	clrf	fsr2h,c
 33415  007D56                     L81:
 33416  007D56  C028  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 33417  007D5A  C029  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 33418                           
 33419                           ; BSR set to: 4
 33420                           ;usb_device.c: 2827: };usb_device.c: 2830: if(SetupPkt.bRequest == 3)
 33421  007D5E  0E03               	movlw	3
 33422  007D60  1931               	xorwf	49,w,b	;volatile
 33423  007D62  A4D8               	btfss	status,2,c
 33424  007D64  D02A               	goto	l12569
 33425                           
 33426                           ; BSR set to: 4
 33427                           ;usb_device.c: 2831: {;usb_device.c: 2832: if(p->STAT.UOWN == 1)
 33428  007D66  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33429  007D6A  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33430  007D6E  AEDF               	btfss	indf2,7,c
 33431  007D70  D017               	goto	l2354
 33432                           
 33433                           ; BSR set to: 4
 33434                           ;usb_device.c: 2833: {;usb_device.c: 2836: if(SetupPkt.EPDir == 0)
 33435  007D72  BF34               	btfsc	52,7,b	;volatile
 33436  007D74  D009               	goto	l12567
 33437                           
 33438                           ; BSR set to: 4
 33439                           ;usb_device.c: 2837: {;usb_device.c: 2838: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 33440  007D76  5134               	movf	52,w,b	;volatile
 33441  007D78  0B0F               	andlw	15
 33442  007D7A  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33443  007D7C  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 33444  007D7E  0E48               	movlw	low _ep_data_out
 33445  007D80  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 33446  007D82  6ED9               	movwf	fsr2l,c
 33447  007D84  0E01               	movlw	high _ep_data_out
 33448  007D86  D008               	goto	L82
 33449  007D88                     l12567:
 33450                           
 33451                           ; BSR set to: 4
 33452                           ;usb_device.c: 2840: else;usb_device.c: 2841: {;usb_device.c: 2842: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 33453  007D88  5134               	movf	52,w,b	;volatile
 33454  007D8A  0B0F               	andlw	15
 33455  007D8C  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33456  007D8E  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 33457  007D90  0E4B               	movlw	low _ep_data_in
 33458  007D92  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 33459  007D94  6ED9               	movwf	fsr2l,c
 33460  007D96  0E01               	movlw	high _ep_data_in
 33461  007D98                     L82:
 33462  007D98  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 33463  007D9A  6EDA               	movwf	fsr2h,c
 33464  007D9C  0101               	movlb	1	; () banked
 33465  007D9E  82DF               	bsf	indf2,1,c
 33466  007DA0                     l2354:
 33467                           
 33468                           ;usb_device.c: 2843: };usb_device.c: 2844: };usb_device.c: 2847: p->STAT.Val |= 0x04;
 33469  007DA0  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33470  007DA4  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33471  007DA8  0E00               	movlw	0
 33472  007DAA  84DB               	bsf	plusw2,2,c
 33473                           
 33474                           ;usb_device.c: 2848: p->STAT.Val |= 0x80;
 33475  007DAC  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33476  007DB0  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33477  007DB4  0E00               	movlw	0
 33478  007DB6  8EDB               	bsf	plusw2,7,c
 33479                           
 33480                           ;usb_device.c: 2849: }
 33481  007DB8  0012               	return	
 33482  007DBA                     l12569:
 33483                           
 33484                           ; BSR set to: 4
 33485                           ;usb_device.c: 2850: else;usb_device.c: 2851: {;usb_device.c: 2855: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 33486  007DBA  0E04               	movlw	4
 33487  007DBC  1828               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 33488  007DBE  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 33489  007DC0  5029               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 33490  007DC2  6E29               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 33491                           
 33492                           ; BSR set to: 4
 33493                           ;usb_device.c: 2857: if(p->STAT.UOWN == 1)
 33494  007DC4  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33495  007DC8  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33496  007DCC  AEDF               	btfss	indf2,7,c
 33497  007DCE  D01B               	goto	l12579
 33498                           
 33499                           ; BSR set to: 4
 33500                           ;usb_device.c: 2858: {;usb_device.c: 2861: p->STAT.Val &= (~0x80);
 33501  007DD0  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33502  007DD4  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33503  007DD8  0E7F               	movlw	127
 33504  007DDA  16DF               	andwf	indf2,f,c
 33505                           
 33506                           ; BSR set to: 4
 33507                           ;usb_device.c: 2862: p->STAT.Val |= 0x40;
 33508  007DDC  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33509  007DE0  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33510  007DE4  0E00               	movlw	0
 33511  007DE6  8CDB               	bsf	plusw2,6,c
 33512                           
 33513                           ; BSR set to: 4
 33514                           ;usb_device.c: 2863: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATE
      +                          D,p,sizeof(p));
 33515  007DE8  0E00               	movlw	0
 33516  007DEA  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 33517  007DEC  0E05               	movlw	5
 33518  007DEE  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 33519  007DF0  C028  F01D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 33520  007DF4  C029  F01E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 33521  007DF8  0E00               	movlw	0
 33522  007DFA  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 33523  007DFC  0E02               	movlw	2
 33524  007DFE  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 33525  007E00  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33526                           
 33527                           ;usb_device.c: 2864: }
 33528  007E04  D006               	goto	l12581
 33529  007E06                     l12579:
 33530                           
 33531                           ; BSR set to: 4
 33532                           ;usb_device.c: 2865: else;usb_device.c: 2866: {;usb_device.c: 2868: p->STAT.Val |= 0x40;
 33533  007E06  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33534  007E0A  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33535  007E0E  0E00               	movlw	0
 33536  007E10  8CDB               	bsf	plusw2,6,c
 33537  007E12                     l12581:
 33538                           
 33539                           ;usb_device.c: 2869: };usb_device.c: 2873: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 33540  007E12  0E04               	movlw	4
 33541  007E14  1828               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 33542  007E16  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 33543  007E18  5029               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 33544  007E1A  6E29               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 33545                           
 33546                           ;usb_device.c: 2879: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 33547  007E1C  B227               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,1,c
 33548  007E1E  D006               	goto	u12500
 33549  007E20  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33550  007E24  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33551  007E28  AEDF               	btfss	indf2,7,c
 33552  007E2A  D02D               	goto	l12595
 33553  007E2C                     u12500:
 33554                           
 33555                           ;usb_device.c: 2880: {;usb_device.c: 2881: if(SetupPkt.EPDir == 0)
 33556  007E2C  0104               	movlb	4	; () banked
 33557  007E2E  BF34               	btfsc	52,7,b	;volatile
 33558  007E30  D009               	goto	l12589
 33559                           
 33560                           ; BSR set to: 4
 33561                           ;usb_device.c: 2882: {;usb_device.c: 2883: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 33562  007E32  5134               	movf	52,w,b	;volatile
 33563  007E34  0B0F               	andlw	15
 33564  007E36  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33565  007E38  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 33566  007E3A  0E48               	movlw	low _ep_data_out
 33567  007E3C  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 33568  007E3E  6ED9               	movwf	fsr2l,c
 33569  007E40  0E01               	movlw	high _ep_data_out
 33570  007E42  D008               	goto	L83
 33571  007E44                     l12589:
 33572                           
 33573                           ; BSR set to: 4
 33574                           ;usb_device.c: 2885: else;usb_device.c: 2886: {;usb_device.c: 2887: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 33575  007E44  5134               	movf	52,w,b	;volatile
 33576  007E46  0B0F               	andlw	15
 33577  007E48  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33578  007E4A  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 33579  007E4C  0E4B               	movlw	low _ep_data_in
 33580  007E4E  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 33581  007E50  6ED9               	movwf	fsr2l,c
 33582  007E52  0E01               	movlw	high _ep_data_in
 33583  007E54                     L83:
 33584  007E54  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 33585  007E56  6EDA               	movwf	fsr2h,c
 33586  007E58  0101               	movlb	1	; () banked
 33587  007E5A  92DF               	bcf	indf2,1,c
 33588                           
 33589                           ; BSR set to: 1
 33590                           ;usb_device.c: 2888: };usb_device.c: 2890: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 33591  007E5C  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33592  007E60  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33593  007E64  0E3B               	movlw	59
 33594  007E66  16DF               	andwf	indf2,f,c
 33595                           
 33596                           ; BSR set to: 1
 33597                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATE
      +                          D,p,sizeof(p));
 33598  007E68  0E00               	movlw	0
 33599  007E6A  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 33600  007E6C  0E05               	movlw	5
 33601  007E6E  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 33602  007E70  C028  F01D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 33603  007E74  C029  F01E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 33604  007E78  0E00               	movlw	0
 33605  007E7A  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 33606  007E7C  0E02               	movlw	2
 33607  007E7E  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 33608  007E80  ECDA  F062         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33609                           
 33610                           ;usb_device.c: 2894: }
 33611  007E84  D006               	goto	l12597
 33612  007E86                     l12595:
 33613                           
 33614                           ;usb_device.c: 2895: else;usb_device.c: 2896: {;usb_device.c: 2898: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 33615  007E86  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 33616  007E8A  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 33617  007E8E  0E3B               	movlw	59
 33618  007E90  16DF               	andwf	indf2,f,c
 33619  007E92                     l12597:
 33620                           
 33621                           ;usb_device.c: 2899: };usb_device.c: 2946: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 33622  007E92  0104               	movlb	4	; () banked
 33623  007E94  5134               	movf	52,w,b	;volatile
 33624  007E96  0B0F               	andlw	15
 33625  007E98  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 33626  007E9A  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 33627  007E9C  0E26               	movlw	38
 33628  007E9E  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 33629  007EA0  6E25               	movwf	USBStdFeatureReqHandler@pUEP^0,c
 33630  007EA2  0E0F               	movlw	15
 33631  007EA4  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 33632  007EA6  6E26               	movwf	(USBStdFeatureReqHandler@pUEP+1)^0,c
 33633                           
 33634                           ; BSR set to: 4
 33635                           ;usb_device.c: 2950: *pUEP &= ~0x0001;
 33636  007EA8  C025  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 33637  007EAC  C026  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 33638  007EB0  0EFE               	movlw	254
 33639  007EB2  16DF               	andwf	indf2,f,c
 33640  007EB4  0012               	return		;funcret
 33641  007EB6                     __end_of_USBStdFeatureReqHandler:
 33642                           	callstack 0
 33643                           
 33644 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 33645 ;; Defined at:
 33646 ;;		line 50 in file "usb_events.c"
 33647 ;; Parameters:    Size  Location     Type
 33648 ;;  event           2   26[COMRAM] enum E5233
 33649 ;;  pdata           2   28[COMRAM] PTR void 
 33650 ;;		 -> RAM(3775), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 33651 ;;		 -> NULL(0), 
 33652 ;;  size            2   30[COMRAM] unsigned int 
 33653 ;; Auto vars:     Size  Location     Type
 33654 ;;		None
 33655 ;; Return value:  Size  Location     Type
 33656 ;;                  1    wreg      unsigned char 
 33657 ;; Registers used:
 33658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33659 ;; Tracked objects:
 33660 ;;		On entry : 0/F
 33661 ;;		On exit  : 0/0
 33662 ;;		Unchanged: 0/0
 33663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33664 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33667 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33668 ;;Total ram usage:        8 bytes
 33669 ;; Hardware stack levels used: 1
 33670 ;; Hardware stack levels required when called: 7
 33671 ;; This function calls:
 33672 ;;		_CDCInitEP
 33673 ;;		_SYSTEM_Initialize
 33674 ;;		_USBCheckCDCRequest
 33675 ;;		_app_usb_init
 33676 ;; This function is called by:
 33677 ;;		_USBDeviceTasks
 33678 ;;		_USBStdSetCfgHandler
 33679 ;;		_USBSuspend
 33680 ;;		_USBWakeFromSuspend
 33681 ;;		_USBCtrlTrfSetupHandler
 33682 ;;		_USBCheckStdRequest
 33683 ;;		_USBStdFeatureReqHandler
 33684 ;; This function uses a non-reentrant model
 33685 ;;
 33686                           
 33687                           	psect	text156
 33688  00C5B4                     __ptext156:
 33689                           	callstack 0
 33690  00C5B4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 33691                           	callstack 22
 33692                           
 33693                           ;usb_events.c: 52: switch( (int) event )
 33694                           
 33695                           ;incstack = 0
 33696  00C5B4  D010               	goto	l11279
 33697  00C5B6                     l11267:
 33698                           
 33699                           ;usb_events.c: 71: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 33700  00C5B6  0E01               	movlw	1
 33701  00C5B8  EC94  F066         	call	_SYSTEM_Initialize
 33702                           
 33703                           ;usb_events.c: 72: break;
 33704  00C5BC  0012               	return	
 33705  00C5BE                     l11269:
 33706                           
 33707                           ;usb_events.c: 81: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 33708  00C5BE  0E02               	movlw	2
 33709  00C5C0  EC94  F066         	call	_SYSTEM_Initialize
 33710                           
 33711                           ;usb_events.c: 82: break;
 33712  00C5C4  0012               	return	
 33713  00C5C6                     l11271:
 33714                           
 33715                           ;usb_events.c: 87: CDCInitEP();
 33716  00C5C6  ECF9  F064         	call	_CDCInitEP	;wreg free
 33717                           
 33718                           ; BSR set to: 1
 33719                           ;usb_events.c: 88: app_usb_init();
 33720  00C5CA  EC40  F06E         	call	_app_usb_init	;wreg free
 33721                           
 33722                           ;usb_events.c: 89: break;
 33723  00C5CE  0012               	return	
 33724  00C5D0                     l11275:
 33725                           
 33726                           ;usb_events.c: 97: USBCheckCDCRequest();
 33727  00C5D0  EC50  F05C         	call	_USBCheckCDCRequest	;wreg free
 33728                           
 33729                           ;usb_events.c: 98: break;
 33730  00C5D4  0012               	return	
 33731  00C5D6                     l11279:
 33732  00C5D6  C01B  F021         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 33733  00C5DA  C01C  F022         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 33734                           
 33735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 33736                           ; Switch size 1, requested type "simple"
 33737                           ; Number of cases is 2, Range of values is 0 to 127
 33738                           ; switch strategies available:
 33739                           ; Name         Instructions Cycles
 33740                           ; simple_byte            7     4 (average)
 33741                           ;	Chosen strategy is simple_byte
 33742  00C5DE  5022               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)^0,w,c
 33743  00C5E0  0A00               	xorlw	0	; case 0
 33744  00C5E2  B4D8               	btfsc	status,2,c
 33745  00C5E4  D004               	goto	l34527
 33746  00C5E6  0A7F               	xorlw	127	; case 127
 33747  00C5E8  A4D8               	btfss	status,2,c
 33748  00C5EA  0012               	return	
 33749  00C5EC  D01A               	goto	l34529
 33750  00C5EE                     l34527:
 33751                           
 33752                           ; Switch size 1, requested type "simple"
 33753                           ; Number of cases is 8, Range of values is 1 to 117
 33754                           ; switch strategies available:
 33755                           ; Name         Instructions Cycles
 33756                           ; simple_byte           25    13 (average)
 33757                           ;	Chosen strategy is simple_byte
 33758  00C5EE  5021               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 33759  00C5F0  0A01               	xorlw	1	; case 1
 33760  00C5F2  B4D8               	btfsc	status,2,c
 33761  00C5F4  D7E8               	goto	l11271
 33762  00C5F6  0A03               	xorlw	3	; case 2
 33763  00C5F8  B4D8               	btfsc	status,2,c
 33764  00C5FA  0012               	return	
 33765  00C5FC  0A01               	xorlw	1	; case 3
 33766  00C5FE  B4D8               	btfsc	status,2,c
 33767  00C600  D7E7               	goto	l11275
 33768  00C602  0A06               	xorlw	6	; case 5
 33769  00C604  B4D8               	btfsc	status,2,c
 33770  00C606  0012               	return	
 33771  00C608  0A77               	xorlw	119	; case 114
 33772  00C60A  B4D8               	btfsc	status,2,c
 33773  00C60C  0012               	return	
 33774  00C60E  0A01               	xorlw	1	; case 115
 33775  00C610  B4D8               	btfsc	status,2,c
 33776  00C612  0012               	return	
 33777  00C614  0A07               	xorlw	7	; case 116
 33778  00C616  B4D8               	btfsc	status,2,c
 33779  00C618  D7D2               	goto	l11269
 33780  00C61A  0A01               	xorlw	1	; case 117
 33781  00C61C  A4D8               	btfss	status,2,c
 33782  00C61E  0012               	return	
 33783  00C620  D7CA               	goto	l11267
 33784  00C622                     l34529:
 33785                           
 33786                           ; Switch size 1, requested type "simple"
 33787                           ; Number of cases is 1, Range of values is 255 to 255
 33788                           ; switch strategies available:
 33789                           ; Name         Instructions Cycles
 33790                           ; simple_byte            4     3 (average)
 33791                           ;	Chosen strategy is simple_byte
 33792  00C622  5021               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 33793  00C624  0AFF               	xorlw	255	; case 255
 33794  00C626  0012               	return	
 33795  00C628                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 33796                           	callstack 0
 33797                           
 33798 ;; *************** function _app_usb_init *****************
 33799 ;; Defined at:
 33800 ;;		line 50 in file "app_usb_cdc.c"
 33801 ;; Parameters:    Size  Location     Type
 33802 ;;		None
 33803 ;; Auto vars:     Size  Location     Type
 33804 ;;		None
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  1    wreg      void 
 33807 ;; Registers used:
 33808 ;;		wreg, status,2
 33809 ;; Tracked objects:
 33810 ;;		On entry : 3F/1
 33811 ;;		On exit  : 3F/1
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;Total ram usage:        0 bytes
 33819 ;; Hardware stack levels used: 1
 33820 ;; Hardware stack levels required when called: 4
 33821 ;; This function calls:
 33822 ;;		Nothing
 33823 ;; This function is called by:
 33824 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33825 ;; This function uses a non-reentrant model
 33826 ;;
 33827                           
 33828                           	psect	text157
 33829  00DC80                     __ptext157:
 33830                           	callstack 0
 33831  00DC80                     _app_usb_init:
 33832                           	callstack 24
 33833                           
 33834                           ; BSR set to: 1
 33835                           ;app_usb_cdc.c: 52: line_coding.bCharFormat = 0;
 33836                           
 33837                           ;incstack = 0
 33838  00DC80  0E00               	movlw	0
 33839  00DC82  6FF0               	movwf	(_line_coding+4)& (0+255),b
 33840                           
 33841                           ;app_usb_cdc.c: 53: line_coding.bDataBits = 8;
 33842  00DC84  0E08               	movlw	8
 33843  00DC86  6FF2               	movwf	(_line_coding+6)& (0+255),b
 33844                           
 33845                           ;app_usb_cdc.c: 54: line_coding.bParityType = 0;
 33846  00DC88  0E00               	movlw	0
 33847  00DC8A  6FF1               	movwf	(_line_coding+5)& (0+255),b
 33848                           
 33849                           ;app_usb_cdc.c: 55: line_coding.dwDTERate = 19200;
 33850  00DC8C  0E00               	movlw	0
 33851  00DC8E  6FEC               	movwf	_line_coding& (0+255),b
 33852  00DC90  0E4B               	movlw	75
 33853  00DC92  6FED               	movwf	(_line_coding+1)& (0+255),b
 33854  00DC94  0E00               	movlw	0
 33855  00DC96  6FEE               	movwf	(_line_coding+2)& (0+255),b
 33856  00DC98  0E00               	movlw	0
 33857  00DC9A  6FEF               	movwf	(_line_coding+3)& (0+255),b
 33858                           
 33859                           ; BSR set to: 1
 33860  00DC9C  0012               	return		;funcret
 33861  00DC9E                     __end_of_app_usb_init:
 33862                           	callstack 0
 33863                           
 33864 ;; *************** function _USBCheckCDCRequest *****************
 33865 ;; Defined at:
 33866 ;;		line 148 in file "usb/usb_device_cdc.c"
 33867 ;; Parameters:    Size  Location     Type
 33868 ;;		None
 33869 ;; Auto vars:     Size  Location     Type
 33870 ;;		None
 33871 ;; Return value:  Size  Location     Type
 33872 ;;                  1    wreg      void 
 33873 ;; Registers used:
 33874 ;;		wreg, status,2, status,0
 33875 ;; Tracked objects:
 33876 ;;		On entry : 0/F
 33877 ;;		On exit  : 3A/0
 33878 ;;		Unchanged: 0/0
 33879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33884 ;;Total ram usage:        0 bytes
 33885 ;; Hardware stack levels used: 1
 33886 ;; Hardware stack levels required when called: 4
 33887 ;; This function calls:
 33888 ;;		Nothing
 33889 ;; This function is called by:
 33890 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33891 ;; This function uses a non-reentrant model
 33892 ;;
 33893                           
 33894                           	psect	text158
 33895  00B8A0                     __ptext158:
 33896                           	callstack 0
 33897  00B8A0                     _USBCheckCDCRequest:
 33898                           	callstack 24
 33899                           
 33900                           ;usb_device_cdc.c: 153: if(SetupPkt.Recipient != (0x01)) return;
 33901                           
 33902                           ; BSR set to: 1
 33903                           ;incstack = 0
 33904  00B8A0  0104               	movlb	4	; () banked
 33905  00B8A2  5130               	movf	48,w,b	;volatile
 33906  00B8A4  0B1F               	andlw	31
 33907  00B8A6  06E8               	decf	wreg,f,c
 33908  00B8A8  A4D8               	btfss	status,2,c
 33909  00B8AA  0012               	return	
 33910                           
 33911                           ; BSR set to: 4
 33912                           ;usb_device_cdc.c: 158: if(SetupPkt.RequestType != (0x20>>5)) return;
 33913  00B8AC  3930               	swapf	48,w,b	;volatile
 33914  00B8AE  32E8               	rrcf	wreg,f,c
 33915  00B8B0  0B03               	andlw	3
 33916  00B8B2  06E8               	decf	wreg,f,c
 33917  00B8B4  A4D8               	btfss	status,2,c
 33918  00B8B6  0012               	return	
 33919                           
 33920                           ; BSR set to: 4
 33921                           ;usb_device_cdc.c: 164: if((SetupPkt.bIntfID != 0x0)&&;usb_device_cdc.c: 165: (SetupPkt.
      +                          bIntfID != 0x01)) return;
 33922  00B8B8  5134               	movf	52,w,b	;volatile
 33923  00B8BA  B4D8               	btfsc	status,2,c
 33924  00B8BC  D032               	goto	l10629
 33925                           
 33926                           ; BSR set to: 4
 33927  00B8BE  0534               	decf	52,w,b	;volatile
 33928  00B8C0  A4D8               	btfss	status,2,c
 33929  00B8C2  0012               	return	
 33930  00B8C4  D02E               	goto	l10629
 33931  00B8C6                     l10605:
 33932                           
 33933                           ; BSR set to: 4
 33934                           ;usb_device_cdc.c: 172: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 33935  00B8C6  0EF4               	movlw	low _dummy_encapsulated_cmd_response
 33936  00B8C8  6E43               	movwf	_inPipes^0,c
 33937  00B8CA  0E02               	movlw	high _dummy_encapsulated_cmd_response
 33938  00B8CC  6E44               	movwf	(_inPipes+1)^0,c
 33939                           
 33940                           ; BSR set to: 4
 33941                           ;usb_device_cdc.c: 173: inPipes[0].wCount.Val = 0x08;
 33942  00B8CE  0E00               	movlw	0
 33943  00B8D0  6E48               	movwf	(_inPipes+5)^0,c
 33944  00B8D2  0E08               	movlw	8
 33945  00B8D4  6E47               	movwf	(_inPipes+4)^0,c
 33946                           
 33947                           ; BSR set to: 4
 33948                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33949  00B8D6  8046               	bsf	(_inPipes+3)^0,0,c
 33950  00B8D8                     l10611:
 33951                           
 33952                           ; BSR set to: 4
 33953                           ;usb_device_cdc.c: 175: inPipes[0].info.bits.busy = 1;
 33954  00B8D8  8E46               	bsf	(_inPipes+3)^0,7,c
 33955                           
 33956                           ;usb_device_cdc.c: 176: break;
 33957  00B8DA  0012               	return	
 33958  00B8DC                     l10613:
 33959                           
 33960                           ; BSR set to: 4
 33961                           ;usb_device_cdc.c: 179: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 33962  00B8DC  0EF4               	movlw	low _dummy_encapsulated_cmd_response
 33963  00B8DE  6E43               	movwf	_inPipes^0,c
 33964  00B8E0  0E02               	movlw	high _dummy_encapsulated_cmd_response
 33965  00B8E2  6E44               	movwf	(_inPipes+1)^0,c
 33966  00B8E4  D7F9               	goto	l10611
 33967  00B8E6                     l2425:
 33968                           
 33969                           ; BSR set to: 4
 33970                           ;usb_device_cdc.c: 186: outPipes[0].wCount.Val = SetupPkt.wLength;
 33971  00B8E6  C436 F134          	movff	1078,_outPipes+4	;volatile
 33972  00B8EA  C437 F135          	movff	1079,_outPipes+5	;volatile
 33973                           
 33974                           ; BSR set to: 4
 33975                           ;usb_device_cdc.c: 187: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 33976  00B8EE  0EEC               	movlw	low _line_coding
 33977  00B8F0  0101               	movlb	1	; () banked
 33978  00B8F2  6F30               	movwf	_outPipes& (0+255),b
 33979  00B8F4  0E01               	movlw	high _line_coding
 33980  00B8F6  6F31               	movwf	(_outPipes+1)& (0+255),b
 33981                           
 33982                           ;usb_device_cdc.c: 188: outPipes[0].pFunc = (0);
 33983  00B8F8  0E00               	movlw	0
 33984  00B8FA  6F36               	movwf	(_outPipes+6)& (0+255),b
 33985  00B8FC  0E00               	movlw	0
 33986  00B8FE  6F37               	movwf	(_outPipes+7)& (0+255),b
 33987                           
 33988                           ; BSR set to: 1
 33989                           ;usb_device_cdc.c: 189: outPipes[0].info.bits.busy = 1;
 33990  00B900  8F33               	bsf	(_outPipes+3)& (0+255),7,b
 33991                           
 33992                           ;usb_device_cdc.c: 190: break;
 33993  00B902  0012               	return	
 33994  00B904                     l10621:
 33995                           
 33996                           ; BSR set to: 4
 33997                           ;usb_device_cdc.c: 193: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 33998  00B904  0EEC               	movlw	low _line_coding
 33999  00B906  6E43               	movwf	_inPipes^0,c
 34000  00B908  0E01               	movlw	high _line_coding
 34001  00B90A  6E44               	movwf	(_inPipes+1)^0,c
 34002                           
 34003                           ; BSR set to: 4
 34004  00B90C  0E00               	movlw	0
 34005  00B90E  6E48               	movwf	(_inPipes+5)^0,c
 34006  00B910  0E07               	movlw	7
 34007  00B912  6E47               	movwf	(_inPipes+4)^0,c
 34008                           
 34009                           ; BSR set to: 4
 34010  00B914  0EC1               	movlw	193
 34011  00B916  6E46               	movwf	(_inPipes+3)^0,c
 34012                           
 34013                           ;usb_device_cdc.c: 197: break;
 34014  00B918  0012               	return	
 34015  00B91A                     l2427:
 34016                           
 34017                           ; BSR set to: 4
 34018                           ;usb_device_cdc.c: 200: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 34019  00B91A  C432 F0E8          	movff	1074,_control_signal_bitmap	;volatile
 34020                           
 34021                           ;usb_device_cdc.c: 232: inPipes[0].info.bits.busy = 1;
 34022  00B91E  8E46               	bsf	(_inPipes+3)^0,7,c
 34023                           
 34024                           ;usb_device_cdc.c: 233: break;
 34025  00B920  0012               	return	
 34026  00B922                     l10629:
 34027                           
 34028                           ; BSR set to: 4
 34029  00B922  5131               	movf	49,w,b	;volatile
 34030                           
 34031                           ; Switch size 1, requested type "simple"
 34032                           ; Number of cases is 5, Range of values is 0 to 34
 34033                           ; switch strategies available:
 34034                           ; Name         Instructions Cycles
 34035                           ; simple_byte           16     9 (average)
 34036                           ;	Chosen strategy is simple_byte
 34037  00B924  0A00               	xorlw	0	; case 0
 34038  00B926  B4D8               	btfsc	status,2,c
 34039  00B928  D7CE               	goto	l10605
 34040  00B92A  0A01               	xorlw	1	; case 1
 34041  00B92C  B4D8               	btfsc	status,2,c
 34042  00B92E  D7D6               	goto	l10613
 34043  00B930  0A21               	xorlw	33	; case 32
 34044  00B932  B4D8               	btfsc	status,2,c
 34045  00B934  D7D8               	goto	l2425
 34046  00B936  0A01               	xorlw	1	; case 33
 34047  00B938  B4D8               	btfsc	status,2,c
 34048  00B93A  D7E4               	goto	l10621
 34049  00B93C  0A03               	xorlw	3	; case 34
 34050  00B93E  A4D8               	btfss	status,2,c
 34051  00B940  0012               	return	
 34052  00B942  D7EB               	goto	l2427
 34053  00B944                     __end_of_USBCheckCDCRequest:
 34054                           	callstack 0
 34055                           
 34056 ;; *************** function _SYSTEM_Initialize *****************
 34057 ;; Defined at:
 34058 ;;		line 73 in file "system.c"
 34059 ;; Parameters:    Size  Location     Type
 34060 ;;  state           1    wreg     enum E5194
 34061 ;; Auto vars:     Size  Location     Type
 34062 ;;  state           1   18[COMRAM] enum E5194
 34063 ;;  pll_startup_    2   16[COMRAM] unsigned int 
 34064 ;;  pll_startup_    2   14[COMRAM] unsigned int 
 34065 ;; Return value:  Size  Location     Type
 34066 ;;                  1    wreg      void 
 34067 ;; Registers used:
 34068 ;;		wreg, status,2, status,0
 34069 ;; Tracked objects:
 34070 ;;		On entry : 0/0
 34071 ;;		On exit  : 0/0
 34072 ;;		Unchanged: 0/0
 34073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34075 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34077 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34078 ;;Total ram usage:        5 bytes
 34079 ;; Hardware stack levels used: 1
 34080 ;; Hardware stack levels required when called: 4
 34081 ;; This function calls:
 34082 ;;		Nothing
 34083 ;; This function is called by:
 34084 ;;		_main
 34085 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34086 ;; This function uses a non-reentrant model
 34087 ;;
 34088                           
 34089                           	psect	text159
 34090  00CD28                     __ptext159:
 34091                           	callstack 0
 34092  00CD28                     _SYSTEM_Initialize:
 34093                           	callstack 24
 34094                           
 34095                           ;incstack = 0
 34096                           ;SYSTEM_Initialize@state stored from wreg
 34097  00CD28  6E13               	movwf	SYSTEM_Initialize@state^0,c
 34098                           
 34099                           ;system.c: 75: switch(state)
 34100  00CD2A  D01D               	goto	l10577
 34101  00CD2C                     l10565:
 34102                           
 34103                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 600;
 34104  00CD2C  0E02               	movlw	2
 34105  00CD2E  6E10               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)^0,c
 34106  00CD30  0E58               	movlw	88
 34107  00CD32  6E0F               	movwf	SYSTEM_Initialize@pll_startup_counter^0,c
 34108                           
 34109                           ;system.c: 86: OSCTUNEbits.PLLEN = 1;
 34110  00CD34  8C9B               	bsf	155,6,c	;volatile
 34111  00CD36                     l10569:
 34112  00CD36  060F               	decf	SYSTEM_Initialize@pll_startup_counter^0,f,c
 34113  00CD38  A0D8               	btfss	status,0,c
 34114  00CD3A  0610               	decf	(SYSTEM_Initialize@pll_startup_counter+1)^0,f,c
 34115  00CD3C  280F               	incf	SYSTEM_Initialize@pll_startup_counter^0,w,c
 34116  00CD3E  E1FB               	bnz	l10569
 34117  00CD40  2810               	incf	(SYSTEM_Initialize@pll_startup_counter+1)^0,w,c
 34118  00CD42  B4D8               	btfsc	status,2,c
 34119  00CD44  0012               	return	
 34120  00CD46  D7F7               	goto	l10569
 34121  00CD48                     l10571:
 34122                           
 34123                           ;system.c: 109: OSCCON = 0x70;
 34124  00CD48  0E70               	movlw	112
 34125  00CD4A  6ED3               	movwf	211,c	;volatile
 34126                           
 34127                           ;system.c: 115: {;system.c: 116: unsigned int pll_startup_counter = 800;
 34128  00CD4C  0E03               	movlw	3
 34129  00CD4E  6E12               	movwf	(SYSTEM_Initialize@pll_startup_counter_5972+1)^0,c
 34130  00CD50  0E20               	movlw	32
 34131  00CD52  6E11               	movwf	SYSTEM_Initialize@pll_startup_counter_5972^0,c
 34132  00CD54                     l10573:
 34133  00CD54  0611               	decf	SYSTEM_Initialize@pll_startup_counter_5972^0,f,c
 34134  00CD56  A0D8               	btfss	status,0,c
 34135  00CD58  0612               	decf	(SYSTEM_Initialize@pll_startup_counter_5972+1)^0,f,c
 34136  00CD5A  2811               	incf	SYSTEM_Initialize@pll_startup_counter_5972^0,w,c
 34137  00CD5C  E1FB               	bnz	l10573
 34138  00CD5E  2812               	incf	(SYSTEM_Initialize@pll_startup_counter_5972+1)^0,w,c
 34139  00CD60  B4D8               	btfsc	status,2,c
 34140  00CD62  0012               	return	
 34141  00CD64  D7F7               	goto	l10573
 34142  00CD66                     l10577:
 34143  00CD66  5013               	movf	SYSTEM_Initialize@state^0,w,c
 34144                           
 34145                           ; Switch size 1, requested type "simple"
 34146                           ; Number of cases is 3, Range of values is 0 to 2
 34147                           ; switch strategies available:
 34148                           ; Name         Instructions Cycles
 34149                           ; simple_byte           10     6 (average)
 34150                           ;	Chosen strategy is simple_byte
 34151  00CD68  0A00               	xorlw	0	; case 0
 34152  00CD6A  B4D8               	btfsc	status,2,c
 34153  00CD6C  D7DF               	goto	l10565
 34154  00CD6E  0A01               	xorlw	1	; case 1
 34155  00CD70  B4D8               	btfsc	status,2,c
 34156  00CD72  0012               	return	
 34157  00CD74  0A03               	xorlw	3	; case 2
 34158  00CD76  A4D8               	btfss	status,2,c
 34159  00CD78  0012               	return	
 34160  00CD7A  D7E6               	goto	l10571
 34161  00CD7C                     __end_of_SYSTEM_Initialize:
 34162                           	callstack 0
 34163                           
 34164 ;; *************** function _CDCInitEP *****************
 34165 ;; Defined at:
 34166 ;;		line 295 in file "usb/usb_device_cdc.c"
 34167 ;; Parameters:    Size  Location     Type
 34168 ;;		None
 34169 ;; Auto vars:     Size  Location     Type
 34170 ;;		None
 34171 ;; Return value:  Size  Location     Type
 34172 ;;                  1    wreg      void 
 34173 ;; Registers used:
 34174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34175 ;; Tracked objects:
 34176 ;;		On entry : 0/F
 34177 ;;		On exit  : 3F/1
 34178 ;;		Unchanged: 0/0
 34179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34184 ;;Total ram usage:        0 bytes
 34185 ;; Hardware stack levels used: 1
 34186 ;; Hardware stack levels required when called: 6
 34187 ;; This function calls:
 34188 ;;		_USBEnableEndpoint
 34189 ;;		_USBTransferOnePacket
 34190 ;; This function is called by:
 34191 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34192 ;; This function uses a non-reentrant model
 34193 ;;
 34194                           
 34195                           	psect	text160
 34196  00C9F2                     __ptext160:
 34197                           	callstack 0
 34198  00C9F2                     _CDCInitEP:
 34199                           	callstack 22
 34200                           
 34201                           ;usb_device_cdc.c: 298: line_coding.dwDTERate = 19200;
 34202                           
 34203                           ;incstack = 0
 34204  00C9F2  0E00               	movlw	0
 34205  00C9F4  0101               	movlb	1	; () banked
 34206  00C9F6  6FEC               	movwf	_line_coding& (0+255),b
 34207  00C9F8  0E4B               	movlw	75
 34208  00C9FA  6FED               	movwf	(_line_coding+1)& (0+255),b
 34209  00C9FC  0E00               	movlw	0
 34210  00C9FE  6FEE               	movwf	(_line_coding+2)& (0+255),b
 34211  00CA00  0E00               	movlw	0
 34212  00CA02  6FEF               	movwf	(_line_coding+3)& (0+255),b
 34213                           
 34214                           ;usb_device_cdc.c: 299: line_coding.bCharFormat = 0x00;
 34215  00CA04  0E00               	movlw	0
 34216  00CA06  6FF0               	movwf	(_line_coding+4)& (0+255),b
 34217                           
 34218                           ;usb_device_cdc.c: 300: line_coding.bParityType = 0x00;
 34219  00CA08  0E00               	movlw	0
 34220  00CA0A  6FF1               	movwf	(_line_coding+5)& (0+255),b
 34221                           
 34222                           ;usb_device_cdc.c: 301: line_coding.bDataBits = 0x08;
 34223  00CA0C  0E08               	movlw	8
 34224  00CA0E  6FF2               	movwf	(_line_coding+6)& (0+255),b
 34225                           
 34226                           ;usb_device_cdc.c: 303: cdc_rx_len = 0;
 34227  00CA10  0E00               	movlw	0
 34228  00CA12  0100               	movlb	0	; () banked
 34229  00CA14  6FEB               	movwf	_cdc_rx_len& (0+255),b
 34230                           
 34231                           ; BSR set to: 0
 34232                           ;usb_device_cdc.c: 316: USBEnableEndpoint(1,0x02|0x10|0x08);
 34233  00CA16  0E1A               	movlw	26
 34234  00CA18  6E17               	movwf	USBEnableEndpoint@options^0,c
 34235  00CA1A  0E01               	movlw	1
 34236  00CA1C  EC0F  F06B         	call	_USBEnableEndpoint
 34237                           
 34238                           ;usb_device_cdc.c: 317: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 34239  00CA20  0E1E               	movlw	30
 34240  00CA22  6E17               	movwf	USBEnableEndpoint@options^0,c
 34241  00CA24  0E02               	movlw	2
 34242  00CA26  EC0F  F06B         	call	_USBEnableEndpoint
 34243                           
 34244                           ;usb_device_cdc.c: 319: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 34245  00CA2A  0E00               	movlw	0
 34246  00CA2C  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 34247  00CA2E  0EA3               	movlw	low _cdc_data_rx
 34248  00CA30  6E10               	movwf	USBTransferOnePacket@data^0,c
 34249  00CA32  0E03               	movlw	high _cdc_data_rx
 34250  00CA34  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 34251  00CA36  0E40               	movlw	64
 34252  00CA38  6E12               	movwf	USBTransferOnePacket@len^0,c
 34253  00CA3A  0E02               	movlw	2
 34254  00CA3C  EC9E  F052         	call	_USBTransferOnePacket
 34255  00CA40  C00F  F0DE         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 34256  00CA44  C010  F0DF         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 34257                           
 34258                           ;usb_device_cdc.c: 320: CDCDataInHandle = (0);
 34259  00CA48  0E00               	movlw	0
 34260  00CA4A  0101               	movlb	1	; () banked
 34261  00CA4C  6F4E               	movwf	_CDCDataInHandle& (0+255),b
 34262  00CA4E  0E00               	movlw	0
 34263  00CA50  6F4F               	movwf	(_CDCDataInHandle+1)& (0+255),b
 34264                           
 34265                           ; BSR set to: 1
 34266                           ;usb_device_cdc.c: 347: cdc_trf_state = 0;
 34267  00CA52  0E00               	movlw	0
 34268  00CA54  6E4F               	movwf	_cdc_trf_state^0,c
 34269                           
 34270                           ; BSR set to: 1
 34271  00CA56  0012               	return		;funcret
 34272  00CA58                     __end_of_CDCInitEP:
 34273                           	callstack 0
 34274                           
 34275 ;; *************** function _USBTransferOnePacket *****************
 34276 ;; Defined at:
 34277 ;;		line 999 in file "usb/usb_device.c"
 34278 ;; Parameters:    Size  Location     Type
 34279 ;;  ep              1    wreg     unsigned char 
 34280 ;;  dir             1   14[COMRAM] unsigned char 
 34281 ;;  data            2   15[COMRAM] PTR unsigned char 
 34282 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 34283 ;;  len             1   17[COMRAM] unsigned char 
 34284 ;; Auto vars:     Size  Location     Type
 34285 ;;  ep              1   20[COMRAM] unsigned char 
 34286 ;;  handle          2   21[COMRAM] PTR volatile struct __BD
 34287 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 34288 ;; Return value:  Size  Location     Type
 34289 ;;                  2   14[COMRAM] PTR void 
 34290 ;; Registers used:
 34291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34292 ;; Tracked objects:
 34293 ;;		On entry : 0/0
 34294 ;;		On exit  : 0/0
 34295 ;;		Unchanged: 0/0
 34296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34300 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34301 ;;Total ram usage:        9 bytes
 34302 ;; Hardware stack levels used: 1
 34303 ;; Hardware stack levels required when called: 4
 34304 ;; This function calls:
 34305 ;;		Nothing
 34306 ;; This function is called by:
 34307 ;;		_CDCInitEP
 34308 ;;		_getsUSBUSART
 34309 ;;		_CDCTxService
 34310 ;; This function uses a non-reentrant model
 34311 ;;
 34312                           
 34313                           	psect	text161
 34314  00A53C                     __ptext161:
 34315                           	callstack 0
 34316  00A53C                     _USBTransferOnePacket:
 34317                           	callstack 24
 34318                           
 34319                           ; BSR set to: 1
 34320                           ;incstack = 0
 34321                           ;USBTransferOnePacket@ep stored from wreg
 34322  00A53C  6E15               	movwf	USBTransferOnePacket@ep^0,c
 34323                           
 34324                           ;usb_device.c: 1001: volatile BDT_ENTRY* handle;;usb_device.c: 1004: if(dir != 0)
 34325  00A53E  500F               	movf	USBTransferOnePacket@dir^0,w,c
 34326  00A540  B4D8               	btfsc	status,2,c
 34327  00A542  D007               	goto	l10431
 34328                           
 34329                           ;usb_device.c: 1005: {;usb_device.c: 1007: handle = pBDTEntryIn[ep];
 34330  00A544  5015               	movf	USBTransferOnePacket@ep^0,w,c
 34331  00A546  0D02               	mullw	2
 34332  00A548  50F3               	movf	243,w,c
 34333  00A54A  0FD8               	addlw	low _pBDTEntryIn
 34334  00A54C  6ED9               	movwf	fsr2l,c
 34335  00A54E  6ADA               	clrf	fsr2h,c
 34336  00A550  D008               	goto	L84
 34337  00A552                     l10431:
 34338                           
 34339                           ;usb_device.c: 1009: else;usb_device.c: 1010: {;usb_device.c: 1012: handle = pBDTEntryOu
      +                          t[ep];
 34340  00A552  5015               	movf	USBTransferOnePacket@ep^0,w,c
 34341  00A554  0D02               	mullw	2
 34342  00A556  0E38               	movlw	low _pBDTEntryOut
 34343  00A558  24F3               	addwf	243,w,c
 34344  00A55A  6ED9               	movwf	fsr2l,c
 34345  00A55C  0E01               	movlw	high _pBDTEntryOut
 34346  00A55E  20F4               	addwfc	prodh,w,c
 34347  00A560  6EDA               	movwf	fsr2h,c
 34348  00A562                     L84:
 34349  00A562  CFDE F016          	movff	postinc2,USBTransferOnePacket@handle
 34350  00A566  CFDD F017          	movff	postdec2,USBTransferOnePacket@handle+1
 34351                           
 34352                           ;usb_device.c: 1013: };usb_device.c: 1017: if(handle == 0)
 34353  00A56A  5016               	movf	USBTransferOnePacket@handle^0,w,c
 34354  00A56C  1017               	iorwf	(USBTransferOnePacket@handle+1)^0,w,c
 34355  00A56E  A4D8               	btfss	status,2,c
 34356  00A570  D005               	goto	l10439
 34357                           
 34358                           ;usb_device.c: 1018: {;usb_device.c: 1019: return 0;
 34359  00A572  0E00               	movlw	0
 34360  00A574  6E0F               	movwf	?_USBTransferOnePacket^0,c
 34361  00A576  0E00               	movlw	0
 34362  00A578  6E10               	movwf	(?_USBTransferOnePacket+1)^0,c
 34363  00A57A  0012               	return	
 34364  00A57C                     l10439:
 34365                           
 34366                           ;usb_device.c: 1020: };usb_device.c: 1033: handle->ADR = ((uint16_t)(data));
 34367  00A57C  EE20 F002          	lfsr	2,2
 34368  00A580  5016               	movf	USBTransferOnePacket@handle^0,w,c
 34369  00A582  26D9               	addwf	fsr2l,f,c
 34370  00A584  5017               	movf	(USBTransferOnePacket@handle+1)^0,w,c
 34371  00A586  22DA               	addwfc	fsr2h,f,c
 34372  00A588  C010  FFDE         	movff	USBTransferOnePacket@data,postinc2
 34373  00A58C  C011  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 34374                           
 34375                           ;usb_device.c: 1034: handle->CNT = len;
 34376  00A590  EE20 F001          	lfsr	2,1
 34377  00A594  5016               	movf	USBTransferOnePacket@handle^0,w,c
 34378  00A596  26D9               	addwf	fsr2l,f,c
 34379  00A598  5017               	movf	(USBTransferOnePacket@handle+1)^0,w,c
 34380  00A59A  22DA               	addwfc	fsr2h,f,c
 34381  00A59C  C012  FFDF         	movff	USBTransferOnePacket@len,indf2
 34382                           
 34383                           ;usb_device.c: 1035: handle->STAT.Val &= 0x40;
 34384  00A5A0  C016  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 34385  00A5A4  C017  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 34386  00A5A8  0E40               	movlw	64
 34387  00A5AA  16DF               	andwf	indf2,f,c
 34388                           
 34389                           ;usb_device.c: 1036: handle->STAT.Val |= (0x08 & 0x08);
 34390  00A5AC  C016  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 34391  00A5B0  C017  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 34392  00A5B4  0E00               	movlw	0
 34393  00A5B6  86DB               	bsf	plusw2,3,c
 34394                           
 34395                           ;usb_device.c: 1037: handle->STAT.Val |= 0x80;
 34396  00A5B8  C016  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 34397  00A5BC  C017  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 34398  00A5C0  0E00               	movlw	0
 34399  00A5C2  8EDB               	bsf	plusw2,7,c
 34400                           
 34401                           ;usb_device.c: 1040: if(dir != 0)
 34402  00A5C4  500F               	movf	USBTransferOnePacket@dir^0,w,c
 34403  00A5C6  B4D8               	btfsc	status,2,c
 34404  00A5C8  D015               	goto	l10451
 34405                           
 34406                           ;usb_device.c: 1041: {;usb_device.c: 1043: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 34407  00A5CA  5015               	movf	USBTransferOnePacket@ep^0,w,c
 34408  00A5CC  0D02               	mullw	2
 34409  00A5CE  50F3               	movf	243,w,c
 34410  00A5D0  0FD8               	addlw	low _pBDTEntryIn
 34411  00A5D2  6ED9               	movwf	fsr2l,c
 34412  00A5D4  6ADA               	clrf	fsr2h,c
 34413  00A5D6  CFDE F013          	movff	postinc2,??_USBTransferOnePacket
 34414  00A5DA  CFDD F014          	movff	postdec2,??_USBTransferOnePacket+1
 34415  00A5DE  0E04               	movlw	4
 34416  00A5E0  1A13               	xorwf	??_USBTransferOnePacket^0,f,c
 34417  00A5E2  0E00               	movlw	0
 34418  00A5E4  1A14               	xorwf	(??_USBTransferOnePacket+1)^0,f,c
 34419  00A5E6  5015               	movf	USBTransferOnePacket@ep^0,w,c
 34420  00A5E8  0D02               	mullw	2
 34421  00A5EA  50F3               	movf	243,w,c
 34422  00A5EC  0FD8               	addlw	low _pBDTEntryIn
 34423  00A5EE  6ED9               	movwf	fsr2l,c
 34424  00A5F0  6ADA               	clrf	fsr2h,c
 34425  00A5F2  D018               	goto	L85
 34426  00A5F4                     l10451:
 34427                           
 34428                           ;usb_device.c: 1045: else;usb_device.c: 1046: {;usb_device.c: 1048: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 34429  00A5F4  5015               	movf	USBTransferOnePacket@ep^0,w,c
 34430  00A5F6  0D02               	mullw	2
 34431  00A5F8  0E38               	movlw	low _pBDTEntryOut
 34432  00A5FA  24F3               	addwf	243,w,c
 34433  00A5FC  6ED9               	movwf	fsr2l,c
 34434  00A5FE  0E01               	movlw	high _pBDTEntryOut
 34435  00A600  20F4               	addwfc	prodh,w,c
 34436  00A602  6EDA               	movwf	fsr2h,c
 34437  00A604  CFDE F013          	movff	postinc2,??_USBTransferOnePacket
 34438  00A608  CFDD F014          	movff	postdec2,??_USBTransferOnePacket+1
 34439  00A60C  0E04               	movlw	4
 34440  00A60E  1A13               	xorwf	??_USBTransferOnePacket^0,f,c
 34441  00A610  0E00               	movlw	0
 34442  00A612  1A14               	xorwf	(??_USBTransferOnePacket+1)^0,f,c
 34443  00A614  5015               	movf	USBTransferOnePacket@ep^0,w,c
 34444  00A616  0D02               	mullw	2
 34445  00A618  0E38               	movlw	low _pBDTEntryOut
 34446  00A61A  24F3               	addwf	243,w,c
 34447  00A61C  6ED9               	movwf	fsr2l,c
 34448  00A61E  0E01               	movlw	high _pBDTEntryOut
 34449  00A620  20F4               	addwfc	prodh,w,c
 34450  00A622  6EDA               	movwf	fsr2h,c
 34451  00A624                     L85:
 34452  00A624  C013  FFDE         	movff	??_USBTransferOnePacket,postinc2
 34453  00A628  C014  FFDD         	movff	??_USBTransferOnePacket+1,postdec2
 34454                           
 34455                           ;usb_device.c: 1049: };usb_device.c: 1050: return (void*)handle;
 34456  00A62C  C016  F00F         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 34457  00A630  C017  F010         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 34458  00A634  0012               	return		;funcret
 34459  00A636                     __end_of_USBTransferOnePacket:
 34460                           	callstack 0
 34461                           
 34462 ;; *************** function _USBEnableEndpoint *****************
 34463 ;; Defined at:
 34464 ;;		line 882 in file "usb/usb_device.c"
 34465 ;; Parameters:    Size  Location     Type
 34466 ;;  ep              1    wreg     unsigned char 
 34467 ;;  options         1   22[COMRAM] unsigned char 
 34468 ;; Auto vars:     Size  Location     Type
 34469 ;;  ep              1   25[COMRAM] unsigned char 
 34470 ;;  p               2   23[COMRAM] PTR unsigned char 
 34471 ;;		 -> UEP0(1), 
 34472 ;; Return value:  Size  Location     Type
 34473 ;;                  1    wreg      void 
 34474 ;; Registers used:
 34475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34476 ;; Tracked objects:
 34477 ;;		On entry : 0/0
 34478 ;;		On exit  : 0/0
 34479 ;;		Unchanged: 0/0
 34480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34481 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34482 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34485 ;;Total ram usage:        4 bytes
 34486 ;; Hardware stack levels used: 1
 34487 ;; Hardware stack levels required when called: 5
 34488 ;; This function calls:
 34489 ;;		_USBConfigureEndpoint
 34490 ;; This function is called by:
 34491 ;;		_CDCInitEP
 34492 ;; This function uses a non-reentrant model
 34493 ;;
 34494                           
 34495                           	psect	text162
 34496  00D61E                     __ptext162:
 34497                           	callstack 0
 34498  00D61E                     _USBEnableEndpoint:
 34499                           	callstack 22
 34500                           
 34501                           ;incstack = 0
 34502                           ;USBEnableEndpoint@ep stored from wreg
 34503  00D61E  6E1A               	movwf	USBEnableEndpoint@ep^0,c
 34504                           
 34505                           ;usb_device.c: 884: unsigned char* p;;usb_device.c: 888: if(options & 0x04)
 34506  00D620  A417               	btfss	USBEnableEndpoint@options^0,2,c
 34507  00D622  D005               	goto	l10419
 34508                           
 34509                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 0);
 34510  00D624  0E00               	movlw	0
 34511  00D626  6E0F               	movwf	USBConfigureEndpoint@direction^0,c
 34512  00D628  501A               	movf	USBEnableEndpoint@ep^0,w,c
 34513  00D62A  EC83  F05D         	call	_USBConfigureEndpoint
 34514  00D62E                     l10419:
 34515                           
 34516                           ;usb_device.c: 891: };usb_device.c: 892: if(options & 0x02)
 34517  00D62E  A217               	btfss	USBEnableEndpoint@options^0,1,c
 34518  00D630  D005               	goto	l10423
 34519                           
 34520                           ;usb_device.c: 893: {;usb_device.c: 894: USBConfigureEndpoint(ep, 1);
 34521  00D632  0E01               	movlw	1
 34522  00D634  6E0F               	movwf	USBConfigureEndpoint@direction^0,c
 34523  00D636  501A               	movf	USBEnableEndpoint@ep^0,w,c
 34524  00D638  EC83  F05D         	call	_USBConfigureEndpoint
 34525  00D63C                     l10423:
 34526                           
 34527                           ;usb_device.c: 895: };usb_device.c: 903: p = (unsigned char*)(&UEP0+ep);
 34528  00D63C  0E26               	movlw	38
 34529  00D63E  241A               	addwf	USBEnableEndpoint@ep^0,w,c
 34530  00D640  6E18               	movwf	USBEnableEndpoint@p^0,c
 34531  00D642  6A19               	clrf	(USBEnableEndpoint@p+1)^0,c
 34532  00D644  0E0F               	movlw	15
 34533  00D646  2219               	addwfc	(USBEnableEndpoint@p+1)^0,f,c
 34534                           
 34535                           ;usb_device.c: 905: *p = options;
 34536  00D648  C018  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 34537  00D64C  C019  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 34538  00D650  C017  FFDF         	movff	USBEnableEndpoint@options,indf2
 34539  00D654  0012               	return		;funcret
 34540  00D656                     __end_of_USBEnableEndpoint:
 34541                           	callstack 0
 34542                           
 34543 ;; *************** function _USBConfigureEndpoint *****************
 34544 ;; Defined at:
 34545 ;;		line 1547 in file "usb/usb_device.c"
 34546 ;; Parameters:    Size  Location     Type
 34547 ;;  EPNum           1    wreg     unsigned char 
 34548 ;;  direction       1   14[COMRAM] unsigned char 
 34549 ;; Auto vars:     Size  Location     Type
 34550 ;;  EPNum           1   19[COMRAM] unsigned char 
 34551 ;;  handle          2   20[COMRAM] PTR volatile struct __BD
 34552 ;;		 -> BDT(48), 
 34553 ;; Return value:  Size  Location     Type
 34554 ;;                  1    wreg      void 
 34555 ;; Registers used:
 34556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34557 ;; Tracked objects:
 34558 ;;		On entry : 0/0
 34559 ;;		On exit  : 0/0
 34560 ;;		Unchanged: 0/0
 34561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34562 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34563 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34564 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34565 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34566 ;;Total ram usage:        8 bytes
 34567 ;; Hardware stack levels used: 1
 34568 ;; Hardware stack levels required when called: 4
 34569 ;; This function calls:
 34570 ;;		Nothing
 34571 ;; This function is called by:
 34572 ;;		_USBEnableEndpoint
 34573 ;; This function uses a non-reentrant model
 34574 ;;
 34575                           
 34576                           	psect	text163
 34577  00BB06                     __ptext163:
 34578                           	callstack 0
 34579  00BB06                     _USBConfigureEndpoint:
 34580                           	callstack 22
 34581                           
 34582                           ;incstack = 0
 34583                           ;USBConfigureEndpoint@EPNum stored from wreg
 34584  00BB06  6E14               	movwf	USBConfigureEndpoint@EPNum^0,c
 34585                           
 34586                           ;usb_device.c: 1549: volatile BDT_ENTRY* handle;;usb_device.c: 1553: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 34587  00BB08  0E00               	movlw	0
 34588  00BB0A  6E15               	movwf	USBConfigureEndpoint@handle^0,c
 34589  00BB0C  0E04               	movlw	4
 34590  00BB0E  6E16               	movwf	(USBConfigureEndpoint@handle+1)^0,c
 34591                           
 34592                           ;usb_device.c: 1554: handle += (4*EPNum+2*direction+0u);
 34593  00BB10  500F               	movf	USBConfigureEndpoint@direction^0,w,c
 34594  00BB12  6E10               	movwf	??_USBConfigureEndpoint^0,c
 34595  00BB14  6A11               	clrf	(??_USBConfigureEndpoint+1)^0,c
 34596  00BB16  90D8               	bcf	status,0,c
 34597  00BB18  3610               	rlcf	??_USBConfigureEndpoint^0,f,c
 34598  00BB1A  3611               	rlcf	(??_USBConfigureEndpoint+1)^0,f,c
 34599  00BB1C  5014               	movf	USBConfigureEndpoint@EPNum^0,w,c
 34600  00BB1E  6E12               	movwf	(??_USBConfigureEndpoint+2)^0,c
 34601  00BB20  6A13               	clrf	(??_USBConfigureEndpoint+3)^0,c
 34602  00BB22  90D8               	bcf	status,0,c
 34603  00BB24  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 34604  00BB26  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 34605  00BB28  90D8               	bcf	status,0,c
 34606  00BB2A  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 34607  00BB2C  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 34608  00BB2E  5010               	movf	??_USBConfigureEndpoint^0,w,c
 34609  00BB30  2612               	addwf	(??_USBConfigureEndpoint+2)^0,f,c
 34610  00BB32  5011               	movf	(??_USBConfigureEndpoint+1)^0,w,c
 34611  00BB34  2213               	addwfc	(??_USBConfigureEndpoint+3)^0,f,c
 34612  00BB36  90D8               	bcf	status,0,c
 34613  00BB38  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 34614  00BB3A  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 34615  00BB3C  90D8               	bcf	status,0,c
 34616  00BB3E  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 34617  00BB40  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 34618  00BB42  5012               	movf	(??_USBConfigureEndpoint+2)^0,w,c
 34619  00BB44  2615               	addwf	USBConfigureEndpoint@handle^0,f,c
 34620  00BB46  5013               	movf	(??_USBConfigureEndpoint+3)^0,w,c
 34621  00BB48  2216               	addwfc	(USBConfigureEndpoint@handle+1)^0,f,c
 34622                           
 34623                           ;usb_device.c: 1556: handle->STAT.UOWN = 0;
 34624  00BB4A  C015  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 34625  00BB4E  C016  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 34626  00BB52  9EDF               	bcf	indf2,7,c
 34627                           
 34628                           ;usb_device.c: 1561: if(direction == 0)
 34629  00BB54  500F               	movf	USBConfigureEndpoint@direction^0,w,c
 34630  00BB56  A4D8               	btfss	status,2,c
 34631  00BB58  D009               	goto	l10319
 34632                           
 34633                           ;usb_device.c: 1562: {;usb_device.c: 1563: pBDTEntryOut[EPNum] = handle;
 34634  00BB5A  5014               	movf	USBConfigureEndpoint@EPNum^0,w,c
 34635  00BB5C  0D02               	mullw	2
 34636  00BB5E  0E38               	movlw	low _pBDTEntryOut
 34637  00BB60  24F3               	addwf	243,w,c
 34638  00BB62  6ED9               	movwf	fsr2l,c
 34639  00BB64  0E01               	movlw	high _pBDTEntryOut
 34640  00BB66  20F4               	addwfc	prodh,w,c
 34641  00BB68  6EDA               	movwf	fsr2h,c
 34642  00BB6A  D006               	goto	L86
 34643  00BB6C                     l10319:
 34644                           
 34645                           ;usb_device.c: 1565: else;usb_device.c: 1566: {;usb_device.c: 1567: pBDTEntryIn[EPNum] =
      +                           handle;
 34646  00BB6C  5014               	movf	USBConfigureEndpoint@EPNum^0,w,c
 34647  00BB6E  0D02               	mullw	2
 34648  00BB70  50F3               	movf	243,w,c
 34649  00BB72  0FD8               	addlw	low _pBDTEntryIn
 34650  00BB74  6ED9               	movwf	fsr2l,c
 34651  00BB76  6ADA               	clrf	fsr2h,c
 34652  00BB78                     L86:
 34653  00BB78  C015  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 34654  00BB7C  C016  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 34655                           
 34656                           ;usb_device.c: 1568: };usb_device.c: 1571: handle->STAT.DTS = 0;
 34657  00BB80  C015  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 34658  00BB84  C016  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 34659  00BB88  9CDF               	bcf	indf2,6,c
 34660                           
 34661                           ;usb_device.c: 1572: (handle+1)->STAT.DTS = 1;
 34662  00BB8A  EE20 F004          	lfsr	2,4
 34663  00BB8E  5015               	movf	USBConfigureEndpoint@handle^0,w,c
 34664  00BB90  26D9               	addwf	fsr2l,f,c
 34665  00BB92  5016               	movf	(USBConfigureEndpoint@handle+1)^0,w,c
 34666  00BB94  22DA               	addwfc	fsr2h,f,c
 34667  00BB96  8CDF               	bsf	indf2,6,c
 34668  00BB98  0012               	return		;funcret
 34669  00BB9A                     __end_of_USBConfigureEndpoint:
 34670                           	callstack 0
 34671                           
 34672 ;; *************** function _USBCtrlTrfOutHandler *****************
 34673 ;; Defined at:
 34674 ;;		line 2545 in file "usb/usb_device.c"
 34675 ;; Parameters:    Size  Location     Type
 34676 ;;		None
 34677 ;; Auto vars:     Size  Location     Type
 34678 ;;		None
 34679 ;; Return value:  Size  Location     Type
 34680 ;;                  1    wreg      void 
 34681 ;; Registers used:
 34682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34683 ;; Tracked objects:
 34684 ;;		On entry : 3F/0
 34685 ;;		On exit  : 3E/0
 34686 ;;		Unchanged: 0/0
 34687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34692 ;;Total ram usage:        0 bytes
 34693 ;; Hardware stack levels used: 1
 34694 ;; Hardware stack levels required when called: 6
 34695 ;; This function calls:
 34696 ;;		_USBCtrlTrfRxService
 34697 ;; This function is called by:
 34698 ;;		_USBCtrlEPService
 34699 ;; This function uses a non-reentrant model
 34700 ;;
 34701                           
 34702                           	psect	text164
 34703  00CB12                     __ptext164:
 34704                           	callstack 0
 34705  00CB12                     _USBCtrlTrfOutHandler:
 34706                           	callstack 22
 34707                           
 34708                           ; BSR set to: 0
 34709                           ;usb_device.c: 2547: if(controlTransferState == 2)
 34710                           
 34711                           ;incstack = 0
 34712  00CB12  0E02               	movlw	2
 34713  00CB14  184E               	xorwf	_controlTransferState^0,w,c
 34714  00CB16  A4D8               	btfss	status,2,c
 34715  00CB18  D003               	goto	l14837
 34716                           
 34717                           ; BSR set to: 0
 34718                           ;usb_device.c: 2548: {;usb_device.c: 2549: USBCtrlTrfRxService();
 34719  00CB1A  EC17  F051         	call	_USBCtrlTrfRxService	;wreg free
 34720                           
 34721                           ;usb_device.c: 2550: }
 34722  00CB1E  0012               	return	
 34723  00CB20                     l14837:
 34724                           
 34725                           ; BSR set to: 0
 34726                           ;usb_device.c: 2551: else;usb_device.c: 2552: {;usb_device.c: 2555: controlTransferState
      +                           = 0;
 34727  00CB20  0E00               	movlw	0
 34728  00CB22  6E4E               	movwf	_controlTransferState^0,c
 34729                           
 34730                           ;usb_device.c: 2562: if(BothEP0OutUOWNsSet == 0)
 34731  00CB24  51F2               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 34732  00CB26  A4D8               	btfss	status,2,c
 34733  00CB28  D01F               	goto	l14845
 34734                           
 34735                           ; BSR set to: 0
 34736                           ;usb_device.c: 2563: {;usb_device.c: 2564: pBDTEntryEP0OutNext->CNT = 8;
 34737  00CB2A  EE20 F001          	lfsr	2,1
 34738  00CB2E  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 34739  00CB30  26D9               	addwf	fsr2l,f,c
 34740  00CB32  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 34741  00CB34  22DA               	addwfc	fsr2h,f,c
 34742  00CB36  0E08               	movlw	8
 34743  00CB38  6EDF               	movwf	indf2,c
 34744                           
 34745                           ;usb_device.c: 2565: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 34746  00CB3A  EE20 F002          	lfsr	2,2
 34747  00CB3E  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 34748  00CB40  26D9               	addwf	fsr2l,f,c
 34749  00CB42  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 34750  00CB44  22DA               	addwfc	fsr2h,f,c
 34751  00CB46  0E30               	movlw	48
 34752  00CB48  6EDE               	movwf	postinc2,c
 34753  00CB4A  0E04               	movlw	4
 34754  00CB4C  6EDD               	movwf	postdec2,c
 34755                           
 34756                           ; BSR set to: 0
 34757                           ;usb_device.c: 2566: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 34758  00CB4E  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34759  00CB52  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34760  00CB56  0E0C               	movlw	12
 34761  00CB58  6EDF               	movwf	indf2,c
 34762                           
 34763                           ; BSR set to: 0
 34764                           ;usb_device.c: 2567: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34765  00CB5A  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34766  00CB5E  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34767  00CB62  0E00               	movlw	0
 34768  00CB64  8EDB               	bsf	plusw2,7,c
 34769                           
 34770                           ;usb_device.c: 2568: }
 34771  00CB66  0012               	return	
 34772  00CB68                     l14845:
 34773                           
 34774                           ; BSR set to: 0
 34775                           ;usb_device.c: 2569: else;usb_device.c: 2570: {;usb_device.c: 2571: BothEP0OutUOWNsSet =
      +                           0;
 34776  00CB68  0E00               	movlw	0
 34777  00CB6A  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 34778  00CB6C  0012               	return		;funcret
 34779  00CB6E                     __end_of_USBCtrlTrfOutHandler:
 34780                           	callstack 0
 34781                           
 34782 ;; *************** function _USBCtrlTrfRxService *****************
 34783 ;; Defined at:
 34784 ;;		line 1856 in file "usb/usb_device.c"
 34785 ;; Parameters:    Size  Location     Type
 34786 ;;		None
 34787 ;; Auto vars:     Size  Location     Type
 34788 ;;  byteToRead      1   15[COMRAM] unsigned char 
 34789 ;;  i               1   14[COMRAM] unsigned char 
 34790 ;; Return value:  Size  Location     Type
 34791 ;;                  1    wreg      void 
 34792 ;; Registers used:
 34793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34794 ;; Tracked objects:
 34795 ;;		On entry : 3F/0
 34796 ;;		On exit  : 3E/0
 34797 ;;		Unchanged: 0/0
 34798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34803 ;;Total ram usage:        2 bytes
 34804 ;; Hardware stack levels used: 1
 34805 ;; Hardware stack levels required when called: 5
 34806 ;; This function calls:
 34807 ;;		_USBCtrlEPAllowStatusStage
 34808 ;; This function is called by:
 34809 ;;		_USBCtrlTrfOutHandler
 34810 ;; This function uses a non-reentrant model
 34811 ;;
 34812                           
 34813                           	psect	text165
 34814  00A22E                     __ptext165:
 34815                           	callstack 0
 34816  00A22E                     _USBCtrlTrfRxService:
 34817                           	callstack 22
 34818                           
 34819                           ; BSR set to: 0
 34820                           ;usb_device.c: 1858: uint8_t byteToRead;;usb_device.c: 1859: uint8_t i;;usb_device.c: 18
      +                          63: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 34821                           
 34822                           ;incstack = 0
 34823  00A22E  EE20 F001          	lfsr	2,1
 34824  00A232  504B               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 34825  00A234  26D9               	addwf	fsr2l,f,c
 34826  00A236  504C               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 34827  00A238  22DA               	addwfc	fsr2h,f,c
 34828  00A23A  50DF               	movf	indf2,w,c
 34829  00A23C  6E10               	movwf	USBCtrlTrfRxService@byteToRead^0,c
 34830                           
 34831                           ; BSR set to: 0
 34832                           ;usb_device.c: 1869: if(byteToRead > outPipes[0].wCount.Val)
 34833  00A23E  5010               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 34834  00A240  0101               	movlb	1	; () banked
 34835  00A242  5D34               	subwf	(_outPipes+4)& (0+255),w,b
 34836  00A244  0E00               	movlw	0
 34837  00A246  5935               	subwfb	(_outPipes+5)& (0+255),w,b
 34838  00A248  A0D8               	btfss	status,0,c
 34839                           
 34840                           ; BSR set to: 1
 34841                           ;usb_device.c: 1870: {;usb_device.c: 1871: byteToRead = outPipes[0].wCount.Val;
 34842  00A24A  C134  F010         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 34843                           
 34844                           ; BSR set to: 1
 34845                           ;usb_device.c: 1872: };usb_device.c: 1874: outPipes[0].wCount.Val -= byteToRead;
 34846  00A24E  5010               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 34847  00A250  5F34               	subwf	(_outPipes+4)& (0+255),f,b
 34848  00A252  0E00               	movlw	0
 34849  00A254  5B35               	subwfb	(_outPipes+5)& (0+255),f,b
 34850                           
 34851                           ; BSR set to: 1
 34852                           ;usb_device.c: 1878: for(i=0;i<byteToRead;i++)
 34853  00A256  0E00               	movlw	0
 34854  00A258  6E0F               	movwf	USBCtrlTrfRxService@i^0,c
 34855  00A25A  D00F               	goto	l13547
 34856  00A25C                     l13541:
 34857                           
 34858                           ; BSR set to: 1
 34859                           ;usb_device.c: 1879: {;usb_device.c: 1880: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 34860  00A25C  0E38               	movlw	56
 34861  00A25E  240F               	addwf	USBCtrlTrfRxService@i^0,w,c
 34862  00A260  6ED9               	movwf	fsr2l,c
 34863  00A262  6ADA               	clrf	fsr2h,c
 34864  00A264  0E04               	movlw	4
 34865  00A266  22DA               	addwfc	fsr2h,f,c
 34866  00A268  C130  FFE1         	movff	_outPipes,fsr1l
 34867  00A26C  C131  FFE2         	movff	_outPipes+1,fsr1h
 34868  00A270  CFDF FFE7          	movff	indf2,indf1
 34869                           
 34870                           ; BSR set to: 1
 34871  00A274  4B30               	infsnz	_outPipes& (0+255),f,b
 34872  00A276  2B31               	incf	(_outPipes+1)& (0+255),f,b
 34873                           
 34874                           ; BSR set to: 1
 34875  00A278  2A0F               	incf	USBCtrlTrfRxService@i^0,f,c
 34876  00A27A                     l13547:
 34877                           
 34878                           ; BSR set to: 1
 34879  00A27A  5010               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 34880  00A27C  5C0F               	subwf	USBCtrlTrfRxService@i^0,w,c
 34881  00A27E  A0D8               	btfss	status,0,c
 34882  00A280  D7ED               	goto	l13541
 34883                           
 34884                           ; BSR set to: 1
 34885                           ;usb_device.c: 1881: };usb_device.c: 1885: if(outPipes[0].wCount.Val > 0)
 34886  00A282  5134               	movf	(_outPipes+4)& (0+255),w,b
 34887  00A284  1135               	iorwf	(_outPipes+5)& (0+255),w,b
 34888  00A286  B4D8               	btfsc	status,2,c
 34889  00A288  D032               	goto	l13563
 34890                           
 34891                           ; BSR set to: 1
 34892                           ;usb_device.c: 1886: {;usb_device.c: 1887: pBDTEntryEP0OutNext->CNT = 8;
 34893  00A28A  EE20 F001          	lfsr	2,1
 34894  00A28E  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 34895  00A290  26D9               	addwf	fsr2l,f,c
 34896  00A292  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 34897  00A294  22DA               	addwfc	fsr2h,f,c
 34898  00A296  0E08               	movlw	8
 34899  00A298  6EDF               	movwf	indf2,c
 34900                           
 34901                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 34902  00A29A  EE20 F002          	lfsr	2,2
 34903  00A29E  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 34904  00A2A0  26D9               	addwf	fsr2l,f,c
 34905  00A2A2  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 34906  00A2A4  22DA               	addwfc	fsr2h,f,c
 34907  00A2A6  0E38               	movlw	56
 34908  00A2A8  6EDE               	movwf	postinc2,c
 34909  00A2AA  0E04               	movlw	4
 34910  00A2AC  6EDD               	movwf	postdec2,c
 34911                           
 34912                           ; BSR set to: 1
 34913                           ;usb_device.c: 1889: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 34914  00A2AE  C04B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34915  00A2B2  C04C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34916  00A2B6  BCDF               	btfsc	indf2,6,c
 34917  00A2B8  D00D               	goto	l13559
 34918                           
 34919                           ; BSR set to: 1
 34920                           ;usb_device.c: 1890: {;usb_device.c: 1891: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 34921  00A2BA  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34922  00A2BE  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34923  00A2C2  0E48               	movlw	72
 34924  00A2C4  6EDF               	movwf	indf2,c
 34925                           
 34926                           ; BSR set to: 1
 34927                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34928  00A2C6  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34929  00A2CA  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34930  00A2CE  0E00               	movlw	0
 34931  00A2D0  8EDB               	bsf	plusw2,7,c
 34932                           
 34933                           ;usb_device.c: 1893: }
 34934  00A2D2  0012               	return	
 34935  00A2D4                     l13559:
 34936                           
 34937                           ; BSR set to: 1
 34938                           ;usb_device.c: 1894: else;usb_device.c: 1895: {;usb_device.c: 1896: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 34939  00A2D4  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34940  00A2D8  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34941  00A2DC  0E08               	movlw	8
 34942  00A2DE  6EDF               	movwf	indf2,c
 34943                           
 34944                           ; BSR set to: 1
 34945                           ;usb_device.c: 1897: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34946  00A2E0  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34947  00A2E4  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34948  00A2E8  0E00               	movlw	0
 34949  00A2EA  8EDB               	bsf	plusw2,7,c
 34950  00A2EC  0012               	return	
 34951  00A2EE                     l13563:
 34952                           
 34953                           ; BSR set to: 1
 34954                           ;usb_device.c: 1900: else;usb_device.c: 1901: {;usb_device.c: 1905: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 34955  00A2EE  EE20 F001          	lfsr	2,1
 34956  00A2F2  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 34957  00A2F4  26D9               	addwf	fsr2l,f,c
 34958  00A2F6  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 34959  00A2F8  22DA               	addwfc	fsr2h,f,c
 34960  00A2FA  0E08               	movlw	8
 34961  00A2FC  6EDF               	movwf	indf2,c
 34962                           
 34963                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 34964  00A2FE  EE20 F002          	lfsr	2,2
 34965  00A302  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 34966  00A304  26D9               	addwf	fsr2l,f,c
 34967  00A306  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 34968  00A308  22DA               	addwfc	fsr2h,f,c
 34969  00A30A  0E30               	movlw	48
 34970  00A30C  6EDE               	movwf	postinc2,c
 34971  00A30E  0E04               	movlw	4
 34972  00A310  6EDD               	movwf	postdec2,c
 34973                           
 34974                           ; BSR set to: 1
 34975                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 34976  00A312  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34977  00A316  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34978  00A31A  0E04               	movlw	4
 34979  00A31C  6EDF               	movwf	indf2,c
 34980                           
 34981                           ; BSR set to: 1
 34982                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34983  00A31E  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34984  00A322  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34985  00A326  0E00               	movlw	0
 34986  00A328  8EDB               	bsf	plusw2,7,c
 34987                           
 34988                           ; BSR set to: 1
 34989                           ;usb_device.c: 1930: };usb_device.c: 1931: outPipes[0].info.bits.busy = 0;
 34990  00A32A  9F33               	bcf	(_outPipes+3)& (0+255),7,b
 34991                           
 34992                           ; BSR set to: 1
 34993                           ;usb_device.c: 1945: if(USBDeferStatusStagePacket == 0)
 34994  00A32C  504D               	movf	_USBDeferStatusStagePacket^0,w,c	;volatile
 34995  00A32E  A4D8               	btfss	status,2,c
 34996  00A330  0012               	return	
 34997                           
 34998                           ; BSR set to: 1
 34999                           ;usb_device.c: 1946: {;usb_device.c: 1947: USBCtrlEPAllowStatusStage();
 35000  00A332  EC2D  F058         	call	_USBCtrlEPAllowStatusStage	;wreg free
 35001  00A336  0012               	return		;funcret
 35002  00A338                     __end_of_USBCtrlTrfRxService:
 35003                           	callstack 0
 35004                           
 35005 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 35006 ;; Defined at:
 35007 ;;		line 1420 in file "usb/usb_device.c"
 35008 ;; Parameters:    Size  Location     Type
 35009 ;;		None
 35010 ;; Auto vars:     Size  Location     Type
 35011 ;;		None
 35012 ;; Return value:  Size  Location     Type
 35013 ;;                  1    wreg      void 
 35014 ;; Registers used:
 35015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35016 ;; Tracked objects:
 35017 ;;		On entry : 0/0
 35018 ;;		On exit  : 3F/0
 35019 ;;		Unchanged: 0/0
 35020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35025 ;;Total ram usage:        0 bytes
 35026 ;; Hardware stack levels used: 1
 35027 ;; Hardware stack levels required when called: 4
 35028 ;; This function calls:
 35029 ;;		Nothing
 35030 ;; This function is called by:
 35031 ;;		_USBDeviceTasks
 35032 ;;		_USBCtrlEPServiceComplete
 35033 ;;		_USBCtrlTrfRxService
 35034 ;; This function uses a non-reentrant model
 35035 ;;
 35036                           
 35037                           	psect	text166
 35038  00B05A                     __ptext166:
 35039                           	callstack 0
 35040  00B05A                     _USBCtrlEPAllowStatusStage:
 35041                           	callstack 22
 35042                           
 35043                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag1 == 0)
 35044                           
 35045                           ;incstack = 0
 35046  00B05A  0100               	movlb	0	; () banked
 35047  00B05C  51F0               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 35048  00B05E  A4D8               	btfss	status,2,c
 35049  00B060  0012               	return	
 35050                           
 35051                           ; BSR set to: 0
 35052                           ;usb_device.c: 1428: {;usb_device.c: 1429: USBStatusStageEnabledFlag1 = 1;
 35053  00B062  0E01               	movlw	1
 35054  00B064  6FF0               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 35055                           
 35056                           ;usb_device.c: 1430: if(USBStatusStageEnabledFlag2 == 0)
 35057  00B066  51EF               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 35058  00B068  A4D8               	btfss	status,2,c
 35059  00B06A  0012               	return	
 35060                           
 35061                           ; BSR set to: 0
 35062                           ;usb_device.c: 1431: {;usb_device.c: 1432: USBStatusStageEnabledFlag2 = 1;
 35063  00B06C  0E01               	movlw	1
 35064  00B06E  6FEF               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 35065                           
 35066                           ; BSR set to: 0
 35067                           ;usb_device.c: 1436: if(controlTransferState == 2)
 35068  00B070  0E02               	movlw	2
 35069  00B072  184E               	xorwf	_controlTransferState^0,w,c
 35070  00B074  A4D8               	btfss	status,2,c
 35071  00B076  D015               	goto	l12373
 35072                           
 35073                           ; BSR set to: 0
 35074                           ;usb_device.c: 1437: {;usb_device.c: 1438: pBDTEntryIn[0]->CNT = 0;
 35075  00B078  EE20 F001          	lfsr	2,1
 35076  00B07C  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 35077  00B07E  26D9               	addwf	fsr2l,f,c
 35078  00B080  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 35079  00B082  22DA               	addwfc	fsr2h,f,c
 35080  00B084  0E00               	movlw	0
 35081  00B086  6EDF               	movwf	indf2,c
 35082                           
 35083                           ; BSR set to: 0
 35084                           ;usb_device.c: 1439: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 35085  00B088  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35086  00B08C  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35087  00B090  0E48               	movlw	72
 35088  00B092  6EDF               	movwf	indf2,c
 35089                           
 35090                           ; BSR set to: 0
 35091                           ;usb_device.c: 1440: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35092  00B094  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35093  00B098  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35094  00B09C  0E00               	movlw	0
 35095  00B09E  8EDB               	bsf	plusw2,7,c
 35096                           
 35097                           ;usb_device.c: 1441: }
 35098  00B0A0  0012               	return	
 35099  00B0A2                     l12373:
 35100                           
 35101                           ; BSR set to: 0
 35102                           ;usb_device.c: 1442: else if(controlTransferState == 1)
 35103  00B0A2  044E               	decf	_controlTransferState^0,w,c
 35104  00B0A4  A4D8               	btfss	status,2,c
 35105  00B0A6  0012               	return	
 35106                           
 35107                           ; BSR set to: 0
 35108                           ;usb_device.c: 1443: {;usb_device.c: 1444: BothEP0OutUOWNsSet = 0;
 35109  00B0A8  0E00               	movlw	0
 35110  00B0AA  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 35111                           
 35112                           ; BSR set to: 0
 35113                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->CNT = 8;
 35114  00B0AC  EE20 F001          	lfsr	2,1
 35115  00B0B0  504B               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 35116  00B0B2  26D9               	addwf	fsr2l,f,c
 35117  00B0B4  504C               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 35118  00B0B6  22DA               	addwfc	fsr2h,f,c
 35119  00B0B8  0E08               	movlw	8
 35120  00B0BA  6EDF               	movwf	indf2,c
 35121                           
 35122                           ; BSR set to: 0
 35123                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 35124  00B0BC  EE20 F002          	lfsr	2,2
 35125  00B0C0  504B               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 35126  00B0C2  26D9               	addwf	fsr2l,f,c
 35127  00B0C4  504C               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 35128  00B0C6  22DA               	addwfc	fsr2h,f,c
 35129  00B0C8  0E30               	movlw	48
 35130  00B0CA  6EDE               	movwf	postinc2,c
 35131  00B0CC  0E04               	movlw	4
 35132  00B0CE  6EDD               	movwf	postdec2,c
 35133                           
 35134                           ; BSR set to: 0
 35135                           ;usb_device.c: 1451: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 35136  00B0D0  C04B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 35137  00B0D4  C04C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 35138  00B0D8  0E04               	movlw	4
 35139  00B0DA  6EDF               	movwf	indf2,c
 35140                           
 35141                           ; BSR set to: 0
 35142                           ;usb_device.c: 1452: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 35143  00B0DC  C04B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 35144  00B0E0  C04C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 35145  00B0E4  0E00               	movlw	0
 35146  00B0E6  8EDB               	bsf	plusw2,7,c
 35147                           
 35148                           ; BSR set to: 0
 35149                           ;usb_device.c: 1453: BothEP0OutUOWNsSet = 1;
 35150  00B0E8  0E01               	movlw	1
 35151  00B0EA  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 35152                           
 35153                           ; BSR set to: 0
 35154                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->CNT = 8;
 35155  00B0EC  EE20 F001          	lfsr	2,1
 35156  00B0F0  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 35157  00B0F2  26D9               	addwf	fsr2l,f,c
 35158  00B0F4  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 35159  00B0F6  22DA               	addwfc	fsr2h,f,c
 35160  00B0F8  0E08               	movlw	8
 35161  00B0FA  6EDF               	movwf	indf2,c
 35162                           
 35163                           ; BSR set to: 0
 35164                           ;usb_device.c: 1458: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35165  00B0FC  EE20 F002          	lfsr	2,2
 35166  00B100  5049               	movf	_pBDTEntryEP0OutNext^0,w,c
 35167  00B102  26D9               	addwf	fsr2l,f,c
 35168  00B104  504A               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 35169  00B106  22DA               	addwfc	fsr2h,f,c
 35170  00B108  0E30               	movlw	48
 35171  00B10A  6EDE               	movwf	postinc2,c
 35172  00B10C  0E04               	movlw	4
 35173  00B10E  6EDD               	movwf	postdec2,c
 35174                           
 35175                           ; BSR set to: 0
 35176                           ;usb_device.c: 1459: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 35177  00B110  C049  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35178  00B114  C04A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35179  00B118  0E80               	movlw	128
 35180  00B11A  6EDF               	movwf	indf2,c
 35181  00B11C  0012               	return	
 35182  00B11E                     __end_of_USBCtrlEPAllowStatusStage:
 35183                           	callstack 0
 35184                           
 35185 ;; *************** function _USBCtrlTrfInHandler *****************
 35186 ;; Defined at:
 35187 ;;		line 2599 in file "usb/usb_device.c"
 35188 ;; Parameters:    Size  Location     Type
 35189 ;;		None
 35190 ;; Auto vars:     Size  Location     Type
 35191 ;;  lastDTS         1   15[COMRAM] unsigned char 
 35192 ;; Return value:  Size  Location     Type
 35193 ;;                  1    wreg      void 
 35194 ;; Registers used:
 35195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35196 ;; Tracked objects:
 35197 ;;		On entry : 3F/0
 35198 ;;		On exit  : 3E/0
 35199 ;;		Unchanged: 0/0
 35200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35205 ;;Total ram usage:        1 bytes
 35206 ;; Hardware stack levels used: 1
 35207 ;; Hardware stack levels required when called: 5
 35208 ;; This function calls:
 35209 ;;		_USBCtrlTrfTxService
 35210 ;; This function is called by:
 35211 ;;		_USBCtrlEPService
 35212 ;; This function uses a non-reentrant model
 35213 ;;
 35214                           
 35215                           	psect	text167
 35216  00B11E                     __ptext167:
 35217                           	callstack 0
 35218  00B11E                     _USBCtrlTrfInHandler:
 35219                           	callstack 23
 35220                           
 35221                           ; BSR set to: 0
 35222                           ;usb_device.c: 2601: uint8_t lastDTS;;usb_device.c: 2603: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 35223                           
 35224                           ; BSR set to: 0
 35225                           ;incstack = 0
 35226  00B11E  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35227  00B122  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35228  00B126  0E00               	movlw	0
 35229  00B128  BCDF               	btfsc	indf2,6,c
 35230  00B12A  0E01               	movlw	1
 35231  00B12C  6E10               	movwf	USBCtrlTrfInHandler@lastDTS^0,c
 35232                           
 35233                           ; BSR set to: 0
 35234                           ;usb_device.c: 2606: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 35235  00B12E  0E04               	movlw	4
 35236  00B130  19D8               	xorwf	_pBDTEntryIn& (0+255),w,b
 35237  00B132  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 35238  00B134  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 35239  00B136  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 35240                           
 35241                           ; BSR set to: 0
 35242                           ;usb_device.c: 2611: if(USBDeviceState == ADR_PENDING_STATE)
 35243  00B138  0E08               	movlw	8
 35244  00B13A  19FA               	xorwf	_USBDeviceState& (0+255),w,b
 35245  00B13C  A4D8               	btfss	status,2,c
 35246  00B13E  D00D               	goto	l14861
 35247                           
 35248                           ; BSR set to: 0
 35249                           ;usb_device.c: 2612: {;usb_device.c: 2613: UADDR = (SetupPkt.bDevADR & 0x7F);
 35250  00B140  0104               	movlb	4	; () banked
 35251  00B142  5132               	movf	50,w,b	;volatile
 35252  00B144  0B7F               	andlw	127
 35253  00B146  010F               	movlb	15	; () banked
 35254  00B148  6F38               	movwf	56,b	;volatile
 35255                           
 35256                           ; BSR set to: 15
 35257                           ;usb_device.c: 2614: if(UADDR != 0u)
 35258  00B14A  5138               	movf	56,w,b
 35259  00B14C  B4D8               	btfsc	status,2,c
 35260  00B14E  D002               	goto	l14859
 35261                           
 35262                           ; BSR set to: 15
 35263                           ;usb_device.c: 2615: {;usb_device.c: 2616: USBDeviceState=ADDRESS_STATE;
 35264  00B150  0E10               	movlw	16
 35265  00B152  D001               	goto	L87
 35266  00B154                     l14859:
 35267                           
 35268                           ; BSR set to: 15
 35269                           ;usb_device.c: 2618: else;usb_device.c: 2619: {;usb_device.c: 2620: USBDeviceState=DEFAU
      +                          LT_STATE;
 35270  00B154  0E04               	movlw	4
 35271  00B156                     L87:
 35272  00B156  0100               	movlb	0	; () banked
 35273  00B158  6FFA               	movwf	_USBDeviceState& (0+255),b
 35274  00B15A                     l14861:
 35275                           
 35276                           ; BSR set to: 0
 35277                           ;usb_device.c: 2621: };usb_device.c: 2622: };usb_device.c: 2625: if(controlTransferState
      +                           == 1)
 35278  00B15A  044E               	decf	_controlTransferState^0,w,c
 35279  00B15C  A4D8               	btfss	status,2,c
 35280  00B15E  D03B               	goto	l2314
 35281                           
 35282                           ; BSR set to: 0
 35283                           ;usb_device.c: 2626: {;usb_device.c: 2627: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 35284  00B160  EE20 F002          	lfsr	2,2
 35285  00B164  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 35286  00B166  26D9               	addwf	fsr2l,f,c
 35287  00B168  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 35288  00B16A  22DA               	addwfc	fsr2h,f,c
 35289  00B16C  0E38               	movlw	56
 35290  00B16E  6EDE               	movwf	postinc2,c
 35291  00B170  0E04               	movlw	4
 35292  00B172  6EDD               	movwf	postdec2,c
 35293                           
 35294                           ; BSR set to: 0
 35295                           ;usb_device.c: 2628: USBCtrlTrfTxService();
 35296  00B174  EC99  F056         	call	_USBCtrlTrfTxService	;wreg free
 35297                           
 35298                           ; BSR set to: 1
 35299                           ;usb_device.c: 2634: if(shortPacketStatus == 2)
 35300  00B178  0E02               	movlw	2
 35301  00B17A  0100               	movlb	0	; () banked
 35302  00B17C  19F6               	xorwf	_shortPacketStatus& (0+255),w,b
 35303  00B17E  A4D8               	btfss	status,2,c
 35304  00B180  D00D               	goto	l14873
 35305                           
 35306                           ; BSR set to: 0
 35307                           ;usb_device.c: 2635: {;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x04;
 35308  00B182  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35309  00B186  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35310  00B18A  0E04               	movlw	4
 35311  00B18C  6EDF               	movwf	indf2,c
 35312                           
 35313                           ; BSR set to: 0
 35314                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35315  00B18E  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35316  00B192  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35317  00B196  0E00               	movlw	0
 35318  00B198  8EDB               	bsf	plusw2,7,c
 35319                           
 35320                           ;usb_device.c: 2640: }
 35321  00B19A  0012               	return	
 35322  00B19C                     l14873:
 35323                           
 35324                           ; BSR set to: 0
 35325                           ;usb_device.c: 2641: else;usb_device.c: 2642: {;usb_device.c: 2643: if(lastDTS == 0)
 35326  00B19C  5010               	movf	USBCtrlTrfInHandler@lastDTS^0,w,c
 35327  00B19E  A4D8               	btfss	status,2,c
 35328  00B1A0  D00D               	goto	l14879
 35329                           
 35330                           ; BSR set to: 0
 35331                           ;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 35332  00B1A2  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35333  00B1A6  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35334  00B1AA  0E48               	movlw	72
 35335  00B1AC  6EDF               	movwf	indf2,c
 35336                           
 35337                           ; BSR set to: 0
 35338                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35339  00B1AE  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35340  00B1B2  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35341  00B1B6  0E00               	movlw	0
 35342  00B1B8  8EDB               	bsf	plusw2,7,c
 35343                           
 35344                           ;usb_device.c: 2647: }
 35345  00B1BA  0012               	return	
 35346  00B1BC                     l14879:
 35347                           
 35348                           ; BSR set to: 0
 35349                           ;usb_device.c: 2648: else;usb_device.c: 2649: {;usb_device.c: 2650: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 35350  00B1BC  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35351  00B1C0  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35352  00B1C4  0E08               	movlw	8
 35353  00B1C6  6EDF               	movwf	indf2,c
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;usb_device.c: 2651: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35357  00B1C8  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 35358  00B1CC  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35359  00B1D0  0E00               	movlw	0
 35360  00B1D2  8EDB               	bsf	plusw2,7,c
 35361  00B1D4  0012               	return	
 35362  00B1D6                     l2314:
 35363                           
 35364                           ; BSR set to: 0
 35365                           ;usb_device.c: 2655: else;usb_device.c: 2656: {;usb_device.c: 2660: if(outPipes[0].info.
      +                          bits.busy == 1)
 35366  00B1D6  0101               	movlb	1	; () banked
 35367  00B1D8  BF33               	btfsc	(_outPipes+3)& (0+255),7,b
 35368                           
 35369                           ; BSR set to: 1
 35370                           ;usb_device.c: 2665: };usb_device.c: 2666: outPipes[0].info.bits.busy = 0;
 35371  00B1DA  9F33               	bcf	(_outPipes+3)& (0+255),7,b
 35372                           
 35373                           ; BSR set to: 1
 35374                           ;usb_device.c: 2667: };usb_device.c: 2669: controlTransferState = 0;
 35375  00B1DC  0E00               	movlw	0
 35376  00B1DE  6E4E               	movwf	_controlTransferState^0,c
 35377  00B1E0  0012               	return		;funcret
 35378  00B1E2                     __end_of_USBCtrlTrfInHandler:
 35379                           	callstack 0
 35380                           
 35381 ;; *************** function _USBCtrlTrfTxService *****************
 35382 ;; Defined at:
 35383 ;;		line 1775 in file "usb/usb_device.c"
 35384 ;; Parameters:    Size  Location     Type
 35385 ;;		None
 35386 ;; Auto vars:     Size  Location     Type
 35387 ;;  byteToSend      1   14[COMRAM] unsigned char 
 35388 ;; Return value:  Size  Location     Type
 35389 ;;                  1    wreg      void 
 35390 ;; Registers used:
 35391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35392 ;; Tracked objects:
 35393 ;;		On entry : 3B/4
 35394 ;;		On exit  : 3F/1
 35395 ;;		Unchanged: 0/0
 35396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35401 ;;Total ram usage:        1 bytes
 35402 ;; Hardware stack levels used: 1
 35403 ;; Hardware stack levels required when called: 4
 35404 ;; This function calls:
 35405 ;;		Nothing
 35406 ;; This function is called by:
 35407 ;;		_USBCtrlEPAllowDataStage
 35408 ;;		_USBCtrlTrfInHandler
 35409 ;; This function uses a non-reentrant model
 35410 ;;
 35411                           
 35412                           	psect	text168
 35413  00AD32                     __ptext168:
 35414                           	callstack 0
 35415  00AD32                     _USBCtrlTrfTxService:
 35416                           	callstack 21
 35417                           
 35418                           ;usb_device.c: 1777: uint8_t byteToSend;;usb_device.c: 1781: byteToSend = 8;
 35419                           
 35420                           ;incstack = 0
 35421  00AD32  0E08               	movlw	8
 35422  00AD34  6E0F               	movwf	USBCtrlTrfTxService@byteToSend^0,c
 35423                           
 35424                           ;usb_device.c: 1782: if(inPipes[0].wCount.Val < (uint8_t)8)
 35425  00AD36  5048               	movf	(_inPipes+5)^0,w,c
 35426  00AD38  E111               	bnz	l11303
 35427  00AD3A  0E08               	movlw	8
 35428  00AD3C  5C47               	subwf	(_inPipes+4)^0,w,c
 35429  00AD3E  B0D8               	btfsc	status,0,c
 35430  00AD40  D00D               	goto	l11303
 35431                           
 35432                           ;usb_device.c: 1783: {;usb_device.c: 1784: byteToSend = inPipes[0].wCount.Val;
 35433  00AD42  C047  F00F         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 35434                           
 35435                           ;usb_device.c: 1791: if(shortPacketStatus == 0)
 35436  00AD46  0100               	movlb	0	; () banked
 35437  00AD48  51F6               	movf	_shortPacketStatus& (0+255),w,b
 35438  00AD4A  A4D8               	btfss	status,2,c
 35439  00AD4C  D002               	goto	l11299
 35440                           
 35441                           ; BSR set to: 0
 35442                           ;usb_device.c: 1792: {;usb_device.c: 1793: shortPacketStatus = 1;
 35443  00AD4E  0E01               	movlw	1
 35444  00AD50  D004               	goto	L88
 35445  00AD52                     l11299:
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;usb_device.c: 1795: else if(shortPacketStatus == 1)
 35449  00AD52  05F6               	decf	_shortPacketStatus& (0+255),w,b
 35450  00AD54  A4D8               	btfss	status,2,c
 35451  00AD56  D002               	goto	l11303
 35452                           
 35453                           ; BSR set to: 0
 35454                           ;usb_device.c: 1796: {;usb_device.c: 1797: shortPacketStatus = 2;
 35455  00AD58  0E02               	movlw	2
 35456  00AD5A                     L88:
 35457  00AD5A  6FF6               	movwf	_shortPacketStatus& (0+255),b
 35458  00AD5C                     l11303:
 35459                           
 35460                           ;usb_device.c: 1798: };usb_device.c: 1799: };usb_device.c: 1803: inPipes[0].wCount.Val -
      +                          = byteToSend;
 35461  00AD5C  500F               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 35462  00AD5E  5E47               	subwf	(_inPipes+4)^0,f,c
 35463  00AD60  0E00               	movlw	0
 35464  00AD62  5A48               	subwfb	(_inPipes+5)^0,f,c
 35465                           
 35466                           ;usb_device.c: 1808: pBDTEntryIn[0]->CNT = byteToSend;
 35467  00AD64  0100               	movlb	0	; () banked
 35468  00AD66  EE20 F001          	lfsr	2,1
 35469  00AD6A  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 35470  00AD6C  26D9               	addwf	fsr2l,f,c
 35471  00AD6E  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 35472  00AD70  22DA               	addwfc	fsr2h,f,c
 35473  00AD72  C00F  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 35474                           
 35475                           ; BSR set to: 0
 35476                           ;usb_device.c: 1812: pDst = ( uint8_t*)CtrlTrfData;
 35477  00AD76  0E38               	movlw	56
 35478  00AD78  0101               	movlb	1	; () banked
 35479  00AD7A  6F50               	movwf	_pDst& (0+255),b
 35480  00AD7C  0E04               	movlw	4
 35481  00AD7E  6F51               	movwf	(_pDst+1)& (0+255),b
 35482                           
 35483                           ; BSR set to: 1
 35484                           ;usb_device.c: 1813: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 35485  00AD80  A046               	btfss	(_inPipes+3)^0,0,c
 35486  00AD82  D01C               	goto	l11321
 35487  00AD84  D03A               	goto	l11331
 35488  00AD86                     l11313:
 35489                           
 35490                           ; BSR set to: 1
 35491                           ;usb_device.c: 1816: {;usb_device.c: 1817: *pDst++ = *inPipes[0].pSrc.bRom++;
 35492  00AD86  C043  FFF6         	movff	_inPipes,tblptrl
 35493  00AD8A  C044  FFF7         	movff	_inPipes+1,tblptrh
 35494  00AD8E  6AF8               	clrf	tblptru,c
 35495  00AD90  C150  FFD9         	movff	_pDst,fsr2l
 35496  00AD94  C151  FFDA         	movff	_pDst+1,fsr2h
 35497  00AD98  0E0E               	movlw	(high __ramtop+-1)
 35498  00AD9A  64F7               	cpfsgt	tblptrh,c
 35499  00AD9C  D003               	bra	u10577
 35500  00AD9E  0008               	tblrd		*
 35501  00ADA0  50F5               	movf	tablat,w,c
 35502  00ADA2  D005               	bra	u10570
 35503  00ADA4                     u10577:
 35504  00ADA4  CFF6 FFE1          	movff	tblptrl,fsr1l
 35505  00ADA8  CFF7 FFE2          	movff	tblptrh,fsr1h
 35506  00ADAC  50E7               	movf	indf1,w,c
 35507  00ADAE                     u10570:
 35508  00ADAE  6EDF               	movwf	indf2,c
 35509  00ADB0  4A43               	infsnz	_inPipes^0,f,c
 35510  00ADB2  2A44               	incf	(_inPipes+1)^0,f,c
 35511  00ADB4  0101               	movlb	1	; () banked
 35512  00ADB6  4B50               	infsnz	_pDst& (0+255),f,b
 35513  00ADB8  2B51               	incf	(_pDst+1)& (0+255),f,b
 35514                           
 35515                           ; BSR set to: 1
 35516                           ;usb_device.c: 1818: byteToSend--;
 35517  00ADBA  060F               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 35518  00ADBC                     l11321:
 35519                           
 35520                           ; BSR set to: 1
 35521  00ADBC  500F               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 35522  00ADBE  B4D8               	btfsc	status,2,c
 35523  00ADC0  0012               	return	
 35524  00ADC2  D7E1               	goto	l11313
 35525  00ADC4                     l11323:
 35526                           
 35527                           ; BSR set to: 1
 35528                           ;usb_device.c: 1824: {;usb_device.c: 1825: *pDst++ = *inPipes[0].pSrc.bRam++;
 35529  00ADC4  C043  FFF6         	movff	_inPipes,tblptrl
 35530  00ADC8  C044  FFF7         	movff	_inPipes+1,tblptrh
 35531  00ADCC  6AF8               	clrf	tblptru,c
 35532  00ADCE  C150  FFD9         	movff	_pDst,fsr2l
 35533  00ADD2  C151  FFDA         	movff	_pDst+1,fsr2h
 35534  00ADD6  0E0E               	movlw	(high __ramtop+-1)
 35535  00ADD8  64F7               	cpfsgt	tblptrh,c
 35536  00ADDA  D003               	bra	u10597
 35537  00ADDC  0008               	tblrd		*
 35538  00ADDE  50F5               	movf	tablat,w,c
 35539  00ADE0  D005               	bra	u10590
 35540  00ADE2                     u10597:
 35541  00ADE2  CFF6 FFE1          	movff	tblptrl,fsr1l
 35542  00ADE6  CFF7 FFE2          	movff	tblptrh,fsr1h
 35543  00ADEA  50E7               	movf	indf1,w,c
 35544  00ADEC                     u10590:
 35545  00ADEC  6EDF               	movwf	indf2,c
 35546  00ADEE  4A43               	infsnz	_inPipes^0,f,c
 35547  00ADF0  2A44               	incf	(_inPipes+1)^0,f,c
 35548  00ADF2  0101               	movlb	1	; () banked
 35549  00ADF4  4B50               	infsnz	_pDst& (0+255),f,b
 35550  00ADF6  2B51               	incf	(_pDst+1)& (0+255),f,b
 35551                           
 35552                           ; BSR set to: 1
 35553                           ;usb_device.c: 1826: byteToSend--;
 35554  00ADF8  060F               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 35555  00ADFA                     l11331:
 35556                           
 35557                           ; BSR set to: 1
 35558  00ADFA  500F               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 35559  00ADFC  B4D8               	btfsc	status,2,c
 35560  00ADFE  0012               	return	
 35561  00AE00  D7E1               	goto	l11323
 35562  00AE02                     __end_of_USBCtrlTrfTxService:
 35563                           	callstack 0
 35564                           
 35565 ;; *************** function _InitTimer *****************
 35566 ;; Defined at:
 35567 ;;		line 89 in file "main.c"
 35568 ;; Parameters:    Size  Location     Type
 35569 ;;		None
 35570 ;; Auto vars:     Size  Location     Type
 35571 ;;		None
 35572 ;; Return value:  Size  Location     Type
 35573 ;;                  1    wreg      void 
 35574 ;; Registers used:
 35575 ;;		wreg, status,2
 35576 ;; Tracked objects:
 35577 ;;		On entry : 3F/0
 35578 ;;		On exit  : 3F/0
 35579 ;;		Unchanged: 3F/0
 35580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35585 ;;Total ram usage:        0 bytes
 35586 ;; Hardware stack levels used: 1
 35587 ;; Hardware stack levels required when called: 4
 35588 ;; This function calls:
 35589 ;;		Nothing
 35590 ;; This function is called by:
 35591 ;;		_main
 35592 ;; This function uses a non-reentrant model
 35593 ;;
 35594                           
 35595                           	psect	text169
 35596  00DC9E                     __ptext169:
 35597                           	callstack 0
 35598  00DC9E                     _InitTimer:
 35599                           	callstack 26
 35600                           
 35601                           ; BSR set to: 0
 35602                           ;main.c: 92: T0CONbits.T08BIT = 1;
 35603                           
 35604                           ; BSR set to: 1
 35605                           ;incstack = 0
 35606  00DC9E  8CD5               	bsf	213,6,c	;volatile
 35607                           
 35608                           ;main.c: 93: T0CONbits.T0CS = 0;
 35609  00DCA0  9AD5               	bcf	213,5,c	;volatile
 35610                           
 35611                           ;main.c: 94: T0CONbits.T0PS0 = 1;
 35612  00DCA2  80D5               	bsf	213,0,c	;volatile
 35613                           
 35614                           ;main.c: 95: T0CONbits.T0PS1 = 0;
 35615  00DCA4  92D5               	bcf	213,1,c	;volatile
 35616                           
 35617                           ;main.c: 96: T0CONbits.T0PS2 = 1;
 35618  00DCA6  84D5               	bsf	213,2,c	;volatile
 35619                           
 35620                           ;main.c: 97: T0CONbits.PSA = 0;
 35621  00DCA8  96D5               	bcf	213,3,c	;volatile
 35622                           
 35623                           ; BSR set to: 0
 35624                           ;main.c: 99: TMR0L = 0;
 35625  00DCAA  0E00               	movlw	0
 35626  00DCAC  6ED6               	movwf	214,c	;volatile
 35627                           
 35628                           ; BSR set to: 0
 35629                           ;main.c: 100: T0CONbits.TMR0ON = 1;
 35630  00DCAE  8ED5               	bsf	213,7,c	;volatile
 35631                           
 35632                           ; BSR set to: 0
 35633                           ;main.c: 103: RCONbits.IPEN = 1;
 35634  00DCB0  8ED0               	bsf	208,7,c	;volatile
 35635                           
 35636                           ; BSR set to: 0
 35637                           ;main.c: 104: INTCONbits.GIE = 1;
 35638  00DCB2  8EF2               	bsf	242,7,c	;volatile
 35639                           
 35640                           ; BSR set to: 0
 35641                           ;main.c: 105: INTCONbits.PEIE = 1;
 35642  00DCB4  8CF2               	bsf	242,6,c	;volatile
 35643                           
 35644                           ; BSR set to: 0
 35645                           ;main.c: 108: INTCONbits.TMR0IE = 1;
 35646  00DCB6  8AF2               	bsf	242,5,c	;volatile
 35647                           
 35648                           ; BSR set to: 0
 35649                           ;main.c: 109: INTCON2bits.TMR0IP = 1;
 35650  00DCB8  84F1               	bsf	241,2,c	;volatile
 35651                           
 35652                           ; BSR set to: 0
 35653  00DCBA  0012               	return		;funcret
 35654  00DCBC                     __end_of_InitTimer:
 35655                           	callstack 0
 35656                           
 35657 ;; *************** function _Board_initialize *****************
 35658 ;; Defined at:
 35659 ;;		line 63 in file "main.c"
 35660 ;; Parameters:    Size  Location     Type
 35661 ;;		None
 35662 ;; Auto vars:     Size  Location     Type
 35663 ;;		None
 35664 ;; Return value:  Size  Location     Type
 35665 ;;                  1    wreg      void 
 35666 ;; Registers used:
 35667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35668 ;; Tracked objects:
 35669 ;;		On entry : 0/0
 35670 ;;		On exit  : 0/0
 35671 ;;		Unchanged: 0/0
 35672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35677 ;;Total ram usage:        0 bytes
 35678 ;; Hardware stack levels used: 1
 35679 ;; Hardware stack levels required when called: 11
 35680 ;; This function calls:
 35681 ;;		_POWER_Init
 35682 ;;		_atcommand_init
 35683 ;;		_buffer_init
 35684 ;;		_i2c_init
 35685 ;;		_modbus_init
 35686 ;;		_nvm_init
 35687 ;;		_sensMeasure_init
 35688 ;; This function is called by:
 35689 ;;		_main
 35690 ;; This function uses a non-reentrant model
 35691 ;;
 35692                           
 35693                           	psect	text170
 35694  00CF0E                     __ptext170:
 35695                           	callstack 0
 35696  00CF0E                     _Board_initialize:
 35697                           	callstack 19
 35698                           
 35699                           ;main.c: 65: ANCON0 = 0xFF;
 35700                           
 35701                           ; BSR set to: 0
 35702                           ;incstack = 0
 35703  00CF0E  010F               	movlb	15	; () banked
 35704  00CF10  6948               	setf	72,b	;volatile
 35705                           
 35706                           ;main.c: 66: ANCON1 = 0xFF;
 35707  00CF12  6949               	setf	73,b	;volatile
 35708                           
 35709                           ; BSR set to: 15
 35710                           ;main.c: 67: POWER_Init();
 35711  00CF14  EC6E  F06F         	call	_POWER_Init	;wreg free
 35712                           
 35713                           ; BSR set to: 15
 35714                           ;main.c: 70: g_atcommand.seq = AT_INIT;
 35715  00CF18  0E00               	movlw	0
 35716  00CF1A  0106               	movlb	6	; () banked
 35717  00CF1C  6F00               	movwf	_g_atcommand& (0+255),b
 35718                           
 35719                           ; BSR set to: 6
 35720                           ;main.c: 71: g_sens_measure.seq = SENS_INIT;
 35721  00CF1E  0E00               	movlw	0
 35722  00CF20  0100               	movlb	0	; () banked
 35723  00CF22  6FCF               	movwf	_g_sens_measure& (0+255),b
 35724                           
 35725                           ; BSR set to: 0
 35726                           ;main.c: 72: g_modbus.seq = MODBUS_INIT;
 35727  00CF24  0E00               	movlw	0
 35728  00CF26  0101               	movlb	1	; () banked
 35729  00CF28  6F24               	movwf	_g_modbus& (0+255),b
 35730                           
 35731                           ;main.c: 74: i2c_init(I2C_100kHz);
 35732  00CF2A  0E00               	movlw	0
 35733  00CF2C  ECEC  F06C         	call	_i2c_init
 35734                           
 35735                           ;main.c: 76: buffer_init(&g_usb_queue);
 35736  00CF30  0E00               	movlw	low _g_usb_queue
 35737  00CF32  6E0F               	movwf	buffer_init@queue^0,c
 35738  00CF34  0E05               	movlw	high _g_usb_queue
 35739  00CF36  6E10               	movwf	(buffer_init@queue+1)^0,c
 35740  00CF38  EC93  F06C         	call	_buffer_init	;wreg free
 35741                           
 35742                           ;main.c: 77: buffer_init(&g_modbus_queue);
 35743  00CF3C  0E60               	movlw	low _g_modbus_queue
 35744  00CF3E  6E0F               	movwf	buffer_init@queue^0,c
 35745  00CF40  0E04               	movlw	high _g_modbus_queue
 35746  00CF42  6E10               	movwf	(buffer_init@queue+1)^0,c
 35747  00CF44  EC93  F06C         	call	_buffer_init	;wreg free
 35748                           
 35749                           ;main.c: 80: nvm_init();
 35750  00CF48  EC40  F060         	call	_nvm_init	;wreg free
 35751                           
 35752                           ;main.c: 82: sensMeasure_init();
 35753  00CF4C  ECC4  F045         	call	_sensMeasure_init	;wreg free
 35754                           
 35755                           ; BSR set to: 0
 35756                           ;main.c: 84: atcommand_init();
 35757  00CF50  EC58  F06F         	call	_atcommand_init	;wreg free
 35758                           
 35759                           ;main.c: 86: modbus_init();
 35760  00CF54  EC03  F05B         	call	_modbus_init	;wreg free
 35761  00CF58  0012               	return		;funcret
 35762  00CF5A                     __end_of_Board_initialize:
 35763                           	callstack 0
 35764                           
 35765 ;; *************** function _sensMeasure_init *****************
 35766 ;; Defined at:
 35767 ;;		line 49 in file "app_sens_measure.c"
 35768 ;; Parameters:    Size  Location     Type
 35769 ;;		None
 35770 ;; Auto vars:     Size  Location     Type
 35771 ;;		None
 35772 ;; Return value:  Size  Location     Type
 35773 ;;                  1    wreg      void 
 35774 ;; Registers used:
 35775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35776 ;; Tracked objects:
 35777 ;;		On entry : 0/0
 35778 ;;		On exit  : 3F/0
 35779 ;;		Unchanged: 0/0
 35780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35785 ;;Total ram usage:        0 bytes
 35786 ;; Hardware stack levels used: 1
 35787 ;; Hardware stack levels required when called: 5
 35788 ;; This function calls:
 35789 ;;		_Kalman_setEstimateError
 35790 ;;		_Kalman_setMeasurementError
 35791 ;;		_Kalman_setProcessNoise
 35792 ;;		_sensMeasure_sensor_init
 35793 ;; This function is called by:
 35794 ;;		_Board_initialize
 35795 ;; This function uses a non-reentrant model
 35796 ;;
 35797                           
 35798                           	psect	text171
 35799  008B88                     __ptext171:
 35800                           	callstack 0
 35801  008B88                     _sensMeasure_init:
 35802                           	callstack 24
 35803                           
 35804                           ;app_sens_measure.c: 52: ewmaFilter[0].hasInit = 0;
 35805                           
 35806                           ;incstack = 0
 35807  008B88  0E00               	movlw	0
 35808  008B8A  0102               	movlb	2	; () banked
 35809  008B8C  6FEA               	movwf	_ewmaFilter& (0+255),b
 35810                           
 35811                           ;app_sens_measure.c: 53: ewmaFilter[0].prevValue = 0.0f;
 35812  008B8E  0E00               	movlw	0
 35813  008B90  6FEB               	movwf	(_ewmaFilter+1)& (0+255),b
 35814  008B92  0E00               	movlw	0
 35815  008B94  6FEC               	movwf	(_ewmaFilter+2)& (0+255),b
 35816  008B96  0E00               	movlw	0
 35817  008B98  6FED               	movwf	(_ewmaFilter+3)& (0+255),b
 35818  008B9A  0E00               	movlw	0
 35819  008B9C  6FEE               	movwf	(_ewmaFilter+4)& (0+255),b
 35820                           
 35821                           ;app_sens_measure.c: 54: ewmaFilter[1].hasInit = 0;
 35822  008B9E  0E00               	movlw	0
 35823  008BA0  6FEF               	movwf	(_ewmaFilter+5)& (0+255),b
 35824                           
 35825                           ;app_sens_measure.c: 55: ewmaFilter[1].prevValue = 0.0f;
 35826  008BA2  0E00               	movlw	0
 35827  008BA4  6FF0               	movwf	(_ewmaFilter+6)& (0+255),b
 35828  008BA6  0E00               	movlw	0
 35829  008BA8  6FF1               	movwf	(_ewmaFilter+7)& (0+255),b
 35830  008BAA  0E00               	movlw	0
 35831  008BAC  6FF2               	movwf	(_ewmaFilter+8)& (0+255),b
 35832  008BAE  0E00               	movlw	0
 35833  008BB0  6FF3               	movwf	(_ewmaFilter+9)& (0+255),b
 35834                           
 35835                           ;app_sens_measure.c: 59: kalmanFilter[0]._current_estimate = 0.0f;
 35836  008BB2  0E00               	movlw	0
 35837  008BB4  6F91               	movwf	(_kalmanFilter+12)& (0+255),b
 35838  008BB6  0E00               	movlw	0
 35839  008BB8  6F92               	movwf	(_kalmanFilter+13)& (0+255),b
 35840  008BBA  0E00               	movlw	0
 35841  008BBC  6F93               	movwf	(_kalmanFilter+14)& (0+255),b
 35842  008BBE  0E00               	movlw	0
 35843  008BC0  6F94               	movwf	(_kalmanFilter+15)& (0+255),b
 35844                           
 35845                           ;app_sens_measure.c: 60: kalmanFilter[0]._err_estimate = 0.0f;
 35846  008BC2  0E00               	movlw	0
 35847  008BC4  6F89               	movwf	(_kalmanFilter+4)& (0+255),b
 35848  008BC6  0E00               	movlw	0
 35849  008BC8  6F8A               	movwf	(_kalmanFilter+5)& (0+255),b
 35850  008BCA  0E00               	movlw	0
 35851  008BCC  6F8B               	movwf	(_kalmanFilter+6)& (0+255),b
 35852  008BCE  0E00               	movlw	0
 35853  008BD0  6F8C               	movwf	(_kalmanFilter+7)& (0+255),b
 35854                           
 35855                           ;app_sens_measure.c: 61: kalmanFilter[0]._err_measure = 0.0f;
 35856  008BD2  0E00               	movlw	0
 35857  008BD4  6F85               	movwf	_kalmanFilter& (0+255),b
 35858  008BD6  0E00               	movlw	0
 35859  008BD8  6F86               	movwf	(_kalmanFilter+1)& (0+255),b
 35860  008BDA  0E00               	movlw	0
 35861  008BDC  6F87               	movwf	(_kalmanFilter+2)& (0+255),b
 35862  008BDE  0E00               	movlw	0
 35863  008BE0  6F88               	movwf	(_kalmanFilter+3)& (0+255),b
 35864                           
 35865                           ;app_sens_measure.c: 62: kalmanFilter[0]._kalman_gain = 0.0f;
 35866  008BE2  0E00               	movlw	0
 35867  008BE4  6F99               	movwf	(_kalmanFilter+20)& (0+255),b
 35868  008BE6  0E00               	movlw	0
 35869  008BE8  6F9A               	movwf	(_kalmanFilter+21)& (0+255),b
 35870  008BEA  0E00               	movlw	0
 35871  008BEC  6F9B               	movwf	(_kalmanFilter+22)& (0+255),b
 35872  008BEE  0E00               	movlw	0
 35873  008BF0  6F9C               	movwf	(_kalmanFilter+23)& (0+255),b
 35874                           
 35875                           ;app_sens_measure.c: 63: kalmanFilter[0]._last_estimate = 0.0f;
 35876  008BF2  0E00               	movlw	0
 35877  008BF4  6F95               	movwf	(_kalmanFilter+16)& (0+255),b
 35878  008BF6  0E00               	movlw	0
 35879  008BF8  6F96               	movwf	(_kalmanFilter+17)& (0+255),b
 35880  008BFA  0E00               	movlw	0
 35881  008BFC  6F97               	movwf	(_kalmanFilter+18)& (0+255),b
 35882  008BFE  0E00               	movlw	0
 35883  008C00  6F98               	movwf	(_kalmanFilter+19)& (0+255),b
 35884                           
 35885                           ;app_sens_measure.c: 64: kalmanFilter[0]._q_process = 0.0f;
 35886  008C02  0E00               	movlw	0
 35887  008C04  6F8D               	movwf	(_kalmanFilter+8)& (0+255),b
 35888  008C06  0E00               	movlw	0
 35889  008C08  6F8E               	movwf	(_kalmanFilter+9)& (0+255),b
 35890  008C0A  0E00               	movlw	0
 35891  008C0C  6F8F               	movwf	(_kalmanFilter+10)& (0+255),b
 35892  008C0E  0E00               	movlw	0
 35893  008C10  6F90               	movwf	(_kalmanFilter+11)& (0+255),b
 35894                           
 35895                           ;app_sens_measure.c: 66: kalmanFilter[1]._current_estimate = 0.0f;
 35896  008C12  0E00               	movlw	0
 35897  008C14  6FA9               	movwf	(_kalmanFilter+36)& (0+255),b
 35898  008C16  0E00               	movlw	0
 35899  008C18  6FAA               	movwf	(_kalmanFilter+37)& (0+255),b
 35900  008C1A  0E00               	movlw	0
 35901  008C1C  6FAB               	movwf	(_kalmanFilter+38)& (0+255),b
 35902  008C1E  0E00               	movlw	0
 35903  008C20  6FAC               	movwf	(_kalmanFilter+39)& (0+255),b
 35904                           
 35905                           ;app_sens_measure.c: 67: kalmanFilter[1]._err_estimate = 0.0f;
 35906  008C22  0E00               	movlw	0
 35907  008C24  6FA1               	movwf	(_kalmanFilter+28)& (0+255),b
 35908  008C26  0E00               	movlw	0
 35909  008C28  6FA2               	movwf	(_kalmanFilter+29)& (0+255),b
 35910  008C2A  0E00               	movlw	0
 35911  008C2C  6FA3               	movwf	(_kalmanFilter+30)& (0+255),b
 35912  008C2E  0E00               	movlw	0
 35913  008C30  6FA4               	movwf	(_kalmanFilter+31)& (0+255),b
 35914                           
 35915                           ;app_sens_measure.c: 68: kalmanFilter[1]._err_measure = 0.0f;
 35916  008C32  0E00               	movlw	0
 35917  008C34  6F9D               	movwf	(_kalmanFilter+24)& (0+255),b
 35918  008C36  0E00               	movlw	0
 35919  008C38  6F9E               	movwf	(_kalmanFilter+25)& (0+255),b
 35920  008C3A  0E00               	movlw	0
 35921  008C3C  6F9F               	movwf	(_kalmanFilter+26)& (0+255),b
 35922  008C3E  0E00               	movlw	0
 35923  008C40  6FA0               	movwf	(_kalmanFilter+27)& (0+255),b
 35924                           
 35925                           ;app_sens_measure.c: 69: kalmanFilter[1]._kalman_gain = 0.0f;
 35926  008C42  0E00               	movlw	0
 35927  008C44  6FB1               	movwf	(_kalmanFilter+44)& (0+255),b
 35928  008C46  0E00               	movlw	0
 35929  008C48  6FB2               	movwf	(_kalmanFilter+45)& (0+255),b
 35930  008C4A  0E00               	movlw	0
 35931  008C4C  6FB3               	movwf	(_kalmanFilter+46)& (0+255),b
 35932  008C4E  0E00               	movlw	0
 35933  008C50  6FB4               	movwf	(_kalmanFilter+47)& (0+255),b
 35934                           
 35935                           ;app_sens_measure.c: 70: kalmanFilter[1]._last_estimate = 0.0f;
 35936  008C52  0E00               	movlw	0
 35937  008C54  6FAD               	movwf	(_kalmanFilter+40)& (0+255),b
 35938  008C56  0E00               	movlw	0
 35939  008C58  6FAE               	movwf	(_kalmanFilter+41)& (0+255),b
 35940  008C5A  0E00               	movlw	0
 35941  008C5C  6FAF               	movwf	(_kalmanFilter+42)& (0+255),b
 35942  008C5E  0E00               	movlw	0
 35943  008C60  6FB0               	movwf	(_kalmanFilter+43)& (0+255),b
 35944                           
 35945                           ;app_sens_measure.c: 71: kalmanFilter[1]._q_process = 0.0f;
 35946  008C62  0E00               	movlw	0
 35947  008C64  6FA5               	movwf	(_kalmanFilter+32)& (0+255),b
 35948  008C66  0E00               	movlw	0
 35949  008C68  6FA6               	movwf	(_kalmanFilter+33)& (0+255),b
 35950  008C6A  0E00               	movlw	0
 35951  008C6C  6FA7               	movwf	(_kalmanFilter+34)& (0+255),b
 35952  008C6E  0E00               	movlw	0
 35953  008C70  6FA8               	movwf	(_kalmanFilter+35)& (0+255),b
 35954                           
 35955                           ; BSR set to: 2
 35956                           ;app_sens_measure.c: 73: Kalman_setMeasurementError(&kalmanFilter[0],1);
 35957  008C72  0E85               	movlw	low _kalmanFilter
 35958  008C74  6E0F               	movwf	Kalman_setMeasurementError@pObj^0,c
 35959  008C76  0E02               	movlw	high _kalmanFilter
 35960  008C78  6E10               	movwf	(Kalman_setMeasurementError@pObj+1)^0,c
 35961  008C7A  0E00               	movlw	0
 35962  008C7C  6E11               	movwf	Kalman_setMeasurementError@mea_e^0,c
 35963  008C7E  0E00               	movlw	0
 35964  008C80  6E12               	movwf	(Kalman_setMeasurementError@mea_e+1)^0,c
 35965  008C82  0E80               	movlw	128
 35966  008C84  6E13               	movwf	(Kalman_setMeasurementError@mea_e+2)^0,c
 35967  008C86  0E3F               	movlw	63
 35968  008C88  6E14               	movwf	(Kalman_setMeasurementError@mea_e+3)^0,c
 35969  008C8A  ECB7  F06E         	call	_Kalman_setMeasurementError	;wreg free
 35970                           
 35971                           ;app_sens_measure.c: 74: Kalman_setEstimateError(&kalmanFilter[0],1);
 35972  008C8E  0E85               	movlw	low _kalmanFilter
 35973  008C90  6E0F               	movwf	Kalman_setEstimateError@pObj^0,c
 35974  008C92  0E02               	movlw	high _kalmanFilter
 35975  008C94  6E10               	movwf	(Kalman_setEstimateError@pObj+1)^0,c
 35976  008C96  0E00               	movlw	0
 35977  008C98  6E11               	movwf	Kalman_setEstimateError@est_e^0,c
 35978  008C9A  0E00               	movlw	0
 35979  008C9C  6E12               	movwf	(Kalman_setEstimateError@est_e+1)^0,c
 35980  008C9E  0E80               	movlw	128
 35981  008CA0  6E13               	movwf	(Kalman_setEstimateError@est_e+2)^0,c
 35982  008CA2  0E3F               	movlw	63
 35983  008CA4  6E14               	movwf	(Kalman_setEstimateError@est_e+3)^0,c
 35984  008CA6  EC6D  F06E         	call	_Kalman_setEstimateError	;wreg free
 35985                           
 35986                           ;app_sens_measure.c: 75: Kalman_setProcessNoise(&kalmanFilter[0],0.001);
 35987  008CAA  0E85               	movlw	low _kalmanFilter
 35988  008CAC  6E0F               	movwf	Kalman_setProcessNoise@pObj^0,c
 35989  008CAE  0E02               	movlw	high _kalmanFilter
 35990  008CB0  6E10               	movwf	(Kalman_setProcessNoise@pObj+1)^0,c
 35991  008CB2  0E6F               	movlw	111
 35992  008CB4  6E11               	movwf	Kalman_setProcessNoise@q^0,c
 35993  008CB6  0E12               	movlw	18
 35994  008CB8  6E12               	movwf	(Kalman_setProcessNoise@q+1)^0,c
 35995  008CBA  0E83               	movlw	131
 35996  008CBC  6E13               	movwf	(Kalman_setProcessNoise@q+2)^0,c
 35997  008CBE  0E3A               	movlw	58
 35998  008CC0  6E14               	movwf	(Kalman_setProcessNoise@q+3)^0,c
 35999  008CC2  EC5E  F06E         	call	_Kalman_setProcessNoise	;wreg free
 36000                           
 36001                           ;app_sens_measure.c: 77: Kalman_setMeasurementError(&kalmanFilter[1],1);
 36002  008CC6  0E9D               	movlw	low (_kalmanFilter+24)
 36003  008CC8  6E0F               	movwf	Kalman_setMeasurementError@pObj^0,c
 36004  008CCA  0E02               	movlw	high (_kalmanFilter+24)
 36005  008CCC  6E10               	movwf	(Kalman_setMeasurementError@pObj+1)^0,c
 36006  008CCE  0E00               	movlw	0
 36007  008CD0  6E11               	movwf	Kalman_setMeasurementError@mea_e^0,c
 36008  008CD2  0E00               	movlw	0
 36009  008CD4  6E12               	movwf	(Kalman_setMeasurementError@mea_e+1)^0,c
 36010  008CD6  0E80               	movlw	128
 36011  008CD8  6E13               	movwf	(Kalman_setMeasurementError@mea_e+2)^0,c
 36012  008CDA  0E3F               	movlw	63
 36013  008CDC  6E14               	movwf	(Kalman_setMeasurementError@mea_e+3)^0,c
 36014  008CDE  ECB7  F06E         	call	_Kalman_setMeasurementError	;wreg free
 36015                           
 36016                           ;app_sens_measure.c: 78: Kalman_setEstimateError(&kalmanFilter[1],1);
 36017  008CE2  0E9D               	movlw	low (_kalmanFilter+24)
 36018  008CE4  6E0F               	movwf	Kalman_setEstimateError@pObj^0,c
 36019  008CE6  0E02               	movlw	high (_kalmanFilter+24)
 36020  008CE8  6E10               	movwf	(Kalman_setEstimateError@pObj+1)^0,c
 36021  008CEA  0E00               	movlw	0
 36022  008CEC  6E11               	movwf	Kalman_setEstimateError@est_e^0,c
 36023  008CEE  0E00               	movlw	0
 36024  008CF0  6E12               	movwf	(Kalman_setEstimateError@est_e+1)^0,c
 36025  008CF2  0E80               	movlw	128
 36026  008CF4  6E13               	movwf	(Kalman_setEstimateError@est_e+2)^0,c
 36027  008CF6  0E3F               	movlw	63
 36028  008CF8  6E14               	movwf	(Kalman_setEstimateError@est_e+3)^0,c
 36029  008CFA  EC6D  F06E         	call	_Kalman_setEstimateError	;wreg free
 36030                           
 36031                           ;app_sens_measure.c: 79: Kalman_setProcessNoise(&kalmanFilter[1],0.001);
 36032  008CFE  0E9D               	movlw	low (_kalmanFilter+24)
 36033  008D00  6E0F               	movwf	Kalman_setProcessNoise@pObj^0,c
 36034  008D02  0E02               	movlw	high (_kalmanFilter+24)
 36035  008D04  6E10               	movwf	(Kalman_setProcessNoise@pObj+1)^0,c
 36036  008D06  0E6F               	movlw	111
 36037  008D08  6E11               	movwf	Kalman_setProcessNoise@q^0,c
 36038  008D0A  0E12               	movlw	18
 36039  008D0C  6E12               	movwf	(Kalman_setProcessNoise@q+1)^0,c
 36040  008D0E  0E83               	movlw	131
 36041  008D10  6E13               	movwf	(Kalman_setProcessNoise@q+2)^0,c
 36042  008D12  0E3A               	movlw	58
 36043  008D14  6E14               	movwf	(Kalman_setProcessNoise@q+3)^0,c
 36044  008D16  EC5E  F06E         	call	_Kalman_setProcessNoise	;wreg free
 36045                           
 36046                           ;app_sens_measure.c: 81: sensMeasure_sensor_init();
 36047  008D1A  ECAF  F05A         	call	_sensMeasure_sensor_init	;wreg free
 36048                           
 36049                           ; BSR set to: 0
 36050                           ;app_sens_measure.c: 83: g_sens_measure.seq = SENS_INIT;
 36051  008D1E  0E00               	movlw	0
 36052  008D20  6FCF               	movwf	_g_sens_measure& (0+255),b
 36053                           
 36054                           ; BSR set to: 0
 36055  008D22  0012               	return		;funcret
 36056  008D24                     __end_of_sensMeasure_init:
 36057                           	callstack 0
 36058                           
 36059 ;; *************** function _sensMeasure_sensor_init *****************
 36060 ;; Defined at:
 36061 ;;		line 86 in file "app_sens_measure.c"
 36062 ;; Parameters:    Size  Location     Type
 36063 ;;		None
 36064 ;; Auto vars:     Size  Location     Type
 36065 ;;  i               1   14[COMRAM] unsigned char 
 36066 ;; Return value:  Size  Location     Type
 36067 ;;                  1    wreg      void 
 36068 ;; Registers used:
 36069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36070 ;; Tracked objects:
 36071 ;;		On entry : 0/3
 36072 ;;		On exit  : 3F/0
 36073 ;;		Unchanged: 0/0
 36074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36079 ;;Total ram usage:        1 bytes
 36080 ;; Hardware stack levels used: 1
 36081 ;; Hardware stack levels required when called: 4
 36082 ;; This function calls:
 36083 ;;		Nothing
 36084 ;; This function is called by:
 36085 ;;		_build_response
 36086 ;;		_sensMeasure_init
 36087 ;; This function uses a non-reentrant model
 36088 ;;
 36089                           
 36090                           	psect	text172
 36091  00B55E                     __ptext172:
 36092                           	callstack 0
 36093  00B55E                     _sensMeasure_sensor_init:
 36094                           	callstack 24
 36095                           
 36096                           ;app_sens_measure.c: 88: for (uint8_t i = 0 ; i < 2 ; i++) {
 36097                           
 36098                           ; BSR set to: 0
 36099                           ;incstack = 0
 36100  00B55E  0E00               	movlw	0
 36101  00B560  6E0F               	movwf	sensMeasure_sensor_init@i^0,c
 36102  00B562                     l20247:
 36103                           
 36104                           ;app_sens_measure.c: 89: g_sens_measure.existChannel[i] = 0;
 36105  00B562  500F               	movf	sensMeasure_sensor_init@i^0,w,c
 36106  00B564  0FD2               	addlw	low (_g_sens_measure+3)
 36107  00B566  6ED9               	movwf	fsr2l,c
 36108  00B568  6ADA               	clrf	fsr2h,c
 36109  00B56A  0E00               	movlw	0
 36110  00B56C  6EDF               	movwf	indf2,c
 36111                           
 36112                           ;app_sens_measure.c: 90: g_sens_measure.isChecksum[i] = 0;
 36113  00B56E  500F               	movf	sensMeasure_sensor_init@i^0,w,c
 36114  00B570  0FD4               	addlw	low (_g_sens_measure+5)
 36115  00B572  6ED9               	movwf	fsr2l,c
 36116  00B574  6ADA               	clrf	fsr2h,c
 36117  00B576  0E00               	movlw	0
 36118  00B578  6EDF               	movwf	indf2,c
 36119                           
 36120                           ;app_sens_measure.c: 91: g_sens_measure.isSensorInit[i] = 0;
 36121  00B57A  500F               	movf	sensMeasure_sensor_init@i^0,w,c
 36122  00B57C  0FD6               	addlw	low (_g_sens_measure+7)
 36123  00B57E  6ED9               	movwf	fsr2l,c
 36124  00B580  6ADA               	clrf	fsr2h,c
 36125  00B582  0E00               	movlw	0
 36126  00B584  6EDF               	movwf	indf2,c
 36127                           
 36128                           ;app_sens_measure.c: 92: g_last_value[i][LV_TEMP] = -999995.0f;
 36129  00B586  500F               	movf	sensMeasure_sensor_init@i^0,w,c
 36130  00B588  0D0C               	mullw	12
 36131  00B58A  0E08               	movlw	low (_g_last_value+8)
 36132  00B58C  24F3               	addwf	243,w,c
 36133  00B58E  6ED9               	movwf	fsr2l,c
 36134  00B590  0E01               	movlw	high (_g_last_value+8)
 36135  00B592  20F4               	addwfc	prodh,w,c
 36136  00B594  6EDA               	movwf	fsr2h,c
 36137  00B596  0EB0               	movlw	176
 36138  00B598  6EDE               	movwf	postinc2,c
 36139  00B59A  0E23               	movlw	35
 36140  00B59C  6EDE               	movwf	postinc2,c
 36141  00B59E  0E74               	movlw	116
 36142  00B5A0  6EDE               	movwf	postinc2,c
 36143  00B5A2  0EC9               	movlw	201
 36144  00B5A4  6EDD               	movwf	postdec2,c
 36145                           
 36146                           ;app_sens_measure.c: 93: g_last_value[i][LV_GAS_VOLT] = -999995.0f;
 36147  00B5A6  500F               	movf	sensMeasure_sensor_init@i^0,w,c
 36148  00B5A8  0D0C               	mullw	12
 36149  00B5AA  0E00               	movlw	low _g_last_value
 36150  00B5AC  24F3               	addwf	243,w,c
 36151  00B5AE  6ED9               	movwf	fsr2l,c
 36152  00B5B0  0E01               	movlw	high _g_last_value
 36153  00B5B2  20F4               	addwfc	prodh,w,c
 36154  00B5B4  6EDA               	movwf	fsr2h,c
 36155  00B5B6  0EB0               	movlw	176
 36156  00B5B8  6EDE               	movwf	postinc2,c
 36157  00B5BA  0E23               	movlw	35
 36158  00B5BC  6EDE               	movwf	postinc2,c
 36159  00B5BE  0E74               	movlw	116
 36160  00B5C0  6EDE               	movwf	postinc2,c
 36161  00B5C2  0EC9               	movlw	201
 36162  00B5C4  6EDD               	movwf	postdec2,c
 36163                           
 36164                           ;app_sens_measure.c: 94: g_last_value[i][LV_GAS_PPM] = -999995.0f;
 36165  00B5C6  500F               	movf	sensMeasure_sensor_init@i^0,w,c
 36166  00B5C8  0D0C               	mullw	12
 36167  00B5CA  0E04               	movlw	low (_g_last_value+4)
 36168  00B5CC  24F3               	addwf	243,w,c
 36169  00B5CE  6ED9               	movwf	fsr2l,c
 36170  00B5D0  0E01               	movlw	high (_g_last_value+4)
 36171  00B5D2  20F4               	addwfc	prodh,w,c
 36172  00B5D4  6EDA               	movwf	fsr2h,c
 36173  00B5D6  0EB0               	movlw	176
 36174  00B5D8  6EDE               	movwf	postinc2,c
 36175  00B5DA  0E23               	movlw	35
 36176  00B5DC  6EDE               	movwf	postinc2,c
 36177  00B5DE  0E74               	movlw	116
 36178  00B5E0  6EDE               	movwf	postinc2,c
 36179  00B5E2  0EC9               	movlw	201
 36180  00B5E4  6EDD               	movwf	postdec2,c
 36181  00B5E6  2A0F               	incf	sensMeasure_sensor_init@i^0,f,c
 36182  00B5E8  0E01               	movlw	1
 36183  00B5EA  640F               	cpfsgt	sensMeasure_sensor_init@i^0,c
 36184  00B5EC  D7BA               	goto	l20247
 36185                           
 36186                           ;app_sens_measure.c: 95: };app_sens_measure.c: 97: g_sens_measure.seq = SENS_SENSOR_INIT
      +                          ;
 36187  00B5EE  0E03               	movlw	3
 36188  00B5F0  0100               	movlb	0	; () banked
 36189  00B5F2  6FCF               	movwf	_g_sens_measure& (0+255),b
 36190                           
 36191                           ;app_sens_measure.c: 99: g_channel_no = 0;
 36192  00B5F4  0E00               	movlw	0
 36193  00B5F6  6FF9               	movwf	_g_channel_no& (0+255),b	;volatile
 36194                           
 36195                           ;app_sens_measure.c: 100: g_large_counter = 0;
 36196  00B5F8  0E00               	movlw	0
 36197  00B5FA  6FE1               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
 36198  00B5FC  0E00               	movlw	0
 36199  00B5FE  6FE0               	movwf	_g_large_counter& (0+255),b	;volatile
 36200                           
 36201                           ;app_sens_measure.c: 104: g_retry_count = 0;
 36202  00B600  0E00               	movlw	0
 36203  00B602  6FF8               	movwf	_g_retry_count& (0+255),b	;volatile
 36204                           
 36205                           ; BSR set to: 0
 36206  00B604  0012               	return		;funcret
 36207  00B606                     __end_of_sensMeasure_sensor_init:
 36208                           	callstack 0
 36209                           
 36210 ;; *************** function _Kalman_setProcessNoise *****************
 36211 ;; Defined at:
 36212 ;;		line 168 in file "filter.c"
 36213 ;; Parameters:    Size  Location     Type
 36214 ;;  pObj            2   14[COMRAM] PTR struct .
 36215 ;;		 -> kalmanFilter(48), 
 36216 ;;  q               4   16[COMRAM] float 
 36217 ;; Auto vars:     Size  Location     Type
 36218 ;;		None
 36219 ;; Return value:  Size  Location     Type
 36220 ;;                  1    wreg      void 
 36221 ;; Registers used:
 36222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36223 ;; Tracked objects:
 36224 ;;		On entry : 0/2
 36225 ;;		On exit  : 0/0
 36226 ;;		Unchanged: 0/0
 36227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36228 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36231 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36232 ;;Total ram usage:        6 bytes
 36233 ;; Hardware stack levels used: 1
 36234 ;; Hardware stack levels required when called: 4
 36235 ;; This function calls:
 36236 ;;		Nothing
 36237 ;; This function is called by:
 36238 ;;		_sensMeasure_init
 36239 ;; This function uses a non-reentrant model
 36240 ;;
 36241                           
 36242                           	psect	text173
 36243  00DCBC                     __ptext173:
 36244                           	callstack 0
 36245  00DCBC                     _Kalman_setProcessNoise:
 36246                           	callstack 24
 36247                           
 36248                           ;filter.c: 170: pObj->_q_process=q;
 36249                           
 36250                           ; BSR set to: 0
 36251                           ;incstack = 0
 36252  00DCBC  EE20 F008          	lfsr	2,8
 36253  00DCC0  500F               	movf	Kalman_setProcessNoise@pObj^0,w,c
 36254  00DCC2  26D9               	addwf	fsr2l,f,c
 36255  00DCC4  5010               	movf	(Kalman_setProcessNoise@pObj+1)^0,w,c
 36256  00DCC6  22DA               	addwfc	fsr2h,f,c
 36257  00DCC8  C011  FFDE         	movff	Kalman_setProcessNoise@q,postinc2
 36258  00DCCC  C012  FFDE         	movff	Kalman_setProcessNoise@q+1,postinc2
 36259  00DCD0  C013  FFDE         	movff	Kalman_setProcessNoise@q+2,postinc2
 36260  00DCD4  C014  FFDE         	movff	Kalman_setProcessNoise@q+3,postinc2
 36261  00DCD8  0012               	return		;funcret
 36262  00DCDA                     __end_of_Kalman_setProcessNoise:
 36263                           	callstack 0
 36264                           
 36265 ;; *************** function _Kalman_setMeasurementError *****************
 36266 ;; Defined at:
 36267 ;;		line 159 in file "filter.c"
 36268 ;; Parameters:    Size  Location     Type
 36269 ;;  pObj            2   14[COMRAM] PTR struct .
 36270 ;;		 -> kalmanFilter(48), 
 36271 ;;  mea_e           4   16[COMRAM] float 
 36272 ;; Auto vars:     Size  Location     Type
 36273 ;;		None
 36274 ;; Return value:  Size  Location     Type
 36275 ;;                  1    wreg      void 
 36276 ;; Registers used:
 36277 ;;		fsr2l, fsr2h
 36278 ;; Tracked objects:
 36279 ;;		On entry : 0/2
 36280 ;;		On exit  : 0/0
 36281 ;;		Unchanged: 0/0
 36282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36283 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36287 ;;Total ram usage:        6 bytes
 36288 ;; Hardware stack levels used: 1
 36289 ;; Hardware stack levels required when called: 4
 36290 ;; This function calls:
 36291 ;;		Nothing
 36292 ;; This function is called by:
 36293 ;;		_sensMeasure_init
 36294 ;; This function uses a non-reentrant model
 36295 ;;
 36296                           
 36297                           	psect	text174
 36298  00DD6E                     __ptext174:
 36299                           	callstack 0
 36300  00DD6E                     _Kalman_setMeasurementError:
 36301                           	callstack 24
 36302                           
 36303                           ;filter.c: 161: pObj->_err_measure=mea_e;
 36304                           
 36305                           ;incstack = 0
 36306  00DD6E  C00F  FFD9         	movff	Kalman_setMeasurementError@pObj,fsr2l
 36307  00DD72  C010  FFDA         	movff	Kalman_setMeasurementError@pObj+1,fsr2h
 36308  00DD76  C011  FFDE         	movff	Kalman_setMeasurementError@mea_e,postinc2
 36309  00DD7A  C012  FFDE         	movff	Kalman_setMeasurementError@mea_e+1,postinc2
 36310  00DD7E  C013  FFDE         	movff	Kalman_setMeasurementError@mea_e+2,postinc2
 36311  00DD82  C014  FFDE         	movff	Kalman_setMeasurementError@mea_e+3,postinc2
 36312  00DD86  0012               	return		;funcret
 36313  00DD88                     __end_of_Kalman_setMeasurementError:
 36314                           	callstack 0
 36315                           
 36316 ;; *************** function _Kalman_setEstimateError *****************
 36317 ;; Defined at:
 36318 ;;		line 163 in file "filter.c"
 36319 ;; Parameters:    Size  Location     Type
 36320 ;;  pObj            2   14[COMRAM] PTR struct .
 36321 ;;		 -> kalmanFilter(48), 
 36322 ;;  est_e           4   16[COMRAM] float 
 36323 ;; Auto vars:     Size  Location     Type
 36324 ;;		None
 36325 ;; Return value:  Size  Location     Type
 36326 ;;                  1    wreg      void 
 36327 ;; Registers used:
 36328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36329 ;; Tracked objects:
 36330 ;;		On entry : 0/2
 36331 ;;		On exit  : 0/0
 36332 ;;		Unchanged: 0/0
 36333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36334 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36338 ;;Total ram usage:        6 bytes
 36339 ;; Hardware stack levels used: 1
 36340 ;; Hardware stack levels required when called: 4
 36341 ;; This function calls:
 36342 ;;		Nothing
 36343 ;; This function is called by:
 36344 ;;		_sensMeasure_init
 36345 ;; This function uses a non-reentrant model
 36346 ;;
 36347                           
 36348                           	psect	text175
 36349  00DCDA                     __ptext175:
 36350                           	callstack 0
 36351  00DCDA                     _Kalman_setEstimateError:
 36352                           	callstack 24
 36353                           
 36354                           ;filter.c: 165: pObj->_err_estimate=est_e;
 36355                           
 36356                           ;incstack = 0
 36357  00DCDA  EE20 F004          	lfsr	2,4
 36358  00DCDE  500F               	movf	Kalman_setEstimateError@pObj^0,w,c
 36359  00DCE0  26D9               	addwf	fsr2l,f,c
 36360  00DCE2  5010               	movf	(Kalman_setEstimateError@pObj+1)^0,w,c
 36361  00DCE4  22DA               	addwfc	fsr2h,f,c
 36362  00DCE6  C011  FFDE         	movff	Kalman_setEstimateError@est_e,postinc2
 36363  00DCEA  C012  FFDE         	movff	Kalman_setEstimateError@est_e+1,postinc2
 36364  00DCEE  C013  FFDE         	movff	Kalman_setEstimateError@est_e+2,postinc2
 36365  00DCF2  C014  FFDE         	movff	Kalman_setEstimateError@est_e+3,postinc2
 36366  00DCF6  0012               	return		;funcret
 36367  00DCF8                     __end_of_Kalman_setEstimateError:
 36368                           	callstack 0
 36369                           
 36370 ;; *************** function _nvm_init *****************
 36371 ;; Defined at:
 36372 ;;		line 206 in file "nvm.c"
 36373 ;; Parameters:    Size  Location     Type
 36374 ;;		None
 36375 ;; Auto vars:     Size  Location     Type
 36376 ;;  pdesc           2   74[BANK0 ] PTR unsigned int 
 36377 ;;		 -> sd002.string(50), sd002(52), 
 36378 ;;  i               1   76[BANK0 ] unsigned char 
 36379 ;; Return value:  Size  Location     Type
 36380 ;;                  1    wreg      void 
 36381 ;; Registers used:
 36382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36383 ;; Tracked objects:
 36384 ;;		On entry : 0/0
 36385 ;;		On exit  : 0/0
 36386 ;;		Unchanged: 0/0
 36387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36389 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36390 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36391 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36392 ;;Total ram usage:        9 bytes
 36393 ;; Hardware stack levels used: 1
 36394 ;; Hardware stack levels required when called: 10
 36395 ;; This function calls:
 36396 ;;		_get_product_desc
 36397 ;;		_nvm_clear_flash
 36398 ;;		_nvm_flash_check
 36399 ;;		_nvm_read_flash_all
 36400 ;;		_nvm_write_flash_all
 36401 ;; This function is called by:
 36402 ;;		_Board_initialize
 36403 ;; This function uses a non-reentrant model
 36404 ;;
 36405                           
 36406                           	psect	text176
 36407  00C080                     __ptext176:
 36408                           	callstack 0
 36409  00C080                     _nvm_init:
 36410                           	callstack 19
 36411                           
 36412                           ;nvm.c: 208: uint8_t i;;nvm.c: 211: nvm_read_flash_all(&g_nvm.flash);
 36413                           
 36414                           ;incstack = 0
 36415  00C080  0E52               	movlw	low _g_nvm
 36416  00C082  6E1F               	movwf	nvm_read_flash_all@flash^0,c
 36417  00C084  0E01               	movlw	high _g_nvm
 36418  00C086  6E20               	movwf	(nvm_read_flash_all@flash+1)^0,c
 36419  00C088  ECB9  F06D         	call	_nvm_read_flash_all	;wreg free
 36420                           
 36421                           ;nvm.c: 214: uint16_t* pdesc = get_product_desc();
 36422  00C08C  EC64  F06F         	call	_get_product_desc	;wreg free
 36423  00C090  C00F  F0AA         	movff	?_get_product_desc,nvm_init@pdesc
 36424  00C094  C010  F0AB         	movff	?_get_product_desc+1,nvm_init@pdesc+1
 36425                           
 36426                           ;nvm.c: 215: for (i = 0 ; i < 8 ; i++)
 36427  00C098  0E00               	movlw	0
 36428  00C09A  0100               	movlb	0	; () banked
 36429  00C09C  6FAC               	movwf	nvm_init@i& (0+255),b
 36430  00C09E                     l33775:
 36431                           
 36432                           ; BSR set to: 0
 36433                           ;nvm.c: 216: {;nvm.c: 217: pdesc[i + 11] = g_nvm.flash.serialNum[i];
 36434  00C09E  0E68               	movlw	low (_g_nvm+22)
 36435  00C0A0  25AC               	addwf	nvm_init@i& (0+255),w,b
 36436  00C0A2  6ED9               	movwf	fsr2l,c
 36437  00C0A4  6ADA               	clrf	fsr2h,c
 36438  00C0A6  0E01               	movlw	high (_g_nvm+22)
 36439  00C0A8  22DA               	addwfc	fsr2h,f,c
 36440  00C0AA  50DF               	movf	indf2,w,c
 36441  00C0AC  6FA4               	movwf	??_nvm_init& (0+255),b
 36442  00C0AE  6BA5               	clrf	(??_nvm_init+1)& (0+255),b
 36443  00C0B0  51AC               	movf	nvm_init@i& (0+255),w,b
 36444  00C0B2  6FA6               	movwf	(??_nvm_init+2)& (0+255),b
 36445  00C0B4  6BA7               	clrf	(??_nvm_init+3)& (0+255),b
 36446  00C0B6  90D8               	bcf	status,0,c
 36447  00C0B8  37A6               	rlcf	(??_nvm_init+2)& (0+255),f,b
 36448  00C0BA  37A7               	rlcf	(??_nvm_init+3)& (0+255),f,b
 36449  00C0BC  C0AA  F0A8         	movff	nvm_init@pdesc,??_nvm_init+4
 36450  00C0C0  C0AB  F0A9         	movff	nvm_init@pdesc+1,??_nvm_init+5
 36451  00C0C4  51A6               	movf	(??_nvm_init+2)& (0+255),w,b
 36452  00C0C6  27A8               	addwf	(??_nvm_init+4)& (0+255),f,b
 36453  00C0C8  51A7               	movf	(??_nvm_init+3)& (0+255),w,b
 36454  00C0CA  23A9               	addwfc	(??_nvm_init+5)& (0+255),f,b
 36455  00C0CC  0E16               	movlw	22
 36456  00C0CE  25A8               	addwf	(??_nvm_init+4)& (0+255),w,b
 36457  00C0D0  6ED9               	movwf	fsr2l,c
 36458  00C0D2  0E00               	movlw	0
 36459  00C0D4  21A9               	addwfc	(??_nvm_init+5)& (0+255),w,b
 36460  00C0D6  6EDA               	movwf	fsr2h,c
 36461  00C0D8  C0A4  FFDE         	movff	??_nvm_init,postinc2
 36462  00C0DC  C0A5  FFDD         	movff	??_nvm_init+1,postdec2
 36463                           
 36464                           ; BSR set to: 0
 36465  00C0E0  2BAC               	incf	nvm_init@i& (0+255),f,b
 36466                           
 36467                           ; BSR set to: 0
 36468  00C0E2  0E07               	movlw	7
 36469  00C0E4  65AC               	cpfsgt	nvm_init@i& (0+255),b
 36470  00C0E6  D7DB               	goto	l33775
 36471                           
 36472                           ; BSR set to: 0
 36473                           ;nvm.c: 218: };nvm.c: 220: if (nvm_flash_check() == 0) {
 36474  00C0E8  EC12  F066         	call	_nvm_flash_check	;wreg free
 36475  00C0EC  0900               	iorlw	0
 36476  00C0EE  A4D8               	btfss	status,2,c
 36477  00C0F0  0012               	return	
 36478                           
 36479                           ; BSR set to: 1
 36480                           ;nvm.c: 221: nvm_clear_flash();
 36481  00C0F2  ECB7  F065         	call	_nvm_clear_flash	;wreg free
 36482                           
 36483                           ; BSR set to: 0
 36484                           ;nvm.c: 222: nvm_write_flash_all(&g_nvm.flash);
 36485  00C0F6  0E52               	movlw	low _g_nvm
 36486  00C0F8  6E1F               	movwf	nvm_write_flash_all@flash^0,c
 36487  00C0FA  0E01               	movlw	high _g_nvm
 36488  00C0FC  6E20               	movwf	(nvm_write_flash_all@flash+1)^0,c
 36489  00C0FE  ECD2  F067         	call	_nvm_write_flash_all	;wreg free
 36490  00C102  0012               	return		;funcret
 36491  00C104                     __end_of_nvm_init:
 36492                           	callstack 0
 36493                           
 36494 ;; *************** function _nvm_write_flash_all *****************
 36495 ;; Defined at:
 36496 ;;		line 270 in file "nvm.c"
 36497 ;; Parameters:    Size  Location     Type
 36498 ;;  flash           2   30[COMRAM] PTR struct .
 36499 ;;		 -> g_nvm(154), 
 36500 ;; Auto vars:     Size  Location     Type
 36501 ;;		None
 36502 ;; Return value:  Size  Location     Type
 36503 ;;                  1    wreg      unsigned char 
 36504 ;; Registers used:
 36505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36506 ;; Tracked objects:
 36507 ;;		On entry : 3F/0
 36508 ;;		On exit  : 0/0
 36509 ;;		Unchanged: 0/0
 36510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36515 ;;Total ram usage:        2 bytes
 36516 ;; Hardware stack levels used: 1
 36517 ;; Hardware stack levels required when called: 5
 36518 ;; This function calls:
 36519 ;;		_flash_clear
 36520 ;;		_flash_writeBytes
 36521 ;; This function is called by:
 36522 ;;		_update_command
 36523 ;;		_nvm_init
 36524 ;; This function uses a non-reentrant model
 36525 ;;
 36526                           
 36527                           	psect	text177
 36528  00CFA4                     __ptext177:
 36529                           	callstack 0
 36530  00CFA4                     _nvm_write_flash_all:
 36531                           	callstack 23
 36532                           
 36533                           ; BSR set to: 0
 36534                           ;nvm.c: 272: flash_clear(0xf400, (0xf400 + 30));
 36535                           
 36536                           ;incstack = 0
 36537  00CFA4  0E00               	movlw	0
 36538  00CFA6  6E0F               	movwf	flash_clear@startaddr^0,c
 36539  00CFA8  0EF4               	movlw	244
 36540  00CFAA  6E10               	movwf	(flash_clear@startaddr+1)^0,c
 36541  00CFAC  0E00               	movlw	0
 36542  00CFAE  6E11               	movwf	(flash_clear@startaddr+2)^0,c
 36543  00CFB0  0E00               	movlw	0
 36544  00CFB2  6E12               	movwf	(flash_clear@startaddr+3)^0,c
 36545  00CFB4  0E1E               	movlw	30
 36546  00CFB6  6E13               	movwf	flash_clear@endaddr^0,c
 36547  00CFB8  0EF4               	movlw	244
 36548  00CFBA  6E14               	movwf	(flash_clear@endaddr+1)^0,c
 36549  00CFBC  0E00               	movlw	0
 36550  00CFBE  6E15               	movwf	(flash_clear@endaddr+2)^0,c
 36551  00CFC0  0E00               	movlw	0
 36552  00CFC2  6E16               	movwf	(flash_clear@endaddr+3)^0,c
 36553  00CFC4  ECBC  F063         	call	_flash_clear	;wreg free
 36554                           
 36555                           ; BSR set to: 0
 36556                           ;nvm.c: 273: return flash_writeBytes(0xf400, flash->byte, 30);
 36557  00CFC8  0E00               	movlw	0
 36558  00CFCA  6E0F               	movwf	flash_writeBytes@startaddr^0,c
 36559  00CFCC  0EF4               	movlw	244
 36560  00CFCE  6E10               	movwf	(flash_writeBytes@startaddr+1)^0,c
 36561  00CFD0  0E00               	movlw	0
 36562  00CFD2  6E11               	movwf	(flash_writeBytes@startaddr+2)^0,c
 36563  00CFD4  0E00               	movlw	0
 36564  00CFD6  6E12               	movwf	(flash_writeBytes@startaddr+3)^0,c
 36565  00CFD8  C01F  F013         	movff	nvm_write_flash_all@flash,flash_writeBytes@flash_array
 36566  00CFDC  C020  F014         	movff	nvm_write_flash_all@flash+1,flash_writeBytes@flash_array+1
 36567  00CFE0  0E00               	movlw	0
 36568  00CFE2  6E16               	movwf	(flash_writeBytes@num_bytes+1)^0,c
 36569  00CFE4  0E1E               	movlw	30
 36570  00CFE6  6E15               	movwf	flash_writeBytes@num_bytes^0,c
 36571  00CFE8  EC80  F054         	call	_flash_writeBytes	;wreg free
 36572  00CFEC  0012               	return		;funcret
 36573  00CFEE                     __end_of_nvm_write_flash_all:
 36574                           	callstack 0
 36575                           
 36576 ;; *************** function _flash_writeBytes *****************
 36577 ;; Defined at:
 36578 ;;		line 36 in file "bsp/flash.c"
 36579 ;; Parameters:    Size  Location     Type
 36580 ;;  startaddr       4   14[COMRAM] unsigned long 
 36581 ;;  flash_array     2   18[COMRAM] PTR unsigned char 
 36582 ;;		 -> nvm_write_flash_all@flash(2), g_nvm(154), 
 36583 ;;  num_bytes       2   20[COMRAM] unsigned int 
 36584 ;; Auto vars:     Size  Location     Type
 36585 ;;  flash_addr      4   26[COMRAM] struct .
 36586 ;;  flag            1   25[COMRAM] unsigned char 
 36587 ;;  write_byte      1   24[COMRAM] unsigned char 
 36588 ;;  retval          1   23[COMRAM] unsigned char 
 36589 ;; Return value:  Size  Location     Type
 36590 ;;                  1    wreg      unsigned char 
 36591 ;; Registers used:
 36592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36593 ;; Tracked objects:
 36594 ;;		On entry : 3F/0
 36595 ;;		On exit  : 0/0
 36596 ;;		Unchanged: 0/0
 36597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36598 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36599 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36601 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36602 ;;Total ram usage:       16 bytes
 36603 ;; Hardware stack levels used: 1
 36604 ;; Hardware stack levels required when called: 4
 36605 ;; This function calls:
 36606 ;;		Nothing
 36607 ;; This function is called by:
 36608 ;;		_nvm_write_flash_all
 36609 ;; This function uses a non-reentrant model
 36610 ;;
 36611                           
 36612                           	psect	text178
 36613  00A900                     __ptext178:
 36614                           	callstack 0
 36615  00A900                     _flash_writeBytes:
 36616                           	callstack 23
 36617                           
 36618                           ; BSR set to: 0
 36619                           ;flash.c: 38: bool retval = 1;
 36620                           
 36621                           ;incstack = 0
 36622  00A900  0E01               	movlw	1
 36623  00A902  6E18               	movwf	flash_writeBytes@retval^0,c
 36624  00A904  0E00               	movlw	0
 36625  00A906  6E1A               	movwf	flash_writeBytes@flag^0,c
 36626                           
 36627                           ; BSR set to: 0
 36628                           ;flash.c: 40: DWORD_VAL flash_addr;;flash.c: 42: flash_addr.Val = startaddr;
 36629  00A908  C00F  F01B         	movff	flash_writeBytes@startaddr,flash_writeBytes@flash_addr
 36630  00A90C  C010  F01C         	movff	flash_writeBytes@startaddr+1,flash_writeBytes@flash_addr+1
 36631  00A910  C011  F01D         	movff	flash_writeBytes@startaddr+2,flash_writeBytes@flash_addr+2
 36632  00A914  C012  F01E         	movff	flash_writeBytes@startaddr+3,flash_writeBytes@flash_addr+3
 36633                           
 36634                           ; BSR set to: 0
 36635                           ;flash.c: 44: startaddr /= 64 ;
 36636  00A918  0E06               	movlw	6
 36637  00A91A  6E17               	movwf	??_flash_writeBytes^0,c
 36638  00A91C                     u21055:
 36639  00A91C  90D8               	bcf	status,0,c
 36640  00A91E  3212               	rrcf	(flash_writeBytes@startaddr+3)^0,f,c
 36641  00A920  3211               	rrcf	(flash_writeBytes@startaddr+2)^0,f,c
 36642  00A922  3210               	rrcf	(flash_writeBytes@startaddr+1)^0,f,c
 36643  00A924  320F               	rrcf	flash_writeBytes@startaddr^0,f,c
 36644  00A926  2E17               	decfsz	??_flash_writeBytes^0,f,c
 36645  00A928  D7F9               	goto	u21055
 36646                           
 36647                           ; BSR set to: 0
 36648                           ;flash.c: 45: startaddr *= 64 ;
 36649  00A92A  0E06               	movlw	6
 36650  00A92C                     u21065:
 36651  00A92C  90D8               	bcf	status,0,c
 36652  00A92E  360F               	rlcf	flash_writeBytes@startaddr^0,f,c
 36653  00A930  3610               	rlcf	(flash_writeBytes@startaddr+1)^0,f,c
 36654  00A932  3611               	rlcf	(flash_writeBytes@startaddr+2)^0,f,c
 36655  00A934  3612               	rlcf	(flash_writeBytes@startaddr+3)^0,f,c
 36656  00A936  2EE8               	decfsz	wreg,f,c
 36657  00A938  D7F9               	goto	u21065
 36658                           
 36659                           ; BSR set to: 0
 36660                           ;flash.c: 46: startaddr += 64 ;
 36661  00A93A  0E40               	movlw	64
 36662  00A93C  260F               	addwf	flash_writeBytes@startaddr^0,f,c
 36663  00A93E  0E00               	movlw	0
 36664  00A940  2210               	addwfc	(flash_writeBytes@startaddr+1)^0,f,c
 36665  00A942  2211               	addwfc	(flash_writeBytes@startaddr+2)^0,f,c
 36666  00A944  2212               	addwfc	(flash_writeBytes@startaddr+3)^0,f,c
 36667                           
 36668                           ; BSR set to: 0
 36669                           ;flash.c: 48: write_byte = startaddr - flash_addr.Val;
 36670  00A946  501B               	movf	flash_writeBytes@flash_addr^0,w,c
 36671  00A948  5C0F               	subwf	flash_writeBytes@startaddr^0,w,c
 36672  00A94A  6E19               	movwf	flash_writeBytes@write_byte^0,c
 36673                           
 36674                           ;flash.c: 50: while(num_bytes)
 36675  00A94C  D045               	goto	l18707
 36676  00A94E                     l75:
 36677                           
 36678                           ;flash.c: 51: {;flash.c: 52: TBLPTRU = flash_addr.byte.UB;
 36679  00A94E  C01D  FFF8         	movff	flash_writeBytes@flash_addr+2,tblptru	;volatile
 36680                           
 36681                           ;flash.c: 53: TBLPTRH = flash_addr.byte.HB;
 36682  00A952  C01C  FFF7         	movff	flash_writeBytes@flash_addr+1,tblptrh	;volatile
 36683                           
 36684                           ;flash.c: 54: TBLPTRL = flash_addr.byte.LB;
 36685  00A956  C01B  FFF6         	movff	flash_writeBytes@flash_addr,tblptrl	;volatile
 36686                           
 36687                           ;flash.c: 56: while(write_byte--)
 36688  00A95A  D010               	goto	l18687
 36689  00A95C                     l18679:
 36690                           
 36691                           ;flash.c: 57: {;flash.c: 58: TABLAT = *flash_array++;
 36692  00A95C  C013  FFD9         	movff	flash_writeBytes@flash_array,fsr2l
 36693  00A960  C014  FFDA         	movff	flash_writeBytes@flash_array+1,fsr2h
 36694  00A964  50DF               	movf	indf2,w,c
 36695  00A966  6EF5               	movwf	245,c	;volatile
 36696  00A968  4A13               	infsnz	flash_writeBytes@flash_array^0,f,c
 36697  00A96A  2A14               	incf	(flash_writeBytes@flash_array+1)^0,f,c
 36698  00A96C  000D               	tblwt		*+	;# 
 36699                           
 36700                           ;flash.c: 60: if(--num_bytes==0) break;
 36701  00A96E  0615               	decf	flash_writeBytes@num_bytes^0,f,c
 36702  00A970  A0D8               	btfss	status,0,c
 36703  00A972  0616               	decf	(flash_writeBytes@num_bytes+1)^0,f,c
 36704  00A974  5015               	movf	flash_writeBytes@num_bytes^0,w,c
 36705  00A976  1016               	iorwf	(flash_writeBytes@num_bytes+1)^0,w,c
 36706  00A978  B4D8               	btfsc	status,2,c
 36707  00A97A  D004               	goto	u21080
 36708  00A97C                     l18687:
 36709  00A97C  0619               	decf	flash_writeBytes@write_byte^0,f,c
 36710  00A97E  2819               	incf	flash_writeBytes@write_byte^0,w,c
 36711  00A980  A4D8               	btfss	status,2,c
 36712  00A982  D7EC               	goto	l18679
 36713  00A984                     u21080:
 36714                           
 36715                           ;flash.c: 61: };flash.c: 63: TBLPTRU = flash_addr.byte.UB;
 36716  00A984  C01D  FFF8         	movff	flash_writeBytes@flash_addr+2,tblptru	;volatile
 36717                           
 36718                           ;flash.c: 64: TBLPTRH = flash_addr.byte.HB;
 36719  00A988  C01C  FFF7         	movff	flash_writeBytes@flash_addr+1,tblptrh	;volatile
 36720                           
 36721                           ;flash.c: 65: TBLPTRL = flash_addr.byte.LB;
 36722  00A98C  C01B  FFF6         	movff	flash_writeBytes@flash_addr,tblptrl	;volatile
 36723                           
 36724                           ;flash.c: 67: EECON1bits.WREN = 1;
 36725  00A990  84A6               	bsf	166,2,c	;volsfr
 36726                           
 36727                           ;flash.c: 68: if(INTCONbits.GIE)
 36728  00A992  AEF2               	btfss	242,7,c	;volatile
 36729  00A994  D003               	goto	l80
 36730                           
 36731                           ;flash.c: 69: {;flash.c: 70: INTCONbits.GIE = 0;
 36732  00A996  9EF2               	bcf	242,7,c	;volatile
 36733                           
 36734                           ;flash.c: 71: flag=1;
 36735  00A998  0E01               	movlw	1
 36736  00A99A  6E1A               	movwf	flash_writeBytes@flag^0,c
 36737  00A99C                     l80:
 36738                           
 36739                           ;flash.c: 72: };flash.c: 73: EECON2 = 0x55;
 36740  00A99C  0E55               	movlw	85
 36741  00A99E  6EA7               	movwf	167,c	;volsfr
 36742                           
 36743                           ;flash.c: 74: EECON2 = 0xAA;
 36744  00A9A0  0EAA               	movlw	170
 36745  00A9A2  6EA7               	movwf	167,c	;volsfr
 36746                           
 36747                           ;flash.c: 75: EECON1bits.WR =1;
 36748  00A9A4  82A6               	bsf	166,1,c	;volsfr
 36749                           
 36750                           ;flash.c: 76: EECON1bits.WREN = 0 ;
 36751  00A9A6  94A6               	bcf	166,2,c	;volsfr
 36752                           
 36753                           ;flash.c: 77: if(flag)
 36754  00A9A8  501A               	movf	flash_writeBytes@flag^0,w,c
 36755  00A9AA  B4D8               	btfsc	status,2,c
 36756  00A9AC  D003               	goto	l81
 36757                           
 36758                           ;flash.c: 78: {;flash.c: 79: INTCONbits.GIE = 1;
 36759  00A9AE  8EF2               	bsf	242,7,c	;volatile
 36760                           
 36761                           ;flash.c: 80: flag=0;
 36762  00A9B0  0E00               	movlw	0
 36763  00A9B2  6E1A               	movwf	flash_writeBytes@flag^0,c
 36764  00A9B4                     l81:
 36765                           
 36766                           ;flash.c: 81: };flash.c: 82: write_byte = 64;
 36767  00A9B4  0E40               	movlw	64
 36768  00A9B6  6E19               	movwf	flash_writeBytes@write_byte^0,c
 36769                           
 36770                           ;flash.c: 83: flash_addr.Val = flash_addr.Val + 64;
 36771  00A9B8  0E40               	movlw	64
 36772  00A9BA  241B               	addwf	flash_writeBytes@flash_addr^0,w,c
 36773  00A9BC  6E1B               	movwf	flash_writeBytes@flash_addr^0,c
 36774  00A9BE  0E00               	movlw	0
 36775  00A9C0  201C               	addwfc	(flash_writeBytes@flash_addr+1)^0,w,c
 36776  00A9C2  6E1C               	movwf	(flash_writeBytes@flash_addr+1)^0,c
 36777  00A9C4  0E00               	movlw	0
 36778  00A9C6  201D               	addwfc	(flash_writeBytes@flash_addr+2)^0,w,c
 36779  00A9C8  6E1D               	movwf	(flash_writeBytes@flash_addr+2)^0,c
 36780  00A9CA  0E00               	movlw	0
 36781  00A9CC  201E               	addwfc	(flash_writeBytes@flash_addr+3)^0,w,c
 36782  00A9CE  6E1E               	movwf	(flash_writeBytes@flash_addr+3)^0,c
 36783                           
 36784                           ;flash.c: 85: if (EECON1bits.WRERR == 1)
 36785  00A9D0  A6A6               	btfss	166,3,c	;volsfr
 36786  00A9D2  D002               	goto	l18707
 36787                           
 36788                           ;flash.c: 86: retval = 0;
 36789  00A9D4  0E00               	movlw	0
 36790  00A9D6  6E18               	movwf	flash_writeBytes@retval^0,c
 36791  00A9D8                     l18707:
 36792  00A9D8  5015               	movf	flash_writeBytes@num_bytes^0,w,c
 36793  00A9DA  1016               	iorwf	(flash_writeBytes@num_bytes+1)^0,w,c
 36794  00A9DC  A4D8               	btfss	status,2,c
 36795  00A9DE  D7B7               	goto	l75
 36796                           
 36797                           ;flash.c: 87: };flash.c: 88: return retval;
 36798  00A9E0  5018               	movf	flash_writeBytes@retval^0,w,c
 36799  00A9E2  0012               	return		;funcret
 36800  00A9E4                     __end_of_flash_writeBytes:
 36801                           	callstack 0
 36802                           
 36803 ;; *************** function _flash_clear *****************
 36804 ;; Defined at:
 36805 ;;		line 91 in file "bsp/flash.c"
 36806 ;; Parameters:    Size  Location     Type
 36807 ;;  startaddr       4   14[COMRAM] unsigned long 
 36808 ;;  endaddr         4   18[COMRAM] unsigned long 
 36809 ;; Auto vars:     Size  Location     Type
 36810 ;;  flash_addr      4   23[COMRAM] struct .
 36811 ;;  flag            1   22[COMRAM] unsigned char 
 36812 ;; Return value:  Size  Location     Type
 36813 ;;                  1    wreg      void 
 36814 ;; Registers used:
 36815 ;;		wreg, status,2, status,0
 36816 ;; Tracked objects:
 36817 ;;		On entry : 3F/0
 36818 ;;		On exit  : 3F/0
 36819 ;;		Unchanged: 3F/0
 36820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36821 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36822 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36824 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36825 ;;Total ram usage:       13 bytes
 36826 ;; Hardware stack levels used: 1
 36827 ;; Hardware stack levels required when called: 4
 36828 ;; This function calls:
 36829 ;;		Nothing
 36830 ;; This function is called by:
 36831 ;;		_nvm_write_flash_all
 36832 ;; This function uses a non-reentrant model
 36833 ;;
 36834                           
 36835                           	psect	text179
 36836  00C778                     __ptext179:
 36837                           	callstack 0
 36838  00C778                     _flash_clear:
 36839                           	callstack 23
 36840                           
 36841                           ; BSR set to: 0
 36842                           ;flash.c: 93: unsigned char flag=0;
 36843                           
 36844                           ;incstack = 0
 36845  00C778  0E00               	movlw	0
 36846  00C77A  6E17               	movwf	flash_clear@flag^0,c
 36847                           
 36848                           ; BSR set to: 0
 36849                           ;flash.c: 94: DWORD_VAL flash_addr;;flash.c: 96: flash_addr.Val = startaddr;
 36850  00C77C  C00F  F018         	movff	flash_clear@startaddr,flash_clear@flash_addr
 36851  00C780  C010  F019         	movff	flash_clear@startaddr+1,flash_clear@flash_addr+1
 36852  00C784  C011  F01A         	movff	flash_clear@startaddr+2,flash_clear@flash_addr+2
 36853  00C788  C012  F01B         	movff	flash_clear@startaddr+3,flash_clear@flash_addr+3
 36854                           
 36855                           ;flash.c: 98: while(flash_addr.Val<endaddr)
 36856  00C78C  D021               	goto	l87
 36857  00C78E                     l88:
 36858                           
 36859                           ; BSR set to: 0
 36860                           ;flash.c: 99: {;flash.c: 100: TBLPTRU = flash_addr.byte.UB;
 36861  00C78E  C01A  FFF8         	movff	flash_clear@flash_addr+2,tblptru	;volatile
 36862                           
 36863                           ;flash.c: 101: TBLPTRH = flash_addr.byte.HB;
 36864  00C792  C019  FFF7         	movff	flash_clear@flash_addr+1,tblptrh	;volatile
 36865                           
 36866                           ;flash.c: 102: TBLPTRL = flash_addr.byte.LB;
 36867  00C796  C018  FFF6         	movff	flash_clear@flash_addr,tblptrl	;volatile
 36868                           
 36869                           ;flash.c: 104: EECON1bits.WREN = 1;
 36870  00C79A  84A6               	bsf	166,2,c	;volsfr
 36871                           
 36872                           ;flash.c: 105: EECON1bits.FREE = 1;
 36873  00C79C  88A6               	bsf	166,4,c	;volsfr
 36874                           
 36875                           ;flash.c: 106: if(INTCONbits.GIE)
 36876  00C79E  AEF2               	btfss	242,7,c	;volatile
 36877  00C7A0  D003               	goto	l89
 36878                           
 36879                           ; BSR set to: 0
 36880                           ;flash.c: 107: {;flash.c: 108: INTCONbits.GIE = 0;
 36881  00C7A2  9EF2               	bcf	242,7,c	;volatile
 36882                           
 36883                           ; BSR set to: 0
 36884                           ;flash.c: 109: flag=1;
 36885  00C7A4  0E01               	movlw	1
 36886  00C7A6  6E17               	movwf	flash_clear@flag^0,c
 36887  00C7A8                     l89:
 36888                           
 36889                           ; BSR set to: 0
 36890                           ;flash.c: 110: };flash.c: 111: EECON2 = 0x55;
 36891  00C7A8  0E55               	movlw	85
 36892  00C7AA  6EA7               	movwf	167,c	;volsfr
 36893                           
 36894                           ;flash.c: 112: EECON2 = 0xAA;
 36895  00C7AC  0EAA               	movlw	170
 36896  00C7AE  6EA7               	movwf	167,c	;volsfr
 36897                           
 36898                           ; BSR set to: 0
 36899                           ;flash.c: 113: EECON1bits.WR = 1;
 36900  00C7B0  82A6               	bsf	166,1,c	;volsfr
 36901                           
 36902                           ;flash.c: 114: if(flag)
 36903  00C7B2  5017               	movf	flash_clear@flag^0,w,c
 36904  00C7B4  A4D8               	btfss	status,2,c
 36905                           
 36906                           ; BSR set to: 0
 36907                           ;flash.c: 115: INTCONbits.GIE = 1;
 36908  00C7B6  8EF2               	bsf	242,7,c	;volatile
 36909                           
 36910                           ; BSR set to: 0
 36911                           ;flash.c: 117: flash_addr.Val = flash_addr.Val + 1024;
 36912  00C7B8  0E00               	movlw	0
 36913  00C7BA  2418               	addwf	flash_clear@flash_addr^0,w,c
 36914  00C7BC  6E18               	movwf	flash_clear@flash_addr^0,c
 36915  00C7BE  0E04               	movlw	4
 36916  00C7C0  2019               	addwfc	(flash_clear@flash_addr+1)^0,w,c
 36917  00C7C2  6E19               	movwf	(flash_clear@flash_addr+1)^0,c
 36918  00C7C4  0E00               	movlw	0
 36919  00C7C6  201A               	addwfc	(flash_clear@flash_addr+2)^0,w,c
 36920  00C7C8  6E1A               	movwf	(flash_clear@flash_addr+2)^0,c
 36921  00C7CA  0E00               	movlw	0
 36922  00C7CC  201B               	addwfc	(flash_clear@flash_addr+3)^0,w,c
 36923  00C7CE  6E1B               	movwf	(flash_clear@flash_addr+3)^0,c
 36924  00C7D0                     l87:
 36925                           
 36926                           ; BSR set to: 0
 36927  00C7D0  5013               	movf	flash_clear@endaddr^0,w,c
 36928  00C7D2  5C18               	subwf	flash_clear@flash_addr^0,w,c
 36929  00C7D4  5014               	movf	(flash_clear@endaddr+1)^0,w,c
 36930  00C7D6  5819               	subwfb	(flash_clear@flash_addr+1)^0,w,c
 36931  00C7D8  5015               	movf	(flash_clear@endaddr+2)^0,w,c
 36932  00C7DA  581A               	subwfb	(flash_clear@flash_addr+2)^0,w,c
 36933  00C7DC  5016               	movf	(flash_clear@endaddr+3)^0,w,c
 36934  00C7DE  581B               	subwfb	(flash_clear@flash_addr+3)^0,w,c
 36935  00C7E0  B0D8               	btfsc	status,0,c
 36936  00C7E2  0012               	return	
 36937  00C7E4  D7D4               	goto	l88
 36938  00C7E6                     __end_of_flash_clear:
 36939                           	callstack 0
 36940                           
 36941 ;; *************** function _nvm_read_flash_all *****************
 36942 ;; Defined at:
 36943 ;;		line 276 in file "nvm.c"
 36944 ;; Parameters:    Size  Location     Type
 36945 ;;  flash           2   30[COMRAM] PTR struct .
 36946 ;;		 -> g_nvm(154), 
 36947 ;; Auto vars:     Size  Location     Type
 36948 ;;		None
 36949 ;; Return value:  Size  Location     Type
 36950 ;;                  1    wreg      void 
 36951 ;; Registers used:
 36952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36953 ;; Tracked objects:
 36954 ;;		On entry : 0/0
 36955 ;;		On exit  : 0/0
 36956 ;;		Unchanged: 0/0
 36957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36962 ;;Total ram usage:        2 bytes
 36963 ;; Hardware stack levels used: 1
 36964 ;; Hardware stack levels required when called: 5
 36965 ;; This function calls:
 36966 ;;		_flash_readBytes
 36967 ;; This function is called by:
 36968 ;;		_build_response
 36969 ;;		_nvm_init
 36970 ;; This function uses a non-reentrant model
 36971 ;;
 36972                           
 36973                           	psect	text180
 36974  00DB72                     __ptext180:
 36975                           	callstack 0
 36976  00DB72                     _nvm_read_flash_all:
 36977                           	callstack 23
 36978                           
 36979                           ;nvm.c: 278: flash_readBytes(0xf400, flash->byte, 30);
 36980                           
 36981                           ; BSR set to: 0
 36982                           ;incstack = 0
 36983  00DB72  0E00               	movlw	0
 36984  00DB74  6E0F               	movwf	flash_readBytes@startaddr^0,c
 36985  00DB76  0EF4               	movlw	244
 36986  00DB78  6E10               	movwf	(flash_readBytes@startaddr+1)^0,c
 36987  00DB7A  0E00               	movlw	0
 36988  00DB7C  6E11               	movwf	(flash_readBytes@startaddr+2)^0,c
 36989  00DB7E  0E00               	movlw	0
 36990  00DB80  6E12               	movwf	(flash_readBytes@startaddr+3)^0,c
 36991  00DB82  C01F  F013         	movff	nvm_read_flash_all@flash,flash_readBytes@flash_array
 36992  00DB86  C020  F014         	movff	nvm_read_flash_all@flash+1,flash_readBytes@flash_array+1
 36993  00DB8A  0E00               	movlw	0
 36994  00DB8C  6E16               	movwf	(flash_readBytes@num_bytes+1)^0,c
 36995  00DB8E  0E1E               	movlw	30
 36996  00DB90  6E15               	movwf	flash_readBytes@num_bytes^0,c
 36997  00DB92  ECE5  F065         	call	_flash_readBytes	;wreg free
 36998  00DB96  0012               	return		;funcret
 36999  00DB98                     __end_of_nvm_read_flash_all:
 37000                           	callstack 0
 37001                           
 37002 ;; *************** function _flash_readBytes *****************
 37003 ;; Defined at:
 37004 ;;		line 9 in file "bsp/flash.c"
 37005 ;; Parameters:    Size  Location     Type
 37006 ;;  startaddr       4   14[COMRAM] unsigned long 
 37007 ;;  flash_array     2   18[COMRAM] PTR unsigned char 
 37008 ;;		 -> nvm_read_flash_all@flash(2), g_nvm(154), 
 37009 ;;  num_bytes       2   20[COMRAM] unsigned int 
 37010 ;; Auto vars:     Size  Location     Type
 37011 ;;  tblptr_save     4   26[COMRAM] struct .
 37012 ;;  flash_addr      4   22[COMRAM] struct .
 37013 ;; Return value:  Size  Location     Type
 37014 ;;                  1    wreg      void 
 37015 ;; Registers used:
 37016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37017 ;; Tracked objects:
 37018 ;;		On entry : 0/0
 37019 ;;		On exit  : 0/0
 37020 ;;		Unchanged: 0/0
 37021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37022 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37023 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37025 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37026 ;;Total ram usage:       16 bytes
 37027 ;; Hardware stack levels used: 1
 37028 ;; Hardware stack levels required when called: 4
 37029 ;; This function calls:
 37030 ;;		Nothing
 37031 ;; This function is called by:
 37032 ;;		_nvm_read_flash_all
 37033 ;; This function uses a non-reentrant model
 37034 ;;
 37035                           
 37036                           	psect	text181
 37037  00CBCA                     __ptext181:
 37038                           	callstack 0
 37039  00CBCA                     _flash_readBytes:
 37040                           	callstack 23
 37041                           
 37042                           ;flash.c: 11: DWORD_VAL flash_addr;;flash.c: 12: DWORD_VAL tblptr_save;;flash.c: 14: fla
      +                          sh_addr.Val = startaddr;
 37043                           
 37044                           ;incstack = 0
 37045  00CBCA  C00F  F017         	movff	flash_readBytes@startaddr,flash_readBytes@flash_addr
 37046  00CBCE  C010  F018         	movff	flash_readBytes@startaddr+1,flash_readBytes@flash_addr+1
 37047  00CBD2  C011  F019         	movff	flash_readBytes@startaddr+2,flash_readBytes@flash_addr+2
 37048  00CBD6  C012  F01A         	movff	flash_readBytes@startaddr+3,flash_readBytes@flash_addr+3
 37049                           
 37050                           ;flash.c: 16: tblptr_save.byte.UB = TBLPTRU;
 37051  00CBDA  CFF8 F01D          	movff	tblptru,flash_readBytes@tblptr_save+2	;volatile
 37052                           
 37053                           ;flash.c: 17: tblptr_save.byte.HB = TBLPTRH;
 37054  00CBDE  CFF7 F01C          	movff	tblptrh,flash_readBytes@tblptr_save+1	;volatile
 37055                           
 37056                           ;flash.c: 18: tblptr_save.byte.LB = TBLPTRL;
 37057  00CBE2  CFF6 F01B          	movff	tblptrl,flash_readBytes@tblptr_save	;volatile
 37058                           
 37059                           ;flash.c: 20: TBLPTRU = flash_addr.byte.UB;
 37060  00CBE6  C019  FFF8         	movff	flash_readBytes@flash_addr+2,tblptru	;volatile
 37061                           
 37062                           ;flash.c: 21: TBLPTRH = flash_addr.byte.HB;
 37063  00CBEA  C018  FFF7         	movff	flash_readBytes@flash_addr+1,tblptrh	;volatile
 37064                           
 37065                           ;flash.c: 22: TBLPTRL = flash_addr.byte.LB;
 37066  00CBEE  C017  FFF6         	movff	flash_readBytes@flash_addr,tblptrl	;volatile
 37067                           
 37068                           ;flash.c: 24: while(num_bytes--)
 37069  00CBF2  D009               	goto	l18665
 37070  00CBF4                     l69:
 37071  00CBF4  0009               	tblrd		*+	;# 
 37072                           
 37073                           ;flash.c: 28: *flash_array++ = TABLAT;
 37074  00CBF6  C013  FFD9         	movff	flash_readBytes@flash_array,fsr2l
 37075  00CBFA  C014  FFDA         	movff	flash_readBytes@flash_array+1,fsr2h
 37076  00CBFE  CFF5 FFDF          	movff	tablat,indf2	;volatile
 37077  00CC02  4A13               	infsnz	flash_readBytes@flash_array^0,f,c
 37078  00CC04  2A14               	incf	(flash_readBytes@flash_array+1)^0,f,c
 37079  00CC06                     l18665:
 37080  00CC06  0615               	decf	flash_readBytes@num_bytes^0,f,c
 37081  00CC08  A0D8               	btfss	status,0,c
 37082  00CC0A  0616               	decf	(flash_readBytes@num_bytes+1)^0,f,c
 37083  00CC0C  2815               	incf	flash_readBytes@num_bytes^0,w,c
 37084  00CC0E  E1F2               	bnz	l69
 37085  00CC10  2816               	incf	(flash_readBytes@num_bytes+1)^0,w,c
 37086  00CC12  A4D8               	btfss	status,2,c
 37087  00CC14  D7EF               	goto	l69
 37088                           
 37089                           ;flash.c: 29: };flash.c: 31: TBLPTRU = tblptr_save.byte.UB;
 37090  00CC16  C01D  FFF8         	movff	flash_readBytes@tblptr_save+2,tblptru	;volatile
 37091                           
 37092                           ;flash.c: 32: TBLPTRH = tblptr_save.byte.HB;
 37093  00CC1A  C01C  FFF7         	movff	flash_readBytes@tblptr_save+1,tblptrh	;volatile
 37094                           
 37095                           ;flash.c: 33: TBLPTRL = tblptr_save.byte.LB;
 37096  00CC1E  C01B  FFF6         	movff	flash_readBytes@tblptr_save,tblptrl	;volatile
 37097  00CC22  0012               	return		;funcret
 37098  00CC24                     __end_of_flash_readBytes:
 37099                           	callstack 0
 37100                           
 37101 ;; *************** function _nvm_flash_check *****************
 37102 ;; Defined at:
 37103 ;;		line 175 in file "nvm.c"
 37104 ;; Parameters:    Size  Location     Type
 37105 ;;		None
 37106 ;; Auto vars:     Size  Location     Type
 37107 ;;		None
 37108 ;; Return value:  Size  Location     Type
 37109 ;;                  1    wreg      unsigned char 
 37110 ;; Registers used:
 37111 ;;		wreg, status,2, status,0
 37112 ;; Tracked objects:
 37113 ;;		On entry : 3F/0
 37114 ;;		On exit  : 3F/1
 37115 ;;		Unchanged: 0/0
 37116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37121 ;;Total ram usage:        0 bytes
 37122 ;; Hardware stack levels used: 1
 37123 ;; Hardware stack levels required when called: 4
 37124 ;; This function calls:
 37125 ;;		Nothing
 37126 ;; This function is called by:
 37127 ;;		_nvm_init
 37128 ;; This function uses a non-reentrant model
 37129 ;;
 37130                           
 37131                           	psect	text182
 37132  00CC24                     __ptext182:
 37133                           	callstack 0
 37134  00CC24                     _nvm_flash_check:
 37135                           	callstack 24
 37136                           
 37137                           ; BSR set to: 0
 37138                           ;nvm.c: 177: if (!(g_nvm.flash.baudrate >= BAUD_4800 && g_nvm.flash.baudrate <= BAUD_576
      +                          00)) return 0;
 37139                           
 37140                           ;incstack = 0
 37141  00CC24  0E05               	movlw	5
 37142  00CC26  0101               	movlb	1	; () banked
 37143  00CC28  6562               	cpfsgt	(_g_nvm+16)& (0+255),b
 37144  00CC2A  D002               	goto	l20507
 37145  00CC2C                     u23680:
 37146                           
 37147                           ; BSR set to: 1
 37148  00CC2C  0E00               	movlw	0
 37149  00CC2E  0012               	return	
 37150  00CC30                     l20507:
 37151                           
 37152                           ; BSR set to: 1
 37153                           ;nvm.c: 178: else if (!(g_nvm.flash.ctrl_master_mode >= MODBUS_SLAVE_MODE && g_nvm.flash
      +                          .ctrl_master_mode <= MODBUS_MASTER_MODE)) return 0;
 37154  00CC30  0E01               	movlw	1
 37155  00CC32  6554               	cpfsgt	(_g_nvm+2)& (0+255),b
 37156  00CC34  D001               	goto	l20515
 37157  00CC36  D7FA               	goto	u23680
 37158  00CC38                     l20515:
 37159                           
 37160                           ; BSR set to: 1
 37161                           ;nvm.c: 179: else if (!(g_nvm.flash.ctrl_channel >= 0 && g_nvm.flash.ctrl_channel <= (2-
      +                          1))) return 0;
 37162  00CC38  0E01               	movlw	1
 37163  00CC3A  6555               	cpfsgt	(_g_nvm+3)& (0+255),b
 37164  00CC3C  D001               	goto	l20523
 37165  00CC3E  D7F6               	goto	u23680
 37166  00CC40                     l20523:
 37167                           
 37168                           ; BSR set to: 1
 37169                           ;nvm.c: 180: else if (!(g_nvm.flash.ctrl_slave_id >= 0x01 && g_nvm.flash.ctrl_slave_id <
      +                          = 0x0f)) return 0;
 37170  00CC40  5156               	movf	(_g_nvm+4)& (0+255),w,b
 37171  00CC42  B4D8               	btfsc	status,2,c
 37172  00CC44  D7F3               	goto	u23680
 37173                           
 37174                           ; BSR set to: 1
 37175  00CC46  0E0F               	movlw	15
 37176  00CC48  6556               	cpfsgt	(_g_nvm+4)& (0+255),b
 37177  00CC4A  D001               	goto	l20533
 37178  00CC4C  D7EF               	goto	u23680
 37179  00CC4E                     l20533:
 37180                           
 37181                           ; BSR set to: 1
 37182                           ;nvm.c: 181: else if (!(g_nvm.flash.ctrl_relay_no >= 1 && g_nvm.flash.ctrl_relay_no <= 8
      +                          )) return 0;
 37183  00CC4E  5157               	movf	(_g_nvm+5)& (0+255),w,b
 37184  00CC50  B4D8               	btfsc	status,2,c
 37185  00CC52  D7EC               	goto	u23680
 37186                           
 37187                           ; BSR set to: 1
 37188  00CC54  0E08               	movlw	8
 37189  00CC56  6557               	cpfsgt	(_g_nvm+5)& (0+255),b
 37190  00CC58  D001               	goto	l20543
 37191  00CC5A  D7E8               	goto	u23680
 37192  00CC5C                     l20543:
 37193                           
 37194                           ; BSR set to: 1
 37195                           ;nvm.c: 182: else if (!(g_nvm.flash.timeout >= TO_ONE_SEC && g_nvm.flash.timeout <= TO_T
      +                          WO_SEC)) return 0;
 37196  00CC5C  0E04               	movlw	4
 37197  00CC5E  6563               	cpfsgt	(_g_nvm+17)& (0+255),b
 37198  00CC60  D001               	goto	l20551
 37199  00CC62  D7E4               	goto	u23680
 37200  00CC64                     l20551:
 37201                           
 37202                           ; BSR set to: 1
 37203                           ;nvm.c: 183: else if (!(g_nvm.flash.byte_swap >= 0 && g_nvm.flash.byte_swap <= 1)) retur
      +                          n 0;
 37204  00CC64  0E01               	movlw	1
 37205  00CC66  6560               	cpfsgt	(_g_nvm+14)& (0+255),b
 37206  00CC68  D001               	goto	l20559
 37207  00CC6A  D7E0               	goto	u23680
 37208  00CC6C                     l20559:
 37209                           
 37210                           ; BSR set to: 1
 37211                           ;nvm.c: 184: else if (g_nvm.flash.buildtime == 0) return 0;
 37212  00CC6C  5164               	movf	(_g_nvm+18)& (0+255),w,b
 37213  00CC6E  1165               	iorwf	(_g_nvm+19)& (0+255),w,b
 37214  00CC70  1166               	iorwf	(_g_nvm+20)& (0+255),w,b
 37215  00CC72  1167               	iorwf	(_g_nvm+21)& (0+255),w,b
 37216  00CC74  B4D8               	btfsc	status,2,c
 37217  00CC76  D7DA               	goto	u23680
 37218                           
 37219                           ; BSR set to: 1
 37220                           ;nvm.c: 185: return 1;
 37221                           
 37222                           ; BSR set to: 1
 37223  00CC78  0E01               	movlw	1
 37224                           
 37225                           ; BSR set to: 1
 37226  00CC7A  0012               	return		;funcret
 37227  00CC7C                     __end_of_nvm_flash_check:
 37228                           	callstack 0
 37229                           
 37230 ;; *************** function _nvm_clear_flash *****************
 37231 ;; Defined at:
 37232 ;;		line 96 in file "nvm.c"
 37233 ;; Parameters:    Size  Location     Type
 37234 ;;		None
 37235 ;; Auto vars:     Size  Location     Type
 37236 ;;		None
 37237 ;; Return value:  Size  Location     Type
 37238 ;;                  1    wreg      void 
 37239 ;; Registers used:
 37240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37241 ;; Tracked objects:
 37242 ;;		On entry : 3E/0
 37243 ;;		On exit  : 3F/0
 37244 ;;		Unchanged: 0/0
 37245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37250 ;;Total ram usage:        0 bytes
 37251 ;; Hardware stack levels used: 1
 37252 ;; Hardware stack levels required when called: 9
 37253 ;; This function calls:
 37254 ;;		_build_time
 37255 ;; This function is called by:
 37256 ;;		_nvm_clear
 37257 ;;		_nvm_init
 37258 ;; This function uses a non-reentrant model
 37259 ;;
 37260                           
 37261                           	psect	text183
 37262  00CB6E                     __ptext183:
 37263                           	callstack 0
 37264  00CB6E                     _nvm_clear_flash:
 37265                           	callstack 18
 37266                           
 37267                           ;nvm.c: 98: g_nvm.flash.sensing_on = SENSING_OFF;
 37268                           
 37269                           ; BSR set to: 1
 37270                           ;incstack = 0
 37271  00CB6E  0E00               	movlw	0
 37272  00CB70  0101               	movlb	1	; () banked
 37273  00CB72  6F53               	movwf	(_g_nvm+1)& (0+255),b
 37274                           
 37275                           ;nvm.c: 100: g_nvm.flash.ctrl_master_mode = MODBUS_SLAVE_MODE;
 37276  00CB74  0E00               	movlw	0
 37277  00CB76  6F54               	movwf	(_g_nvm+2)& (0+255),b
 37278                           
 37279                           ;nvm.c: 101: g_nvm.flash.ctrl_channel = 0;
 37280  00CB78  0E00               	movlw	0
 37281  00CB7A  6F55               	movwf	(_g_nvm+3)& (0+255),b
 37282                           
 37283                           ;nvm.c: 102: g_nvm.flash.ctrl_slave_id = 0x01;
 37284  00CB7C  0E01               	movlw	1
 37285  00CB7E  6F56               	movwf	(_g_nvm+4)& (0+255),b
 37286                           
 37287                           ;nvm.c: 103: g_nvm.flash.ctrl_relay_no = 1;
 37288  00CB80  0E01               	movlw	1
 37289  00CB82  6F57               	movwf	(_g_nvm+5)& (0+255),b
 37290                           
 37291                           ;nvm.c: 104: g_nvm.flash.ctrl_ppm_max = 15.0f;
 37292  00CB84  0E00               	movlw	0
 37293  00CB86  6F58               	movwf	(_g_nvm+6)& (0+255),b
 37294  00CB88  0E00               	movlw	0
 37295  00CB8A  6F59               	movwf	(_g_nvm+7)& (0+255),b
 37296  00CB8C  0E70               	movlw	112
 37297  00CB8E  6F5A               	movwf	(_g_nvm+8)& (0+255),b
 37298  00CB90  0E41               	movlw	65
 37299  00CB92  6F5B               	movwf	(_g_nvm+9)& (0+255),b
 37300                           
 37301                           ;nvm.c: 105: g_nvm.flash.ctrl_holding_min = 1;
 37302  00CB94  0E01               	movlw	1
 37303  00CB96  6F5C               	movwf	(_g_nvm+10)& (0+255),b
 37304  00CB98  0E00               	movlw	0
 37305  00CB9A  6F5D               	movwf	(_g_nvm+11)& (0+255),b
 37306  00CB9C  0E00               	movlw	0
 37307  00CB9E  6F5E               	movwf	(_g_nvm+12)& (0+255),b
 37308  00CBA0  0E00               	movlw	0
 37309  00CBA2  6F5F               	movwf	(_g_nvm+13)& (0+255),b
 37310                           
 37311                           ;nvm.c: 107: g_nvm.flash.byte_swap = 0;
 37312  00CBA4  0E00               	movlw	0
 37313  00CBA6  6F60               	movwf	(_g_nvm+14)& (0+255),b
 37314                           
 37315                           ;nvm.c: 108: g_nvm.flash.slave_id = 54;
 37316  00CBA8  0E36               	movlw	54
 37317  00CBAA  6F61               	movwf	(_g_nvm+15)& (0+255),b
 37318                           
 37319                           ;nvm.c: 109: g_nvm.flash.baudrate = 5;
 37320  00CBAC  0E05               	movlw	5
 37321  00CBAE  6F62               	movwf	(_g_nvm+16)& (0+255),b
 37322                           
 37323                           ;nvm.c: 110: g_nvm.flash.timeout = 0;
 37324  00CBB0  0E00               	movlw	0
 37325  00CBB2  6F63               	movwf	(_g_nvm+17)& (0+255),b
 37326                           
 37327                           ; BSR set to: 1
 37328                           ;nvm.c: 111: g_nvm.flash.buildtime = (uint32_t)build_time();
 37329  00CBB4  EC06  F026         	call	_build_time	;wreg free
 37330  00CBB8  C064  F164         	movff	?_build_time,_g_nvm+18
 37331  00CBBC  C065  F165         	movff	?_build_time+1,_g_nvm+19
 37332  00CBC0  C066  F166         	movff	?_build_time+2,_g_nvm+20
 37333  00CBC4  C067  F167         	movff	?_build_time+3,_g_nvm+21
 37334                           
 37335                           ; BSR set to: 0
 37336  00CBC8  0012               	return		;funcret
 37337  00CBCA                     __end_of_nvm_clear_flash:
 37338                           	callstack 0
 37339                           
 37340 ;; *************** function _build_time *****************
 37341 ;; Defined at:
 37342 ;;		line 4 in file "util/build_time.c"
 37343 ;; Parameters:    Size  Location     Type
 37344 ;;		None
 37345 ;; Auto vars:     Size  Location     Type
 37346 ;;  tm             18   50[BANK0 ] struct tm
 37347 ;;  timestamp       4    8[BANK0 ] long 
 37348 ;; Return value:  Size  Location     Type
 37349 ;;                  4    4[BANK0 ] long 
 37350 ;; Registers used:
 37351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37352 ;; Tracked objects:
 37353 ;;		On entry : 3F/1
 37354 ;;		On exit  : 3F/0
 37355 ;;		Unchanged: 0/0
 37356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37358 ;;      Locals:         0      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37360 ;;      Totals:         2      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37361 ;;Total ram usage:       66 bytes
 37362 ;; Hardware stack levels used: 1
 37363 ;; Hardware stack levels required when called: 8
 37364 ;; This function calls:
 37365 ;;		___wmul
 37366 ;;		_mktime
 37367 ;; This function is called by:
 37368 ;;		_nvm_clear_flash
 37369 ;; This function uses a non-reentrant model
 37370 ;;
 37371                           
 37372                           	psect	text184
 37373  004C0C                     __ptext184:
 37374                           	callstack 0
 37375  004C0C                     _build_time:
 37376                           	callstack 18
 37377                           
 37378                           ; BSR set to: 1
 37379                           ;build_time.c: 6: struct tm tm = { 0 };
 37380                           
 37381                           ; BSR set to: 0
 37382                           ;incstack = 0
 37383  004C0C  EE23  F000         	lfsr	2,build_time@F37
 37384  004C10  EE10  F092         	lfsr	1,build_time@tm
 37385  004C14  0E11               	movlw	17
 37386  004C16                     u39841:
 37387  004C16  CFDB FFE3          	movff	plusw2,plusw1
 37388  004C1A  06E8               	decf	wreg,f,c
 37389  004C1C  E2FC               	bc	u39841
 37390                           
 37391                           ; BSR set to: 1
 37392                           ;build_time.c: 7: time_t timestamp;;build_time.c: 9: tm.tm_year = ((("Jan 20 2022"[0] ==
      +                           '?')) ? 99 : ( ("Jan 20 2022"[ 7] - '0') * 1000 + ("Jan 20 2022"[ 8] - '0') * 100 + ("J
      +                          an 20 2022"[ 9] - '0') * 10 + ("Jan 20 2022"[10] - '0') )) - 1900;
 37393  004C1E  0E69               	movlw	low STR_18
 37394  004C20  6EF6               	movwf	tblptrl,c
 37395  004C22                     	if	1	;There is more than 1 active tblptr byte
 37396  004C22  0E23               	movlw	high STR_18
 37397  004C24  6EF7               	movwf	tblptrh,c
 37398  004C26                     	endif
 37399  004C26                     	if	0	;There are less than 3 active tblptr bytes
 37400  004C26                     	endif
 37401  004C26  0008               	tblrd		*
 37402  004C28  50F5               	movf	tablat,w,c
 37403  004C2A  0A3F               	xorlw	63
 37404  004C2C  B4D8               	btfsc	status,2,c
 37405  004C2E  D039               	goto	l31751
 37406                           
 37407                           ; BSR set to: 1
 37408  004C30  0E70               	movlw	low (STR_18+7)
 37409  004C32  6EF6               	movwf	tblptrl,c
 37410  004C34  0E23               	movlw	high (STR_18+7)
 37411  004C36  6EF7               	movwf	tblptrh,c
 37412  004C38                     	if	0	;tblptru may be non-zero
 37413  004C38                     	endif
 37414  004C38                     	if	0	;tblptru may be non-zero
 37415  004C38                     	endif
 37416  004C38  0008               	tblrd		*
 37417  004C3A  50F5               	movf	tablat,w,c
 37418  004C3C  6E0F               	movwf	___wmul@multiplier^0,c
 37419  004C3E  6A10               	clrf	(___wmul@multiplier+1)^0,c
 37420  004C40  0E03               	movlw	3
 37421  004C42  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 37422  004C44  0EE8               	movlw	232
 37423  004C46  6E11               	movwf	___wmul@multiplicand^0,c
 37424  004C48  ECCC  F06D         	call	___wmul	;wreg free
 37425  004C4C  0E71               	movlw	low (STR_18+8)
 37426  004C4E  6EF6               	movwf	tblptrl,c
 37427  004C50  0E23               	movlw	high (STR_18+8)
 37428  004C52  6EF7               	movwf	tblptrh,c
 37429  004C54                     	if	0	;tblptru may be non-zero
 37430  004C54                     	endif
 37431  004C54                     	if	0	;tblptru may be non-zero
 37432  004C54                     	endif
 37433  004C54  0008               	tblrd		*
 37434  004C56  50F5               	movf	tablat,w,c
 37435  004C58  0D64               	mullw	100
 37436  004C5A  CFF3 F040          	movff	prodl,??_build_time
 37437  004C5E  CFF4 F041          	movff	prodh,??_build_time+1
 37438  004C62  0E72               	movlw	low (STR_18+9)
 37439  004C64  6EF6               	movwf	tblptrl,c
 37440  004C66  0E23               	movlw	high (STR_18+9)
 37441  004C68  6EF7               	movwf	tblptrh,c
 37442  004C6A                     	if	0	;tblptru may be non-zero
 37443  004C6A                     	endif
 37444  004C6A                     	if	0	;tblptru may be non-zero
 37445  004C6A                     	endif
 37446  004C6A  0008               	tblrd		*
 37447  004C6C  50F5               	movf	tablat,w,c
 37448  004C6E  0D0A               	mullw	10
 37449  004C70  50F3               	movf	243,w,c
 37450  004C72  2640               	addwf	??_build_time^0,f,c
 37451  004C74  50F4               	movf	244,w,c
 37452  004C76  2241               	addwfc	(??_build_time+1)^0,f,c
 37453  004C78  500F               	movf	?___wmul^0,w,c
 37454  004C7A  2640               	addwf	??_build_time^0,f,c
 37455  004C7C  5010               	movf	(?___wmul+1)^0,w,c
 37456  004C7E  2241               	addwfc	(??_build_time+1)^0,f,c
 37457  004C80  0E73               	movlw	low (STR_18+10)
 37458  004C82  6EF6               	movwf	tblptrl,c
 37459  004C84  0E23               	movlw	high (STR_18+10)
 37460  004C86  6EF7               	movwf	tblptrh,c
 37461  004C88                     	if	0	;tblptru may be non-zero
 37462  004C88                     	endif
 37463  004C88                     	if	0	;tblptru may be non-zero
 37464  004C88                     	endif
 37465  004C88  0008               	tblrd		*
 37466  004C8A  50F5               	movf	tablat,w,c
 37467  004C8C  2640               	addwf	??_build_time^0,f,c
 37468  004C8E  0E00               	movlw	0
 37469  004C90  2241               	addwfc	(??_build_time+1)^0,f,c
 37470  004C92  0EB0               	movlw	176
 37471  004C94  2440               	addwf	??_build_time^0,w,c
 37472  004C96  0100               	movlb	0	; () banked
 37473  004C98  6F6C               	movwf	_build_time$8264& (0+255),b
 37474  004C9A  0E2F               	movlw	47
 37475  004C9C  2041               	addwfc	(??_build_time+1)^0,w,c
 37476  004C9E  6F6D               	movwf	(_build_time$8264+1)& (0+255),b
 37477  004CA0  D005               	goto	l31753
 37478  004CA2                     l31751:
 37479                           
 37480                           ; BSR set to: 1
 37481  004CA2  0E00               	movlw	0
 37482  004CA4  0100               	movlb	0	; () banked
 37483  004CA6  6F6D               	movwf	(_build_time$8264+1)& (0+255),b
 37484  004CA8  0E63               	movlw	99
 37485  004CAA  6F6C               	movwf	_build_time$8264& (0+255),b
 37486  004CAC                     l31753:
 37487                           
 37488                           ; BSR set to: 0
 37489  004CAC  0E94               	movlw	148
 37490  004CAE  256C               	addwf	_build_time$8264& (0+255),w,b
 37491  004CB0  6F9C               	movwf	(build_time@tm+10)& (0+255),b
 37492  004CB2  0EF8               	movlw	248
 37493  004CB4  216D               	addwfc	(_build_time$8264+1)& (0+255),w,b
 37494  004CB6  6F9D               	movwf	(build_time@tm+11)& (0+255),b
 37495                           
 37496                           ; BSR set to: 0
 37497                           ;build_time.c: 10: tm.tm_mon = ((("Jan 20 2022"[0] == '?')) ? 99 : ( (("Jan 20 2022"[0] 
      +                          == 'J' && "Jan 20 2022"[1] == 'a' && "Jan 20 2022"[2] == 'n')) ? 1 : (("Jan 20 2022"[0] 
      +                          == 'F')) ? 2 : (("Jan 20 2022"[0] == 'M' && "Jan 20 2022"[1] == 'a' && "Jan 20 2022"[2] 
      +                          == 'r
 37498  004CB8  0E69               	movlw	low STR_18
 37499  004CBA  6EF6               	movwf	tblptrl,c
 37500  004CBC                     	if	1	;There is more than 1 active tblptr byte
 37501  004CBC  0E23               	movlw	high STR_18
 37502  004CBE  6EF7               	movwf	tblptrh,c
 37503  004CC0                     	endif
 37504  004CC0                     	if	0	;There are less than 3 active tblptr bytes
 37505  004CC0                     	endif
 37506  004CC0  0008               	tblrd		*
 37507  004CC2  50F5               	movf	tablat,w,c
 37508  004CC4  0A3F               	xorlw	63
 37509  004CC6  B4D8               	btfsc	status,2,c
 37510  004CC8  D148               	goto	l31855
 37511                           
 37512                           ; BSR set to: 0
 37513  004CCA  0E69               	movlw	low STR_18
 37514  004CCC  6EF6               	movwf	tblptrl,c
 37515  004CCE                     	if	1	;There is more than 1 active tblptr byte
 37516  004CCE  0E23               	movlw	high STR_18
 37517  004CD0  6EF7               	movwf	tblptrh,c
 37518  004CD2                     	endif
 37519  004CD2                     	if	0	;There are less than 3 active tblptr bytes
 37520  004CD2                     	endif
 37521  004CD2  0008               	tblrd		*
 37522  004CD4  50F5               	movf	tablat,w,c
 37523  004CD6  0A4A               	xorlw	74
 37524  004CD8  A4D8               	btfss	status,2,c
 37525  004CDA  D012               	goto	u39890
 37526                           
 37527                           ; BSR set to: 0
 37528  004CDC  0E6A               	movlw	low (STR_18+1)
 37529  004CDE  6EF6               	movwf	tblptrl,c
 37530  004CE0  0E23               	movlw	high (STR_18+1)
 37531  004CE2  6EF7               	movwf	tblptrh,c
 37532  004CE4                     	if	0	;tblptru may be non-zero
 37533  004CE4                     	endif
 37534  004CE4                     	if	0	;tblptru may be non-zero
 37535  004CE4                     	endif
 37536  004CE4  0008               	tblrd		*
 37537  004CE6  50F5               	movf	tablat,w,c
 37538  004CE8  0A61               	xorlw	97
 37539  004CEA  A4D8               	btfss	status,2,c
 37540  004CEC  D009               	goto	u39890
 37541                           
 37542                           ; BSR set to: 0
 37543  004CEE  0E6B               	movlw	low (STR_18+2)
 37544  004CF0  6EF6               	movwf	tblptrl,c
 37545  004CF2  0E23               	movlw	high (STR_18+2)
 37546  004CF4  6EF7               	movwf	tblptrh,c
 37547  004CF6                     	if	0	;tblptru may be non-zero
 37548  004CF6                     	endif
 37549  004CF6                     	if	0	;tblptru may be non-zero
 37550  004CF6                     	endif
 37551  004CF6  0008               	tblrd		*
 37552  004CF8  50F5               	movf	tablat,w,c
 37553  004CFA  0A6E               	xorlw	110
 37554  004CFC  B4D8               	btfsc	status,2,c
 37555  004CFE  D124               	goto	l31851
 37556  004D00                     u39890:
 37557                           
 37558                           ; BSR set to: 0
 37559  004D00  0E69               	movlw	low STR_18
 37560  004D02  6EF6               	movwf	tblptrl,c
 37561  004D04                     	if	1	;There is more than 1 active tblptr byte
 37562  004D04  0E23               	movlw	high STR_18
 37563  004D06  6EF7               	movwf	tblptrh,c
 37564  004D08                     	endif
 37565  004D08                     	if	0	;There are less than 3 active tblptr bytes
 37566  004D08                     	endif
 37567  004D08  0008               	tblrd		*
 37568  004D0A  50F5               	movf	tablat,w,c
 37569  004D0C  0A46               	xorlw	70
 37570  004D0E  B4D8               	btfsc	status,2,c
 37571  004D10  D112               	goto	l31847
 37572                           
 37573                           ; BSR set to: 0
 37574  004D12  0E69               	movlw	low STR_18
 37575  004D14  6EF6               	movwf	tblptrl,c
 37576  004D16                     	if	1	;There is more than 1 active tblptr byte
 37577  004D16  0E23               	movlw	high STR_18
 37578  004D18  6EF7               	movwf	tblptrh,c
 37579  004D1A                     	endif
 37580  004D1A                     	if	0	;There are less than 3 active tblptr bytes
 37581  004D1A                     	endif
 37582  004D1A  0008               	tblrd		*
 37583  004D1C  50F5               	movf	tablat,w,c
 37584  004D1E  0A4D               	xorlw	77
 37585  004D20  A4D8               	btfss	status,2,c
 37586  004D22  D012               	goto	u39930
 37587                           
 37588                           ; BSR set to: 0
 37589  004D24  0E6A               	movlw	low (STR_18+1)
 37590  004D26  6EF6               	movwf	tblptrl,c
 37591  004D28  0E23               	movlw	high (STR_18+1)
 37592  004D2A  6EF7               	movwf	tblptrh,c
 37593  004D2C                     	if	0	;tblptru may be non-zero
 37594  004D2C                     	endif
 37595  004D2C                     	if	0	;tblptru may be non-zero
 37596  004D2C                     	endif
 37597  004D2C  0008               	tblrd		*
 37598  004D2E  50F5               	movf	tablat,w,c
 37599  004D30  0A61               	xorlw	97
 37600  004D32  A4D8               	btfss	status,2,c
 37601  004D34  D009               	goto	u39930
 37602                           
 37603                           ; BSR set to: 0
 37604  004D36  0E6B               	movlw	low (STR_18+2)
 37605  004D38  6EF6               	movwf	tblptrl,c
 37606  004D3A  0E23               	movlw	high (STR_18+2)
 37607  004D3C  6EF7               	movwf	tblptrh,c
 37608  004D3E                     	if	0	;tblptru may be non-zero
 37609  004D3E                     	endif
 37610  004D3E                     	if	0	;tblptru may be non-zero
 37611  004D3E                     	endif
 37612  004D3E  0008               	tblrd		*
 37613  004D40  50F5               	movf	tablat,w,c
 37614  004D42  0A72               	xorlw	114
 37615  004D44  B4D8               	btfsc	status,2,c
 37616  004D46  D0EE               	goto	l31843
 37617  004D48                     u39930:
 37618                           
 37619                           ; BSR set to: 0
 37620  004D48  0E69               	movlw	low STR_18
 37621  004D4A  6EF6               	movwf	tblptrl,c
 37622  004D4C                     	if	1	;There is more than 1 active tblptr byte
 37623  004D4C  0E23               	movlw	high STR_18
 37624  004D4E  6EF7               	movwf	tblptrh,c
 37625  004D50                     	endif
 37626  004D50                     	if	0	;There are less than 3 active tblptr bytes
 37627  004D50                     	endif
 37628  004D50  0008               	tblrd		*
 37629  004D52  50F5               	movf	tablat,w,c
 37630  004D54  0A41               	xorlw	65
 37631  004D56  A4D8               	btfss	status,2,c
 37632  004D58  D009               	goto	u39950
 37633                           
 37634                           ; BSR set to: 0
 37635  004D5A  0E6A               	movlw	low (STR_18+1)
 37636  004D5C  6EF6               	movwf	tblptrl,c
 37637  004D5E  0E23               	movlw	high (STR_18+1)
 37638  004D60  6EF7               	movwf	tblptrh,c
 37639  004D62                     	if	0	;tblptru may be non-zero
 37640  004D62                     	endif
 37641  004D62                     	if	0	;tblptru may be non-zero
 37642  004D62                     	endif
 37643  004D62  0008               	tblrd		*
 37644  004D64  50F5               	movf	tablat,w,c
 37645  004D66  0A70               	xorlw	112
 37646  004D68  B4D8               	btfsc	status,2,c
 37647  004D6A  D0D3               	goto	l31839
 37648  004D6C                     u39950:
 37649                           
 37650                           ; BSR set to: 0
 37651  004D6C  0E69               	movlw	low STR_18
 37652  004D6E  6EF6               	movwf	tblptrl,c
 37653  004D70                     	if	1	;There is more than 1 active tblptr byte
 37654  004D70  0E23               	movlw	high STR_18
 37655  004D72  6EF7               	movwf	tblptrh,c
 37656  004D74                     	endif
 37657  004D74                     	if	0	;There are less than 3 active tblptr bytes
 37658  004D74                     	endif
 37659  004D74  0008               	tblrd		*
 37660  004D76  50F5               	movf	tablat,w,c
 37661  004D78  0A4D               	xorlw	77
 37662  004D7A  A4D8               	btfss	status,2,c
 37663  004D7C  D012               	goto	u39980
 37664                           
 37665                           ; BSR set to: 0
 37666  004D7E  0E6A               	movlw	low (STR_18+1)
 37667  004D80  6EF6               	movwf	tblptrl,c
 37668  004D82  0E23               	movlw	high (STR_18+1)
 37669  004D84  6EF7               	movwf	tblptrh,c
 37670  004D86                     	if	0	;tblptru may be non-zero
 37671  004D86                     	endif
 37672  004D86                     	if	0	;tblptru may be non-zero
 37673  004D86                     	endif
 37674  004D86  0008               	tblrd		*
 37675  004D88  50F5               	movf	tablat,w,c
 37676  004D8A  0A61               	xorlw	97
 37677  004D8C  A4D8               	btfss	status,2,c
 37678  004D8E  D009               	goto	u39980
 37679                           
 37680                           ; BSR set to: 0
 37681  004D90  0E6B               	movlw	low (STR_18+2)
 37682  004D92  6EF6               	movwf	tblptrl,c
 37683  004D94  0E23               	movlw	high (STR_18+2)
 37684  004D96  6EF7               	movwf	tblptrh,c
 37685  004D98                     	if	0	;tblptru may be non-zero
 37686  004D98                     	endif
 37687  004D98                     	if	0	;tblptru may be non-zero
 37688  004D98                     	endif
 37689  004D98  0008               	tblrd		*
 37690  004D9A  50F5               	movf	tablat,w,c
 37691  004D9C  0A79               	xorlw	121
 37692  004D9E  B4D8               	btfsc	status,2,c
 37693  004DA0  D0AF               	goto	l31835
 37694  004DA2                     u39980:
 37695                           
 37696                           ; BSR set to: 0
 37697  004DA2  0E69               	movlw	low STR_18
 37698  004DA4  6EF6               	movwf	tblptrl,c
 37699  004DA6                     	if	1	;There is more than 1 active tblptr byte
 37700  004DA6  0E23               	movlw	high STR_18
 37701  004DA8  6EF7               	movwf	tblptrh,c
 37702  004DAA                     	endif
 37703  004DAA                     	if	0	;There are less than 3 active tblptr bytes
 37704  004DAA                     	endif
 37705  004DAA  0008               	tblrd		*
 37706  004DAC  50F5               	movf	tablat,w,c
 37707  004DAE  0A4A               	xorlw	74
 37708  004DB0  A4D8               	btfss	status,2,c
 37709  004DB2  D012               	goto	u40010
 37710                           
 37711                           ; BSR set to: 0
 37712  004DB4  0E6A               	movlw	low (STR_18+1)
 37713  004DB6  6EF6               	movwf	tblptrl,c
 37714  004DB8  0E23               	movlw	high (STR_18+1)
 37715  004DBA  6EF7               	movwf	tblptrh,c
 37716  004DBC                     	if	0	;tblptru may be non-zero
 37717  004DBC                     	endif
 37718  004DBC                     	if	0	;tblptru may be non-zero
 37719  004DBC                     	endif
 37720  004DBC  0008               	tblrd		*
 37721  004DBE  50F5               	movf	tablat,w,c
 37722  004DC0  0A75               	xorlw	117
 37723  004DC2  A4D8               	btfss	status,2,c
 37724  004DC4  D009               	goto	u40010
 37725                           
 37726                           ; BSR set to: 0
 37727  004DC6  0E6B               	movlw	low (STR_18+2)
 37728  004DC8  6EF6               	movwf	tblptrl,c
 37729  004DCA  0E23               	movlw	high (STR_18+2)
 37730  004DCC  6EF7               	movwf	tblptrh,c
 37731  004DCE                     	if	0	;tblptru may be non-zero
 37732  004DCE                     	endif
 37733  004DCE                     	if	0	;tblptru may be non-zero
 37734  004DCE                     	endif
 37735  004DCE  0008               	tblrd		*
 37736  004DD0  50F5               	movf	tablat,w,c
 37737  004DD2  0A6E               	xorlw	110
 37738  004DD4  B4D8               	btfsc	status,2,c
 37739  004DD6  D08B               	goto	l31831
 37740  004DD8                     u40010:
 37741                           
 37742                           ; BSR set to: 0
 37743  004DD8  0E69               	movlw	low STR_18
 37744  004DDA  6EF6               	movwf	tblptrl,c
 37745  004DDC                     	if	1	;There is more than 1 active tblptr byte
 37746  004DDC  0E23               	movlw	high STR_18
 37747  004DDE  6EF7               	movwf	tblptrh,c
 37748  004DE0                     	endif
 37749  004DE0                     	if	0	;There are less than 3 active tblptr bytes
 37750  004DE0                     	endif
 37751  004DE0  0008               	tblrd		*
 37752  004DE2  50F5               	movf	tablat,w,c
 37753  004DE4  0A4A               	xorlw	74
 37754  004DE6  A4D8               	btfss	status,2,c
 37755  004DE8  D012               	goto	u40040
 37756                           
 37757                           ; BSR set to: 0
 37758  004DEA  0E6A               	movlw	low (STR_18+1)
 37759  004DEC  6EF6               	movwf	tblptrl,c
 37760  004DEE  0E23               	movlw	high (STR_18+1)
 37761  004DF0  6EF7               	movwf	tblptrh,c
 37762  004DF2                     	if	0	;tblptru may be non-zero
 37763  004DF2                     	endif
 37764  004DF2                     	if	0	;tblptru may be non-zero
 37765  004DF2                     	endif
 37766  004DF2  0008               	tblrd		*
 37767  004DF4  50F5               	movf	tablat,w,c
 37768  004DF6  0A75               	xorlw	117
 37769  004DF8  A4D8               	btfss	status,2,c
 37770  004DFA  D009               	goto	u40040
 37771                           
 37772                           ; BSR set to: 0
 37773  004DFC  0E6B               	movlw	low (STR_18+2)
 37774  004DFE  6EF6               	movwf	tblptrl,c
 37775  004E00  0E23               	movlw	high (STR_18+2)
 37776  004E02  6EF7               	movwf	tblptrh,c
 37777  004E04                     	if	0	;tblptru may be non-zero
 37778  004E04                     	endif
 37779  004E04                     	if	0	;tblptru may be non-zero
 37780  004E04                     	endif
 37781  004E04  0008               	tblrd		*
 37782  004E06  50F5               	movf	tablat,w,c
 37783  004E08  0A6C               	xorlw	108
 37784  004E0A  B4D8               	btfsc	status,2,c
 37785  004E0C  D067               	goto	l31827
 37786  004E0E                     u40040:
 37787                           
 37788                           ; BSR set to: 0
 37789  004E0E  0E69               	movlw	low STR_18
 37790  004E10  6EF6               	movwf	tblptrl,c
 37791  004E12                     	if	1	;There is more than 1 active tblptr byte
 37792  004E12  0E23               	movlw	high STR_18
 37793  004E14  6EF7               	movwf	tblptrh,c
 37794  004E16                     	endif
 37795  004E16                     	if	0	;There are less than 3 active tblptr bytes
 37796  004E16                     	endif
 37797  004E16  0008               	tblrd		*
 37798  004E18  50F5               	movf	tablat,w,c
 37799  004E1A  0A41               	xorlw	65
 37800  004E1C  A4D8               	btfss	status,2,c
 37801  004E1E  D009               	goto	u40060
 37802                           
 37803                           ; BSR set to: 0
 37804  004E20  0E6A               	movlw	low (STR_18+1)
 37805  004E22  6EF6               	movwf	tblptrl,c
 37806  004E24  0E23               	movlw	high (STR_18+1)
 37807  004E26  6EF7               	movwf	tblptrh,c
 37808  004E28                     	if	0	;tblptru may be non-zero
 37809  004E28                     	endif
 37810  004E28                     	if	0	;tblptru may be non-zero
 37811  004E28                     	endif
 37812  004E28  0008               	tblrd		*
 37813  004E2A  50F5               	movf	tablat,w,c
 37814  004E2C  0A75               	xorlw	117
 37815  004E2E  B4D8               	btfsc	status,2,c
 37816  004E30  D04C               	goto	l31823
 37817  004E32                     u40060:
 37818                           
 37819                           ; BSR set to: 0
 37820  004E32  0E69               	movlw	low STR_18
 37821  004E34  6EF6               	movwf	tblptrl,c
 37822  004E36                     	if	1	;There is more than 1 active tblptr byte
 37823  004E36  0E23               	movlw	high STR_18
 37824  004E38  6EF7               	movwf	tblptrh,c
 37825  004E3A                     	endif
 37826  004E3A                     	if	0	;There are less than 3 active tblptr bytes
 37827  004E3A                     	endif
 37828  004E3A  0008               	tblrd		*
 37829  004E3C  50F5               	movf	tablat,w,c
 37830  004E3E  0A53               	xorlw	83
 37831  004E40  B4D8               	btfsc	status,2,c
 37832  004E42  D03A               	goto	l31819
 37833                           
 37834                           ; BSR set to: 0
 37835  004E44  0E69               	movlw	low STR_18
 37836  004E46  6EF6               	movwf	tblptrl,c
 37837  004E48                     	if	1	;There is more than 1 active tblptr byte
 37838  004E48  0E23               	movlw	high STR_18
 37839  004E4A  6EF7               	movwf	tblptrh,c
 37840  004E4C                     	endif
 37841  004E4C                     	if	0	;There are less than 3 active tblptr bytes
 37842  004E4C                     	endif
 37843  004E4C  0008               	tblrd		*
 37844  004E4E  50F5               	movf	tablat,w,c
 37845  004E50  0A4F               	xorlw	79
 37846  004E52  B4D8               	btfsc	status,2,c
 37847  004E54  D028               	goto	l31815
 37848                           
 37849                           ; BSR set to: 0
 37850  004E56  0E69               	movlw	low STR_18
 37851  004E58  6EF6               	movwf	tblptrl,c
 37852  004E5A                     	if	1	;There is more than 1 active tblptr byte
 37853  004E5A  0E23               	movlw	high STR_18
 37854  004E5C  6EF7               	movwf	tblptrh,c
 37855  004E5E                     	endif
 37856  004E5E                     	if	0	;There are less than 3 active tblptr bytes
 37857  004E5E                     	endif
 37858  004E5E  0008               	tblrd		*
 37859  004E60  50F5               	movf	tablat,w,c
 37860  004E62  0A4E               	xorlw	78
 37861  004E64  B4D8               	btfsc	status,2,c
 37862  004E66  D016               	goto	l31811
 37863                           
 37864                           ; BSR set to: 0
 37865  004E68  0E69               	movlw	low STR_18
 37866  004E6A  6EF6               	movwf	tblptrl,c
 37867  004E6C                     	if	1	;There is more than 1 active tblptr byte
 37868  004E6C  0E23               	movlw	high STR_18
 37869  004E6E  6EF7               	movwf	tblptrh,c
 37870  004E70                     	endif
 37871  004E70                     	if	0	;There are less than 3 active tblptr bytes
 37872  004E70                     	endif
 37873  004E70  0008               	tblrd		*
 37874  004E72  50F5               	movf	tablat,w,c
 37875  004E74  0A44               	xorlw	68
 37876  004E76  B4D8               	btfsc	status,2,c
 37877  004E78  D004               	goto	l31807
 37878                           
 37879                           ; BSR set to: 0
 37880  004E7A  0E00               	movlw	0
 37881  004E7C  6F87               	movwf	(_build_time$8302+1)& (0+255),b
 37882  004E7E  0E63               	movlw	99
 37883  004E80  D003               	goto	L89
 37884  004E82                     l31807:
 37885                           
 37886                           ; BSR set to: 0
 37887  004E82  0E00               	movlw	0
 37888  004E84  6F87               	movwf	(_build_time$8302+1)& (0+255),b
 37889  004E86  0E0C               	movlw	12
 37890  004E88                     L89:
 37891  004E88  6F86               	movwf	_build_time$8302& (0+255),b
 37892                           
 37893                           ; BSR set to: 0
 37894  004E8A  C086  F084         	movff	_build_time$8302,_build_time$8301
 37895  004E8E  C087  F085         	movff	_build_time$8302+1,_build_time$8301+1
 37896  004E92  D004               	goto	l31813
 37897  004E94                     l31811:
 37898                           
 37899                           ; BSR set to: 0
 37900  004E94  0E00               	movlw	0
 37901  004E96  6F85               	movwf	(_build_time$8301+1)& (0+255),b
 37902  004E98  0E0B               	movlw	11
 37903  004E9A  6F84               	movwf	_build_time$8301& (0+255),b
 37904  004E9C                     l31813:
 37905                           
 37906                           ; BSR set to: 0
 37907  004E9C  C084  F082         	movff	_build_time$8301,_build_time$8300
 37908  004EA0  C085  F083         	movff	_build_time$8301+1,_build_time$8300+1
 37909  004EA4  D004               	goto	l31817
 37910  004EA6                     l31815:
 37911                           
 37912                           ; BSR set to: 0
 37913  004EA6  0E00               	movlw	0
 37914  004EA8  6F83               	movwf	(_build_time$8300+1)& (0+255),b
 37915  004EAA  0E0A               	movlw	10
 37916  004EAC  6F82               	movwf	_build_time$8300& (0+255),b
 37917  004EAE                     l31817:
 37918                           
 37919                           ; BSR set to: 0
 37920  004EAE  C082  F080         	movff	_build_time$8300,_build_time$8299
 37921  004EB2  C083  F081         	movff	_build_time$8300+1,_build_time$8299+1
 37922  004EB6  D004               	goto	l31821
 37923  004EB8                     l31819:
 37924                           
 37925                           ; BSR set to: 0
 37926  004EB8  0E00               	movlw	0
 37927  004EBA  6F81               	movwf	(_build_time$8299+1)& (0+255),b
 37928  004EBC  0E09               	movlw	9
 37929  004EBE  6F80               	movwf	_build_time$8299& (0+255),b
 37930  004EC0                     l31821:
 37931                           
 37932                           ; BSR set to: 0
 37933  004EC0  C080  F07E         	movff	_build_time$8299,_build_time$8298
 37934  004EC4  C081  F07F         	movff	_build_time$8299+1,_build_time$8298+1
 37935  004EC8  D004               	goto	l31825
 37936  004ECA                     l31823:
 37937                           
 37938                           ; BSR set to: 0
 37939  004ECA  0E00               	movlw	0
 37940  004ECC  6F7F               	movwf	(_build_time$8298+1)& (0+255),b
 37941  004ECE  0E08               	movlw	8
 37942  004ED0  6F7E               	movwf	_build_time$8298& (0+255),b
 37943  004ED2                     l31825:
 37944                           
 37945                           ; BSR set to: 0
 37946  004ED2  C07E  F07C         	movff	_build_time$8298,_build_time$8297
 37947  004ED6  C07F  F07D         	movff	_build_time$8298+1,_build_time$8297+1
 37948  004EDA  D004               	goto	l31829
 37949  004EDC                     l31827:
 37950                           
 37951                           ; BSR set to: 0
 37952  004EDC  0E00               	movlw	0
 37953  004EDE  6F7D               	movwf	(_build_time$8297+1)& (0+255),b
 37954  004EE0  0E07               	movlw	7
 37955  004EE2  6F7C               	movwf	_build_time$8297& (0+255),b
 37956  004EE4                     l31829:
 37957                           
 37958                           ; BSR set to: 0
 37959  004EE4  C07C  F07A         	movff	_build_time$8297,_build_time$8296
 37960  004EE8  C07D  F07B         	movff	_build_time$8297+1,_build_time$8296+1
 37961  004EEC  D004               	goto	l31833
 37962  004EEE                     l31831:
 37963                           
 37964                           ; BSR set to: 0
 37965  004EEE  0E00               	movlw	0
 37966  004EF0  6F7B               	movwf	(_build_time$8296+1)& (0+255),b
 37967  004EF2  0E06               	movlw	6
 37968  004EF4  6F7A               	movwf	_build_time$8296& (0+255),b
 37969  004EF6                     l31833:
 37970                           
 37971                           ; BSR set to: 0
 37972  004EF6  C07A  F078         	movff	_build_time$8296,_build_time$8295
 37973  004EFA  C07B  F079         	movff	_build_time$8296+1,_build_time$8295+1
 37974  004EFE  D004               	goto	l31837
 37975  004F00                     l31835:
 37976                           
 37977                           ; BSR set to: 0
 37978  004F00  0E00               	movlw	0
 37979  004F02  6F79               	movwf	(_build_time$8295+1)& (0+255),b
 37980  004F04  0E05               	movlw	5
 37981  004F06  6F78               	movwf	_build_time$8295& (0+255),b
 37982  004F08                     l31837:
 37983                           
 37984                           ; BSR set to: 0
 37985  004F08  C078  F076         	movff	_build_time$8295,_build_time$8294
 37986  004F0C  C079  F077         	movff	_build_time$8295+1,_build_time$8294+1
 37987  004F10  D004               	goto	l31841
 37988  004F12                     l31839:
 37989                           
 37990                           ; BSR set to: 0
 37991  004F12  0E00               	movlw	0
 37992  004F14  6F77               	movwf	(_build_time$8294+1)& (0+255),b
 37993  004F16  0E04               	movlw	4
 37994  004F18  6F76               	movwf	_build_time$8294& (0+255),b
 37995  004F1A                     l31841:
 37996                           
 37997                           ; BSR set to: 0
 37998  004F1A  C076  F074         	movff	_build_time$8294,_build_time$8293
 37999  004F1E  C077  F075         	movff	_build_time$8294+1,_build_time$8293+1
 38000  004F22  D004               	goto	l31845
 38001  004F24                     l31843:
 38002                           
 38003                           ; BSR set to: 0
 38004  004F24  0E00               	movlw	0
 38005  004F26  6F75               	movwf	(_build_time$8293+1)& (0+255),b
 38006  004F28  0E03               	movlw	3
 38007  004F2A  6F74               	movwf	_build_time$8293& (0+255),b
 38008  004F2C                     l31845:
 38009                           
 38010                           ; BSR set to: 0
 38011  004F2C  C074  F072         	movff	_build_time$8293,_build_time$8292
 38012  004F30  C075  F073         	movff	_build_time$8293+1,_build_time$8292+1
 38013  004F34  D004               	goto	l31849
 38014  004F36                     l31847:
 38015                           
 38016                           ; BSR set to: 0
 38017  004F36  0E00               	movlw	0
 38018  004F38  6F73               	movwf	(_build_time$8292+1)& (0+255),b
 38019  004F3A  0E02               	movlw	2
 38020  004F3C  6F72               	movwf	_build_time$8292& (0+255),b
 38021  004F3E                     l31849:
 38022                           
 38023                           ; BSR set to: 0
 38024  004F3E  C072  F070         	movff	_build_time$8292,_build_time$8291
 38025  004F42  C073  F071         	movff	_build_time$8292+1,_build_time$8291+1
 38026  004F46  D004               	goto	l31853
 38027  004F48                     l31851:
 38028                           
 38029                           ; BSR set to: 0
 38030  004F48  0E00               	movlw	0
 38031  004F4A  6F71               	movwf	(_build_time$8291+1)& (0+255),b
 38032  004F4C  0E01               	movlw	1
 38033  004F4E  6F70               	movwf	_build_time$8291& (0+255),b
 38034  004F50                     l31853:
 38035                           
 38036                           ; BSR set to: 0
 38037  004F50  C070  F06E         	movff	_build_time$8291,_build_time$8290
 38038  004F54  C071  F06F         	movff	_build_time$8291+1,_build_time$8290+1
 38039  004F58  D004               	goto	l31857
 38040  004F5A                     l31855:
 38041                           
 38042                           ; BSR set to: 0
 38043  004F5A  0E00               	movlw	0
 38044  004F5C  6F6F               	movwf	(_build_time$8290+1)& (0+255),b
 38045  004F5E  0E63               	movlw	99
 38046  004F60  6F6E               	movwf	_build_time$8290& (0+255),b
 38047  004F62                     l31857:
 38048                           
 38049                           ; BSR set to: 0
 38050  004F62  0EFF               	movlw	255
 38051  004F64  256E               	addwf	_build_time$8290& (0+255),w,b
 38052  004F66  6F9A               	movwf	(build_time@tm+8)& (0+255),b
 38053  004F68  0EFF               	movlw	255
 38054  004F6A  216F               	addwfc	(_build_time$8290+1)& (0+255),w,b
 38055  004F6C  6F9B               	movwf	(build_time@tm+9)& (0+255),b
 38056                           
 38057                           ; BSR set to: 0
 38058                           ;build_time.c: 11: tm.tm_mday = ((("Jan 20 2022"[0] == '?')) ? 99 : ( (("Jan 20 2022"[4]
      +                           >= '0') ? ("Jan 20 2022"[4] - '0') * 10 : 0) + ("Jan 20 2022"[5] - '0') ));
 38059  004F6E  0E69               	movlw	low STR_18
 38060  004F70  6EF6               	movwf	tblptrl,c
 38061  004F72                     	if	1	;There is more than 1 active tblptr byte
 38062  004F72  0E23               	movlw	high STR_18
 38063  004F74  6EF7               	movwf	tblptrh,c
 38064  004F76                     	endif
 38065  004F76                     	if	0	;There are less than 3 active tblptr bytes
 38066  004F76                     	endif
 38067  004F76  0008               	tblrd		*
 38068  004F78  50F5               	movf	tablat,w,c
 38069  004F7A  0A3F               	xorlw	63
 38070  004F7C  B4D8               	btfsc	status,2,c
 38071  004F7E  D037               	goto	l31869
 38072                           
 38073                           ; BSR set to: 0
 38074  004F80  0E6D               	movlw	low (STR_18+4)
 38075  004F82  6EF6               	movwf	tblptrl,c
 38076  004F84  0E23               	movlw	high (STR_18+4)
 38077  004F86  6EF7               	movwf	tblptrh,c
 38078  004F88                     	if	0	;tblptru may be non-zero
 38079  004F88                     	endif
 38080  004F88                     	if	0	;tblptru may be non-zero
 38081  004F88                     	endif
 38082  004F88  0E30               	movlw	48
 38083  004F8A  0008               	tblrd		*
 38084  004F8C  60F5               	cpfslt	tablat,c
 38085  004F8E  D005               	goto	l31865
 38086                           
 38087                           ; BSR set to: 0
 38088  004F90  0E00               	movlw	0
 38089  004F92  6F8B               	movwf	(_build_time$8308+1)& (0+255),b
 38090  004F94  0E00               	movlw	0
 38091  004F96  6F8A               	movwf	_build_time$8308& (0+255),b
 38092  004F98  D017               	goto	l31867
 38093  004F9A                     l31865:
 38094                           
 38095                           ; BSR set to: 0
 38096  004F9A  0E6D               	movlw	low (STR_18+4)
 38097  004F9C  6EF6               	movwf	tblptrl,c
 38098  004F9E  0E23               	movlw	high (STR_18+4)
 38099  004FA0  6EF7               	movwf	tblptrh,c
 38100  004FA2                     	if	0	;tblptru may be non-zero
 38101  004FA2                     	endif
 38102  004FA2                     	if	0	;tblptru may be non-zero
 38103  004FA2                     	endif
 38104  004FA2  0008               	tblrd		*
 38105  004FA4  CFF5 F040          	movff	tablat,??_build_time
 38106  004FA8  0ED0               	movlw	208
 38107  004FAA  2440               	addwf	??_build_time^0,w,c
 38108  004FAC  6E0F               	movwf	___wmul@multiplier^0,c
 38109  004FAE  6A10               	clrf	(___wmul@multiplier+1)^0,c
 38110  004FB0  0EFF               	movlw	255
 38111  004FB2  2210               	addwfc	(___wmul@multiplier+1)^0,f,c
 38112  004FB4  0E00               	movlw	0
 38113  004FB6  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 38114  004FB8  0E0A               	movlw	10
 38115  004FBA  6E11               	movwf	___wmul@multiplicand^0,c
 38116  004FBC  ECCC  F06D         	call	___wmul	;wreg free
 38117  004FC0  C00F  F08A         	movff	?___wmul,_build_time$8308
 38118  004FC4  C010  F08B         	movff	?___wmul+1,_build_time$8308+1
 38119  004FC8                     l31867:
 38120  004FC8  0E6E               	movlw	low (STR_18+5)
 38121  004FCA  6EF6               	movwf	tblptrl,c
 38122  004FCC  0E23               	movlw	high (STR_18+5)
 38123  004FCE  6EF7               	movwf	tblptrh,c
 38124  004FD0                     	if	0	;tblptru may be non-zero
 38125  004FD0                     	endif
 38126  004FD0                     	if	0	;tblptru may be non-zero
 38127  004FD0                     	endif
 38128  004FD0  0008               	tblrd		*
 38129  004FD2  50F5               	movf	tablat,w,c
 38130  004FD4  0100               	movlb	0	; () banked
 38131  004FD6  258A               	addwf	_build_time$8308& (0+255),w,b
 38132  004FD8  6E40               	movwf	??_build_time^0,c
 38133  004FDA  0E00               	movlw	0
 38134  004FDC  218B               	addwfc	(_build_time$8308+1)& (0+255),w,b
 38135  004FDE  6E41               	movwf	(??_build_time+1)^0,c
 38136  004FE0  0ED0               	movlw	208
 38137  004FE2  2440               	addwf	??_build_time^0,w,c
 38138  004FE4  6F88               	movwf	_build_time$8307& (0+255),b
 38139  004FE6  0EFF               	movlw	255
 38140  004FE8  2041               	addwfc	(??_build_time+1)^0,w,c
 38141  004FEA  6F89               	movwf	(_build_time$8307+1)& (0+255),b
 38142  004FEC  D004               	goto	l31871
 38143  004FEE                     l31869:
 38144                           
 38145                           ; BSR set to: 0
 38146  004FEE  0E00               	movlw	0
 38147  004FF0  6F89               	movwf	(_build_time$8307+1)& (0+255),b
 38148  004FF2  0E63               	movlw	99
 38149  004FF4  6F88               	movwf	_build_time$8307& (0+255),b
 38150  004FF6                     l31871:
 38151                           
 38152                           ; BSR set to: 0
 38153  004FF6  C088  F098         	movff	_build_time$8307,build_time@tm+6
 38154  004FFA  C089  F099         	movff	_build_time$8307+1,build_time@tm+7
 38155                           
 38156                           ; BSR set to: 0
 38157                           ;build_time.c: 12: tm.tm_hour = ((("11:28:20"[0] == '?')) ? 99 : (("11:28:20"[0] - '0') 
      +                          * 10 + "11:28:20"[1] - '0')) - 9;
 38158  004FFE  0E75               	movlw	low STR_52
 38159  005000  6EF6               	movwf	tblptrl,c
 38160  005002                     	if	1	;There is more than 1 active tblptr byte
 38161  005002  0E23               	movlw	high STR_52
 38162  005004  6EF7               	movwf	tblptrh,c
 38163  005006                     	endif
 38164  005006                     	if	0	;There are less than 3 active tblptr bytes
 38165  005006                     	endif
 38166  005006  0008               	tblrd		*
 38167  005008  50F5               	movf	tablat,w,c
 38168  00500A  0A3F               	xorlw	63
 38169  00500C  B4D8               	btfsc	status,2,c
 38170  00500E  D01B               	goto	l31877
 38171                           
 38172                           ; BSR set to: 0
 38173  005010  0E75               	movlw	low STR_52
 38174  005012  6EF6               	movwf	tblptrl,c
 38175  005014                     	if	1	;There is more than 1 active tblptr byte
 38176  005014  0E23               	movlw	high STR_52
 38177  005016  6EF7               	movwf	tblptrh,c
 38178  005018                     	endif
 38179  005018                     	if	0	;There are less than 3 active tblptr bytes
 38180  005018                     	endif
 38181  005018  0008               	tblrd		*
 38182  00501A  50F5               	movf	tablat,w,c
 38183  00501C  0D0A               	mullw	10
 38184  00501E  CFF3 F040          	movff	prodl,??_build_time
 38185  005022  CFF4 F041          	movff	prodh,??_build_time+1
 38186  005026  0E76               	movlw	low (STR_52+1)
 38187  005028  6EF6               	movwf	tblptrl,c
 38188  00502A  0E23               	movlw	high (STR_52+1)
 38189  00502C  6EF7               	movwf	tblptrh,c
 38190  00502E                     	if	0	;tblptru may be non-zero
 38191  00502E                     	endif
 38192  00502E                     	if	0	;tblptru may be non-zero
 38193  00502E                     	endif
 38194  00502E  0008               	tblrd		*
 38195  005030  50F5               	movf	tablat,w,c
 38196  005032  2640               	addwf	??_build_time^0,f,c
 38197  005034  0E00               	movlw	0
 38198  005036  2241               	addwfc	(??_build_time+1)^0,f,c
 38199  005038  0EF0               	movlw	240
 38200  00503A  2440               	addwf	??_build_time^0,w,c
 38201  00503C  6F8C               	movwf	_build_time$8312& (0+255),b
 38202  00503E  0EFD               	movlw	253
 38203  005040  2041               	addwfc	(??_build_time+1)^0,w,c
 38204  005042  6F8D               	movwf	(_build_time$8312+1)& (0+255),b
 38205  005044  D004               	goto	l31879
 38206  005046                     l31877:
 38207                           
 38208                           ; BSR set to: 0
 38209  005046  0E00               	movlw	0
 38210  005048  6F8D               	movwf	(_build_time$8312+1)& (0+255),b
 38211  00504A  0E63               	movlw	99
 38212  00504C  6F8C               	movwf	_build_time$8312& (0+255),b
 38213  00504E                     l31879:
 38214                           
 38215                           ; BSR set to: 0
 38216  00504E  0EF7               	movlw	247
 38217  005050  258C               	addwf	_build_time$8312& (0+255),w,b
 38218  005052  6F96               	movwf	(build_time@tm+4)& (0+255),b
 38219  005054  0EFF               	movlw	255
 38220  005056  218D               	addwfc	(_build_time$8312+1)& (0+255),w,b
 38221  005058  6F97               	movwf	(build_time@tm+5)& (0+255),b
 38222                           
 38223                           ; BSR set to: 0
 38224                           ;build_time.c: 13: tm.tm_min = ((("11:28:20"[0] == '?')) ? 99 : (("11:28:20"[3] - '0') *
      +                           10 + "11:28:20"[4] - '0'));
 38225  00505A  0E75               	movlw	low STR_52
 38226  00505C  6EF6               	movwf	tblptrl,c
 38227  00505E                     	if	1	;There is more than 1 active tblptr byte
 38228  00505E  0E23               	movlw	high STR_52
 38229  005060  6EF7               	movwf	tblptrh,c
 38230  005062                     	endif
 38231  005062                     	if	0	;There are less than 3 active tblptr bytes
 38232  005062                     	endif
 38233  005062  0008               	tblrd		*
 38234  005064  50F5               	movf	tablat,w,c
 38235  005066  0A3F               	xorlw	63
 38236  005068  B4D8               	btfsc	status,2,c
 38237  00506A  D01B               	goto	l31885
 38238                           
 38239                           ; BSR set to: 0
 38240  00506C  0E78               	movlw	low (STR_52+3)
 38241  00506E  6EF6               	movwf	tblptrl,c
 38242  005070  0E23               	movlw	high (STR_52+3)
 38243  005072  6EF7               	movwf	tblptrh,c
 38244  005074                     	if	0	;tblptru may be non-zero
 38245  005074                     	endif
 38246  005074                     	if	0	;tblptru may be non-zero
 38247  005074                     	endif
 38248  005074  0008               	tblrd		*
 38249  005076  50F5               	movf	tablat,w,c
 38250  005078  0D0A               	mullw	10
 38251  00507A  CFF3 F040          	movff	prodl,??_build_time
 38252  00507E  CFF4 F041          	movff	prodh,??_build_time+1
 38253  005082  0E79               	movlw	low (STR_52+4)
 38254  005084  6EF6               	movwf	tblptrl,c
 38255  005086  0E23               	movlw	high (STR_52+4)
 38256  005088  6EF7               	movwf	tblptrh,c
 38257  00508A                     	if	0	;tblptru may be non-zero
 38258  00508A                     	endif
 38259  00508A                     	if	0	;tblptru may be non-zero
 38260  00508A                     	endif
 38261  00508A  0008               	tblrd		*
 38262  00508C  50F5               	movf	tablat,w,c
 38263  00508E  2640               	addwf	??_build_time^0,f,c
 38264  005090  0E00               	movlw	0
 38265  005092  2241               	addwfc	(??_build_time+1)^0,f,c
 38266  005094  0EF0               	movlw	240
 38267  005096  2440               	addwf	??_build_time^0,w,c
 38268  005098  6F8E               	movwf	_build_time$8316& (0+255),b
 38269  00509A  0EFD               	movlw	253
 38270  00509C  2041               	addwfc	(??_build_time+1)^0,w,c
 38271  00509E  6F8F               	movwf	(_build_time$8316+1)& (0+255),b
 38272  0050A0  D004               	goto	l31887
 38273  0050A2                     l31885:
 38274                           
 38275                           ; BSR set to: 0
 38276  0050A2  0E00               	movlw	0
 38277  0050A4  6F8F               	movwf	(_build_time$8316+1)& (0+255),b
 38278  0050A6  0E63               	movlw	99
 38279  0050A8  6F8E               	movwf	_build_time$8316& (0+255),b
 38280  0050AA                     l31887:
 38281                           
 38282                           ; BSR set to: 0
 38283  0050AA  C08E  F094         	movff	_build_time$8316,build_time@tm+2
 38284  0050AE  C08F  F095         	movff	_build_time$8316+1,build_time@tm+3
 38285                           
 38286                           ; BSR set to: 0
 38287                           ;build_time.c: 14: tm.tm_sec = ((("11:28:20"[0] == '?')) ? 99 : (("11:28:20"[6] - '0') *
      +                           10 + "11:28:20"[7] - '0'));
 38288  0050B2  0E75               	movlw	low STR_52
 38289  0050B4  6EF6               	movwf	tblptrl,c
 38290  0050B6                     	if	1	;There is more than 1 active tblptr byte
 38291  0050B6  0E23               	movlw	high STR_52
 38292  0050B8  6EF7               	movwf	tblptrh,c
 38293  0050BA                     	endif
 38294  0050BA                     	if	0	;There are less than 3 active tblptr bytes
 38295  0050BA                     	endif
 38296  0050BA  0008               	tblrd		*
 38297  0050BC  50F5               	movf	tablat,w,c
 38298  0050BE  0A3F               	xorlw	63
 38299  0050C0  B4D8               	btfsc	status,2,c
 38300  0050C2  D01B               	goto	l31893
 38301                           
 38302                           ; BSR set to: 0
 38303  0050C4  0E7B               	movlw	low (STR_52+6)
 38304  0050C6  6EF6               	movwf	tblptrl,c
 38305  0050C8  0E23               	movlw	high (STR_52+6)
 38306  0050CA  6EF7               	movwf	tblptrh,c
 38307  0050CC                     	if	0	;tblptru may be non-zero
 38308  0050CC                     	endif
 38309  0050CC                     	if	0	;tblptru may be non-zero
 38310  0050CC                     	endif
 38311  0050CC  0008               	tblrd		*
 38312  0050CE  50F5               	movf	tablat,w,c
 38313  0050D0  0D0A               	mullw	10
 38314  0050D2  CFF3 F040          	movff	prodl,??_build_time
 38315  0050D6  CFF4 F041          	movff	prodh,??_build_time+1
 38316  0050DA  0E7C               	movlw	low (STR_52+7)
 38317  0050DC  6EF6               	movwf	tblptrl,c
 38318  0050DE  0E23               	movlw	high (STR_52+7)
 38319  0050E0  6EF7               	movwf	tblptrh,c
 38320  0050E2                     	if	0	;tblptru may be non-zero
 38321  0050E2                     	endif
 38322  0050E2                     	if	0	;tblptru may be non-zero
 38323  0050E2                     	endif
 38324  0050E2  0008               	tblrd		*
 38325  0050E4  50F5               	movf	tablat,w,c
 38326  0050E6  2640               	addwf	??_build_time^0,f,c
 38327  0050E8  0E00               	movlw	0
 38328  0050EA  2241               	addwfc	(??_build_time+1)^0,f,c
 38329  0050EC  0EF0               	movlw	240
 38330  0050EE  2440               	addwf	??_build_time^0,w,c
 38331  0050F0  6F90               	movwf	_build_time$8320& (0+255),b
 38332  0050F2  0EFD               	movlw	253
 38333  0050F4  2041               	addwfc	(??_build_time+1)^0,w,c
 38334  0050F6  6F91               	movwf	(_build_time$8320+1)& (0+255),b
 38335  0050F8  D004               	goto	l31895
 38336  0050FA                     l31893:
 38337                           
 38338                           ; BSR set to: 0
 38339  0050FA  0E00               	movlw	0
 38340  0050FC  6F91               	movwf	(_build_time$8320+1)& (0+255),b
 38341  0050FE  0E63               	movlw	99
 38342  005100  6F90               	movwf	_build_time$8320& (0+255),b
 38343  005102                     l31895:
 38344                           
 38345                           ; BSR set to: 0
 38346  005102  C090  F092         	movff	_build_time$8320,build_time@tm
 38347  005106  C091  F093         	movff	_build_time$8320+1,build_time@tm+1
 38348                           
 38349                           ; BSR set to: 0
 38350                           ;build_time.c: 15: timestamp = mktime(&tm);
 38351  00510A  0E92               	movlw	low build_time@tm
 38352  00510C  6E36               	movwf	mktime@timeptr^0,c
 38353  00510E  ECC0  F043         	call	_mktime	;wreg free
 38354  005112  C036  F068         	movff	?_mktime,build_time@timestamp
 38355  005116  C037  F069         	movff	?_mktime+1,build_time@timestamp+1
 38356  00511A  C038  F06A         	movff	?_mktime+2,build_time@timestamp+2
 38357  00511E  C039  F06B         	movff	?_mktime+3,build_time@timestamp+3
 38358                           
 38359                           ; BSR set to: 0
 38360                           ;build_time.c: 17: return timestamp;
 38361  005122  C068  F064         	movff	build_time@timestamp,?_build_time
 38362  005126  C069  F065         	movff	build_time@timestamp+1,?_build_time+1
 38363  00512A  C06A  F066         	movff	build_time@timestamp+2,?_build_time+2
 38364  00512E  C06B  F067         	movff	build_time@timestamp+3,?_build_time+3
 38365                           
 38366                           ; BSR set to: 0
 38367  005132  0012               	return		;funcret
 38368  005134                     __end_of_build_time:
 38369                           	callstack 0
 38370                           
 38371 ;; *************** function _mktime *****************
 38372 ;; Defined at:
 38373 ;;		line 52 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 38374 ;; Parameters:    Size  Location     Type
 38375 ;;  timeptr         1   53[COMRAM] PTR struct tm
 38376 ;;		 -> build_time@tm(18), 
 38377 ;; Auto vars:     Size  Location     Type
 38378 ;;  tt              4    0[BANK0 ] long 
 38379 ;; Return value:  Size  Location     Type
 38380 ;;                  4   53[COMRAM] long 
 38381 ;; Registers used:
 38382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38383 ;; Tracked objects:
 38384 ;;		On entry : 3F/0
 38385 ;;		On exit  : 3F/0
 38386 ;;		Unchanged: 0/0
 38387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38389 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38390 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38391 ;;      Totals:        10       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38392 ;;Total ram usage:       14 bytes
 38393 ;; Hardware stack levels used: 1
 38394 ;; Hardware stack levels required when called: 7
 38395 ;; This function calls:
 38396 ;;		___lmul
 38397 ;;		_ymd_to_scalar
 38398 ;; This function is called by:
 38399 ;;		_build_time
 38400 ;; This function uses a non-reentrant model
 38401 ;;
 38402                           
 38403                           	psect	text185
 38404  008780                     __ptext185:
 38405                           	callstack 0
 38406  008780                     _mktime:
 38407                           	callstack 18
 38408                           
 38409                           ; BSR set to: 0
 38410                           
 38411                           ; BSR set to: 0
 38412                           ;incstack = 0
 38413  008780  5036               	movf	mktime@timeptr^0,w,c
 38414  008782  6ED9               	movwf	fsr2l,c
 38415  008784  6ADA               	clrf	fsr2h,c
 38416  008786  0E0A               	movlw	10
 38417  008788  26D9               	addwf	fsr2l,f,c
 38418  00878A  0E01               	movlw	1
 38419  00878C  BEDB               	btfsc	plusw2,7,c
 38420  00878E  D016               	goto	u38890
 38421  008790  0E01               	movlw	1
 38422  008792  50DB               	movf	plusw2,w,c
 38423  008794  E104               	bnz	u38880
 38424  008796  0E46               	movlw	70
 38425  008798  5CDE               	subwf	postinc2,w,c
 38426  00879A  A0D8               	btfss	status,0,c
 38427  00879C  D00F               	goto	u38890
 38428  00879E                     u38880:
 38429                           
 38430                           ; BSR set to: 0
 38431  00879E  5036               	movf	mktime@timeptr^0,w,c
 38432  0087A0  6ED9               	movwf	fsr2l,c
 38433  0087A2  6ADA               	clrf	fsr2h,c
 38434  0087A4  0E0A               	movlw	10
 38435  0087A6  26D9               	addwf	fsr2l,f,c
 38436  0087A8  0E01               	movlw	1
 38437  0087AA  BEDB               	btfsc	plusw2,7,c
 38438  0087AC  D00C               	goto	l31077
 38439  0087AE  0E01               	movlw	1
 38440  0087B0  50DB               	movf	plusw2,w,c
 38441  0087B2  E104               	bnz	u38890
 38442  0087B4  0E8B               	movlw	139
 38443  0087B6  5CDE               	subwf	postinc2,w,c
 38444  0087B8  A0D8               	btfss	status,0,c
 38445  0087BA  D005               	goto	l31077
 38446  0087BC                     u38890:
 38447                           
 38448                           ; BSR set to: 0
 38449  0087BC  6960               	setf	mktime@tt& (0+255),b
 38450  0087BE  6961               	setf	(mktime@tt+1)& (0+255),b
 38451  0087C0  6962               	setf	(mktime@tt+2)& (0+255),b
 38452  0087C2  6963               	setf	(mktime@tt+3)& (0+255),b
 38453  0087C4  D0D9               	goto	l31087
 38454  0087C6                     l31077:
 38455                           
 38456                           ; BSR set to: 0
 38457  0087C6  5036               	movf	mktime@timeptr^0,w,c
 38458  0087C8  6ED9               	movwf	fsr2l,c
 38459  0087CA  6ADA               	clrf	fsr2h,c
 38460  0087CC  0E0A               	movlw	10
 38461  0087CE  26D9               	addwf	fsr2l,f,c
 38462  0087D0  CFDE F03A          	movff	postinc2,??_mktime
 38463  0087D4  CFDD F03B          	movff	postdec2,??_mktime+1
 38464  0087D8  0E6C               	movlw	108
 38465  0087DA  243A               	addwf	??_mktime^0,w,c
 38466  0087DC  6E26               	movwf	ymd_to_scalar@yr^0,c
 38467  0087DE  0E07               	movlw	7
 38468  0087E0  203B               	addwfc	(??_mktime+1)^0,w,c
 38469  0087E2  6E27               	movwf	(ymd_to_scalar@yr+1)^0,c
 38470  0087E4  5036               	movf	mktime@timeptr^0,w,c
 38471  0087E6  6ED9               	movwf	fsr2l,c
 38472  0087E8  6ADA               	clrf	fsr2h,c
 38473  0087EA  0E08               	movlw	8
 38474  0087EC  26D9               	addwf	fsr2l,f,c
 38475  0087EE  CFDE F03C          	movff	postinc2,??_mktime+2
 38476  0087F2  CFDD F03D          	movff	postdec2,??_mktime+3
 38477  0087F6  0E01               	movlw	1
 38478  0087F8  243C               	addwf	(??_mktime+2)^0,w,c
 38479  0087FA  6E28               	movwf	ymd_to_scalar@mo^0,c
 38480  0087FC  0E00               	movlw	0
 38481  0087FE  203D               	addwfc	(??_mktime+3)^0,w,c
 38482  008800  6E29               	movwf	(ymd_to_scalar@mo+1)^0,c
 38483  008802  5036               	movf	mktime@timeptr^0,w,c
 38484  008804  6ED9               	movwf	fsr2l,c
 38485  008806  6ADA               	clrf	fsr2h,c
 38486  008808  0E06               	movlw	6
 38487  00880A  26D9               	addwf	fsr2l,f,c
 38488  00880C  CFDE F02A          	movff	postinc2,ymd_to_scalar@day
 38489  008810  CFDD F02B          	movff	postdec2,ymd_to_scalar@day+1
 38490  008814  ECAA  F05B         	call	_ymd_to_scalar	;wreg free
 38491  008818  C026  F060         	movff	?_ymd_to_scalar,mktime@tt
 38492  00881C  C027  F061         	movff	?_ymd_to_scalar+1,mktime@tt+1
 38493  008820  C028  F062         	movff	?_ymd_to_scalar+2,mktime@tt+2
 38494  008824  C029  F063         	movff	?_ymd_to_scalar+3,mktime@tt+3
 38495  008828  0E07               	movlw	7
 38496  00882A  6E27               	movwf	(ymd_to_scalar@yr+1)^0,c
 38497  00882C  0EB2               	movlw	178
 38498  00882E  6E26               	movwf	ymd_to_scalar@yr^0,c
 38499  008830  0E00               	movlw	0
 38500  008832  6E29               	movwf	(ymd_to_scalar@mo+1)^0,c
 38501  008834  0E01               	movlw	1
 38502  008836  6E28               	movwf	ymd_to_scalar@mo^0,c
 38503  008838  0E00               	movlw	0
 38504  00883A  6E2B               	movwf	(ymd_to_scalar@day+1)^0,c
 38505  00883C  0E01               	movlw	1
 38506  00883E  6E2A               	movwf	ymd_to_scalar@day^0,c
 38507  008840  ECAA  F05B         	call	_ymd_to_scalar	;wreg free
 38508  008844  5026               	movf	?_ymd_to_scalar^0,w,c
 38509  008846  0100               	movlb	0	; () banked
 38510  008848  5F60               	subwf	mktime@tt& (0+255),f,b
 38511  00884A  5027               	movf	(?_ymd_to_scalar+1)^0,w,c
 38512  00884C  5B61               	subwfb	(mktime@tt+1)& (0+255),f,b
 38513  00884E  5028               	movf	(?_ymd_to_scalar+2)^0,w,c
 38514  008850  5B62               	subwfb	(mktime@tt+2)& (0+255),f,b
 38515  008852  5029               	movf	(?_ymd_to_scalar+3)^0,w,c
 38516  008854  5B63               	subwfb	(mktime@tt+3)& (0+255),f,b
 38517                           
 38518                           ; BSR set to: 0
 38519  008856  5036               	movf	mktime@timeptr^0,w,c
 38520  008858  6ED9               	movwf	fsr2l,c
 38521  00885A  6ADA               	clrf	fsr2h,c
 38522  00885C  0E04               	movlw	4
 38523  00885E  26D9               	addwf	fsr2l,f,c
 38524  008860  CFDE F03A          	movff	postinc2,??_mktime
 38525  008864  CFDD F03B          	movff	postdec2,??_mktime+1
 38526  008868  C03A  F03C         	movff	??_mktime,??_mktime+2
 38527  00886C  C03B  F03D         	movff	??_mktime+1,??_mktime+3
 38528  008870  0E00               	movlw	0
 38529  008872  BE3D               	btfsc	(??_mktime+3)^0,7,c
 38530  008874  0EFF               	movlw	255
 38531  008876  6E3E               	movwf	(??_mktime+4)^0,c
 38532  008878  6E3F               	movwf	(??_mktime+5)^0,c
 38533  00887A  C060  F00F         	movff	mktime@tt,___lmul@multiplier
 38534  00887E  C061  F010         	movff	mktime@tt+1,___lmul@multiplier+1
 38535  008882  C062  F011         	movff	mktime@tt+2,___lmul@multiplier+2
 38536  008886  C063  F012         	movff	mktime@tt+3,___lmul@multiplier+3
 38537  00888A  0E18               	movlw	24
 38538  00888C  6E13               	movwf	___lmul@multiplicand^0,c
 38539  00888E  0E00               	movlw	0
 38540  008890  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 38541  008892  0E00               	movlw	0
 38542  008894  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 38543  008896  0E00               	movlw	0
 38544  008898  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 38545  00889A  EC69  F066         	call	___lmul	;wreg free
 38546  00889E  503C               	movf	(??_mktime+2)^0,w,c
 38547  0088A0  240F               	addwf	?___lmul^0,w,c
 38548  0088A2  0100               	movlb	0	; () banked
 38549  0088A4  6F60               	movwf	mktime@tt& (0+255),b
 38550  0088A6  503D               	movf	(??_mktime+3)^0,w,c
 38551  0088A8  2010               	addwfc	(?___lmul+1)^0,w,c
 38552  0088AA  6F61               	movwf	(mktime@tt+1)& (0+255),b
 38553  0088AC  503E               	movf	(??_mktime+4)^0,w,c
 38554  0088AE  2011               	addwfc	(?___lmul+2)^0,w,c
 38555  0088B0  6F62               	movwf	(mktime@tt+2)& (0+255),b
 38556  0088B2  503F               	movf	(??_mktime+5)^0,w,c
 38557  0088B4  2012               	addwfc	(?___lmul+3)^0,w,c
 38558  0088B6  6F63               	movwf	(mktime@tt+3)& (0+255),b
 38559                           
 38560                           ; BSR set to: 0
 38561  0088B8  5036               	movf	mktime@timeptr^0,w,c
 38562  0088BA  6ED9               	movwf	fsr2l,c
 38563  0088BC  6ADA               	clrf	fsr2h,c
 38564  0088BE  0E02               	movlw	2
 38565  0088C0  26D9               	addwf	fsr2l,f,c
 38566  0088C2  CFDE F03A          	movff	postinc2,??_mktime
 38567  0088C6  CFDD F03B          	movff	postdec2,??_mktime+1
 38568  0088CA  C03A  F03C         	movff	??_mktime,??_mktime+2
 38569  0088CE  C03B  F03D         	movff	??_mktime+1,??_mktime+3
 38570  0088D2  0E00               	movlw	0
 38571  0088D4  BE3D               	btfsc	(??_mktime+3)^0,7,c
 38572  0088D6  0EFF               	movlw	255
 38573  0088D8  6E3E               	movwf	(??_mktime+4)^0,c
 38574  0088DA  6E3F               	movwf	(??_mktime+5)^0,c
 38575  0088DC  C060  F00F         	movff	mktime@tt,___lmul@multiplier
 38576  0088E0  C061  F010         	movff	mktime@tt+1,___lmul@multiplier+1
 38577  0088E4  C062  F011         	movff	mktime@tt+2,___lmul@multiplier+2
 38578  0088E8  C063  F012         	movff	mktime@tt+3,___lmul@multiplier+3
 38579  0088EC  0E3C               	movlw	60
 38580  0088EE  6E13               	movwf	___lmul@multiplicand^0,c
 38581  0088F0  0E00               	movlw	0
 38582  0088F2  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 38583  0088F4  0E00               	movlw	0
 38584  0088F6  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 38585  0088F8  0E00               	movlw	0
 38586  0088FA  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 38587  0088FC  EC69  F066         	call	___lmul	;wreg free
 38588  008900  503C               	movf	(??_mktime+2)^0,w,c
 38589  008902  240F               	addwf	?___lmul^0,w,c
 38590  008904  0100               	movlb	0	; () banked
 38591  008906  6F60               	movwf	mktime@tt& (0+255),b
 38592  008908  503D               	movf	(??_mktime+3)^0,w,c
 38593  00890A  2010               	addwfc	(?___lmul+1)^0,w,c
 38594  00890C  6F61               	movwf	(mktime@tt+1)& (0+255),b
 38595  00890E  503E               	movf	(??_mktime+4)^0,w,c
 38596  008910  2011               	addwfc	(?___lmul+2)^0,w,c
 38597  008912  6F62               	movwf	(mktime@tt+2)& (0+255),b
 38598  008914  503F               	movf	(??_mktime+5)^0,w,c
 38599  008916  2012               	addwfc	(?___lmul+3)^0,w,c
 38600  008918  6F63               	movwf	(mktime@tt+3)& (0+255),b
 38601                           
 38602                           ; BSR set to: 0
 38603  00891A  5036               	movf	mktime@timeptr^0,w,c
 38604  00891C  6ED9               	movwf	fsr2l,c
 38605  00891E  6ADA               	clrf	fsr2h,c
 38606  008920  CFDE F03A          	movff	postinc2,??_mktime
 38607  008924  CFDD F03B          	movff	postdec2,??_mktime+1
 38608  008928  C03A  F03C         	movff	??_mktime,??_mktime+2
 38609  00892C  C03B  F03D         	movff	??_mktime+1,??_mktime+3
 38610  008930  0E00               	movlw	0
 38611  008932  BE3D               	btfsc	(??_mktime+3)^0,7,c
 38612  008934  0EFF               	movlw	255
 38613  008936  6E3E               	movwf	(??_mktime+4)^0,c
 38614  008938  6E3F               	movwf	(??_mktime+5)^0,c
 38615  00893A  C060  F00F         	movff	mktime@tt,___lmul@multiplier
 38616  00893E  C061  F010         	movff	mktime@tt+1,___lmul@multiplier+1
 38617  008942  C062  F011         	movff	mktime@tt+2,___lmul@multiplier+2
 38618  008946  C063  F012         	movff	mktime@tt+3,___lmul@multiplier+3
 38619  00894A  0E3C               	movlw	60
 38620  00894C  6E13               	movwf	___lmul@multiplicand^0,c
 38621  00894E  0E00               	movlw	0
 38622  008950  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 38623  008952  0E00               	movlw	0
 38624  008954  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 38625  008956  0E00               	movlw	0
 38626  008958  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 38627  00895A  EC69  F066         	call	___lmul	;wreg free
 38628  00895E  503C               	movf	(??_mktime+2)^0,w,c
 38629  008960  240F               	addwf	?___lmul^0,w,c
 38630  008962  0100               	movlb	0	; () banked
 38631  008964  6F60               	movwf	mktime@tt& (0+255),b
 38632  008966  503D               	movf	(??_mktime+3)^0,w,c
 38633  008968  2010               	addwfc	(?___lmul+1)^0,w,c
 38634  00896A  6F61               	movwf	(mktime@tt+1)& (0+255),b
 38635  00896C  503E               	movf	(??_mktime+4)^0,w,c
 38636  00896E  2011               	addwfc	(?___lmul+2)^0,w,c
 38637  008970  6F62               	movwf	(mktime@tt+2)& (0+255),b
 38638  008972  503F               	movf	(??_mktime+5)^0,w,c
 38639  008974  2012               	addwfc	(?___lmul+3)^0,w,c
 38640  008976  6F63               	movwf	(mktime@tt+3)& (0+255),b
 38641  008978                     l31087:
 38642                           
 38643                           ; BSR set to: 0
 38644  008978  C060  F036         	movff	mktime@tt,?_mktime
 38645  00897C  C061  F037         	movff	mktime@tt+1,?_mktime+1
 38646  008980  C062  F038         	movff	mktime@tt+2,?_mktime+2
 38647  008984  C063  F039         	movff	mktime@tt+3,?_mktime+3
 38648                           
 38649                           ; BSR set to: 0
 38650  008988  0012               	return		;funcret
 38651  00898A                     __end_of_mktime:
 38652                           	callstack 0
 38653                           
 38654 ;; *************** function _ymd_to_scalar *****************
 38655 ;; Defined at:
 38656 ;;		line 40 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 38657 ;; Parameters:    Size  Location     Type
 38658 ;;  yr              2   37[COMRAM] unsigned int 
 38659 ;;  mo              2   39[COMRAM] unsigned int 
 38660 ;;  day             2   41[COMRAM] unsigned int 
 38661 ;; Auto vars:     Size  Location     Type
 38662 ;;  scalar          4   49[COMRAM] long 
 38663 ;; Return value:  Size  Location     Type
 38664 ;;                  4   37[COMRAM] long 
 38665 ;; Registers used:
 38666 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 38667 ;; Tracked objects:
 38668 ;;		On entry : 0/0
 38669 ;;		On exit  : 0/0
 38670 ;;		Unchanged: 0/0
 38671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38672 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38673 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38675 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38676 ;;Total ram usage:       16 bytes
 38677 ;; Hardware stack levels used: 1
 38678 ;; Hardware stack levels required when called: 6
 38679 ;; This function calls:
 38680 ;;		_isleap
 38681 ;;		_months_to_days
 38682 ;;		_years_to_days
 38683 ;; This function is called by:
 38684 ;;		_mktime
 38685 ;; This function uses a non-reentrant model
 38686 ;;
 38687                           
 38688                           	psect	text186
 38689  00B754                     __ptext186:
 38690                           	callstack 0
 38691  00B754                     _ymd_to_scalar:
 38692                           	callstack 18
 38693                           
 38694                           ; BSR set to: 0
 38695                           ;incstack = 0
 38696  00B754  C028  F01C         	movff	ymd_to_scalar@mo,months_to_days@month
 38697  00B758  C029  F01D         	movff	ymd_to_scalar@mo+1,months_to_days@month+1
 38698  00B75C  EC98  F06B         	call	_months_to_days	;wreg free
 38699  00B760  502A               	movf	ymd_to_scalar@day^0,w,c
 38700  00B762  261C               	addwf	?_months_to_days^0,f,c
 38701  00B764  502B               	movf	(ymd_to_scalar@day+1)^0,w,c
 38702  00B766  221D               	addwfc	(?_months_to_days+1)^0,f,c
 38703  00B768  C01C  F032         	movff	?_months_to_days,ymd_to_scalar@scalar
 38704  00B76C  C01D  F033         	movff	?_months_to_days+1,ymd_to_scalar@scalar+1
 38705  00B770  6A34               	clrf	(ymd_to_scalar@scalar+2)^0,c
 38706  00B772  6A35               	clrf	(ymd_to_scalar@scalar+3)^0,c
 38707  00B774  5029               	movf	(ymd_to_scalar@mo+1)^0,w,c
 38708  00B776  E104               	bnz	u38800
 38709  00B778  0E03               	movlw	3
 38710  00B77A  5C28               	subwf	ymd_to_scalar@mo^0,w,c
 38711  00B77C  A0D8               	btfss	status,0,c
 38712  00B77E  D023               	goto	l31015
 38713  00B780                     u38800:
 38714  00B780  C026  F014         	movff	ymd_to_scalar@yr,isleap@yr
 38715  00B784  C027  F015         	movff	ymd_to_scalar@yr+1,isleap@yr+1
 38716  00B788  ECBE  F066         	call	_isleap	;wreg free
 38717  00B78C  5014               	movf	?_isleap^0,w,c
 38718  00B78E  1015               	iorwf	(?_isleap+1)^0,w,c
 38719  00B790  A4D8               	btfss	status,2,c
 38720  00B792  D004               	goto	l31011
 38721  00B794  0E00               	movlw	0
 38722  00B796  6E31               	movwf	(_ymd_to_scalar$8868+1)^0,c
 38723  00B798  0E02               	movlw	2
 38724  00B79A  D003               	goto	L90
 38725  00B79C                     l31011:
 38726  00B79C  0E00               	movlw	0
 38727  00B79E  6E31               	movwf	(_ymd_to_scalar$8868+1)^0,c
 38728  00B7A0  0E01               	movlw	1
 38729  00B7A2                     L90:
 38730  00B7A2  6E30               	movwf	_ymd_to_scalar$8868^0,c
 38731  00B7A4  C030  F02C         	movff	_ymd_to_scalar$8868,??_ymd_to_scalar
 38732  00B7A8  C031  F02D         	movff	_ymd_to_scalar$8868+1,??_ymd_to_scalar+1
 38733  00B7AC  0E00               	movlw	0
 38734  00B7AE  BE2D               	btfsc	(??_ymd_to_scalar+1)^0,7,c
 38735  00B7B0  0EFF               	movlw	255
 38736  00B7B2  6E2E               	movwf	(??_ymd_to_scalar+2)^0,c
 38737  00B7B4  6E2F               	movwf	(??_ymd_to_scalar+3)^0,c
 38738  00B7B6  502C               	movf	??_ymd_to_scalar^0,w,c
 38739  00B7B8  5E32               	subwf	ymd_to_scalar@scalar^0,f,c
 38740  00B7BA  502D               	movf	(??_ymd_to_scalar+1)^0,w,c
 38741  00B7BC  5A33               	subwfb	(ymd_to_scalar@scalar+1)^0,f,c
 38742  00B7BE  502E               	movf	(??_ymd_to_scalar+2)^0,w,c
 38743  00B7C0  5A34               	subwfb	(ymd_to_scalar@scalar+2)^0,f,c
 38744  00B7C2  502F               	movf	(??_ymd_to_scalar+3)^0,w,c
 38745  00B7C4  5A35               	subwfb	(ymd_to_scalar@scalar+3)^0,f,c
 38746  00B7C6                     l31015:
 38747  00B7C6  0626               	decf	ymd_to_scalar@yr^0,f,c
 38748  00B7C8  A0D8               	btfss	status,0,c
 38749  00B7CA  0627               	decf	(ymd_to_scalar@yr+1)^0,f,c
 38750  00B7CC  C026  F01C         	movff	ymd_to_scalar@yr,years_to_days@yr
 38751  00B7D0  C027  F01D         	movff	ymd_to_scalar@yr+1,years_to_days@yr+1
 38752  00B7D4  ECFD  F05B         	call	_years_to_days	;wreg free
 38753  00B7D8  501C               	movf	?_years_to_days^0,w,c
 38754  00B7DA  2632               	addwf	ymd_to_scalar@scalar^0,f,c
 38755  00B7DC  501D               	movf	(?_years_to_days+1)^0,w,c
 38756  00B7DE  2233               	addwfc	(ymd_to_scalar@scalar+1)^0,f,c
 38757  00B7E0  501E               	movf	(?_years_to_days+2)^0,w,c
 38758  00B7E2  2234               	addwfc	(ymd_to_scalar@scalar+2)^0,f,c
 38759  00B7E4  501F               	movf	(?_years_to_days+3)^0,w,c
 38760  00B7E6  2235               	addwfc	(ymd_to_scalar@scalar+3)^0,f,c
 38761  00B7E8  C032  F026         	movff	ymd_to_scalar@scalar,?_ymd_to_scalar
 38762  00B7EC  C033  F027         	movff	ymd_to_scalar@scalar+1,?_ymd_to_scalar+1
 38763  00B7F0  C034  F028         	movff	ymd_to_scalar@scalar+2,?_ymd_to_scalar+2
 38764  00B7F4  C035  F029         	movff	ymd_to_scalar@scalar+3,?_ymd_to_scalar+3
 38765  00B7F8  0012               	return		;funcret
 38766  00B7FA                     __end_of_ymd_to_scalar:
 38767                           	callstack 0
 38768                           
 38769 ;; *************** function _years_to_days *****************
 38770 ;; Defined at:
 38771 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 38772 ;; Parameters:    Size  Location     Type
 38773 ;;  yr              2   27[COMRAM] unsigned int 
 38774 ;; Auto vars:     Size  Location     Type
 38775 ;;  ret             4   33[COMRAM] long 
 38776 ;; Return value:  Size  Location     Type
 38777 ;;                  4   27[COMRAM] long 
 38778 ;; Registers used:
 38779 ;;		wreg, status,2, status,0, cstack
 38780 ;; Tracked objects:
 38781 ;;		On entry : 0/0
 38782 ;;		On exit  : 0/0
 38783 ;;		Unchanged: 0/0
 38784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38786 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38788 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38789 ;;Total ram usage:       10 bytes
 38790 ;; Hardware stack levels used: 1
 38791 ;; Hardware stack levels required when called: 5
 38792 ;; This function calls:
 38793 ;;		___lmul
 38794 ;;		___lwdiv
 38795 ;; This function is called by:
 38796 ;;		_ymd_to_scalar
 38797 ;; This function uses a non-reentrant model
 38798 ;;
 38799                           
 38800                           	psect	text187
 38801  00B7FA                     __ptext187:
 38802                           	callstack 0
 38803  00B7FA                     _years_to_days:
 38804                           	callstack 18
 38805                           
 38806                           ;incstack = 0
 38807  00B7FA  C01C  F00F         	movff	years_to_days@yr,___lmul@multiplier
 38808  00B7FE  C01D  F010         	movff	years_to_days@yr+1,___lmul@multiplier+1
 38809  00B802  6A11               	clrf	(___lmul@multiplier+2)^0,c
 38810  00B804  6A12               	clrf	(___lmul@multiplier+3)^0,c
 38811  00B806  0E6D               	movlw	109
 38812  00B808  6E13               	movwf	___lmul@multiplicand^0,c
 38813  00B80A  0E01               	movlw	1
 38814  00B80C  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 38815  00B80E  0E00               	movlw	0
 38816  00B810  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 38817  00B812  0E00               	movlw	0
 38818  00B814  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 38819  00B816  EC69  F066         	call	___lmul	;wreg free
 38820  00B81A  C00F  F022         	movff	?___lmul,years_to_days@ret
 38821  00B81E  C010  F023         	movff	?___lmul+1,years_to_days@ret+1
 38822  00B822  C011  F024         	movff	?___lmul+2,years_to_days@ret+2
 38823  00B826  C012  F025         	movff	?___lmul+3,years_to_days@ret+3
 38824  00B82A  C01C  F015         	movff	years_to_days@yr,___lwdiv@dividend
 38825  00B82E  C01D  F016         	movff	years_to_days@yr+1,___lwdiv@dividend+1
 38826  00B832  0E00               	movlw	0
 38827  00B834  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 38828  00B836  0E64               	movlw	100
 38829  00B838  6E17               	movwf	___lwdiv@divisor^0,c
 38830  00B83A  ECE8  F066         	call	___lwdiv	;wreg free
 38831  00B83E  C01C  F020         	movff	years_to_days@yr,??_years_to_days
 38832  00B842  C01D  F021         	movff	years_to_days@yr+1,??_years_to_days+1
 38833  00B846  90D8               	bcf	status,0,c
 38834  00B848  3221               	rrcf	(??_years_to_days+1)^0,f,c
 38835  00B84A  3220               	rrcf	??_years_to_days^0,f,c
 38836  00B84C  90D8               	bcf	status,0,c
 38837  00B84E  3221               	rrcf	(??_years_to_days+1)^0,f,c
 38838  00B850  3220               	rrcf	??_years_to_days^0,f,c
 38839  00B852  5015               	movf	?___lwdiv^0,w,c
 38840  00B854  5E20               	subwf	??_years_to_days^0,f,c
 38841  00B856  5016               	movf	(?___lwdiv+1)^0,w,c
 38842  00B858  5A21               	subwfb	(??_years_to_days+1)^0,f,c
 38843  00B85A  5020               	movf	??_years_to_days^0,w,c
 38844  00B85C  2622               	addwf	years_to_days@ret^0,f,c
 38845  00B85E  5021               	movf	(??_years_to_days+1)^0,w,c
 38846  00B860  2223               	addwfc	(years_to_days@ret+1)^0,f,c
 38847  00B862  0E00               	movlw	0
 38848  00B864  2224               	addwfc	(years_to_days@ret+2)^0,f,c
 38849  00B866  0E00               	movlw	0
 38850  00B868  2225               	addwfc	(years_to_days@ret+3)^0,f,c
 38851  00B86A  C01C  F015         	movff	years_to_days@yr,___lwdiv@dividend
 38852  00B86E  C01D  F016         	movff	years_to_days@yr+1,___lwdiv@dividend+1
 38853  00B872  0E01               	movlw	1
 38854  00B874  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 38855  00B876  0E90               	movlw	144
 38856  00B878  6E17               	movwf	___lwdiv@divisor^0,c
 38857  00B87A  ECE8  F066         	call	___lwdiv	;wreg free
 38858  00B87E  5015               	movf	?___lwdiv^0,w,c
 38859  00B880  2622               	addwf	years_to_days@ret^0,f,c
 38860  00B882  5016               	movf	(?___lwdiv+1)^0,w,c
 38861  00B884  2223               	addwfc	(years_to_days@ret+1)^0,f,c
 38862  00B886  0E00               	movlw	0
 38863  00B888  2224               	addwfc	(years_to_days@ret+2)^0,f,c
 38864  00B88A  0E00               	movlw	0
 38865  00B88C  2225               	addwfc	(years_to_days@ret+3)^0,f,c
 38866  00B88E  C022  F01C         	movff	years_to_days@ret,?_years_to_days
 38867  00B892  C023  F01D         	movff	years_to_days@ret+1,?_years_to_days+1
 38868  00B896  C024  F01E         	movff	years_to_days@ret+2,?_years_to_days+2
 38869  00B89A  C025  F01F         	movff	years_to_days@ret+3,?_years_to_days+3
 38870  00B89E  0012               	return		;funcret
 38871  00B8A0                     __end_of_years_to_days:
 38872                           	callstack 0
 38873                           
 38874 ;; *************** function ___lmul *****************
 38875 ;; Defined at:
 38876 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
 38877 ;; Parameters:    Size  Location     Type
 38878 ;;  multiplier      4   14[COMRAM] unsigned long 
 38879 ;;  multiplicand    4   18[COMRAM] unsigned long 
 38880 ;; Auto vars:     Size  Location     Type
 38881 ;;  product         4   22[COMRAM] unsigned long 
 38882 ;; Return value:  Size  Location     Type
 38883 ;;                  4   14[COMRAM] unsigned long 
 38884 ;; Registers used:
 38885 ;;		wreg, status,2, status,0
 38886 ;; Tracked objects:
 38887 ;;		On entry : 0/1
 38888 ;;		On exit  : 0/0
 38889 ;;		Unchanged: 0/0
 38890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38891 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38892 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38894 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38895 ;;Total ram usage:       12 bytes
 38896 ;; Hardware stack levels used: 1
 38897 ;; Hardware stack levels required when called: 4
 38898 ;; This function calls:
 38899 ;;		Nothing
 38900 ;; This function is called by:
 38901 ;;		_modbus_check_event
 38902 ;;		__atoi
 38903 ;;		__itoa
 38904 ;;		_years_to_days
 38905 ;;		_mktime
 38906 ;; This function uses a non-reentrant model
 38907 ;;
 38908                           
 38909                           	psect	text188
 38910  00CCD2                     __ptext188:
 38911                           	callstack 0
 38912  00CCD2                     ___lmul:
 38913                           	callstack 23
 38914                           
 38915                           ;incstack = 0
 38916  00CCD2  0E00               	movlw	0
 38917  00CCD4  6E17               	movwf	___lmul@product^0,c
 38918  00CCD6  0E00               	movlw	0
 38919  00CCD8  6E18               	movwf	(___lmul@product+1)^0,c
 38920  00CCDA  0E00               	movlw	0
 38921  00CCDC  6E19               	movwf	(___lmul@product+2)^0,c
 38922  00CCDE  0E00               	movlw	0
 38923  00CCE0  6E1A               	movwf	(___lmul@product+3)^0,c
 38924  00CCE2                     l16797:
 38925  00CCE2  A00F               	btfss	___lmul@multiplier^0,0,c
 38926  00CCE4  D008               	goto	l16801
 38927  00CCE6  5013               	movf	___lmul@multiplicand^0,w,c
 38928  00CCE8  2617               	addwf	___lmul@product^0,f,c
 38929  00CCEA  5014               	movf	(___lmul@multiplicand+1)^0,w,c
 38930  00CCEC  2218               	addwfc	(___lmul@product+1)^0,f,c
 38931  00CCEE  5015               	movf	(___lmul@multiplicand+2)^0,w,c
 38932  00CCF0  2219               	addwfc	(___lmul@product+2)^0,f,c
 38933  00CCF2  5016               	movf	(___lmul@multiplicand+3)^0,w,c
 38934  00CCF4  221A               	addwfc	(___lmul@product+3)^0,f,c
 38935  00CCF6                     l16801:
 38936  00CCF6  90D8               	bcf	status,0,c
 38937  00CCF8  3613               	rlcf	___lmul@multiplicand^0,f,c
 38938  00CCFA  3614               	rlcf	(___lmul@multiplicand+1)^0,f,c
 38939  00CCFC  3615               	rlcf	(___lmul@multiplicand+2)^0,f,c
 38940  00CCFE  3616               	rlcf	(___lmul@multiplicand+3)^0,f,c
 38941  00CD00  90D8               	bcf	status,0,c
 38942  00CD02  3212               	rrcf	(___lmul@multiplier+3)^0,f,c
 38943  00CD04  3211               	rrcf	(___lmul@multiplier+2)^0,f,c
 38944  00CD06  3210               	rrcf	(___lmul@multiplier+1)^0,f,c
 38945  00CD08  320F               	rrcf	___lmul@multiplier^0,f,c
 38946  00CD0A  500F               	movf	___lmul@multiplier^0,w,c
 38947  00CD0C  1010               	iorwf	(___lmul@multiplier+1)^0,w,c
 38948  00CD0E  1011               	iorwf	(___lmul@multiplier+2)^0,w,c
 38949  00CD10  1012               	iorwf	(___lmul@multiplier+3)^0,w,c
 38950  00CD12  A4D8               	btfss	status,2,c
 38951  00CD14  D7E6               	goto	l16797
 38952  00CD16  C017  F00F         	movff	___lmul@product,?___lmul
 38953  00CD1A  C018  F010         	movff	___lmul@product+1,?___lmul+1
 38954  00CD1E  C019  F011         	movff	___lmul@product+2,?___lmul+2
 38955  00CD22  C01A  F012         	movff	___lmul@product+3,?___lmul+3
 38956  00CD26  0012               	return		;funcret
 38957  00CD28                     __end_of___lmul:
 38958                           	callstack 0
 38959                           
 38960 ;; *************** function _months_to_days *****************
 38961 ;; Defined at:
 38962 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 38963 ;; Parameters:    Size  Location     Type
 38964 ;;  month           2   27[COMRAM] unsigned int 
 38965 ;; Auto vars:     Size  Location     Type
 38966 ;;		None
 38967 ;; Return value:  Size  Location     Type
 38968 ;;                  2   27[COMRAM] unsigned int 
 38969 ;; Registers used:
 38970 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 38971 ;; Tracked objects:
 38972 ;;		On entry : 0/0
 38973 ;;		On exit  : 0/0
 38974 ;;		Unchanged: 0/0
 38975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38980 ;;Total ram usage:        2 bytes
 38981 ;; Hardware stack levels used: 1
 38982 ;; Hardware stack levels required when called: 5
 38983 ;; This function calls:
 38984 ;;		___lwdiv
 38985 ;;		___wmul
 38986 ;; This function is called by:
 38987 ;;		_ymd_to_scalar
 38988 ;; This function uses a non-reentrant model
 38989 ;;
 38990                           
 38991                           	psect	text189
 38992  00D730                     __ptext189:
 38993                           	callstack 0
 38994  00D730                     _months_to_days:
 38995                           	callstack 18
 38996                           
 38997                           ;incstack = 0
 38998  00D730  C01C  F00F         	movff	months_to_days@month,___wmul@multiplier
 38999  00D734  C01D  F010         	movff	months_to_days@month+1,___wmul@multiplier+1
 39000  00D738  0E0B               	movlw	11
 39001  00D73A  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 39002  00D73C  0EF1               	movlw	241
 39003  00D73E  6E11               	movwf	___wmul@multiplicand^0,c
 39004  00D740  ECCC  F06D         	call	___wmul	;wreg free
 39005  00D744  0E41               	movlw	65
 39006  00D746  240F               	addwf	?___wmul^0,w,c
 39007  00D748  6E15               	movwf	___lwdiv@dividend^0,c
 39008  00D74A  0EF4               	movlw	244
 39009  00D74C  2010               	addwfc	(?___wmul+1)^0,w,c
 39010  00D74E  6E16               	movwf	(___lwdiv@dividend+1)^0,c
 39011  00D750  0E00               	movlw	0
 39012  00D752  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 39013  00D754  0E64               	movlw	100
 39014  00D756  6E17               	movwf	___lwdiv@divisor^0,c
 39015  00D758  ECE8  F066         	call	___lwdiv	;wreg free
 39016  00D75C  C015  F01C         	movff	?___lwdiv,?_months_to_days
 39017  00D760  C016  F01D         	movff	?___lwdiv+1,?_months_to_days+1
 39018  00D764  0012               	return		;funcret
 39019  00D766                     __end_of_months_to_days:
 39020                           	callstack 0
 39021                           
 39022 ;; *************** function ___wmul *****************
 39023 ;; Defined at:
 39024 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
 39025 ;; Parameters:    Size  Location     Type
 39026 ;;  multiplier      2   14[COMRAM] unsigned int 
 39027 ;;  multiplicand    2   16[COMRAM] unsigned int 
 39028 ;; Auto vars:     Size  Location     Type
 39029 ;;  product         2   18[COMRAM] unsigned int 
 39030 ;; Return value:  Size  Location     Type
 39031 ;;                  2   14[COMRAM] unsigned int 
 39032 ;; Registers used:
 39033 ;;		wreg, status,2, status,0, prodl, prodh
 39034 ;; Tracked objects:
 39035 ;;		On entry : 0/0
 39036 ;;		On exit  : 0/0
 39037 ;;		Unchanged: 0/0
 39038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39039 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39043 ;;Total ram usage:        6 bytes
 39044 ;; Hardware stack levels used: 1
 39045 ;; Hardware stack levels required when called: 4
 39046 ;; This function calls:
 39047 ;;		Nothing
 39048 ;; This function is called by:
 39049 ;;		_modbusParseRequest
 39050 ;;		_build_time
 39051 ;;		_sprintf
 39052 ;;		_months_to_days
 39053 ;; This function uses a non-reentrant model
 39054 ;;
 39055                           
 39056                           	psect	text190
 39057  00DB98                     __ptext190:
 39058                           	callstack 0
 39059  00DB98                     ___wmul:
 39060                           	callstack 23
 39061                           
 39062                           ;incstack = 0
 39063  00DB98  500F               	movf	___wmul@multiplier^0,w,c
 39064  00DB9A  0211               	mulwf	___wmul@multiplicand^0,c
 39065  00DB9C  CFF3 F013          	movff	prodl,___wmul@product
 39066  00DBA0  CFF4 F014          	movff	prodh,___wmul@product+1
 39067  00DBA4  500F               	movf	___wmul@multiplier^0,w,c
 39068  00DBA6  0212               	mulwf	(___wmul@multiplicand+1)^0,c
 39069  00DBA8  50F3               	movf	243,w,c
 39070  00DBAA  2614               	addwf	(___wmul@product+1)^0,f,c
 39071  00DBAC  5010               	movf	(___wmul@multiplier+1)^0,w,c
 39072  00DBAE  0211               	mulwf	___wmul@multiplicand^0,c
 39073  00DBB0  50F3               	movf	243,w,c
 39074  00DBB2  2614               	addwf	(___wmul@product+1)^0,f,c
 39075  00DBB4  C013  F00F         	movff	___wmul@product,?___wmul
 39076  00DBB8  C014  F010         	movff	___wmul@product+1,?___wmul+1
 39077  00DBBC  0012               	return		;funcret
 39078  00DBBE                     __end_of___wmul:
 39079                           	callstack 0
 39080                           
 39081 ;; *************** function ___lwdiv *****************
 39082 ;; Defined at:
 39083 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
 39084 ;; Parameters:    Size  Location     Type
 39085 ;;  dividend        2   20[COMRAM] unsigned int 
 39086 ;;  divisor         2   22[COMRAM] unsigned int 
 39087 ;; Auto vars:     Size  Location     Type
 39088 ;;  quotient        2   25[COMRAM] unsigned int 
 39089 ;;  counter         1   24[COMRAM] unsigned char 
 39090 ;; Return value:  Size  Location     Type
 39091 ;;                  2   20[COMRAM] unsigned int 
 39092 ;; Registers used:
 39093 ;;		wreg, status,2, status,0
 39094 ;; Tracked objects:
 39095 ;;		On entry : 0/0
 39096 ;;		On exit  : 0/0
 39097 ;;		Unchanged: 0/0
 39098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39100 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39102 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39103 ;;Total ram usage:        7 bytes
 39104 ;; Hardware stack levels used: 1
 39105 ;; Hardware stack levels required when called: 4
 39106 ;; This function calls:
 39107 ;;		Nothing
 39108 ;; This function is called by:
 39109 ;;		_months_to_days
 39110 ;;		_years_to_days
 39111 ;; This function uses a non-reentrant model
 39112 ;;
 39113                           
 39114                           	psect	text191
 39115  00CDD0                     __ptext191:
 39116                           	callstack 0
 39117  00CDD0                     ___lwdiv:
 39118                           	callstack 18
 39119                           
 39120                           ;incstack = 0
 39121  00CDD0  0E00               	movlw	0
 39122  00CDD2  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
 39123  00CDD4  0E00               	movlw	0
 39124  00CDD6  6E1A               	movwf	___lwdiv@quotient^0,c
 39125  00CDD8  5017               	movf	___lwdiv@divisor^0,w,c
 39126  00CDDA  1018               	iorwf	(___lwdiv@divisor+1)^0,w,c
 39127  00CDDC  B4D8               	btfsc	status,2,c
 39128  00CDDE  D01C               	goto	l3316
 39129  00CDE0  0E01               	movlw	1
 39130  00CDE2  6E19               	movwf	___lwdiv@counter^0,c
 39131  00CDE4  D004               	goto	l16813
 39132  00CDE6                     l16811:
 39133  00CDE6  90D8               	bcf	status,0,c
 39134  00CDE8  3617               	rlcf	___lwdiv@divisor^0,f,c
 39135  00CDEA  3618               	rlcf	(___lwdiv@divisor+1)^0,f,c
 39136  00CDEC  2A19               	incf	___lwdiv@counter^0,f,c
 39137  00CDEE                     l16813:
 39138  00CDEE  AE18               	btfss	(___lwdiv@divisor+1)^0,7,c
 39139  00CDF0  D7FA               	goto	l16811
 39140  00CDF2                     u18390:
 39141  00CDF2  90D8               	bcf	status,0,c
 39142  00CDF4  361A               	rlcf	___lwdiv@quotient^0,f,c
 39143  00CDF6  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 39144  00CDF8  5017               	movf	___lwdiv@divisor^0,w,c
 39145  00CDFA  5C15               	subwf	___lwdiv@dividend^0,w,c
 39146  00CDFC  5018               	movf	(___lwdiv@divisor+1)^0,w,c
 39147  00CDFE  5816               	subwfb	(___lwdiv@dividend+1)^0,w,c
 39148  00CE00  A0D8               	btfss	status,0,c
 39149  00CE02  D005               	goto	l16823
 39150  00CE04  5017               	movf	___lwdiv@divisor^0,w,c
 39151  00CE06  5E15               	subwf	___lwdiv@dividend^0,f,c
 39152  00CE08  5018               	movf	(___lwdiv@divisor+1)^0,w,c
 39153  00CE0A  5A16               	subwfb	(___lwdiv@dividend+1)^0,f,c
 39154  00CE0C  801A               	bsf	___lwdiv@quotient^0,0,c
 39155  00CE0E                     l16823:
 39156  00CE0E  90D8               	bcf	status,0,c
 39157  00CE10  3218               	rrcf	(___lwdiv@divisor+1)^0,f,c
 39158  00CE12  3217               	rrcf	___lwdiv@divisor^0,f,c
 39159  00CE14  2E19               	decfsz	___lwdiv@counter^0,f,c
 39160  00CE16  D7ED               	goto	u18390
 39161  00CE18                     l3316:
 39162  00CE18  C01A  F015         	movff	___lwdiv@quotient,?___lwdiv
 39163  00CE1C  C01B  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
 39164  00CE20  0012               	return		;funcret
 39165  00CE22                     __end_of___lwdiv:
 39166                           	callstack 0
 39167                           
 39168 ;; *************** function _isleap *****************
 39169 ;; Defined at:
 39170 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 39171 ;; Parameters:    Size  Location     Type
 39172 ;;  yr              2   19[COMRAM] unsigned int 
 39173 ;; Auto vars:     Size  Location     Type
 39174 ;;		None
 39175 ;; Return value:  Size  Location     Type
 39176 ;;                  2   19[COMRAM] int 
 39177 ;; Registers used:
 39178 ;;		wreg, status,2, status,0, cstack
 39179 ;; Tracked objects:
 39180 ;;		On entry : 0/0
 39181 ;;		On exit  : 0/0
 39182 ;;		Unchanged: 0/0
 39183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39188 ;;Total ram usage:        4 bytes
 39189 ;; Hardware stack levels used: 1
 39190 ;; Hardware stack levels required when called: 5
 39191 ;; This function calls:
 39192 ;;		___lwmod
 39193 ;; This function is called by:
 39194 ;;		_ymd_to_scalar
 39195 ;; This function uses a non-reentrant model
 39196 ;;
 39197                           
 39198                           	psect	text192
 39199  00CD7C                     __ptext192:
 39200                           	callstack 0
 39201  00CD7C                     _isleap:
 39202                           	callstack 18
 39203                           
 39204                           ;incstack = 0
 39205  00CD7C  0E01               	movlw	1
 39206  00CD7E  6E17               	movwf	_isleap$8855^0,c
 39207  00CD80  C014  F00F         	movff	isleap@yr,___lwmod@dividend
 39208  00CD84  C015  F010         	movff	isleap@yr+1,___lwmod@dividend+1
 39209  00CD88  0E01               	movlw	1
 39210  00CD8A  6E12               	movwf	(___lwmod@divisor+1)^0,c
 39211  00CD8C  0E90               	movlw	144
 39212  00CD8E  6E11               	movwf	___lwmod@divisor^0,c
 39213  00CD90  EC2B  F069         	call	___lwmod	;wreg free
 39214  00CD94  500F               	movf	?___lwmod^0,w,c
 39215  00CD96  1010               	iorwf	(?___lwmod+1)^0,w,c
 39216  00CD98  B4D8               	btfsc	status,2,c
 39217  00CD9A  D016               	goto	l16885
 39218  00CD9C  C014  F016         	movff	isleap@yr,??_isleap
 39219  00CDA0  0E03               	movlw	3
 39220  00CDA2  1616               	andwf	??_isleap^0,f,c
 39221  00CDA4  A4D8               	btfss	status,2,c
 39222  00CDA6  D00E               	goto	u18520
 39223  00CDA8  C014  F00F         	movff	isleap@yr,___lwmod@dividend
 39224  00CDAC  C015  F010         	movff	isleap@yr+1,___lwmod@dividend+1
 39225  00CDB0  0E00               	movlw	0
 39226  00CDB2  6E12               	movwf	(___lwmod@divisor+1)^0,c
 39227  00CDB4  0E64               	movlw	100
 39228  00CDB6  6E11               	movwf	___lwmod@divisor^0,c
 39229  00CDB8  EC2B  F069         	call	___lwmod	;wreg free
 39230  00CDBC  500F               	movf	?___lwmod^0,w,c
 39231  00CDBE  1010               	iorwf	(?___lwmod+1)^0,w,c
 39232  00CDC0  A4D8               	btfss	status,2,c
 39233  00CDC2  D002               	goto	l16885
 39234  00CDC4                     u18520:
 39235  00CDC4  0E00               	movlw	0
 39236  00CDC6  6E17               	movwf	_isleap$8855^0,c
 39237  00CDC8                     l16885:
 39238  00CDC8  C017  F014         	movff	_isleap$8855,?_isleap
 39239  00CDCC  6A15               	clrf	(?_isleap+1)^0,c
 39240  00CDCE  0012               	return		;funcret
 39241  00CDD0                     __end_of_isleap:
 39242                           	callstack 0
 39243                           
 39244 ;; *************** function ___lwmod *****************
 39245 ;; Defined at:
 39246 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
 39247 ;; Parameters:    Size  Location     Type
 39248 ;;  dividend        2   14[COMRAM] unsigned int 
 39249 ;;  divisor         2   16[COMRAM] unsigned int 
 39250 ;; Auto vars:     Size  Location     Type
 39251 ;;  counter         1   18[COMRAM] unsigned char 
 39252 ;; Return value:  Size  Location     Type
 39253 ;;                  2   14[COMRAM] unsigned int 
 39254 ;; Registers used:
 39255 ;;		wreg, status,2, status,0
 39256 ;; Tracked objects:
 39257 ;;		On entry : 0/0
 39258 ;;		On exit  : 0/0
 39259 ;;		Unchanged: 0/0
 39260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39264 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39265 ;;Total ram usage:        5 bytes
 39266 ;; Hardware stack levels used: 1
 39267 ;; Hardware stack levels required when called: 4
 39268 ;; This function calls:
 39269 ;;		Nothing
 39270 ;; This function is called by:
 39271 ;;		_isleap
 39272 ;; This function uses a non-reentrant model
 39273 ;;
 39274                           
 39275                           	psect	text193
 39276  00D256                     __ptext193:
 39277                           	callstack 0
 39278  00D256                     ___lwmod:
 39279                           	callstack 18
 39280                           
 39281                           ;incstack = 0
 39282  00D256  5011               	movf	___lwmod@divisor^0,w,c
 39283  00D258  1012               	iorwf	(___lwmod@divisor+1)^0,w,c
 39284  00D25A  B4D8               	btfsc	status,2,c
 39285  00D25C  D018               	goto	l3326
 39286  00D25E  0E01               	movlw	1
 39287  00D260  6E13               	movwf	___lwmod@counter^0,c
 39288  00D262  D004               	goto	l16833
 39289  00D264                     l16831:
 39290  00D264  90D8               	bcf	status,0,c
 39291  00D266  3611               	rlcf	___lwmod@divisor^0,f,c
 39292  00D268  3612               	rlcf	(___lwmod@divisor+1)^0,f,c
 39293  00D26A  2A13               	incf	___lwmod@counter^0,f,c
 39294  00D26C                     l16833:
 39295  00D26C  AE12               	btfss	(___lwmod@divisor+1)^0,7,c
 39296  00D26E  D7FA               	goto	l16831
 39297  00D270                     u18420:
 39298  00D270  5011               	movf	___lwmod@divisor^0,w,c
 39299  00D272  5C0F               	subwf	___lwmod@dividend^0,w,c
 39300  00D274  5012               	movf	(___lwmod@divisor+1)^0,w,c
 39301  00D276  5810               	subwfb	(___lwmod@dividend+1)^0,w,c
 39302  00D278  A0D8               	btfss	status,0,c
 39303  00D27A  D004               	goto	l16839
 39304  00D27C  5011               	movf	___lwmod@divisor^0,w,c
 39305  00D27E  5E0F               	subwf	___lwmod@dividend^0,f,c
 39306  00D280  5012               	movf	(___lwmod@divisor+1)^0,w,c
 39307  00D282  5A10               	subwfb	(___lwmod@dividend+1)^0,f,c
 39308  00D284                     l16839:
 39309  00D284  90D8               	bcf	status,0,c
 39310  00D286  3212               	rrcf	(___lwmod@divisor+1)^0,f,c
 39311  00D288  3211               	rrcf	___lwmod@divisor^0,f,c
 39312  00D28A  2E13               	decfsz	___lwmod@counter^0,f,c
 39313  00D28C  D7F1               	goto	u18420
 39314  00D28E                     l3326:
 39315  00D28E  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
 39316  00D292  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
 39317  00D296  0012               	return		;funcret
 39318  00D298                     __end_of___lwmod:
 39319                           	callstack 0
 39320                           
 39321 ;; *************** function _get_product_desc *****************
 39322 ;; Defined at:
 39323 ;;		line 272 in file "usb_descriptors.c"
 39324 ;; Parameters:    Size  Location     Type
 39325 ;;		None
 39326 ;; Auto vars:     Size  Location     Type
 39327 ;;		None
 39328 ;; Return value:  Size  Location     Type
 39329 ;;                  2   14[COMRAM] PTR unsigned int 
 39330 ;; Registers used:
 39331 ;;		wreg, status,2, status,0
 39332 ;; Tracked objects:
 39333 ;;		On entry : 0/0
 39334 ;;		On exit  : 0/0
 39335 ;;		Unchanged: 0/0
 39336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39341 ;;Total ram usage:        2 bytes
 39342 ;; Hardware stack levels used: 1
 39343 ;; Hardware stack levels required when called: 4
 39344 ;; This function calls:
 39345 ;;		Nothing
 39346 ;; This function is called by:
 39347 ;;		_nvm_init
 39348 ;; This function uses a non-reentrant model
 39349 ;;
 39350                           
 39351                           	psect	text194
 39352  00DEC8                     __ptext194:
 39353                           	callstack 0
 39354  00DEC8                     _get_product_desc:
 39355                           	callstack 24
 39356                           
 39357                           ;usb_descriptors.c: 274: return sd002.string;
 39358                           
 39359                           ;incstack = 0
 39360  00DEC8  0EC5               	movlw	low (_sd002+2)
 39361  00DECA  6E0F               	movwf	?_get_product_desc^0,c
 39362  00DECC  0E05               	movlw	high (_sd002+2)
 39363  00DECE  6E10               	movwf	(?_get_product_desc+1)^0,c
 39364  00DED0  0012               	return		;funcret
 39365  00DED2                     __end_of_get_product_desc:
 39366                           	callstack 0
 39367                           
 39368 ;; *************** function _modbus_init *****************
 39369 ;; Defined at:
 39370 ;;		line 92 in file "app_modbus.c"
 39371 ;; Parameters:    Size  Location     Type
 39372 ;;		None
 39373 ;; Auto vars:     Size  Location     Type
 39374 ;;		None
 39375 ;; Return value:  Size  Location     Type
 39376 ;;                  1    wreg      void 
 39377 ;; Registers used:
 39378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39379 ;; Tracked objects:
 39380 ;;		On entry : 0/1
 39381 ;;		On exit  : 0/0
 39382 ;;		Unchanged: 0/0
 39383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39388 ;;Total ram usage:        0 bytes
 39389 ;; Hardware stack levels used: 1
 39390 ;; Hardware stack levels required when called: 7
 39391 ;; This function calls:
 39392 ;;		_modbusMasterInit
 39393 ;;		_modbusSlaveInit
 39394 ;;		_modbus_get_baudrate
 39395 ;;		_modbus_get_timeout
 39396 ;;		_modbus_set_register
 39397 ;;		_rs485_init
 39398 ;; This function is called by:
 39399 ;;		_modbus_master_task
 39400 ;;		_modbus_slave_task
 39401 ;;		_Board_initialize
 39402 ;; This function uses a non-reentrant model
 39403 ;;
 39404                           
 39405                           	psect	text195
 39406  00B606                     __ptext195:
 39407                           	callstack 0
 39408  00B606                     _modbus_init:
 39409                           	callstack 21
 39410                           
 39411                           ;app_modbus.c: 97: g_relay_sec_count = 0;
 39412                           
 39413                           ;incstack = 0
 39414  00B606  0E00               	movlw	0
 39415  00B608  0100               	movlb	0	; () banked
 39416  00B60A  6FE5               	movwf	(_g_relay_sec_count+1)& (0+255),b	;volatile
 39417  00B60C  0E00               	movlw	0
 39418  00B60E  6FE4               	movwf	_g_relay_sec_count& (0+255),b	;volatile
 39419                           
 39420                           ;app_modbus.c: 98: g_relay_status_count = 0;
 39421  00B610  0E00               	movlw	0
 39422  00B612  6FE3               	movwf	(_g_relay_status_count+1)& (0+255),b	;volatile
 39423  00B614  0E00               	movlw	0
 39424  00B616  6FE2               	movwf	_g_relay_status_count& (0+255),b	;volatile
 39425                           
 39426                           ;app_modbus.c: 100: g_modbus.event_flag = 0;
 39427  00B618  0E00               	movlw	0
 39428  00B61A  0101               	movlb	1	; () banked
 39429  00B61C  6F26               	movwf	(_g_modbus+2)& (0+255),b
 39430                           
 39431                           ;app_modbus.c: 101: g_modbus.fire_flag = 0;
 39432  00B61E  0E00               	movlw	0
 39433  00B620  6F27               	movwf	(_g_modbus+3)& (0+255),b
 39434                           
 39435                           ;app_modbus.c: 102: g_modbus.fire_retry = 0;
 39436  00B622  0E00               	movlw	0
 39437  00B624  6F28               	movwf	(_g_modbus+4)& (0+255),b
 39438                           
 39439                           ;app_modbus.c: 103: g_modbus.last_event = EV_NORMAL;
 39440  00B626  0E00               	movlw	0
 39441  00B628  6F2D               	movwf	(_g_modbus+9)& (0+255),b
 39442                           
 39443                           ;app_modbus.c: 104: g_modbus.event_timer = 0;
 39444  00B62A  0E00               	movlw	0
 39445  00B62C  6F29               	movwf	(_g_modbus+5)& (0+255),b
 39446  00B62E  0E00               	movlw	0
 39447  00B630  6F2A               	movwf	(_g_modbus+6)& (0+255),b
 39448  00B632  0E00               	movlw	0
 39449  00B634  6F2B               	movwf	(_g_modbus+7)& (0+255),b
 39450  00B636  0E00               	movlw	0
 39451  00B638  6F2C               	movwf	(_g_modbus+8)& (0+255),b
 39452                           
 39453                           ;app_modbus.c: 105: g_modbus.relay_status = RLY_NONE;
 39454  00B63A  0E00               	movlw	0
 39455  00B63C  6F2E               	movwf	(_g_modbus+10)& (0+255),b
 39456                           
 39457                           ;app_modbus.c: 106: g_modbus.isWarmDone = 0;
 39458  00B63E  0E00               	movlw	0
 39459  00B640  6F2F               	movwf	(_g_modbus+11)& (0+255),b
 39460                           
 39461                           ; BSR set to: 1
 39462                           ;app_modbus.c: 108: g_slave.address = g_nvm.flash.slave_id;
 39463  00B642  C161  F248         	movff	_g_nvm+15,_g_slave
 39464                           
 39465                           ; BSR set to: 1
 39466                           ;app_modbus.c: 109: g_slave.registerCallback = rcallback;
 39467  00B646  0E6E               	movlw	low _rcallback
 39468  00B648  0102               	movlb	2	; () banked
 39469  00B64A  6F49               	movwf	(_g_slave+1)& (0+255),b
 39470  00B64C  0EC3               	movlw	high _rcallback
 39471  00B64E  6F4A               	movwf	(_g_slave+2)& (0+255),b
 39472                           
 39473                           ; BSR set to: 2
 39474                           ;app_modbus.c: 110: g_slave.registerCount = (sizeof(float) * 4) / sizeof(uint16_t);
 39475  00B650  0E00               	movlw	0
 39476  00B652  6F4E               	movwf	(_g_slave+6)& (0+255),b
 39477  00B654  0E08               	movlw	8
 39478  00B656  6F4D               	movwf	(_g_slave+5)& (0+255),b
 39479                           
 39480                           ; BSR set to: 2
 39481                           ;app_modbus.c: 112: modbus_set_register((uint16_t*)g_modbus_value.word);
 39482  00B658  0EDA               	movlw	low _g_modbus_value
 39483  00B65A  6E0F               	movwf	modbus_set_register@reg^0,c
 39484  00B65C  0E02               	movlw	high _g_modbus_value
 39485  00B65E  6E10               	movwf	(modbus_set_register@reg+1)^0,c
 39486  00B660  EC69  F06F         	call	_modbus_set_register	;wreg free
 39487                           
 39488                           ; BSR set to: 2
 39489                           ;app_modbus.c: 114: modbusSlaveInit(&g_slave);
 39490  00B664  0E48               	movlw	low _g_slave
 39491  00B666  6E1D               	movwf	modbusSlaveInit@status^0,c
 39492  00B668  0E02               	movlw	high _g_slave
 39493  00B66A  6E1E               	movwf	(modbusSlaveInit@status+1)^0,c
 39494  00B66C  ECB3  F048         	call	_modbusSlaveInit	;wreg free
 39495                           
 39496                           ;app_modbus.c: 115: modbusMasterInit(&g_master);
 39497  00B670  0EB5               	movlw	low _g_master
 39498  00B672  6E1D               	movwf	modbusMasterInit@status^0,c
 39499  00B674  0E02               	movlw	high _g_master
 39500  00B676  6E1E               	movwf	(modbusMasterInit@status+1)^0,c
 39501  00B678  EC82  F04F         	call	_modbusMasterInit	;wreg free
 39502                           
 39503                           ;app_modbus.c: 117: g_swap = g_nvm.flash.byte_swap;
 39504  00B67C  C160  F0FC         	movff	_g_nvm+14,_g_swap
 39505                           
 39506                           ;app_modbus.c: 119: g_timeout_count = 0;
 39507  00B680  0E00               	movlw	0
 39508  00B682  0100               	movlb	0	; () banked
 39509  00B684  6FFB               	movwf	_g_timeout_count& (0+255),b	;volatile
 39510                           
 39511                           ; BSR set to: 0
 39512                           ;app_modbus.c: 120: g_modbus.timeout = modbus_get_timeout(g_nvm.flash.timeout);
 39513  00B686  0101               	movlb	1	; () banked
 39514  00B688  5163               	movf	(_g_nvm+17)& (0+255),w,b
 39515  00B68A  EC8B  F06E         	call	_modbus_get_timeout
 39516  00B68E  0101               	movlb	1	; () banked
 39517  00B690  6F25               	movwf	(_g_modbus+1)& (0+255),b
 39518                           
 39519                           ; BSR set to: 1
 39520                           ;app_modbus.c: 122: rs485_init(modbus_get_baudrate(g_nvm.flash.baudrate));
 39521  00B692  5162               	movf	(_g_nvm+16)& (0+255),w,b
 39522  00B694  ECB3  F06B         	call	_modbus_get_baudrate
 39523  00B698  C00F  F028         	movff	?_modbus_get_baudrate,rs485_init@baudrate
 39524  00B69C  C010  F029         	movff	?_modbus_get_baudrate+1,rs485_init@baudrate+1
 39525  00B6A0  C011  F02A         	movff	?_modbus_get_baudrate+2,rs485_init@baudrate+2
 39526  00B6A4  C012  F02B         	movff	?_modbus_get_baudrate+3,rs485_init@baudrate+3
 39527  00B6A8  EC7C  F06E         	call	_rs485_init	;wreg free
 39528  00B6AC  0012               	return		;funcret
 39529  00B6AE                     __end_of_modbus_init:
 39530                           	callstack 0
 39531                           
 39532 ;; *************** function _rs485_init *****************
 39533 ;; Defined at:
 39534 ;;		line 14 in file "bsp/rs485.c"
 39535 ;; Parameters:    Size  Location     Type
 39536 ;;  baudrate        4   39[COMRAM] unsigned long 
 39537 ;; Auto vars:     Size  Location     Type
 39538 ;;		None
 39539 ;; Return value:  Size  Location     Type
 39540 ;;                  1    wreg      void 
 39541 ;; Registers used:
 39542 ;;		wreg, status,2, status,0, cstack
 39543 ;; Tracked objects:
 39544 ;;		On entry : 0/1
 39545 ;;		On exit  : 0/0
 39546 ;;		Unchanged: 0/0
 39547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39552 ;;Total ram usage:        4 bytes
 39553 ;; Hardware stack levels used: 1
 39554 ;; Hardware stack levels required when called: 6
 39555 ;; This function calls:
 39556 ;;		_usart_init
 39557 ;; This function is called by:
 39558 ;;		_modbus_init
 39559 ;; This function uses a non-reentrant model
 39560 ;;
 39561                           
 39562                           	psect	text196
 39563  00DCF8                     __ptext196:
 39564                           	callstack 0
 39565  00DCF8                     _rs485_init:
 39566                           	callstack 21
 39567                           
 39568                           ;rs485.c: 16: TRISBbits.TRISB0 = 0;
 39569                           
 39570                           ;incstack = 0
 39571  00DCF8  9093               	bcf	147,0,c	;volatile
 39572                           
 39573                           ;rs485.c: 17: TRISBbits.TRISB1 = 0;
 39574  00DCFA  9293               	bcf	147,1,c	;volatile
 39575                           
 39576                           ;rs485.c: 19: usart_init(baudrate);
 39577  00DCFC  C028  F01C         	movff	rs485_init@baudrate,usart_init@baudrate
 39578  00DD00  C029  F01D         	movff	rs485_init@baudrate+1,usart_init@baudrate+1
 39579  00DD04  C02A  F01E         	movff	rs485_init@baudrate+2,usart_init@baudrate+2
 39580  00DD08  C02B  F01F         	movff	rs485_init@baudrate+3,usart_init@baudrate+3
 39581  00DD0C  EC7B  F061         	call	_usart_init	;wreg free
 39582                           
 39583                           ;rs485.c: 21: LATBbits.LATB1 = 0;LATBbits.LATB0 = 0;
 39584  00DD10  928A               	bcf	138,1,c	;volatile
 39585  00DD12  908A               	bcf	138,0,c	;volatile
 39586  00DD14  0012               	return		;funcret
 39587  00DD16                     __end_of_rs485_init:
 39588                           	callstack 0
 39589                           
 39590 ;; *************** function _usart_init *****************
 39591 ;; Defined at:
 39592 ;;		line 10 in file "bsp/usart.c"
 39593 ;; Parameters:    Size  Location     Type
 39594 ;;  baudrate        4   27[COMRAM] unsigned long 
 39595 ;; Auto vars:     Size  Location     Type
 39596 ;;  b               4   35[COMRAM] unsigned long 
 39597 ;; Return value:  Size  Location     Type
 39598 ;;                  1    wreg      void 
 39599 ;; Registers used:
 39600 ;;		wreg, status,2, status,0, cstack
 39601 ;; Tracked objects:
 39602 ;;		On entry : 0/1
 39603 ;;		On exit  : 0/0
 39604 ;;		Unchanged: 0/0
 39605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39607 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39608 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39609 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39610 ;;Total ram usage:       12 bytes
 39611 ;; Hardware stack levels used: 1
 39612 ;; Hardware stack levels required when called: 5
 39613 ;; This function calls:
 39614 ;;		___lldiv
 39615 ;; This function is called by:
 39616 ;;		_rs485_init
 39617 ;; This function uses a non-reentrant model
 39618 ;;
 39619                           
 39620                           	psect	text197
 39621  00C2F6                     __ptext197:
 39622                           	callstack 0
 39623  00C2F6                     _usart_init:
 39624                           	callstack 21
 39625                           
 39626                           ;usart.c: 12: TRISCbits.TRISC6 = 0;
 39627                           
 39628                           ;incstack = 0
 39629  00C2F6  9C94               	bcf	148,6,c	;volatile
 39630                           
 39631                           ;usart.c: 13: TRISCbits.TRISC7 = 1;
 39632  00C2F8  8E94               	bsf	148,7,c	;volatile
 39633                           
 39634                           ;usart.c: 15: TXSTA1 = 0b10100010;
 39635  00C2FA  0EA2               	movlw	162
 39636  00C2FC  6EAD               	movwf	173,c	;volatile
 39637                           
 39638                           ;usart.c: 16: RCSTA1 = 0b10010000;
 39639  00C2FE  0E90               	movlw	144
 39640  00C300  6EAC               	movwf	172,c	;volatile
 39641                           
 39642                           ;usart.c: 17: BAUDCON1 = 0b00000000;
 39643  00C302  0E00               	movlw	0
 39644  00C304  6E7E               	movwf	126,c	;volatile
 39645                           
 39646                           ;usart.c: 20: RCONbits.IPEN = 1;
 39647  00C306  8ED0               	bsf	208,7,c	;volatile
 39648                           
 39649                           ;usart.c: 21: IPR1bits.RC1IP= 0;
 39650  00C308  9A9F               	bcf	159,5,c	;volatile
 39651                           
 39652                           ;usart.c: 22: PIE1bits.RC1IE= 1;
 39653  00C30A  8A9D               	bsf	157,5,c	;volatile
 39654                           
 39655                           ;usart.c: 25: uint32_t b = (48000000 / (64 * baudrate)) - 1;
 39656  00C30C  0E00               	movlw	0
 39657  00C30E  6E0F               	movwf	___lldiv@dividend^0,c
 39658  00C310  0E6C               	movlw	108
 39659  00C312  6E10               	movwf	(___lldiv@dividend+1)^0,c
 39660  00C314  0EDC               	movlw	220
 39661  00C316  6E11               	movwf	(___lldiv@dividend+2)^0,c
 39662  00C318  0E02               	movlw	2
 39663  00C31A  6E12               	movwf	(___lldiv@dividend+3)^0,c
 39664  00C31C  C01C  F020         	movff	usart_init@baudrate,??_usart_init
 39665  00C320  C01D  F021         	movff	usart_init@baudrate+1,??_usart_init+1
 39666  00C324  C01E  F022         	movff	usart_init@baudrate+2,??_usart_init+2
 39667  00C328  C01F  F023         	movff	usart_init@baudrate+3,??_usart_init+3
 39668  00C32C  0E06               	movlw	6
 39669  00C32E                     u39525:
 39670  00C32E  90D8               	bcf	status,0,c
 39671  00C330  3620               	rlcf	??_usart_init^0,f,c
 39672  00C332  3621               	rlcf	(??_usart_init+1)^0,f,c
 39673  00C334  3622               	rlcf	(??_usart_init+2)^0,f,c
 39674  00C336  3623               	rlcf	(??_usart_init+3)^0,f,c
 39675  00C338  2EE8               	decfsz	wreg,f,c
 39676  00C33A  D7F9               	goto	u39525
 39677  00C33C  C020  F013         	movff	??_usart_init,___lldiv@divisor
 39678  00C340  C021  F014         	movff	??_usart_init+1,___lldiv@divisor+1
 39679  00C344  C022  F015         	movff	??_usart_init+2,___lldiv@divisor+2
 39680  00C348  C023  F016         	movff	??_usart_init+3,___lldiv@divisor+3
 39681  00C34C  EC82  F060         	call	___lldiv	;wreg free
 39682  00C350  0EFF               	movlw	255
 39683  00C352  240F               	addwf	?___lldiv^0,w,c
 39684  00C354  6E24               	movwf	usart_init@b^0,c
 39685  00C356  0EFF               	movlw	255
 39686  00C358  2010               	addwfc	(?___lldiv+1)^0,w,c
 39687  00C35A  6E25               	movwf	(usart_init@b+1)^0,c
 39688  00C35C  0EFF               	movlw	255
 39689  00C35E  2011               	addwfc	(?___lldiv+2)^0,w,c
 39690  00C360  6E26               	movwf	(usart_init@b+2)^0,c
 39691  00C362  0EFF               	movlw	255
 39692  00C364  2012               	addwfc	(?___lldiv+3)^0,w,c
 39693  00C366  6E27               	movwf	(usart_init@b+3)^0,c
 39694                           
 39695                           ;usart.c: 26: SPBRG1 = b;
 39696  00C368  C024  FFB0         	movff	usart_init@b,4016	;volatile
 39697  00C36C  0012               	return		;funcret
 39698  00C36E                     __end_of_usart_init:
 39699                           	callstack 0
 39700                           
 39701 ;; *************** function ___lldiv *****************
 39702 ;; Defined at:
 39703 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
 39704 ;; Parameters:    Size  Location     Type
 39705 ;;  dividend        4   14[COMRAM] unsigned long 
 39706 ;;  divisor         4   18[COMRAM] unsigned long 
 39707 ;; Auto vars:     Size  Location     Type
 39708 ;;  quotient        4   23[COMRAM] unsigned long 
 39709 ;;  counter         1   22[COMRAM] unsigned char 
 39710 ;; Return value:  Size  Location     Type
 39711 ;;                  4   14[COMRAM] unsigned long 
 39712 ;; Registers used:
 39713 ;;		wreg, status,2, status,0
 39714 ;; Tracked objects:
 39715 ;;		On entry : 0/0
 39716 ;;		On exit  : 0/0
 39717 ;;		Unchanged: 0/0
 39718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39719 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39720 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39722 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39723 ;;Total ram usage:       13 bytes
 39724 ;; Hardware stack levels used: 1
 39725 ;; Hardware stack levels required when called: 4
 39726 ;; This function calls:
 39727 ;;		Nothing
 39728 ;; This function is called by:
 39729 ;;		_usart_init
 39730 ;;		_sprintf
 39731 ;; This function uses a non-reentrant model
 39732 ;;
 39733                           
 39734                           	psect	text198
 39735  00C104                     __ptext198:
 39736                           	callstack 0
 39737  00C104                     ___lldiv:
 39738                           	callstack 21
 39739                           
 39740                           ;incstack = 0
 39741  00C104  0E00               	movlw	0
 39742  00C106  6E18               	movwf	___lldiv@quotient^0,c
 39743  00C108  0E00               	movlw	0
 39744  00C10A  6E19               	movwf	(___lldiv@quotient+1)^0,c
 39745  00C10C  0E00               	movlw	0
 39746  00C10E  6E1A               	movwf	(___lldiv@quotient+2)^0,c
 39747  00C110  0E00               	movlw	0
 39748  00C112  6E1B               	movwf	(___lldiv@quotient+3)^0,c
 39749  00C114  5013               	movf	___lldiv@divisor^0,w,c
 39750  00C116  1014               	iorwf	(___lldiv@divisor+1)^0,w,c
 39751  00C118  1015               	iorwf	(___lldiv@divisor+2)^0,w,c
 39752  00C11A  1016               	iorwf	(___lldiv@divisor+3)^0,w,c
 39753  00C11C  B4D8               	btfsc	status,2,c
 39754  00C11E  D02A               	goto	l2830
 39755  00C120  0E01               	movlw	1
 39756  00C122  6E17               	movwf	___lldiv@counter^0,c
 39757  00C124  D006               	goto	l31283
 39758  00C126                     l31281:
 39759  00C126  90D8               	bcf	status,0,c
 39760  00C128  3613               	rlcf	___lldiv@divisor^0,f,c
 39761  00C12A  3614               	rlcf	(___lldiv@divisor+1)^0,f,c
 39762  00C12C  3615               	rlcf	(___lldiv@divisor+2)^0,f,c
 39763  00C12E  3616               	rlcf	(___lldiv@divisor+3)^0,f,c
 39764  00C130  2A17               	incf	___lldiv@counter^0,f,c
 39765  00C132                     l31283:
 39766  00C132  AE16               	btfss	(___lldiv@divisor+3)^0,7,c
 39767  00C134  D7F8               	goto	l31281
 39768  00C136                     u39160:
 39769  00C136  90D8               	bcf	status,0,c
 39770  00C138  3618               	rlcf	___lldiv@quotient^0,f,c
 39771  00C13A  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
 39772  00C13C  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
 39773  00C13E  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
 39774  00C140  5013               	movf	___lldiv@divisor^0,w,c
 39775  00C142  5C0F               	subwf	___lldiv@dividend^0,w,c
 39776  00C144  5014               	movf	(___lldiv@divisor+1)^0,w,c
 39777  00C146  5810               	subwfb	(___lldiv@dividend+1)^0,w,c
 39778  00C148  5015               	movf	(___lldiv@divisor+2)^0,w,c
 39779  00C14A  5811               	subwfb	(___lldiv@dividend+2)^0,w,c
 39780  00C14C  5016               	movf	(___lldiv@divisor+3)^0,w,c
 39781  00C14E  5812               	subwfb	(___lldiv@dividend+3)^0,w,c
 39782  00C150  A0D8               	btfss	status,0,c
 39783  00C152  D009               	goto	l31293
 39784  00C154  5013               	movf	___lldiv@divisor^0,w,c
 39785  00C156  5E0F               	subwf	___lldiv@dividend^0,f,c
 39786  00C158  5014               	movf	(___lldiv@divisor+1)^0,w,c
 39787  00C15A  5A10               	subwfb	(___lldiv@dividend+1)^0,f,c
 39788  00C15C  5015               	movf	(___lldiv@divisor+2)^0,w,c
 39789  00C15E  5A11               	subwfb	(___lldiv@dividend+2)^0,f,c
 39790  00C160  5016               	movf	(___lldiv@divisor+3)^0,w,c
 39791  00C162  5A12               	subwfb	(___lldiv@dividend+3)^0,f,c
 39792  00C164  8018               	bsf	___lldiv@quotient^0,0,c
 39793  00C166                     l31293:
 39794  00C166  90D8               	bcf	status,0,c
 39795  00C168  3216               	rrcf	(___lldiv@divisor+3)^0,f,c
 39796  00C16A  3215               	rrcf	(___lldiv@divisor+2)^0,f,c
 39797  00C16C  3214               	rrcf	(___lldiv@divisor+1)^0,f,c
 39798  00C16E  3213               	rrcf	___lldiv@divisor^0,f,c
 39799  00C170  2E17               	decfsz	___lldiv@counter^0,f,c
 39800  00C172  D7E1               	goto	u39160
 39801  00C174                     l2830:
 39802  00C174  C018  F00F         	movff	___lldiv@quotient,?___lldiv
 39803  00C178  C019  F010         	movff	___lldiv@quotient+1,?___lldiv+1
 39804  00C17C  C01A  F011         	movff	___lldiv@quotient+2,?___lldiv+2
 39805  00C180  C01B  F012         	movff	___lldiv@quotient+3,?___lldiv+3
 39806  00C184  0012               	return		;funcret
 39807  00C186                     __end_of___lldiv:
 39808                           	callstack 0
 39809                           
 39810 ;; *************** function _modbus_set_register *****************
 39811 ;; Defined at:
 39812 ;;		line 70 in file "app_modbus.c"
 39813 ;; Parameters:    Size  Location     Type
 39814 ;;  reg             2   14[COMRAM] PTR const unsigned int 
 39815 ;;		 -> g_modbus_value(16), 
 39816 ;; Auto vars:     Size  Location     Type
 39817 ;;		None
 39818 ;; Return value:  Size  Location     Type
 39819 ;;                  1    wreg      void 
 39820 ;; Registers used:
 39821 ;;		wreg, status,2, status,0
 39822 ;; Tracked objects:
 39823 ;;		On entry : 3F/2
 39824 ;;		On exit  : 3F/2
 39825 ;;		Unchanged: 3F/0
 39826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39831 ;;Total ram usage:        2 bytes
 39832 ;; Hardware stack levels used: 1
 39833 ;; Hardware stack levels required when called: 4
 39834 ;; This function calls:
 39835 ;;		Nothing
 39836 ;; This function is called by:
 39837 ;;		_modbus_init
 39838 ;; This function uses a non-reentrant model
 39839 ;;
 39840                           
 39841                           	psect	text199
 39842  00DED2                     __ptext199:
 39843                           	callstack 0
 39844  00DED2                     _modbus_set_register:
 39845                           	callstack 23
 39846                           
 39847                           ; BSR set to: 2
 39848                           ;app_modbus.c: 72: g_pRegs = (uint16_t*)reg;
 39849                           
 39850                           ;incstack = 0
 39851  00DED2  C00F  F0E6         	movff	modbus_set_register@reg,_g_pRegs
 39852  00DED6  C010  F0E7         	movff	modbus_set_register@reg+1,_g_pRegs+1
 39853                           
 39854                           ; BSR set to: 2
 39855  00DEDA  0012               	return		;funcret
 39856  00DEDC                     __end_of_modbus_set_register:
 39857                           	callstack 0
 39858                           
 39859 ;; *************** function _modbus_get_timeout *****************
 39860 ;; Defined at:
 39861 ;;		line 86 in file "app_modbus.c"
 39862 ;; Parameters:    Size  Location     Type
 39863 ;;  to              1    wreg     unsigned char 
 39864 ;; Auto vars:     Size  Location     Type
 39865 ;;  to              1   14[COMRAM] unsigned char 
 39866 ;; Return value:  Size  Location     Type
 39867 ;;                  1    wreg      unsigned char 
 39868 ;; Registers used:
 39869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 39870 ;; Tracked objects:
 39871 ;;		On entry : 3F/1
 39872 ;;		On exit  : 0/0
 39873 ;;		Unchanged: 0/0
 39874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39879 ;;Total ram usage:        1 bytes
 39880 ;; Hardware stack levels used: 1
 39881 ;; Hardware stack levels required when called: 4
 39882 ;; This function calls:
 39883 ;;		Nothing
 39884 ;; This function is called by:
 39885 ;;		_build_response
 39886 ;;		_modbus_init
 39887 ;; This function uses a non-reentrant model
 39888 ;;
 39889                           
 39890                           	psect	text200
 39891  00DD16                     __ptext200:
 39892                           	callstack 0
 39893  00DD16                     _modbus_get_timeout:
 39894                           	callstack 23
 39895                           
 39896                           ; BSR set to: 2
 39897                           ;incstack = 0
 39898                           ;modbus_get_timeout@to stored from wreg
 39899  00DD16  6E0F               	movwf	modbus_get_timeout@to^0,c
 39900                           
 39901                           ;app_modbus.c: 88: if (to > TO_TWO_SEC) to = TO_TWO_SEC;
 39902  00DD18  0E04               	movlw	4
 39903  00DD1A  640F               	cpfsgt	modbus_get_timeout@to^0,c
 39904  00DD1C  D002               	goto	l19341
 39905  00DD1E  0E04               	movlw	4
 39906  00DD20  6E0F               	movwf	modbus_get_timeout@to^0,c
 39907  00DD22                     l19341:
 39908                           
 39909                           ;app_modbus.c: 89: return g_timeout[to];
 39910  00DD22  0E8F               	movlw	low _g_timeout
 39911  00DD24  240F               	addwf	modbus_get_timeout@to^0,w,c
 39912  00DD26  6EF6               	movwf	tblptrl,c
 39913  00DD28  6AF7               	clrf	tblptrh,c
 39914  00DD2A  0E20               	movlw	high _g_timeout
 39915  00DD2C  22F7               	addwfc	tblptrh,f,c
 39916  00DD2E                     	if	0	;There are less than 3 active tblptr bytes
 39917  00DD2E                     	endif
 39918  00DD2E  0008               	tblrd		*
 39919  00DD30  50F5               	movf	tablat,w,c
 39920  00DD32  0012               	return		;funcret
 39921  00DD34                     __end_of_modbus_get_timeout:
 39922                           	callstack 0
 39923                           
 39924 ;; *************** function _modbus_get_baudrate *****************
 39925 ;; Defined at:
 39926 ;;		line 80 in file "app_modbus.c"
 39927 ;; Parameters:    Size  Location     Type
 39928 ;;  baud            1    wreg     unsigned char 
 39929 ;; Auto vars:     Size  Location     Type
 39930 ;;  baud            1   18[COMRAM] unsigned char 
 39931 ;; Return value:  Size  Location     Type
 39932 ;;                  4   14[COMRAM] unsigned long 
 39933 ;; Registers used:
 39934 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 39935 ;; Tracked objects:
 39936 ;;		On entry : 3F/1
 39937 ;;		On exit  : 0/0
 39938 ;;		Unchanged: 0/0
 39939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39943 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39944 ;;Total ram usage:        5 bytes
 39945 ;; Hardware stack levels used: 1
 39946 ;; Hardware stack levels required when called: 4
 39947 ;; This function calls:
 39948 ;;		Nothing
 39949 ;; This function is called by:
 39950 ;;		_modbus_init
 39951 ;; This function uses a non-reentrant model
 39952 ;;
 39953                           
 39954                           	psect	text201
 39955  00D766                     __ptext201:
 39956                           	callstack 0
 39957  00D766                     _modbus_get_baudrate:
 39958                           	callstack 23
 39959                           
 39960                           ;incstack = 0
 39961                           ;modbus_get_baudrate@baud stored from wreg
 39962  00D766  6E13               	movwf	modbus_get_baudrate@baud^0,c
 39963                           
 39964                           ;app_modbus.c: 82: if (baud > BAUD_57600) baud = BAUD_57600;
 39965  00D768  0E05               	movlw	5
 39966  00D76A  6413               	cpfsgt	modbus_get_baudrate@baud^0,c
 39967  00D76C  D002               	goto	l13339
 39968  00D76E  0E05               	movlw	5
 39969  00D770  6E13               	movwf	modbus_get_baudrate@baud^0,c
 39970  00D772                     l13339:
 39971                           
 39972                           ;app_modbus.c: 83: return g_baudrate[baud];
 39973  00D772  5013               	movf	modbus_get_baudrate@baud^0,w,c
 39974  00D774  0D04               	mullw	4
 39975  00D776  0E71               	movlw	low _g_baudrate
 39976  00D778  24F3               	addwf	243,w,c
 39977  00D77A  6EF6               	movwf	tblptrl,c
 39978  00D77C  0E20               	movlw	high _g_baudrate
 39979  00D77E  20F4               	addwfc	244,w,c
 39980  00D780  6EF7               	movwf	tblptrh,c
 39981  00D782                     	if	0	;There are less than 3 active tblptr bytes
 39982  00D782                     	endif
 39983  00D782  0009               	tblrd		*+
 39984  00D784  CFF5 F00F          	movff	tablat,?_modbus_get_baudrate
 39985  00D788  0009               	tblrd		*+
 39986  00D78A  CFF5 F010          	movff	tablat,?_modbus_get_baudrate+1
 39987  00D78E  0009               	tblrd		*+
 39988  00D790  CFF5 F011          	movff	tablat,?_modbus_get_baudrate+2
 39989  00D794  000A               	tblrd		*-
 39990  00D796  CFF5 F012          	movff	tablat,?_modbus_get_baudrate+3
 39991  00D79A  0012               	return		;funcret
 39992  00D79C                     __end_of_modbus_get_baudrate:
 39993                           	callstack 0
 39994                           
 39995 ;; *************** function _modbusSlaveInit *****************
 39996 ;; Defined at:
 39997 ;;		line 222 in file "lightmodbus/slave.c"
 39998 ;; Parameters:    Size  Location     Type
 39999 ;;  status          2   28[COMRAM] PTR struct modbusSlave
 40000 ;;		 -> g_slave(61), 
 40001 ;; Auto vars:     Size  Location     Type
 40002 ;;		None
 40003 ;; Return value:  Size  Location     Type
 40004 ;;                  1    wreg      enum E235
 40005 ;; Registers used:
 40006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 40007 ;; Tracked objects:
 40008 ;;		On entry : 3F/2
 40009 ;;		On exit  : 0/0
 40010 ;;		Unchanged: 0/0
 40011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40016 ;;Total ram usage:        4 bytes
 40017 ;; Hardware stack levels used: 1
 40018 ;; Hardware stack levels required when called: 5
 40019 ;; This function calls:
 40020 ;;		_memset
 40021 ;; This function is called by:
 40022 ;;		_modbus_init
 40023 ;; This function uses a non-reentrant model
 40024 ;;
 40025                           
 40026                           	psect	text202
 40027  009166                     __ptext202:
 40028                           	callstack 0
 40029  009166                     _modbusSlaveInit:
 40030                           	callstack 22
 40031                           
 40032                           ; BSR set to: 2
 40033                           ;slave.c: 228: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 40034                           
 40035                           ;incstack = 0
 40036  009166  501D               	movf	modbusSlaveInit@status^0,w,c
 40037  009168  101E               	iorwf	(modbusSlaveInit@status+1)^0,w,c
 40038  00916A  B4D8               	btfsc	status,2,c
 40039  00916C  0012               	return	
 40040                           
 40041                           ; BSR set to: 2
 40042                           ;slave.c: 234: memset( status->request.frame, 0, 9 );
 40043  00916E  0E33               	movlw	51
 40044  009170  241D               	addwf	modbusSlaveInit@status^0,w,c
 40045  009172  6E15               	movwf	memset@p1^0,c
 40046  009174  0E00               	movlw	0
 40047  009176  201E               	addwfc	(modbusSlaveInit@status+1)^0,w,c
 40048  009178  6E16               	movwf	(memset@p1+1)^0,c
 40049  00917A  0E00               	movlw	0
 40050  00917C  6E18               	movwf	(memset@c+1)^0,c
 40051  00917E  0E00               	movlw	0
 40052  009180  6E17               	movwf	memset@c^0,c
 40053  009182  0E00               	movlw	0
 40054  009184  6E1A               	movwf	(memset@n+1)^0,c
 40055  009186  0E09               	movlw	9
 40056  009188  6E19               	movwf	memset@n^0,c
 40057  00918A  ECD6  F06C         	call	_memset	;wreg free
 40058                           
 40059                           ;slave.c: 236: status->request.length = 0;
 40060  00918E  EE20 F03C          	lfsr	2,60
 40061  009192  501D               	movf	modbusSlaveInit@status^0,w,c
 40062  009194  26D9               	addwf	fsr2l,f,c
 40063  009196  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40064  009198  22DA               	addwfc	fsr2h,f,c
 40065  00919A  0E00               	movlw	0
 40066  00919C  6EDF               	movwf	indf2,c
 40067                           
 40068                           ;slave.c: 241: memset( status->response.frame, 0, 23 );
 40069  00919E  0E1B               	movlw	27
 40070  0091A0  241D               	addwf	modbusSlaveInit@status^0,w,c
 40071  0091A2  6E15               	movwf	memset@p1^0,c
 40072  0091A4  0E00               	movlw	0
 40073  0091A6  201E               	addwfc	(modbusSlaveInit@status+1)^0,w,c
 40074  0091A8  6E16               	movwf	(memset@p1+1)^0,c
 40075  0091AA  0E00               	movlw	0
 40076  0091AC  6E18               	movwf	(memset@c+1)^0,c
 40077  0091AE  0E00               	movlw	0
 40078  0091B0  6E17               	movwf	memset@c^0,c
 40079  0091B2  0E00               	movlw	0
 40080  0091B4  6E1A               	movwf	(memset@n+1)^0,c
 40081  0091B6  0E17               	movlw	23
 40082  0091B8  6E19               	movwf	memset@n^0,c
 40083  0091BA  ECD6  F06C         	call	_memset	;wreg free
 40084                           
 40085                           ;slave.c: 243: status->response.length = 0;
 40086  0091BE  EE20 F032          	lfsr	2,50
 40087  0091C2  501D               	movf	modbusSlaveInit@status^0,w,c
 40088  0091C4  26D9               	addwf	fsr2l,f,c
 40089  0091C6  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40090  0091C8  22DA               	addwfc	fsr2h,f,c
 40091  0091CA  0E00               	movlw	0
 40092  0091CC  6EDF               	movwf	indf2,c
 40093                           
 40094                           ;slave.c: 246: if ( status->address == 0 )
 40095  0091CE  C01D  FFD9         	movff	modbusSlaveInit@status,fsr2l
 40096  0091D2  C01E  FFDA         	movff	modbusSlaveInit@status+1,fsr2h
 40097  0091D6  50DF               	movf	indf2,w,c
 40098  0091D8  B4D8               	btfsc	status,2,c
 40099  0091DA  0012               	return	
 40100                           
 40101                           ;slave.c: 251: if ( status->registerCallback == (0) ) status->registerCount = status->in
      +                          putRegisterCount = 0;
 40102  0091DC  EE20 F001          	lfsr	2,1
 40103  0091E0  501D               	movf	modbusSlaveInit@status^0,w,c
 40104  0091E2  26D9               	addwf	fsr2l,f,c
 40105  0091E4  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40106  0091E6  22DA               	addwfc	fsr2h,f,c
 40107  0091E8  50DE               	movf	postinc2,w,c
 40108  0091EA  10DE               	iorwf	postinc2,w,c
 40109  0091EC  A4D8               	btfss	status,2,c
 40110  0091EE  D014               	goto	l19149
 40111  0091F0  EE20 F007          	lfsr	2,7
 40112  0091F4  501D               	movf	modbusSlaveInit@status^0,w,c
 40113  0091F6  26D9               	addwf	fsr2l,f,c
 40114  0091F8  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40115  0091FA  22DA               	addwfc	fsr2h,f,c
 40116  0091FC  0E00               	movlw	0
 40117  0091FE  6EDE               	movwf	postinc2,c
 40118  009200  0E00               	movlw	0
 40119  009202  6EDD               	movwf	postdec2,c
 40120  009204  EE10 F005          	lfsr	1,5
 40121  009208  501D               	movf	modbusSlaveInit@status^0,w,c
 40122  00920A  26E1               	addwf	fsr1l,f,c
 40123  00920C  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40124  00920E  22E2               	addwfc	fsr1h,f,c
 40125  009210  CFDE FFE6          	movff	postinc2,postinc1
 40126  009214  CFDD FFE5          	movff	postdec2,postdec1
 40127  009218                     l19149:
 40128                           
 40129                           ;slave.c: 269: if ( status->coilCount == 0 || status->coils == (0) )
 40130  009218  EE20 F011          	lfsr	2,17
 40131  00921C  501D               	movf	modbusSlaveInit@status^0,w,c
 40132  00921E  26D9               	addwf	fsr2l,f,c
 40133  009220  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40134  009222  22DA               	addwfc	fsr2h,f,c
 40135  009224  50DE               	movf	postinc2,w,c
 40136  009226  10DE               	iorwf	postinc2,w,c
 40137  009228  B4D8               	btfsc	status,2,c
 40138  00922A  D00A               	goto	u21700
 40139  00922C  EE20 F009          	lfsr	2,9
 40140  009230  501D               	movf	modbusSlaveInit@status^0,w,c
 40141  009232  26D9               	addwf	fsr2l,f,c
 40142  009234  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40143  009236  22DA               	addwfc	fsr2h,f,c
 40144  009238  50DE               	movf	postinc2,w,c
 40145  00923A  10DE               	iorwf	postinc2,w,c
 40146  00923C  A4D8               	btfss	status,2,c
 40147  00923E  D014               	goto	l651
 40148  009240                     u21700:
 40149                           
 40150                           ;slave.c: 270: {;slave.c: 271: status->coilCount = 0;
 40151  009240  EE20 F011          	lfsr	2,17
 40152  009244  501D               	movf	modbusSlaveInit@status^0,w,c
 40153  009246  26D9               	addwf	fsr2l,f,c
 40154  009248  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40155  00924A  22DA               	addwfc	fsr2h,f,c
 40156  00924C  0E00               	movlw	0
 40157  00924E  6EDE               	movwf	postinc2,c
 40158  009250  0E00               	movlw	0
 40159  009252  6EDD               	movwf	postdec2,c
 40160                           
 40161                           ;slave.c: 272: status->coils = (0);
 40162  009254  EE20 F009          	lfsr	2,9
 40163  009258  501D               	movf	modbusSlaveInit@status^0,w,c
 40164  00925A  26D9               	addwf	fsr2l,f,c
 40165  00925C  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40166  00925E  22DA               	addwfc	fsr2h,f,c
 40167  009260  0E00               	movlw	0
 40168  009262  6EDE               	movwf	postinc2,c
 40169  009264  0E00               	movlw	0
 40170  009266  6EDD               	movwf	postdec2,c
 40171  009268                     l651:
 40172                           
 40173                           ;slave.c: 273: };slave.c: 275: if ( status->discreteInputCount == 0 || status->discreteI
      +                          nputs == (0) )
 40174  009268  EE20 F013          	lfsr	2,19
 40175  00926C  501D               	movf	modbusSlaveInit@status^0,w,c
 40176  00926E  26D9               	addwf	fsr2l,f,c
 40177  009270  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40178  009272  22DA               	addwfc	fsr2h,f,c
 40179  009274  50DE               	movf	postinc2,w,c
 40180  009276  10DE               	iorwf	postinc2,w,c
 40181  009278  B4D8               	btfsc	status,2,c
 40182  00927A  D00A               	goto	u21720
 40183  00927C  EE20 F00B          	lfsr	2,11
 40184  009280  501D               	movf	modbusSlaveInit@status^0,w,c
 40185  009282  26D9               	addwf	fsr2l,f,c
 40186  009284  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40187  009286  22DA               	addwfc	fsr2h,f,c
 40188  009288  50DE               	movf	postinc2,w,c
 40189  00928A  10DE               	iorwf	postinc2,w,c
 40190  00928C  A4D8               	btfss	status,2,c
 40191  00928E  0012               	return	
 40192  009290                     u21720:
 40193                           
 40194                           ;slave.c: 276: {;slave.c: 277: status->discreteInputCount = 0;
 40195  009290  EE20 F013          	lfsr	2,19
 40196  009294  501D               	movf	modbusSlaveInit@status^0,w,c
 40197  009296  26D9               	addwf	fsr2l,f,c
 40198  009298  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40199  00929A  22DA               	addwfc	fsr2h,f,c
 40200  00929C  0E00               	movlw	0
 40201  00929E  6EDE               	movwf	postinc2,c
 40202  0092A0  0E00               	movlw	0
 40203  0092A2  6EDD               	movwf	postdec2,c
 40204                           
 40205                           ;slave.c: 278: status->discreteInputs = (0);
 40206  0092A4  EE20 F00B          	lfsr	2,11
 40207  0092A8  501D               	movf	modbusSlaveInit@status^0,w,c
 40208  0092AA  26D9               	addwf	fsr2l,f,c
 40209  0092AC  501E               	movf	(modbusSlaveInit@status+1)^0,w,c
 40210  0092AE  22DA               	addwfc	fsr2h,f,c
 40211  0092B0  0E00               	movlw	0
 40212  0092B2  6EDE               	movwf	postinc2,c
 40213  0092B4  0E00               	movlw	0
 40214  0092B6  6EDD               	movwf	postdec2,c
 40215  0092B8  0012               	return		;funcret
 40216  0092BA                     __end_of_modbusSlaveInit:
 40217                           	callstack 0
 40218                           
 40219 ;; *************** function _modbusMasterInit *****************
 40220 ;; Defined at:
 40221 ;;		line 216 in file "lightmodbus/master.c"
 40222 ;; Parameters:    Size  Location     Type
 40223 ;;  status          2   28[COMRAM] PTR struct modbusMaster
 40224 ;;		 -> g_master(37), 
 40225 ;; Auto vars:     Size  Location     Type
 40226 ;;		None
 40227 ;; Return value:  Size  Location     Type
 40228 ;;                  1    wreg      enum E352
 40229 ;; Registers used:
 40230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40231 ;; Tracked objects:
 40232 ;;		On entry : 0/2
 40233 ;;		On exit  : 0/0
 40234 ;;		Unchanged: 0/0
 40235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40240 ;;Total ram usage:        2 bytes
 40241 ;; Hardware stack levels used: 1
 40242 ;; Hardware stack levels required when called: 5
 40243 ;; This function calls:
 40244 ;;		_memset
 40245 ;; This function is called by:
 40246 ;;		_modbus_init
 40247 ;; This function uses a non-reentrant model
 40248 ;;
 40249                           
 40250                           	psect	text203
 40251  009F04                     __ptext203:
 40252                           	callstack 0
 40253  009F04                     _modbusMasterInit:
 40254                           	callstack 22
 40255                           
 40256                           ;master.c: 219: if ( status == (0) ) return MODBUS_ERROR_NULLPTR;
 40257                           
 40258                           ;incstack = 0
 40259  009F04  501D               	movf	modbusMasterInit@status^0,w,c
 40260  009F06  101E               	iorwf	(modbusMasterInit@status+1)^0,w,c
 40261  009F08  B4D8               	btfsc	status,2,c
 40262  009F0A  0012               	return	
 40263                           
 40264                           ;master.c: 225: memset( status->request.frame, 0, 9 );
 40265  009F0C  0E01               	movlw	1
 40266  009F0E  241D               	addwf	modbusMasterInit@status^0,w,c
 40267  009F10  6E15               	movwf	memset@p1^0,c
 40268  009F12  0E00               	movlw	0
 40269  009F14  201E               	addwfc	(modbusMasterInit@status+1)^0,w,c
 40270  009F16  6E16               	movwf	(memset@p1+1)^0,c
 40271  009F18  0E00               	movlw	0
 40272  009F1A  6E18               	movwf	(memset@c+1)^0,c
 40273  009F1C  0E00               	movlw	0
 40274  009F1E  6E17               	movwf	memset@c^0,c
 40275  009F20  0E00               	movlw	0
 40276  009F22  6E1A               	movwf	(memset@n+1)^0,c
 40277  009F24  0E09               	movlw	9
 40278  009F26  6E19               	movwf	memset@n^0,c
 40279  009F28  ECD6  F06C         	call	_memset	;wreg free
 40280                           
 40281                           ;master.c: 227: status->request.length = 0;
 40282  009F2C  EE20 F00A          	lfsr	2,10
 40283  009F30  501D               	movf	modbusMasterInit@status^0,w,c
 40284  009F32  26D9               	addwf	fsr2l,f,c
 40285  009F34  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40286  009F36  22DA               	addwfc	fsr2h,f,c
 40287  009F38  0E00               	movlw	0
 40288  009F3A  6EDF               	movwf	indf2,c
 40289                           
 40290                           ;master.c: 232: memset( status->response.frame, 0, 9 );
 40291  009F3C  0E0B               	movlw	11
 40292  009F3E  241D               	addwf	modbusMasterInit@status^0,w,c
 40293  009F40  6E15               	movwf	memset@p1^0,c
 40294  009F42  0E00               	movlw	0
 40295  009F44  201E               	addwfc	(modbusMasterInit@status+1)^0,w,c
 40296  009F46  6E16               	movwf	(memset@p1+1)^0,c
 40297  009F48  0E00               	movlw	0
 40298  009F4A  6E18               	movwf	(memset@c+1)^0,c
 40299  009F4C  0E00               	movlw	0
 40300  009F4E  6E17               	movwf	memset@c^0,c
 40301  009F50  0E00               	movlw	0
 40302  009F52  6E1A               	movwf	(memset@n+1)^0,c
 40303  009F54  0E09               	movlw	9
 40304  009F56  6E19               	movwf	memset@n^0,c
 40305  009F58  ECD6  F06C         	call	_memset	;wreg free
 40306                           
 40307                           ;master.c: 234: status->response.length = 0;
 40308  009F5C  EE20 F014          	lfsr	2,20
 40309  009F60  501D               	movf	modbusMasterInit@status^0,w,c
 40310  009F62  26D9               	addwf	fsr2l,f,c
 40311  009F64  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40312  009F66  22DA               	addwfc	fsr2h,f,c
 40313  009F68  0E00               	movlw	0
 40314  009F6A  6EDF               	movwf	indf2,c
 40315                           
 40316                           ;master.c: 240: memset( status->data.coils, 0, 3 );
 40317  009F6C  0E1D               	movlw	29
 40318  009F6E  241D               	addwf	modbusMasterInit@status^0,w,c
 40319  009F70  6E15               	movwf	memset@p1^0,c
 40320  009F72  0E00               	movlw	0
 40321  009F74  201E               	addwfc	(modbusMasterInit@status+1)^0,w,c
 40322  009F76  6E16               	movwf	(memset@p1+1)^0,c
 40323  009F78  0E00               	movlw	0
 40324  009F7A  6E18               	movwf	(memset@c+1)^0,c
 40325  009F7C  0E00               	movlw	0
 40326  009F7E  6E17               	movwf	memset@c^0,c
 40327  009F80  0E00               	movlw	0
 40328  009F82  6E1A               	movwf	(memset@n+1)^0,c
 40329  009F84  0E03               	movlw	3
 40330  009F86  6E19               	movwf	memset@n^0,c
 40331  009F88  ECD6  F06C         	call	_memset	;wreg free
 40332                           
 40333                           ;master.c: 242: status->data.length = 0;
 40334  009F8C  EE20 F01A          	lfsr	2,26
 40335  009F90  501D               	movf	modbusMasterInit@status^0,w,c
 40336  009F92  26D9               	addwf	fsr2l,f,c
 40337  009F94  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40338  009F96  22DA               	addwfc	fsr2h,f,c
 40339  009F98  0E00               	movlw	0
 40340  009F9A  6EDF               	movwf	indf2,c
 40341                           
 40342                           ;master.c: 244: status->data.count = 0;
 40343  009F9C  EE20 F018          	lfsr	2,24
 40344  009FA0  501D               	movf	modbusMasterInit@status^0,w,c
 40345  009FA2  26D9               	addwf	fsr2l,f,c
 40346  009FA4  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40347  009FA6  22DA               	addwfc	fsr2h,f,c
 40348  009FA8  0E00               	movlw	0
 40349  009FAA  6EDE               	movwf	postinc2,c
 40350  009FAC  0E00               	movlw	0
 40351  009FAE  6EDD               	movwf	postdec2,c
 40352                           
 40353                           ;master.c: 245: status->data.index = 0;
 40354  009FB0  EE20 F016          	lfsr	2,22
 40355  009FB4  501D               	movf	modbusMasterInit@status^0,w,c
 40356  009FB6  26D9               	addwf	fsr2l,f,c
 40357  009FB8  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40358  009FBA  22DA               	addwfc	fsr2h,f,c
 40359  009FBC  0E00               	movlw	0
 40360  009FBE  6EDE               	movwf	postinc2,c
 40361  009FC0  0E00               	movlw	0
 40362  009FC2  6EDD               	movwf	postdec2,c
 40363                           
 40364                           ;master.c: 246: status->data.type = 0;
 40365  009FC4  EE20 F01B          	lfsr	2,27
 40366  009FC8  501D               	movf	modbusMasterInit@status^0,w,c
 40367  009FCA  26D9               	addwf	fsr2l,f,c
 40368  009FCC  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40369  009FCE  22DA               	addwfc	fsr2h,f,c
 40370  009FD0  0E00               	movlw	0
 40371  009FD2  6EDF               	movwf	indf2,c
 40372                           
 40373                           ;master.c: 247: status->data.address = 0;
 40374  009FD4  EE20 F015          	lfsr	2,21
 40375  009FD8  501D               	movf	modbusMasterInit@status^0,w,c
 40376  009FDA  26D9               	addwf	fsr2l,f,c
 40377  009FDC  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40378  009FDE  22DA               	addwfc	fsr2h,f,c
 40379  009FE0  0E00               	movlw	0
 40380  009FE2  6EDF               	movwf	indf2,c
 40381                           
 40382                           ;master.c: 249: status->exception.address = 0;
 40383  009FE4  EE20 F020          	lfsr	2,32
 40384  009FE8  501D               	movf	modbusMasterInit@status^0,w,c
 40385  009FEA  26D9               	addwf	fsr2l,f,c
 40386  009FEC  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40387  009FEE  22DA               	addwfc	fsr2h,f,c
 40388  009FF0  0E00               	movlw	0
 40389  009FF2  6EDF               	movwf	indf2,c
 40390                           
 40391                           ;master.c: 250: status->exception.function = 0;
 40392  009FF4  EE20 F021          	lfsr	2,33
 40393  009FF8  501D               	movf	modbusMasterInit@status^0,w,c
 40394  009FFA  26D9               	addwf	fsr2l,f,c
 40395  009FFC  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40396  009FFE  22DA               	addwfc	fsr2h,f,c
 40397  00A000  0E00               	movlw	0
 40398  00A002  6EDF               	movwf	indf2,c
 40399                           
 40400                           ;master.c: 251: status->exception.code = 0;
 40401  00A004  EE20 F022          	lfsr	2,34
 40402  00A008  501D               	movf	modbusMasterInit@status^0,w,c
 40403  00A00A  26D9               	addwf	fsr2l,f,c
 40404  00A00C  501E               	movf	(modbusMasterInit@status+1)^0,w,c
 40405  00A00E  22DA               	addwfc	fsr2h,f,c
 40406  00A010  0E00               	movlw	0
 40407  00A012  6EDF               	movwf	indf2,c
 40408  00A014  0012               	return		;funcret
 40409  00A016                     __end_of_modbusMasterInit:
 40410                           	callstack 0
 40411                           
 40412 ;; *************** function _memset *****************
 40413 ;; Defined at:
 40414 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memset.c"
 40415 ;; Parameters:    Size  Location     Type
 40416 ;;  p1              2   20[COMRAM] PTR void 
 40417 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), g_slave.response(24), 
 40418 ;;		 -> g_slave.request(10), g_master.response(10), g_master.data..(3), g_master.request(10), 
 40419 ;;		 -> g_master(37), g_slave(61), 
 40420 ;;  c               2   22[COMRAM] int 
 40421 ;;  n               2   24[COMRAM] unsigned int 
 40422 ;; Auto vars:     Size  Location     Type
 40423 ;;  p               2   26[COMRAM] PTR unsigned char 
 40424 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), g_slave.response(24), 
 40425 ;;		 -> g_slave.request(10), g_master.response(10), g_master.data..(3), g_master.request(10), 
 40426 ;;		 -> g_master(37), g_slave(61), 
 40427 ;; Return value:  Size  Location     Type
 40428 ;;                  2   20[COMRAM] PTR void 
 40429 ;; Registers used:
 40430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40431 ;; Tracked objects:
 40432 ;;		On entry : 0/1
 40433 ;;		On exit  : 0/0
 40434 ;;		Unchanged: 0/0
 40435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40436 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40439 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40440 ;;Total ram usage:        8 bytes
 40441 ;; Hardware stack levels used: 1
 40442 ;; Hardware stack levels required when called: 4
 40443 ;; This function calls:
 40444 ;;		Nothing
 40445 ;; This function is called by:
 40446 ;;		_modbusBuildRequest0102
 40447 ;;		_modbusBuildRequest05
 40448 ;;		_modbusParseResponse0102
 40449 ;;		_modbusParseResponse05
 40450 ;;		_modbusSlaveInit
 40451 ;;		_modbusSlaveEnd
 40452 ;;		_modbusMasterInit
 40453 ;;		_modbusMasterEnd
 40454 ;;		_USBDeviceInit
 40455 ;;		_USBStdSetCfgHandler
 40456 ;; This function uses a non-reentrant model
 40457 ;;
 40458                           
 40459                           	psect	text204
 40460  00D9AC                     __ptext204:
 40461                           	callstack 0
 40462  00D9AC                     _memset:
 40463                           	callstack 22
 40464                           
 40465                           ;incstack = 0
 40466  00D9AC  C015  F01B         	movff	memset@p1,memset@p
 40467  00D9B0  C016  F01C         	movff	memset@p1+1,memset@p+1
 40468  00D9B4  D008               	goto	l10525
 40469  00D9B6                     l10521:
 40470  00D9B6  C01B  FFD9         	movff	memset@p,fsr2l
 40471  00D9BA  C01C  FFDA         	movff	memset@p+1,fsr2h
 40472  00D9BE  C017  FFDF         	movff	memset@c,indf2
 40473  00D9C2  4A1B               	infsnz	memset@p^0,f,c
 40474  00D9C4  2A1C               	incf	(memset@p+1)^0,f,c
 40475  00D9C6                     l10525:
 40476  00D9C6  0619               	decf	memset@n^0,f,c
 40477  00D9C8  A0D8               	btfss	status,0,c
 40478  00D9CA  061A               	decf	(memset@n+1)^0,f,c
 40479  00D9CC  2819               	incf	memset@n^0,w,c
 40480  00D9CE  E1F3               	bnz	l10521
 40481  00D9D0  281A               	incf	(memset@n+1)^0,w,c
 40482  00D9D2  B4D8               	btfsc	status,2,c
 40483  00D9D4  0012               	return	
 40484  00D9D6  D7EF               	goto	l10521
 40485  00D9D8                     __end_of_memset:
 40486                           	callstack 0
 40487                           
 40488 ;; *************** function _i2c_init *****************
 40489 ;; Defined at:
 40490 ;;		line 16 in file "bsp/i2c.c"
 40491 ;; Parameters:    Size  Location     Type
 40492 ;;  speed           1    wreg     const enum E5218
 40493 ;; Auto vars:     Size  Location     Type
 40494 ;;  speed           1   14[COMRAM] const enum E5218
 40495 ;; Return value:  Size  Location     Type
 40496 ;;                  1    wreg      void 
 40497 ;; Registers used:
 40498 ;;		wreg, status,2
 40499 ;; Tracked objects:
 40500 ;;		On entry : 3F/1
 40501 ;;		On exit  : 0/0
 40502 ;;		Unchanged: 0/0
 40503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40507 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40508 ;;Total ram usage:        1 bytes
 40509 ;; Hardware stack levels used: 1
 40510 ;; Hardware stack levels required when called: 4
 40511 ;; This function calls:
 40512 ;;		Nothing
 40513 ;; This function is called by:
 40514 ;;		_Board_initialize
 40515 ;; This function uses a non-reentrant model
 40516 ;;
 40517                           
 40518                           	psect	text205
 40519  00D9D8                     __ptext205:
 40520                           	callstack 0
 40521  00D9D8                     _i2c_init:
 40522                           	callstack 25
 40523                           
 40524                           ;incstack = 0
 40525                           ;i2c_init@speed stored from wreg
 40526  00D9D8  6E0F               	movwf	i2c_init@speed^0,c
 40527                           
 40528                           ;i2c.c: 19: TRISBbits.TRISB4 = 1;
 40529  00D9DA  8893               	bsf	147,4,c	;volatile
 40530                           
 40531                           ;i2c.c: 20: TRISBbits.TRISB5 = 1;
 40532  00D9DC  8A93               	bsf	147,5,c	;volatile
 40533                           
 40534                           ;i2c.c: 23: SSP1CON1 = 0x28;
 40535  00D9DE  0E28               	movlw	40
 40536  00D9E0  6EC6               	movwf	198,c	;volatile
 40537                           
 40538                           ;i2c.c: 24: SSP1CON2 = 0x00;
 40539  00D9E2  0E00               	movlw	0
 40540  00D9E4  6EC5               	movwf	197,c	;volatile
 40541                           
 40542                           ;i2c.c: 26: if (speed == I2C_100kHz)
 40543  00D9E6  500F               	movf	i2c_init@speed^0,w,c
 40544  00D9E8  A4D8               	btfss	status,2,c
 40545  00D9EA  D004               	goto	l14895
 40546                           
 40547                           ;i2c.c: 27: {;i2c.c: 28: SSP1STAT = 0x80;
 40548  00D9EC  0E80               	movlw	128
 40549  00D9EE  6EC7               	movwf	199,c	;volatile
 40550                           
 40551                           ;i2c.c: 29: SSP1ADD = 119;
 40552  00D9F0  0E77               	movlw	119
 40553  00D9F2  D003               	goto	L91
 40554  00D9F4                     l14895:
 40555                           
 40556                           ;i2c.c: 31: else;i2c.c: 32: {;i2c.c: 33: SSP1STAT = 0x00;
 40557  00D9F4  0E00               	movlw	0
 40558  00D9F6  6EC7               	movwf	199,c	;volatile
 40559                           
 40560                           ;i2c.c: 34: SSP1ADD = 29;
 40561  00D9F8  0E1D               	movlw	29
 40562  00D9FA                     L91:
 40563  00D9FA  6EC8               	movwf	200,c	;volatile
 40564                           
 40565                           ;i2c.c: 35: };i2c.c: 37: PIR1bits.SSP1IF = 0;
 40566  00D9FC  969E               	bcf	158,3,c	;volatile
 40567                           
 40568                           ;i2c.c: 38: PIR2bits.BCL1IF = 0;
 40569  00D9FE  96A1               	bcf	161,3,c	;volatile
 40570                           
 40571                           ;i2c.c: 39: SSP1CON2bits.SEN = 0;
 40572  00DA00  90C5               	bcf	197,0,c	;volatile
 40573  00DA02  0012               	return		;funcret
 40574  00DA04                     __end_of_i2c_init:
 40575                           	callstack 0
 40576                           
 40577 ;; *************** function _buffer_init *****************
 40578 ;; Defined at:
 40579 ;;		line 8 in file "util/buffer.c"
 40580 ;; Parameters:    Size  Location     Type
 40581 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 40582 ;;		 -> g_modbus_queue(67), g_usb_queue(67), 
 40583 ;; Auto vars:     Size  Location     Type
 40584 ;;		None
 40585 ;; Return value:  Size  Location     Type
 40586 ;;                  1    wreg      void 
 40587 ;; Registers used:
 40588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40589 ;; Tracked objects:
 40590 ;;		On entry : 0/0
 40591 ;;		On exit  : 0/0
 40592 ;;		Unchanged: 0/0
 40593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40598 ;;Total ram usage:        2 bytes
 40599 ;; Hardware stack levels used: 1
 40600 ;; Hardware stack levels required when called: 4
 40601 ;; This function calls:
 40602 ;;		Nothing
 40603 ;; This function is called by:
 40604 ;;		_Board_initialize
 40605 ;; This function uses a non-reentrant model
 40606 ;;
 40607                           
 40608                           	psect	text206
 40609  00D926                     __ptext206:
 40610                           	callstack 0
 40611  00D926                     _buffer_init:
 40612                           	callstack 25
 40613                           
 40614                           ;buffer.c: 10: queue->size = 64;
 40615                           
 40616                           ;incstack = 0
 40617  00D926  C00F  FFD9         	movff	buffer_init@queue,fsr2l
 40618  00D92A  C010  FFDA         	movff	buffer_init@queue+1,fsr2h
 40619  00D92E  0E40               	movlw	64
 40620  00D930  6EDF               	movwf	indf2,c
 40621                           
 40622                           ;buffer.c: 11: queue->read_pos = 0;
 40623  00D932  EE20 F001          	lfsr	2,1
 40624  00D936  500F               	movf	buffer_init@queue^0,w,c
 40625  00D938  26D9               	addwf	fsr2l,f,c
 40626  00D93A  5010               	movf	(buffer_init@queue+1)^0,w,c
 40627  00D93C  22DA               	addwfc	fsr2h,f,c
 40628  00D93E  0E00               	movlw	0
 40629  00D940  6EDF               	movwf	indf2,c
 40630                           
 40631                           ;buffer.c: 12: queue->write_pos = 0;
 40632  00D942  EE20 F002          	lfsr	2,2
 40633  00D946  500F               	movf	buffer_init@queue^0,w,c
 40634  00D948  26D9               	addwf	fsr2l,f,c
 40635  00D94A  5010               	movf	(buffer_init@queue+1)^0,w,c
 40636  00D94C  22DA               	addwfc	fsr2h,f,c
 40637  00D94E  0E00               	movlw	0
 40638  00D950  6EDF               	movwf	indf2,c
 40639  00D952  0012               	return		;funcret
 40640  00D954                     __end_of_buffer_init:
 40641                           	callstack 0
 40642                           
 40643 ;; *************** function _atcommand_init *****************
 40644 ;; Defined at:
 40645 ;;		line 232 in file "app_atcommand.c"
 40646 ;; Parameters:    Size  Location     Type
 40647 ;;		None
 40648 ;; Auto vars:     Size  Location     Type
 40649 ;;		None
 40650 ;; Return value:  Size  Location     Type
 40651 ;;                  1    wreg      void 
 40652 ;; Registers used:
 40653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40654 ;; Tracked objects:
 40655 ;;		On entry : 3F/0
 40656 ;;		On exit  : 0/0
 40657 ;;		Unchanged: 0/0
 40658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40663 ;;Total ram usage:        0 bytes
 40664 ;; Hardware stack levels used: 1
 40665 ;; Hardware stack levels required when called: 6
 40666 ;; This function calls:
 40667 ;;		_clear_command
 40668 ;; This function is called by:
 40669 ;;		_Board_initialize
 40670 ;; This function uses a non-reentrant model
 40671 ;;
 40672                           
 40673                           	psect	text207
 40674  00DEB0                     __ptext207:
 40675                           	callstack 0
 40676  00DEB0                     _atcommand_init:
 40677                           	callstack 23
 40678                           
 40679                           ; BSR set to: 0
 40680                           ;app_atcommand.c: 234: g_atcommand.seq = AT_INIT;
 40681                           
 40682                           ;incstack = 0
 40683  00DEB0  0E00               	movlw	0
 40684  00DEB2  0106               	movlb	6	; () banked
 40685  00DEB4  6F00               	movwf	_g_atcommand& (0+255),b
 40686                           
 40687                           ; BSR set to: 6
 40688                           ;app_atcommand.c: 235: clear_command();
 40689  00DEB6  ECF3  F063         	call	_clear_command	;wreg free
 40690  00DEBA  0012               	return		;funcret
 40691  00DEBC                     __end_of_atcommand_init:
 40692                           	callstack 0
 40693                           
 40694 ;; *************** function _clear_command *****************
 40695 ;; Defined at:
 40696 ;;		line 766 in file "app_atcommand.c"
 40697 ;; Parameters:    Size  Location     Type
 40698 ;;		None
 40699 ;; Auto vars:     Size  Location     Type
 40700 ;;		None
 40701 ;; Return value:  Size  Location     Type
 40702 ;;                  1    wreg      void 
 40703 ;; Registers used:
 40704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40705 ;; Tracked objects:
 40706 ;;		On entry : 0/6
 40707 ;;		On exit  : 0/0
 40708 ;;		Unchanged: 0/0
 40709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40714 ;;Total ram usage:        0 bytes
 40715 ;; Hardware stack levels used: 1
 40716 ;; Hardware stack levels required when called: 5
 40717 ;; This function calls:
 40718 ;;		__strclr
 40719 ;; This function is called by:
 40720 ;;		_atcommand_init
 40721 ;;		_atcommand_task
 40722 ;; This function uses a non-reentrant model
 40723 ;;
 40724                           
 40725                           	psect	text208
 40726  00C7E6                     __ptext208:
 40727                           	callstack 0
 40728  00C7E6                     _clear_command:
 40729                           	callstack 24
 40730                           
 40731                           ;app_atcommand.c: 768: g_atcommand.readidx = 0;
 40732                           
 40733                           ;incstack = 0
 40734  00C7E6  0E00               	movlw	0
 40735  00C7E8  0106               	movlb	6	; () banked
 40736  00C7EA  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 40737                           
 40738                           ;app_atcommand.c: 769: g_atcommand.status.channelno = 0;
 40739  00C7EC  0E00               	movlw	0
 40740  00C7EE  6F42               	movwf	(_g_atcommand+66)& (0+255),b
 40741                           
 40742                           ;app_atcommand.c: 770: g_atcommand.status.last_update = 0;
 40743  00C7F0  0E00               	movlw	0
 40744  00C7F2  6F43               	movwf	(_g_atcommand+67)& (0+255),b
 40745                           
 40746                           ;app_atcommand.c: 771: g_atcommand.status.atcommand = ATNONE;
 40747  00C7F4  0E00               	movlw	0
 40748  00C7F6  6F44               	movwf	(_g_atcommand+68)& (0+255),b
 40749                           
 40750                           ;app_atcommand.c: 772: g_atcommand.status.isApply = 0;
 40751  00C7F8  0E00               	movlw	0
 40752  00C7FA  6F50               	movwf	(_g_atcommand+80)& (0+255),b
 40753                           
 40754                           ;app_atcommand.c: 773: g_atcommand.status.type = AT_READONLY;
 40755  00C7FC  0E00               	movlw	0
 40756  00C7FE  6FF1               	movwf	(_g_atcommand+241)& (0+255),b
 40757                           
 40758                           ; BSR set to: 6
 40759                           ;app_atcommand.c: 775: _strclr(g_atcommand.read_cmd, sizeof(g_atcommand.read_cmd));
 40760  00C800  0E01               	movlw	low (_g_atcommand+1)
 40761  00C802  6E0F               	movwf	__strclr@dest^0,c
 40762  00C804  0E06               	movlw	high (_g_atcommand+1)
 40763  00C806  6E10               	movwf	(__strclr@dest+1)^0,c
 40764  00C808  0E00               	movlw	0
 40765  00C80A  6E12               	movwf	(__strclr@n+1)^0,c
 40766  00C80C  0E40               	movlw	64
 40767  00C80E  6E11               	movwf	__strclr@n^0,c
 40768  00C810  EC2B  F06B         	call	__strclr	;wreg free
 40769                           
 40770                           ;app_atcommand.c: 776: _strclr(g_atcommand.status.szcommand, sizeof(g_atcommand.status.s
      +                          zcommand));
 40771  00C814  0E45               	movlw	low (_g_atcommand+69)
 40772  00C816  6E0F               	movwf	__strclr@dest^0,c
 40773  00C818  0E06               	movlw	high (_g_atcommand+69)
 40774  00C81A  6E10               	movwf	(__strclr@dest+1)^0,c
 40775  00C81C  0E00               	movlw	0
 40776  00C81E  6E12               	movwf	(__strclr@n+1)^0,c
 40777  00C820  0E0B               	movlw	11
 40778  00C822  6E11               	movwf	__strclr@n^0,c
 40779  00C824  EC2B  F06B         	call	__strclr	;wreg free
 40780                           
 40781                           ;app_atcommand.c: 777: _strclr(g_atcommand.status.apply_params, sizeof(g_atcommand.statu
      +                          s.apply_params));
 40782  00C828  0E51               	movlw	low (_g_atcommand+81)
 40783  00C82A  6E0F               	movwf	__strclr@dest^0,c
 40784  00C82C  0E06               	movlw	high (_g_atcommand+81)
 40785  00C82E  6E10               	movwf	(__strclr@dest+1)^0,c
 40786  00C830  0E00               	movlw	0
 40787  00C832  6E12               	movwf	(__strclr@n+1)^0,c
 40788  00C834  0E20               	movlw	32
 40789  00C836  6E11               	movwf	__strclr@n^0,c
 40790  00C838  EC2B  F06B         	call	__strclr	;wreg free
 40791                           
 40792                           ;app_atcommand.c: 779: _strclr(writeBuffer, 64);
 40793  00C83C  0E08               	movlw	low _writeBuffer
 40794  00C83E  6E0F               	movwf	__strclr@dest^0,c
 40795  00C840  0E02               	movlw	high _writeBuffer
 40796  00C842  6E10               	movwf	(__strclr@dest+1)^0,c
 40797  00C844  0E00               	movlw	0
 40798  00C846  6E12               	movwf	(__strclr@n+1)^0,c
 40799  00C848  0E40               	movlw	64
 40800  00C84A  6E11               	movwf	__strclr@n^0,c
 40801  00C84C  EC2B  F06B         	call	__strclr	;wreg free
 40802  00C850  0012               	return		;funcret
 40803  00C852                     __end_of_clear_command:
 40804                           	callstack 0
 40805                           
 40806 ;; *************** function __strclr *****************
 40807 ;; Defined at:
 40808 ;;		line 47 in file "util/_string.c"
 40809 ;; Parameters:    Size  Location     Type
 40810 ;;  dest            2   14[COMRAM] PTR unsigned char 
 40811 ;;		 -> writeBuffer(64), g_nvm.eeprm.sensor_name(10), g_atcommand.status(176), g_atcommand(242), 
 40812 ;;		 -> g_nvm.eeprm(124), 
 40813 ;;  n               2   16[COMRAM] int 
 40814 ;; Auto vars:     Size  Location     Type
 40815 ;;		None
 40816 ;; Return value:  Size  Location     Type
 40817 ;;                  1    wreg      void 
 40818 ;; Registers used:
 40819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40820 ;; Tracked objects:
 40821 ;;		On entry : 0/6
 40822 ;;		On exit  : 0/0
 40823 ;;		Unchanged: 0/0
 40824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40829 ;;Total ram usage:        4 bytes
 40830 ;; Hardware stack levels used: 1
 40831 ;; Hardware stack levels required when called: 4
 40832 ;; This function calls:
 40833 ;;		Nothing
 40834 ;; This function is called by:
 40835 ;;		_atcommand_task
 40836 ;;		_clear_command
 40837 ;;		_nvm_clear_channel
 40838 ;;		_nvm_sensor_type_channel
 40839 ;; This function uses a non-reentrant model
 40840 ;;
 40841                           
 40842                           	psect	text209
 40843  00D656                     __ptext209:
 40844                           	callstack 0
 40845  00D656                     __strclr:
 40846                           	callstack 24
 40847                           
 40848                           ;_string.c: 49: if(!dest || !n || n<0) return;
 40849                           
 40850                           ;incstack = 0
 40851  00D656  500F               	movf	__strclr@dest^0,w,c
 40852  00D658  1010               	iorwf	(__strclr@dest+1)^0,w,c
 40853  00D65A  B4D8               	btfsc	status,2,c
 40854  00D65C  0012               	return	
 40855  00D65E  5011               	movf	__strclr@n^0,w,c
 40856  00D660  1012               	iorwf	(__strclr@n+1)^0,w,c
 40857  00D662  B4D8               	btfsc	status,2,c
 40858  00D664  0012               	return	
 40859  00D666  BE12               	btfsc	(__strclr@n+1)^0,7,c
 40860  00D668  0012               	return	
 40861  00D66A  D008               	goto	l18141
 40862  00D66C                     l18137:
 40863  00D66C  C00F  FFD9         	movff	__strclr@dest,fsr2l
 40864  00D670  C010  FFDA         	movff	__strclr@dest+1,fsr2h
 40865  00D674  0E00               	movlw	0
 40866  00D676  6EDF               	movwf	indf2,c
 40867  00D678  4A0F               	infsnz	__strclr@dest^0,f,c
 40868  00D67A  2A10               	incf	(__strclr@dest+1)^0,f,c
 40869  00D67C                     l18141:
 40870  00D67C  0611               	decf	__strclr@n^0,f,c
 40871  00D67E  A0D8               	btfss	status,0,c
 40872  00D680  0612               	decf	(__strclr@n+1)^0,f,c
 40873  00D682  2811               	incf	__strclr@n^0,w,c
 40874  00D684  E1F3               	bnz	l18137
 40875  00D686  2812               	incf	(__strclr@n+1)^0,w,c
 40876  00D688  B4D8               	btfsc	status,2,c
 40877  00D68A  0012               	return	
 40878  00D68C  D7EF               	goto	l18137
 40879  00D68E                     __end_of__strclr:
 40880                           	callstack 0
 40881                           
 40882 ;; *************** function _POWER_Init *****************
 40883 ;; Defined at:
 40884 ;;		line 11 in file "bsp/power.c"
 40885 ;; Parameters:    Size  Location     Type
 40886 ;;		None
 40887 ;; Auto vars:     Size  Location     Type
 40888 ;;		None
 40889 ;; Return value:  Size  Location     Type
 40890 ;;                  1    wreg      void 
 40891 ;; Registers used:
 40892 ;;		None
 40893 ;; Tracked objects:
 40894 ;;		On entry : 3F/F
 40895 ;;		On exit  : 3F/F
 40896 ;;		Unchanged: 3E/0
 40897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40902 ;;Total ram usage:        0 bytes
 40903 ;; Hardware stack levels used: 1
 40904 ;; Hardware stack levels required when called: 4
 40905 ;; This function calls:
 40906 ;;		Nothing
 40907 ;; This function is called by:
 40908 ;;		_Board_initialize
 40909 ;; This function uses a non-reentrant model
 40910 ;;
 40911                           
 40912                           	psect	text210
 40913  00DEDC                     __ptext210:
 40914                           	callstack 0
 40915  00DEDC                     _POWER_Init:
 40916                           	callstack 25
 40917                           
 40918                           ; BSR set to: 15
 40919                           ;power.c: 13: TRISAbits.TRISA1 = 1;
 40920                           
 40921                           ;incstack = 0
 40922  00DEDC  8292               	bsf	146,1,c	;volatile
 40923                           
 40924                           ;power.c: 14: TRISAbits.TRISA0 = 1;
 40925  00DEDE  8092               	bsf	146,0,c	;volatile
 40926                           
 40927                           ;power.c: 15: TRISAbits.TRISA3 = 1;
 40928  00DEE0  8692               	bsf	146,3,c	;volatile
 40929                           
 40930                           ;power.c: 16: TRISAbits.TRISA2 = 1;
 40931  00DEE2  8492               	bsf	146,2,c	;volatile
 40932                           
 40933                           ; BSR set to: 15
 40934  00DEE4  0012               	return		;funcret
 40935  00DEE6                     __end_of_POWER_Init:
 40936                           	callstack 0
 40937                           
 40938 ;; *************** function _rs485_read_task *****************
 40939 ;; Defined at:
 40940 ;;		line 113 in file "main.c"
 40941 ;; Parameters:    Size  Location     Type
 40942 ;;		None
 40943 ;; Auto vars:     Size  Location     Type
 40944 ;;  byte            1   13[COMRAM] unsigned char 
 40945 ;; Return value:  Size  Location     Type
 40946 ;;                  1    wreg      void 
 40947 ;; Registers used:
 40948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 40949 ;; Tracked objects:
 40950 ;;		On entry : 0/0
 40951 ;;		On exit  : 0/0
 40952 ;;		Unchanged: 0/0
 40953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40956 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40958 ;;Total ram usage:        8 bytes
 40959 ;; Hardware stack levels used: 1
 40960 ;; Hardware stack levels required when called: 3
 40961 ;; This function calls:
 40962 ;;		_rs485_readByte
 40963 ;;		i1_buffer_en_queue
 40964 ;; This function is called by:
 40965 ;;		Interrupt level 1
 40966 ;; This function uses a non-reentrant model
 40967 ;;
 40968                           
 40969                           	psect	intcodelo
 40970  000018                     __pintcodelo:
 40971                           	callstack 0
 40972  000018                     _rs485_read_task:
 40973                           	callstack 18
 40974                           
 40975                           ; BSR set to: 15
 40976                           ;incstack = 0
 40977  000018  8051               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 40978  00001A  CFD8 F007          	movff	status,??_rs485_read_task
 40979  00001E  CFE8 F008          	movff	wreg,??_rs485_read_task+1
 40980  000022  CFE0 F009          	movff	bsr,??_rs485_read_task+2
 40981  000026  CFE1 F00A          	movff	fsr1l,??_rs485_read_task+3
 40982  00002A  CFE2 F00B          	movff	fsr1h,??_rs485_read_task+4
 40983  00002E  CFD9 F00C          	movff	fsr2l,??_rs485_read_task+5
 40984  000032  CFDA F00D          	movff	fsr2h,??_rs485_read_task+6
 40985                           
 40986                           ;main.c: 118: uint8_t byte;;main.c: 119: if (rs485_readByte(&byte)) {
 40987  000036  0E0E               	movlw	low rs485_read_task@byte
 40988  000038  6E02               	movwf	rs485_readByte@byte^0,c
 40989  00003A  EC9A  F06E         	call	_rs485_readByte	;wreg free
 40990  00003E  0900               	iorlw	0
 40991  000040  B4D8               	btfsc	status,2,c
 40992  000042  D00C               	goto	i1l1602
 40993                           
 40994                           ;main.c: 120: if (g_nvm.flash.sensing_on == SENSING_ON) {
 40995  000044  0101               	movlb	1	; () banked
 40996  000046  0553               	decf	(_g_nvm+1)& (0+255),w,b
 40997  000048  A4D8               	btfss	status,2,c
 40998  00004A  D008               	goto	i1l1602
 40999                           
 41000                           ; BSR set to: 1
 41001                           ;main.c: 121: buffer_en_queue(&g_modbus_queue, byte);
 41002  00004C  0E60               	movlw	low _g_modbus_queue
 41003  00004E  6E01               	movwf	i1buffer_en_queue@queue^0,c
 41004  000050  0E04               	movlw	high _g_modbus_queue
 41005  000052  6E02               	movwf	(i1buffer_en_queue@queue+1)^0,c
 41006  000054  C00E  F003         	movff	rs485_read_task@byte,i1buffer_en_queue@ch
 41007  000058  EC60  F067         	call	i1_buffer_en_queue	;wreg free
 41008  00005C                     i1l1602:
 41009  00005C  C00D  FFDA         	movff	??_rs485_read_task+6,fsr2h
 41010  000060  C00C  FFD9         	movff	??_rs485_read_task+5,fsr2l
 41011  000064  C00B  FFE2         	movff	??_rs485_read_task+4,fsr1h
 41012  000068  C00A  FFE1         	movff	??_rs485_read_task+3,fsr1l
 41013  00006C  C009  FFE0         	movff	??_rs485_read_task+2,bsr
 41014  000070  C008  FFE8         	movff	??_rs485_read_task+1,wreg
 41015  000074  C007  FFD8         	movff	??_rs485_read_task,status
 41016  000078  9051               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 41017  00007A  0010               	retfie	
 41018  00007C                     __end_of_rs485_read_task:
 41019                           	callstack 0
 41020                           
 41021 ;; *************** function i1_buffer_en_queue *****************
 41022 ;; Defined at:
 41023 ;;		line 15 in file "util/buffer.c"
 41024 ;; Parameters:    Size  Location     Type
 41025 ;;  queue           2    0[COMRAM] PTR struct buff_queue
 41026 ;;		 -> g_modbus_queue(67), g_usb_queue(67), 
 41027 ;;  ch              1    2[COMRAM] unsigned char 
 41028 ;; Auto vars:     Size  Location     Type
 41029 ;;		None
 41030 ;; Return value:  Size  Location     Type
 41031 ;;                  1    wreg      void 
 41032 ;; Registers used:
 41033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 41034 ;; Tracked objects:
 41035 ;;		On entry : 3F/1
 41036 ;;		On exit  : 3F/1
 41037 ;;		Unchanged: 3F/0
 41038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41039 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41041 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41043 ;;Total ram usage:        6 bytes
 41044 ;; Hardware stack levels used: 1
 41045 ;; Hardware stack levels required when called: 1
 41046 ;; This function calls:
 41047 ;;		Nothing
 41048 ;; This function is called by:
 41049 ;;		_rs485_read_task
 41050 ;; This function uses a non-reentrant model
 41051 ;;
 41052                           
 41053                           	psect	text212
 41054  00CEC0                     __ptext212:
 41055                           	callstack 0
 41056  00CEC0                     i1_buffer_en_queue:
 41057                           	callstack 19
 41058                           
 41059                           ; BSR set to: 1
 41060                           ;buffer.c: 17: queue->buffer[queue->write_pos] = ch;
 41061                           
 41062                           ;incstack = 0
 41063  00CEC0  EE20 F002          	lfsr	2,2
 41064  00CEC4  5001               	movf	i1buffer_en_queue@queue^0,w,c
 41065  00CEC6  26D9               	addwf	fsr2l,f,c
 41066  00CEC8  5002               	movf	(i1buffer_en_queue@queue+1)^0,w,c
 41067  00CECA  22DA               	addwfc	fsr2h,f,c
 41068  00CECC  50DF               	movf	indf2,w,c
 41069  00CECE  6E04               	movwf	??i1_buffer_en_queue^0,c
 41070  00CED0  5004               	movf	??i1_buffer_en_queue^0,w,c
 41071  00CED2  2401               	addwf	i1buffer_en_queue@queue^0,w,c
 41072  00CED4  6E05               	movwf	(??i1_buffer_en_queue+1)^0,c
 41073  00CED6  0E00               	movlw	0
 41074  00CED8  2002               	addwfc	(i1buffer_en_queue@queue+1)^0,w,c
 41075  00CEDA  6E06               	movwf	(??i1_buffer_en_queue+2)^0,c
 41076  00CEDC  0E03               	movlw	3
 41077  00CEDE  2405               	addwf	(??i1_buffer_en_queue+1)^0,w,c
 41078  00CEE0  6ED9               	movwf	fsr2l,c
 41079  00CEE2  0E00               	movlw	0
 41080  00CEE4  2006               	addwfc	(??i1_buffer_en_queue+2)^0,w,c
 41081  00CEE6  6EDA               	movwf	fsr2h,c
 41082  00CEE8  C003  FFDF         	movff	i1buffer_en_queue@ch,indf2
 41083                           
 41084                           ; BSR set to: 1
 41085                           ;buffer.c: 18: queue->write_pos = (++queue->write_pos)%64;
 41086  00CEEC  EE20 F002          	lfsr	2,2
 41087  00CEF0  5001               	movf	i1buffer_en_queue@queue^0,w,c
 41088  00CEF2  26D9               	addwf	fsr2l,f,c
 41089  00CEF4  5002               	movf	(i1buffer_en_queue@queue+1)^0,w,c
 41090  00CEF6  22DA               	addwfc	fsr2h,f,c
 41091  00CEF8  EE10 F002          	lfsr	1,2
 41092  00CEFC  5001               	movf	i1buffer_en_queue@queue^0,w,c
 41093  00CEFE  26E1               	addwf	fsr1l,f,c
 41094  00CF00  5002               	movf	(i1buffer_en_queue@queue+1)^0,w,c
 41095  00CF02  22E2               	addwfc	fsr1h,f,c
 41096  00CF04  2AE7               	incf	indf1,f,c
 41097  00CF06  50E7               	movf	indf1,w,c
 41098  00CF08  0B3F               	andlw	63
 41099  00CF0A  6EDF               	movwf	indf2,c
 41100                           
 41101                           ; BSR set to: 1
 41102  00CF0C  0012               	return		;funcret
 41103  00CF0E                     __end_ofi1_buffer_en_queue:
 41104                           	callstack 0
 41105                           
 41106 ;; *************** function _rs485_readByte *****************
 41107 ;; Defined at:
 41108 ;;		line 40 in file "bsp/rs485.c"
 41109 ;; Parameters:    Size  Location     Type
 41110 ;;  byte            1    1[COMRAM] PTR unsigned char 
 41111 ;;		 -> rs485_read_task@byte(1), 
 41112 ;; Auto vars:     Size  Location     Type
 41113 ;;		None
 41114 ;; Return value:  Size  Location     Type
 41115 ;;                  1    wreg      unsigned char 
 41116 ;; Registers used:
 41117 ;;		wreg, fsr2l, fsr2h, status,2, cstack
 41118 ;; Tracked objects:
 41119 ;;		On entry : 0/0
 41120 ;;		On exit  : 0/0
 41121 ;;		Unchanged: 0/0
 41122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41123 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41127 ;;Total ram usage:        1 bytes
 41128 ;; Hardware stack levels used: 1
 41129 ;; Hardware stack levels required when called: 2
 41130 ;; This function calls:
 41131 ;;		_usart_getc
 41132 ;;		_usart_rx_ready
 41133 ;; This function is called by:
 41134 ;;		_rs485_read_task
 41135 ;; This function uses a non-reentrant model
 41136 ;;
 41137                           
 41138                           	psect	text213
 41139  00DD34                     __ptext213:
 41140                           	callstack 0
 41141  00DD34                     _rs485_readByte:
 41142                           	callstack 18
 41143                           
 41144                           ;rs485.c: 42: if (usart_rx_ready()) {
 41145                           
 41146                           ; BSR set to: 1
 41147                           ;incstack = 0
 41148  00DD34  EC5E  F06F         	call	_usart_rx_ready	;wreg free
 41149  00DD38  0900               	iorlw	0
 41150  00DD3A  B4D8               	btfsc	status,2,c
 41151  00DD3C  D008               	goto	i1l16203
 41152                           
 41153                           ;rs485.c: 43: *byte = usart_getc();
 41154  00DD3E  5002               	movf	rs485_readByte@byte^0,w,c
 41155  00DD40  6ED9               	movwf	fsr2l,c
 41156  00DD42  6ADA               	clrf	fsr2h,c
 41157  00DD44  ECF2  F06E         	call	_usart_getc	;wreg free
 41158  00DD48  6EDF               	movwf	indf2,c
 41159                           
 41160                           ;rs485.c: 44: return 1;
 41161  00DD4A  0E01               	movlw	1
 41162  00DD4C  0012               	return	
 41163  00DD4E                     i1l16203:
 41164                           
 41165                           ;rs485.c: 45: };rs485.c: 46: return 0;
 41166  00DD4E  0E00               	movlw	0
 41167  00DD50  0012               	return		;funcret
 41168  00DD52                     __end_of_rs485_readByte:
 41169                           	callstack 0
 41170                           
 41171 ;; *************** function _usart_rx_ready *****************
 41172 ;; Defined at:
 41173 ;;		line 43 in file "bsp/usart.c"
 41174 ;; Parameters:    Size  Location     Type
 41175 ;;		None
 41176 ;; Auto vars:     Size  Location     Type
 41177 ;;		None
 41178 ;; Return value:  Size  Location     Type
 41179 ;;                  1    wreg      unsigned char 
 41180 ;; Registers used:
 41181 ;;		wreg
 41182 ;; Tracked objects:
 41183 ;;		On entry : 0/0
 41184 ;;		On exit  : 0/0
 41185 ;;		Unchanged: 0/0
 41186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41191 ;;Total ram usage:        0 bytes
 41192 ;; Hardware stack levels used: 1
 41193 ;; Hardware stack levels required when called: 1
 41194 ;; This function calls:
 41195 ;;		Nothing
 41196 ;; This function is called by:
 41197 ;;		_rs485_readByte
 41198 ;; This function uses a non-reentrant model
 41199 ;;
 41200                           
 41201                           	psect	text214
 41202  00DEBC                     __ptext214:
 41203                           	callstack 0
 41204  00DEBC                     _usart_rx_ready:
 41205                           	callstack 18
 41206                           
 41207                           ;usart.c: 45: if (PIR1bits.RC1IF)
 41208                           
 41209                           ;incstack = 0
 41210  00DEBC  AA9E               	btfss	158,5,c	;volatile
 41211  00DEBE  D002               	goto	i1l14921
 41212                           
 41213                           ;usart.c: 46: return 1;
 41214  00DEC0  0E01               	movlw	1
 41215  00DEC2  0012               	return	
 41216  00DEC4                     i1l14921:
 41217                           
 41218                           ;usart.c: 47: return 0;
 41219  00DEC4  0E00               	movlw	0
 41220  00DEC6  0012               	return		;funcret
 41221  00DEC8                     __end_of_usart_rx_ready:
 41222                           	callstack 0
 41223                           
 41224 ;; *************** function _usart_getc *****************
 41225 ;; Defined at:
 41226 ;;		line 50 in file "bsp/usart.c"
 41227 ;; Parameters:    Size  Location     Type
 41228 ;;		None
 41229 ;; Auto vars:     Size  Location     Type
 41230 ;;  c               1    0[COMRAM] unsigned char 
 41231 ;; Return value:  Size  Location     Type
 41232 ;;                  1    wreg      unsigned char 
 41233 ;; Registers used:
 41234 ;;		wreg, status,2
 41235 ;; Tracked objects:
 41236 ;;		On entry : 0/0
 41237 ;;		On exit  : 0/0
 41238 ;;		Unchanged: 0/0
 41239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41244 ;;Total ram usage:        1 bytes
 41245 ;; Hardware stack levels used: 1
 41246 ;; Hardware stack levels required when called: 1
 41247 ;; This function calls:
 41248 ;;		Nothing
 41249 ;; This function is called by:
 41250 ;;		_rs485_readByte
 41251 ;; This function uses a non-reentrant model
 41252 ;;
 41253                           
 41254                           	psect	text215
 41255  00DDE4                     __ptext215:
 41256                           	callstack 0
 41257  00DDE4                     _usart_getc:
 41258                           	callstack 18
 41259                           
 41260                           ;usart.c: 54: if(RCSTA1bits.OERR == 1)
 41261                           
 41262                           ;incstack = 0
 41263  00DDE4  A2AC               	btfss	172,1,c	;volatile
 41264  00DDE6  D005               	goto	i1l378
 41265                           
 41266                           ;usart.c: 55: {;usart.c: 56: RCSTA1bits.CREN = 0;
 41267  00DDE8  98AC               	bcf	172,4,c	;volatile
 41268                           
 41269                           ;usart.c: 57: c = RCREG1;
 41270  00DDEA  CFAF F001          	movff	4015,usart_getc@c	;volatile
 41271                           
 41272                           ;usart.c: 58: RCSTA1bits.CREN = 1;
 41273  00DDEE  88AC               	bsf	172,4,c	;volatile
 41274                           
 41275                           ;usart.c: 59: }
 41276  00DDF0  D002               	goto	i1l14931
 41277  00DDF2                     i1l378:
 41278                           
 41279                           ;usart.c: 60: else;usart.c: 61: {;usart.c: 62: c = RCREG1;
 41280  00DDF2  CFAF F001          	movff	4015,usart_getc@c	;volatile
 41281  00DDF6                     i1l14931:
 41282                           
 41283                           ;usart.c: 63: };usart.c: 64: return c;
 41284  00DDF6  5001               	movf	usart_getc@c^0,w,c
 41285  00DDF8  0012               	return		;funcret
 41286  00DDFA                     __end_of_usart_getc:
 41287                           	callstack 0
 41288                           
 41289 ;; *************** function _SYS_InterruptHigh *****************
 41290 ;; Defined at:
 41291 ;;		line 135 in file "system.c"
 41292 ;; Parameters:    Size  Location     Type
 41293 ;;		None
 41294 ;; Auto vars:     Size  Location     Type
 41295 ;;		None
 41296 ;; Return value:  Size  Location     Type
 41297 ;;                  1    wreg      void 
 41298 ;; Registers used:
 41299 ;;		wreg, status,2, status,0
 41300 ;; Tracked objects:
 41301 ;;		On entry : 0/0
 41302 ;;		On exit  : 0/0
 41303 ;;		Unchanged: 0/0
 41304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41309 ;;Total ram usage:        0 bytes
 41310 ;; Hardware stack levels used: 1
 41311 ;; This function calls:
 41312 ;;		Nothing
 41313 ;; This function is called by:
 41314 ;;		Interrupt level 2
 41315 ;; This function uses a non-reentrant model
 41316 ;;
 41317                           
 41318                           	psect	intcode
 41319  000008                     __pintcode:
 41320                           	callstack 0
 41321  000008                     _SYS_InterruptHigh:
 41322                           	callstack 18
 41323                           
 41324                           ;incstack = 0
 41325  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 41326  00000A  EFCE  F06B         	goto	int_func
 41327                           
 41328                           	psect	intcode_body
 41329  00D79C                     __pintcode_body:
 41330                           	callstack 18
 41331  00D79C                     int_func:
 41332                           	callstack 18
 41333                           
 41334                           ;system.c: 141: if(INTCONbits.TMR0IF)
 41335  00D79C  A4F2               	btfss	242,2,c	;volatile
 41336  00D79E  D017               	goto	i2l1904
 41337                           
 41338                           ;system.c: 142: {;system.c: 143: INTCONbits.TMR0IF = 0;
 41339  00D7A0  94F2               	bcf	242,2,c	;volatile
 41340                           
 41341                           ;system.c: 144: g_tick_count++;
 41342  00D7A2  0100               	movlb	0	; () banked
 41343  00D7A4  2BF7               	incf	_g_tick_count& (0+255),f,b	;volatile
 41344                           
 41345                           ; BSR set to: 0
 41346                           ;system.c: 146: if(g_tick_count > 7)
 41347  00D7A6  0E07               	movlw	7
 41348  00D7A8  65F7               	cpfsgt	_g_tick_count& (0+255),b	;volatile
 41349  00D7AA  D011               	goto	i2l1904
 41350                           
 41351                           ; BSR set to: 0
 41352                           ;system.c: 147: {;system.c: 148: g_large_counter++;
 41353  00D7AC  4BE0               	infsnz	_g_large_counter& (0+255),f,b	;volatile
 41354  00D7AE  2BE1               	incf	(_g_large_counter+1)& (0+255),f,b	;volatile
 41355                           
 41356                           ; BSR set to: 0
 41357                           ;system.c: 152: g_usedtime_count++;
 41358  00D7B0  0E01               	movlw	1
 41359  00D7B2  0101               	movlb	1	; () banked
 41360  00D7B4  273E               	addwf	_g_usedtime_count& (0+255),f,b	;volatile
 41361  00D7B6  0E00               	movlw	0
 41362  00D7B8  233F               	addwfc	(_g_usedtime_count+1)& (0+255),f,b	;volatile
 41363  00D7BA  2340               	addwfc	(_g_usedtime_count+2)& (0+255),f,b	;volatile
 41364  00D7BC  2341               	addwfc	(_g_usedtime_count+3)& (0+255),f,b	;volatile
 41365                           
 41366                           ; BSR set to: 1
 41367                           ;system.c: 153: g_timeout_count++;
 41368  00D7BE  0100               	movlb	0	; () banked
 41369  00D7C0  2BFB               	incf	_g_timeout_count& (0+255),f,b	;volatile
 41370                           
 41371                           ; BSR set to: 0
 41372                           ;system.c: 154: g_relay_sec_count++;
 41373  00D7C2  4BE4               	infsnz	_g_relay_sec_count& (0+255),f,b	;volatile
 41374  00D7C4  2BE5               	incf	(_g_relay_sec_count+1)& (0+255),f,b	;volatile
 41375                           
 41376                           ; BSR set to: 0
 41377                           ;system.c: 155: g_relay_status_count++;
 41378  00D7C6  4BE2               	infsnz	_g_relay_status_count& (0+255),f,b	;volatile
 41379  00D7C8  2BE3               	incf	(_g_relay_status_count+1)& (0+255),f,b	;volatile
 41380                           
 41381                           ; BSR set to: 0
 41382                           ;system.c: 156: g_tick_count = 0;
 41383  00D7CA  0E00               	movlw	0
 41384  00D7CC  6FF7               	movwf	_g_tick_count& (0+255),b	;volatile
 41385  00D7CE                     i2l1904:
 41386  00D7CE  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 41387  00D7D0  0011               	retfie		f
 41388  00D7D2                     __end_of_SYS_InterruptHigh:
 41389                           	callstack 0
 41390                           
 41391                           	psect	rparam
 41392  0000                     
 41393                           	psect	temp
 41394  000051                     btemp:
 41395                           	callstack 0
 41396  000051                     	ds	1
 41397  0000                     int$flags	set	btemp
 41398  0000                     wtemp8	set	btemp+1
 41399  0000                     ttemp5	set	btemp+1
 41400  0000                     ttemp6	set	btemp+4
 41401  0000                     ttemp7	set	btemp+8
 41402                           
 41403                           	psect	config
 41404                           
 41405                           ;Config register CONFIG1L @ 0xFFF8
 41406                           ;	Watchdog Timer
 41407                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
 41408                           ;	PLL Prescaler Selection bits
 41409                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 41410                           ;	Stack Overflow/Underflow Reset
 41411                           ;	STVREN = ON, Enabled
 41412                           ;	Extended Instruction Set
 41413                           ;	XINST = OFF, Disabled
 41414                           ;	Background Debug
 41415                           ;	DEBUG = 0x1, unprogrammed default
 41416  FFF8                     	org	65528
 41417  FFF8  AC                 	db	172
 41418                           
 41419                           ;Config register CONFIG1H @ 0xFFF9
 41420                           ;	CPU System Clock Postscaler
 41421                           ;	CPUDIV = OSC1, No CPU system clock divide
 41422                           ;	Code Protect
 41423                           ;	CP0 = OFF, Program memory is not code-protected
 41424  FFF9                     	org	65529
 41425  FFF9  F7                 	db	247
 41426                           
 41427                           ;Config register CONFIG2L @ 0xFFFA
 41428                           ;	Oscillator
 41429                           ;	OSC = INTOSCPLL, INTOSCPLL
 41430                           ;	T1OSCEN Enforcement
 41431                           ;	T1DIG = OFF, Secondary Oscillator clock source may not be selected
 41432                           ;	Low-Power Timer1 Oscillator
 41433                           ;	LPT1OSC = OFF, High-power operation
 41434                           ;	Fail-Safe Clock Monitor
 41435                           ;	FCMEN = ON, Enabled
 41436                           ;	Internal External Oscillator Switch Over Mode
 41437                           ;	IESO = OFF, Disabled
 41438  FFFA                     	org	65530
 41439  FFFA  52                 	db	82
 41440                           
 41441                           ;Config register CONFIG2H @ 0xFFFB
 41442                           ;	Watchdog Postscaler
 41443                           ;	WDTPS = 1024, 1:1024
 41444  FFFB                     	org	65531
 41445  FFFB  FA                 	db	250
 41446                           
 41447                           ;Config register CONFIG3L @ 0xFFFC
 41448                           ;	DSWDT Clock Select
 41449                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
 41450                           ;	RTCC Clock Select
 41451                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
 41452                           ;	Deep Sleep BOR
 41453                           ;	DSBOREN = OFF, Disabled
 41454                           ;	Deep Sleep Watchdog Timer
 41455                           ;	DSWDTEN = OFF, Disabled
 41456                           ;	Deep Sleep Watchdog Postscaler
 41457                           ;	DSWDTPS = 2048, 1:2,048 (2.1 seconds)
 41458  FFFC                     	org	65532
 41459  FFFC  53                 	db	83
 41460                           
 41461                           ;Config register CONFIG3H @ 0xFFFD
 41462                           ;	IOLOCK One-Way Set Enable bit
 41463                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
 41464                           ;	MSSP address masking
 41465                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
 41466  FFFD                     	org	65533
 41467  FFFD  F9                 	db	249
 41468                           
 41469                           ;Config register CONFIG4L @ 0xFFFE
 41470                           ;	Write/Erase Protect Page Start/End Location
 41471                           ;	WPFP = PAGE_1, Write Protect Program Flash Page 1
 41472                           ;	Write/Erase Protect Region Select (valid when WPDIS = 0)
 41473                           ;	WPEND = PAGE_0, Page 0 through WPFP<5:0> erase/write protected
 41474                           ;	Write/Erase Protect Configuration Region
 41475                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
 41476  FFFE                     	org	65534
 41477  FFFE  81                 	db	129
 41478                           
 41479                           ;Config register CONFIG4H @ 0xFFFF
 41480                           ;	Write Protect Disable bit
 41481                           ;	WPDIS = OFF, WPFP<5:0>/WPEND region ignored
 41482  FFFF                     	org	65535
 41483  FFFF  F1                 	db	241
 41484                           tosu	equ	0xFFF
 41485                           tosh	equ	0xFFE
 41486                           tosl	equ	0xFFD
 41487                           stkptr	equ	0xFFC
 41488                           pclatu	equ	0xFFB
 41489                           pclath	equ	0xFFA
 41490                           pcl	equ	0xFF9
 41491                           tblptru	equ	0xFF8
 41492                           tblptrh	equ	0xFF7
 41493                           tblptrl	equ	0xFF6
 41494                           tablat	equ	0xFF5
 41495                           prodh	equ	0xFF4
 41496                           prodl	equ	0xFF3
 41497                           indf0	equ	0xFEF
 41498                           postinc0	equ	0xFEE
 41499                           postdec0	equ	0xFED
 41500                           preinc0	equ	0xFEC
 41501                           plusw0	equ	0xFEB
 41502                           fsr0h	equ	0xFEA
 41503                           fsr0l	equ	0xFE9
 41504                           wreg	equ	0xFE8
 41505                           indf1	equ	0xFE7
 41506                           postinc1	equ	0xFE6
 41507                           postdec1	equ	0xFE5
 41508                           preinc1	equ	0xFE4
 41509                           plusw1	equ	0xFE3
 41510                           fsr1h	equ	0xFE2
 41511                           fsr1l	equ	0xFE1
 41512                           bsr	equ	0xFE0
 41513                           indf2	equ	0xFDF
 41514                           postinc2	equ	0xFDE
 41515                           postdec2	equ	0xFDD
 41516                           preinc2	equ	0xFDC
 41517                           plusw2	equ	0xFDB
 41518                           fsr2h	equ	0xFDA
 41519                           fsr2l	equ	0xFD9
 41520                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    816
    Data        180
    BSS         1321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      80
    BANK0           160    111     158
    BANK1           256      3     256
    BANK2           256      4     256
    BANK3           256     15     242
    BANK4           192      0     159
    BANK5           256      0     247
    BANK6           256      0     242
    BANK7           256      0      60
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    rcallback@ctx	PTR void  size(2) Largest target is 0

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK0[1]), BDT(BIGRAMl[48]), 
		 -> NULL(NULL[0]), 

    S2753$1$1	PTR struct modbusParser size(2) Largest target is 0

    S2753$1$0	PTR struct modbusSlave size(2) Largest target is 66
		 -> g_slave(BANK2[61]), 

    S2752$1$4	PTR void  size(2) Largest target is 0

    mktime@timeptr	PTR struct tm size(1) Largest target is 18
		 -> build_time@tm(BANK0[18]), 

    memset@p1	PTR void  size(2) Largest target is 66
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), g_slave.response(BANK2[24]), 
		 -> g_slave.request(BANK2[10]), g_master.response(BANK2[10]), g_master.data..(BANK2[3]), g_master.request(BANK2[10]), 
		 -> g_master(BANK2[37]), g_slave(BANK2[61]), 

    memset@p	PTR unsigned char  size(2) Largest target is 66
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), g_slave.response(BANK2[24]), 
		 -> g_slave.request(BANK2[10]), g_master.response(BANK2[10]), g_master.data..(BANK2[3]), g_master.request(BANK2[10]), 
		 -> g_master(BANK2[37]), g_slave(BANK2[61]), 

    memcpy@d1	PTR void  size(2) Largest target is 154
		 -> SetupPkt(BIGRAMh[8]), g_master.data..(BANK2[3]), g_nvm.eeprm(BANK1[124]), g_eeprmTemp(BANK3[124]), 
		 -> g_nvm(BANK1[154]), modbusParseResponse@crcreq(COMRAM[2]), modbusParseResponse@crcresp(COMRAM[2]), modbusParseRequest@crc(BANK0[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 154
		 -> SetupPkt(BIGRAMh[8]), g_master.data..(BANK2[3]), g_nvm.eeprm(BANK1[124]), g_eeprmTemp(BANK3[124]), 
		 -> g_nvm(BANK1[154]), modbusParseResponse@crcreq(COMRAM[2]), modbusParseResponse@crcresp(COMRAM[2]), modbusParseRequest@crc(BANK0[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[3775]), SetupPkt(BIGRAMh[8]), g_slave.request.frame(BANK2[9]), 
		 -> g_master.response.frame(BANK2[9]), g_master.request.frame(BANK2[9]), g_nvm.eeprm(BANK1[124]), g_eeprmTemp(BANK3[124]), 
		 -> g_nvm(BANK1[154]), modbusParseResponse0102@parser(COMRAM[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[3775]), SetupPkt(BIGRAMh[8]), g_slave.request.frame(BANK2[9]), 
		 -> g_master.response.frame(BANK2[9]), g_master.request.frame(BANK2[9]), g_nvm.eeprm(BANK1[124]), g_eeprmTemp(BANK3[124]), 
		 -> g_nvm(BANK1[154]), modbusParseResponse0102@parser(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_17(CODE[5]), STR_12(CODE[5]), STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    buffer_de_queue_bool@ch	PTR unsigned char  size(1) Largest target is 1
		 -> modbus_slave_task@byte(COMRAM[1]), modbus_master_task@byte(COMRAM[1]), 

    buffer_de_queue_bool@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_modbus_queue(BANK4[67]), 

    buffer_de_queue@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usb_queue(BANK5[67]), 

    buffer_en_queue@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_modbus_queue(BANK4[67]), g_usb_queue(BANK5[67]), 

    buffer_init@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_modbus_queue(BANK4[67]), g_usb_queue(BANK5[67]), 

    _isdigit@src	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.apply_params(BANK6[32]), g_atcommand(BANK6[242]), 

    _strclr@dest	PTR unsigned char  size(2) Largest target is 242
		 -> writeBuffer(BANK2[64]), g_nvm.eeprm.sensor_name(BANK1[10]), g_atcommand.status(BANK6[176]), g_atcommand(BANK6[242]), 
		 -> g_nvm.eeprm(BANK1[124]), 

    _strlen@source	PTR const unsigned char  size(2) Largest target is 494
		 -> g_atcommand.apply_params(BANK6[32]), STR_6(CODE[18]), writeBuffer(BANK2[64]), parse_command@cmd(BANK0[11]), 
		 -> g_atcommand(BANK6[242]), atcommand_type(CODE[494]), 

    _strlen@sc	PTR const unsigned char  size(2) Largest target is 494
		 -> g_atcommand.apply_params(BANK6[32]), STR_6(CODE[18]), writeBuffer(BANK2[64]), parse_command@cmd(BANK0[11]), 
		 -> g_atcommand(BANK6[242]), atcommand_type(CODE[494]), 

    _strcpy@dest	PTR unsigned char  size(2) Largest target is 242
		 -> writeBuffer(BANK2[64]), g_nvm.eeprm.sensor_name(BANK1[10]), g_atcommand(BANK6[242]), g_nvm.eeprm(BANK1[124]), 

    _strcpy@source	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.apply_params(BANK6[32]), STR_16(CODE[9]), STR_15(CODE[3]), STR_14(CODE[7]), 
		 -> STR_13(CODE[8]), STR_11(CODE[10]), STR_10(CODE[5]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[15]), STR_4(CODE[15]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), g_nvm.eeprm.sensor_name(BANK1[10]), parse_command@param(BANK0[32]), 
		 -> parse_command@cmd(BANK0[11]), g_atcommand.status(BANK6[176]), g_atcommand(BANK6[242]), g_nvm.eeprm(BANK1[124]), 

    _itoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _itoa@p	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _ftoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _atoi@str	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.apply_params(BANK6[32]), g_atcommand(BANK6[242]), 

    _atoi@p	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand.apply_params(BANK6[32]), g_atcommand(BANK6[242]), 

    _atof@str	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.manual_params(BANK6[128]), g_atcommand.apply_params(BANK6[32]), g_atcommand(BANK6[242]), 

    _atof@p	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand.manual_params(BANK6[128]), g_atcommand.apply_params(BANK6[32]), g_atcommand(BANK6[242]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> STR_6(CODE[18]), writeBuffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S7771_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S7771_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S7771_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S7771_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK5[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S6293$pFunc	PTR FTN()void  size(2) Largest target is 2
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 2
		 -> Absolute function(), 

    S6283$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S6283$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6259$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6259$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6259$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6259$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    Kalman_setProcessNoise@pObj	PTR struct . size(2) Largest target is 48
		 -> kalmanFilter(BANK2[48]), 

    Kalman_setEstimateError@pObj	PTR struct . size(2) Largest target is 48
		 -> kalmanFilter(BANK2[48]), 

    Kalman_setMeasurementError@pObj	PTR struct . size(2) Largest target is 48
		 -> kalmanFilter(BANK2[48]), 

    Kalman_updateEstimate@pObj	PTR struct . size(2) Largest target is 48
		 -> kalmanFilter(BANK2[48]), 

    ewmaFilter_get@ewmaFilter	PTR struct . size(2) Largest target is 10
		 -> ewmaFilter(BANK2[10]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(BANK5[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    sensor_ADC_read@raw_adc	PTR int  size(2) Largest target is 2
		 -> sensMeasure_gas_read@raw(BANK3[2]), sensMeasure_temp_read@raw(BANK0[2]), 

    sensor_temp_fahrenheit@temp	PTR float  size(2) Largest target is 4
		 -> build_response@temp(BANK3[4]), display_sensor_value@temp(BANK3[4]), 

    nvm_read_flash_all@flash	PTR struct . size(2) Largest target is 154
		 -> g_nvm(BANK1[154]), 

    nvm_write_flash_all@flash	PTR struct . size(2) Largest target is 154
		 -> g_nvm(BANK1[154]), 

    sp__get_product_desc	PTR unsigned int  size(2) Largest target is 52
		 -> sd002.string(BANK5[50]), sd002(BANK5[52]), 

    nvm_init@pdesc	PTR unsigned int  size(2) Largest target is 52
		 -> sd002.string(BANK5[50]), sd002(BANK5[52]), 

    checksum@data	PTR const unsigned char  size(2) Largest target is 154
		 -> g_nvm.eeprm(BANK1[124]), g_nvm(BANK1[154]), 

    modbus_set_register@reg	PTR const unsigned int  size(2) Largest target is 16
		 -> g_modbus_value(BANK2[16]), 

    g_pRegs	PTR unsigned int  size(2) Largest target is 16
		 -> g_modbus_value(BANK2[16]), NULL(NULL[0]), 

    g_slave.userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    g_slave.coilMask	PTR unsigned char  size(2) Largest target is 0

    g_slave.discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    g_slave.coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    g_slave.registerCallbackContext	PTR void  size(2) Largest target is 0

    g_slave.registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusBuildRequest01@mbcoils$F4614@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    build_response@status	PTR const struct . size(2) Largest target is 242
		 -> g_atcommand.status(BANK6[176]), g_atcommand(BANK6[242]), 

    update_command@status	PTR struct . size(2) Largest target is 242
		 -> g_atcommand(BANK6[242]), 

    split_param@params	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand(BANK6[242]), 

    split_param@src	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand(BANK6[242]), 

    parse_command@status	PTR struct . size(2) Largest target is 242
		 -> g_atcommand(BANK6[242]), 

    parse_command@buff	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.read_cmd(BANK6[64]), g_atcommand(BANK6[242]), 

    check_atcommand@chno	PTR unsigned char  size(1) Largest target is 1
		 -> parse_command@chno(BANK0[1]), 

    check_atcommand@cmd	PTR const unsigned char  size(1) Largest target is 11
		 -> parse_command@cmd(BANK0[11]), 

    atcommand_compare@channelno	PTR unsigned char  size(1) Largest target is 1
		 -> parse_command@chno(BANK0[1]), 

    atcommand_compare@src2	PTR const unsigned char  size(1) Largest target is 11
		 -> parse_command@cmd(BANK0[11]), 

    atcommand_compare@src1	PTR const unsigned char  size(2) Largest target is 494
		 -> atcommand_type(CODE[494]), 

    param_copy@src2	PTR const unsigned char  size(1) Largest target is 32
		 -> parse_command@param(BANK0[32]), 

    param_copy@src1	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand(BANK6[242]), 

    write_command@buff	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_6(CODE[18]), writeBuffer(BANK2[64]), 

    modbusMasterEnd@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    modbusMasterInit@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    modbusParseResponse@requestParser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.request.frame(BANK2[9]), 

    modbusParseResponse@parser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.response.frame(BANK2[9]), 

    modbusParseResponse@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    modbusParseException@parser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.response.frame(BANK2[9]), 

    modbusParseException@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    modbusBuildExceptionErr@status.userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    modbusBuildExceptionErr@status.coilMask	PTR unsigned char  size(2) Largest target is 0

    modbusBuildExceptionErr@status.discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusBuildExceptionErr@status.coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusBuildExceptionErr@status.registerCallbackContext	PTR void  size(2) Largest target is 0

    modbusBuildExceptionErr@status.registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusBuildExceptionErr@status	PTR struct modbusSlave size(2) Largest target is 66
		 -> g_slave(BANK2[61]), 

    modbusSlaveEnd@status.userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    modbusSlaveEnd@status.coilMask	PTR unsigned char  size(2) Largest target is 0

    modbusSlaveEnd@status.discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusSlaveEnd@status.coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusSlaveEnd@status.registerCallbackContext	PTR void  size(2) Largest target is 0

    modbusSlaveEnd@status.registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusSlaveEnd@status	PTR struct modbusSlave size(2) Largest target is 66
		 -> g_slave(BANK2[61]), 

    modbusSlaveInit@status.userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    modbusSlaveInit@status.coilMask	PTR unsigned char  size(2) Largest target is 0

    modbusSlaveInit@status.discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusSlaveInit@status.coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusSlaveInit@status.registerCallbackContext	PTR void  size(2) Largest target is 0

    modbusSlaveInit@status.registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusSlaveInit@status	PTR struct modbusSlave size(2) Largest target is 66
		 -> g_slave(BANK2[61]), 

    S2753modbusSlaveUserFunction$handler	PTR FTN(PTR struct modbusSlave,PTR struct modbusParser,)enum E151 size(2) Largest target is 0

    modbusParseRequest@status.userFunctions.handler	PTR FTN(PTR struct modbusSlave,PTR struct modbusParser,)enum E151 size(2) Largest target is 0

    modbusParseRequest@parser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_slave.request.frame(BANK2[9]), 

    modbusParseRequest@status.userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    modbusParseRequest@status.coilMask	PTR unsigned char  size(2) Largest target is 0

    modbusParseRequest@status.discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusParseRequest@status.coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusParseRequest@status.registerCallbackContext	PTR void  size(2) Largest target is 0

    modbusParseRequest@status.registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusParseRequest@status	PTR struct modbusSlave size(2) Largest target is 66
		 -> g_slave(BANK2[61]), 

    modbusBuildException@exception	PTR struct modbusParser size(2) Largest target is 0
		 -> g_slave.response.frame(BANK2[23]), 

    modbusBuildException@requestParser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_slave.request.frame(BANK2[9]), 

    modbusBuildException@status.userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    modbusBuildException@status.coilMask	PTR unsigned char  size(2) Largest target is 0

    modbusBuildException@status.discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusBuildException@status.coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusBuildException@status.registerCallbackContext	PTR void  size(2) Largest target is 0

    modbusBuildException@status.registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusBuildException@status	PTR struct modbusSlave size(2) Largest target is 66
		 -> g_slave(BANK2[61]), 

    modbusCRC@data	PTR const unsigned char  size(2) Largest target is 3
		 -> g_slave.response.frame(BANK2[23]), g_slave.request.frame(BANK2[9]), g_master.response.frame(BANK2[9]), g_master.request.frame(BANK2[9]), 
		 -> modbusBuildException@exception(COMRAM[2]), modbusParseRequest0304@builder(COMRAM[2]), modbusBuildRequest05@builder(COMRAM[2]), modbusBuildRequest0102@builder(COMRAM[2]), 

    modbusParseRequest0304@builder	PTR struct modbusParser size(2) Largest target is 0
		 -> g_slave.response.frame(BANK2[23]), 

    S2752modbusSlave$userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    modbusParseRequest0304@status.userFunctions	PTR struct modbusSlaveUserFunction size(2) Largest target is 0

    S2752modbusSlave$coilMask	PTR unsigned char  size(2) Largest target is 0

    modbusParseRequest0304@status.coilMask	PTR unsigned char  size(2) Largest target is 0

    S2752modbusSlave$discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusParseRequest0304@status.discreteInputs	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2752modbusSlave$coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    modbusParseRequest0304@status.coils	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2752modbusSlave$registerCallbackContext	PTR void  size(2) Largest target is 0

    modbusParseRequest0304@status.registerCallbackContext	PTR void  size(2) Largest target is 0

    S2752modbusSlave$registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusParseRequest0304@status.registerCallback	PTR FTN(enum E399,enum E190,unsigned int ,unsigned int ,PTR void ,)unsigned int  size(2) Largest target is 2
		 -> rcallback(), 

    modbusParseRequest0304@parser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_slave.request.frame(BANK2[9]), 

    modbusParseRequest0304@status	PTR struct modbusSlave size(2) Largest target is 66
		 -> g_slave(BANK2[61]), 

    modbusParseResponse05@requestParser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.request.frame(BANK2[9]), 

    modbusParseResponse05@parser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.response.frame(BANK2[9]), 

    modbusParseResponse05@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    sp__memcpy	PTR void  size(2) Largest target is 154
		 -> SetupPkt(BIGRAMh[8]), g_master.data..(BANK2[3]), g_nvm.eeprm(BANK1[124]), g_eeprmTemp(BANK3[124]), 
		 -> g_nvm(BANK1[154]), modbusParseResponse@crcreq(COMRAM[2]), modbusParseResponse@crcresp(COMRAM[2]), modbusParseRequest@crc(BANK0[2]), 

    modbusParseResponse0102@requestParser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.request.frame(BANK2[9]), 

    modbusParseResponse0102@parser	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.response.frame(BANK2[9]), 

    modbusParseResponse0102@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    modbusBuildRequest05@builder	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.request.frame(BANK2[9]), 

    modbusBuildRequest05@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    modbusBuildRequest0102@builder	PTR struct modbusParser size(2) Largest target is 0
		 -> g_master.request.frame(BANK2[9]), 

    sp__memset	PTR void  size(2) Largest target is 66
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), g_slave.response(BANK2[24]), 
		 -> g_slave.request(BANK2[10]), g_master.response(BANK2[10]), g_master.data..(BANK2[3]), g_master.request(BANK2[10]), 
		 -> g_master(BANK2[37]), g_slave(BANK2[61]), 

    modbusBuildRequest0102@status	PTR struct modbusMaster size(2) Largest target is 37
		 -> g_master(BANK2[37]), 

    usart_writeBytes@wrptr	PTR const unsigned char  size(2) Largest target is 24
		 -> g_slave.response.frame(BANK2[23]), g_slave.response(BANK2[24]), g_master.request.frame(BANK2[9]), g_master.request(BANK2[10]), 

    rs485_readByte@byte	PTR unsigned char  size(1) Largest target is 1
		 -> rs485_read_task@byte(COMRAM[1]), 

    rs485_writeBytes@wrptr	PTR const unsigned char  size(2) Largest target is 24
		 -> g_slave.response.frame(BANK2[23]), g_slave.response(BANK2[24]), g_master.request.frame(BANK2[9]), g_master.request(BANK2[10]), 

    lmp91000_get_status@preg	PTR unsigned char  size(1) Largest target is 1
		 -> lmp91000_isReady@rBuff(COMRAM[1]), 

    i2c_readBytes_from@rdptr	PTR unsigned char  size(2) Largest target is 154
		 -> g_nvm.eeprm(BANK1[124]), g_nvm(BANK1[154]), 

    i2c_readBytes_from@wraddr	PTR const unsigned char  size(1) Largest target is 1
		 -> eeprom_RandomRead@mem_addr(COMRAM[1]), 

    i2c_readBytes@rdptr	PTR unsigned char  size(2) Largest target is 154
		 -> g_nvm.eeprm(BANK1[124]), g_nvm(BANK1[154]), max7323_get_gpio@b(COMRAM[1]), lmp91000_get_Modecn@rBuff(COMRAM[1]), 
		 -> lmp91000_get_Refcn@rBuff(COMRAM[1]), lmp91000_get_Tiacn@rBuff(COMRAM[1]), lmp91000_get_lock@rBuff(COMRAM[1]), lmp91000_get_status@rBuff(COMRAM[1]), 
		 -> ads1114_Comparator_SetUp@rbuff(COMRAM[2]), ads1114_read@rbuff(COMRAM[2]), ads1114_read_ready@rbuff(COMRAM[2]), 

    i2c_writeBytes_to@wrptr	PTR const unsigned char  size(2) Largest target is 154
		 -> g_nvm.eeprm(BANK1[124]), g_nvm(BANK1[154]), ads1114_Comparator_SetUp@rbuff(COMRAM[2]), ads1114_SetUp@buff(COMRAM[2]), 

    i2c_writeBytes_to@wraddr	PTR const unsigned char  size(1) Largest target is 1
		 -> eeprom_writePage@mem_addr(COMRAM[1]), ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1114_SetUp@wraddr(COMRAM[1]), 

    i2c_writeBytes@wrptr	PTR const unsigned char  size(1) Largest target is 2
		 -> max7323_set_gpio@b(COMRAM[1]), lmp91000_set_Mode@buff(COMRAM[2]), lmp91000_set_Reference@buff(COMRAM[2]), lmp91000_set_GainRLoad@buff(COMRAM[2]), 
		 -> lmp91000_unlock@buff(COMRAM[2]), lmp91000_lock@buff(COMRAM[2]), lmp91000_get_Modecn@wBuff(COMRAM[1]), lmp91000_get_Refcn@wBuff(COMRAM[1]), 
		 -> lmp91000_get_Tiacn@wBuff(COMRAM[1]), lmp91000_get_lock@wBuff(COMRAM[1]), lmp91000_get_status@wBuff(COMRAM[1]), eeprom_RandomRead@mem_addr(COMRAM[1]), 
		 -> eeprom_writePage@mem_addr(COMRAM[1]), ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1114_read@wbuff(COMRAM[1]), ads1114_SetUp@wraddr(COMRAM[1]), 
		 -> ads1114_read_ready@wbuff(COMRAM[1]), 

    i2c_writeData@wrptr	PTR const unsigned char  size(2) Largest target is 154
		 -> g_nvm.eeprm(BANK1[124]), g_nvm(BANK1[154]), max7323_set_gpio@b(COMRAM[1]), lmp91000_set_Mode@buff(COMRAM[2]), 
		 -> lmp91000_set_Reference@buff(COMRAM[2]), lmp91000_set_GainRLoad@buff(COMRAM[2]), lmp91000_unlock@buff(COMRAM[2]), lmp91000_lock@buff(COMRAM[2]), 
		 -> lmp91000_get_Modecn@wBuff(COMRAM[1]), lmp91000_get_Refcn@wBuff(COMRAM[1]), lmp91000_get_Tiacn@wBuff(COMRAM[1]), lmp91000_get_lock@wBuff(COMRAM[1]), 
		 -> lmp91000_get_status@wBuff(COMRAM[1]), eeprom_RandomRead@mem_addr(COMRAM[1]), eeprom_writePage@mem_addr(COMRAM[1]), ads1114_Comparator_SetUp@rbuff(COMRAM[2]), 
		 -> ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1114_read@wbuff(COMRAM[1]), ads1114_SetUp@buff(COMRAM[2]), ads1114_SetUp@wraddr(COMRAM[1]), 
		 -> ads1114_read_ready@wbuff(COMRAM[1]), 

    flash_writeBytes@flash_array	PTR unsigned char  size(2) Largest target is 2
		 -> nvm_write_flash_all@flash(COMRAM[2]), g_nvm(BANK1[154]), 

    flash_readBytes@flash_array	PTR unsigned char  size(2) Largest target is 2
		 -> nvm_read_flash_all@flash(COMRAM[2]), g_nvm(BANK1[154]), 

    eeprom_RandomRead@rdptr	PTR unsigned char  size(2) Largest target is 154
		 -> g_nvm.eeprm(BANK1[124]), g_nvm(BANK1[154]), 

    eeprom_writePage@wrptr	PTR const unsigned char  size(2) Largest target is 154
		 -> g_nvm.eeprm(BANK1[124]), g_nvm(BANK1[154]), 

    ads1114_read@raw_adc	PTR int  size(2) Largest target is 2
		 -> sensMeasure_gas_read@raw(BANK3[2]), sensMeasure_temp_read@raw(BANK0[2]), 


Critical Paths under _main in COMRAM

    _usedtime_task->_eeprom_update_all
    _sensMeasure_task->_sensMeasure_gas_read
    _sensor_set_temp_mode->_sensor_adc_init
    _sensor_set_gas_mode->_sensor_adc_init
    _sensor_adc_init->_ads1114_SetUp
    _ads1114_SetUp->_i2c_writeBytes_to
    _sensor_init->_sensor_lmp_init
    _sensor_lmp_init->_lmp91000_isReady
    _max7323_set_lmp_on->_max7323_set_gpio
    _max7323_set_lmp_off->_max7323_set_gpio
    _max7323_set_gpio->_i2c_writeBytes
    _lmp91000_unlock->_i2c_writeBytes
    _lmp91000_set_Reference->_i2c_writeBytes
    _lmp91000_set_Mode->_i2c_writeBytes
    _lmp91000_set_GainRLoad->_i2c_writeBytes
    _lmp91000_isReady->_lmp91000_get_status
    _lmp91000_get_status->_i2c_readBytes
    _gasSensor_temperature->___flmul
    _sensMeasure_gas_read->_gasSensor_calib
    _sensor_ADC_read->_ads1114_read
    _ads1114_read->_i2c_readBytes
    _gasSensor_calib->___flmul
    _compensate_temperature->___flmul
    _Kalman_updateEstimate->___flmul
    _ADCto_uVoltage->___flmul
    _nvm_read_eeprom_all->_eeprom_RandomRead
    _eeprom_RandomRead->_i2c_readBytes_from
    _i2c_readBytes_from->_i2c_readBytes
    _i2c_readBytes->_I2C_Read
    _ewmaFilter_get->___flmul
    _modbus_task->_modbus_slave_task
    _modbusSlaveEnd->_memset
    _modbusParseRequest->_modbusParseRequest0304
    _modbusParseRequest0304->_modbusBuildExceptionErr
    _rcallback->_modbusSwapEndian
    _modbusBuildExceptionErr->_modbusBuildException
    _modbusBuildException->_modbusCRC
    _modbus_master_task->_modbusParseResponse
    _modbusParseResponse->_modbusParseResponse0102
    _modbusParseResponse05->_memset
    _modbusParseResponse05->_modbusMatchEndian
    _modbusParseResponse0102->_memset
    _modbusParseResponse0102->_modbusMatchEndian
    _modbusMasterEnd->_memset
    _modbus_master_relay_status_task->_modbus_relay_status
    _modbus_relay_status->_modbusBuildRequest01@mbcoils$F4614
    _modbusBuildRequest01@mbcoils$F4614->_modbusBuildRequest0102
    _modbusBuildRequest0102->_memset
    _modbusBuildRequest0102->_modbusMatchEndian
    _modbus_fire_event->_modbus_relay_ouput
    _modbus_relay_ouput->_modbusBuildRequest05
    _rs485_writeBytes->_usart_writeBytes
    _usart_writeBytes->_usart_putc
    _modbusBuildRequest05->_memset
    _modbusBuildRequest05->_modbusMatchEndian
    _modbusMatchEndian->_rcallback
    _modbus_check_event->___lmul
    _split_param->__strlen
    _nvm_sensor_type_channel->__strcpy
    _nvm_clear_channel->__strclr
    _eeprom_update_all->_nvm_write_eeprom_all
    _eeprom_update->_nvm_write_eeprom_all
    _nvm_write_eeprom_all->_eeprom_writePage
    _eeprom_writePage->_i2c_writeBytes_to
    _i2c_writeBytes_to->_i2c_writeBytes
    _i2c_writeBytes->_i2c_writeData
    _i2c_writeData->_I2C_Write
    __atoi->___lmul
    __atof->___flmul
    _USBDisableWithLongDelay->_DelayRoutine
    _parse_command->_check_atcommand
    _param_copy->_check_param
    _check_atcommand->_atcommand_compare
    _atcommand_compare->__strlen
    _build_response->_display_sensor_value
    _write_command->_putUSBUSART
    _putUSBUSART->__strlen
    _sensor_temp_fahrenheit->___flmul
    _sprintf->___fltol
    _sprintf->_fround
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lbdiv->___lbmod
    ___flmul->___fladd
    ___fltol->___flmul
    ___flsub->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    __itoa->___aldiv
    _app_usb_task->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _sensMeasure_init->_Kalman_setEstimateError
    _sensMeasure_init->_Kalman_setMeasurementError
    _sensMeasure_init->_Kalman_setProcessNoise
    _nvm_write_flash_all->_flash_writeBytes
    _nvm_read_flash_all->_flash_readBytes
    _nvm_clear_flash->_build_time
    _build_time->_mktime
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    ___lwdiv->___wmul
    _isleap->___lwmod
    _modbus_init->_rs485_init
    _rs485_init->_usart_init
    _usart_init->___lldiv
    _modbusSlaveInit->_memset
    _modbusMasterInit->_memset
    _memset->_modbusBitsToBytes
    _clear_command->__strclr

Critical Paths under _rs485_read_task in COMRAM

    _rs485_read_task->i1_buffer_en_queue
    _rs485_readByte->_usart_getc

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _sensMeasure_temp_read->_ADCto_uVoltage
    _sensMeasure_temp_read->_gasSensor_temperature
    _gasSensor_temperature->___flmul
    _sensMeasure_gas_read->_gasSensor_calib
    _gasSensor_calib->_gasSensor_filter
    _gasSensor_filter->___flge
    _compensate_temperature->___flge
    _Kalman_updateEstimate->___flmul
    _fabs->___flsub
    _ADCto_uVoltage->___flmul
    _ewmaFilter_get->___flmul
    _modbus_task->_modbus_master_relay_control_task
    _modbus_slave_task->_modbusParseRequest
    _modbus_master_relay_control_task->_modbus_check_threshold
    _modbus_check_threshold->___flge
    _atcommand_task->_build_response
    __atof->___flmul
    _build_response->_display_sensor_value
    _display_sensor_value->__ftoa
    _sensor_temp_fahrenheit->___flmul
    __ftoa->_sprintf
    _sprintf->___fleq
    _sprintf->___flge
    _scale->___flmul
    _fround->___flmul
    ___flmul->_fabs
    ___fltol->___flmul
    ___flge->__atof
    ___fleq->__atof
    _Board_initialize->_nvm_init
    _nvm_clear_flash->_build_time
    _build_time->_mktime

Critical Paths under _rs485_read_task in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_atcommand_task

Critical Paths under _rs485_read_task in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _atcommand_task->_build_response

Critical Paths under _rs485_read_task in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _sensMeasure_task->_sensMeasure_gas_read
    _atcommand_task->_build_response
    _build_response->_display_sensor_value

Critical Paths under _rs485_read_task in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rs485_read_task in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rs485_read_task in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rs485_read_task in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rs485_read_task in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rs485_read_task in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rs485_read_task in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rs485_read_task in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rs485_read_task in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rs485_read_task in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rs485_read_task in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rs485_read_task in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1743041
                   _Board_initialize
                          _InitTimer
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                     _WDT_initialize
                       _app_usb_task
                     _atcommand_task
                        _modbus_task
                   _sensMeasure_task
                      _usedtime_task
 ---------------------------------------------------------------------------------
 (1) _usedtime_task                                        0     0      0   25932
                  _eeprom_update_all
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _sensMeasure_task                                     4     4      0  510382
                                            106 BANK0      4     4      0
                   _ACCESS_SourceGet
                   _ACCESS_SourceSet
                  _I2C_Bus_SourceGet
                            ___fladd
                           _checksum
                     _ewmaFilter_get
                  _nvm_clear_channel
                _nvm_read_eeprom_all
               _sensMeasure_gas_read
              _sensMeasure_temp_read
                        _sensor_init
                _sensor_set_gas_mode
               _sensor_set_temp_mode
 ---------------------------------------------------------------------------------
 (2) _sensor_set_temp_mode                                 1     1      0   43074
                                             40 COMRAM     1     1      0
                  _lmp91000_set_Mode
                _max7323_set_lmp_off
                 _max7323_set_lmp_on
                    _sensor_adc_init
 ---------------------------------------------------------------------------------
 (2) _sensor_set_gas_mode                                  1     1      0   43074
                                             40 COMRAM     1     1      0
                  _lmp91000_set_Mode
                _max7323_set_lmp_off
                 _max7323_set_lmp_on
                    _sensor_adc_init
 ---------------------------------------------------------------------------------
 (3) _sensor_adc_init                                      3     2      1   14401
                                             37 COMRAM     3     2      1
                      _ads1114_SetUp
 ---------------------------------------------------------------------------------
 (4) _ads1114_SetUp                                        7     4      3   13699
                                             30 COMRAM     7     4      3
                  _i2c_writeBytes_to
 ---------------------------------------------------------------------------------
 (2) _sensor_init                                          2     2      0   69404
                                             33 COMRAM     2     2      0
                    _sensor_lmp_init
 ---------------------------------------------------------------------------------
 (3) _sensor_lmp_init                                      1     1      0   69194
                                             32 COMRAM     1     1      0
                   _lmp91000_isReady
             _lmp91000_set_GainRLoad
                  _lmp91000_set_Mode
             _lmp91000_set_Reference
                    _lmp91000_unlock
                _max7323_set_lmp_off
                 _max7323_set_lmp_on
 ---------------------------------------------------------------------------------
 (3) _max7323_set_lmp_on                                   3     3      0    9569
                                             27 COMRAM     3     3      0
                   _max7323_set_gpio
 ---------------------------------------------------------------------------------
 (3) _max7323_set_lmp_off                                  3     3      0    9499
                                             27 COMRAM     3     3      0
                   _max7323_set_gpio
 ---------------------------------------------------------------------------------
 (4) _max7323_set_gpio                                     3     2      1    9089
                                             24 COMRAM     3     2      1
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_unlock                                      2     2      0    8727
                                             24 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_set_Reference                               7     4      3    9650
                                             24 COMRAM     7     4      3
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (3) _lmp91000_set_Mode                                    5     4      1    9465
                                             24 COMRAM     5     4      1
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_set_GainRLoad                               5     4      1    9158
                                             24 COMRAM     5     4      1
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_isReady                                     1     1      0   12846
                                             31 COMRAM     1     1      0
                _lmp91000_get_status
 ---------------------------------------------------------------------------------
 (5) _lmp91000_get_status                                  3     2      1   12676
                                             28 COMRAM     3     2      1
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (2) _sensMeasure_temp_read                                7     7      0   79871
                                             41 BANK0      7     7      0
                     _ADCto_uVoltage
                            ___fladd
              _gasSensor_temperature
                    _sensor_ADC_read
 ---------------------------------------------------------------------------------
 (3) _gasSensor_temperature                               12     8      4   34859
                                             29 BANK0     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _sensMeasure_gas_read                                12    12      0  196943
                                             64 COMRAM     1     1      0
                                              0 BANK3     11    11      0
                     _ADCto_uVoltage
              _Kalman_updateEstimate
             _compensate_temperature
                    _gasSensor_calib
                    _sensor_ADC_read
 ---------------------------------------------------------------------------------
 (3) _sensor_ADC_read                                      3     1      2   13890
                                             36 COMRAM     3     1      2
                       _ads1114_read
 ---------------------------------------------------------------------------------
 (4) _ads1114_read                                         8     6      2   13260
                                             28 COMRAM     8     6      2
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (3) _gasSensor_calib                                     38    30      8   69198
                                             63 COMRAM     1     1      0
                                             69 BANK0     37    29      8
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                   _gasSensor_filter
 ---------------------------------------------------------------------------------
 (4) _gasSensor_filter                                     8     4      4   10245
                                             61 BANK0      8     4      4
                             ___flge
 ---------------------------------------------------------------------------------
 (3) _compensate_temperature                              13     4      9   38065
                                             61 BANK0     13     4      9
                            ___fladd
                             ___flge
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _Kalman_updateEstimate                               14     8      6   56226
                                             29 BANK0     14     8      6
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4     848
                                              8 BANK0      4     0      4
                            ___flneg
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADCto_uVoltage                                      12     8      4   18152
                                             29 BANK0     12     8      4
                        _FSR_set_LSB
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _FSR_set_LSB                                          5     1      4     275
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _nvm_read_eeprom_all                                  1     1      0   14157
                                             39 COMRAM     1     1      0
                  _eeprom_RandomRead
 ---------------------------------------------------------------------------------
 (3) _eeprom_RandomRead                                    5     1      4   14017
                                             34 COMRAM     5     1      4
                 _i2c_readBytes_from
 ---------------------------------------------------------------------------------
 (4) _i2c_readBytes_from                                   6     1      5   13239
                                             28 COMRAM     6     1      5
                           _I2C_Stop
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (6) _i2c_readBytes                                       12     9      3    3648
                                             16 COMRAM    12     9      3
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (7) _I2C_Read                                             2     2      0     120
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ewmaFilter_get                                      20    13      7   48217
                                             29 BANK0     20    13      7
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _I2C_Bus_SourceGet                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _modbus_task                                          0     0      0  157385
   _modbus_master_relay_control_task
    _modbus_master_relay_status_task
                 _modbus_master_task
                  _modbus_slave_task
 ---------------------------------------------------------------------------------
 (2) _modbus_slave_task                                    1     1      0   59542
                                             65 COMRAM     1     1      0
               _buffer_de_queue_bool
                 _modbusParseRequest
                     _modbusSlaveEnd
                        _modbus_init
                   _rs485_writeBytes
 ---------------------------------------------------------------------------------
 (3) _modbusSlaveEnd                                       2     0      2    4534
                                             28 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (3) _modbusParseRequest                                  15    13      2   40393
                                              0 BANK0     15    13      2
                             ___wmul
                             _memcpy
            _modbusBuildExceptionErr
                          _modbusCRC
             _modbusParseRequest0304
 ---------------------------------------------------------------------------------
 (4) _modbusParseRequest0304                              27    23      4   12324
                                             38 COMRAM    27    23      4
            _modbusBuildExceptionErr
                          _modbusCRC
                  _modbusMatchEndian
                          _rcallback *
 ---------------------------------------------------------------------------------
 (5) _rcallback                                            8     1      7    1044
                                             18 COMRAM     8     1      7
                   _modbusSwapEndian
 ---------------------------------------------------------------------------------
 (5) _modbusBuildExceptionErr                              6     1      5    5773
                                             32 COMRAM     6     1      5
               _modbusBuildException
 ---------------------------------------------------------------------------------
 (6) _modbusBuildException                                 8     4      4    2610
                                             24 COMRAM     8     4      4
                          _modbusCRC
 ---------------------------------------------------------------------------------
 (2) _modbus_master_task                                   1     1      0   57307
                                             57 COMRAM     1     1      0
               _buffer_de_queue_bool
                    _modbusMasterEnd
                _modbusParseResponse
                        _modbus_init
       _modbus_master_response_parse
 ---------------------------------------------------------------------------------
 (3) _modbus_master_response_parse                         5     5      0   10136
                                             47 COMRAM     5     5      0
                  _modbus_fire_event
 ---------------------------------------------------------------------------------
 (3) _modbusParseResponse                                 16    14      2   29068
                                             42 COMRAM    15    13      2
                             _memcpy
                          _modbusCRC
               _modbusParseException
            _modbusParseResponse0102
              _modbusParseResponse05
 ---------------------------------------------------------------------------------
 (4) _modbusParseResponse05                               10     4      6    7016
                                             28 COMRAM    10     4      6
                             _memset
                  _modbusMatchEndian
 ---------------------------------------------------------------------------------
 (4) _modbusParseResponse0102                             14     8      6   13000
                                             28 COMRAM    14     8      6
                             _memcpy
                             _memset
                  _modbusBitsToBytes
                  _modbusMatchEndian
 ---------------------------------------------------------------------------------
 (4) _modbusParseException                                 4     0      4     456
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _modbusMasterEnd                                      2     0      2    4596
                                             28 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buffer_de_queue_bool                                 6     3      3     866
                                             14 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _modbus_master_relay_status_task                      0     0      0   19026
                _modbus_relay_status
 ---------------------------------------------------------------------------------
 (3) _modbus_relay_status                                  1     1      0   19026
                                             45 COMRAM     1     1      0
 _modbusBuildRequest01@mbcoils$F4614
                   _rs485_writeBytes
 ---------------------------------------------------------------------------------
 (4) _modbusBuildRequest01@mbcoils$F4614                   7     0      7   17884
                                             38 COMRAM     7     0      7
             _modbusBuildRequest0102
 ---------------------------------------------------------------------------------
 (5) _modbusBuildRequest0102                              11     3      8   17344
                                             28 COMRAM    10     2      8
                             _memset
                  _modbusBitsToBytes
                          _modbusCRC
                  _modbusMatchEndian
 ---------------------------------------------------------------------------------
 (5) _modbusBitsToBytes                                    6     4      2     400
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _modbus_master_relay_control_task                     4     4      0   21510
                                             70 BANK0      4     4      0
                 _modbus_check_event
             _modbus_check_threshold
                  _modbus_fire_event
 ---------------------------------------------------------------------------------
 (4) _modbus_fire_event                                    0     0      0   10065
                 _modbus_relay_ouput
 ---------------------------------------------------------------------------------
 (5) _modbus_relay_ouput                                  10     9      1   10065
                                             37 COMRAM    10     9      1
               _modbusBuildRequest05
                   _rs485_writeBytes
 ---------------------------------------------------------------------------------
 (3) _rs485_writeBytes                                     4     1      3    1108
                                             19 COMRAM     4     1      3
                   _usart_writeBytes
 ---------------------------------------------------------------------------------
 (4) _usart_writeBytes                                     4     1      3     422
                                             15 COMRAM     4     1      3
                         _usart_putc
 ---------------------------------------------------------------------------------
 (5) _usart_putc                                           1     1      0      22
                                             14 COMRAM     1     1      0
                     _usart_tx_empty
 ---------------------------------------------------------------------------------
 (6) _usart_tx_empty                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _modbusBuildRequest05                                10     3      7    8618
                                             28 COMRAM     9     2      7
                             _memset
                          _modbusCRC
                  _modbusMatchEndian
 ---------------------------------------------------------------------------------
 (5) _modbusMatchEndian                                    2     0      2    1344
                                             26 COMRAM     2     0      2
                   _modbusSwapEndian
                          _rcallback (ARG) *
 ---------------------------------------------------------------------------------
 (6) _modbusSwapEndian                                     4     2      2     273
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _modbusCRC                                           10     6      4    1762
                                             14 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _modbus_check_threshold                               9     5      4    9330
                                             61 BANK0      9     5      4
                             ___flge
 ---------------------------------------------------------------------------------
 (3) _modbus_check_event                                   1     1      0    2030
                                             26 COMRAM     1     1      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _atcommand_task                                       3     3      0  933157
                                              0 BANK1      3     3      0
                            __strclr
                    _buffer_de_queue
                     _build_response
                      _clear_command
                      _parse_command
                     _update_command
 ---------------------------------------------------------------------------------
 (2) _update_command                                       9     7      2  198435
                                             68 BANK0      9     7      2
             _ResetBootloaderCleanly
                 _ResetDeviceCleanly
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flsub
                              __atof
                              __atoi
                           __isdigit
                            __strcpy
                            __strlen
                      _eeprom_update
                  _eeprom_update_all
                             _memcpy
                          _nvm_clear
            _nvm_sensor_type_channel
                _nvm_write_flash_all
                        _split_param
 ---------------------------------------------------------------------------------
 (3) _split_param                                         12     6      6    2048
                                             18 COMRAM    12     6      6
                            __strlen
 ---------------------------------------------------------------------------------
 (3) _nvm_sensor_type_channel                              2     1      1   10253
                                             22 COMRAM     2     1      1
                            __strclr
                            __strcpy
 ---------------------------------------------------------------------------------
 (3) _nvm_clear                                            0     0      0   39432
                  _nvm_clear_channel
                    _nvm_clear_flash
 ---------------------------------------------------------------------------------
 (2) _nvm_clear_channel                                    1     1      0    2265
                                             18 COMRAM     1     1      0
                            __strclr
 ---------------------------------------------------------------------------------
 (2) _eeprom_update_all                                    3     3      0   20732
                                             46 COMRAM     3     3      0
                   _ACCESS_SourceGet
                   _ACCESS_SourceSet
                             _memcpy
               _nvm_write_eeprom_all
 ---------------------------------------------------------------------------------
 (3) _eeprom_update                                        5     5      0   15687
                                             46 COMRAM     5     5      0
                   _ACCESS_SourceGet
                   _ACCESS_SourceSet
               _nvm_write_eeprom_all
 ---------------------------------------------------------------------------------
 (3) _nvm_write_eeprom_all                                 8     8      0   15401
                                             38 COMRAM     8     8      0
                           _checksum
                   _eeprom_writePage
 ---------------------------------------------------------------------------------
 (4) _eeprom_writePage                                     8     4      4   13569
                                             30 COMRAM     8     4      4
                  _i2c_writeBytes_to
 ---------------------------------------------------------------------------------
 (5) _i2c_writeBytes_to                                    6     1      5   12153
                                             24 COMRAM     6     1      5
                           _I2C_Stop
                     _i2c_writeBytes
                      _i2c_writeData
 ---------------------------------------------------------------------------------
 (6) _i2c_writeBytes                                       4     1      3    8527
                                             20 COMRAM     4     1      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                      _i2c_writeData
 ---------------------------------------------------------------------------------
 (6) _i2c_writeData                                        5     1      4    1556
                                             15 COMRAM     5     1      4
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (7) _I2C_Write                                            1     1      0      70
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _checksum                                            10     6      4     722
                                             14 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _ACCESS_SourceSet                                     2     2      0      31
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ACCESS_SourceGet                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __isdigit                                             5     1      4     307
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) __atoi                                               16    12      4    4171
                                             26 COMRAM    16    12      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) __atof                                               20    16      4   39370
                                             29 BANK0     20    16      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub (ARG)
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    7019
                                             14 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) _ResetDeviceCleanly                                   0     0      0     138
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (3) _ResetBootloaderCleanly                               0     0      0     138
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (4) _USBDisableWithLongDelay                              0     0      0     138
                       _DelayRoutine
 ---------------------------------------------------------------------------------
 (5) _DelayRoutine                                         2     0      2     138
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _parse_command                                       55    51      4   15898
                                             36 COMRAM     5     1      4
                                              0 BANK0     50    50      0
                            __strcpy
                    _check_atcommand
                         _param_copy
 ---------------------------------------------------------------------------------
 (3) _param_copy                                           6     3      3     837
                                             15 COMRAM     6     3      3
                        _check_param
 ---------------------------------------------------------------------------------
 (4) _check_param                                          1     1      0     155
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_atcommand                                      5     3      2    2278
                                             31 COMRAM     5     3      2
                            __strlen
                  _atcommand_compare
 ---------------------------------------------------------------------------------
 (4) _atcommand_compare                                   13     8      5     927
                                             18 COMRAM    13     8      5
                            __strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _build_response                                      15    13      2  714653
                                            109 BANK0      2     0      2
                                              0 BANK2      4     4      0
                                              6 BANK3      9     9      0
                             ___fleq
                            ___flsub
                              __ftoa
                              __itoa
                            __strcpy
               _display_sensor_value
                             _memcpy
                 _modbus_get_timeout
                    _modbus_set_swap
                 _nvm_read_flash_all
            _sensMeasure_sensor_init
             _sensor_temp_fahrenheit
                            _sprintf
                      _write_command
 ---------------------------------------------------------------------------------
 (3) _write_command                                        2     0      2    1398
                                             21 COMRAM     2     0      2
                            __strlen
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     270
                                             18 COMRAM     3     0      3
                            __strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) __strlen                                              4     2      2     858
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _modbus_set_swap                                      1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _display_sensor_value                                 9     7      2  344872
                                             65 COMRAM     1     1      0
                                            107 BANK0      2     0      2
                                              0 BANK3      6     6      0
                             ___fleq
                            ___flsub
                              __ftoa
                            __strcpy
             _sensor_temp_fahrenheit
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sensor_temp_fahrenheit                               2     0      2   27979
                                             29 BANK0      2     0      2
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) __strcpy                                              8     4      4    6378
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) __ftoa                                                8     2      6  143552
                                             99 BANK0      8     2      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             46    38      8  136896
                                             61 BANK0     38    30      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   22892
                                             29 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2992
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3374
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     240
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              15    11      4   18037
                                             63 COMRAM     2     2      0
                                             29 BANK0     13     9      4
                            ___fladd (ARG)
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (5) ___lbmod                                              4     3      1    1048
                                             14 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1    1093
                                             18 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8   15081
                                             55 COMRAM     8     0      8
                                             12 BANK0     17    17      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                           ___xxtofl (ARG)
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8    1487
                                             14 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1487
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1834
                                             14 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1531
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1318
                                             63 COMRAM     2     2      0
                                             29 BANK0      8     4      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   19081
                                              0 BANK0      8     0      8
                            ___fladd
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8   12356
                                             39 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     477
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    8914
                                             49 BANK0     12     4      8
                              __atof (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8    6872
                                             49 BANK0     12     4      8
                            ___flsub (ARG)
                              __atof (ARG)
 ---------------------------------------------------------------------------------
 (3) __itoa                                               18    12      6    7681
                                             28 COMRAM    18    12      6
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     641
                                             14 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     861
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _buffer_de_queue                                      6     4      2     358
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _app_usb_task                                         2     2      0    4332
                                             27 COMRAM     2     2      0
                       _CDCTxService
                    _buffer_en_queue
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     1      3    1976
                                             23 COMRAM     4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _buffer_en_queue                                      6     3      3     414
                                             14 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1809
                                             23 COMRAM     2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _WDT_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0   51289
                                             42 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    5165
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    5165
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    4570
                                             28 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     1     1      0   31156
                                             41 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    5200
                                             14 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   25727
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   20470
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0    9623
                                             34 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    5636
                                             34 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5165
                                             26 COMRAM     8     2      6
                          _CDCInitEP
                  _SYSTEM_Initialize
                 _USBCheckCDCRequest
                       _app_usb_init
 ---------------------------------------------------------------------------------
 (3) _app_usb_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                             14 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            0     0      0    2405
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 9     5      4    1672
                                             14 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                             22 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                             14 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                             14 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                             15 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Board_initialize                                     0     0      0   55926
                         _POWER_Init
                     _atcommand_init
                        _buffer_init
                           _i2c_init
                        _modbus_init
                           _nvm_init
                   _sensMeasure_init
 ---------------------------------------------------------------------------------
 (2) _sensMeasure_init                                     0     0      0    1688
            _Kalman_setEstimateError
         _Kalman_setMeasurementError
             _Kalman_setProcessNoise
            _sensMeasure_sensor_init
 ---------------------------------------------------------------------------------
 (3) _sensMeasure_sensor_init                              1     1      0     254
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Kalman_setProcessNoise                               6     0      6     478
                                             14 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _Kalman_setMeasurementError                           6     0      6     478
                                             14 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _Kalman_setEstimateError                              6     0      6     478
                                             14 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _nvm_init                                             9     9      0   40085
                                             68 BANK0      9     9      0
                   _get_product_desc
                    _nvm_clear_flash
                    _nvm_flash_check
                 _nvm_read_flash_all
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (3) _nvm_write_flash_all                                  2     0      2    1585
                                             30 COMRAM     2     0      2
                        _flash_clear
                   _flash_writeBytes
 ---------------------------------------------------------------------------------
 (4) _flash_writeBytes                                    16     8      8     869
                                             14 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) _flash_clear                                         13     5      8     474
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _nvm_read_flash_all                                   2     0      2     938
                                             30 COMRAM     2     0      2
                    _flash_readBytes
 ---------------------------------------------------------------------------------
 (4) _flash_readBytes                                     16     8      8     693
                                             14 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) _nvm_flash_check                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nvm_clear_flash                                      0     0      0   37167
                         _build_time
 ---------------------------------------------------------------------------------
 (5) _build_time                                          66    62      4   37167
                                             63 COMRAM     2     2      0
                                              4 BANK0     64    60      4
                             ___wmul
                             _mktime
 ---------------------------------------------------------------------------------
 (6) _mktime                                              14    10      4   22073
                                             53 COMRAM    10     6      4
                                              0 BANK0      4     4      0
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (7) _ymd_to_scalar                                       16    10      6   19014
                                             37 COMRAM    16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (8) _years_to_days                                       10     6      4    3101
                                             27 COMRAM    10     6      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1968
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) _months_to_days                                       2     0      2   13485
                                             27 COMRAM     2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   12389
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     865
                                             20 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _isleap                                               4     2      2     882
                                             19 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     648
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _get_product_desc                                     2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _modbus_init                                          0     0      0   12273
                   _modbusMasterInit
                    _modbusSlaveInit
                _modbus_get_baudrate
                 _modbus_get_timeout
                _modbus_set_register
                         _rs485_init
 ---------------------------------------------------------------------------------
 (4) _rs485_init                                           4     0      4    2123
                                             39 COMRAM     4     0      4
                _modbus_get_baudrate (ARG)
                         _usart_init
 ---------------------------------------------------------------------------------
 (5) _usart_init                                          12     8      4    1892
                                             27 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1576
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _modbus_set_register                                  2     0      2     135
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _modbus_get_timeout                                   1     1      0      65
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _modbus_get_baudrate                                  5     1      4      45
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _modbusSlaveInit                                      4     2      2    4999
                                             28 COMRAM     4     2      2
                             _memset
 ---------------------------------------------------------------------------------
 (4) _modbusMasterInit                                     2     0      2    4906
                                             28 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6    4368
                                             20 COMRAM     8     2      6
                  _modbusBitsToBytes (ARG)
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _buffer_init                                          2     0      2     244
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _atcommand_init                                       0     0      0    1614
                      _clear_command
 ---------------------------------------------------------------------------------
 (2) _clear_command                                        0     0      0    1614
                            __strclr
 ---------------------------------------------------------------------------------
 (3) __strclr                                              4     0      4    1614
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _POWER_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rs485_read_task                                     8     8      0     344
                                              6 COMRAM     8     8      0
                     _rs485_readByte
                  i1_buffer_en_queue
 ---------------------------------------------------------------------------------
 (11) i1_buffer_en_queue                                   6     3      3     162
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (11) _rs485_readByte                                      1     0      1     136
                                              1 COMRAM     1     0      1
                         _usart_getc
                     _usart_rx_ready
 ---------------------------------------------------------------------------------
 (12) _usart_rx_ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _usart_getc                                          1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Board_initialize
     _POWER_Init
     _atcommand_init
       _clear_command
         __strclr
     _buffer_init
     _i2c_init
     _modbus_init
       _modbusMasterInit
         _memset
           _modbusBitsToBytes (ARG)
       _modbusSlaveInit
         _memset
       _modbus_get_baudrate
       _modbus_get_timeout
       _modbus_set_register
       _rs485_init
         _modbus_get_baudrate (ARG)
         _usart_init (ARG)
           ___lldiv
     _nvm_init
       _get_product_desc
       _nvm_clear_flash
         _build_time
           ___wmul
           _mktime
             ___lmul
             _ymd_to_scalar
               _isleap
                 ___lwmod
               _months_to_days
                 ___lwdiv
                   ___wmul (ARG)
                 ___wmul
               _years_to_days
                 ___lmul
                 ___lwdiv
       _nvm_flash_check
       _nvm_read_flash_all
         _flash_readBytes
       _nvm_write_flash_all
         _flash_clear
         _flash_writeBytes
     _sensMeasure_init
       _Kalman_setEstimateError
       _Kalman_setMeasurementError
       _Kalman_setProcessNoise
       _sensMeasure_sensor_init
   _InitTimer
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckCDCRequest
               _app_usb_init
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
       _memcpy
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USER_USB_CALLBACK_EVENT_HANDLER
   _WDT_initialize
   _app_usb_task
     _CDCTxService
       _USBTransferOnePacket
     _buffer_en_queue
     _getsUSBUSART
       _USBTransferOnePacket
   _atcommand_task
     __strclr
     _buffer_de_queue
     _build_response
       ___fleq
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             ___xxtofl (ARG)
           ___fladd (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
         __atof (ARG)
           ___fladd
           ___fldiv
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
             ___flsub (ARG)
             ___lbdiv (ARG)
             ___lbmod (ARG)
             ___xxtofl (ARG)
             _fabs (ARG)
               ___flneg
               ___flsub (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
       ___flsub
       __ftoa
         _sprintf
           ___awdiv
           ___fladd
           ___fleq
           ___flge
             __atof (ARG)
           ___flmul
           ___flneg
           ___flsub
           ___fltol
             ___flmul (ARG)
           ___lldiv
           ___llmod
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___fladd (ARG)
             ___flmul (ARG)
             ___lbdiv (ARG)
             ___lbmod (ARG)
           _isdigit
           _scale
             ___awdiv
             ___awmod
             ___flmul
       __itoa
         ___aldiv
         ___almod
         ___lmul
       __strcpy
       _display_sensor_value
         ___fleq
         ___flsub
         __ftoa
         __strcpy
         _sensor_temp_fahrenheit
           ___fladd
           ___flmul
         _sprintf
       _memcpy
       _modbus_get_timeout
       _modbus_set_swap
       _nvm_read_flash_all
       _sensMeasure_sensor_init
       _sensor_temp_fahrenheit
       _sprintf
       _write_command
         __strlen
         _putUSBUSART
           __strlen (ARG)
     _clear_command
     _parse_command
       __strcpy
       _check_atcommand
         __strlen
         _atcommand_compare
           __strlen (ARG)
       _param_copy
         _check_param
     _update_command
       _ResetBootloaderCleanly
         _USBDisableWithLongDelay
           _DelayRoutine
       _ResetDeviceCleanly
         _USBDisableWithLongDelay
       ___fldiv
       ___fleq
       ___flge
       ___flsub
       __atof
       __atoi
         ___lmul
       __isdigit
       __strcpy
       __strlen
       _eeprom_update
         _ACCESS_SourceGet
         _ACCESS_SourceSet
         _nvm_write_eeprom_all
           _checksum
           _eeprom_writePage
             _i2c_writeBytes_to
               _I2C_Stop
               _i2c_writeBytes
                 _I2C_Start
                 _I2C_Stop
                 _I2C_Write
                 _i2c_writeData
                   _I2C_Stop
                   _I2C_Write
               _i2c_writeData
       _eeprom_update_all
         _ACCESS_SourceGet
         _ACCESS_SourceSet
         _memcpy
         _nvm_write_eeprom_all
       _memcpy
       _nvm_clear
         _nvm_clear_channel
           __strclr
         _nvm_clear_flash
       _nvm_sensor_type_channel
         __strclr
         __strcpy
       _nvm_write_flash_all
       _split_param
         __strlen
   _modbus_task
     _modbus_master_relay_control_task
       _modbus_check_event
         ___lmul
       _modbus_check_threshold
         ___flge
       _modbus_fire_event
         _modbus_relay_ouput
           _modbusBuildRequest05
             _memset
             _modbusCRC
             _modbusMatchEndian
               _modbusSwapEndian
               _rcallback (ARG) *
                 _modbusSwapEndian
           _rs485_writeBytes
             _usart_writeBytes
               _usart_putc
                 _usart_tx_empty
     _modbus_master_relay_status_task
       _modbus_relay_status
         _modbusBuildRequest01@mbcoils$F4614
           _modbusBuildRequest0102
             _memset
             _modbusBitsToBytes
             _modbusCRC
             _modbusMatchEndian
         _rs485_writeBytes
     _modbus_master_task
       _buffer_de_queue_bool
       _modbusMasterEnd
         _memset
       _modbusParseResponse
         _memcpy
         _modbusCRC
         _modbusParseException
         _modbusParseResponse0102
           _memcpy
           _memset
           _modbusBitsToBytes
           _modbusMatchEndian
         _modbusParseResponse05
           _memset
           _modbusMatchEndian
       _modbus_init
       _modbus_master_response_parse
         _modbus_fire_event
     _modbus_slave_task
       _buffer_de_queue_bool
       _modbusParseRequest
         ___wmul
         _memcpy
         _modbusBuildExceptionErr
           _modbusBuildException
             _modbusCRC
         _modbusCRC
         _modbusParseRequest0304
           _modbusBuildExceptionErr
           _modbusCRC
           _modbusMatchEndian
           _rcallback *
       _modbusSlaveEnd
         _memset
       _modbus_init
       _rs485_writeBytes
   _sensMeasure_task
     _ACCESS_SourceGet
     _ACCESS_SourceSet
     _I2C_Bus_SourceGet
     ___fladd
     _checksum
     _ewmaFilter_get
       ___fladd
       ___flmul
       ___flsub
     _nvm_clear_channel
     _nvm_read_eeprom_all
       _eeprom_RandomRead
         _i2c_readBytes_from
           _I2C_Stop
           _i2c_readBytes
             _I2C_Read
             _I2C_Start
             _I2C_Stop
             _I2C_Write
           _i2c_writeBytes
     _sensMeasure_gas_read
       _ADCto_uVoltage
         _FSR_set_LSB
         ___flmul
         ___xxtofl
       _Kalman_updateEstimate
         ___fladd
         ___fldiv
         ___flmul
         ___flsub
         _fabs
       _compensate_temperature
         ___fladd
         ___flge
         ___flmul
       _gasSensor_calib
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flsub
         _gasSensor_filter
           ___flge
       _sensor_ADC_read
         _ads1114_read
           _i2c_readBytes
           _i2c_writeBytes
     _sensMeasure_temp_read
       _ADCto_uVoltage
       ___fladd
       _gasSensor_temperature
         ___fladd
         ___fldiv
         ___flmul
       _sensor_ADC_read
     _sensor_init
       _sensor_lmp_init
         _lmp91000_isReady
           _lmp91000_get_status
             _i2c_readBytes
             _i2c_writeBytes
         _lmp91000_set_GainRLoad
           _i2c_writeBytes
         _lmp91000_set_Mode
           _i2c_writeBytes
         _lmp91000_set_Reference
           _i2c_writeBytes
         _lmp91000_unlock
           _i2c_writeBytes
         _max7323_set_lmp_off
           _max7323_set_gpio
             _i2c_writeBytes
         _max7323_set_lmp_on
           _max7323_set_gpio
     _sensor_set_gas_mode
       _lmp91000_set_Mode
       _max7323_set_lmp_off
       _max7323_set_lmp_on
       _sensor_adc_init
         _ads1114_SetUp
           _i2c_writeBytes_to
     _sensor_set_temp_mode
       _lmp91000_set_Mode
       _max7323_set_lmp_off
       _max7323_set_lmp_on
       _sensor_adc_init
   _usedtime_task
     _eeprom_update_all
     _memcpy

 _rs485_read_task (ROOT)
   _rs485_readByte
     _usart_getc
     _usart_rx_ready
   i1_buffer_en_queue

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0       0      36        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      3C      20       23.4%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      F2      18       94.5%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F7      16       96.5%
BITBANK3           100      0       0      11        0.0%
BANK3              100      F      F2      12       94.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100      4     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      9F      14       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6F      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      50       1       85.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6A4       8        0.0%
DATA                 0      0     6A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 20 11:28:44 2022

                   ?_nvm_sensor_type_channel 0017                            i2c_writeBytes@len 0016  
                  modbusBuildRequest05@index 0020                     __end_of_usart_writeBytes DB26  
                             param_copy@src1 0010                               param_copy@src2 0012  
                          buffer_de_queue@ch 0014            _modbus_master_response_parse$4723 0033  
                              _years_to_days B7FA                    modbusBuildRequest05@value 0022  
            __end_of_USBDisableWithLongDelay DDB8                                   _USB_SD_Ptr 2089  
                               ___fldiv@aexp 0027                                 ___fldiv@bexp 0026  
                       _display_sensor_value 5588     __end_of_modbus_master_relay_control_task C698  
  __size_of_modbus_master_relay_control_task 0070           ??_modbus_master_relay_control_task 0040  
          ?_modbus_master_relay_control_task 0001             _modbus_master_relay_control_task C628  
           __size_of_modbusParseResponse0102 02EA                                 ___fldiv@sign 001F  
                         __size_of_I2C_Start 0010                           __size_of_I2C_Write 001E  
             __end_of_modbusBuildRequest0102 8E96                                           l80 A99C  
                                         l81 A9B4                                           l75 A94E  
                                         l69 CBF4                                           l87 C7D0  
                                         l88 C78E                                           l89 C7A8  
                               ___awdiv@sign 001A                          months_to_days@month 001C  
                      __end_of_parse_command 637E                                           bsr 000FE0  
                              _USBDeviceInit 9A50                          ___wmul@multiplicand 0011  
                     __size_of_i2c_writeData 0040                              _build_time$8300 0082  
                            _build_time$8301 0084                              _build_time$8302 0086  
                            _build_time$8320 0090                              _build_time$8312 008C  
                             _update_command 3192                              _build_time$8307 0088  
                            _build_time$8316 008E                              _build_time$8308 008A  
                            _build_time$8264 006C                              _build_time$8290 006E  
                            _build_time$8291 0070                              _build_time$8292 0072  
                            _build_time$8293 0074                              _build_time$8294 0076  
                         __size_of_CDCInitEP 0066                              _build_time$8295 0078  
                            _build_time$8296 007A                              _build_time$8297 007C  
                            _build_time$8298 007E                              _build_time$8299 0080  
                        i2c_writeBytes@wrptr 0015                                app_usb_task@i 001D  
                         atcommand_compare@n 0016                              _max7323_address 01F7  
                                _split_param A9E4         USER_USB_CALLBACK_EVENT_HANDLER@event 001B  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 001D                                          l200 D9A4  
                                        l156 DE56                       __end_of_rs485_readByte DD52  
                                        l165 DE46                  __end_of_USBStdGetDscHandler A22E  
                                        l159 DE5C                                          l183 DC2A  
                                        l168 DE4C                                          l192 D984  
                                        l186 DC32                                          l195 D98A  
                                        l292 D5D2                                          l198 D99E  
                                        l199 D9A0                                          l651 9268  
                                        l811 A33E                                          l804 CE2A  
                                        l591 C490                                          l594 C4AA  
                                        _BDT 000400                               _build_response 23A0  
                  __end_of_lmp91000_set_Mode D980                            _I2C_Bus_SourceGet DE80  
                                        _UIE 000F36                                          _UIR 000F62  
                       i2c_writeBytes@isStop 0017                      Kalman_setProcessNoise@q 0011  
                                 _USBSuspend D8F8                                 ___awmod@sign 0014  
                       USBStdSetCfgHandler@i 0023                                          prod 000FF3  
                                        tosl 000FFD                                          wreg 000FE8  
                             _USBDeviceTasks 8E96                           ?_I2C_Bus_SourceGet 0001  
                                 _TXSTA1bits 000FAD                     ??_modbus_check_threshold 0040  
                             ??_app_usb_init 000F                               _USBDeviceState 00FA  
                 __end_of_max7323_set_lmp_on DA2E                               ??_app_usb_task 001C  
                               ___flmul@aexp 0071                                 ___flmul@bexp 0072  
                          ??_nvm_clear_flash 0042                      __size_of_i2c_writeBytes 0036  
                               ___flmul@sign 0070                                 ___flmul@temp 007B  
                 __size_of_i2c_writeBytes_to 0040                                 ___flmul@prod 0077  
                      i2c_writeBytes@address 0018                        ??_USBCtrlTrfRxService 000F  
        __size_of_Kalman_setMeasurementError 001A                          atcommand_compare@ch 001F  
                          ewmaFilter_get@idx 0090                          atcommand_compare@no 001E  
                             ??_getsUSBUSART 001B                              _check_atcommand BEEE  
                   USBEnableEndpoint@options 0017              __size_of_compensate_temperature 02E8  
                    __end_of_modbus_set_swap DEF6                                 ___fltol@exp1 0041  
                       buffer_de_queue@queue 000F                                         l2202 A892  
            __size_of_sensor_temp_fahrenheit 006A                                         l2140 8EF6  
                                       l1421 9514                                         l2134 8EB8  
                                       l1238 D0C0                                         l2151 8F9A  
                                       l2135 8EB6                                         l2314 B1D6  
                                       l2149 8F90                                         l1509 CA62  
                                       l1613 D81C                                         l2270 B6CE  
                                       l2343 7C7A                                         l2328 AFA6  
                                       l2425 B8E6                                         l2265 B6BA  
                                       l2337 AFE6                                         l3081 ACF6  
                                       l2354 7DA0                                         l1722 9CB6  
                                       l2427 B91A                                         l3316 CE18  
                                       l2268 B740                                         l3420 7940  
                                       l1652 C51E                   USBConfigureEndpoint@handle 0015  
                                       l2269 B6CA                                         l3245 C9E0  
                                       l3421 793C                                         l1717 9C36  
                                       l3326 D28E                                         l2279 D252  
                                       l3168 A4BE                                         l2473 9936  
                                       l3169 A4E6                                         l3409 78D2  
                                       l1649 C504                                         l3370 6592  
                                       l3354 64C0                                         l1754 8338  
                                       l3355 649E                                         l1835 6C4A  
                                       l3380 65F4                                         l1908 DDFC  
                                       l1765 8328                                         l2830 C174  
                                       l2478 997C                                         l1774 BC1A  
                                       l3439 5DC0                                         l3480 96D4  
                                       l3456 6038                                         l3448 5FB2  
                                       l3449 5FAE                                         l3379 65F8  
                                       l3487 9752                                         l2785 4374  
                                       l3499 D402                                         STR_1 2355  
                                       STR_2 2355                                         STR_3 2355  
                          ??_sensor_adc_init 0027                                         STR_4 234B  
                                       STR_5 2396                                         STR_6 2339  
                                       STR_7 235A                                         STR_8 2355  
                                       STR_9 2355                   gasSensor_filter@gasConcent 009D  
                      ??_USBCtrlTrfTxService 000F                  __size_of_modbusParseRequest 02B6  
                                       _UCFG 000F39                                         _UEP0 000F26  
                                       _UEP1 000F27                                         _UEIE 000F37  
                  __size_of_eeprom_writePage 0068                                         _UCON 000F65  
                                       _UEIR 000F63                          ??_I2C_Bus_SourceGet 000F  
                    ?_lmp91000_set_GainRLoad 0019                                _i2c_readBytes C186  
                    __end_of_rs485_read_task 007C                              _CDCDataInHandle 014E  
                            ?_modbusSlaveEnd 001D       USBStdFeatureReqHandler@current_ep_data 0027  
                 _Kalman_updateEstimate$9455 0087                                         _pDst 0150  
                 _Kalman_updateEstimate$9456 0083                                         _fabs D3D6  
                       modbusSwapEndian@data 000F                                         _main D806  
                           __end_of_I2C_Read D9AC                                         fsr1h 000FE2  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                _BaudRateGen 0200                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                                       btemp 0051                             _g_usedtime_count 013E  
                 __end_of_modbus_relay_ouput BFFC                             __end_of_I2C_Stop DE54  
                       i2c_writeBytes_to@len 001D                                         prodh 000FF4  
                                       prodl 000FF3                                         start 007C  
                            ___fldiv@new_exp 0020                  modbusBuildRequest0102@count 0023  
                modbusBuildRequest0102@index 0021                  __end_of_max7323_set_lmp_off DAFE  
                 __end_of_USBCheckStdRequest B05A                    modbus_check_threshold@max 00A1  
                     ??_USBCtrlTrfOutHandler 0011                                 _sprintf$9460 00A9  
                  modbus_check_threshold@ppm 009D                                 ___param_bank 000000  
                             ?_years_to_days 001C                    ??_USBStdFeatureReqHandler 0023  
                        ACCESS_SourceSet@set 0010                     Kalman_updateEstimate@mea 007F  
                      ?_display_sensor_value 00CB                       __size_of_usedtime_task 0090  
                sensor_set_temp_mode@channel 0029                       __end_of_update_command 3E10  
                   ??_USBStdGetStatusHandler 000F                             ?_modbusMasterEnd 001D  
                         _modbus_check_event BDDA                               ?_USBDeviceInit 0001  
                           _max7323_set_gpio DB26                       __end_of_build_response 3192  
                  __end_of_I2C_Bus_SourceGet DE8C                    ??_sensMeasure_sensor_init 000F  
                   app_usb_task@numBytesRead 001C                         modbus_get_timeout@to 000F  
                          ??_sensor_lmp_init 0021                             buffer_init@queue 000F  
                                      l10305 DE94                                        l20011 AA5C  
                                      l20021 AA8A                                        l11303 AD5C  
                                      l10319 BB6C                                        l10423 D63C  
                                      l10431 A552                                        l20023 AA8E  
                                      l10407 DE22                                        l10521 D9B6  
                                      l11313 AD86                                        l11321 ADBC  
                                      l11323 ADC4                                        l11331 ADFA  
                                      l10419 D62E                                        l10451 A5F4  
                                      l10611 B8D8                                        l11171 CF6C  
                                      l10525 D9C6                                        l10621 B904  
                                      l10613 B8DC                                        l10605 B8C6  
                                      l10439 A57C                                        l11271 C5C6  
                                      l20055 D884                                        l20047 D86C  
                                      l20073 A038                                        l20057 D888  
                                      l10571 CD48                                        l11275 C5D0  
                                      l11267 C5B6                                        l12403 B992  
                                      l20083 A072                                        l10573 CD54  
                                      l10565 CD2C                                        l10629 B922  
                                      l11269 C5BE                                        l22101 8F16  
                                      l22005 CA8A                                        l20077 A04C  
                                      l20247 B562                                        l11279 C5D6  
                                      l12407 B9A8                                        l20087 A0D0  
                                      l20079 A050                                        l10569 CD36  
                                      l10577 CD66                                        l22009 CAA8  
                                      l20361 AEF0                                        l31011 B79C  
                                      l20523 CC40                                        l20515 CC38  
                                      l20507 CC30                                        l11299 AD52  
                                      l12427 AB00                                        l22107 8F3C  
                                      l20363 AEF8                                        l20533 CC4E  
                                      l12373 B0A2                                        l12461 A146  
                                      l12509 B72A                                        l22133 8F84  
                                      l22125 8F5C                                        l20277 9326  
                                      l20349 BDFE                                        l20365 AEFE  
                                      l31015 B7C6                                        l20551 CC64  
                                      l20543 CC5C                                        l12551 7D22  
                                      l12543 7CE4                                        l12527 7C74  
                                      l12471 A1CC                                        l22119 8F50  
                                      l20279 9336                                        l20383 AF46  
                                      l12457 A134                                        l12449 AB70  
                                      l13513 A8BA                                        l22161 8FF8  
                                      l22153 8FC0                                        l22065 8EC2  
                                      l16001 99DC                                        l20641 C564  
                                      l20289 938A                                        l31201 A500  
                                      l31105 7C06                                        l20377 AF38  
                                      l31033 C1A2                                        l13339 D772  
                                      l12483 A218                                        l13611 B018  
                                      l22083 8EEE                                        l22075 8EDE  
                                      l31211 A518                                        l31043 C1DE  
                                      l13541 A25C                                        l12581 7E12  
                                      l12557 7D48                                        l12469 A1C6  
                                      l31221 A654                                        l31213 A524  
                                      l31205 A510                                        l31125 5B2C  
                                      l20389 AF66                                        l20397 AF84  
                                      l20559 CC6C                                        l12567 7D88  
                                      l13607 AFFA                                        l22159 8FDE  
                                      l22095 8F0A                                        l31311 BECC  
                                      l31143 5D14                                        l31119 5A8A  
                                      l31063 D33A                                        l32031 9C24  
                                      l31039 C1B0                                        l32111 82F0  
                                      l12569 7DBA                                        l16017 9A2C  
                                      l16009 9A12                                        l21633 BD8A  
                                      l31241 A6A2                                        l31137 5C72  
                                      l31129 5B56                                        l30505 D382  
                                      l32025 9BC8                                        l32105 8294  
                                      l13563 A2EE                                        l13547 A27A  
                                      l12595 7E86                                        l12579 7E06  
                                      l12499 B6F6                                        l16019 9A30  
                                      l21635 BD90                                        l21643 BDD4  
                                      l31315 BEEA                                        l31307 BE98  
                                      l31331 ACE0                                        l31323 AC96  
                                      l31155 DC78                                        l32211 7790  
                                      l31059 D336                                        l32131 BBCC  
                                      l32123 BBB4                                        l31077 87C6  
                                      l12597 7E92                                        l12589 7E44  
                                      l13581 AFB0                                        l13493 A83C  
                                      l16133 D610                                        l30701 65CC  
                                      l31405 C9D2                                        l31421 9702  
                                      l31261 A6EE                                        l31165 A46A  
                                      l30533 D714                                        l33013 32AA  
                                      l33005 327A                                        l31087 8978  
                                      l13559 A2D4                                        l13583 AFB6  
                                      l16135 D612                                        l21639 BDAE  
                                      l31327 ACCA                                        l31423 9708  
                                      l31415 96E4                                        l31271 A706  
                                      l32055 C6BA                                        l32231 77D0  
                                      l32207 778C                                        l33103 3536  
                                      l31281 C126                                        l13593 AFCC  
                                      l13585 AFBC                                        l31337 AD2E  
                                      l31345 D8E6                                        l30641 64B0  
                                      l30561 63AA                                        l31433 9778  
                                      l31425 9714                                        l31273 A712  
                                      l31265 A6FE                                        l31249 A6D2  
                                      l31521 3E20                                        l32065 D20A  
                                      l32057 C6BE                                        l32313 79A8  
                                      l30529 D710                                        l33121 35B4  
                                      l33017 32B0                                        l33009 32A4  
                                      l32081 813C                                        l31283 C132  
                                      l13595 AFD2                                        l13587 AFC2  
                                      l16067 9A8E                                        l16171 D250  
                                      l30707 65D6                                        l30627 6452  
                                      l31371 B30C                                        l31355 B2C2  
                                      l31451 97C4                                        l31435 9784  
                                      l31427 973A                                        l31099 7B32  
                                      l31611 4138                                        l31603 40D0  
                                      l32323 79DE                                        l32227 77CC  
                                      l33203 3DD0                                        l33123 35C2  
                                      l33115 358A                                        l33043 3354  
                                      l33035 3326                                        l32411 7498  
                                      l32403 744A                                        l32147 BC00  
                                      l32139 BBE6                                        l32163 DA0A  
                                      l31293 C166                                        l13597 AFD8  
                                      l21685 BA5C                                        l30741 666E  
                                      l30565 63AE                                        l31381 B324  
                                      l30901 C036                                        l31525 3E34  
                                      l33301 2846                                        l33213 23DA  
                                      l32325 79E0                                        l32317 79D2  
                                      l32309 7984                                        l32253 7832  
                                      l32245 781A                                        l31461 C930  
                                      l33141 36A6                                        l33125 35D6  
                                      l33109 3560                                        l33037 332E  
                                      l33029 32F2                                        l14573 C228  
                                      l32413 74C0                                        l32405 7466  
                                      l32093 81D8                                        l21687 BA62  
                                      l16095 9AEC                                        l16079 9ABA  
                                      l30735 6664                                        l30727 663E  
                                      l30663 6506                                        l30655 64E4  
                                      l30639 64AC                                        l31383 B330  
                                      l31375 B31C                                        l30903 C03E  
                                      l31703 44DE                                        l31615 4164  
                                      l31543 3EB2                                        l33311 288E  
                                      l33303 2860                                        l33215 23E4  
                                      l32271 78AA                                        l32263 7882  
                                      l32239 7804                                        l32511 89D0  
                                      l31463 C93A                                        l31471 C97A  
                                      l33135 364E                                        l33127 35F4  
                                      l33071 33FC                                        l33063 33CE  
                                      l33055 33A0                                        l14911 DE88  
                                      l32087 8178                                        l32183 DAE2  
                                      l32167 DA16                                        l30665 650A  
                                      l30673 651C                                        l30585 63F2  
                                      l30833 5F5A                                        l30921 C076  
                                      l30913 C05E                                        l31721 4526  
                                      l31705 44EA                                        l31713 4504  
                                      l31625 41C8                                        l31561 3F10  
                                      l31553 3ED8                                        l31537 3E68  
                                      l31545 3EC8                                        l31529 3E3E  
                                      l33305 2870                                        l32521 8A14  
                                      l32513 89D8                                        l30497 D362  
                                      l33153 390E                                        l33129 3626  
                                      l33049 337A                                        l32345 721E  
                                      l31811 4E94                                        l18107 D17E  
                                      l30739 666C                                        l30691 65B6  
                                      l30683 6582                                        l30763 5D6C  
                                      l31651 429C                                        l31635 4244  
                                      l31571 3F56                                        l31715 450E  
                                      l31555 3EFC                                        l32611 584C  
                                      l33403 2BF2                                        l33331 28F0  
                                      l33323 28BA                                        l33315 2898  
                                      l33307 2884                                        l33251 2508  
                                      l32283 78E8                                        l32523 8A9C  
                                      l32507 89BC                                        l33171 3B86  
                                      l33163 3A4C                                        l33139 368E  
                                      l33091 34EA                                        l33075 345A  
                                      l18043 8D30                                        l18115 D2E4  
                                      l32363 7300                                        l32355 7278  
                                      l32099 8238                                        l34123 BD48  
                                      l18141 D67C                                        l31821 4EC0  
                                      l31813 4E9C                                        l14861 B15A  
                                      l14845 CB68                                        l14837 CB20  
                                      l30597 6416                                        l30589 63F6  
                                      l31389 B34C                                        l31397 C99E  
                                      l30781 5DAC                                        l30765 5D70  
                                      l30917 C068                                        l30941 C736  
                                      l30933 C71C                                        l31661 432C  
                                      l31629 4240                                        l31549 3ED4  
                                      l32605 57E2                                        l33405 2C28  
                                      l33309 2888                                        l33253 2524  
                                      l33245 24E4                                        l33237 2474  
                                      l33229 2430                                        l32277 78D0  
                                      l32517 89FA                                        l31469 C96A  
                                      l32429 CE50                                        l32453 A39C  
                                      l33181 3BF2                                        l33085 34C4  
                                      l18061 8D68                                        l18053 8D52  
                                      l32373 7336                                        l34221 B4B0  
                                      l31485 D128                                        l34301 46DE  
                                      l34117 BD16                                        l31807 4E82  
                                      l31815 4EA6                                        l31823 4ECA  
                                      l31831 4EEE                                        l31751 4CA2  
                                      l31399 C9AA                                        l30863 6014  
                                      l30839 5F78                                        l30791 5DDE  
                                      l30783 5DB0                                        l30767 5D80  
                                      l30943 C73E                                        l31663 4336  
                                      l31671 4350                                        l33407 2C5E  
                                      l33351 2982                                        l33343 293A  
                                      l33271 261C                                        l33263 25AA  
                                      l33255 252A                                        l32527 8AA6  
                                      l32551 7F40                                        l33079 349E  
                                      l33191 3D4C                                        l18127 D314  
                                      l32391 7402                                        l18137 D66C  
                                      l16801 CCF6                                        l31841 4F1A  
                                      l31833 4EF6                                        l31825 4ED2  
                                      l31817 4EAE                                        l31753 4CAC  
                                      l14873 B19C                                        l30953 C760  
                                      l30937 C728                                        l31737 4570  
                                      l32633 5960                                        l32609 5824  
                                      l33441 2DBC                                        l33361 2A02  
                                      l33345 2942                                        l32289 7906  
                                      l32537 8AF4                                        l32473 A408  
                                      l32449 A398                                        l33097 3510  
                                      l33513 97D8                                        l33601 95AC  
                                      l32713 6A24                                        l34241 9550  
                                      l16811 CDE6                                        l31819 4EB8  
                                      l31827 4EDC                                        l31835 4F00  
                                      l31843 4F24                                        l31851 4F48  
                                      l14859 B154                                        l30875 6056  
                                      l30859 5FF6                                        l30971 D51C  
                                      l31691 43FA                                        l31595 405A  
                                      l31587 3FDE                                        l33427 2CBC  
                                      l33363 2A22                                        l33275 2620  
                                      l33259 2534                                        l32539 8B28  
                                      l32475 A418                                        l32563 8054  
                                      l33179 3BBE                                        l18411 BFBA  
                                      l18403 BF88                                        l33507 C68E  
                                      l18075 8DA8                                        l33515 97DC  
                                      l19115 5480                                        l19107 542C  
                                      l19043 51E0                                        l19019 514C  
                                      l32387 73F8                                        l32379 735C  
                                      l32731 6C02                                        l34411 4918  
                                      l34331 4768                                        l34251 45C2  
                                      l16813 CDEE                                        l31853 4F50  
                                      l31845 4F2C                                        l31837 4F08  
                                      l31829 4EE4                                        l30957 C76E  
                                      l30949 C756                                        l31677 4378  
                                      l32581 55F6                                        l33373 2AAE  
                                      l33365 2A48                                        l33357 29BC  
                                      l33285 2734                                        l32557 7FCA  
                                      l33189 3C6E                                        l17509 9DEE  
                                      l19061 5282                                        l19037 51A6  
                                      l19029 5188                                        l32397 7426  
                                      l32389 73FE                                        l33613 95E4  
                                      l33621 95FC                                        l31941 D6B0  
                                      l32725 6B58                                        l34421 4960  
                                      l34325 474E                                        l14895 D9F4  
                                      l16831 D264                                        l16823 CE0E  
                                      l31871 4FF6                                        l31839 4F12  
                                      l31847 4F36                                        l31855 4F5A  
                                      l14879 B1BC                                        l30967 D516  
                                      l30983 D53A                                        l30895 C020  
                                      l31687 439A                                        l31599 4086  
                                      l33471 2FFA                                        l33463 2F24  
                                      l33439 2D86                                        l33391 2B34  
                                      l33367 2A6C                                        l33359 29E2  
                                      l33295 27D8                                        l32823 6096  
                                      l18431 C4E2                                        l32487 A434  
                                      l33199 3DA4                                        l17527 9E42  
                                      l33551 9880                                        l33535 9836  
                                      l33519 97EA                                        l19119 5508  
                                      l19071 52D6                                        l32399 7440  
                                      l33615 95EC                                        l33623 9636  
                                      l32735 6C3A                                        l32719 6ABE  
                                      l33703 D55E                                        l34415 492E  
                                      l34247 45A0                                        l16833 D26C  
                                      l31865 4F9A                                        l31857 4F62  
                                      l31849 4F3E                                        l30889 C010  
                                      l33473 302E                                        l33465 2F5A  
                                      l33393 2B6A                                        l33385 2AEE  
                                      l32913 61EA                                        l32905 61D0  
                                      l32825 60A4                                        l18433 C4EC  
                                      l32569 80DE                                        l17545 9EF0  
                                      l18409 BFB2                                        l19049 523C  
                                      l33617 95F4                                        l34425 4976  
                                      l34417 4946                                        l34345 479A  
                                      l34337 4780                                  _writeBuffer 0208  
                                      l31867 4FC8                                        l18099 D15E  
                                      l30979 D532                                        l32595 5740  
                                      l33467 2F90                                        l33379 2ACE  
                                      l33299 281E                                        l19307 B54C  
                                      l32923 6204                                        l32851 6102  
                                      l18451 C52A                                        l33563 98D2  
                                      l33547 9870                                        l33555 9888  
                                      l19067 52BC                                        l33635 965A  
                                      l33643 9668                                        l34195 C2AC  
                                      l33723 D596                                        l34451 4B66  
                                      l34283 468A                                        ?_fabs 0068  
                                      l19149 9218                                        l19341 DD22  
                                      l31893 50FA                                        l31885 50A2  
                                      l31877 5046                                        l31869 4FEE  
                                      l15965 992A                                        l30997 DACE  
                                      l30989 DAB6                                        l19237 D19A  
                                      l33469 2FC6                                        l33477 3054  
                                      l19309 B552                                        l32941 629A  
                                      l32909 61DA                                        l18445 C518  
                                      l33821 9D48                                        l33813 9D28  
                                      l16925 DB08                                        l33549 9878  
                                      l33557 98C0                                        l17557 AB9E  
                                      l33629 9648                                        l33581 9556  
                                      l32749 75B2                                        l31957 DD9A  
                                      l32781 BA8C                                        l34453 4B7C  
                                      l34445 4B4C                                        l34381 4854  
                                      l34293 46BC                                        l34277 4678  
                                      l16839 D284                                        l31895 5102  
                                      l31887 50AA                                        l31879 504E  
                                      l34527 C5EE                                        l15991 999E  
                                      l15983 9980                                        l19503 B38E  
                                      l19239 D19E                                        l33399 2BBA  
                                      l33479 314C                                        l32943 62AA  
                                      l32927 6212                                        l32855 6114  
                                      l18615 DE04                                        l33831 9D84  
                                      l16943 C46E                                        l17575 ABE4  
                                      l19095 5404                                        l19087 537E  
                                      l19079 5310                                        l33583 955A  
                                      l32759 774E                                        l32767 D0E0  
                                      l33719 D592                                        l34439 4AC2  
                                      l34383 485A                                        l34367 47F8  
                                      l34359 47DC                                        l34463 4BB2  
                                      l34529 C622                                        l15977 9968  
                                      l32953 6322                                        l32961 634C  
                                      l32849 60FC                                        l33841 9DB2  
                                      l33833 9D8C                                        l33817 9D34  
                                      l33809 9D0E                                        l16945 C478  
                                      l19169 C8D0                                        l33569 98D8  
                                      l33577 98E6                                        l18393 C3DA  
                                      l18377 C382                                        l19089 5384  
                                      l19097 5406                                        l33753 905A  
                                      l33745 904C                                        l32777 BA88  
                                      l34393 48A6                                        l34289 46A4  
                                      l18707 A9D8                                        l19523 B3F8  
                                      l19515 B3D4                                        l19507 B3A0  
                                      l19283 B4CC                                        l32947 62D0  
                                      l32955 6348                                        l33827 9D74  
                                      l16963 C4B6                                        l33587 9568  
                                      l33691 D4FC                                        l34459 4B9C  
                                      l34395 48B4                                        l34387 486A  
                                      l16885 CDC8                                        l16797 CCE2  
                                      l19461 AE36                                        l19509 B3AC  
                                      l19269 D8C6                                        l32973 6374  
                                      l32949 6300                                        l18813 DEA0  
                                      l33837 9DA2                                        l16957 C4A4  
                                      l18389 C3BE                                        l34397 48BC  
                                      l34389 4882                                        l33775 C09E  
                                      l15999 99D4                                        l19455 AE1E  
                                      l19519 B3E2                                        l19279 B4C8  
                                      l32967 6350                                        l32991 31DC  
                                      l32983 31C8                                        l33791 9CC4  
                                      l33847 9DB8                                        l33863 D02A  
                                      l18665 CC06                                        l32897 61B6  
                                      l32969 636A                                        l32985 31D0  
                                      l33865 D030                                        l19467 AE58  
                                      l19483 AEA6                                        l19299 B50E  
                                      l32899 61BA                                        l18835 66A6  
                                      l19811 6F00                                        l33859 D00E  
                                      l33699 D55A                                        l19469 AE64  
                                      l33789 9CBC                                        l18909 68EC  
                                      l18845 66E0                                        l18679 A95C  
                                      l18687 A97C                                        l19487 AEBC  
                                      l19479 AE98                                        l32999 3240  
                                      l18935 8366                                        l19807 6EC2  
                                      l19815 6F06                                ___fltol@sign1 0040  
                                      l18881 67C4                                        l18873 6794  
                                      l18865 676C                                        l18849 672C  
                                      l18961 83E8                                        l18953 83C0  
                                      l18945 83A2                                        l19809 6EE0  
                                      l19817 6F28                              __end_of___aldiv AECE  
                                      l19499 B37A                                        l18893 6824  
                                      l19829 6F3E                                        l19765 6C6C  
                                      l19943 CAD6                                        l19783 6E4C  
                                      l18977 844E                                        l18969 8418  
                                      l19971 BF6A                                        l19963 BEF2  
                                      l19955 CB02                                        l18899 6840  
                                      l19779 6D64                                        l18989 8484  
                                      l19789 6E5C                 modbusParseRequest0304@parser 0029  
                                      l19993 AA12                  modbusParseResponse05@parser 001F  
                                      l19987 A9F8                              __end_of___almod B40A  
                            __end_of___fladd 668A                                        ?_main 0001  
                     __size_of_ymd_to_scalar 00A6                              __end_of___fldiv 79E8  
                            __end_of___awdiv C080                              __end_of___lbdiv D53E  
                            __end_of___flneg D8F8                                        STR_10 2355  
                                      STR_11 2350                                        STR_20 2369  
                                      STR_12 2396                                        STR_21 2369  
                                      STR_13 2387                                        STR_30 2369  
                                      STR_22 2369                                        STR_14 238F  
                                      STR_31 2369                                        STR_23 2369  
                                      STR_15 239B                                        STR_40 2369  
                                      STR_32 2369                                        STR_24 2369  
                                      STR_16 237E                                        STR_41 2369  
                                      STR_33 2369                                        STR_25 2369  
                                      STR_17 2396                                        STR_50 2369  
                                      STR_42 2369                                        STR_34 2369  
                                      STR_26 2369                                        STR_18 2369  
                                      STR_51 2369                                        STR_43 2369  
                                      STR_35 2369                                        STR_27 2369  
                                      STR_19 2369                                        STR_60 2375  
                                      STR_44 2369                                        STR_36 2369  
                                      STR_28 2369                                        STR_52 2375  
                            __end_of___awmod C778                                        STR_53 2375  
                                      STR_45 2369                                        STR_37 2369  
                                      STR_29 2369                                        STR_54 2375  
                                      STR_46 2369                                        STR_38 2369  
                                      STR_55 2375                                        STR_47 2369  
                                      STR_39 2369                                        STR_56 2375  
                                      STR_48 2369                                        STR_57 2375  
                                      STR_49 2369                                        STR_58 2375  
                                      STR_59 2375                              __end_of___lbmod DAD6  
                            __end_of___flmul 606C            __size_of_USBCtrlEPServiceComplete 00E8  
                            __end_of___flsub D07E                              __end_of___fltol B35E  
                            __end_of___lldiv C186                              ___awdiv@divisor 0017  
                                      u12240 A194                              __end_of___llmod C9F2  
                                      u10570 ADAE                                        u12250 A1C2  
                     __end_of_USBDeviceTasks 9004                                        u21210 66A2  
                                      u12500 7E2C                                        u20180 8D98  
                                      u10590 ADEC                                        u12270 A20E  
                                      u22030 DDC2                                        u21310 6814  
                                      u21055 A91C                                        u12247 A18A  
                                      u21080 A984                                        u23000 A9F4  
                                      u22040 DDC4                                        u21320 683C  
                                      u21065 A92C                                        u10577 ADA4  
                                      u12257 A1B8                                        u21420 843E  
                                      u10597 ADE2                                        u12277 A204  
                                      u22310 B3B0                                        u23110 A0EC  
                                      u21430 8474                                        u21440 84C8  
                                      u21360 8362                                        u40010 4DD8  
                                      u22250 AE68                                        u21450 84CA  
                                      u21700 9240                                        u21380 838E  
                                      u21540 525C                                        u21470 5148  
                            ?_rs485_readByte 0002                                        u21720 9290  
                                      u40040 4E0E                                        u21800 D1BE  
                                      u40200 9C20                                        u21608 5394  
                                      u21609 53D6                                        u41010 8AC2  
                  ?_USBCtrlEPServiceComplete 0001                                        u40060 4E32  
                                      u21900 B4C8                                        u21740 C8CC  
                                      u21590 5358                                        u21807 D1B4  
                                      u41040 8B3A                                        u21648 5490  
                                      u40320 8168                                        u21649 54D2  
                                      u40250 C6B0                                        u41130 5722  
                                      u40260 C6F6                                        u17230 99C6  
                                      u21870 D8C2                                        u22750 6D50  
                                      u23454 AF1C                                        u23455 AF18  
                                      u42120 3870                                        u41320 BA84  
                                      u17250 9A04                                        u22930 CACC  
                                      u22770 6E4C                                        u40267 C6EC  
                                      u17260 9A18                                        u41420 60C4  
                                      u17237 99BC                                        u41510 612A  
                                      u40710 7992                                        u23680 CC2C  
                                      u40720 79B6                                        u17257 99FA  
                                      u25290 BD66                                        u41610 617A  
                                      u41530 613A                                        u41450 60E8  
                                      u41290 75A0                                        u41371 6078  
                                      u18420 D270                                        u41381 6084  
                                      u26190 9000                                        u41630 618A  
                                      u41550 614A                                        u41470 60F8  
                                      u40670 7936                                        u40830 741A  
                                      u18520 CDC4                                        u42440 297A  
                                      u42520 C636                                        u40760 7264  
                                      u43320 C2A8                                        u41650 619A  
                                      u41570 615A                                        u40930 A3EA  
                                      u40770 72F0                              __end_of___lwdiv CE22  
                                      u42700 D4F8                                        u18390 CDF2  
                                      u25910 CAB0                                        u42390 2716  
                                      u41670 61AA                                        u41590 616A  
                                      u41751 62EA                                        u43520 47AA  
                                      u41690 61CA                                        u42810 9CEA  
                                      u43290 BCD4                                        u39000 A458  
                                      u41768 62EE                                        u38210 64C8  
                                      u43490 4756                                        u39011 A47A  
                                      u43807 CE36                                        u39200 BEE6  
                                      u38160 6474                                        u43817 9C2A  
                                      u38170 6484                                        u43827 9CAC  
                                      u38420 664A                                        u38340 65DA  
                                      u38180 6486                                        u39140 A718  
                                      u43837 C970                                        u39070 A52A  
                                      u43847 D5BA                                        u43767 D6CE  
                                      u39160 C136                                        u38360 65EE  
                                      u39320 B336                                        u39080 A642  
                            __end_of___lwmod D298                                        u43857 D5C6  
                                      u43777 D6EC                                        u38610 6004  
                                      u38530 5DCC                                        u43867 D5D6  
                                      u43787 A34A                                        u38620 6022  
                                      u39500 D124                                        u43877 D5E0  
                                      u43797 A40E                                        u39270 B2B0  
                                      u39350 C9AE                                        u39430 978E  
                                      u38800 B780                                        u39280 B2E0  
                                      u37920 DC40                                        i1l378 DDF2  
                                      u38570 5FA8                                        u38730 C742  
                                      u39700 427A                                        u39525 C32E  
                                      u39285 B2D6                                        u38670 C042  
                                      u39630 4096                                        u39470 C92C  
                                      u39640 40E2                                        u38770 D520  
                                      u39730 435E                                        u37970 D38C  
                                      u38850 C1FC                                        u39811 4556  
                                      u39740 436E                 modbusParseRequest0304@status 0027  
                                      u39830 4588                                        u39670 4138  
                modbusParseResponse05@status 001D                                        u38880 879E  
                                      u39841 4C16                                        u38890 87BC  
                                      u39930 4D48                                        u39950 4D6C  
                                      u38991 A44E                                        u39890 4D00  
                                      u39980 4DA2                                        _UADDR 000F38  
                            ___awdiv@counter 0019                              ??_eeprom_update 002F  
                        ?_modbus_check_event 0001                 __size_of_modbusParseResponse 02E6  
                                      _TMR0L 000FD6                            ??_nvm_flash_check 000F  
                          _atcommand_compare B4B4                                        _USTAT 000F64  
                                      _TXREG 000FAE                     __end_of_ACCESS_SourceGet DEA4  
                   __end_of_ACCESS_SourceSet D5E6                        I2C_Write@I2cWriteData 000F  
         __size_of_USBCtrlEPAllowStatusStage 00C4                          ___lmul@multiplicand 0013  
                          buffer_en_queue@ch 0011                      __size_of_ewmaFilter_get 0162  
                      modbusSlaveInit@status 001D              __end_of_USBCtrlEPAllowDataStage B9DC  
                                      _sd000 2335                                        _sd001 22C7  
                                      _sd002 05C3                 __size_of_modbus_get_baudrate 0036  
             ?_USBIncrement1msInternalTimers 0001                              __end_of__strclr D68E  
                                ?_POWER_Init 0001                              __end_of__strcpy C708  
                            __end_of__strlen D1D2                           ?_atcommand_compare 0013  
                          _nvm_clear_channel 8568                                        __atof 898A  
                                      __atoi A016                             ?_modbusSlaveInit 001D  
                                      __ftoa D1D2                                        __itoa 92BA  
                       __size_of_check_param 002E                                        _g_nvm 0152  
                            __end_of_dpowers 2323                                        fabs@d 0068  
                              modbusCRC@data 000F                      ?_lmp91000_set_Reference 0019  
             __end_of_lmp91000_set_GainRLoad D86A                                        _scale 5964  
                            __end_of_isdigit DC80                      ?_ResetBootloaderCleanly 0001  
                             ?_i2c_readBytes 0011                            _eeprom_RandomRead DA2E  
                         ?_nvm_clear_channel 0001                  __end_of_modbus_relay_status D452  
                          __end_of_I2C_Start DE64                            __end_of_I2C_Write DC44  
                                      pclath 000FFA                                _i2c_writeData D358  
                                      tablat 000FF5                    eeprom_RandomRead@mem_addr 0023  
                           ymd_to_scalar@day 002A                                        plusw1 000FE3  
                                      plusw2 000FDB                            __end_of_CDCInitEP CA58  
                         ?_eeprom_RandomRead 0023                          ??_atcommand_compare 0018  
                        lmp91000_unlock@buff 0019                                        ttemp5 0052  
                                      ttemp6 0055                                        ttemp7 0059  
                                      status 000FD8                __size_of_sensMeasure_gas_read 0148  
                                      wtemp8 0052                              __end_of_sprintf 459E  
               __size_of_nvm_write_flash_all 004A                      _modbus_relay_ouput$4706 002D  
                            ___lbdiv@divisor 0013                              years_to_days@yr 001C  
                       ??_modbus_check_event 001B                       ?_Kalman_updateEstimate 007D  
                  flash_writeBytes@num_bytes 0015                              ___lbdiv@counter 0015  
                 ewmaFilter_get@filter_alpha 04A3                          rs485_writeBytes@len 0016  
                        ??_nvm_clear_channel 0013                          _nvm_read_eeprom_all DBE2  
                         update_command@chno 00AC                       sensor_lmp_init@channel 0021  
               __size_of_sensor_set_gas_mode 0038                          rs485_read_task@byte 000E  
                modbus_relay_ouput@relay_idx 002F                              putUSBUSART@data 0013  
               __size_of_USBStdSetCfgHandler 00D2                              __initialization A72A  
                    _modbusBuildExceptionErr D2D8                          ??_eeprom_RandomRead 0027  
                               ?_modbus_init 0001                                 ?_modbus_task 0001  
                     _compensate_temperature 6974                                 __end_of_fabs D414  
                               __end_of_main D838                                 __atof@dotpos 008D  
                      ADCto_uVoltage@raw_adc 007D                         max7323_set_gpio@chno 001A  
                      _control_signal_bitmap 00E8                       _sensor_temp_fahrenheit C852  
                           ??_atcommand_init 0013                              update_command@i 00AA  
                           ??_atcommand_task 0043                              ?_update_command 00A4  
                  flash_writeBytes@startaddr 000F                             __end_of_i2c_init DA04  
                               build_time@tm 0092                        i2c_readBytes_from@len 0021  
                               ?_FSR_set_LSB 000F                              ?_build_response 00CD  
              __size_of_modbusParseException 0068                          ewmaFilter_get@alpha 008C  
                  __size_of_USBCtrlEPService 0096                    __size_of_sensMeasure_init 019C  
                          ?_modbusMasterInit 001D                    __size_of_sensMeasure_task 066E  
                                     ??_fabs 0038                        atcommand_compare@src1 0013  
                      atcommand_compare@src2 0015                    __end_of_atcommand_compare B55E  
                                     ??_main 0043                    __size_of_gasSensor_filter 023A  
                 __size_of_lmp91000_set_Mode 002C                      __end_of_check_atcommand BF76  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                     modbusMasterInit@status 001D                           flash_clear@endaddr 0013  
                       ?_nvm_read_eeprom_all 0001                            _modbusBitsToBytes CF5A  
                         ??_modbusMasterInit 001F                                  ?_USBSuspend 0001  
                       __size_of__tdiv_to_l_ 00FE                    __end_of_nvm_clear_channel 8780  
                      modbusMatchEndian@data 001B                modbusParseRequest0304@builder 003D  
                       max7323_set_lmp_off@i 001E                               _ADCto_uVoltage C3E4  
                       max7323_set_lmp_on@wr 001D                compensate_temperature@cmp_val 00A6  
             __end_of_lmp91000_set_Reference D3D6                  lmp91000_set_GainRLoad@RLoad 0019  
            __size_of_modbus_check_threshold 0046                     ?_Kalman_setEstimateError 000F  
                         ?_modbusBitsToBytes 000F                                 _cdc_mem_type 00E9  
                            build_response@i 03EF                    __end_of_eeprom_RandomRead DA58  
             __end_of_ResetBootloaderCleanly DE80                                       ?__atof 007D  
                                     ?__atoi 001B                              _sensor_ADC_read DE0E  
                                     ?__ftoa 00C3                                       ?__itoa 001D  
                           _CDCDataOutHandle 00DE                                _usedtime_task BCBE  
                           ___llmod@dividend 000F                                       ?_scale 007D  
                                     _EECON2 000FA7                                       _ANCON0 000F48  
                      __end_of_ads1114_SetUp D2D8                                       _ANCON1 000F49  
              __size_of_modbusBuildException 00D0                             ___awdiv@dividend 0015  
                   i2c_readBytes_from@wraddr 001D                             ?_modbus_set_swap 0001  
                             ?_i2c_writeData 0010                              getsUSBUSART@len 001A  
                     SYSTEM_Initialize@state 0013                      __size_of_WDT_initialize 0004  
            __end_of_sensMeasure_sensor_init B606                        __size_of_CDCTxService 013C  
                                     i1l1602 005C              gasSensor_temperature@temp_uVolt 007D  
           __size_of_USBDisableWithLongDelay 0018                                       i2l1904 D7CE  
                                     _TABLAT 000FF5                  modbusBuildRequest05@address 001F  
                      __size_of_DelayRoutine 0014                                       _RCREG1 000FAF  
                                     _RCSTA1 000FAC                                       _OSCCON 000FD3  
                        ??_modbusBitsToBytes 0011                                CDCTxService@i 0018  
                                     _SPBRG1 000FB0                             ?_rs485_read_task 0001  
                              _ymd_to_scalar B754          compensate_temperature@baseLine_temp 00A1  
                         __size_of_InitTimer 001E                        __end_of_clear_command C852  
                           __end_of___xxtofl 97D6                  __end_of_modbus_set_register DEDC  
                         _modbus_get_timeout DD16                                       _TXSTA1 000FAD  
                           __end_of__isdigit D89C                             __end_of_checksum C540  
                          ads1114_read@rbuff 0022                  modbusBuildRequest05@builder 0024  
                __end_of_lmp91000_get_status D14C                    __size_of_Board_initialize 004C  
                          ads1114_read@wbuff 0021                              ??_years_to_days 0020  
                          _shortPacketStatus 00F6                       ??_display_sensor_value 0042  
                           __end_of__powers_ 203D                         __size_of_flash_clear 006E  
                            USBDeviceTasks@i 002B                         __end_of_app_usb_init DC9E  
                       __end_of_app_usb_task CAB6                  USBStdFeatureReqHandler@pUEP 0025  
                    _modbusParseResponse0102 668A                     USBTransferOnePacket@data 0010  
                 USBCtrlTrfInHandler@lastDTS 0010                                       ___flge AC62  
                            ??_USBDeviceInit 001D                                       ___fleq BE64  
               sensMeasure_temp_read@channel 008D                                       ___lmul CCD2  
                               ?_putUSBUSART 0013                          ?_modbus_get_timeout 0001  
                                  ??___aldiv 0017                                    ??___almod 0017  
                                  ??___fladd 0030                                       ___wmul DB98  
                                  ??___fldiv 0017                          parse_command@cmdidx 0090  
                                  ??___awdiv 0019                          __size_of_POWER_Init 000A  
                                  ??___lbdiv 0014                                    ??___flneg 0013  
                                  ??___awmod 0013                                    ??___lbmod 0010  
                                  ??___flmul 006C               __size_of_gasSensor_temperature 00C2  
                                  ??___flsub 0038                                    ??___fltol 0081  
              __size_of_modbusBuildRequest05 0122                   __end_of_i2c_readBytes_from D6C4  
                 display_sensor_value@strlen 00CC                          eeprom_writePage@cnt 0025  
                                  ??___lldiv 0017                          eeprom_writePage@len 0022  
                       __end_of_getsUSBUSART BDDA                                    ??___llmod 0017  
                       __size_of_buffer_init 002E                __end_of_gasSensor_temperature B2A4  
                          eeprom_update@chno 0031                                    ??___lwdiv 0019  
                                     _g_swap 00FC                                    ??___lwmod 0013  
  SYSTEM_Initialize@pll_startup_counter_5972 0011                    __size_of_flash_writeBytes 00E4  
                          _USBEnableEndpoint D61E              __size_of_USBStdGetStatusHandler 00A6  
                               split_param@i 001D                                 split_param@m 0017  
                               split_param@n 0018                                       _memcpy D14C  
                     buffer_de_queue_bool@ch 0011                                       _memset D9AC  
                                     _fround 79E8                   __size_of_I2C_Bus_SourceGet 000C  
                                     _isleap CD7C                                       clear_0 A7B0  
                                     clear_1 A7BC                                       clear_2 A7C8  
                                     clear_3 A7D4                                       clear_4 A7E0  
                                     clear_5 A7EC                                       clear_6 A7F8  
                                     clear_7 A804                          parse_command@retval 0080  
                           ___awdiv@quotient 001B                                       _mktime 8780  
                            ___awmod@divisor 0011                 modbusBuildException@function 001B  
                                     isa$std 000001                          parse_command@status 0027  
                  __end_of_modbusBitsToBytes CFA4                              ___awmod@counter 0013  
                         ?_USBEnableEndpoint 0017                                    ??__strclr 0013  
                                  ??__strcpy 0013                                    ??__strlen 0011  
                     __end_of_ADCto_uVoltage C458                        ??_nvm_read_eeprom_all 0028  
              __size_of_USBTransferOnePacket 00FA                                 ?_sensor_init 0001  
                   __end_of_rs485_writeBytes D6FA                                    ??_isdigit 000F  
                                  ?_I2C_Read 0001                                 _CDCTxService 9914  
                                  ?_I2C_Stop 0001                               _i2c_writeBytes D6FA  
                               _DelayRoutine DDFA                             __end_of_nvm_init C104  
                               __mediumconst 2008                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 0018                               ?_usedtime_task 0001  
                __size_of_ResetDeviceCleanly 000C                              ??_i2c_readBytes 0014  
                    __size_of_usart_rx_ready 000C                        _sensMeasure_temp_read B40A  
                       ??_modbus_get_timeout 000F                       i2c_writeBytes_to@wrptr 001B  
                          ?_modbusSwapEndian 000F         __end_of_modbus_master_response_parse AF96  
      __size_of_modbus_master_response_parse 00C8                 _modbus_master_response_parse AECE  
                    __size_of_usart_tx_empty 000C                                 _g_channel_no 00F9  
                                  ??_sprintf 00A5                __size_of_nvm_write_eeprom_all 0132  
                   __size_of_flash_readBytes 005A                                  _CtrlTrfData 000438  
                           ___lbdiv@dividend 0014                             _eeprom_writePage C924  
                       _controlTransferState 004E                           ??_modbusSwapEndian 0011  
                           years_to_days@ret 0022                  modbusParseRequest0304@count 0040  
                modbusParseRequest0304@index 003A                                   ___flge@ff1 0091  
                                 ___flge@ff2 0095                          i2c_readBytes@ackbit 001B  
                               ___xxtofl@arg 0019                               ?_ymd_to_scalar 0026  
                               ___xxtofl@exp 0018                  compensate_temperature@model 00A5  
                          _SYSTEM_Initialize CD28                                 ___xxtofl@val 000F  
                                 ___fleq@ff1 0091                                   ___fleq@ff2 0095  
                            FSR_set_LSB@gain 0013                           sensor_adc_init@ret 0027  
                            ___lbmod@divisor 000F                                  param_copy@i 0013  
                                 __accesstop 0060                      __end_of__initialization A80A  
                          _modbusMatchEndian DDCE                              ___lbmod@counter 0011  
              modbusParseResponse0102@parser 001F                                   ___flneg@f1 000F  
                   eeprom_RandomRead@channel 0027               Kalman_setMeasurementError@pObj 000F  
                         check_atcommand@cmd 0020                           ?_SYSTEM_Initialize 0001  
              modbusParseResponse0102@status 001D                    ??_modbusBuildExceptionErr 0026  
                              ___rparam_used 000001                          update_command@apply 00AB  
                         ?_modbusMatchEndian 001B                     __size_of_USBStallHandler 0042  
                                 ___fltol@f1 007D                                 __isdigit@src 000F  
                          ?_get_product_desc 000F                             atcommand_task@ch 01FF  
                     _modbus_check_threshold D07E                          __size_of_USBSuspend 002E  
    __end_of_modbus_master_relay_status_task DAAC     __size_of_modbus_master_relay_status_task 002A  
          ??_modbus_master_relay_status_task 002F             ?_modbus_master_relay_status_task 0001  
            _modbus_master_relay_status_task DA82                  nvm_sensor_type_channel@chno 0018  
                    modbus_get_baudrate@baud 0013                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint D656                              flash_clear@flag 0017  
                              __end_of_sd000 2339                                __end_of_sd001 22FB  
                         ??_get_product_desc 0011                   __end_of_nvm_read_flash_all DB98  
                               __pidataBANK1 DEE6                                 __pidataBANK4 D452  
                               __pidataBANK5 D7D2                                 __pidataBANK7 D48E  
                        ??_SYSTEM_Initialize 000F                    __size_of_lmp91000_isReady 0018  
                              __end_of__atof 8B88                                __end_of__atoi A124  
                          ?_usart_writeBytes 0010                                __end_of__ftoa D214  
                              __end_of__itoa 940C             __size_of_USBCtrlEPAllowDataStage 0098  
              __size_of_buffer_de_queue_bool 007A                          ??_modbusMatchEndian 001D  
                      flash_clear@flash_addr 0018                              _g_timeout_count 00FB  
                            _nvm_clear_flash CB6E                                __end_of_scale 5D3E  
              __size_of_USBConfigureEndpoint 0094                           modbusBitsToBytes@n 000F  
                __end_of_USBCtrlTrfInHandler B1E2                     __size_of_gasSensor_calib 029C  
                         ??_usart_writeBytes 0013                                build_time@F37 0300  
                           ___lbdiv@quotient 0016                           _modbus_master_task 97D6  
                         max7323_set_gpio@wb 0019                                 ?_split_param 0013  
                                 __atof@sign 0085                   __size_of_atcommand_compare 00AA  
                    __end_of_sensor_ADC_read DE20                                   __atoi@sign 0023  
            __end_of_Kalman_setEstimateError DCF8                              _sensor_adc_init D0C4  
                     __end_of_i2c_writeBytes D730                            __end_of_InitTimer DCBC  
                            ?_ADCto_uVoltage 007D                             ?_check_atcommand 0020  
                     __size_of_write_command 0024                                   __div_to_l_ A636  
                                 ??_I2C_Read 000F                     nvm_clear_channel@channel 0013  
                 __size_of_nvm_clear_channel 0218                               _ewmaFilter_get 9004  
                                 ??_I2C_Stop 000F                                   _cdc_notice 031D  
           __size_of_nvm_sensor_type_channel 025A                                   _cdc_rx_len 00EB  
                    __size_of_months_to_days 0036                                   _cdc_tx_len 00EA  
                        ?_modbus_master_task 0001                        _modbusParseResponse05 834A  
                 __size_of_eeprom_RandomRead 002A                      max7323_set_lmp_off@F353 01F5  
                            ??_i2c_writeData 0014                                      ??__atof 0081  
                                    ??__atoi 001F                             ??_modbusSlaveEnd 001F  
                                    ??__ftoa 0042                                      ??__itoa 0023  
                   ??_USBCtrlTrfSetupHandler 002A                      _USBTicksSinceSuspendEnd 00EC  
                  display_sensor_value@ishex 03E3                              __div_to_l_@exp1 001C  
                            __div_to_l_@cntr 001B                    buffer_de_queue_bool@queue 000F  
                                    ??_scale 0040                    __end_of_SYSTEM_Initialize CD7C  
                            __div_to_l_@quot 0017                       _USBStdGetStatusHandler B6AE  
                       ewmaFilter_get@retval 0088   __end_of_modbusBuildRequest01@mbcoils$F4614 DB72  
__size_of_modbusBuildRequest01@mbcoils$F4614 0026         ??_modbusBuildRequest01@mbcoils$F4614 002E  
        ?_modbusBuildRequest01@mbcoils$F4614 0027           _modbusBuildRequest01@mbcoils$F4614 DB4C  
                                 _g_baudrate 2071                    __end_of_modbusMatchEndian DDE4  
                                 _rs485_init DCF8                                   __pbssBANK0 00CF  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                                 __pbssBANK3 0300                                   __pbssBANK4 0440  
                                 __pbssBANK5 0500                                   __pbssBANK6 0600  
              ?_modbus_master_response_parse 0001                             check_atcommand@i 0024  
                          i1_buffer_en_queue CEC0                     __end_of_max7323_set_gpio DB4C  
                                 __isdigit@n 0011                     __size_of_buffer_de_queue 0074  
                                  ?_i2c_init 0001                       eeprom_RandomRead@rdptr 0024  
                      lmp91000_isReady@rBuff 0020                           ?i1_buffer_en_queue 0001  
                    eeprom_writePage@channel 0024                __size_of_sensor_set_temp_mode 0038  
                         _max7323_set_lmp_on DA04                                __div_to_l_@f1 000F  
                              __div_to_l_@f2 0013                    ??_modbusParseResponse0102 0023  
                        _modbusParseResponse 6C5C                  __size_of_USBWakeFromSuspend 0038  
                               _g_last_value 0100                                  _pBDTEntryIn 00D8  
                   __size_of_buffer_en_queue 004E                              _sensor_lmp_init BA72  
                      max7323_set_lmp_off@wr 001C                         eeprom_RandomRead@len 0026  
                         __size_of_rcallback 0076             __end_of_USBCtrlEPServiceComplete A900  
                       ??_modbus_master_task 003A                  __size_of_USBCheckCDCRequest 00A4  
                         __size_of_modbusCRC 0074                       modbus_master_task@byte 003A  
                        _modbus_get_baudrate D766                         USBCtrlTrfRxService@i 000F  
                                    ?___flge 0091                                      ?___fleq 0091  
                            _nvm_flash_check CC24                          ??i1_buffer_en_queue 0004  
                                    ?___lmul 000F                      DelayRoutine@DelayAmount 000F  
                                    ?___wmul 000F                          ?_max7323_set_lmp_on 0001  
                           ??_rs485_readByte 0003                         __size_of_modbus_init 00A8  
                         build_response@chno 03F0                         __size_of_modbus_task 0048  
                                    ?_memcpy 000F                                      ?_memset 0015  
                         build_response@temp 03EB                                      ?_fround 007D  
                                    ?_isleap 0014                               ___lmul@product 0017  
                                 _device_dsc 2323                           _modbus_relay_ouput BF76  
                                    ?_mktime 0036                             _USBCtrlEPService B9DC  
                           _sensMeasure_init 8B88                     __size_of_lmp91000_unlock 001C  
                           _sensMeasure_task 459E                   __size_of_modbusBitsToBytes 004A  
                                 _ep_data_in 014B                       __end_of_ewmaFilter_get 9166  
                        _nvm_write_flash_all CFA4                             _gasSensor_filter 8110  
            __end_of_modbusBuildExceptionErr D318                     ??_modbusParseRequest0304 002B  
                       __size_of_FSR_set_LSB 0092                  __end_of_USBCtrlTrfRxService A338  
                              i2c_init@speed 000F                         modbus_relay_ouput@on 0026  
                   display_sensor_value@chno 00CB                              ?_i2c_writeBytes 0015  
                         _USBCheckStdRequest AF96                           __size_of_nvm_clear 0012  
                              ?_ads1114_read 001D                         ?_modbusParseResponse 002B  
                          _configDescriptor1 2284                     display_sensor_value@temp 03E4  
                                    i1l16203 DD4E                                      i1l14921 DEC4  
                                    i1l14931 DDF6                              ??_usedtime_task 0032  
                                  ?___xxtofl 000F                                    ?__isdigit 000F  
                                  ?_checksum 000F                          _sensor_set_gas_mode D576  
                        ?_modbus_relay_ouput 0026                  __end_of_USBCtrlTrfTxService AE02  
                     ?_sensMeasure_temp_read 0001                          _USBStdSetCfgHandler AAC0  
                          ?_ACCESS_SourceGet 0001                            ?_ACCESS_SourceSet 0001  
                                    _TBLPTRH 000FF7                                      _TBLPTRL 000FF6  
                       ?_modbus_get_baudrate 000F                                      _TBLPTRU 000FF8  
                               ??_POWER_Init 000F                           rs485_init@baudrate 0028  
                      usart_writeBytes@wrptr 0010                                      _SSP1ADD 000FC8  
                 __end_of_modbusParseRequest 74C4                                      _SSP1BUF 000FC9  
                _modbusParseRequest0304$2850 0033                  _modbusParseRequest0304$2860 0035  
                _modbusParseRequest0304$2861 0037                    __end_ofi1_buffer_en_queue CF0E  
                       ??_max7323_set_lmp_on 001C                           ??_ACCESS_SourceGet 000F  
                        ?_USBCheckStdRequest 0001                           ??_ACCESS_SourceSet 000F  
               __size_of_USBStdGetDscHandler 010A                              ??_ymd_to_scalar 002C  
                                 __strlen@sc 0011                      _USBDisableWithLongDelay DDA0  
                                    _UIEbits 000F36                                   _build_time 4C0C  
                             _WDT_initialize DEF6         modbusParseResponse0102@requestParser 0021  
                                    _UIRbits 000F62                      ??_Kalman_updateEstimate 0040  
        modbus_master_relay_control_task@ppm 00A6                   _gasSensor_temperature$9453 0085  
                                 ??_i2c_init 000F                     ??_Kalman_setProcessNoise 0015  
                               _g_tick_count 00F7                                _cdc_trf_state 004F  
            _FlashSignatureWord_absconstaddr 002006                   Kalman_setProcessNoise@pObj 000F  
                     __size_of_parse_command 0312                         ?_nvm_write_flash_all 001F  
                      __size_of_app_usb_init 001E                        __size_of_app_usb_task 005E  
                              _write_command DBBE                                    _I2C_Start DE54  
                           _Board_initialize CF0E                      ?_compensate_temperature 009D  
                       build_response@status 00CD                                    _I2C_Write DC26  
                          ??_flash_readBytes 0017                          _atcommand_task$4113 01FD  
                                 _ewmaFilter 02EA                             ??_update_command 00A6  
                                    _pCDCDst 0142                      __end_of_nvm_clear_flash CBCA  
                                    _pCDCSrc 0145                        __size_of_getsUSBUSART 008C  
                               _g_temp_value 0118                      ?_sensor_temp_fahrenheit 007D  
                          __end_of__npowers_ 2071                         ?_sensor_set_gas_mode 0001  
                                    __Hparam 0000                         ??_modbus_relay_ouput 0027  
            ??_USBIncrement1msInternalTimers 000F                            __end_of_g_timeout 2094  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP C9F2  
                          usart_writeBytes@i 0013                                   _scale$9459 0081  
                                    __Lparam 0000                 ??_Kalman_setMeasurementError 0015  
                           ??_build_response 02FC                   __size_of_USBEnableEndpoint 0038  
                                  ?_nvm_init 0001                                   _readBuffer 0583  
                    __end_of_sensor_adc_init D108                         ??_USBCheckStdRequest 002A  
                                    ___aldiv AE02                              __size_of___flge 00D0  
                            __size_of___fleq 008A                                      ___almod B35E  
                                    ___fladd 637E                __size_of_USBCtrlTrfOutHandler 005C  
                                    ___fldiv 7760                                      ___awdiv BFFC  
                                    ___lbdiv D504                                      ___flneg D8CA  
                            __size_of___lmul 0056                                      ___awmod C708  
                                    ___lbmod DAAC                                      ___flmul 5D3E  
                                    ___flsub D036                                      ___fltol B2A4  
                                    ___lldiv C104                             ??_USBDeviceTasks 002B  
                            __size_of___wmul 0026                                      ___llmod C98C  
                           _flash_writeBytes A900                                      ___lwdiv CDD0  
                  sensMeasure_temp_read@volt 0089                            ??_USBStallHandler 000F  
                         __end_of_POWER_Init DEE6                                      ___lwmod D256  
                                    __atof@p 008F                                      __atoi@p 0029  
                    lmp91000_get_status@preg 001D                   modbusBuildExceptionErr@err 0026  
                 modbusBuildException@status 0019                          _ewmaFilter_get$9454 0084  
                                    _g_pRegs 00E6                                      __itoa@n 002B  
                                    __itoa@p 0029                         __size_of_putUSBUSART 001E  
                                    __pcinit A72A                 __size_of_max7323_set_lmp_off 0028  
                         getsUSBUSART@buffer 0018                modbusBuildRequest0102@address 0020  
                            __size_of_memcpy 0044                 __end_of_sensMeasure_gas_read 9554  
                            __size_of_memset 002C                              __size_of_fround 026C  
                            __size_of_isleap 0054                    __end_of_configDescriptor1 22C7  
                                    __ramtop 0F00                              __size_of_mktime 020A  
                                    _g_slave 0248                               _g_modbus_value 02DA  
                                    __ptext0 D806                                      __ptext1 BCBE  
                                    __ptext2 459E                                      __ptext3 D53E  
                                    __ptext4 D576                                      __ptext5 D0C4  
                                    __ptext6 D298                                      __ptext7 D4CA  
                                    __ptext8 BA72                                      __ptext9 DA04  
                                    _inPipes 0043                               _g_modbus_queue 0460  
                             ??_ads1114_read 001F                                   _param_copy CAB6  
                            ?_ewmaFilter_get 007D                  _USBDeferOUTDataStagePackets 00ED  
                           check_param@param 000F                                    _T0CONbits 000FD5  
                           ?_sensor_ADC_read 0025                        ??_modbusParseResponse 002D  
                                    __strclr D656                                      __strcpy C698  
                                    __strlen D190                       modbus_relay_ouput@data 002B  
            __end_of_modbusParseResponse0102 6974                                  ?__div_to_l_ 000F  
                                    _dpowers 22FB                                split_param@ch 001C  
              modbusBuildRequest0102@builder 0025                modbusBuildException@exception 001F  
                      ads1114_SetUp@dataRate 0021                                 ??_USBSuspend 0023  
                              ??_check_param 000F                                      _isdigit DC62  
                                 ??___xxtofl 0013                              modbusCRC@length 0011  
                   __size_of_modbusMasterEnd 0056                                   ??__isdigit 0013  
                           ___awmod@dividend 000F                       ?_modbusParseResponse05 001D  
                     modbus_relay_status@err 002E                                   ??_checksum 0013  
                           ___aldiv@dividend 000F                        ??_modbus_get_baudrate 0013  
                          __end_of_rcallback C3E4                            ??_gasSensor_calib 0040  
                              mktime@timeptr 0036                   flash_readBytes@flash_array 0013  
                      __end_of_eeprom_update CE72                         __size_of_sensor_init 003A  
                             _usart_rx_ready DEBC      modbusBuildRequest01@mbcoils$F4614@count 002C  
    modbusBuildRequest01@mbcoils$F4614@index 002A                        modbus_set_swap@isSwap 000F  
                          __end_of_modbusCRC C4CC                       __end_of_WDT_initialize DEFA  
            lmp91000_set_GainRLoad@user_gain 001A                                 _app_usb_init DC80  
                             _usart_tx_empty DE8C                                 _app_usb_task CA58  
                         __end_of_USB_CD_Ptr 2096                   __size_of_SYSTEM_Initialize 0054  
                                    _sprintf 3E10              __size_of_USBCtrlTrfSetupHandler 0092  
                  lmp91000_set_Reference@reg 001F                               __pintcode_body D79C  
                 __size_of_modbusMatchEndian 0016                                  ?_rs485_init 0028  
                       end_of_initialization A80A                                 _getsUSBUSART BD4E  
               __end_of_modbusParseException C924                      __end_of_sensor_lmp_init BB06  
                         __end_of_USB_SD_Ptr 208F                            _eeprom_update_all A338  
                flash_writeBytes@flash_array 0013                    __size_of_modbusMasterInit 0112  
                                    memcpy@d 0016                                      memcpy@n 0013  
                                    memcpy@s 0018                        ??_nvm_write_flash_all 0021  
                        _pBDTEntryEP0OutNext 0049               __end_of_compensate_temperature 6C5C  
                                    memset@c 0017                                      memset@n 0019  
                                    memset@p 001B               modbusBuildRequest0102@function 001F  
                             ?_write_command 0016                                __Lmediumconst 2008  
                 sensor_set_gas_mode@channel 0029                                      int_func D79C  
                            _USB1msTickCount 0204                      __end_of_nvm_flash_check CC7C  
            _dummy_encapsulated_cmd_response 02F4               __end_of_sensor_temp_fahrenheit C8BC  
                         ?_eeprom_update_all 0001                     ?_USBStdFeatureReqHandler 0001  
                   __size_of_modbusSlaveInit 0154                                   ?_I2C_Start 0001  
                                 ?_I2C_Write 0001                            __end_of_nvm_clear DE44  
                __size_of_modbus_check_event 008A               ??_modbus_master_response_parse 0030  
                      ??_sensor_set_gas_mode 0029                           rs485_readByte@byte 0002  
                      ??_USBStdSetCfgHandler 0023                              ___lldiv@divisor 0013  
           __size_of_Kalman_setEstimateError 001E                     ??_modbusBuildRequest0102 0025  
                                 ?_CDCInitEP 0001                 __size_of_modbus_relay_status 003E  
                            ___lldiv@counter 0017                          i1buffer_en_queue@ch 0003  
   modbusBuildRequest01@mbcoils$F4614@status 0027                          _update_command$4179 00A8  
                          ??_buffer_de_queue 0011                           __end_of_USBSuspend D926  
                 lmp91000_set_Reference@IntZ 0019                     ?_sensMeasure_sensor_init 0001  
          modbusParseRequest0304@frameLength 003C                      _USBCtrlEPAllowDataStage B944  
               Kalman_setEstimateError@est_e 0011                                   ??_nvm_init 00A4  
                           ___aldiv@quotient 0019                 __end_of_modbusBuildException AC62  
                 lmp91000_set_Reference@bias 001B                    ewmaFilter_get@sensitivity 0083  
                            _g_large_counter 00E0                                      postdec1 000FE5  
                                    postdec2 000FDD                   lmp91000_set_Reference@buff 001D  
                           _lmp91000_isReady DD88                          ??_eeprom_update_all 002F  
                    i2c_writeBytes_to@wraddr 0019                                      postinc0 000FEE  
                                    postinc1 000FE6                                      postinc2 000FDE  
                 lmp91000_set_Reference@sign 001A                    gasSensor_temperature@temp 0081  
                   _USBCtrlEPServiceComplete A818                               __tdiv_to_l_@f1 000F  
                             __tdiv_to_l_@f2 0013                            ??_buffer_en_queue 0012  
                   __end_of_eeprom_writePage C98C                modbusBuildExceptionErr@status 0021  
                              ??__tdiv_to_l_ 0017                          build_time@timestamp 0068  
                 _USBStatusStageEnabledFlag1 00F0                   _USBStatusStageEnabledFlag2 00EF  
                           ads1114_SetUp@pga 0020                                _parse_command 606C  
                         USBEnableEndpoint@p 0018                                    _PORTAbits 000F80  
                               _kalmanFilter 0285                                 __strclr@dest 000F  
            modbusParseResponse@functionExec 0030                      _nvm_sensor_type_channel 7EB6  
            __size_of_modbusParseRequest0304 0454                       __end_of_usart_rx_ready DEC8  
                     modbusParseResponse@err 0033                                  ___fladd@grs 0037  
                          ?_rs485_writeBytes 0014                         __size_of_split_param 00DC  
                       i2c_readBytes@address 001A                       __end_of_usart_tx_empty DE98  
                               __strcpy@dest 000F                               _months_to_days D730  
                           ___lbmod@dividend 0010                                 rcallback@ctx 0018  
                              ___xxtofl@sign 0017                    ??_USBDisableWithLongDelay 0011  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                    lmp91000_set_GainRLoad@reg 001D  
                               param_copy@ch 0015                           _i2c_readBytes_from D68E  
                          ??_lmp91000_unlock 0019                           _BothEP0OutUOWNsSet 00F2  
                         ??_rs485_writeBytes 0017                              ?_WDT_initialize 0001  
                          __size_of_I2C_Read 002C                 __end_of_modbusBuildRequest05 9F04  
                                ___fldiv@grs 0022                                  ___fldiv@rem 001B  
                          __size_of_I2C_Stop 0010                        modbusMasterEnd@status 001D  
                 __size_ofi1_buffer_en_queue 004E                    __end_of_eeprom_update_all A43E  
                  USBConfigureEndpoint@EPNum 0014                        rs485_writeBytes@wrptr 0014  
                                ?_build_time 0064                   ?_USBCtrlEPAllowStatusStage 0001  
            Kalman_setMeasurementError@mea_e 0011                          check_atcommand@chno 0021  
                        __end_of_check_param D8CA          USER_USB_CALLBACK_EVENT_HANDLER@size 001F  
                                  _USTATcopy 0050                                  ___lbmod@rem 0012  
                        ?_i2c_readBytes_from 001D                                  ___flmul@grs 0073  
            __size_of_Kalman_setProcessNoise 001E                 __end_of_USBTransferOnePacket A636  
                    ?_modbus_check_threshold 009D                                ??_flash_clear 0017  
                                 _usart_getc DDE4                                   _usart_init C2F6  
                       update_command@status 00A4                        modbus_slave_task@byte 0042  
                                 _usart_putc DE20                          __size_of__div_to_l_ 00F4  
                           ?_nvm_clear_flash 0001                     __size_of_modbus_set_swap 0008  
                  modbusParseResponse@crcreq 0036                                ??_buffer_init 0011  
                          putUSBUSART@length 0015                 _modbusParseResponse0102$2350 0027  
                              __itoa@shifter 0025                    modbusParseResponse@parser 0038  
                  __size_of_modbusSwapEndian 000E                        __end_of_years_to_days B8A0  
                    eeprom_update@wait_count 0033                 __end_of_nvm_write_eeprom_all 9CBA  
                     _USBCtrlTrfSetupHandler BC2C                     __size_of_rs485_read_task 0064  
                  modbusParseResponse@status 002B                             ?_sensor_adc_init 0026  
              __size_of_display_sensor_value 03DC                 __size_of_modbus_set_register 000A  
                __end_of_nvm_read_eeprom_all DC04                             ??_ADCto_uVoltage 0040  
               __size_of_lmp91000_get_status 0044                               __end_of___flge AD32  
                             __end_of___fleq BEEE                        __end_of_USBDeviceInit 9B88  
      __end_of_USBIncrement1msInternalTimers DC26       __size_of_USBIncrement1msInternalTimers 0022  
              _USBIncrement1msInternalTimers DC04                               __end_of___lmul CD28  
                             __end_of___wmul DBBE                       __size_of_ads1114_SetUp 0040  
                             ?_parse_command 0025                          __size_of_rs485_init 001E  
                       ??_i2c_readBytes_from 0022                        _gasSensor_temperature B1E2  
                               modbusCRC@crc 0017                               __end_of_memcpy D190  
                                ?_param_copy 0010                               __end_of_memset D9D8  
                             __end_of_fround 7C54                               __end_of_isleap CDD0  
                     __end_of_months_to_days D766                               __end_of_mktime 898A  
                             _g_sens_measure 00CF                            _USBBusIsSuspended 00F4  
                   ??_lmp91000_set_GainRLoad 001A                              ymd_to_scalar@mo 0028  
                            ymd_to_scalar@yr 0026                   __end_of_ResetDeviceCleanly DEB0  
                            ?_usart_rx_ready 0001                    __size_of_get_product_desc 000A  
                     __size_of_clear_command 006C               modbusParseRequest@functionExec 0069  
                        start_initialization A72A                              ?_usart_tx_empty 0001  
                    ?_USBStdGetStatusHandler 0001                           _nvm_read_flash_all DB72  
                    __size_of_atcommand_init 000C                USBCtrlTrfRxService@byteToRead 0010  
                    __size_of_atcommand_task 0128                          __end_of__tdiv_to_l_ A53C  
                                  _InitTimer DC9E                    __size_of_usart_writeBytes 0028  
                       _gasSensor_calib$9450 00AD                         _gasSensor_calib$9451 00B1  
                       _gasSensor_calib$9452 00B5                 __end_of_buffer_de_queue_bool C27E  
                __size_of_modbus_get_timeout 001E                                  _cdc_data_rx 03A3  
                                _cdc_data_tx 0543                 __end_of_USBConfigureEndpoint BB9A  
                 __end_of_FlashSignatureWord 2008                        __end_of_i2c_readBytes C204  
            __end_of_USBStdFeatureReqHandler 7EB6                              ??_write_command 0018  
                          ??_modbusMasterEnd 001F               __end_of_modbus_check_threshold D0C4  
                           ?_sensor_lmp_init 0001                          ?_nvm_read_flash_all 001F  
          __end_of_USBCtrlEPAllowStatusStage B11E                          max7323_set_lmp_on@i 001E  
                         parse_command@F6617 0312                           parse_command@F6619 0440  
                   __end_of_USBCtrlEPService BA72                   atcommand_compare@channelno 0017  
                   __end_of_sensMeasure_init 8D24                            ?_max7323_set_gpio 0019  
                   __end_of_sensMeasure_task 4C0C                      i2c_readBytes_from@rdptr 001F  
                       _sensMeasure_gas_read 940C                   lmp91000_set_GainRLoad@buff 001B  
                            ___llmod@divisor 0013                             ?_nvm_flash_check 0001  
                   __end_of_gasSensor_filter 834A                       _modbusParseRequest0304 5134  
                                ??_I2C_Start 000F                              ___llmod@counter 0017  
                        usart_writeBytes@len 0012                         __end_of_ads1114_read C2F6  
                                ??_I2C_Write 000F                            __size_of_i2c_init 002C  
                         ??_max7323_set_gpio 001A                    ??_USBCtrlEPAllowDataStage 0010  
                          _modbus_fire_event DDB8           __end_of_Kalman_setMeasurementError DD88  
                 _Kalman_setMeasurementError DD6E                              _ads1114_address 01FB  
                                ??_CDCInitEP 001B                               USBDeviceInit@i 001D  
            __size_of_modbusBuildRequest0102 0172                       _pBDTEntryEP0OutCurrent 004B  
                         usart_init@baudrate 001C                      USBTransferOnePacket@dir 000F  
                    USBTransferOnePacket@len 0012                           ?_modbus_fire_event 0001  
                                   ??___flge 0099                                     ??___fleq 0099  
                 modbusBuildRequest05@status 001D                                     ??___lmul 0017  
                         parse_command@param 0060                                     ??___wmul 0013  
                        __end_of_flash_clear C7E6                            ??_modbusSlaveInit 001F  
                        _USBStdGetDscHandler A124                             ??_i2c_writeBytes 0018  
                                __pdataBANK1 01F5                                  __pdataBANK4 04A3  
                                __pdataBANK5 05C3                                  __pdataBANK7 0700  
                       ??_nvm_read_flash_all 0021                                     ??_memcpy 0015  
                                   ??_memset 001B                                     ??_fround 0040  
                        __size_of_build_time 0528                                     ??_isleap 0016  
                  ??_nvm_sensor_type_channel 0018                         _modbusParseException C8BC  
                                   ??_mktime 003A                          __end_of_buffer_init D954  
                     _Kalman_setProcessNoise DCBC                     ??_lmp91000_set_Reference 001C  
                        ??_modbus_fire_event 0030                          I2C_Read@I2CReadData 0010  
                              sprintf@tmpval 00B8                      ??_sensMeasure_temp_read 0040  
                   ??_ResetBootloaderCleanly 0011                 __end_of_sensor_set_temp_mode D576  
                            ?_months_to_days 001C                                    ___fladd@a 002C  
                                  ___fladd@b 0028                       _USBActiveConfiguration 00FD  
                                 fround@prec 0089               __end_of_USBStdGetStatusHandler B754  
               modbusParseResponse0102@count 0029                   compensate_temperature@temp 009D  
              sensMeasure_gas_read@cmp_value 03E3                     __end_of_Board_initialize CF5A  
                                  ___fldiv@a 0013                                    ___fldiv@b 000F  
          modbusBuildException@requestParser 001D                                    ___flmul@a 003C  
                                  ___flmul@b 0038                                  __pbssCOMRAM 0043  
                         i2c_readBytes@rdptr 0011                                  _check_param D89C  
                                  ___flsub@a 0064                                    ___flsub@b 0060  
                                __isdigit@ch 0013                                __pcstackBANK0 0060  
                              __pcstackBANK1 01FD                                __pcstackBANK2 02FC  
                              __pcstackBANK3 03E3                 __size_of_USBCtrlTrfInHandler 00C4  
                                 ?_InitTimer 0001                              _flash_readBytes CBCA  
                                _g_eeprmTemp 0327                            __size_of___xxtofl 0140  
                                 modbusCRC@i 0014                                   modbusCRC@j 0016  
                          __size_of__isdigit 0032                         ?_USBStdGetDscHandler 0001  
                          __size_of_checksum 0074                   __size_of_eeprom_update_all 0106  
                               _isdigit$8830 0010                                  _g_atcommand 0600  
                    nvm_read_flash_all@flash 001F                         _modbusBuildException AB92  
                                  __atof@cnt 0087                            max7323_set_gpio@b 001B  
                                  __atof@ret 0089                        __end_of_i2c_writeData D398  
                                  __atof@str 007D                                    __atoi@ret 0025  
                   __end_of_flash_writeBytes A9E4                     __size_of_check_atcommand 0088  
                                  __atoi@str 001B                     ?_modbusBuildExceptionErr 0021  
                              _ads1114_SetUp D298                   flash_readBytes@tblptr_save 001B  
                           _modbusMasterInit 9F04                          _max7323_set_lmp_off DAD6  
                 modbusParseResponse@crcresp 0034                   __end_of_USBWakeFromSuspend D61E  
                      ?_sensMeasure_gas_read 0001                                    __ftoa@len 00C9  
                                sprintf@ccnt 00AE                       gasSensor_filter@retval 00A1  
                                sprintf@flag 00B0                                    __ftoa@num 00C3  
                                sprintf@eexp 00B6                                    __ftoa@str 00C7  
                  __end_of_modbus_fire_event DDCE                                  sprintf@fval 00BE  
             __size_of_Kalman_updateEstimate 02CC                                  sprintf@prec 00BC  
                            _USBStallHandler D214                __end_of_Kalman_updateEstimate 720E  
                eeprom_update_all@wait_count 0031                                 _pBDTEntryOut 0138  
                    _Kalman_setEstimateError DCDA                   __end_of_USBCheckCDCRequest B944  
                     sensor_ADC_read@channel 0027                                  ?_usart_getc 0001  
                   modbusBuildException@code 001C                                    __itoa@len 0023  
                                  __itoa@num 001D                                  ?_usart_init 001C  
                        __size_of_param_copy 005C                                    __itoa@str 0021  
                              _clear_command C7E6                                  ?_usart_putc 0001  
              gasSensor_calib@CalibrationGas 00B9                    __size_of_ACCESS_SourceGet 000C  
                  __size_of_ACCESS_SourceSet 0038                           _modbusParseRequest 720E  
                           ___lwdiv@dividend 0015                       modbus_set_register@reg 000F  
                                usart_getc@c 0001                  __size_of_modbus_master_task 013E  
                              ??_modbus_init 002C                                  I2C_Read@ack 000F  
            modbusBuildExceptionErr@function 0023                     eeprom_writePage@mem_addr 001F  
                              ??_modbus_task 0043                                  usart_init@b 0024  
                                  __pintcode 0008                         flash_writeBytes@flag 001A  
                     sensor_ADC_read@raw_adc 0025                                __pmediumconst 2008  
                                   ?___aldiv 000F                                     ?___almod 000F  
                                   ?___fladd 0028                            build_response@len 03F1  
                           ??_ewmaFilter_get 0040                              ??_parse_command 0029  
                                   ?___fldiv 000F                                     ?___awdiv 0015  
                                  __ptext100 D89C                                    __ptext101 BEEE  
                                   ?___lbdiv 0013                                    __ptext110 C698  
                                  __ptext102 B4B4                                     ?___flneg 000F  
                                  __ptext111 D1D2                                    __ptext103 23A0  
                                  __ptext200 DD16                                    __ptext120 5D3E  
                                  __ptext112 3E10                                    __ptext104 DBBE  
                                  __ptext201 D766                                    __ptext121 A43E  
                                  __ptext113 5964                                    __ptext105 DC44  
                                  __ptext210 DEDC                                    __ptext202 9166  
                                  __ptext130 BE64                                    __ptext122 A636  
                                  __ptext114 C708                                    __ptext106 D190  
                                  __ptext203 9F04                                    __ptext131 92BA  
                                  __ptext123 9696                                    __ptext115 BFFC  
                                  __ptext107 DEEE                                    __ptext212 CEC0  
                                  __ptext204 D9AC                                    __ptext140 8E96  
                                  __ptext132 B35E                                    __ptext124 C98C  
                                  __ptext116 DC62                                    __ptext108 5588  
                                  __ptext213 DD34                                    __ptext205 D9D8  
                                  __ptext141 D5E6                                    __ptext133 AE02  
                                  __ptext125 B2A4                                    __ptext117 79E8  
                                  __ptext109 C852                                    __ptext214 DEBC  
                                  __ptext206 D926                                    __ptext150 B944  
                                  __ptext142 D8F8                                    __ptext134 C540  
                                  __ptext126 D036                                    __ptext118 DAAC  
                                  __ptext215 DDE4                                    __ptext207 DEB0  
                                  __ptext151 AF96                                    __ptext143 D214  
                                  __ptext135 CA58                                    __ptext127 637E  
                                  __ptext119 D504                                    __ptext208 C7E6  
                                  __ptext160 C9F2                                    __ptext152 AAC0  
                                  __ptext144 DC04                                    __ptext136 BD4E  
                                  __ptext128 D8CA                                    __ptext209 D656  
                                  __ptext161 A53C                                    __ptext153 B6AE  
                                  __ptext145 9A50                                    __ptext137 CE72  
                                  __ptext129 AC62                                    __ptext170 CF0E  
                                  __ptext162 D61E                                    __ptext154 A124  
                                  __ptext146 B9DC                                    __ptext138 9914  
                                  __ptext171 8B88                                    __ptext163 BB06  
                                  __ptext155 7C54                                    __ptext147 D14C  
                                  __ptext139 DEF6                                    __ptext180 DB72  
                                  __ptext172 B55E                                    __ptext164 CB12  
                                  __ptext156 C5B4                                    __ptext148 BC2C  
                                  __ptext181 CBCA                                    __ptext173 DCBC  
                                  __ptext165 A22E                                    __ptext157 DC80  
                                  __ptext149 A818                                    __ptext190 DB98  
                                  __ptext182 CC24                                    __ptext174 DD6E  
                                  __ptext166 B05A                                    __ptext158 B8A0  
                                  __ptext191 CDD0                                    __ptext183 CB6E  
                                  __ptext175 DCDA                                    __ptext167 B11E  
                                  __ptext159 CD28                                    __ptext192 CD7C  
                                  __ptext184 4C0C                                    __ptext176 C080  
                                  __ptext168 AD32                                    __ptext193 D256  
                                  __ptext185 8780                                    __ptext177 CFA4  
                                  __ptext169 DC9E                                    __ptext194 DEC8  
                                  __ptext186 B754                                    __ptext178 A900  
                                  __ptext195 B606                                    __ptext187 B7FA  
                                  __ptext179 C778                                     ?___awmod 000F  
                                  __ptext196 DCF8                                    __ptext188 CCD2  
                                  __ptext197 C2F6                                    __ptext189 D730  
                                  __ptext198 C104                                    __ptext199 DED2  
                                   ?___lbmod 000F                                     ?___flmul 0038  
                                   ?___flsub 0060                                     ?___fltol 007D  
                                usart_putc@c 000F                         _modbusBuildRequest05 9DE2  
                                   ?___lldiv 000F                              _gasSensor_calib 74C4  
                                   ?___llmod 000F                                    __npowers_ 203D  
                                  _g_timeout 208F                                     ?___lwdiv 0015  
                                   ?___lwmod 000F                                ??_FSR_set_LSB 0013  
                    display_sensor_value@len 03E8                          ?_modbusParseRequest 0060  
                     ?_gasSensor_temperature 007D                        ?_modbusParseException 000F  
                          __size_of_nvm_init 0084                            ??_modbus_set_swap 000F  
                       ?_max7323_set_lmp_off 0001                                  __pintcodelo 0018  
                        _build_response$4243 03E9                             ___almod@dividend 000F  
                    ??_modbusParseResponse05 0023                                  __tdiv_to_l_ A43E  
                                  __strclr@n 0011                                    __strcpy@i 0015  
                                   ?__strclr 000F                                     ?__strcpy 000F  
                                   ?__strlen 000F                            ??_rs485_read_task 0007  
                               ??__div_to_l_ 0017                         _USBTransferOnePacket A53C  
                     flash_writeBytes@retval 0018                                     _BAUDCON1 000F7E  
                               checksum@data 000F                                     ?_isdigit 0001  
                                   _I2C_Read D980              __size_of_lmp91000_set_GainRLoad 0032  
                                   _I2C_Stop DE44                       _modbusBuildRequest0102 8D24  
                        _modbus_relay_status D414                            _modbus_slave_task 9554  
                      __end_of_usedtime_task BD4E                 __end_of_USBCtrlTrfOutHandler CB6E  
                   sensMeasure_task@ret_4991 00CD                        ??_USBStdGetDscHandler 000F  
                             __size_of__atof 01FE                               __size_of__atoi 010E  
                                _ep_data_out 0148                               __size_of__ftoa 0042  
                           ___lwdiv@quotient 001A                               __size_of__itoa 0152  
                      ?_modbusBuildException 0019                     __end_of_lmp91000_isReady DDA0  
                                   ?_sprintf 009D                  __size_of_max7323_set_lmp_on 002A  
                         ?_modbus_slave_task 0001                 __size_of_USBCtrlTrfRxService 010A  
                       _nvm_write_eeprom_all 9B88                               __size_of_scale 03DA  
                             ?_ads1114_SetUp 001F                  sensMeasure_gas_read@channel 03ED  
              USBConfigureEndpoint@direction 000F                                 ??_rs485_init 002C  
                                  _rcallback C36E                         ??_modbusParseRequest 0062  
                            _buffer_de_queue C540              modbusParseRequest@functionMatch 0068  
                                  checksum@i 0014                                    checksum@j 0016  
                      modbus_relay_ouput@idx 0029                        modbus_relay_ouput@err 002A  
            __end_of_nvm_sensor_type_channel 8110                         flash_clear@startaddr 000F  
                   ?_modbusParseResponse0102 001D                                    _modbusCRC C458  
                       ads1114_SetUp@channel 0022                        __end_of_ymd_to_scalar B7FA  
                                _g_usb_queue 0500                       modbus_check_event@type 001B  
                     i1buffer_en_queue@queue 0001                              ___aldiv@divisor 0013  
               __size_of_USBCtrlTrfTxService 00D0              modbus_master_response_parse@idx 0032  
                            ___aldiv@counter 0017                               ___wmul@product 0013  
                                   _LATAbits 000F89                                     _LATBbits 000F8A  
               modbusBuildRequest0102@status 001D                               ?_clear_command 0001  
                 modbus_check_threshold@type 00A5                              _buffer_en_queue CE72  
                 flash_writeBytes@flash_addr 001B                     flash_readBytes@num_bytes 0015  
                 ??_USBCtrlEPServiceComplete 0010                          ??_modbus_slave_task 0042  
                                   _IPR1bits 000F9F                                  _flash_clear C778  
                                   _PIE1bits 000F9D                                     _PIE2bits 000FA0  
                             i2c_readBytes@i 001C                      __size_of_modbusSlaveEnd 002A  
                       ?_modbus_relay_status 0001                           sensor_init@channel 0023  
                  Kalman_updateEstimate@pObj 007D                  __size_of_modbus_relay_ouput 0086  
                                   _PIR1bits 000F9E                           __end_of__div_to_l_ A72A  
                                   _PIR2bits 000FA1                                  _buffer_init D926  
                           _modbusSwapEndian DE64                                     _RCONbits 000FD0  
                              ??_putUSBUSART 0016                                     _UEP0bits 000F26  
                 nvm_read_eeprom_all@channel 0028                        modbusParseRequest@crc 0066  
                      ?_modbusBuildRequest05 001D                        modbusParseRequest@err 006A  
                                  _nvm_clear DE32                   _USBDeferINDataStagePackets 00EE  
                   flash_readBytes@startaddr 000F                                     _SSP1CON1 000FC6  
                                   _SSP1CON2 000FC5                  __end_of_modbusParseResponse 6F42  
                __size_of_USBCheckStdRequest 00C4           modbusParseResponse05@requestParser 0021  
                       _buffer_de_queue_bool C204                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F65                   sensor_temp_fahrenheit@temp 007D  
                      ??_max7323_set_lmp_off 001C                              _lmp91000_unlock DD52  
                       _USBConfigureEndpoint BB06                          ads1114_read@channel 0024  
                       _g_relay_status_count 00E2                  __end_of_modbus_get_baudrate D79C  
                          ?_eeprom_writePage 001F                           __end_of_g_baudrate 2089  
           __size_of_USBStdFeatureReqHandler 0262                           __end_of_rs485_init DD16  
                        __end_of_modbus_init B6AE                          __end_of_modbus_task D036  
            __size_of_lmp91000_set_Reference 003E                      __end_of_flash_readBytes CC24  
                          ___wmul@multiplier 000F                        ?_USBTransferOnePacket 000F  
                           ??_WDT_initialize 000F                                ??_sensor_init 0022  
            __size_of_ResetBootloaderCleanly 000E                           ??_eeprom_writePage 0023  
                nvm_write_eeprom_all@channel 002E                    __end_of_modbus_slave_task 9696  
                          _SYS_InterruptHigh 0008                             _get_product_desc DEC8  
                              ?_CDCTxService 0001                          ads1114_read@raw_adc 001D  
                              ?_DelayRoutine 000F                               _atcommand_init DEB0  
                        __size_of_usart_getc 0016                                 _RemoteWakeup 00F5  
                        __end_of_FSR_set_LSB BC2C                               _atcommand_task 9CBA  
                        __size_of_usart_init 0078             __size_of_sensMeasure_sensor_init 00A8  
                             _atcommand_type 2096                          __size_of_usart_putc 0012  
                    __size_of_rs485_readByte 001E                           ?_SYS_InterruptHigh 0001  
                                ??_InitTimer 000F                  __end_of_nvm_write_flash_all CFEE  
                           _usart_writeBytes DAFE                      __end_of_USBStallHandler D256  
                      ?_nvm_write_eeprom_all 0001                          _modbus_set_register DED2  
                          ___lmul@multiplier 000F                                  _INTCON2bits 000FF1  
                   __size_of_sensor_ADC_read 0012                                 ??_build_time 0040  
                                  copy_data0 A73E                                    copy_data1 A75E  
                                  copy_data2 A77E                                    copy_data3 A79E  
                        _lmp91000_get_status D108                                   ?_rcallback 0013  
                      __size_of_ads1114_read 0078                               checksum@length 0011  
                ??_USBCtrlEPAllowStatusStage 000F                     nvm_write_eeprom_all@left 002B  
                     ??_sensMeasure_gas_read 0041                  __end_of_sensor_set_gas_mode D5AE  
                  ??_Kalman_setEstimateError 0015                  __end_of_USBStdSetCfgHandler AB92  
                   nvm_write_eeprom_all@size 002D                                   ?_modbusCRC 000F  
                             _eeprom_address 01F9                            write_command@buff 0016  
                                   _i2c_init D9D8                          ??_SYS_InterruptHigh 0001  
                 __end_of_modbus_check_event BE64                          ADCto_uVoltage@uVolt 0081  
                 __size_of_modbus_fire_event 0016                         buffer_en_queue@queue 000F  
                         __end_of_device_dsc 2335                                   _EECON1bits 000FA6  
                  __size_of_rs485_writeBytes 0036                       _lmp91000_set_GainRLoad D838  
                       _sensor_set_temp_mode D53E                      __end_of_gasSensor_calib 7760  
                      ??_modbus_relay_status 002E                      ?_USBCtrlTrfSetupHandler 0001  
                          ??_check_atcommand 0022                      USBStdGetStatusHandler@p 0010  
                                   __Hrparam 0000                     nvm_write_flash_all@flash 001F  
                          _g_relay_sec_count 00E4                                    memcpy@tmp 0015  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0015  
                          parse_command@chno 0081                            parse_command@buff 0025  
                        i2c_writeData@isStop 0013                                     _SetupPkt 000430  
                     __size_of_eeprom_update 0050                                   ?_nvm_clear 0001  
                      ?_buffer_de_queue_bool 000F                         ?_modbus_set_register 000F  
                              _g_retry_count 00F8                       ??_modbusParseException 0013  
                       ?_lmp91000_get_status 001D                        ?_USBConfigureEndpoint 000F  
                           __size_of___aldiv 00CC                             __size_of___almod 00AC  
                           __size_of___fladd 030C                             __size_of___fldiv 0288  
                           __size_of___awdiv 0084                             ??_usart_rx_ready 0001  
                           __size_of___lbdiv 003A                             __size_of___flneg 002E  
                           __size_of___awmod 0070                             __size_of___lbmod 002A  
                           __size_of___flmul 032E                             __size_of___flsub 0048  
                           __size_of___fltol 00BA                             __size_of___lldiv 0082  
                          split_param@params 0015                             __size_of___llmod 0066  
                           __size_of___lwdiv 0052                             __size_of___lwmod 0042  
                           ??_usart_tx_empty 000F                     lmp91000_get_status@rBuff 001F  
                              ??_split_param 0019                           __end_of_build_time 5134  
                  __end_of_SYS_InterruptHigh D7D2                      __size_of_update_command 0C7E  
                   lmp91000_get_status@wBuff 001E                                  _fround$9457 0085  
                                _fround$9458 0081                                 ??_param_copy 0013  
                     __end_of_atcommand_init DEBC                          __end_of_putUSBUSART DC62  
                     __end_of_atcommand_task 9DE2                                  _line_coding 01EC  
                modbusBuildExceptionErr@code 0024                       __end_of_atcommand_type 2284  
                             ??_CDCTxService 0018                              _modbusMasterEnd CC7C  
                                _isleap$8855 0017                      __size_of_build_response 0DF2  
                             ??_DelayRoutine 0011                                 _ads1114_read C27E  
                           __size_of__strclr 0038                             __size_of__strcpy 0070  
                           __size_of__strlen 0042                                   sprintf@val 00B2  
                    __end_of_buffer_de_queue C5B4                                     ___xxtofl 9696  
                                   __isdigit D86A                                     _checksum C4CC  
                  max7323_set_lmp_on@channel 001C                             __size_of_isdigit 001E  
                    __size_of_USBDeviceTasks 016E                       ??_modbusBuildException 001D  
                                   _g_master 02B5                              ___lwdiv@divisor 0017  
                            ??_ads1114_SetUp 0022                                     _g_modbus 0124  
                            ___lwdiv@counter 0019                 __end_of_display_sensor_value 5964  
                                   __ptext10 DAD6                                     __ptext11 DB26  
                                   __ptext20 940C                                     __ptext12 DD52  
                                   __ptext21 DE0E                                     __ptext13 D398  
                                   __ptext30 DBE2                                     __ptext22 C27E  
                                   __ptext14 D954                                     __ptext31 DA2E  
                                   __ptext23 74C4                                     __ptext15 D838  
                                   __ptext40 720E                                     __ptext32 D68E  
                                   __ptext24 8110                                     __ptext16 DD88  
                                   __ptext41 5134                                     __ptext33 C186  
                                   __ptext25 6974                                     __ptext17 D108  
                                   __ptext50 C8BC                                     __ptext42 C36E  
                                   __ptext34 D980                                     __ptext26 6F42  
                                   __ptext18 B40A                                     __ptext51 CC7C  
                                   __ptext43 D2D8                                     __ptext35 9004  
                                   __ptext27 D3D6                                     __ptext19 B1E2  
                                   __ptext60 BF76                                     __ptext52 C204  
                                   __ptext44 AB92                                     __ptext36 DE80  
                                   __ptext28 C3E4                                     __ptext61 D6C4  
                                   __ptext53 DA82                                     __ptext45 97D6  
                                   __ptext37 CFEE                                     __ptext29 BB9A  
                                   __ptext70 BDDA                                     __ptext62 DAFE  
                                   __ptext54 D414                                     __ptext46 AECE  
                                   __ptext38 9554                                     __ptext71 9CBA  
                                   __ptext63 DE20                                     __ptext55 DB4C  
                                   __ptext47 6C5C                                     __ptext39 DA58  
                                   __ptext80 C924                                     __ptext72 3192  
                                   __ptext64 DE8C                                     __ptext56 8D24  
                                   __ptext48 834A                                     __ptext81 D318  
                                   __ptext73 A9E4                                     __ptext65 9DE2  
                                   __ptext57 CF5A                                     __ptext49 668A  
                                   __ptext90 D86A                                     __ptext82 D6FA  
                                   __ptext74 7EB6                                     __ptext66 DDCE  
                                   __ptext58 C628                                     __ptext91 A016  
                                   __ptext83 D358                                     __ptext75 DE32  
                                   __ptext67 DE64                                     __ptext59 DDB8  
                                   __ptext92 898A                                     __ptext84 DC26  
                                   __ptext76 8568                                     __ptext68 C458  
                                   __ptext93 7760                                     __ptext85 DE44  
                                   __ptext77 A338                                     __ptext69 D07E  
                                   __ptext94 DEA4                                     __ptext86 DE54  
                                   __ptext78 CE22                                     __ptext95 DE72  
                                   __ptext87 C4CC                                     __ptext79 9B88  
                                   __ptext96 DDA0                                     __ptext88 D5AE  
                                   __ptext97 DDFA                                     __ptext89 DE98  
                                   __ptext98 606C                                     __ptext99 CAB6  
                      eeprom_writePage@wrptr 0020                                 _SSP1CON2bits 000FC5  
                    __end_of_buffer_en_queue CEC0                                     __powers_ 2009  
                        __end_of_sensor_init D504                            _i2c_writeBytes_to D318  
                            ___almod@divisor 0013                      ?_modbusParseRequest0304 0027  
                           __size_of_sprintf 078E                              ___almod@counter 0017  
                        eeprom_update@retval 0032                                  checksum@crc 0017  
                      parse_command@paramidx 008F                              ??_clear_command 0013  
                     _lmp91000_set_Reference D398                               split_param@cnt 001E  
                         ?_i2c_writeBytes_to 0019                               split_param@len 001B  
                            _modbusSlaveInit 9166                               split_param@src 0013  
                         _ResetDeviceCleanly DEA4                                __size_of_fabs 003E  
             __end_of_USBCtrlTrfSetupHandler BCBE                                __size_of_main 0032  
                     _ResetBootloaderCleanly DE72                            ?_USBCtrlEPService 0001  
                          ?_sensMeasure_init 0001                            ?_sensMeasure_task 0001  
                      ?_sensor_set_temp_mode 0001                     ewmaFilter_get@ewmaFilter 007D  
          modbusBuildExceptionErr@parseError 0025                            ?_gasSensor_filter 009D  
                           _ACCESS_SourceGet DE98                           ??_USBCtrlEPService 002A  
                           _ACCESS_SourceSet D5AE                           __end_of_param_copy CB12  
                    __end_of_lmp91000_unlock DD6E                           ??_sensMeasure_init 0015  
                         ??_sensMeasure_task 00CA                  ?_Kalman_setMeasurementError 000F  
                        _USBCtrlTrfInHandler B11E                       ??_modbusBuildRequest05 0024  
                         ??_gasSensor_filter 0040                          ??_i2c_writeBytes_to 001E  
                        ?_ResetDeviceCleanly 0001                           _FlashSignatureWord 2006  
                                _modbus_init B606                          ads1114_SetUp@wraddr 0025  
                                   isa$xinst 000000                        ??_modbus_set_register 0011  
                                _modbus_task CFEE                                     _nvm_init C080  
                                   _outPipes 0130                      ?_Kalman_setProcessNoise 000F  
                      ??_lmp91000_get_status 001E                         _USBCtrlTrfOutHandler CB12  
                                  nvm_init@i 00AC                                     int$flags 0051  
                           ??_months_to_days 001E                    _USBCtrlEPAllowStatusStage B05A  
                        gasSensor_calib@span 00C2                                 _SSP1STATbits 000FC7  
                                _FSR_set_LSB BB9A                  __p_FlashSignatureWord_const 2006  
                  __size_of_max7323_set_gpio 0026                     __end_of_modbusMasterInit A016  
                     ??_USBTransferOnePacket 0013                     __size_of_nvm_clear_flash 005C  
                          rcallback@datatype 0013                  __size_of_i2c_readBytes_from 0036  
                   ?_USBDisableWithLongDelay 0001                              ?_atcommand_init 0001  
                           ?_flash_readBytes 000F                              ?_atcommand_task 0001  
                         _ymd_to_scalar$8868 0030                           ADCto_uVoltage@gain 007F  
                  _USBDeferStatusStagePacket 004D                   __size_of_modbus_slave_task 0142  
                   CDCTxService@byte_to_send 0019               __size_of_sensMeasure_temp_read 00AA  
                   __size_of_sensor_adc_init 0044                 __size_of_nvm_read_eeprom_all 0022  
                                _OSCTUNEbits 000F9B                                   _INTCONbits 000FF2  
              __end_of_sensMeasure_temp_read B4B4                                 ?_check_param 0001  
                          ?_Board_initialize 0001                   __end_of_modbus_get_timeout DD34  
                   ewmaFilter_get@inputValue 007F                 lmp91000_set_Reference@source 001C  
                        sensMeasure_task@ret 00CC                         ?_USBCtrlTrfInHandler 0001  
                                   memcpy@d1 000F                                     memcpy@s1 0011  
                   sensMeasure_gas_read@volt 03E7                       ??_nvm_write_eeprom_all 0027  
                       ??_ResetDeviceCleanly 0011                USBCtrlTrfTxService@byteToSend 000F  
                           parse_command@cmd 0082                             parse_command@idx 008E  
                  __end_of_i2c_writeBytes_to D358                             parse_command@seq 008D  
                        __end_of_split_param AAC0                     ??_compensate_temperature 0040  
                              _eeprom_update CE22                                     isdigit@c 0011  
                         ??_Board_initialize 0042                                     memset@p1 0015  
  modbusBuildRequest01@mbcoils$F4614@address 0029               __end_of_modbusParseRequest0304 5588  
                                   scale@scl 0085                             ?_USBStallHandler 0001  
                   ??_sensor_temp_fahrenheit 0040                           i2c_writeData@wrptr 0010  
                   USBStdFeatureReqHandler@p 0028                             i2c_readBytes@len 0013  
                     __size_of_years_to_days 00A6               modbusParseRequest0304@datatype 0039  
                                   isleap@yr 0014          nvm_sensor_type_channel@sensor_model 0017  
                   sensMeasure_temp_read@raw 008E                                  ??_rcallback 001A  
                 flash_writeBytes@write_byte 0019                     modbusParseRequest@parser 006D  
                                   intlevel1 0000                                     intlevel2 0000  
                                  sprintf@ap 00AD                                  ??_modbusCRC 0013  
                           __tdiv_to_l_@exp1 001F                             __tdiv_to_l_@cntr 001E  
                                  sprintf@sp 009D                            ?_flash_writeBytes 000F  
                  i2c_readBytes_from@addrlen 001E                    i2c_readBytes_from@address 0022  
                     __size_of_USBDeviceInit 0138                             __tdiv_to_l_@quot 001A  
                   modbusParseRequest@status 0060      __end_of_USER_USB_CALLBACK_EVENT_HANDLER C628  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0074            ??_USER_USB_CALLBACK_EVENT_HANDLER 0021  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 001B              _USER_USB_CALLBACK_EVENT_HANDLER C5B4  
                   i2c_writeBytes_to@addrlen 001A                     i2c_writeBytes_to@address 001E  
                           ___lwmod@dividend 000F                        __end_of_write_command DBE2  
                    modbusParseRequest0304@i 003F                    flash_readBytes@flash_addr 0017  
                           ___lldiv@dividend 000F                                     mktime@tt 0060  
                         ??_flash_writeBytes 0017         SYSTEM_Initialize@pll_startup_counter 000F  
                               ??_usart_getc 0001                                 ??_usart_init 0020  
                            _modbus_set_swap DEEE                                   _RCSTA1bits 000FAC  
                             _modbusSlaveEnd DA58                                 ??_usart_putc 000F  
                          ??_sensor_ADC_read 0027                             ?_gasSensor_calib 00A5  
                        ymd_to_scalar@scalar 0032               __end_of_Kalman_setProcessNoise DCDA  
                            _rs485_read_task 0018                     __size_of_sensor_lmp_init 0094  
                     ??_buffer_de_queue_bool 0012                      ??_gasSensor_temperature 0040  
                        modbusParseRequest@i 006B                       ??_USBConfigureEndpoint 0010  
                      ?_USBCtrlTrfOutHandler 0001                                  ??_nvm_clear 0042  
                Kalman_setEstimateError@pObj 000F             __size_of_modbusBuildExceptionErr 0040  
                                _putUSBUSART DC44                      __end_of_modbusMasterEnd CCD2  
                        _USBCtrlTrfRxService A22E                     __size_of_nvm_flash_check 0058  
                         _USBWakeFromSuspend D5E6                      _USBStdFeatureReqHandler 7C54  
                          ADCto_uVoltage@lsb 0085                  __size_of_nvm_read_flash_all 0026  
                     __size_of_i2c_readBytes 007E                      sensMeasure_gas_read@raw 03EB  
                         _USBCheckCDCRequest B8A0                          _USBCtrlTrfTxService AD32  
                            parse_command@ch 0091                   __size_of_SYS_InterruptHigh D7CA  
                               ?__tdiv_to_l_ 000F                      ?_modbusBuildRequest0102 001D  
                   sensMeasure_sensor_init@i 000F                                     sprintf@c 00C2  
                                   sprintf@f 009F               __size_of_modbusParseResponse05 021E  
                                _sensor_init D4CA                      _sensMeasure_sensor_init B55E  
              __end_of_modbusParseResponse05 8568                          ?_USBWakeFromSuspend 0001  
                           ___lldiv@quotient 0018                              ___lwmod@divisor 0011  
                      ??_USBCtrlTrfInHandler 0010                             ?_buffer_de_queue 000F  
                      _USBAlternateInterface 01F3                              ___lwmod@counter 0013  
                             _rs485_readByte DD34                            _lmp91000_set_Mode D954  
                          ads1114_SetUp@buff 0023                          ?_USBCheckCDCRequest 0001  
                          ads1114_SetUp@mode 001F                                 ___aldiv@sign 0018  
                         __end_of_usart_getc DDFA                               ?_eeprom_update 0001  
                         __end_of_usart_init C36E                      __size_of_ADCto_uVoltage 0074  
                              ?_app_usb_init 0001                           __end_of_usart_putc DE32  
                   __end_of_modbusSwapEndian DE72                      __end_of_modbusSlaveInit 92BA  
                              ?_app_usb_task 0001                                   _POWER_Init DEDC  
                        USBEnableEndpoint@ep 001A                              _endpoint_number 00F3  
                                 _WDTCONbits 000FC0                           ?_lmp91000_set_Mode 0019  
                      nvm_write_eeprom_all@i 002C                         ?_USBCtrlTrfRxService 0001  
                     sensor_adc_init@channel 0028                                nvm_init@pdesc 00AA  
                           ?_buffer_en_queue 000F                                ___fladd@signs 0034  
                           i2c_writeData@len 0012                                ?_getsUSBUSART 0018  
                       modbusSlaveEnd@status 001D                        lmp91000_set_Mode@buff 001B  
                          ?_lmp91000_isReady 0001                        lmp91000_set_Mode@mode 0019  
                   ?_USBCtrlEPAllowDataStage 0001                                 ___almod@sign 0018  
                       ?_USBCtrlTrfTxService 0001                       ??_sensor_set_temp_mode 0029  
                     __end_of_modbusSlaveEnd DA82                           ??_lmp91000_isReady 0020  
                               ___fladd@aexp 0035                                 ___fladd@bexp 0036  
               _USBStatusStageTimeoutCounter 00F1                               rcallback@index 0014  
                        ??_lmp91000_set_Mode 001A                         lmp91000_set_Mode@fet 001A  
                       lmp91000_set_Mode@reg 001D                      gasSensor_calib@baseline 00C6  
                             rcallback@value 0016                             _rs485_writeBytes D6C4  
                 __end_of_modbus_master_task 9914                                 ?_flash_clear 000F  
                      sensor_adc_init@isTemp 0026                               rcallback@query 001A  
                       ??_USBWakeFromSuspend 0023                   USBTransferOnePacket@handle 0016  
                   __end_of_get_product_desc DED2                         __end_of_CDCTxService 9A50  
                             i2c_writeData@i 0014                               __strcpy@source 0011  
                 modbusParseException@parser 0011                         __end_of_DelayRoutine DE0E  
                     gasSensor_calib@channel 00C1                        _Kalman_updateEstimate 6F42  
                       ??_USBCheckCDCRequest 000F                             ?_lmp91000_unlock 0001  
                   gasSensor_calib@gas_uVolt 00A9                                   _USB_CD_Ptr 2094  
                               ?_buffer_init 000F                       gasSensor_calib@gas_ppm 00BD  
                 modbusParseException@status 000F                               __strlen@source 000F  
                            _kalman_q_factor 0700                       gasSensor_calib@cmp_val 00A5  
           modbusParseResponse@requestParser 0031  
