

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 07 17:13:03 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK6,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	_FlashSignatureWord_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=3
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=3
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=3
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=3
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=3
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=3
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=2
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=3
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=2
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=3
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1,group=2
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   201                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   202                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   203                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   204                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   205                           	dabs	1,0x400,48,_BDT
   206                           	dabs	1,0x438,8,_CtrlTrfData
   207                           	dabs	1,0x430,8,_SetupPkt
   208  0000                     
   209                           ; Version 2.32
   210                           ; Generated 23/11/2020 GMT
   211                           ; 
   212                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   213                           ; All rights reserved.
   214                           ; 
   215                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   216                           ; 
   217                           ; Redistribution and use in source and binary forms, with or without modification, are
   218                           ; permitted provided that the following conditions are met:
   219                           ; 
   220                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   221                           ;        conditions and the following disclaimer.
   222                           ; 
   223                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   224                           ;        of conditions and the following disclaimer in the documentation and/or other
   225                           ;        materials provided with the distribution. Publication is not required when
   226                           ;        this file is used in an embedded application.
   227                           ; 
   228                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   229                           ;        software without specific prior written permission.
   230                           ; 
   231                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   232                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   233                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   234                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   235                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   236                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   237                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   238                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   239                           ; 
   240                           ; 
   241                           ; Code-generator required, PIC18F26J50 Definitions
   242                           ; 
   243                           ; SFR Addresses
   244  0000                     
   245                           	psect	idataBANK4
   246  00D11A                     __pidataBANK4:
   247                           	callstack 0
   248                           
   249                           ;initializer for _sd002
   250  00D11A  34                 	db	52
   251  00D11B  03                 	db	3
   252  00D11C  0055               	dw	85
   253  00D11E  0041               	dw	65
   254  00D120  005F               	dw	95
   255  00D122  0053               	dw	83
   256  00D124  0045               	dw	69
   257  00D126  0052               	dw	82
   258  00D128  0049               	dw	73
   259  00D12A  0045               	dw	69
   260  00D12C  0053               	dw	83
   261  00D12E  005F               	dw	95
   262  00D130  005F               	dw	95
   263  00D132  00FF               	dw	255
   264  00D134  00FF               	dw	255
   265  00D136  00FF               	dw	255
   266  00D138  00FF               	dw	255
   267  00D13A  00FF               	dw	255
   268  00D13C  00FF               	dw	255
   269  00D13E  00FF               	dw	255
   270  00D140  00FF               	dw	255
   271  00D142  0000               	dw	0
   272  00D144  00                 	db	0
   273  00D145  00                 	db	0
   274  00D146  00                 	db	0
   275  00D147  00                 	db	0
   276  00D148  00                 	db	0
   277  00D149  00                 	db	0
   278  00D14A  00                 	db	0
   279  00D14B  00                 	db	0
   280  00D14C  00                 	db	0
   281  00D14D  00                 	db	0
   282                           
   283                           	psect	idataBANK6
   284  00CF1E                     __pidataBANK6:
   285                           	callstack 0
   286                           
   287                           ;initializer for _kalman_q_factor
   288  00CF1E  70A4               	dw	28836
   289  00CF20  3F7D               	dw	16253
   290  00CF22  CCCD               	dw	52429
   291  00CF24  3F4C               	dw	16204
   292  00CF26  999A               	dw	39322
   293  00CF28  3F19               	dw	16153
   294  00CF2A  0000               	dw	0
   295  00CF2C  3F00               	dw	16128
   296  00CF2E  999A               	dw	39322
   297  00CF30  3E99               	dw	16025
   298  00CF32  CCCD               	dw	52429
   299  00CF34  3DCC               	dw	15820
   300  00CF36  CCCD               	dw	52429
   301  00CF38  3D4C               	dw	15692
   302  00CF3A  D70A               	dw	55050
   303  00CF3C  3C23               	dw	15395
   304  00CF3E  D70A               	dw	55050
   305  00CF40  3BA3               	dw	15267
   306  00CF42  126F               	dw	4719
   307  00CF44  3A83               	dw	14979
   308  00CF46  126F               	dw	4719
   309  00CF48  3A03               	dw	14851
   310  00CF4A  B717               	dw	46871
   311  00CF4C  38D1               	dw	14545
   312  00CF4E  B717               	dw	46871
   313  00CF50  3851               	dw	14417
   314  00CF52  C5AC               	dw	50604
   315  00CF54  3727               	dw	14119
   316  00CF56  37BD               	dw	14269
   317  00CF58  3586               	dw	13702
   318                           
   319                           	psect	mediumconst
   320  00208A                     __pmediumconst:
   321                           	callstack 0
   322  00208A  00                 	db	0
   323  00208B                     __powers_:
   324                           	callstack 0
   325  00208B  0000               	dw	0
   326  00208D  3F80               	dw	16256
   327  00208F  0000               	dw	0
   328  002091  4120               	dw	16672
   329  002093  0000               	dw	0
   330  002095  42C8               	dw	17096
   331  002097  0000               	dw	0
   332  002099  447A               	dw	17530
   333  00209B  4000               	dw	16384
   334  00209D  461C               	dw	17948
   335  00209F  5000               	dw	20480
   336  0020A1  47C3               	dw	18371
   337  0020A3  2400               	dw	9216
   338  0020A5  4974               	dw	18804
   339  0020A7  9680               	dw	38528
   340  0020A9  4B18               	dw	19224
   341  0020AB  BC20               	dw	48160
   342  0020AD  4CBE               	dw	19646
   343  0020AF  6B28               	dw	27432
   344  0020B1  4E6E               	dw	20078
   345  0020B3  02F9               	dw	761
   346  0020B5  5015               	dw	20501
   347  0020B7  78EC               	dw	30956
   348  0020B9  60AD               	dw	24749
   349  0020BB  F2CA               	dw	62154
   350  0020BD  7149               	dw	29001
   351  0020BF                     __end_of__powers_:
   352                           	callstack 0
   353  0020BF                     __npowers_:
   354                           	callstack 0
   355  0020BF  0000               	dw	0
   356  0020C1  3F80               	dw	16256
   357  0020C3  CCCD               	dw	52429
   358  0020C5  3DCC               	dw	15820
   359  0020C7  D70A               	dw	55050
   360  0020C9  3C23               	dw	15395
   361  0020CB  126F               	dw	4719
   362  0020CD  3A83               	dw	14979
   363  0020CF  B717               	dw	46871
   364  0020D1  38D1               	dw	14545
   365  0020D3  C5AC               	dw	50604
   366  0020D5  3727               	dw	14119
   367  0020D7  37BD               	dw	14269
   368  0020D9  3586               	dw	13702
   369  0020DB  BF95               	dw	49045
   370  0020DD  33D6               	dw	13270
   371  0020DF  CC77               	dw	52343
   372  0020E1  322B               	dw	12843
   373  0020E3  705F               	dw	28767
   374  0020E5  3089               	dw	12425
   375  0020E7  E6FF               	dw	59135
   376  0020E9  2EDB               	dw	11995
   377  0020EB  E508               	dw	58632
   378  0020ED  1E3C               	dw	7740
   379  0020EF  4260               	dw	16992
   380  0020F1  0DA2               	dw	3490
   381  0020F3                     __end_of__npowers_:
   382                           	callstack 0
   383  0020F3                     _USB_SD_Ptr:
   384                           	callstack 0
   385  0020F3  63                 	db	low _sd000
   386  0020F4  23                 	db	high _sd000
   387  0020F5  D1                 	db	low _sd001
   388  0020F6  22                 	db	high _sd001
   389  0020F7  C3                 	db	low _sd002
   390  0020F8  04                 	db	high _sd002
   391  0020F9                     __end_of_USB_SD_Ptr:
   392                           	callstack 0
   393  0000                     _FlashSignatureWord_absconstaddr	set	8198
   394  0020F9                     _USB_CD_Ptr:
   395                           	callstack 0
   396  0020F9  8E                 	db	low _configDescriptor1
   397  0020FA  22                 	db	high _configDescriptor1
   398  0020FB                     __end_of_USB_CD_Ptr:
   399                           	callstack 0
   400  0020FB                     _atcommand_type:
   401                           	callstack 0
   402  0020FB  01                 	db	1
   403  0020FC  41                 	db	65
   404  0020FD  54                 	db	84
   405  0020FE  43                 	db	67
   406  0020FF  5A                 	db	90
   407  002100  00                 	db	0
   408  002101  00                 	db	0
   409  002102  00                 	db	0
   410  002103  00                 	db	0
   411  002104  00                 	db	0
   412  002105  00                 	db	0
   413  002106  00                 	db	0
   414  002107  00                 	db	0
   415  002108  05                 	db	5
   416  002109  41                 	db	65
   417  00210A  54                 	db	84
   418  00210B  43                 	db	67
   419  00210C  44                 	db	68
   420  00210D  00                 	db	0
   421  00210E  00                 	db	0
   422  00210F  00                 	db	0
   423  002110  00                 	db	0
   424  002111  00                 	db	0
   425  002112  00                 	db	0
   426  002113  00                 	db	0
   427  002114  00                 	db	0
   428  002115  06                 	db	6
   429  002116  41                 	db	65
   430  002117  54                 	db	84
   431  002118  43                 	db	67
   432  002119  51                 	db	81
   433  00211A  00                 	db	0
   434  00211B  00                 	db	0
   435  00211C  00                 	db	0
   436  00211D  00                 	db	0
   437  00211E  00                 	db	0
   438  00211F  00                 	db	0
   439  002120  00                 	db	0
   440  002121  00                 	db	0
   441  002122  07                 	db	7
   442  002123  41                 	db	65
   443  002124  54                 	db	84
   444  002125  43                 	db	67
   445  002126  48                 	db	72
   446  002127  00                 	db	0
   447  002128  00                 	db	0
   448  002129  00                 	db	0
   449  00212A  00                 	db	0
   450  00212B  00                 	db	0
   451  00212C  00                 	db	0
   452  00212D  00                 	db	0
   453  00212E  00                 	db	0
   454  00212F  08                 	db	8
   455  002130  41                 	db	65
   456  002131  54                 	db	84
   457  002132  43                 	db	67
   458  002133  55                 	db	85
   459  002134  56                 	db	86
   460  002135  00                 	db	0
   461  002136  00                 	db	0
   462  002137  00                 	db	0
   463  002138  00                 	db	0
   464  002139  00                 	db	0
   465  00213A  00                 	db	0
   466  00213B  00                 	db	0
   467  00213C  02                 	db	2
   468  00213D  41                 	db	65
   469  00213E  54                 	db	84
   470  00213F  43                 	db	67
   471  002140  56                 	db	86
   472  002141  45                 	db	69
   473  002142  52                 	db	82
   474  002143  00                 	db	0
   475  002144  00                 	db	0
   476  002145  00                 	db	0
   477  002146  00                 	db	0
   478  002147  00                 	db	0
   479  002148  00                 	db	0
   480  002149  09                 	db	9
   481  00214A  41                 	db	65
   482  00214B  54                 	db	84
   483  00214C  43                 	db	67
   484  00214D  53                 	db	83
   485  00214E  4E                 	db	78
   486  00214F  52                 	db	82
   487  002150  00                 	db	0
   488  002151  00                 	db	0
   489  002152  00                 	db	0
   490  002153  00                 	db	0
   491  002154  00                 	db	0
   492  002155  00                 	db	0
   493  002156  03                 	db	3
   494  002157  41                 	db	65
   495  002158  54                 	db	84
   496  002159  43                 	db	67
   497  00215A  52                 	db	82
   498  00215B  53                 	db	83
   499  00215C  54                 	db	84
   500  00215D  00                 	db	0
   501  00215E  00                 	db	0
   502  00215F  00                 	db	0
   503  002160  00                 	db	0
   504  002161  00                 	db	0
   505  002162  01                 	db	1
   506  002163  04                 	db	4
   507  002164  41                 	db	65
   508  002165  54                 	db	84
   509  002166  43                 	db	67
   510  002167  42                 	db	66
   511  002168  4C                 	db	76
   512  002169  52                 	db	82
   513  00216A  53                 	db	83
   514  00216B  54                 	db	84
   515  00216C  00                 	db	0
   516  00216D  00                 	db	0
   517  00216E  00                 	db	0
   518  00216F  01                 	db	1
   519  002170  0C                 	db	12
   520  002171  41                 	db	65
   521  002172  54                 	db	84
   522  002173  43                 	db	67
   523  002174  4D                 	db	77
   524  002175  4F                 	db	79
   525  002176  44                 	db	68
   526  002177  45                 	db	69
   527  002178  4C                 	db	76
   528  002179  00                 	db	0
   529  00217A  00                 	db	0
   530  00217B  00                 	db	0
   531  00217C  00                 	db	0
   532  00217D  11                 	db	17
   533  00217E  41                 	db	65
   534  00217F  54                 	db	84
   535  002180  43                 	db	67
   536  002181  53                 	db	83
   537  002182  4D                 	db	77
   538  002183  4F                 	db	79
   539  002184  44                 	db	68
   540  002185  45                 	db	69
   541  002186  4C                 	db	76
   542  002187  00                 	db	0
   543  002188  00                 	db	0
   544  002189  01                 	db	1
   545  00218A  13                 	db	19
   546  00218B  41                 	db	65
   547  00218C  54                 	db	84
   548  00218D  43                 	db	67
   549  00218E  46                 	db	70
   550  00218F  00                 	db	0
   551  002190  00                 	db	0
   552  002191  00                 	db	0
   553  002192  00                 	db	0
   554  002193  00                 	db	0
   555  002194  00                 	db	0
   556  002195  00                 	db	0
   557  002196  01                 	db	1
   558  002197  12                 	db	18
   559  002198  41                 	db	65
   560  002199  54                 	db	84
   561  00219A  43                 	db	67
   562  00219B  43                 	db	67
   563  00219C  00                 	db	0
   564  00219D  00                 	db	0
   565  00219E  00                 	db	0
   566  00219F  00                 	db	0
   567  0021A0  00                 	db	0
   568  0021A1  00                 	db	0
   569  0021A2  00                 	db	0
   570  0021A3  01                 	db	1
   571  0021A4  14                 	db	20
   572  0021A5  41                 	db	65
   573  0021A6  54                 	db	84
   574  0021A7  43                 	db	67
   575  0021A8  43                 	db	67
   576  0021A9  41                 	db	65
   577  0021AA  4C                 	db	76
   578  0021AB  00                 	db	0
   579  0021AC  00                 	db	0
   580  0021AD  00                 	db	0
   581  0021AE  00                 	db	0
   582  0021AF  00                 	db	0
   583  0021B0  01                 	db	1
   584  0021B1  15                 	db	21
   585  0021B2  41                 	db	65
   586  0021B3  54                 	db	84
   587  0021B4  43                 	db	67
   588  0021B5  43                 	db	67
   589  0021B6  5A                 	db	90
   590  0021B7  52                 	db	82
   591  0021B8  00                 	db	0
   592  0021B9  00                 	db	0
   593  0021BA  00                 	db	0
   594  0021BB  00                 	db	0
   595  0021BC  00                 	db	0
   596  0021BD  01                 	db	1
   597  0021BE  16                 	db	22
   598  0021BF  41                 	db	65
   599  0021C0  54                 	db	84
   600  0021C1  43                 	db	67
   601  0021C2  43                 	db	67
   602  0021C3  53                 	db	83
   603  0021C4  50                 	db	80
   604  0021C5  00                 	db	0
   605  0021C6  00                 	db	0
   606  0021C7  00                 	db	0
   607  0021C8  00                 	db	0
   608  0021C9  00                 	db	0
   609  0021CA  02                 	db	2
   610  0021CB  17                 	db	23
   611  0021CC  41                 	db	65
   612  0021CD  54                 	db	84
   613  0021CE  43                 	db	67
   614  0021CF  4F                 	db	79
   615  0021D0  46                 	db	70
   616  0021D1  46                 	db	70
   617  0021D2  25                 	db	37
   618  0021D3  00                 	db	0
   619  0021D4  00                 	db	0
   620  0021D5  00                 	db	0
   621  0021D6  00                 	db	0
   622  0021D7  02                 	db	2
   623  0021D8  18                 	db	24
   624  0021D9  41                 	db	65
   625  0021DA  54                 	db	84
   626  0021DB  43                 	db	67
   627  0021DC  4D                 	db	77
   628  0021DD  4F                 	db	79
   629  0021DE  44                 	db	68
   630  0021DF  45                 	db	69
   631  0021E0  00                 	db	0
   632  0021E1  00                 	db	0
   633  0021E2  00                 	db	0
   634  0021E3  00                 	db	0
   635  0021E4  02                 	db	2
   636  0021E5  19                 	db	25
   637  0021E6  41                 	db	65
   638  0021E7  54                 	db	84
   639  0021E8  43                 	db	67
   640  0021E9  54                 	db	84
   641  0021EA  43                 	db	67
   642  0021EB  4D                 	db	77
   643  0021EC  50                 	db	80
   644  0021ED  00                 	db	0
   645  0021EE  00                 	db	0
   646  0021EF  00                 	db	0
   647  0021F0  00                 	db	0
   648  0021F1  02                 	db	2
   649  0021F2  1A                 	db	26
   650  0021F3  41                 	db	65
   651  0021F4  54                 	db	84
   652  0021F5  43                 	db	67
   653  0021F6  57                 	db	87
   654  0021F7  49                 	db	73
   655  0021F8  4E                 	db	78
   656  0021F9  00                 	db	0
   657  0021FA  00                 	db	0
   658  0021FB  00                 	db	0
   659  0021FC  00                 	db	0
   660  0021FD  00                 	db	0
   661  0021FE  02                 	db	2
   662  0021FF  1B                 	db	27
   663  002200  41                 	db	65
   664  002201  54                 	db	84
   665  002202  43                 	db	67
   666  002203  4B                 	db	75
   667  002204  4D                 	db	77
   668  002205  46                 	db	70
   669  002206  45                 	db	69
   670  002207  4D                 	db	77
   671  002208  00                 	db	0
   672  002209  00                 	db	0
   673  00220A  00                 	db	0
   674  00220B  02                 	db	2
   675  00220C  1C                 	db	28
   676  00220D  41                 	db	65
   677  00220E  54                 	db	84
   678  00220F  43                 	db	67
   679  002210  4B                 	db	75
   680  002211  4D                 	db	77
   681  002212  46                 	db	70
   682  002213  45                 	db	69
   683  002214  45                 	db	69
   684  002215  00                 	db	0
   685  002216  00                 	db	0
   686  002217  00                 	db	0
   687  002218  02                 	db	2
   688  002219  20                 	db	32
   689  00221A  41                 	db	65
   690  00221B  54                 	db	84
   691  00221C  43                 	db	67
   692  00221D  45                 	db	69
   693  00221E  58                 	db	88
   694  00221F  54                 	db	84
   695  002220  4D                 	db	77
   696  002221  00                 	db	0
   697  002222  00                 	db	0
   698  002223  00                 	db	0
   699  002224  00                 	db	0
   700  002225  02                 	db	2
   701  002226  1F                 	db	31
   702  002227  41                 	db	65
   703  002228  54                 	db	84
   704  002229  43                 	db	67
   705  00222A  55                 	db	85
   706  00222B  53                 	db	83
   707  00222C  45                 	db	69
   708  00222D  44                 	db	68
   709  00222E  00                 	db	0
   710  00222F  00                 	db	0
   711  002230  00                 	db	0
   712  002231  00                 	db	0
   713  002232  02                 	db	2
   714  002233  21                 	db	33
   715  002234  41                 	db	65
   716  002235  54                 	db	84
   717  002236  43                 	db	67
   718  002237  42                 	db	66
   719  002238  4C                 	db	76
   720  002239  44                 	db	68
   721  00223A  54                 	db	84
   722  00223B  4D                 	db	77
   723  00223C  00                 	db	0
   724  00223D  00                 	db	0
   725  00223E  00                 	db	0
   726  00223F  00                 	db	0
   727  002240  10                 	db	16
   728  002241  41                 	db	65
   729  002242  54                 	db	84
   730  002243  41                 	db	65
   731  002244  43                 	db	67
   732  002245  53                 	db	83
   733  002246  53                 	db	83
   734  002247  00                 	db	0
   735  002248  00                 	db	0
   736  002249  00                 	db	0
   737  00224A  00                 	db	0
   738  00224B  00                 	db	0
   739  00224C  01                 	db	1
   740  00224D  1D                 	db	29
   741  00224E  41                 	db	65
   742  00224F  54                 	db	84
   743  002250  41                 	db	65
   744  002251  43                 	db	67
   745  002252  45                 	db	69
   746  002253  4E                 	db	78
   747  002254  00                 	db	0
   748  002255  00                 	db	0
   749  002256  00                 	db	0
   750  002257  00                 	db	0
   751  002258  00                 	db	0
   752  002259  02                 	db	2
   753  00225A  0F                 	db	15
   754  00225B  41                 	db	65
   755  00225C  54                 	db	84
   756  00225D  41                 	db	65
   757  00225E  43                 	db	67
   758  00225F  5A                 	db	90
   759  002260  53                 	db	83
   760  002261  52                 	db	82
   761  002262  00                 	db	0
   762  002263  00                 	db	0
   763  002264  00                 	db	0
   764  002265  00                 	db	0
   765  002266  00                 	db	0
   766  002267  1E                 	db	30
   767  002268  41                 	db	65
   768  002269  54                 	db	84
   769  00226A  41                 	db	65
   770  00226B  43                 	db	67
   771  00226C  5A                 	db	90
   772  00226D  52                 	db	82
   773  00226E  00                 	db	0
   774  00226F  00                 	db	0
   775  002270  00                 	db	0
   776  002271  00                 	db	0
   777  002272  00                 	db	0
   778  002273  02                 	db	2
   779  002274  0D                 	db	13
   780  002275  41                 	db	65
   781  002276  54                 	db	84
   782  002277  41                 	db	65
   783  002278  43                 	db	67
   784  002279  53                 	db	83
   785  00227A  4C                 	db	76
   786  00227B  50                 	db	80
   787  00227C  00                 	db	0
   788  00227D  00                 	db	0
   789  00227E  00                 	db	0
   790  00227F  00                 	db	0
   791  002280  00                 	db	0
   792  002281  0E                 	db	14
   793  002282  41                 	db	65
   794  002283  54                 	db	84
   795  002284  41                 	db	65
   796  002285  43                 	db	67
   797  002286  5A                 	db	90
   798  002287  53                 	db	83
   799  002288  46                 	db	70
   800  002289  00                 	db	0
   801  00228A  00                 	db	0
   802  00228B  00                 	db	0
   803  00228C  00                 	db	0
   804  00228D  00                 	db	0
   805  00228E                     __end_of_atcommand_type:
   806                           	callstack 0
   807  00228E                     _configDescriptor1:
   808                           	callstack 0
   809  00228E  09                 	db	9
   810  00228F  02                 	db	2
   811  002290  43                 	db	67
   812  002291  00                 	db	0
   813  002292  02                 	db	2
   814  002293  01                 	db	1
   815  002294  00                 	db	0
   816  002295  C0                 	db	192
   817  002296  32                 	db	50
   818  002297  09                 	db	9
   819  002298  04                 	db	4
   820  002299  00                 	db	0
   821  00229A  00                 	db	0
   822  00229B  01                 	db	1
   823  00229C  02                 	db	2
   824  00229D  02                 	db	2
   825  00229E  01                 	db	1
   826  00229F  00                 	db	0
   827  0022A0  05                 	db	5
   828  0022A1  24                 	db	36
   829  0022A2  00                 	db	0
   830  0022A3  10                 	db	16
   831  0022A4  01                 	db	1
   832  0022A5  04                 	db	4
   833  0022A6  24                 	db	36
   834  0022A7  02                 	db	2
   835  0022A8  02                 	db	2
   836  0022A9  05                 	db	5
   837  0022AA  24                 	db	36
   838  0022AB  06                 	db	6
   839  0022AC  00                 	db	0
   840  0022AD  01                 	db	1
   841  0022AE  05                 	db	5
   842  0022AF  24                 	db	36
   843  0022B0  01                 	db	1
   844  0022B1  00                 	db	0
   845  0022B2  01                 	db	1
   846  0022B3  07                 	db	7
   847  0022B4  05                 	db	5
   848  0022B5  81                 	db	129
   849  0022B6  03                 	db	3
   850  0022B7  08                 	db	8
   851  0022B8  00                 	db	0
   852  0022B9  02                 	db	2
   853  0022BA  09                 	db	9
   854  0022BB  04                 	db	4
   855  0022BC  01                 	db	1
   856  0022BD  00                 	db	0
   857  0022BE  02                 	db	2
   858  0022BF  0A                 	db	10
   859  0022C0  00                 	db	0
   860  0022C1  00                 	db	0
   861  0022C2  00                 	db	0
   862  0022C3  07                 	db	7
   863  0022C4  05                 	db	5
   864  0022C5  02                 	db	2
   865  0022C6  02                 	db	2
   866  0022C7  40                 	db	64
   867  0022C8  00                 	db	0
   868  0022C9  00                 	db	0
   869  0022CA  07                 	db	7
   870  0022CB  05                 	db	5
   871  0022CC  82                 	db	130
   872  0022CD  02                 	db	2
   873  0022CE  40                 	db	64
   874  0022CF  00                 	db	0
   875  0022D0  00                 	db	0
   876  0022D1                     __end_of_configDescriptor1:
   877                           	callstack 0
   878  0022D1                     _sd001:
   879                           	callstack 0
   880  0022D1  34                 	db	52
   881  0022D2  03                 	db	3
   882  0022D3  0044               	dw	68
   883  0022D5  0065               	dw	101
   884  0022D7  006B               	dw	107
   885  0022D9  0069               	dw	105
   886  0022DB  0073               	dw	115
   887  0022DD  0074               	dw	116
   888  0022DF  0020               	dw	32
   889  0022E1  0043               	dw	67
   890  0022E3  006F               	dw	111
   891  0022E5  002E               	dw	46
   892  0022E7  002C               	dw	44
   893  0022E9  0020               	dw	32
   894  0022EB  004C               	dw	76
   895  0022ED  0074               	dw	116
   896  0022EF  0064               	dw	100
   897  0022F1  002E               	dw	46
   898  0022F3  0000               	dw	0
   899  0022F5  00                 	db	0
   900  0022F6  00                 	db	0
   901  0022F7  00                 	db	0
   902  0022F8  00                 	db	0
   903  0022F9  00                 	db	0
   904  0022FA  00                 	db	0
   905  0022FB  00                 	db	0
   906  0022FC  00                 	db	0
   907  0022FD  00                 	db	0
   908  0022FE  00                 	db	0
   909  0022FF  00                 	db	0
   910  002300  00                 	db	0
   911  002301  00                 	db	0
   912  002302  00                 	db	0
   913  002303  00                 	db	0
   914  002304  00                 	db	0
   915  002305                     __end_of_sd001:
   916                           	callstack 0
   917  002305                     _dpowers:
   918                           	callstack 0
   919  002305  0001               	dw	1
   920  002307  0000               	dw	0
   921  002309  000A               	dw	10
   922  00230B  0000               	dw	0
   923  00230D  0064               	dw	100
   924  00230F  0000               	dw	0
   925  002311  03E8               	dw	1000
   926  002313  0000               	dw	0
   927  002315  2710               	dw	10000
   928  002317  0000               	dw	0
   929  002319  86A0               	dw	34464
   930  00231B  0001               	dw	1
   931  00231D  4240               	dw	16960
   932  00231F  000F               	dw	15
   933  002321  9680               	dw	38528
   934  002323  0098               	dw	152
   935  002325  E100               	dw	57600
   936  002327  05F5               	dw	1525
   937  002329  CA00               	dw	51712
   938  00232B  3B9A               	dw	15258
   939  00232D                     __end_of_dpowers:
   940                           	callstack 0
   941  00232D  0000               	dw	0
   942  00232F  0000               	dw	0
   943  002331  FFC4               	dw	65476
   944  002333  3F7F               	dw	16255
   945  002335  EF80               	dw	61312
   946  002337  BEFF               	dw	48895
   947  002339  E190               	dw	57744
   948  00233B  3EA9               	dw	16041
   949  00233D  82EC               	dw	33516
   950  00233F  BE76               	dw	48758
   951  002341  AD82               	dw	44418
   952  002343  3E2B               	dw	15915
   953  002345  3C0E               	dw	15374
   954  002347  BDC3               	dw	48579
   955  002349  D187               	dw	53639
   956  00234B  3D13               	dw	15635
   957  00234D  7841               	dw	30785
   958  00234F  BBD3               	dw	48083
   959  002351                     __end_oflog@coeff:
   960                           	callstack 0
   961  002351                     _device_dsc:
   962                           	callstack 0
   963  002351  12                 	db	18
   964  002352  01                 	db	1
   965  002353  0200               	dw	512
   966  002355  02                 	db	2
   967  002356  00                 	db	0
   968  002357  00                 	db	0
   969  002358  08                 	db	8
   970  002359  04D8               	dw	1240
   971  00235B  000A               	dw	10
   972  00235D  0100               	dw	256
   973  00235F  01                 	db	1
   974  002360  02                 	db	2
   975  002361  00                 	db	0
   976  002362  01                 	db	1
   977  002363                     __end_of_device_dsc:
   978                           	callstack 0
   979  002363                     _sd000:
   980                           	callstack 0
   981  002363  04                 	db	4
   982  002364  03                 	db	3
   983  002365  0409               	dw	1033
   984  002367                     __end_of_sd000:
   985                           	callstack 0
   986  0000                     _FlashSignatureWord_absconstaddr	set	8198
   987  002367                     STR_52:
   988  002367  2D                 	db	45
   989  002368  2D                 	db	45
   990  002369  2D                 	db	45
   991  00236A  2D                 	db	45
   992  00236B  2C                 	db	44
   993  00236C  2D                 	db	45
   994  00236D  2D                 	db	45
   995  00236E  2D                 	db	45
   996  00236F  2D                 	db	45
   997  002370  2C                 	db	44
   998  002371  2D                 	db	45
   999  002372  2D                 	db	45
  1000  002373  2D                 	db	45
  1001  002374  2D                 	db	45
  1002  002375  2C                 	db	44
  1003  002376  2D                 	db	45
  1004  002377  2D                 	db	45
  1005  002378  2D                 	db	45
  1006  002379  2D                 	db	45
  1007  00237A  2C                 	db	44
  1008  00237B  2D                 	db	45
  1009  00237C  2D                 	db	45
  1010  00237D  2D                 	db	45
  1011  00237E  2D                 	db	45
  1012  00237F  2C                 	db	44
  1013  002380  2D                 	db	45
  1014  002381  2D                 	db	45
  1015  002382  2D                 	db	45
  1016  002383  2D                 	db	45
  1017  002384  00                 	db	0
  1018  002385                     STR_45:
  1019  002385  55                 	db	85	;'U'
  1020  002386  41                 	db	65	;'A'
  1021  002387  35                 	db	53	;'5'
  1022  002388  33                 	db	51	;'3'
  1023  002389  2D                 	db	45
  1024  00238A  4F                 	db	79	;'O'
  1025  00238B  33                 	db	51	;'3'
  1026  00238C  5F                 	db	95	;'_'
  1027  00238D  36                 	db	54	;'6'
  1028  00238E  76                 	db	118	;'v'
  1029  00238F  31                 	db	49	;'1'
  1030  002390  00                 	db	0
  1031  002391                     STR_2:
  1032  002391  44                 	db	68	;'D'
  1033  002392  65                 	db	101	;'e'
  1034  002393  63                 	db	99	;'c'
  1035  002394  20                 	db	32
  1036  002395  30                 	db	48	;'0'
  1037  002396  37                 	db	55	;'7'
  1038  002397  20                 	db	32
  1039  002398  32                 	db	50	;'2'
  1040  002399  30                 	db	48	;'0'
  1041  00239A  32                 	db	50	;'2'
  1042  00239B  32                 	db	50	;'2'
  1043  00239C  00                 	db	0
  1044  00239D                     STR_53:
  1045  00239D  41                 	db	65	;'A'
  1046  00239E  54                 	db	84	;'T'
  1047  00239F  41                 	db	65	;'A'
  1048  0023A0  43                 	db	67	;'C'
  1049  0023A1  53                 	db	83	;'S'
  1050  0023A2  53                 	db	83	;'S'
  1051  0023A3  0D                 	db	13
  1052  0023A4  0A                 	db	10
  1053  0023A5  00                 	db	0
  1054  0023A6                     STR_36:
  1055  0023A6  31                 	db	49	;'1'
  1056  0023A7  37                 	db	55	;'7'
  1057  0023A8  3A                 	db	58	;':'
  1058  0023A9  31                 	db	49	;'1'
  1059  0023AA  32                 	db	50	;'2'
  1060  0023AB  3A                 	db	58	;':'
  1061  0023AC  34                 	db	52	;'4'
  1062  0023AD  37                 	db	55	;'7'
  1063  0023AE  00                 	db	0
  1064  0023AF                     STR_1:
  1065  0023AF  25                 	db	37
  1066  0023B0  2E                 	db	46
  1067  0023B1  32                 	db	50	;'2'
  1068  0023B2  66                 	db	102	;'f'
  1069  0023B3  00                 	db	0
  1070  0023B4  00                 	db	0	; dummy byte at the end
  1071  0000                     
  1072                           	psect	_FlashSignatureWord_const
  1073  002006                     __p_FlashSignatureWord_const:
  1074                           	callstack 0
  1075  002006                     _FlashSignatureWord:
  1076                           	callstack 0
  1077  002006  600D               	dw	24589
  1078  002008                     __end_of_FlashSignatureWord:
  1079                           	callstack 0
  1080  0000                     _ANCON1	set	3913
  1081  0000                     _ANCON0	set	3912
  1082  0000                     _UEP0bits	set	3878
  1083  0000                     _UIEbits	set	3894
  1084  0000                     _UADDR	set	3896
  1085  0000                     _UIE	set	3894
  1086  0000                     _UEIE	set	3895
  1087  0000                     _UCFG	set	3897
  1088  0000                     _UEP1	set	3879
  1089  0000                     _UEP0	set	3878
  1090  0000                     _OSCCON	set	4051
  1091  0000                     _OSCTUNEbits	set	3995
  1092  0000                     _INTCON2bits	set	4081
  1093  0000                     _RCONbits	set	4048
  1094  0000                     _TMR0L	set	4054
  1095  0000                     _T0CONbits	set	4053
  1096  0000                     _WDTCONbits	set	4032
  1097  0000                     _LATBbits	set	3978
  1098  0000                     _SSP1BUF	set	4041
  1099  0000                     _SSP1STATbits	set	4039
  1100  0000                     _SSP1CON2bits	set	4037
  1101  0000                     _PIR1bits	set	3998
  1102  0000                     _SSP1ADD	set	4040
  1103  0000                     _SSP1STAT	set	4039
  1104  0000                     _SSP1CON2	set	4037
  1105  0000                     _SSP1CON1	set	4038
  1106  0000                     _TRISBbits	set	3987
  1107  0000                     _EECON2	set	4007
  1108  0000                     _INTCONbits	set	4082
  1109  0000                     _EECON1bits	set	4006
  1110  0000                     _TABLAT	set	4085
  1111  0000                     _TBLPTRL	set	4086
  1112  0000                     _TBLPTRH	set	4087
  1113  0000                     _TBLPTRU	set	4088
  1114  0000                     _USTAT	set	3940
  1115  0000                     _PIR2bits	set	4001
  1116  0000                     _UCON	set	3941
  1117  0000                     _UIRbits	set	3938
  1118  0000                     _UCONbits	set	3941
  1119  0000                     _UIR	set	3938
  1120  0000                     _UEIR	set	3939
  1121  0000                     _PIE2bits	set	4000
  1122                           
  1123                           ; #config settings
  1124                           
  1125                           	psect	cinit
  1126  00B88E                     __pcinit:
  1127                           	callstack 0
  1128  00B88E                     start_initialization:
  1129                           	callstack 0
  1130  00B88E                     __initialization:
  1131                           	callstack 0
  1132                           
  1133                           ; Initialize objects allocated to BANK6 (60 bytes)
  1134                           ; load TBLPTR registers with __pidataBANK6
  1135  00B88E  0E1E               	movlw	low __pidataBANK6
  1136  00B890  6EF6               	movwf	tblptrl,c
  1137  00B892  0ECF               	movlw	high __pidataBANK6
  1138  00B894  6EF7               	movwf	tblptrh,c
  1139  00B896  0E00               	movlw	low (__pidataBANK6 shr (0+16))
  1140  00B898  6EF8               	movwf	tblptru,c
  1141  00B89A  EE06  F000         	lfsr	0,__pdataBANK6
  1142  00B89E  EE10 F03C          	lfsr	1,60
  1143  00B8A2                     copy_data0:
  1144  00B8A2  0009               	tblrd		*+
  1145  00B8A4  CFF5 FFEE          	movff	tablat,postinc0
  1146  00B8A8  50E5               	movf	postdec1,w,c
  1147  00B8AA  50E1               	movf	fsr1l,w,c
  1148  00B8AC  E1FA               	bnz	copy_data0
  1149                           
  1150                           ; Initialize objects allocated to BANK4 (52 bytes)
  1151                           ; load TBLPTR registers with __pidataBANK4
  1152  00B8AE  0E1A               	movlw	low __pidataBANK4
  1153  00B8B0  6EF6               	movwf	tblptrl,c
  1154  00B8B2  0ED1               	movlw	high __pidataBANK4
  1155  00B8B4  6EF7               	movwf	tblptrh,c
  1156  00B8B6  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1157  00B8B8  6EF8               	movwf	tblptru,c
  1158  00B8BA  EE04  F0C3         	lfsr	0,__pdataBANK4
  1159  00B8BE  EE10 F034          	lfsr	1,52
  1160  00B8C2                     copy_data1:
  1161  00B8C2  0009               	tblrd		*+
  1162  00B8C4  CFF5 FFEE          	movff	tablat,postinc0
  1163  00B8C8  50E5               	movf	postdec1,w,c
  1164  00B8CA  50E1               	movf	fsr1l,w,c
  1165  00B8CC  E1FA               	bnz	copy_data1
  1166                           
  1167                           ; Clear objects allocated to BANK5 (243 bytes)
  1168  00B8CE  EE05  F000         	lfsr	0,__pbssBANK5
  1169  00B8D2  0EF3               	movlw	243
  1170  00B8D4                     clear_0:
  1171  00B8D4  6AEE               	clrf	postinc0,c
  1172  00B8D6  06E8               	decf	wreg,f,c
  1173  00B8D8  E1FD               	bnz	clear_0
  1174                           
  1175                           ; Clear objects allocated to BANK3 (245 bytes)
  1176  00B8DA  EE03  F000         	lfsr	0,__pbssBANK3
  1177  00B8DE  0EF5               	movlw	245
  1178  00B8E0                     clear_1:
  1179  00B8E0  6AEE               	clrf	postinc0,c
  1180  00B8E2  06E8               	decf	wreg,f,c
  1181  00B8E4  E1FD               	bnz	clear_1
  1182                           
  1183                           ; Clear objects allocated to BANK2 (255 bytes)
  1184  00B8E6  EE02  F000         	lfsr	0,__pbssBANK2
  1185  00B8EA  EE10 F0FF          	lfsr	1,255
  1186  00B8EE                     clear_2:
  1187  00B8EE  6AEE               	clrf	postinc0,c
  1188  00B8F0  50E5               	movf	postdec1,w,c
  1189  00B8F2  50E1               	movf	fsr1l,w,c
  1190  00B8F4  E1FC               	bnz	clear_2
  1191  00B8F6  50E2               	movf	fsr1h,w,c
  1192  00B8F8  E1FA               	bnz	clear_2
  1193                           
  1194                           ; Clear objects allocated to BANK1 (250 bytes)
  1195  00B8FA  EE01  F000         	lfsr	0,__pbssBANK1
  1196  00B8FE  0EFA               	movlw	250
  1197  00B900                     clear_3:
  1198  00B900  6AEE               	clrf	postinc0,c
  1199  00B902  06E8               	decf	wreg,f,c
  1200  00B904  E1FD               	bnz	clear_3
  1201                           
  1202                           ; Clear objects allocated to BANK4 (131 bytes)
  1203  00B906  EE04  F040         	lfsr	0,__pbssBANK4
  1204  00B90A  0E83               	movlw	131
  1205  00B90C                     clear_4:
  1206  00B90C  6AEE               	clrf	postinc0,c
  1207  00B90E  06E8               	decf	wreg,f,c
  1208  00B910  E1FD               	bnz	clear_4
  1209                           
  1210                           ; Clear objects allocated to BANK0 (74 bytes)
  1211  00B912  EE00  F0B4         	lfsr	0,__pbssBANK0
  1212  00B916  0E4A               	movlw	74
  1213  00B918                     clear_5:
  1214  00B918  6AEE               	clrf	postinc0,c
  1215  00B91A  06E8               	decf	wreg,f,c
  1216  00B91C  E1FD               	bnz	clear_5
  1217  00B91E                     end_of_initialization:
  1218                           	callstack 0
  1219  00B91E                     __end_of__initialization:
  1220                           	callstack 0
  1221  00B91E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1222  00B920  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1223  00B922  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1224  00B924  6EF8               	movwf	tblptru,c
  1225  00B926  0100               	movlb	0
  1226  00B928  EF06  F05E         	goto	_main	;jump to C main() function
  1227                           
  1228                           	psect	bssBANK0
  1229  0000B4                     __pbssBANK0:
  1230                           	callstack 0
  1231  0000B4                     _inPipes:
  1232                           	callstack 0
  1233  0000B4                     	ds	6
  1234  0000BA                     _pBDTEntryIn:
  1235                           	callstack 0
  1236  0000BA                     	ds	6
  1237  0000C0                     _g_led_status:
  1238                           	callstack 0
  1239  0000C0                     	ds	5
  1240  0000C5                     _g_led_counter:
  1241                           	callstack 0
  1242  0000C5                     	ds	4
  1243  0000C9                     _CDCDataOutHandle:
  1244                           	callstack 0
  1245  0000C9                     	ds	2
  1246  0000CB                     _pBDTEntryEP0OutNext:
  1247                           	callstack 0
  1248  0000CB                     	ds	2
  1249  0000CD                     _pBDTEntryEP0OutCurrent:
  1250                           	callstack 0
  1251  0000CD                     	ds	2
  1252  0000CF                     _g_tick_count:
  1253                           	callstack 0
  1254  0000CF                     	ds	1
  1255  0000D0                     _g_autoCal_cnt2:
  1256                           	callstack 0
  1257  0000D0                     	ds	1
  1258  0000D1                     _g_time_cnt:
  1259                           	callstack 0
  1260  0000D1                     	ds	1
  1261  0000D2                     _g_usb_state:
  1262                           	callstack 0
  1263  0000D2                     	ds	1
  1264  0000D3                     _cdc_tx_len:
  1265                           	callstack 0
  1266  0000D3                     	ds	1
  1267  0000D4                     _cdc_trf_state:
  1268                           	callstack 0
  1269  0000D4                     	ds	1
  1270  0000D5                     _cdc_rx_len:
  1271                           	callstack 0
  1272  0000D5                     	ds	1
  1273  0000D6                     _USBDeferOUTDataStagePackets:
  1274                           	callstack 0
  1275  0000D6                     	ds	1
  1276  0000D7                     _USBDeferINDataStagePackets:
  1277                           	callstack 0
  1278  0000D7                     	ds	1
  1279  0000D8                     _USBStatusStageEnabledFlag2:
  1280                           	callstack 0
  1281  0000D8                     	ds	1
  1282  0000D9                     _USBStatusStageEnabledFlag1:
  1283                           	callstack 0
  1284  0000D9                     	ds	1
  1285  0000DA                     _USBDeferStatusStagePacket:
  1286                           	callstack 0
  1287  0000DA                     	ds	1
  1288  0000DB                     _USBStatusStageTimeoutCounter:
  1289                           	callstack 0
  1290  0000DB                     	ds	1
  1291  0000DC                     _BothEP0OutUOWNsSet:
  1292                           	callstack 0
  1293  0000DC                     	ds	1
  1294  0000DD                     _endpoint_number:
  1295                           	callstack 0
  1296  0000DD                     	ds	1
  1297  0000DE                     _USBBusIsSuspended:
  1298                           	callstack 0
  1299  0000DE                     	ds	1
  1300  0000DF                     _RemoteWakeup:
  1301                           	callstack 0
  1302  0000DF                     	ds	1
  1303  0000E0                     _controlTransferState:
  1304                           	callstack 0
  1305  0000E0                     	ds	1
  1306  0000E1                     _shortPacketStatus:
  1307                           	callstack 0
  1308  0000E1                     	ds	1
  1309  0000E2                     _USBDeviceState:
  1310                           	callstack 0
  1311  0000E2                     	ds	1
  1312  0000E3                     _g_sens_autoCalib:
  1313                           	callstack 0
  1314  0000E3                     	ds	25
  1315  0000FC                     _USTATcopy:
  1316                           	callstack 0
  1317  0000FC                     	ds	1
  1318  0000FD                     _USBActiveConfiguration:
  1319                           	callstack 0
  1320  0000FD                     	ds	1
  1321                           
  1322                           	psect	bssBANK1
  1323  000100                     __pbssBANK1:
  1324                           	callstack 0
  1325  000100                     _g_temp_value:
  1326                           	callstack 0
  1327  000100                     	ds	28
  1328  00011C                     _g_last_value:
  1329                           	callstack 0
  1330  00011C                     	ds	28
  1331  000138                     _outPipes:
  1332                           	callstack 0
  1333  000138                     	ds	8
  1334  000140                     _g_sens_measure:
  1335                           	callstack 0
  1336  000140                     	ds	6
  1337  000146                     _pBDTEntryOut:
  1338                           	callstack 0
  1339  000146                     	ds	6
  1340  00014C                     window_moving_average_recursion@avg:
  1341                           	callstack 0
  1342  00014C                     	ds	4
  1343  000150                     _g_usedtime_count:
  1344                           	callstack 0
  1345  000150                     	ds	4
  1346  000154                     _g_sensitivity:
  1347                           	callstack 0
  1348  000154                     	ds	4
  1349  000158                     _g_large_counter:
  1350                           	callstack 0
  1351  000158                     	ds	4
  1352  00015C                     _g_calib_count:
  1353                           	callstack 0
  1354  00015C                     	ds	4
  1355  000160                     _g_slpSet_cnt:
  1356                           	callstack 0
  1357  000160                     	ds	4
  1358  000164                     _g_autoCal_cnt:
  1359                           	callstack 0
  1360  000164                     	ds	4
  1361  000168                     _g_uV_per_ppm:
  1362                           	callstack 0
  1363  000168                     	ds	4
  1364  00016C                     _BaudRateGen:
  1365                           	callstack 0
  1366  00016C                     	ds	4
  1367  000170                     _USB1msTickCount:
  1368                           	callstack 0
  1369  000170                     	ds	4
  1370  000174                     _pCDCDst:
  1371                           	callstack 0
  1372  000174                     	ds	3
  1373  000177                     _pCDCSrc:
  1374                           	callstack 0
  1375  000177                     	ds	3
  1376  00017A                     _ep_data_out:
  1377                           	callstack 0
  1378  00017A                     	ds	3
  1379  00017D                     _ep_data_in:
  1380                           	callstack 0
  1381  00017D                     	ds	3
  1382  000180                     _errno:
  1383                           	callstack 0
  1384  000180                     	ds	2
  1385  000182                     _gCnt:
  1386                           	callstack 0
  1387  000182                     	ds	2
  1388  000184                     _g_sens_calib:
  1389                           	callstack 0
  1390  000184                     	ds	2
  1391  000186                     _g_slpSet_cnt2:
  1392                           	callstack 0
  1393  000186                     	ds	2
  1394  000188                     _CDCDataInHandle:
  1395                           	callstack 0
  1396  000188                     	ds	2
  1397  00018A                     _pDst:
  1398                           	callstack 0
  1399  00018A                     	ds	2
  1400  00018C                     _e_level:
  1401                           	callstack 0
  1402  00018C                     	ds	1
  1403  00018D                     _control_signal_bitmap:
  1404                           	callstack 0
  1405  00018D                     	ds	1
  1406  00018E                     _cdc_mem_type:
  1407                           	callstack 0
  1408  00018E                     	ds	1
  1409  00018F                     _USBTicksSinceSuspendEnd:
  1410                           	callstack 0
  1411  00018F                     	ds	1
  1412  000190                     _g_nvm:
  1413                           	callstack 0
  1414  000190                     	ds	73
  1415  0001D9                     _kalmanFilter:
  1416                           	callstack 0
  1417  0001D9                     	ds	24
  1418  0001F1                     _line_coding:
  1419                           	callstack 0
  1420  0001F1                     	ds	7
  1421  0001F8                     _USBAlternateInterface:
  1422                           	callstack 0
  1423  0001F8                     	ds	2
  1424                           
  1425                           	psect	bssBANK2
  1426  000200                     __pbssBANK2:
  1427                           	callstack 0
  1428  000200                     _gMv_Window_buff:
  1429                           	callstack 0
  1430  000200                     	ds	48
  1431  000230                     	ds	32
  1432  000250                     build_time@F37:
  1433                           	callstack 0
  1434  000250                     	ds	18
  1435  000262                     	ds	11
  1436  00026D                     _cdc_notice:
  1437                           	callstack 0
  1438  00026D                     	ds	10
  1439  000277                     _writeBuffer:
  1440                           	callstack 0
  1441  000277                     	ds	64
  1442  0002B7                     _cdc_data_rx:
  1443                           	callstack 0
  1444  0002B7                     	ds	64
  1445  0002F7                     _dummy_encapsulated_cmd_response:
  1446                           	callstack 0
  1447  0002F7                     	ds	8
  1448                           
  1449                           	psect	bssBANK3
  1450  000300                     __pbssBANK3:
  1451                           	callstack 0
  1452  000300                     _g_linear_reg:
  1453                           	callstack 0
  1454  000300                     	ds	109
  1455  00036D                     _g_flash_temp:
  1456                           	callstack 0
  1457  00036D                     	ds	72
  1458  0003B5                     _cdc_data_tx:
  1459                           	callstack 0
  1460  0003B5                     	ds	64
  1461                           
  1462                           	psect	bssBANK4
  1463  000440                     __pbssBANK4:
  1464                           	callstack 0
  1465  000440                     _g_usb_queue:
  1466                           	callstack 0
  1467  000440                     	ds	67
  1468  000483                     _readBuffer:
  1469                           	callstack 0
  1470  000483                     	ds	64
  1471                           
  1472                           	psect	dataBANK4
  1473  0004C3                     __pdataBANK4:
  1474                           	callstack 0
  1475  0004C3                     _sd002:
  1476                           	callstack 0
  1477  0004C3                     	ds	52
  1478                           
  1479                           	psect	bssBANK5
  1480  000500                     __pbssBANK5:
  1481                           	callstack 0
  1482  000500                     _g_atcommand:
  1483                           	callstack 0
  1484  000500                     	ds	243
  1485                           
  1486                           	psect	dataBANK6
  1487  000600                     __pdataBANK6:
  1488                           	callstack 0
  1489  000600                     	ds	60
  1490                           
  1491                           	psect	cstackBANK0
  1492  000060                     __pcstackBANK0:
  1493                           	callstack 0
  1494  000060                     ?_ADCto_uVoltage:
  1495                           	callstack 0
  1496  000060                     ?___fldiv:
  1497                           	callstack 0
  1498  000060                     ?_fround:
  1499                           	callstack 0
  1500  000060                     ?_scale:
  1501                           	callstack 0
  1502  000060                     ADCto_uVoltage@raw_adc:
  1503                           	callstack 0
  1504  000060                     build_time@timestamp:
  1505                           	callstack 0
  1506  000060                     ___fldiv@b:
  1507                           	callstack 0
  1508                           
  1509                           ; 4 bytes @ 0x0
  1510  000060                     	ds	2
  1511  000062                     ADCto_uVoltage@gain:
  1512                           	callstack 0
  1513                           
  1514                           ; 1 bytes @ 0x2
  1515  000062                     	ds	2
  1516  000064                     _build_time$156:
  1517                           	callstack 0
  1518  000064                     ADCto_uVoltage@uVolt:
  1519                           	callstack 0
  1520  000064                     ___fldiv@a:
  1521                           	callstack 0
  1522  000064                     _fround$6569:
  1523                           	callstack 0
  1524  000064                     _scale$6570:
  1525                           	callstack 0
  1526                           
  1527                           ; 4 bytes @ 0x4
  1528  000064                     	ds	2
  1529  000066                     _build_time$182:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x6
  1533  000066                     	ds	2
  1534  000068                     ??___fldiv:
  1535  000068                     scale@scl:
  1536                           	callstack 0
  1537  000068                     _build_time$183:
  1538                           	callstack 0
  1539  000068                     ADCto_uVoltage@lsb:
  1540                           	callstack 0
  1541  000068                     _fround$6568:
  1542                           	callstack 0
  1543                           
  1544                           ; 4 bytes @ 0x8
  1545  000068                     	ds	2
  1546  00006A                     _build_time$184:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0xA
  1550  00006A                     	ds	2
  1551  00006C                     fround@prec:
  1552                           	callstack 0
  1553  00006C                     _build_time$185:
  1554                           	callstack 0
  1555  00006C                     ___fldiv@rem:
  1556                           	callstack 0
  1557                           
  1558                           ; 4 bytes @ 0xC
  1559  00006C                     	ds	1
  1560  00006D                     ?_sprintf:
  1561                           	callstack 0
  1562  00006D                     sprintf@sp:
  1563                           	callstack 0
  1564                           
  1565                           ; 2 bytes @ 0xD
  1566  00006D                     	ds	1
  1567  00006E                     _build_time$186:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0xE
  1571  00006E                     	ds	1
  1572  00006F                     sprintf@f:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0xF
  1576  00006F                     	ds	1
  1577  000070                     ___fldiv@sign:
  1578                           	callstack 0
  1579  000070                     _build_time$187:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x10
  1583  000070                     	ds	1
  1584  000071                     ___fldiv@new_exp:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x11
  1588  000071                     	ds	1
  1589  000072                     _build_time$188:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x12
  1593  000072                     	ds	1
  1594  000073                     ___fldiv@grs:
  1595                           	callstack 0
  1596                           
  1597                           ; 4 bytes @ 0x13
  1598  000073                     	ds	1
  1599  000074                     _build_time$189:
  1600                           	callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x14
  1603  000074                     	ds	1
  1604  000075                     ??_sprintf:
  1605                           
  1606                           ; 1 bytes @ 0x15
  1607  000075                     	ds	1
  1608  000076                     _build_time$190:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x16
  1612  000076                     	ds	1
  1613  000077                     ___fldiv@bexp:
  1614                           	callstack 0
  1615                           
  1616                           ; 1 bytes @ 0x17
  1617  000077                     	ds	1
  1618  000078                     ___fldiv@aexp:
  1619                           	callstack 0
  1620  000078                     _build_time$191:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x18
  1624  000078                     	ds	1
  1625  000079                     ?_fmod:
  1626                           	callstack 0
  1627  000079                     ?_Kalman_updateEstimate:
  1628                           	callstack 0
  1629  000079                     ?_gasSensor_calib:
  1630                           	callstack 0
  1631  000079                     ?__atof:
  1632                           	callstack 0
  1633  000079                     __atof@str:
  1634                           	callstack 0
  1635  000079                     sht3x_measure_read@temp:
  1636                           	callstack 0
  1637  000079                     Kalman_updateEstimate@pObj:
  1638                           	callstack 0
  1639  000079                     gasSensor_calib@cmp_val:
  1640                           	callstack 0
  1641  000079                     fmod@x:
  1642                           	callstack 0
  1643  000079                     _sprintf$6571:
  1644                           	callstack 0
  1645                           
  1646                           ; 4 bytes @ 0x19
  1647  000079                     	ds	1
  1648  00007A                     _build_time$192:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x1A
  1652  00007A                     	ds	1
  1653  00007B                     sht3x_measure_read@humi:
  1654                           	callstack 0
  1655  00007B                     Kalman_updateEstimate@mea:
  1656                           	callstack 0
  1657                           
  1658                           ; 4 bytes @ 0x1B
  1659  00007B                     	ds	1
  1660  00007C                     _build_time$193:
  1661                           	callstack 0
  1662                           
  1663                           ; 2 bytes @ 0x1C
  1664  00007C                     	ds	1
  1665  00007D                     ??__atof:
  1666  00007D                     sprintf@ap:
  1667                           	callstack 0
  1668  00007D                     sht3x_measure_read@raw_temp:
  1669                           	callstack 0
  1670  00007D                     gasSensor_calib@gas_uVolt:
  1671                           	callstack 0
  1672  00007D                     fmod@y:
  1673                           	callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x1D
  1676  00007D                     	ds	1
  1677  00007E                     _build_time$194:
  1678                           	callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x1E
  1681  00007E                     	ds	1
  1682  00007F                     sprintf@ccnt:
  1683                           	callstack 0
  1684  00007F                     _Kalman_updateEstimate$6564:
  1685                           	callstack 0
  1686                           
  1687                           ; 4 bytes @ 0x1F
  1688  00007F                     	ds	1
  1689  000080                     _build_time$199:
  1690                           	callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x20
  1693  000080                     	ds	1
  1694  000081                     __atof@sign:
  1695                           	callstack 0
  1696  000081                     sprintf@flag:
  1697                           	callstack 0
  1698  000081                     sht3x_measure_read@raw_humi:
  1699                           	callstack 0
  1700  000081                     gasSensor_calib@baseline:
  1701                           	callstack 0
  1702  000081                     fmod@n:
  1703                           	callstack 0
  1704                           
  1705                           ; 4 bytes @ 0x21
  1706  000081                     	ds	1
  1707  000082                     _build_time$200:
  1708                           	callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x22
  1711  000082                     	ds	1
  1712  000083                     __atof@cnt:
  1713                           	callstack 0
  1714  000083                     sprintf@val:
  1715                           	callstack 0
  1716  000083                     _Kalman_updateEstimate$6563:
  1717                           	callstack 0
  1718                           
  1719                           ; 4 bytes @ 0x23
  1720  000083                     	ds	1
  1721  000084                     _build_time$204:
  1722                           	callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x24
  1725  000084                     	ds	1
  1726  000085                     sht3x_measure_nonblock_read@temp:
  1727                           	callstack 0
  1728  000085                     Linear_regression@p:
  1729                           	callstack 0
  1730  000085                     __atof@ret:
  1731                           	callstack 0
  1732  000085                     gasSensor_calib@nA:
  1733                           	callstack 0
  1734                           
  1735                           ; 4 bytes @ 0x25
  1736  000085                     	ds	1
  1737  000086                     _build_time$208:
  1738                           	callstack 0
  1739                           
  1740                           ; 2 bytes @ 0x26
  1741  000086                     	ds	1
  1742  000087                     sht3x_measure_nonblock_read@humi:
  1743                           	callstack 0
  1744  000087                     sprintf@eexp:
  1745                           	callstack 0
  1746  000087                     Linear_regression@uVoltage:
  1747                           	callstack 0
  1748                           
  1749                           ; 4 bytes @ 0x27
  1750  000087                     	ds	1
  1751  000088                     _build_time$212:
  1752                           	callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x28
  1755  000088                     	ds	1
  1756  000089                     __atof@dotpos:
  1757                           	callstack 0
  1758  000089                     sensor_read_temp_humi@temp:
  1759                           	callstack 0
  1760  000089                     sprintf@tmpval:
  1761                           	callstack 0
  1762  000089                     _gasSensor_calib$6565:
  1763                           	callstack 0
  1764                           
  1765                           ; 4 bytes @ 0x29
  1766  000089                     	ds	1
  1767  00008A                     build_time@tm:
  1768                           	callstack 0
  1769                           
  1770                           ; 18 bytes @ 0x2A
  1771  00008A                     	ds	1
  1772  00008B                     ??_Linear_regression:
  1773  00008B                     __atof@p:
  1774                           	callstack 0
  1775  00008B                     sensor_read_temp_humi@humi:
  1776                           	callstack 0
  1777                           
  1778                           ; 2 bytes @ 0x2B
  1779  00008B                     	ds	2
  1780  00008D                     sprintf@prec:
  1781                           	callstack 0
  1782  00008D                     sensMeasure_temp_read@temp:
  1783                           	callstack 0
  1784  00008D                     _gasSensor_calib$6566:
  1785                           	callstack 0
  1786                           
  1787                           ; 4 bytes @ 0x2D
  1788  00008D                     	ds	2
  1789  00008F                     sprintf@fval:
  1790                           	callstack 0
  1791                           
  1792                           ; 4 bytes @ 0x2F
  1793  00008F                     	ds	2
  1794  000091                     sensMeasure_temp_read@humi:
  1795                           	callstack 0
  1796  000091                     gasSensor_calib@gas_ppm:
  1797                           	callstack 0
  1798  000091                     _Linear_regression$6561:
  1799                           	callstack 0
  1800                           
  1801                           ; 4 bytes @ 0x31
  1802  000091                     	ds	2
  1803  000093                     sprintf@c:
  1804                           	callstack 0
  1805                           
  1806                           ; 1 bytes @ 0x33
  1807  000093                     	ds	1
  1808  000094                     ?__ftoa:
  1809                           	callstack 0
  1810  000094                     __ftoa@num:
  1811                           	callstack 0
  1812                           
  1813                           ; 4 bytes @ 0x34
  1814  000094                     	ds	1
  1815  000095                     Linear_regression@index:
  1816                           	callstack 0
  1817  000095                     gasSensor_calib@sensitivity:
  1818                           	callstack 0
  1819                           
  1820                           ; 4 bytes @ 0x35
  1821  000095                     	ds	3
  1822  000098                     __ftoa@str:
  1823                           	callstack 0
  1824                           
  1825                           ; 2 bytes @ 0x38
  1826  000098                     	ds	1
  1827  000099                     sensMeasure_gas_read@volt:
  1828                           	callstack 0
  1829                           
  1830                           ; 4 bytes @ 0x39
  1831  000099                     	ds	1
  1832  00009A                     build_response@status:
  1833                           	callstack 0
  1834                           
  1835                           ; 2 bytes @ 0x3A
  1836  00009A                     	ds	2
  1837  00009C                     ??_build_response:
  1838  00009C                     update_command@status:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x3C
  1842  00009C                     	ds	1
  1843  00009D                     sensMeasure_gas_read@cmp_val:
  1844                           	callstack 0
  1845                           
  1846                           ; 4 bytes @ 0x3D
  1847  00009D                     	ds	1
  1848  00009E                     update_command@chno:
  1849                           	callstack 0
  1850  00009E                     build_response@chno:
  1851                           	callstack 0
  1852                           
  1853                           ; 1 bytes @ 0x3E
  1854  00009E                     	ds	1
  1855  00009F                     _update_command$3632:
  1856                           	callstack 0
  1857  00009F                     _build_response$3673:
  1858                           	callstack 0
  1859                           
  1860                           ; 2 bytes @ 0x3F
  1861  00009F                     	ds	2
  1862  0000A1                     update_command@i:
  1863                           	callstack 0
  1864  0000A1                     sensMeasure_gas_read@raw:
  1865                           	callstack 0
  1866  0000A1                     build_response@temp:
  1867                           	callstack 0
  1868                           
  1869                           ; 4 bytes @ 0x41
  1870  0000A1                     	ds	2
  1871  0000A3                     ??_sensMeasure_task:
  1872  0000A3                     update_command@apply:
  1873                           	callstack 0
  1874                           
  1875                           ; 1 bytes @ 0x43
  1876  0000A3                     	ds	2
  1877  0000A5                     build_response@temp_3680:
  1878                           	callstack 0
  1879                           
  1880                           ; 4 bytes @ 0x45
  1881  0000A5                     	ds	4
  1882  0000A9                     build_response@temp_3684:
  1883                           	callstack 0
  1884                           
  1885                           ; 4 bytes @ 0x49
  1886  0000A9                     	ds	4
  1887  0000AD                     build_response@i_3688:
  1888                           	callstack 0
  1889                           
  1890                           ; 2 bytes @ 0x4D
  1891  0000AD                     	ds	2
  1892  0000AF                     build_response@i:
  1893                           	callstack 0
  1894                           
  1895                           ; 1 bytes @ 0x4F
  1896  0000AF                     	ds	1
  1897  0000B0                     build_response@len:
  1898                           	callstack 0
  1899                           
  1900                           ; 1 bytes @ 0x50
  1901  0000B0                     	ds	1
  1902  0000B1                     _atcommand_task$3563:
  1903                           	callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x51
  1906  0000B1                     	ds	2
  1907  0000B3                     atcommand_task@ch:
  1908                           	callstack 0
  1909                           
  1910                           ; 1 bytes @ 0x53
  1911  0000B3                     	ds	1
  1912                           
  1913                           	psect	cstackCOMRAM
  1914  000001                     __pcstackCOMRAM:
  1915                           	callstack 0
  1916  000001                     ??_isdigit:
  1917  000001                     ??_USBStdGetDscHandler:
  1918  000001                     ??_USBStdGetStatusHandler:
  1919  000001                     ?_USBTransferOnePacket:
  1920                           	callstack 0
  1921  000001                     ?_get_product_desc:
  1922                           	callstack 0
  1923  000001                     ?__strcpy:
  1924                           	callstack 0
  1925  000001                     ?__strlen:
  1926                           	callstack 0
  1927  000001                     ?___wmul:
  1928                           	callstack 0
  1929  000001                     ?___awmod:
  1930                           	callstack 0
  1931  000001                     ?___lwmod:
  1932                           	callstack 0
  1933  000001                     ?_compensate_temperature:
  1934                           	callstack 0
  1935  000001                     ?__tdiv_to_l_:
  1936                           	callstack 0
  1937  000001                     ?__div_to_l_:
  1938                           	callstack 0
  1939  000001                     ?_FSR_set_LSB:
  1940                           	callstack 0
  1941  000001                     ?___lmul:
  1942                           	callstack 0
  1943  000001                     ?___lldiv:
  1944                           	callstack 0
  1945  000001                     ?___aldiv:
  1946                           	callstack 0
  1947  000001                     ?___almod:
  1948                           	callstack 0
  1949  000001                     ?___flneg:
  1950                           	callstack 0
  1951  000001                     ?___llmod:
  1952                           	callstack 0
  1953  000001                     USBTransferOnePacket@dir:
  1954                           	callstack 0
  1955  000001                     USBConfigureEndpoint@direction:
  1956                           	callstack 0
  1957  000001                     USBCtrlTrfTxService@byteToSend:
  1958                           	callstack 0
  1959  000001                     USBCtrlTrfRxService@i:
  1960                           	callstack 0
  1961  000001                     i2c_init@speed:
  1962                           	callstack 0
  1963  000001                     I2C_Write@I2cWriteData:
  1964                           	callstack 0
  1965  000001                     I2C_Read@ack:
  1966                           	callstack 0
  1967  000001                     LED_On@led:
  1968                           	callstack 0
  1969  000001                     LED_Enable@led:
  1970                           	callstack 0
  1971  000001                     check_param@param:
  1972                           	callstack 0
  1973  000001                     __strcpy@dest:
  1974                           	callstack 0
  1975  000001                     __strlen@source:
  1976                           	callstack 0
  1977  000001                     __strclr@dest:
  1978                           	callstack 0
  1979  000001                     __isdigit@src:
  1980                           	callstack 0
  1981  000001                     buffer_init@queue:
  1982                           	callstack 0
  1983  000001                     buffer_en_queue@queue:
  1984                           	callstack 0
  1985  000001                     buffer_de_queue@queue:
  1986                           	callstack 0
  1987  000001                     crc8@data:
  1988                           	callstack 0
  1989  000001                     Linear_regression_init@p:
  1990                           	callstack 0
  1991  000001                     Kalman_setMeasurementError@pObj:
  1992                           	callstack 0
  1993  000001                     Kalman_setEstimateError@pObj:
  1994                           	callstack 0
  1995  000001                     Kalman_setProcessNoise@pObj:
  1996                           	callstack 0
  1997  000001                     nvm_serialno_check@sno:
  1998                           	callstack 0
  1999  000001                     SYSTEM_Initialize@pll_startup_counter:
  2000                           	callstack 0
  2001  000001                     DelayRoutine@DelayAmount:
  2002                           	callstack 0
  2003  000001                     ___wmul@multiplier:
  2004                           	callstack 0
  2005  000001                     ___awmod@dividend:
  2006                           	callstack 0
  2007  000001                     ___lwmod@dividend:
  2008                           	callstack 0
  2009  000001                     memcpy@d1:
  2010                           	callstack 0
  2011  000001                     memset@p1:
  2012                           	callstack 0
  2013  000001                     flash_readBytes@startaddr:
  2014                           	callstack 0
  2015  000001                     flash_writeBytes@startaddr:
  2016                           	callstack 0
  2017  000001                     flash_clear@startaddr:
  2018                           	callstack 0
  2019  000001                     compensate_temperature@temp:
  2020                           	callstack 0
  2021  000001                     ___lmul@multiplier:
  2022                           	callstack 0
  2023  000001                     ___lldiv@dividend:
  2024                           	callstack 0
  2025  000001                     ___aldiv@dividend:
  2026                           	callstack 0
  2027  000001                     ___almod@dividend:
  2028                           	callstack 0
  2029  000001                     __div_to_l_@f1:
  2030                           	callstack 0
  2031  000001                     ___fleq@ff1:
  2032                           	callstack 0
  2033  000001                     ___flge@ff1:
  2034                           	callstack 0
  2035  000001                     ___flneg@f1:
  2036                           	callstack 0
  2037  000001                     __tdiv_to_l_@f1:
  2038                           	callstack 0
  2039  000001                     ___llmod@dividend:
  2040                           	callstack 0
  2041                           
  2042                           ; 4 bytes @ 0x0
  2043  000001                     	ds	1
  2044  000002                     ??_USBConfigureEndpoint:
  2045  000002                     ?_param_copy:
  2046                           	callstack 0
  2047  000002                     USBCtrlTrfRxService@byteToRead:
  2048                           	callstack 0
  2049  000002                     USBCtrlTrfInHandler@lastDTS:
  2050                           	callstack 0
  2051  000002                     I2C_Read@I2CReadData:
  2052                           	callstack 0
  2053  000002                     _isdigit$5925:
  2054                           	callstack 0
  2055  000002                     USBTransferOnePacket@data:
  2056                           	callstack 0
  2057  000002                     USBStdGetStatusHandler@p:
  2058                           	callstack 0
  2059  000002                     i2c_writeData@wrptr:
  2060                           	callstack 0
  2061  000002                     param_copy@src1:
  2062                           	callstack 0
  2063  000002                     _led_warmup$3759:
  2064                           	callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x1
  2067  000002                     	ds	1
  2068  000003                     ??_buffer_de_queue:
  2069  000003                     ??_Linear_regression_init:
  2070  000003                     buffer_en_queue@ch:
  2071                           	callstack 0
  2072  000003                     crc8@len:
  2073                           	callstack 0
  2074  000003                     isdigit@c:
  2075                           	callstack 0
  2076  000003                     __strcpy@source:
  2077                           	callstack 0
  2078  000003                     __strlen@sc:
  2079                           	callstack 0
  2080  000003                     __strclr@n:
  2081                           	callstack 0
  2082  000003                     __isdigit@n:
  2083                           	callstack 0
  2084  000003                     i2c_readBytes@rdptr:
  2085                           	callstack 0
  2086  000003                     SYSTEM_Initialize@pll_startup_counter_5257:
  2087                           	callstack 0
  2088  000003                     ___wmul@multiplicand:
  2089                           	callstack 0
  2090  000003                     ___awmod@divisor:
  2091                           	callstack 0
  2092  000003                     ___lwmod@divisor:
  2093                           	callstack 0
  2094  000003                     memcpy@s1:
  2095                           	callstack 0
  2096  000003                     memset@c:
  2097                           	callstack 0
  2098  000003                     Kalman_setMeasurementError@mea_e:
  2099                           	callstack 0
  2100  000003                     Kalman_setEstimateError@est_e:
  2101                           	callstack 0
  2102  000003                     Kalman_setProcessNoise@q:
  2103                           	callstack 0
  2104                           
  2105                           ; 4 bytes @ 0x2
  2106  000003                     	ds	1
  2107  000004                     ??_buffer_en_queue:
  2108  000004                     USBTransferOnePacket@len:
  2109                           	callstack 0
  2110  000004                     i2c_writeData@len:
  2111                           	callstack 0
  2112  000004                     crc8@i:
  2113                           	callstack 0
  2114  000004                     nvm_serialno_check@i:
  2115                           	callstack 0
  2116  000004                     param_copy@src2:
  2117                           	callstack 0
  2118  000004                     _led_task$3764:
  2119                           	callstack 0
  2120                           
  2121                           ; 2 bytes @ 0x3
  2122  000004                     	ds	1
  2123  000005                     ??_USBTransferOnePacket:
  2124  000005                     ??__strcpy:
  2125  000005                     __isdigit@ch:
  2126                           	callstack 0
  2127  000005                     i2c_writeData@isStop:
  2128                           	callstack 0
  2129  000005                     i2c_readBytes@len:
  2130                           	callstack 0
  2131  000005                     crc8@j:
  2132                           	callstack 0
  2133  000005                     Linear_regression_init@index:
  2134                           	callstack 0
  2135  000005                     FSR_set_LSB@gain:
  2136                           	callstack 0
  2137  000005                     SYSTEM_Initialize@state:
  2138                           	callstack 0
  2139  000005                     ___awmod@counter:
  2140                           	callstack 0
  2141  000005                     ___lwmod@counter:
  2142                           	callstack 0
  2143  000005                     putUSBUSART@data:
  2144                           	callstack 0
  2145  000005                     flash_readBytes@flash_array:
  2146                           	callstack 0
  2147  000005                     flash_writeBytes@flash_array:
  2148                           	callstack 0
  2149  000005                     atcommand_compare@src1:
  2150                           	callstack 0
  2151  000005                     split_param@src:
  2152                           	callstack 0
  2153  000005                     ___wmul@product:
  2154                           	callstack 0
  2155  000005                     memcpy@n:
  2156                           	callstack 0
  2157  000005                     memset@n:
  2158                           	callstack 0
  2159  000005                     flash_clear@endaddr:
  2160                           	callstack 0
  2161  000005                     compensate_temperature@cmp_val:
  2162                           	callstack 0
  2163  000005                     ___lmul@multiplicand:
  2164                           	callstack 0
  2165  000005                     ___lldiv@divisor:
  2166                           	callstack 0
  2167  000005                     ___aldiv@divisor:
  2168                           	callstack 0
  2169  000005                     ___almod@divisor:
  2170                           	callstack 0
  2171  000005                     __div_to_l_@f2:
  2172                           	callstack 0
  2173  000005                     ___fleq@ff2:
  2174                           	callstack 0
  2175  000005                     ___flge@ff2:
  2176                           	callstack 0
  2177  000005                     __tdiv_to_l_@f2:
  2178                           	callstack 0
  2179  000005                     ___llmod@divisor:
  2180                           	callstack 0
  2181                           
  2182                           ; 4 bytes @ 0x4
  2183  000005                     	ds	1
  2184  000006                     ??_i2c_readBytes:
  2185  000006                     ?_isleap:
  2186                           	callstack 0
  2187  000006                     buffer_de_queue@ch:
  2188                           	callstack 0
  2189  000006                     USBConfigureEndpoint@EPNum:
  2190                           	callstack 0
  2191  000006                     i2c_writeData@i:
  2192                           	callstack 0
  2193  000006                     crc8@crc:
  2194                           	callstack 0
  2195  000006                     ___awmod@sign:
  2196                           	callstack 0
  2197  000006                     param_copy@i:
  2198                           	callstack 0
  2199  000006                     isleap@yr:
  2200                           	callstack 0
  2201                           
  2202                           ; 2 bytes @ 0x5
  2203  000006                     	ds	1
  2204  000007                     ?___awdiv:
  2205                           	callstack 0
  2206  000007                     ?___lwdiv:
  2207                           	callstack 0
  2208  000007                     putUSBUSART@length:
  2209                           	callstack 0
  2210  000007                     Set_KamanFilter_Sensitivity@e_level:
  2211                           	callstack 0
  2212  000007                     __strcpy@i:
  2213                           	callstack 0
  2214  000007                     USBConfigureEndpoint@handle:
  2215                           	callstack 0
  2216  000007                     flash_readBytes@num_bytes:
  2217                           	callstack 0
  2218  000007                     flash_writeBytes@num_bytes:
  2219                           	callstack 0
  2220  000007                     i2c_writeBytes@wrptr:
  2221                           	callstack 0
  2222  000007                     check_crc8@data:
  2223                           	callstack 0
  2224  000007                     atcommand_compare@src2:
  2225                           	callstack 0
  2226  000007                     split_param@params:
  2227                           	callstack 0
  2228  000007                     ___awdiv@dividend:
  2229                           	callstack 0
  2230  000007                     ___lwdiv@dividend:
  2231                           	callstack 0
  2232  000007                     memcpy@d:
  2233                           	callstack 0
  2234  000007                     memset@p:
  2235                           	callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x6
  2238  000007                     	ds	1
  2239  000008                     ??_isleap:
  2240  000008                     param_copy@ch:
  2241                           	callstack 0
  2242  000008                     write_command@buff:
  2243                           	callstack 0
  2244                           
  2245                           ; 2 bytes @ 0x7
  2246  000008                     	ds	1
  2247  000009                     ??__tdiv_to_l_:
  2248  000009                     ??_flash_writeBytes:
  2249  000009                     ??___fleq:
  2250  000009                     ??___flge:
  2251  000009                     USBDeviceInit@i:
  2252                           	callstack 0
  2253  000009                     USBEnableEndpoint@options:
  2254                           	callstack 0
  2255  000009                     USBTransferOnePacket@ep:
  2256                           	callstack 0
  2257  000009                     flash_clear@flag:
  2258                           	callstack 0
  2259  000009                     i2c_writeBytes@len:
  2260                           	callstack 0
  2261  000009                     check_crc8@nbrOfBytes:
  2262                           	callstack 0
  2263  000009                     atcommand_compare@n:
  2264                           	callstack 0
  2265  000009                     split_param@m:
  2266                           	callstack 0
  2267  000009                     ___aldiv@counter:
  2268                           	callstack 0
  2269  000009                     ___almod@counter:
  2270                           	callstack 0
  2271  000009                     ___llmod@counter:
  2272                           	callstack 0
  2273  000009                     ___awdiv@divisor:
  2274                           	callstack 0
  2275  000009                     ___lwdiv@divisor:
  2276                           	callstack 0
  2277  000009                     memcpy@s:
  2278                           	callstack 0
  2279  000009                     flash_readBytes@flash_addr:
  2280                           	callstack 0
  2281  000009                     ___lmul@product:
  2282                           	callstack 0
  2283  000009                     ___lldiv@quotient:
  2284                           	callstack 0
  2285  000009                     __div_to_l_@quot:
  2286                           	callstack 0
  2287                           
  2288                           ; 4 bytes @ 0x8
  2289  000009                     	ds	1
  2290  00000A                     flash_writeBytes@retval:
  2291                           	callstack 0
  2292  00000A                     i2c_writeBytes@isStop:
  2293                           	callstack 0
  2294  00000A                     check_crc8@checksum:
  2295                           	callstack 0
  2296  00000A                     split_param@n:
  2297                           	callstack 0
  2298  00000A                     ___aldiv@sign:
  2299                           	callstack 0
  2300  00000A                     ___almod@sign:
  2301                           	callstack 0
  2302  00000A                     _isleap$6003:
  2303                           	callstack 0
  2304  00000A                     USBEnableEndpoint@p:
  2305                           	callstack 0
  2306  00000A                     USBTransferOnePacket@handle:
  2307                           	callstack 0
  2308  00000A                     atcommand_compare@channelno:
  2309                           	callstack 0
  2310  00000A                     flash_clear@flash_addr:
  2311                           	callstack 0
  2312                           
  2313                           ; 4 bytes @ 0x9
  2314  00000A                     	ds	1
  2315  00000B                     ??_split_param:
  2316  00000B                     flash_writeBytes@write_byte:
  2317                           	callstack 0
  2318  00000B                     i2c_writeBytes@address:
  2319                           	callstack 0
  2320  00000B                     check_crc8@crc:
  2321                           	callstack 0
  2322  00000B                     ___awdiv@counter:
  2323                           	callstack 0
  2324  00000B                     ___lwdiv@counter:
  2325                           	callstack 0
  2326  00000B                     memcpy@tmp:
  2327                           	callstack 0
  2328  00000B                     ___aldiv@quotient:
  2329                           	callstack 0
  2330                           
  2331                           ; 4 bytes @ 0xA
  2332  00000B                     	ds	1
  2333  00000C                     ??_atcommand_compare:
  2334  00000C                     USBEnableEndpoint@ep:
  2335                           	callstack 0
  2336  00000C                     CDCTxService@i:
  2337                           	callstack 0
  2338  00000C                     flash_writeBytes@flag:
  2339                           	callstack 0
  2340  00000C                     i2c_readBytes@address:
  2341                           	callstack 0
  2342  00000C                     lmp91000_set_GainRLoad@RLoad:
  2343                           	callstack 0
  2344  00000C                     lmp91000_set_Reference@IntZ:
  2345                           	callstack 0
  2346  00000C                     lmp91000_set_Mode@mode:
  2347                           	callstack 0
  2348  00000C                     ___awdiv@sign:
  2349                           	callstack 0
  2350  00000C                     getsUSBUSART@buffer:
  2351                           	callstack 0
  2352  00000C                     i2c_writeBytes_to@wraddr:
  2353                           	callstack 0
  2354  00000C                     lmp91000_lock@buff:
  2355                           	callstack 0
  2356  00000C                     lmp91000_unlock@buff:
  2357                           	callstack 0
  2358  00000C                     sht3x_measure_start@cmd:
  2359                           	callstack 0
  2360  00000C                     sht3x_clear_status_reg@cmd:
  2361                           	callstack 0
  2362  00000C                     sht3x_heaterOff@cmd:
  2363                           	callstack 0
  2364  00000C                     ___lwdiv@quotient:
  2365                           	callstack 0
  2366  00000C                     __tdiv_to_l_@quot:
  2367                           	callstack 0
  2368                           
  2369                           ; 4 bytes @ 0xB
  2370  00000C                     	ds	1
  2371  00000D                     ?_gasSensor_lowfilter:
  2372                           	callstack 0
  2373  00000D                     ?_frexp:
  2374                           	callstack 0
  2375  00000D                     ?__atoi:
  2376                           	callstack 0
  2377  00000D                     CDCTxService@byte_to_send:
  2378                           	callstack 0
  2379  00000D                     i2c_readBytes@ackbit:
  2380                           	callstack 0
  2381  00000D                     lmp91000_set_GainRLoad@user_gain:
  2382                           	callstack 0
  2383  00000D                     lmp91000_set_Reference@sign:
  2384                           	callstack 0
  2385  00000D                     lmp91000_set_Mode@fet:
  2386                           	callstack 0
  2387  00000D                     split_param@len:
  2388                           	callstack 0
  2389  00000D                     ___lldiv@counter:
  2390                           	callstack 0
  2391  00000D                     __div_to_l_@cntr:
  2392                           	callstack 0
  2393  00000D                     __atoi@str:
  2394                           	callstack 0
  2395  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2396                           	callstack 0
  2397  00000D                     ___awdiv@quotient:
  2398                           	callstack 0
  2399  00000D                     flash_readBytes@tblptr_save:
  2400                           	callstack 0
  2401  00000D                     flash_writeBytes@flash_addr:
  2402                           	callstack 0
  2403  00000D                     sort_uV_slope@min:
  2404                           	callstack 0
  2405  00000D                     gasSensor_lowfilter@gasConcent:
  2406                           	callstack 0
  2407  00000D                     frexp@value:
  2408                           	callstack 0
  2409                           
  2410                           ; 4 bytes @ 0xC
  2411  00000D                     	ds	1
  2412  00000E                     ??_sensor_sht3x_init:
  2413  00000E                     ?_months_to_days:
  2414                           	callstack 0
  2415  00000E                     ?_years_to_days:
  2416                           	callstack 0
  2417  00000E                     getsUSBUSART@len:
  2418                           	callstack 0
  2419  00000E                     i2c_writeBytes_to@addrlen:
  2420                           	callstack 0
  2421  00000E                     i2c_readBytes@i:
  2422                           	callstack 0
  2423  00000E                     lmp91000_set_Reference@bias:
  2424                           	callstack 0
  2425  00000E                     split_param@ch:
  2426                           	callstack 0
  2427  00000E                     __div_to_l_@exp1:
  2428                           	callstack 0
  2429  00000E                     lmp91000_set_GainRLoad@buff:
  2430                           	callstack 0
  2431  00000E                     lmp91000_set_Mode@buff:
  2432                           	callstack 0
  2433  00000E                     months_to_days@month:
  2434                           	callstack 0
  2435  00000E                     years_to_days@yr:
  2436                           	callstack 0
  2437                           
  2438                           ; 2 bytes @ 0xD
  2439  00000E                     	ds	1
  2440  00000F                     ?__itoa:
  2441                           	callstack 0
  2442  00000F                     ?___fltol:
  2443                           	callstack 0
  2444  00000F                     lmp91000_set_Reference@source:
  2445                           	callstack 0
  2446  00000F                     split_param@i:
  2447                           	callstack 0
  2448  00000F                     ads1114_read_ready@rbuff:
  2449                           	callstack 0
  2450  00000F                     ads1114_read@raw_adc:
  2451                           	callstack 0
  2452  00000F                     i2c_writeBytes_to@wrptr:
  2453                           	callstack 0
  2454  00000F                     lmp91000_get_status@preg:
  2455                           	callstack 0
  2456  00000F                     sht3x_common_read@temp:
  2457                           	callstack 0
  2458  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2459                           	callstack 0
  2460  00000F                     __itoa@num:
  2461                           	callstack 0
  2462  00000F                     ___fltol@f1:
  2463                           	callstack 0
  2464                           
  2465                           ; 4 bytes @ 0xE
  2466  00000F                     	ds	1
  2467  000010                     lmp91000_set_GainRLoad@reg:
  2468                           	callstack 0
  2469  000010                     lmp91000_set_Mode@reg:
  2470                           	callstack 0
  2471  000010                     split_param@cnt:
  2472                           	callstack 0
  2473  000010                     app_usb_task@numBytesRead:
  2474                           	callstack 0
  2475  000010                     __tdiv_to_l_@cntr:
  2476                           	callstack 0
  2477  000010                     lmp91000_set_Reference@buff:
  2478                           	callstack 0
  2479                           
  2480                           ; 2 bytes @ 0xF
  2481  000010                     	ds	1
  2482  000011                     ??__atoi:
  2483  000011                     ??_ads1114_read:
  2484  000011                     ads1114_read_ready@wbuff:
  2485                           	callstack 0
  2486  000011                     i2c_writeBytes_to@len:
  2487                           	callstack 0
  2488  000011                     lmp91000_get_status@wBuff:
  2489                           	callstack 0
  2490  000011                     app_usb_task@i:
  2491                           	callstack 0
  2492  000011                     __tdiv_to_l_@exp1:
  2493                           	callstack 0
  2494  000011                     sht3x_common_read@humi:
  2495                           	callstack 0
  2496  000011                     nvm_write_flash_all@flash:
  2497                           	callstack 0
  2498  000011                     nvm_read_flash_all@flash:
  2499                           	callstack 0
  2500  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2501                           	callstack 0
  2502  000011                     frexp@eptr:
  2503                           	callstack 0
  2504  000011                     sort_uV_slope@max:
  2505                           	callstack 0
  2506  000011                     gasSensor_lowfilter@retval:
  2507                           	callstack 0
  2508                           
  2509                           ; 4 bytes @ 0x10
  2510  000011                     	ds	1
  2511  000012                     ??_years_to_days:
  2512  000012                     i2c_writeBytes_to@address:
  2513                           	callstack 0
  2514  000012                     lmp91000_get_status@rBuff:
  2515                           	callstack 0
  2516  000012                     lmp91000_set_Reference@reg:
  2517                           	callstack 0
  2518  000012                     atcommand_compare@no:
  2519                           	callstack 0
  2520                           
  2521                           ; 1 bytes @ 0x11
  2522  000012                     	ds	1
  2523  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2524  000013                     ??_frexp:
  2525  000013                     ??_sht3x_common_read:
  2526  000013                     ??___fltol:
  2527  000013                     ads1114_SetUp@pga:
  2528                           	callstack 0
  2529  000013                     ads1114_read@wbuff:
  2530                           	callstack 0
  2531  000013                     lmp91000_isReady@rBuff:
  2532                           	callstack 0
  2533  000013                     atcommand_compare@ch:
  2534                           	callstack 0
  2535  000013                     __itoa@str:
  2536                           	callstack 0
  2537                           
  2538                           ; 2 bytes @ 0x12
  2539  000013                     	ds	1
  2540  000014                     ads1114_SetUp@dataRate:
  2541                           	callstack 0
  2542  000014                     ads1114_read@rbuff:
  2543                           	callstack 0
  2544  000014                     check_atcommand@cmd:
  2545                           	callstack 0
  2546  000014                     years_to_days@ret:
  2547                           	callstack 0
  2548                           
  2549                           ; 4 bytes @ 0x13
  2550  000014                     	ds	1
  2551  000015                     ??_USBStdFeatureReqHandler:
  2552  000015                     USBStdSetCfgHandler@i:
  2553                           	callstack 0
  2554  000015                     ads1114_SetUp@mode:
  2555                           	callstack 0
  2556  000015                     __atoi@sign:
  2557                           	callstack 0
  2558  000015                     __itoa@len:
  2559                           	callstack 0
  2560  000015                     sort_uV_slope@uV_slope:
  2561                           	callstack 0
  2562                           
  2563                           ; 4 bytes @ 0x14
  2564  000015                     	ds	1
  2565  000016                     ads1114_SetUp@buff:
  2566                           	callstack 0
  2567  000016                     check_atcommand@chno:
  2568                           	callstack 0
  2569  000016                     sensor_ADC_read@raw_adc:
  2570                           	callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x15
  2573  000016                     	ds	1
  2574  000017                     ___fltol@sign1:
  2575                           	callstack 0
  2576  000017                     USBStdFeatureReqHandler@pUEP:
  2577                           	callstack 0
  2578  000017                     __atoi@ret:
  2579                           	callstack 0
  2580  000017                     __itoa@shifter:
  2581                           	callstack 0
  2582                           
  2583                           ; 4 bytes @ 0x16
  2584  000017                     	ds	1
  2585  000018                     ??_check_atcommand:
  2586  000018                     ?_ymd_to_scalar:
  2587                           	callstack 0
  2588  000018                     ads1114_SetUp@wraddr:
  2589                           	callstack 0
  2590  000018                     ___fltol@exp1:
  2591                           	callstack 0
  2592  000018                     ymd_to_scalar@yr:
  2593                           	callstack 0
  2594                           
  2595                           ; 2 bytes @ 0x17
  2596  000018                     	ds	1
  2597  000019                     ?___xxtofl:
  2598                           	callstack 0
  2599  000019                     USBStdFeatureReqHandler@current_ep_data:
  2600                           	callstack 0
  2601  000019                     sort_uV_slope@Max:
  2602                           	callstack 0
  2603  000019                     ___xxtofl@val:
  2604                           	callstack 0
  2605                           
  2606                           ; 4 bytes @ 0x18
  2607  000019                     	ds	1
  2608  00001A                     check_atcommand@i:
  2609                           	callstack 0
  2610  00001A                     USBStdFeatureReqHandler@p:
  2611                           	callstack 0
  2612  00001A                     ymd_to_scalar@mo:
  2613                           	callstack 0
  2614                           
  2615                           ; 2 bytes @ 0x19
  2616  00001A                     	ds	1
  2617  00001B                     __atoi@p:
  2618                           	callstack 0
  2619  00001B                     __itoa@p:
  2620                           	callstack 0
  2621  00001B                     parse_command@buff:
  2622                           	callstack 0
  2623  00001B                     sht3x_common_read@buff:
  2624                           	callstack 0
  2625                           
  2626                           ; 6 bytes @ 0x1A
  2627  00001B                     	ds	1
  2628  00001C                     ??_USBCtrlEPService:
  2629  00001C                     ymd_to_scalar@day:
  2630                           	callstack 0
  2631                           
  2632                           ; 2 bytes @ 0x1B
  2633  00001C                     	ds	1
  2634  00001D                     ??___xxtofl:
  2635  00001D                     USBDeviceTasks@i:
  2636                           	callstack 0
  2637  00001D                     parse_command@status:
  2638                           	callstack 0
  2639  00001D                     __itoa@n:
  2640                           	callstack 0
  2641  00001D                     sort_uV_slope@Temp:
  2642                           	callstack 0
  2643                           
  2644                           ; 4 bytes @ 0x1C
  2645  00001D                     	ds	1
  2646  00001E                     ??_ymd_to_scalar:
  2647                           
  2648                           ; 1 bytes @ 0x1D
  2649  00001E                     	ds	1
  2650  00001F                     ??_parse_command:
  2651                           
  2652                           ; 1 bytes @ 0x1E
  2653  00001F                     	ds	1
  2654  000020                     parse_command@param:
  2655                           	callstack 0
  2656                           
  2657                           ; 32 bytes @ 0x1F
  2658  000020                     	ds	1
  2659  000021                     ___xxtofl@sign:
  2660                           	callstack 0
  2661  000021                     sort_uV_slope@Min:
  2662                           	callstack 0
  2663                           
  2664                           ; 4 bytes @ 0x20
  2665  000021                     	ds	1
  2666  000022                     ___xxtofl@exp:
  2667                           	callstack 0
  2668  000022                     _ymd_to_scalar$6016:
  2669                           	callstack 0
  2670                           
  2671                           ; 2 bytes @ 0x21
  2672  000022                     	ds	1
  2673  000023                     ___xxtofl@arg:
  2674                           	callstack 0
  2675                           
  2676                           ; 4 bytes @ 0x22
  2677  000023                     	ds	1
  2678  000024                     ymd_to_scalar@scalar:
  2679                           	callstack 0
  2680                           
  2681                           ; 4 bytes @ 0x23
  2682  000024                     	ds	1
  2683  000025                     sort_uV_slope@Mid:
  2684                           	callstack 0
  2685                           
  2686                           ; 4 bytes @ 0x24
  2687  000025                     	ds	2
  2688  000027                     ?___fladd:
  2689                           	callstack 0
  2690  000027                     ?_trunc:
  2691                           	callstack 0
  2692  000027                     ___fladd@b:
  2693                           	callstack 0
  2694  000027                     trunc@x:
  2695                           	callstack 0
  2696                           
  2697                           ; 4 bytes @ 0x26
  2698  000027                     	ds	1
  2699  000028                     ?_mktime:
  2700                           	callstack 0
  2701  000028                     mktime@timeptr:
  2702                           	callstack 0
  2703                           
  2704                           ; 2 bytes @ 0x27
  2705  000028                     	ds	1
  2706  000029                     
  2707                           ; 1 bytes @ 0x28
  2708  000029                     	ds	2
  2709  00002B                     ___fladd@a:
  2710                           	callstack 0
  2711  00002B                     trunc@i:
  2712                           	callstack 0
  2713                           
  2714                           ; 4 bytes @ 0x2A
  2715  00002B                     	ds	1
  2716  00002C                     ??_mktime:
  2717                           
  2718                           ; 1 bytes @ 0x2B
  2719  00002C                     	ds	3
  2720  00002F                     ??___fladd:
  2721  00002F                     trunc@expon:
  2722                           	callstack 0
  2723                           
  2724                           ; 2 bytes @ 0x2E
  2725  00002F                     	ds	3
  2726  000032                     mktime@tt:
  2727                           	callstack 0
  2728                           
  2729                           ; 4 bytes @ 0x31
  2730  000032                     	ds	1
  2731  000033                     ___fladd@signs:
  2732                           	callstack 0
  2733                           
  2734                           ; 1 bytes @ 0x32
  2735  000033                     	ds	1
  2736  000034                     ___fladd@aexp:
  2737                           	callstack 0
  2738                           
  2739                           ; 1 bytes @ 0x33
  2740  000034                     	ds	1
  2741  000035                     ___fladd@bexp:
  2742                           	callstack 0
  2743                           
  2744                           ; 1 bytes @ 0x34
  2745  000035                     	ds	1
  2746  000036                     ?_build_time:
  2747                           	callstack 0
  2748  000036                     ___fladd@grs:
  2749                           	callstack 0
  2750                           
  2751                           ; 1 bytes @ 0x35
  2752  000036                     	ds	1
  2753  000037                     ?___flsub:
  2754                           	callstack 0
  2755  000037                     ___flsub@b:
  2756                           	callstack 0
  2757                           
  2758                           ; 4 bytes @ 0x36
  2759  000037                     	ds	3
  2760  00003A                     ??_build_time:
  2761                           
  2762                           ; 1 bytes @ 0x39
  2763  00003A                     	ds	1
  2764  00003B                     ___flsub@a:
  2765                           	callstack 0
  2766                           
  2767                           ; 4 bytes @ 0x3A
  2768  00003B                     	ds	1
  2769  00003C                     ??_nvm_init:
  2770  00003C                     nvm_clear_all@i:
  2771                           	callstack 0
  2772                           
  2773                           ; 1 bytes @ 0x3B
  2774  00003C                     	ds	3
  2775  00003F                     ?_fabs:
  2776                           	callstack 0
  2777  00003F                     fabs@d:
  2778                           	callstack 0
  2779                           
  2780                           ; 4 bytes @ 0x3E
  2781  00003F                     	ds	1
  2782  000040                     parse_command@retval:
  2783                           	callstack 0
  2784                           
  2785                           ; 1 bytes @ 0x3F
  2786  000040                     	ds	1
  2787  000041                     parse_command@cmd:
  2788                           	callstack 0
  2789                           
  2790                           ; 11 bytes @ 0x40
  2791  000041                     	ds	1
  2792  000042                     nvm_init@pdesc:
  2793                           	callstack 0
  2794                           
  2795                           ; 2 bytes @ 0x41
  2796  000042                     	ds	1
  2797  000043                     ?___flmul:
  2798                           	callstack 0
  2799  000043                     ___flmul@b:
  2800                           	callstack 0
  2801                           
  2802                           ; 4 bytes @ 0x42
  2803  000043                     	ds	1
  2804  000044                     nvm_init@i:
  2805                           	callstack 0
  2806                           
  2807                           ; 1 bytes @ 0x43
  2808  000044                     	ds	1
  2809  000045                     
  2810                           ; 1 bytes @ 0x44
  2811  000045                     	ds	2
  2812  000047                     ___flmul@a:
  2813                           	callstack 0
  2814                           
  2815                           ; 4 bytes @ 0x46
  2816  000047                     	ds	4
  2817  00004B                     ??___flmul:
  2818                           
  2819                           ; 1 bytes @ 0x4A
  2820  00004B                     	ds	1
  2821  00004C                     parse_command@seq:
  2822                           	callstack 0
  2823                           
  2824                           ; 1 bytes @ 0x4B
  2825  00004C                     	ds	1
  2826  00004D                     parse_command@chno:
  2827                           	callstack 0
  2828                           
  2829                           ; 1 bytes @ 0x4C
  2830  00004D                     	ds	1
  2831  00004E                     parse_command@idx:
  2832                           	callstack 0
  2833                           
  2834                           ; 1 bytes @ 0x4D
  2835  00004E                     	ds	1
  2836  00004F                     parse_command@paramidx:
  2837                           	callstack 0
  2838  00004F                     ___flmul@sign:
  2839                           	callstack 0
  2840                           
  2841                           ; 1 bytes @ 0x4E
  2842  00004F                     	ds	1
  2843  000050                     parse_command@cmdidx:
  2844                           	callstack 0
  2845  000050                     ___flmul@aexp:
  2846                           	callstack 0
  2847                           
  2848                           ; 1 bytes @ 0x4F
  2849  000050                     	ds	1
  2850  000051                     parse_command@ch:
  2851                           	callstack 0
  2852  000051                     ___flmul@bexp:
  2853                           	callstack 0
  2854                           
  2855                           ; 1 bytes @ 0x50
  2856  000051                     	ds	1
  2857  000052                     ___flmul@grs:
  2858                           	callstack 0
  2859                           
  2860                           ; 4 bytes @ 0x51
  2861  000052                     	ds	4
  2862  000056                     ___flmul@prod:
  2863                           	callstack 0
  2864                           
  2865                           ; 4 bytes @ 0x55
  2866  000056                     	ds	4
  2867  00005A                     ___flmul@temp:
  2868                           	callstack 0
  2869                           
  2870                           ; 2 bytes @ 0x59
  2871  00005A                     	ds	2
  2872  00005C                     ??_update_command:
  2873  00005C                     ??_sht3x_measure_read:
  2874  00005C                     __ftoa@len:
  2875                           	callstack 0
  2876  00005C                     sensor_temp_fahrenheit@temp:
  2877                           	callstack 0
  2878                           
  2879                           ; 2 bytes @ 0x5B
  2880  00005C                     	ds	1
  2881  00005D                     sht3x_measure_nonblock_read@cmd:
  2882                           	callstack 0
  2883                           
  2884                           ; 2 bytes @ 0x5C
  2885  00005D                     	ds	1
  2886  00005E                     
  2887                           ; 1 bytes @ 0x5D
  2888  00005E                     	ds	1
  2889  00005F                     
  2890                           ; 1 bytes @ 0x5E
  2891 ;;
  2892 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2893 ;;
  2894 ;; *************** function _main *****************
  2895 ;; Defined at:
  2896 ;;		line 140 in file "main.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels required when called: 11
  2916 ;; This function calls:
  2917 ;;		_Board_initialize
  2918 ;;		_InitTimer
  2919 ;;		_SYSTEM_Initialize
  2920 ;;		_USBDeviceInit
  2921 ;;		_USBDeviceTasks
  2922 ;;		_WDT_initialize
  2923 ;;		_app_usb_task
  2924 ;;		_atcommand_task
  2925 ;;		_changeUsbState_task
  2926 ;;		_led_task
  2927 ;;		_sensMeasure_task
  2928 ;;		_sens_ZeroCalib_task
  2929 ;;		_sens_autoCalib_slp_set_task
  2930 ;;		_sens_autoCalib_task
  2931 ;;		_usedtime_task
  2932 ;; This function is called by:
  2933 ;;		Startup code after reset
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text0
  2938  00BC0C                     __ptext0:
  2939                           	callstack 0
  2940  00BC0C                     _main:
  2941                           	callstack 20
  2942  00BC0C                     
  2943                           ;main.c: 142: Board_initialize();
  2944  00BC0C  ECF0  F062         	call	_Board_initialize	;wreg free
  2945  00BC10                     
  2946                           ;main.c: 143: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2947  00BC10  0E00               	movlw	0
  2948  00BC12  EC20  F060         	call	_SYSTEM_Initialize
  2949  00BC16                     
  2950                           ;main.c: 144: USBDeviceInit();
  2951  00BC16  EC32  F046         	call	_USBDeviceInit	;wreg free
  2952  00BC1A                     
  2953                           ;main.c: 145: ;;main.c: 147: InitTimer();
  2954  00BC1A  ECB3  F06A         	call	_InitTimer	;wreg free
  2955  00BC1E                     
  2956                           ;main.c: 148: WDT_initialize();
  2957  00BC1E  EC38  F06B         	call	_WDT_initialize	;wreg free
  2958  00BC22                     l1891:
  2959  00BC22  0004               	clrwdt		;# 
  2960  00BC24                     
  2961                           ;main.c: 166: USBDeviceTasks();
  2962  00BC24  EC49  F037         	call	_USBDeviceTasks	;wreg free
  2963  00BC28                     
  2964                           ;main.c: 168: app_usb_task();
  2965  00BC28  EC96  F05C         	call	_app_usb_task	;wreg free
  2966  00BC2C                     
  2967                           ;main.c: 169: changeUsbState_task();
  2968  00BC2C  EC32  F06A         	call	_changeUsbState_task	;wreg free
  2969  00BC30                     
  2970                           ;main.c: 170: led_task();
  2971  00BC30  EC0D  F03E         	call	_led_task	;wreg free
  2972  00BC34                     
  2973                           ;main.c: 171: sens_ZeroCalib_task();
  2974  00BC34  ECC7  F054         	call	_sens_ZeroCalib_task	;wreg free
  2975  00BC38                     
  2976                           ;main.c: 172: atcommand_task();
  2977  00BC38  EC10  F03D         	call	_atcommand_task	;wreg free
  2978  00BC3C                     
  2979                           ;main.c: 173: sensMeasure_task();
  2980  00BC3C  EC8D  F038         	call	_sensMeasure_task	;wreg free
  2981  00BC40                     
  2982                           ;main.c: 174: usedtime_task();
  2983  00BC40  ECE9  F052         	call	_usedtime_task	;wreg free
  2984  00BC44                     
  2985                           ;main.c: 175: if (g_sens_autoCalib.slpSet_en == ON && g_led_status.isBlink == 0)
  2986  00BC44  0100               	movlb	0	; () banked
  2987  00BC46  05E5               	decf	(_g_sens_autoCalib+2)& (0+255),w,b	;volatile
  2988  00BC48  A4D8               	btfss	status,2,c
  2989  00BC4A  EF29  F05E         	goto	u21811
  2990  00BC4E  EF2B  F05E         	goto	u21810
  2991  00BC52                     u21811:
  2992  00BC52  EF35  F05E         	goto	l19949
  2993  00BC56                     u21810:
  2994  00BC56                     
  2995                           ; BSR set to: 0
  2996  00BC56  51C2               	movf	(_g_led_status+2)& (0+255),w,b
  2997  00BC58  A4D8               	btfss	status,2,c
  2998  00BC5A  EF31  F05E         	goto	u21821
  2999  00BC5E  EF33  F05E         	goto	u21820
  3000  00BC62                     u21821:
  3001  00BC62  EF35  F05E         	goto	l19949
  3002  00BC66                     u21820:
  3003  00BC66                     
  3004                           ; BSR set to: 0
  3005                           ;main.c: 176: sens_autoCalib_slp_set_task();
  3006  00BC66  EC70  F042         	call	_sens_autoCalib_slp_set_task	;wreg free
  3007  00BC6A                     l19949:
  3008                           
  3009                           ;main.c: 177: if (g_nvm.flash.auto_Calib == ON && g_led_status.isBlink == 0)
  3010  00BC6A  0101               	movlb	1	; () banked
  3011  00BC6C  05B1               	decf	(_g_nvm+33)& (0+255),w,b
  3012  00BC6E  A4D8               	btfss	status,2,c
  3013  00BC70  EF3C  F05E         	goto	u21831
  3014  00BC74  EF3E  F05E         	goto	u21830
  3015  00BC78                     u21831:
  3016  00BC78  EF11  F05E         	goto	l1891
  3017  00BC7C                     u21830:
  3018  00BC7C                     
  3019                           ; BSR set to: 1
  3020  00BC7C  0100               	movlb	0	; () banked
  3021  00BC7E  51C2               	movf	(_g_led_status+2)& (0+255),w,b
  3022  00BC80  A4D8               	btfss	status,2,c
  3023  00BC82  EF45  F05E         	goto	u21841
  3024  00BC86  EF47  F05E         	goto	u21840
  3025  00BC8A                     u21841:
  3026  00BC8A  EF11  F05E         	goto	l1891
  3027  00BC8E                     u21840:
  3028  00BC8E                     
  3029                           ; BSR set to: 0
  3030                           ;main.c: 178: sens_autoCalib_task();
  3031  00BC8E  EC9B  F041         	call	_sens_autoCalib_task	;wreg free
  3032  00BC92  EF11  F05E         	goto	l1891
  3033  00BC96  EF43  F010         	goto	start
  3034  00BC9A                     __end_of_main:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _usedtime_task *****************
  3038 ;; Defined at:
  3039 ;;		line 113 in file "main.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 3
  3060 ;; This function calls:
  3061 ;;		_memcpy
  3062 ;;		_nvm_write_flash_all
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text1
  3069  00A5D2                     __ptext1:
  3070                           	callstack 0
  3071  00A5D2                     _usedtime_task:
  3072                           	callstack 27
  3073  00A5D2                     
  3074                           ;main.c: 115: if (g_led_status.isBlink == 1 && g_usedtime_count > 18000) {
  3075  00A5D2  0100               	movlb	0	; () banked
  3076  00A5D4  05C2               	decf	(_g_led_status+2)& (0+255),w,b
  3077  00A5D6  A4D8               	btfss	status,2,c
  3078  00A5D8  EFF0  F052         	goto	u14331
  3079  00A5DC  EFF2  F052         	goto	u14330
  3080  00A5E0                     u14331:
  3081  00A5E0  EF06  F053         	goto	l13841
  3082  00A5E4                     u14330:
  3083  00A5E4                     
  3084                           ; BSR set to: 0
  3085  00A5E4  0101               	movlb	1	; () banked
  3086  00A5E6  5153               	movf	(_g_usedtime_count+3)& (0+255),w,b	;volatile
  3087  00A5E8  1152               	iorwf	(_g_usedtime_count+2)& (0+255),w,b	;volatile
  3088  00A5EA  E10B               	bnz	u14340
  3089  00A5EC  0E51               	movlw	81
  3090  00A5EE  5D50               	subwf	_g_usedtime_count& (0+255),w,b	;volatile
  3091  00A5F0  0E46               	movlw	70
  3092  00A5F2  5951               	subwfb	(_g_usedtime_count+1)& (0+255),w,b	;volatile
  3093  00A5F4  A0D8               	btfss	status,0,c
  3094  00A5F6  EFFF  F052         	goto	u14341
  3095  00A5FA  EF01  F053         	goto	u14340
  3096  00A5FE                     u14341:
  3097  00A5FE  EF06  F053         	goto	l13841
  3098  00A602                     u14340:
  3099  00A602                     
  3100                           ; BSR set to: 1
  3101                           ;main.c: 116: g_led_status.isBlink = 0;
  3102  00A602  0E00               	movlw	0
  3103  00A604  0100               	movlb	0	; () banked
  3104  00A606  6FC2               	movwf	(_g_led_status+2)& (0+255),b
  3105                           
  3106                           ;main.c: 117: g_led_status.seq = LED_ALLOFF;
  3107  00A608  0E09               	movlw	9
  3108  00A60A  6FC0               	movwf	_g_led_status& (0+255),b
  3109  00A60C                     l13841:
  3110                           
  3111                           ;main.c: 119: };main.c: 121: if (g_usedtime_count > 360000) {
  3112  00A60C  0101               	movlb	1	; () banked
  3113  00A60E  5153               	movf	(_g_usedtime_count+3)& (0+255),w,b	;volatile
  3114  00A610  E10D               	bnz	u14350
  3115  00A612  0E41               	movlw	65
  3116  00A614  5D50               	subwf	_g_usedtime_count& (0+255),w,b	;volatile
  3117  00A616  0E7E               	movlw	126
  3118  00A618  5951               	subwfb	(_g_usedtime_count+1)& (0+255),w,b	;volatile
  3119  00A61A  0E05               	movlw	5
  3120  00A61C  5952               	subwfb	(_g_usedtime_count+2)& (0+255),w,b	;volatile
  3121  00A61E  A0D8               	btfss	status,0,c
  3122  00A620  EF14  F053         	goto	u14351
  3123  00A624  EF16  F053         	goto	u14350
  3124  00A628                     u14351:
  3125  00A628  EF61  F053         	goto	l1881
  3126  00A62C                     u14350:
  3127  00A62C                     
  3128                           ; BSR set to: 1
  3129                           ;main.c: 122: g_usedtime_count = 0;
  3130  00A62C  0E00               	movlw	0
  3131  00A62E  6F50               	movwf	_g_usedtime_count& (0+255),b	;volatile
  3132  00A630  0E00               	movlw	0
  3133  00A632  6F51               	movwf	(_g_usedtime_count+1)& (0+255),b	;volatile
  3134  00A634  0E00               	movlw	0
  3135  00A636  6F52               	movwf	(_g_usedtime_count+2)& (0+255),b	;volatile
  3136  00A638  0E00               	movlw	0
  3137  00A63A  6F53               	movwf	(_g_usedtime_count+3)& (0+255),b	;volatile
  3138  00A63C                     
  3139                           ; BSR set to: 1
  3140                           ;main.c: 123: memcpy(g_flash_temp.byte, g_nvm.flash.byte, 72);
  3141  00A63C  0E6D               	movlw	low _g_flash_temp
  3142  00A63E  6E01               	movwf	memcpy@d1^0,c
  3143  00A640  0E03               	movlw	high _g_flash_temp
  3144  00A642  6E02               	movwf	(memcpy@d1+1)^0,c
  3145  00A644  0E91               	movlw	low (_g_nvm+1)
  3146  00A646  6E03               	movwf	memcpy@s1^0,c
  3147  00A648  0E01               	movlw	high (_g_nvm+1)
  3148  00A64A  6E04               	movwf	(memcpy@s1+1)^0,c
  3149  00A64C  0E00               	movlw	0
  3150  00A64E  6E06               	movwf	(memcpy@n+1)^0,c
  3151  00A650  0E48               	movlw	72
  3152  00A652  6E05               	movwf	memcpy@n^0,c
  3153  00A654  ECB0  F065         	call	_memcpy	;wreg free
  3154  00A658                     
  3155                           ;main.c: 124: g_nvm.flash.usedtime++;
  3156  00A658  0E01               	movlw	1
  3157  00A65A  0101               	movlb	1	; () banked
  3158  00A65C  27C9               	addwf	(_g_nvm+57)& (0+255),f,b
  3159  00A65E  0E00               	movlw	0
  3160  00A660  23CA               	addwfc	(_g_nvm+58)& (0+255),f,b
  3161  00A662  23CB               	addwfc	(_g_nvm+59)& (0+255),f,b
  3162  00A664  23CC               	addwfc	(_g_nvm+60)& (0+255),f,b
  3163  00A666                     
  3164                           ; BSR set to: 1
  3165                           ;main.c: 125: if (nvm_write_flash_all(&g_nvm.flash) == 0) {
  3166  00A666  0E91               	movlw	low (_g_nvm+1)
  3167  00A668  6E11               	movwf	nvm_write_flash_all@flash^0,c
  3168  00A66A  0E01               	movlw	high (_g_nvm+1)
  3169  00A66C  6E12               	movwf	(nvm_write_flash_all@flash+1)^0,c
  3170  00A66E  ECBF  F066         	call	_nvm_write_flash_all	;wreg free
  3171  00A672  0900               	iorlw	0
  3172  00A674  A4D8               	btfss	status,2,c
  3173  00A676  EF3F  F053         	goto	u14361
  3174  00A67A  EF41  F053         	goto	u14360
  3175  00A67E                     u14361:
  3176  00A67E  EF4F  F053         	goto	l13853
  3177  00A682                     u14360:
  3178  00A682                     
  3179                           ;main.c: 126: memcpy(g_nvm.flash.byte, g_flash_temp.byte, 72);
  3180  00A682  0E91               	movlw	low (_g_nvm+1)
  3181  00A684  6E01               	movwf	memcpy@d1^0,c
  3182  00A686  0E01               	movlw	high (_g_nvm+1)
  3183  00A688  6E02               	movwf	(memcpy@d1+1)^0,c
  3184  00A68A  0E6D               	movlw	low _g_flash_temp
  3185  00A68C  6E03               	movwf	memcpy@s1^0,c
  3186  00A68E  0E03               	movlw	high _g_flash_temp
  3187  00A690  6E04               	movwf	(memcpy@s1+1)^0,c
  3188  00A692  0E00               	movlw	0
  3189  00A694  6E06               	movwf	(memcpy@n+1)^0,c
  3190  00A696  0E48               	movlw	72
  3191  00A698  6E05               	movwf	memcpy@n^0,c
  3192  00A69A  ECB0  F065         	call	_memcpy	;wreg free
  3193  00A69E                     l13853:
  3194                           
  3195                           ;main.c: 127: };main.c: 128: if (g_nvm.flash.usedtime >= 17520) {
  3196  00A69E  0101               	movlb	1	; () banked
  3197  00A6A0  51CC               	movf	(_g_nvm+60)& (0+255),w,b
  3198  00A6A2  11CB               	iorwf	(_g_nvm+59)& (0+255),w,b
  3199  00A6A4  E10B               	bnz	u14370
  3200  00A6A6  0E70               	movlw	112
  3201  00A6A8  5DC9               	subwf	(_g_nvm+57)& (0+255),w,b
  3202  00A6AA  0E44               	movlw	68
  3203  00A6AC  59CA               	subwfb	(_g_nvm+58)& (0+255),w,b
  3204  00A6AE  A0D8               	btfss	status,0,c
  3205  00A6B0  EF5C  F053         	goto	u14371
  3206  00A6B4  EF5E  F053         	goto	u14370
  3207  00A6B8                     u14371:
  3208  00A6B8  EF61  F053         	goto	l1881
  3209  00A6BC                     u14370:
  3210  00A6BC                     
  3211                           ; BSR set to: 1
  3212                           ;main.c: 129: g_led_status.twoYear = 1;
  3213  00A6BC  0E01               	movlw	1
  3214  00A6BE  0100               	movlb	0	; () banked
  3215  00A6C0  6FC4               	movwf	(_g_led_status+4)& (0+255),b
  3216  00A6C2                     l1881:
  3217  00A6C2  0012               	return		;funcret
  3218  00A6C4                     __end_of_usedtime_task:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _sens_autoCalib_task *****************
  3222 ;; Defined at:
  3223 ;;		line 65 in file "app_sens_autoCalibration.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 4
  3244 ;; This function calls:
  3245 ;;		___fladd
  3246 ;;		___flge
  3247 ;;		_auto_calib_apply
  3248 ;;		_auto_calib_clear
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text2
  3255  008336                     __ptext2:
  3256                           	callstack 0
  3257  008336                     _sens_autoCalib_task:
  3258                           	callstack 26
  3259  008336                     
  3260                           ;app_sens_autoCalibration.c: 67: switch (g_sens_autoCalib.Seq_autoCal)
  3261  008336  EF5B  F042         	goto	l19589
  3262  00833A                     l19553:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;app_sens_autoCalibration.c: 70: g_autoCal_cnt = 0;
  3266  00833A  0E00               	movlw	0
  3267  00833C  0101               	movlb	1	; () banked
  3268  00833E  6F64               	movwf	_g_autoCal_cnt& (0+255),b	;volatile
  3269  008340  0E00               	movlw	0
  3270  008342  6F65               	movwf	(_g_autoCal_cnt+1)& (0+255),b	;volatile
  3271  008344  0E00               	movlw	0
  3272  008346  6F66               	movwf	(_g_autoCal_cnt+2)& (0+255),b	;volatile
  3273  008348  0E00               	movlw	0
  3274  00834A  6F67               	movwf	(_g_autoCal_cnt+3)& (0+255),b	;volatile
  3275                           
  3276                           ;app_sens_autoCalibration.c: 71: g_sens_autoCalib.Seq_autoCal = AUTO_CALIB_READY;
  3277  00834C  0E01               	movlw	1
  3278  00834E  0100               	movlb	0	; () banked
  3279  008350  6FE3               	movwf	_g_sens_autoCalib& (0+255),b	;volatile
  3280                           
  3281                           ;app_sens_autoCalibration.c: 72: break;
  3282  008352  EF6F  F042         	goto	l1545
  3283  008356                     l19555:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;app_sens_autoCalibration.c: 74: if (g_autoCal_cnt >= 6000) {
  3287  008356  0101               	movlb	1	; () banked
  3288  008358  5167               	movf	(_g_autoCal_cnt+3)& (0+255),w,b	;volatile
  3289  00835A  1166               	iorwf	(_g_autoCal_cnt+2)& (0+255),w,b	;volatile
  3290  00835C  E10B               	bnz	u21370
  3291  00835E  0E70               	movlw	112
  3292  008360  5D64               	subwf	_g_autoCal_cnt& (0+255),w,b	;volatile
  3293  008362  0E17               	movlw	23
  3294  008364  5965               	subwfb	(_g_autoCal_cnt+1)& (0+255),w,b	;volatile
  3295  008366  A0D8               	btfss	status,0,c
  3296  008368  EFB8  F041         	goto	u21371
  3297  00836C  EFBA  F041         	goto	u21370
  3298  008370                     u21371:
  3299  008370  EF6F  F042         	goto	l1545
  3300  008374                     u21370:
  3301  008374                     
  3302                           ; BSR set to: 1
  3303                           ;app_sens_autoCalibration.c: 75: g_autoCal_cnt = 0;
  3304  008374  0E00               	movlw	0
  3305  008376  6F64               	movwf	_g_autoCal_cnt& (0+255),b	;volatile
  3306  008378  0E00               	movlw	0
  3307  00837A  6F65               	movwf	(_g_autoCal_cnt+1)& (0+255),b	;volatile
  3308  00837C  0E00               	movlw	0
  3309  00837E  6F66               	movwf	(_g_autoCal_cnt+2)& (0+255),b	;volatile
  3310  008380  0E00               	movlw	0
  3311  008382  6F67               	movwf	(_g_autoCal_cnt+3)& (0+255),b	;volatile
  3312  008384                     
  3313                           ; BSR set to: 1
  3314                           ;app_sens_autoCalibration.c: 76: g_autoCal_cnt2++;
  3315  008384  0100               	movlb	0	; () banked
  3316  008386  2BD0               	incf	_g_autoCal_cnt2& (0+255),f,b	;volatile
  3317  008388                     
  3318                           ; BSR set to: 0
  3319                           ;app_sens_autoCalibration.c: 77: g_sens_autoCalib.Seq_autoCal = AUTO_CALIB_CHECK;
  3320  008388  0E02               	movlw	2
  3321  00838A  6FE3               	movwf	_g_sens_autoCalib& (0+255),b	;volatile
  3322  00838C  EF6F  F042         	goto	l1545
  3323  008390                     l19563:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;app_sens_autoCalibration.c: 80: if (g_linear_reg.slope >= g_nvm.flash.slope_min &&;app_
      +                          sens_autoCalibration.c: 81: g_linear_reg.slope <= g_nvm.flash.slope_max && g_last_value[
      +                          LV_GAS_PPM] <= g_nvm.flash.zeroRange_ppm) {
  3327  008390  C365  F001         	movff	_g_linear_reg+101,___flge@ff1
  3328  008394  C366  F002         	movff	_g_linear_reg+102,___flge@ff1+1
  3329  008398  C367  F003         	movff	_g_linear_reg+103,___flge@ff1+2
  3330  00839C  C368  F004         	movff	_g_linear_reg+104,___flge@ff1+3
  3331  0083A0  C1B3  F005         	movff	_g_nvm+35,___flge@ff2
  3332  0083A4  C1B4  F006         	movff	_g_nvm+36,___flge@ff2+1
  3333  0083A8  C1B5  F007         	movff	_g_nvm+37,___flge@ff2+2
  3334  0083AC  C1B6  F008         	movff	_g_nvm+38,___flge@ff2+3
  3335  0083B0  EC6C  F051         	call	___flge	;wreg free
  3336  0083B4  A0D8               	btfss	status,0,c
  3337  0083B6  EFDF  F041         	goto	u21381
  3338  0083BA  EFE1  F041         	goto	u21380
  3339  0083BE                     u21381:
  3340  0083BE  EF2F  F042         	goto	l19573
  3341  0083C2                     u21380:
  3342  0083C2  C1B7  F001         	movff	_g_nvm+39,___flge@ff1
  3343  0083C6  C1B8  F002         	movff	_g_nvm+40,___flge@ff1+1
  3344  0083CA  C1B9  F003         	movff	_g_nvm+41,___flge@ff1+2
  3345  0083CE  C1BA  F004         	movff	_g_nvm+42,___flge@ff1+3
  3346  0083D2  C365  F005         	movff	_g_linear_reg+101,___flge@ff2
  3347  0083D6  C366  F006         	movff	_g_linear_reg+102,___flge@ff2+1
  3348  0083DA  C367  F007         	movff	_g_linear_reg+103,___flge@ff2+2
  3349  0083DE  C368  F008         	movff	_g_linear_reg+104,___flge@ff2+3
  3350  0083E2  EC6C  F051         	call	___flge	;wreg free
  3351  0083E6  A0D8               	btfss	status,0,c
  3352  0083E8  EFF8  F041         	goto	u21391
  3353  0083EC  EFFA  F041         	goto	u21390
  3354  0083F0                     u21391:
  3355  0083F0  EF2F  F042         	goto	l19573
  3356  0083F4                     u21390:
  3357  0083F4  C1BF  F001         	movff	_g_nvm+47,___flge@ff1
  3358  0083F8  C1C0  F002         	movff	_g_nvm+48,___flge@ff1+1
  3359  0083FC  C1C1  F003         	movff	_g_nvm+49,___flge@ff1+2
  3360  008400  C1C2  F004         	movff	_g_nvm+50,___flge@ff1+3
  3361  008404  C120  F005         	movff	_g_last_value+4,___flge@ff2
  3362  008408  C121  F006         	movff	_g_last_value+5,___flge@ff2+1
  3363  00840C  C122  F007         	movff	_g_last_value+6,___flge@ff2+2
  3364  008410  C123  F008         	movff	_g_last_value+7,___flge@ff2+3
  3365  008414  EC6C  F051         	call	___flge	;wreg free
  3366  008418  A0D8               	btfss	status,0,c
  3367  00841A  EF11  F042         	goto	u21401
  3368  00841E  EF13  F042         	goto	u21400
  3369  008422                     u21401:
  3370  008422  EF2F  F042         	goto	l19573
  3371  008426                     u21400:
  3372  008426                     
  3373                           ;app_sens_autoCalibration.c: 82: g_sens_autoCalib.chk_cnt++;
  3374  008426  0100               	movlb	0	; () banked
  3375  008428  2BEF               	incf	(_g_sens_autoCalib+12)& (0+255),f,b	;volatile
  3376  00842A                     
  3377                           ; BSR set to: 0
  3378                           ;app_sens_autoCalibration.c: 83: g_sens_autoCalib.sumZero_uV += g_last_value[LV_GAS_VOLT
      +                          ];
  3379  00842A  C0F0  F027         	movff	_g_sens_autoCalib+13,___fladd@b	;volatile
  3380  00842E  C0F1  F028         	movff	_g_sens_autoCalib+14,___fladd@b+1	;volatile
  3381  008432  C0F2  F029         	movff	_g_sens_autoCalib+15,___fladd@b+2	;volatile
  3382  008436  C0F3  F02A         	movff	_g_sens_autoCalib+16,___fladd@b+3	;volatile
  3383  00843A  C11C  F02B         	movff	_g_last_value,___fladd@a
  3384  00843E  C11D  F02C         	movff	_g_last_value+1,___fladd@a+1
  3385  008442  C11E  F02D         	movff	_g_last_value+2,___fladd@a+2
  3386  008446  C11F  F02E         	movff	_g_last_value+3,___fladd@a+3
  3387  00844A  EC13  F029         	call	___fladd	;wreg free
  3388  00844E  C027  F0F0         	movff	?___fladd,_g_sens_autoCalib+13	;volatile
  3389  008452  C028  F0F1         	movff	?___fladd+1,_g_sens_autoCalib+14	;volatile
  3390  008456  C029  F0F2         	movff	?___fladd+2,_g_sens_autoCalib+15	;volatile
  3391  00845A  C02A  F0F3         	movff	?___fladd+3,_g_sens_autoCalib+16	;volatile
  3392  00845E                     l19573:
  3393                           
  3394                           ;app_sens_autoCalibration.c: 84: };app_sens_autoCalibration.c: 85: if (g_autoCal_cnt2 ==
      +                           60) {
  3395  00845E  0E3C               	movlw	60
  3396  008460  0100               	movlb	0	; () banked
  3397  008462  19D0               	xorwf	_g_autoCal_cnt2& (0+255),w,b	;volatile
  3398  008464  A4D8               	btfss	status,2,c
  3399  008466  EF37  F042         	goto	u21411
  3400  00846A  EF39  F042         	goto	u21410
  3401  00846E                     u21411:
  3402  00846E  EF49  F042         	goto	l19581
  3403  008472                     u21410:
  3404  008472                     
  3405                           ; BSR set to: 0
  3406                           ;app_sens_autoCalibration.c: 86: if (g_sens_autoCalib.chk_cnt >= 50 ) g_sens_autoCalib.S
      +                          eq_autoCal = AUTO_CALIB;
  3407  008472  0E31               	movlw	49
  3408  008474  65EF               	cpfsgt	(_g_sens_autoCalib+12)& (0+255),b	;volatile
  3409  008476  EF3F  F042         	goto	u21421
  3410  00847A  EF41  F042         	goto	u21420
  3411  00847E                     u21421:
  3412  00847E  EF45  F042         	goto	l19579
  3413  008482                     u21420:
  3414  008482                     
  3415                           ; BSR set to: 0
  3416  008482  0E03               	movlw	3
  3417  008484  6FE3               	movwf	_g_sens_autoCalib& (0+255),b	;volatile
  3418  008486  EF6F  F042         	goto	l1545
  3419  00848A                     l19579:
  3420                           
  3421                           ;app_sens_autoCalibration.c: 87: else auto_calib_clear();
  3422  00848A  EC4D  F067         	call	_auto_calib_clear	;wreg free
  3423  00848E  EF6F  F042         	goto	l1545
  3424  008492                     l19581:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;app_sens_autoCalibration.c: 89: g_autoCal_cnt = 0;
  3428  008492  0E00               	movlw	0
  3429  008494  0101               	movlb	1	; () banked
  3430  008496  6F64               	movwf	_g_autoCal_cnt& (0+255),b	;volatile
  3431  008498  0E00               	movlw	0
  3432  00849A  6F65               	movwf	(_g_autoCal_cnt+1)& (0+255),b	;volatile
  3433  00849C  0E00               	movlw	0
  3434  00849E  6F66               	movwf	(_g_autoCal_cnt+2)& (0+255),b	;volatile
  3435  0084A0  0E00               	movlw	0
  3436  0084A2  6F67               	movwf	(_g_autoCal_cnt+3)& (0+255),b	;volatile
  3437                           
  3438                           ;app_sens_autoCalibration.c: 90: g_sens_autoCalib.Seq_autoCal = AUTO_CALIB_READY;
  3439  0084A4  0E01               	movlw	1
  3440  0084A6  0100               	movlb	0	; () banked
  3441  0084A8  6FE3               	movwf	_g_sens_autoCalib& (0+255),b	;volatile
  3442  0084AA  EF6F  F042         	goto	l1545
  3443  0084AE                     l19583:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;app_sens_autoCalibration.c: 93: auto_calib_apply();
  3447  0084AE  EC4D  F05E         	call	_auto_calib_apply	;wreg free
  3448  0084B2  EF45  F042         	goto	l19579
  3449  0084B6                     l19589:
  3450  0084B6  0100               	movlb	0	; () banked
  3451  0084B8  51E3               	movf	_g_sens_autoCalib& (0+255),w,b	;volatile
  3452                           
  3453                           ; Switch size 1, requested type "simple"
  3454                           ; Number of cases is 4, Range of values is 0 to 3
  3455                           ; switch strategies available:
  3456                           ; Name         Instructions Cycles
  3457                           ; simple_byte           13     7 (average)
  3458                           ;	Chosen strategy is simple_byte
  3459  0084BA  0A00               	xorlw	0	; case 0
  3460  0084BC  B4D8               	btfsc	status,2,c
  3461  0084BE  EF9D  F041         	goto	l19553
  3462  0084C2  0A01               	xorlw	1	; case 1
  3463  0084C4  B4D8               	btfsc	status,2,c
  3464  0084C6  EFAB  F041         	goto	l19555
  3465  0084CA  0A03               	xorlw	3	; case 2
  3466  0084CC  B4D8               	btfsc	status,2,c
  3467  0084CE  EFC8  F041         	goto	l19563
  3468  0084D2  0A01               	xorlw	1	; case 3
  3469  0084D4  B4D8               	btfsc	status,2,c
  3470  0084D6  EF57  F042         	goto	l19583
  3471  0084DA  EF6F  F042         	goto	l1545
  3472  0084DE                     l1545:
  3473  0084DE  0012               	return		;funcret
  3474  0084E0                     __end_of_sens_autoCalib_task:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _auto_calib_clear *****************
  3478 ;; Defined at:
  3479 ;;		line 112 in file "app_sens_autoCalibration.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_sens_autoCalib_task
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text3
  3508  00CE9A                     __ptext3:
  3509                           	callstack 0
  3510  00CE9A                     _auto_calib_clear:
  3511                           	callstack 28
  3512  00CE9A                     
  3513                           ;app_sens_autoCalibration.c: 114: g_autoCal_cnt = 0;
  3514  00CE9A  0E00               	movlw	0
  3515  00CE9C  0101               	movlb	1	; () banked
  3516  00CE9E  6F64               	movwf	_g_autoCal_cnt& (0+255),b	;volatile
  3517  00CEA0  0E00               	movlw	0
  3518  00CEA2  6F65               	movwf	(_g_autoCal_cnt+1)& (0+255),b	;volatile
  3519  00CEA4  0E00               	movlw	0
  3520  00CEA6  6F66               	movwf	(_g_autoCal_cnt+2)& (0+255),b	;volatile
  3521  00CEA8  0E00               	movlw	0
  3522  00CEAA  6F67               	movwf	(_g_autoCal_cnt+3)& (0+255),b	;volatile
  3523                           
  3524                           ;app_sens_autoCalibration.c: 115: g_autoCal_cnt2 = 0;
  3525  00CEAC  0E00               	movlw	0
  3526  00CEAE  0100               	movlb	0	; () banked
  3527  00CEB0  6FD0               	movwf	_g_autoCal_cnt2& (0+255),b	;volatile
  3528                           
  3529                           ;app_sens_autoCalibration.c: 116: g_sens_autoCalib.chk_cnt = 0;
  3530  00CEB2  0E00               	movlw	0
  3531  00CEB4  6FEF               	movwf	(_g_sens_autoCalib+12)& (0+255),b	;volatile
  3532                           
  3533                           ;app_sens_autoCalibration.c: 117: g_sens_autoCalib.sumZero_uV = 0.0f;
  3534  00CEB6  0E00               	movlw	0
  3535  00CEB8  6FF0               	movwf	(_g_sens_autoCalib+13)& (0+255),b	;volatile
  3536  00CEBA  0E00               	movlw	0
  3537  00CEBC  6FF1               	movwf	(_g_sens_autoCalib+14)& (0+255),b	;volatile
  3538  00CEBE  0E00               	movlw	0
  3539  00CEC0  6FF2               	movwf	(_g_sens_autoCalib+15)& (0+255),b	;volatile
  3540  00CEC2  0E00               	movlw	0
  3541  00CEC4  6FF3               	movwf	(_g_sens_autoCalib+16)& (0+255),b	;volatile
  3542                           
  3543                           ;app_sens_autoCalibration.c: 118: g_sens_autoCalib.avgZero_uV = 0.0f;
  3544  00CEC6  0E00               	movlw	0
  3545  00CEC8  6FF4               	movwf	(_g_sens_autoCalib+17)& (0+255),b	;volatile
  3546  00CECA  0E00               	movlw	0
  3547  00CECC  6FF5               	movwf	(_g_sens_autoCalib+18)& (0+255),b	;volatile
  3548  00CECE  0E00               	movlw	0
  3549  00CED0  6FF6               	movwf	(_g_sens_autoCalib+19)& (0+255),b	;volatile
  3550  00CED2  0E00               	movlw	0
  3551  00CED4  6FF7               	movwf	(_g_sens_autoCalib+20)& (0+255),b	;volatile
  3552                           
  3553                           ;app_sens_autoCalibration.c: 119: g_sens_autoCalib.Seq_autoCal = AUTO_CALIB_READY;
  3554  00CED6  0E01               	movlw	1
  3555  00CED8  6FE3               	movwf	_g_sens_autoCalib& (0+255),b	;volatile
  3556  00CEDA                     
  3557                           ; BSR set to: 0
  3558  00CEDA  0012               	return		;funcret
  3559  00CEDC                     __end_of_auto_calib_clear:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _auto_calib_apply *****************
  3563 ;; Defined at:
  3564 ;;		line 104 in file "app_sens_autoCalibration.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 3
  3585 ;; This function calls:
  3586 ;;		___fldiv
  3587 ;;		___flsub
  3588 ;;		___xxtofl
  3589 ;;		_nvm_write_flash_all
  3590 ;; This function is called by:
  3591 ;;		_sens_autoCalib_task
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text4
  3596  00BC9A                     __ptext4:
  3597                           	callstack 0
  3598  00BC9A                     _auto_calib_apply:
  3599                           	callstack 26
  3600  00BC9A                     
  3601                           ;app_sens_autoCalibration.c: 106: g_sens_autoCalib.avgZero_uV = g_sens_autoCalib.sumZero
      +                          _uV / g_sens_autoCalib.chk_cnt;
  3602  00BC9A  C0F0  F060         	movff	_g_sens_autoCalib+13,___fldiv@b	;volatile
  3603  00BC9E  C0F1  F061         	movff	_g_sens_autoCalib+14,___fldiv@b+1	;volatile
  3604  00BCA2  C0F2  F062         	movff	_g_sens_autoCalib+15,___fldiv@b+2	;volatile
  3605  00BCA6  C0F3  F063         	movff	_g_sens_autoCalib+16,___fldiv@b+3	;volatile
  3606  00BCAA  0100               	movlb	0	; () banked
  3607  00BCAC  51EF               	movf	(_g_sens_autoCalib+12)& (0+255),w,b	;volatile
  3608  00BCAE  6E19               	movwf	___xxtofl@val^0,c
  3609  00BCB0  6A1A               	clrf	(___xxtofl@val+1)^0,c
  3610  00BCB2  6A1B               	clrf	(___xxtofl@val+2)^0,c
  3611  00BCB4  6A1C               	clrf	(___xxtofl@val+3)^0,c
  3612  00BCB6  0E00               	movlw	0
  3613  00BCB8  ECC1  F040         	call	___xxtofl
  3614  00BCBC  C019  F064         	movff	?___xxtofl,___fldiv@a
  3615  00BCC0  C01A  F065         	movff	?___xxtofl+1,___fldiv@a+1
  3616  00BCC4  C01B  F066         	movff	?___xxtofl+2,___fldiv@a+2
  3617  00BCC8  C01C  F067         	movff	?___xxtofl+3,___fldiv@a+3
  3618  00BCCC  EC96  F02F         	call	___fldiv	;wreg free
  3619  00BCD0  C060  F0F4         	movff	?___fldiv,_g_sens_autoCalib+17	;volatile
  3620  00BCD4  C061  F0F5         	movff	?___fldiv+1,_g_sens_autoCalib+18	;volatile
  3621  00BCD8  C062  F0F6         	movff	?___fldiv+2,_g_sens_autoCalib+19	;volatile
  3622  00BCDC  C063  F0F7         	movff	?___fldiv+3,_g_sens_autoCalib+20	;volatile
  3623                           
  3624                           ;app_sens_autoCalibration.c: 107: g_nvm.flash.zeroShift_uV = (g_sens_autoCalib.avgZero_u
      +                          V - g_nvm.flash.baseLine_uV);
  3625  00BCE0  C0F4  F037         	movff	_g_sens_autoCalib+17,___flsub@b	;volatile
  3626  00BCE4  C0F5  F038         	movff	_g_sens_autoCalib+18,___flsub@b+1	;volatile
  3627  00BCE8  C0F6  F039         	movff	_g_sens_autoCalib+19,___flsub@b+2	;volatile
  3628  00BCEC  C0F7  F03A         	movff	_g_sens_autoCalib+20,___flsub@b+3	;volatile
  3629  00BCF0  C195  F03B         	movff	_g_nvm+5,___flsub@a
  3630  00BCF4  C196  F03C         	movff	_g_nvm+6,___flsub@a+1
  3631  00BCF8  C197  F03D         	movff	_g_nvm+7,___flsub@a+2
  3632  00BCFC  C198  F03E         	movff	_g_nvm+8,___flsub@a+3
  3633  00BD00  EC08  F067         	call	___flsub	;wreg free
  3634  00BD04  C037  F1BB         	movff	?___flsub,_g_nvm+43
  3635  00BD08  C038  F1BC         	movff	?___flsub+1,_g_nvm+44
  3636  00BD0C  C039  F1BD         	movff	?___flsub+2,_g_nvm+45
  3637  00BD10  C03A  F1BE         	movff	?___flsub+3,_g_nvm+46
  3638  00BD14                     
  3639                           ;app_sens_autoCalibration.c: 108: g_nvm.flash.autoCalib_cnt++;
  3640  00BD14  0101               	movlb	1	; () banked
  3641  00BD16  4BC3               	infsnz	(_g_nvm+51)& (0+255),f,b
  3642  00BD18  2BC4               	incf	(_g_nvm+52)& (0+255),f,b
  3643  00BD1A                     
  3644                           ; BSR set to: 1
  3645                           ;app_sens_autoCalibration.c: 109: nvm_write_flash_all(&g_nvm.flash);
  3646  00BD1A  0E91               	movlw	low (_g_nvm+1)
  3647  00BD1C  6E11               	movwf	nvm_write_flash_all@flash^0,c
  3648  00BD1E  0E01               	movlw	high (_g_nvm+1)
  3649  00BD20  6E12               	movwf	(nvm_write_flash_all@flash+1)^0,c
  3650  00BD22  ECBF  F066         	call	_nvm_write_flash_all	;wreg free
  3651  00BD26  0012               	return		;funcret
  3652  00BD28                     __end_of_auto_calib_apply:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _sens_autoCalib_slp_set_task *****************
  3656 ;; Defined at:
  3657 ;;		line 122 in file "app_sens_autoCalibration.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;Total ram usage:        0 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 3
  3678 ;; This function calls:
  3679 ;;		_nvm_write_flash_all
  3680 ;;		_sort_uV_slope
  3681 ;;		_write_command
  3682 ;; This function is called by:
  3683 ;;		_main
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text5
  3688  0084E0                     __ptext5:
  3689                           	callstack 0
  3690  0084E0                     _sens_autoCalib_slp_set_task:
  3691                           	callstack 27
  3692  0084E0                     
  3693                           ;app_sens_autoCalibration.c: 124: switch (g_sens_autoCalib.Seq_slpSet)
  3694  0084E0  EF26  F043         	goto	l13667
  3695  0084E4                     l13635:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;app_sens_autoCalibration.c: 127: g_slpSet_cnt = 0;
  3699  0084E4  0E00               	movlw	0
  3700  0084E6  0101               	movlb	1	; () banked
  3701  0084E8  6F60               	movwf	_g_slpSet_cnt& (0+255),b	;volatile
  3702  0084EA  0E00               	movlw	0
  3703  0084EC  6F61               	movwf	(_g_slpSet_cnt+1)& (0+255),b	;volatile
  3704  0084EE  0E00               	movlw	0
  3705  0084F0  6F62               	movwf	(_g_slpSet_cnt+2)& (0+255),b	;volatile
  3706  0084F2  0E00               	movlw	0
  3707  0084F4  6F63               	movwf	(_g_slpSet_cnt+3)& (0+255),b	;volatile
  3708                           
  3709                           ;app_sens_autoCalibration.c: 128: g_sens_autoCalib.led_slpSet = ON;
  3710  0084F6  0E01               	movlw	1
  3711  0084F8  0100               	movlb	0	; () banked
  3712  0084FA  6FE6               	movwf	(_g_sens_autoCalib+3)& (0+255),b	;volatile
  3713                           
  3714                           ;app_sens_autoCalibration.c: 129: g_sens_autoCalib.Seq_slpSet = SLOPE_SET_LED;
  3715  0084FC  0E01               	movlw	1
  3716  0084FE  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
  3717                           
  3718                           ;app_sens_autoCalibration.c: 130: break;
  3719  008500  EF42  F043         	goto	l1567
  3720  008504                     l13637:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;app_sens_autoCalibration.c: 132: if (g_slpSet_cnt >= 50) {
  3724  008504  0101               	movlb	1	; () banked
  3725  008506  5163               	movf	(_g_slpSet_cnt+3)& (0+255),w,b	;volatile
  3726  008508  1162               	iorwf	(_g_slpSet_cnt+2)& (0+255),w,b	;volatile
  3727  00850A  1161               	iorwf	(_g_slpSet_cnt+1)& (0+255),w,b	;volatile
  3728  00850C  E109               	bnz	u14140
  3729  00850E  0E32               	movlw	50
  3730  008510  5D60               	subwf	_g_slpSet_cnt& (0+255),w,b	;volatile
  3731  008512  A0D8               	btfss	status,0,c
  3732  008514  EF8E  F042         	goto	u14141
  3733  008518  EF90  F042         	goto	u14140
  3734  00851C                     u14141:
  3735  00851C  EF42  F043         	goto	l1567
  3736  008520                     u14140:
  3737  008520                     
  3738                           ; BSR set to: 1
  3739                           ;app_sens_autoCalibration.c: 133: g_slpSet_cnt = 0;
  3740  008520  0E00               	movlw	0
  3741  008522  6F60               	movwf	_g_slpSet_cnt& (0+255),b	;volatile
  3742  008524  0E00               	movlw	0
  3743  008526  6F61               	movwf	(_g_slpSet_cnt+1)& (0+255),b	;volatile
  3744  008528  0E00               	movlw	0
  3745  00852A  6F62               	movwf	(_g_slpSet_cnt+2)& (0+255),b	;volatile
  3746  00852C  0E00               	movlw	0
  3747  00852E  6F63               	movwf	(_g_slpSet_cnt+3)& (0+255),b	;volatile
  3748                           
  3749                           ;app_sens_autoCalibration.c: 134: g_led_status.seq = LED_ZEROCAL;
  3750  008530  0E06               	movlw	6
  3751  008532  0100               	movlb	0	; () banked
  3752  008534  6FC0               	movwf	_g_led_status& (0+255),b
  3753                           
  3754                           ;app_sens_autoCalibration.c: 135: g_led_status.last_state = LED_NOTHING;
  3755  008536  0E0A               	movlw	10
  3756  008538  6FC1               	movwf	(_g_led_status+1)& (0+255),b
  3757                           
  3758                           ;app_sens_autoCalibration.c: 136: g_sens_autoCalib.Seq_slpSet = SLOPE_SET_READY;
  3759  00853A  0E02               	movlw	2
  3760  00853C  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
  3761  00853E  EF42  F043         	goto	l1567
  3762  008542                     l13641:
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;app_sens_autoCalibration.c: 139: if (g_slpSet_cnt >= 100) {
  3766  008542  0101               	movlb	1	; () banked
  3767  008544  5163               	movf	(_g_slpSet_cnt+3)& (0+255),w,b	;volatile
  3768  008546  1162               	iorwf	(_g_slpSet_cnt+2)& (0+255),w,b	;volatile
  3769  008548  1161               	iorwf	(_g_slpSet_cnt+1)& (0+255),w,b	;volatile
  3770  00854A  E109               	bnz	u14150
  3771  00854C  0E64               	movlw	100
  3772  00854E  5D60               	subwf	_g_slpSet_cnt& (0+255),w,b	;volatile
  3773  008550  A0D8               	btfss	status,0,c
  3774  008552  EFAD  F042         	goto	u14151
  3775  008556  EFAF  F042         	goto	u14150
  3776  00855A                     u14151:
  3777  00855A  EF42  F043         	goto	l1567
  3778  00855E                     u14150:
  3779  00855E                     
  3780                           ; BSR set to: 1
  3781                           ;app_sens_autoCalibration.c: 140: g_slpSet_cnt2++;
  3782  00855E  4B86               	infsnz	_g_slpSet_cnt2& (0+255),f,b	;volatile
  3783  008560  2B87               	incf	(_g_slpSet_cnt2+1)& (0+255),f,b	;volatile
  3784  008562                     
  3785                           ; BSR set to: 1
  3786                           ;app_sens_autoCalibration.c: 141: g_sens_autoCalib.Seq_slpSet = SLOPE_SAVE;
  3787  008562  0E03               	movlw	3
  3788  008564  0100               	movlb	0	; () banked
  3789  008566  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
  3790  008568  EF42  F043         	goto	l1567
  3791  00856C                     l13647:
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;app_sens_autoCalibration.c: 144: sort_uV_slope(g_sens_autoCalib.slope_min, g_sens_autoC
      +                          alib.slope_max, g_linear_reg.slope);
  3795  00856C  C0E7  F00D         	movff	_g_sens_autoCalib+4,sort_uV_slope@min	;volatile
  3796  008570  C0E8  F00E         	movff	_g_sens_autoCalib+5,sort_uV_slope@min+1	;volatile
  3797  008574  C0E9  F00F         	movff	_g_sens_autoCalib+6,sort_uV_slope@min+2	;volatile
  3798  008578  C0EA  F010         	movff	_g_sens_autoCalib+7,sort_uV_slope@min+3	;volatile
  3799  00857C  C0EB  F011         	movff	_g_sens_autoCalib+8,sort_uV_slope@max	;volatile
  3800  008580  C0EC  F012         	movff	_g_sens_autoCalib+9,sort_uV_slope@max+1	;volatile
  3801  008584  C0ED  F013         	movff	_g_sens_autoCalib+10,sort_uV_slope@max+2	;volatile
  3802  008588  C0EE  F014         	movff	_g_sens_autoCalib+11,sort_uV_slope@max+3	;volatile
  3803  00858C  C365  F015         	movff	_g_linear_reg+101,sort_uV_slope@uV_slope
  3804  008590  C366  F016         	movff	_g_linear_reg+102,sort_uV_slope@uV_slope+1
  3805  008594  C367  F017         	movff	_g_linear_reg+103,sort_uV_slope@uV_slope+2
  3806  008598  C368  F018         	movff	_g_linear_reg+104,sort_uV_slope@uV_slope+3
  3807  00859C  EC07  F044         	call	_sort_uV_slope	;wreg free
  3808  0085A0                     
  3809                           ;app_sens_autoCalibration.c: 145: if (g_slpSet_cnt2 >= 500)
  3810  0085A0  0EF4               	movlw	244
  3811  0085A2  0101               	movlb	1	; () banked
  3812  0085A4  5D86               	subwf	_g_slpSet_cnt2& (0+255),w,b	;volatile
  3813  0085A6  0E01               	movlw	1
  3814  0085A8  5987               	subwfb	(_g_slpSet_cnt2+1)& (0+255),w,b	;volatile
  3815  0085AA  A0D8               	btfss	status,0,c
  3816  0085AC  EFDA  F042         	goto	u14161
  3817  0085B0  EFDC  F042         	goto	u14160
  3818  0085B4                     u14161:
  3819  0085B4  EFE1  F042         	goto	l13653
  3820  0085B8                     u14160:
  3821  0085B8                     
  3822                           ; BSR set to: 1
  3823                           ;app_sens_autoCalibration.c: 146: g_sens_autoCalib.Seq_slpSet = SLOPE_SET;
  3824  0085B8  0E04               	movlw	4
  3825  0085BA  0100               	movlb	0	; () banked
  3826  0085BC  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
  3827  0085BE  EF42  F043         	goto	l1567
  3828  0085C2                     l13653:
  3829                           
  3830                           ; BSR set to: 1
  3831                           ;app_sens_autoCalibration.c: 147: else {;app_sens_autoCalibration.c: 148: g_slpSet_cnt =
      +                           0;
  3832  0085C2  0E00               	movlw	0
  3833  0085C4  6F60               	movwf	_g_slpSet_cnt& (0+255),b	;volatile
  3834  0085C6  0E00               	movlw	0
  3835  0085C8  6F61               	movwf	(_g_slpSet_cnt+1)& (0+255),b	;volatile
  3836  0085CA  0E00               	movlw	0
  3837  0085CC  6F62               	movwf	(_g_slpSet_cnt+2)& (0+255),b	;volatile
  3838  0085CE  0E00               	movlw	0
  3839  0085D0  6F63               	movwf	(_g_slpSet_cnt+3)& (0+255),b	;volatile
  3840                           
  3841                           ;app_sens_autoCalibration.c: 149: g_sens_autoCalib.Seq_slpSet = SLOPE_SET_READY;
  3842  0085D2  0E02               	movlw	2
  3843  0085D4  0100               	movlb	0	; () banked
  3844  0085D6  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
  3845  0085D8  EF42  F043         	goto	l1567
  3846  0085DC                     l1564:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;app_sens_autoCalibration.c: 152: g_nvm.flash.slope_min = g_sens_autoCalib.slope_min;
  3850  0085DC  C0E7  F1B3         	movff	_g_sens_autoCalib+4,_g_nvm+35	;volatile
  3851  0085E0  C0E8  F1B4         	movff	_g_sens_autoCalib+5,_g_nvm+36	;volatile
  3852  0085E4  C0E9  F1B5         	movff	_g_sens_autoCalib+6,_g_nvm+37	;volatile
  3853  0085E8  C0EA  F1B6         	movff	_g_sens_autoCalib+7,_g_nvm+38	;volatile
  3854                           
  3855                           ;app_sens_autoCalibration.c: 153: g_nvm.flash.slope_max = g_sens_autoCalib.slope_max;
  3856  0085EC  C0EB  F1B7         	movff	_g_sens_autoCalib+8,_g_nvm+39	;volatile
  3857  0085F0  C0EC  F1B8         	movff	_g_sens_autoCalib+9,_g_nvm+40	;volatile
  3858  0085F4  C0ED  F1B9         	movff	_g_sens_autoCalib+10,_g_nvm+41	;volatile
  3859  0085F8  C0EE  F1BA         	movff	_g_sens_autoCalib+11,_g_nvm+42	;volatile
  3860  0085FC                     
  3861                           ; BSR set to: 0
  3862                           ;app_sens_autoCalibration.c: 154: if (nvm_write_flash_all(&g_nvm.flash)) {
  3863  0085FC  0E91               	movlw	low (_g_nvm+1)
  3864  0085FE  6E11               	movwf	nvm_write_flash_all@flash^0,c
  3865  008600  0E01               	movlw	high (_g_nvm+1)
  3866  008602  6E12               	movwf	(nvm_write_flash_all@flash+1)^0,c
  3867  008604  ECBF  F066         	call	_nvm_write_flash_all	;wreg free
  3868  008608  0900               	iorlw	0
  3869  00860A  B4D8               	btfsc	status,2,c
  3870  00860C  EF0A  F043         	goto	u14171
  3871  008610  EF0C  F043         	goto	u14170
  3872  008614                     u14171:
  3873  008614  EF15  F043         	goto	l13661
  3874  008618                     u14170:
  3875  008618                     
  3876                           ;app_sens_autoCalibration.c: 155: g_led_status.seq = LED_ZEROCAL_END;
  3877  008618  0E07               	movlw	7
  3878  00861A  0100               	movlb	0	; () banked
  3879  00861C  6FC0               	movwf	_g_led_status& (0+255),b
  3880  00861E                     
  3881                           ; BSR set to: 0
  3882                           ;app_sens_autoCalibration.c: 156: write_command("ATACSS\r\n");
  3883  00861E  0E9D               	movlw	low STR_53
  3884  008620  6E08               	movwf	write_command@buff^0,c
  3885  008622  0E23               	movlw	high STR_53
  3886  008624  6E09               	movwf	(write_command@buff+1)^0,c
  3887  008626  EC3D  F069         	call	_write_command	;wreg free
  3888  00862A                     l13661:
  3889                           
  3890                           ;app_sens_autoCalibration.c: 157: } g_sens_autoCalib.Seq_slpSet = SLOPE_SET_END;
  3891  00862A  0E05               	movlw	5
  3892  00862C  0100               	movlb	0	; () banked
  3893  00862E  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
  3894                           
  3895                           ;app_sens_autoCalibration.c: 158: break;
  3896  008630  EF42  F043         	goto	l1567
  3897  008634                     l13663:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;app_sens_autoCalibration.c: 160: g_slpSet_cnt2 = 0;
  3901  008634  0E00               	movlw	0
  3902  008636  0101               	movlb	1	; () banked
  3903  008638  6F87               	movwf	(_g_slpSet_cnt2+1)& (0+255),b	;volatile
  3904  00863A  0E00               	movlw	0
  3905  00863C  6F86               	movwf	_g_slpSet_cnt2& (0+255),b	;volatile
  3906                           
  3907                           ;app_sens_autoCalibration.c: 161: g_sens_autoCalib.slpSet_en = OFF;
  3908  00863E  0E00               	movlw	0
  3909  008640  0100               	movlb	0	; () banked
  3910  008642  6FE5               	movwf	(_g_sens_autoCalib+2)& (0+255),b	;volatile
  3911                           
  3912                           ;app_sens_autoCalibration.c: 162: g_sens_autoCalib.Seq_slpSet = SLOPE_SET_INIT;
  3913  008644  0E00               	movlw	0
  3914  008646  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
  3915                           
  3916                           ;app_sens_autoCalibration.c: 163: break;
  3917  008648  EF42  F043         	goto	l1567
  3918  00864C                     l13667:
  3919  00864C  0100               	movlb	0	; () banked
  3920  00864E  51E4               	movf	(_g_sens_autoCalib+1)& (0+255),w,b	;volatile
  3921                           
  3922                           ; Switch size 1, requested type "simple"
  3923                           ; Number of cases is 6, Range of values is 0 to 5
  3924                           ; switch strategies available:
  3925                           ; Name         Instructions Cycles
  3926                           ; simple_byte           19    10 (average)
  3927                           ;	Chosen strategy is simple_byte
  3928  008650  0A00               	xorlw	0	; case 0
  3929  008652  B4D8               	btfsc	status,2,c
  3930  008654  EF72  F042         	goto	l13635
  3931  008658  0A01               	xorlw	1	; case 1
  3932  00865A  B4D8               	btfsc	status,2,c
  3933  00865C  EF82  F042         	goto	l13637
  3934  008660  0A03               	xorlw	3	; case 2
  3935  008662  B4D8               	btfsc	status,2,c
  3936  008664  EFA1  F042         	goto	l13641
  3937  008668  0A01               	xorlw	1	; case 3
  3938  00866A  B4D8               	btfsc	status,2,c
  3939  00866C  EFB6  F042         	goto	l13647
  3940  008670  0A07               	xorlw	7	; case 4
  3941  008672  B4D8               	btfsc	status,2,c
  3942  008674  EFEE  F042         	goto	l1564
  3943  008678  0A01               	xorlw	1	; case 5
  3944  00867A  B4D8               	btfsc	status,2,c
  3945  00867C  EF1A  F043         	goto	l13663
  3946  008680  EF42  F043         	goto	l1567
  3947  008684                     l1567:
  3948  008684  0012               	return		;funcret
  3949  008686                     __end_of_sens_autoCalib_slp_set_task:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _sort_uV_slope *****************
  3953 ;; Defined at:
  3954 ;;		line 167 in file "app_sens_autoCalibration.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  min             4   12[COMRAM] float 
  3957 ;;  max             4   16[COMRAM] float 
  3958 ;;  uV_slope        4   20[COMRAM] float 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  Mid             4   36[COMRAM] float 
  3961 ;;  Min             4   32[COMRAM] float 
  3962 ;;  Temp            4   28[COMRAM] float 
  3963 ;;  Max             4   24[COMRAM] float 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3973 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3976 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3977 ;;Total ram usage:       28 bytes
  3978 ;; Hardware stack levels used: 1
  3979 ;; Hardware stack levels required when called: 2
  3980 ;; This function calls:
  3981 ;;		___flge
  3982 ;; This function is called by:
  3983 ;;		_sens_autoCalib_slp_set_task
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text6
  3988  00880E                     __ptext6:
  3989                           	callstack 0
  3990  00880E                     _sort_uV_slope:
  3991                           	callstack 27
  3992  00880E                     
  3993                           ;app_sens_autoCalibration.c: 169: float Min, Mid, Max, Temp;;app_sens_autoCalibration.c:
      +                           170: Min = min;
  3994  00880E  C00D  F021         	movff	sort_uV_slope@min,sort_uV_slope@Min
  3995  008812  C00E  F022         	movff	sort_uV_slope@min+1,sort_uV_slope@Min+1
  3996  008816  C00F  F023         	movff	sort_uV_slope@min+2,sort_uV_slope@Min+2
  3997  00881A  C010  F024         	movff	sort_uV_slope@min+3,sort_uV_slope@Min+3
  3998                           
  3999                           ;app_sens_autoCalibration.c: 171: Mid = uV_slope;
  4000  00881E  C015  F025         	movff	sort_uV_slope@uV_slope,sort_uV_slope@Mid
  4001  008822  C016  F026         	movff	sort_uV_slope@uV_slope+1,sort_uV_slope@Mid+1
  4002  008826  C017  F027         	movff	sort_uV_slope@uV_slope+2,sort_uV_slope@Mid+2
  4003  00882A  C018  F028         	movff	sort_uV_slope@uV_slope+3,sort_uV_slope@Mid+3
  4004                           
  4005                           ;app_sens_autoCalibration.c: 172: Max = max;
  4006  00882E  C011  F019         	movff	sort_uV_slope@max,sort_uV_slope@Max
  4007  008832  C012  F01A         	movff	sort_uV_slope@max+1,sort_uV_slope@Max+1
  4008  008836  C013  F01B         	movff	sort_uV_slope@max+2,sort_uV_slope@Max+2
  4009  00883A  C014  F01C         	movff	sort_uV_slope@max+3,sort_uV_slope@Max+3
  4010  00883E                     
  4011                           ;app_sens_autoCalibration.c: 174: if (Min >= Mid) {
  4012  00883E  C021  F001         	movff	sort_uV_slope@Min,___flge@ff1
  4013  008842  C022  F002         	movff	sort_uV_slope@Min+1,___flge@ff1+1
  4014  008846  C023  F003         	movff	sort_uV_slope@Min+2,___flge@ff1+2
  4015  00884A  C024  F004         	movff	sort_uV_slope@Min+3,___flge@ff1+3
  4016  00884E  C025  F005         	movff	sort_uV_slope@Mid,___flge@ff2
  4017  008852  C026  F006         	movff	sort_uV_slope@Mid+1,___flge@ff2+1
  4018  008856  C027  F007         	movff	sort_uV_slope@Mid+2,___flge@ff2+2
  4019  00885A  C028  F008         	movff	sort_uV_slope@Mid+3,___flge@ff2+3
  4020  00885E  EC6C  F051         	call	___flge	;wreg free
  4021  008862  A0D8               	btfss	status,0,c
  4022  008864  EF36  F044         	goto	u13491
  4023  008868  EF38  F044         	goto	u13490
  4024  00886C                     u13491:
  4025  00886C  EF50  F044         	goto	l13169
  4026  008870                     u13490:
  4027  008870                     
  4028                           ;app_sens_autoCalibration.c: 175: Temp = Mid;
  4029  008870  C025  F01D         	movff	sort_uV_slope@Mid,sort_uV_slope@Temp
  4030  008874  C026  F01E         	movff	sort_uV_slope@Mid+1,sort_uV_slope@Temp+1
  4031  008878  C027  F01F         	movff	sort_uV_slope@Mid+2,sort_uV_slope@Temp+2
  4032  00887C  C028  F020         	movff	sort_uV_slope@Mid+3,sort_uV_slope@Temp+3
  4033                           
  4034                           ;app_sens_autoCalibration.c: 176: Mid = Min;
  4035  008880  C021  F025         	movff	sort_uV_slope@Min,sort_uV_slope@Mid
  4036  008884  C022  F026         	movff	sort_uV_slope@Min+1,sort_uV_slope@Mid+1
  4037  008888  C023  F027         	movff	sort_uV_slope@Min+2,sort_uV_slope@Mid+2
  4038  00888C  C024  F028         	movff	sort_uV_slope@Min+3,sort_uV_slope@Mid+3
  4039                           
  4040                           ;app_sens_autoCalibration.c: 177: Min = Temp;
  4041  008890  C01D  F021         	movff	sort_uV_slope@Temp,sort_uV_slope@Min
  4042  008894  C01E  F022         	movff	sort_uV_slope@Temp+1,sort_uV_slope@Min+1
  4043  008898  C01F  F023         	movff	sort_uV_slope@Temp+2,sort_uV_slope@Min+2
  4044  00889C  C020  F024         	movff	sort_uV_slope@Temp+3,sort_uV_slope@Min+3
  4045  0088A0                     l13169:
  4046                           
  4047                           ;app_sens_autoCalibration.c: 178: };app_sens_autoCalibration.c: 179: if (Mid >= Max) {
  4048  0088A0  C025  F001         	movff	sort_uV_slope@Mid,___flge@ff1
  4049  0088A4  C026  F002         	movff	sort_uV_slope@Mid+1,___flge@ff1+1
  4050  0088A8  C027  F003         	movff	sort_uV_slope@Mid+2,___flge@ff1+2
  4051  0088AC  C028  F004         	movff	sort_uV_slope@Mid+3,___flge@ff1+3
  4052  0088B0  C019  F005         	movff	sort_uV_slope@Max,___flge@ff2
  4053  0088B4  C01A  F006         	movff	sort_uV_slope@Max+1,___flge@ff2+1
  4054  0088B8  C01B  F007         	movff	sort_uV_slope@Max+2,___flge@ff2+2
  4055  0088BC  C01C  F008         	movff	sort_uV_slope@Max+3,___flge@ff2+3
  4056  0088C0  EC6C  F051         	call	___flge	;wreg free
  4057  0088C4  A0D8               	btfss	status,0,c
  4058  0088C6  EF67  F044         	goto	u13501
  4059  0088CA  EF69  F044         	goto	u13500
  4060  0088CE                     u13501:
  4061  0088CE  EF81  F044         	goto	l13173
  4062  0088D2                     u13500:
  4063  0088D2                     
  4064                           ;app_sens_autoCalibration.c: 180: Temp = Max;
  4065  0088D2  C019  F01D         	movff	sort_uV_slope@Max,sort_uV_slope@Temp
  4066  0088D6  C01A  F01E         	movff	sort_uV_slope@Max+1,sort_uV_slope@Temp+1
  4067  0088DA  C01B  F01F         	movff	sort_uV_slope@Max+2,sort_uV_slope@Temp+2
  4068  0088DE  C01C  F020         	movff	sort_uV_slope@Max+3,sort_uV_slope@Temp+3
  4069                           
  4070                           ;app_sens_autoCalibration.c: 181: Max = Mid;
  4071  0088E2  C025  F019         	movff	sort_uV_slope@Mid,sort_uV_slope@Max
  4072  0088E6  C026  F01A         	movff	sort_uV_slope@Mid+1,sort_uV_slope@Max+1
  4073  0088EA  C027  F01B         	movff	sort_uV_slope@Mid+2,sort_uV_slope@Max+2
  4074  0088EE  C028  F01C         	movff	sort_uV_slope@Mid+3,sort_uV_slope@Max+3
  4075                           
  4076                           ;app_sens_autoCalibration.c: 182: Mid = Temp;
  4077  0088F2  C01D  F025         	movff	sort_uV_slope@Temp,sort_uV_slope@Mid
  4078  0088F6  C01E  F026         	movff	sort_uV_slope@Temp+1,sort_uV_slope@Mid+1
  4079  0088FA  C01F  F027         	movff	sort_uV_slope@Temp+2,sort_uV_slope@Mid+2
  4080  0088FE  C020  F028         	movff	sort_uV_slope@Temp+3,sort_uV_slope@Mid+3
  4081  008902                     l13173:
  4082                           
  4083                           ;app_sens_autoCalibration.c: 183: };app_sens_autoCalibration.c: 184: if (Min >= Mid) {
  4084  008902  C021  F001         	movff	sort_uV_slope@Min,___flge@ff1
  4085  008906  C022  F002         	movff	sort_uV_slope@Min+1,___flge@ff1+1
  4086  00890A  C023  F003         	movff	sort_uV_slope@Min+2,___flge@ff1+2
  4087  00890E  C024  F004         	movff	sort_uV_slope@Min+3,___flge@ff1+3
  4088  008912  C025  F005         	movff	sort_uV_slope@Mid,___flge@ff2
  4089  008916  C026  F006         	movff	sort_uV_slope@Mid+1,___flge@ff2+1
  4090  00891A  C027  F007         	movff	sort_uV_slope@Mid+2,___flge@ff2+2
  4091  00891E  C028  F008         	movff	sort_uV_slope@Mid+3,___flge@ff2+3
  4092  008922  EC6C  F051         	call	___flge	;wreg free
  4093  008926  A0D8               	btfss	status,0,c
  4094  008928  EF98  F044         	goto	u13511
  4095  00892C  EF9A  F044         	goto	u13510
  4096  008930                     u13511:
  4097  008930  EFB2  F044         	goto	l1572
  4098  008934                     u13510:
  4099  008934                     
  4100                           ;app_sens_autoCalibration.c: 185: Temp = Mid;
  4101  008934  C025  F01D         	movff	sort_uV_slope@Mid,sort_uV_slope@Temp
  4102  008938  C026  F01E         	movff	sort_uV_slope@Mid+1,sort_uV_slope@Temp+1
  4103  00893C  C027  F01F         	movff	sort_uV_slope@Mid+2,sort_uV_slope@Temp+2
  4104  008940  C028  F020         	movff	sort_uV_slope@Mid+3,sort_uV_slope@Temp+3
  4105                           
  4106                           ;app_sens_autoCalibration.c: 186: Mid = Min;
  4107  008944  C021  F025         	movff	sort_uV_slope@Min,sort_uV_slope@Mid
  4108  008948  C022  F026         	movff	sort_uV_slope@Min+1,sort_uV_slope@Mid+1
  4109  00894C  C023  F027         	movff	sort_uV_slope@Min+2,sort_uV_slope@Mid+2
  4110  008950  C024  F028         	movff	sort_uV_slope@Min+3,sort_uV_slope@Mid+3
  4111                           
  4112                           ;app_sens_autoCalibration.c: 187: Min = Temp;
  4113  008954  C01D  F021         	movff	sort_uV_slope@Temp,sort_uV_slope@Min
  4114  008958  C01E  F022         	movff	sort_uV_slope@Temp+1,sort_uV_slope@Min+1
  4115  00895C  C01F  F023         	movff	sort_uV_slope@Temp+2,sort_uV_slope@Min+2
  4116  008960  C020  F024         	movff	sort_uV_slope@Temp+3,sort_uV_slope@Min+3
  4117  008964                     l1572:
  4118                           
  4119                           ;app_sens_autoCalibration.c: 188: };app_sens_autoCalibration.c: 189: g_sens_autoCalib.sl
      +                          ope_min = Min;
  4120  008964  C021  F0E7         	movff	sort_uV_slope@Min,_g_sens_autoCalib+4	;volatile
  4121  008968  C022  F0E8         	movff	sort_uV_slope@Min+1,_g_sens_autoCalib+5	;volatile
  4122  00896C  C023  F0E9         	movff	sort_uV_slope@Min+2,_g_sens_autoCalib+6	;volatile
  4123  008970  C024  F0EA         	movff	sort_uV_slope@Min+3,_g_sens_autoCalib+7	;volatile
  4124                           
  4125                           ;app_sens_autoCalibration.c: 190: g_sens_autoCalib.slope_max = Max;
  4126  008974  C019  F0EB         	movff	sort_uV_slope@Max,_g_sens_autoCalib+8	;volatile
  4127  008978  C01A  F0EC         	movff	sort_uV_slope@Max+1,_g_sens_autoCalib+9	;volatile
  4128  00897C  C01B  F0ED         	movff	sort_uV_slope@Max+2,_g_sens_autoCalib+10	;volatile
  4129  008980  C01C  F0EE         	movff	sort_uV_slope@Max+3,_g_sens_autoCalib+11	;volatile
  4130  008984  0012               	return		;funcret
  4131  008986                     __end_of_sort_uV_slope:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function _sens_ZeroCalib_task *****************
  4135 ;; Defined at:
  4136 ;;		line 48 in file "app_sens_calibration.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used: 1
  4156 ;; Hardware stack levels required when called: 4
  4157 ;; This function calls:
  4158 ;;		_LED_Off
  4159 ;;		_LED_On
  4160 ;;		_sens_ZeroCalibration
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text7
  4167  00A98E                     __ptext7:
  4168                           	callstack 0
  4169  00A98E                     _sens_ZeroCalib_task:
  4170                           	callstack 26
  4171  00A98E                     
  4172                           ;app_sens_calibration.c: 50: if ((g_usb_state == USB_DETACHED) && (g_sens_calib.zero_cal
      +                           == 0)) {
  4173  00A98E  0100               	movlb	0	; () banked
  4174  00A990  05D2               	decf	_g_usb_state& (0+255),w,b
  4175  00A992  A4D8               	btfss	status,2,c
  4176  00A994  EFCE  F054         	goto	u14181
  4177  00A998  EFD0  F054         	goto	u14180
  4178  00A99C                     u14181:
  4179  00A99C  EF2A  F055         	goto	l13697
  4180  00A9A0                     u14180:
  4181  00A9A0                     
  4182                           ; BSR set to: 0
  4183  00A9A0  0101               	movlb	1	; () banked
  4184  00A9A2  5185               	movf	(_g_sens_calib+1)& (0+255),w,b
  4185  00A9A4  A4D8               	btfss	status,2,c
  4186  00A9A6  EFD7  F054         	goto	u14191
  4187  00A9AA  EFD9  F054         	goto	u14190
  4188  00A9AE                     u14191:
  4189  00A9AE  EF2A  F055         	goto	l13697
  4190  00A9B2                     u14190:
  4191  00A9B2  EF1B  F055         	goto	l13695
  4192  00A9B6                     l13675:
  4193                           
  4194                           ; BSR set to: 1
  4195                           ;app_sens_calibration.c: 54: LED_Off();
  4196  00A9B6  EC35  F06B         	call	_LED_Off	;wreg free
  4197  00A9BA                     
  4198                           ;app_sens_calibration.c: 55: LED_On(LED_GREEN);
  4199  00A9BA  0E02               	movlw	2
  4200  00A9BC  ECF3  F068         	call	_LED_On
  4201  00A9C0                     
  4202                           ;app_sens_calibration.c: 56: g_calib_count = 0;
  4203  00A9C0  0E00               	movlw	0
  4204  00A9C2  0101               	movlb	1	; () banked
  4205  00A9C4  6F5C               	movwf	_g_calib_count& (0+255),b	;volatile
  4206  00A9C6  0E00               	movlw	0
  4207  00A9C8  6F5D               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
  4208  00A9CA  0E00               	movlw	0
  4209  00A9CC  6F5E               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
  4210  00A9CE  0E00               	movlw	0
  4211  00A9D0  6F5F               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
  4212  00A9D2                     
  4213                           ; BSR set to: 1
  4214                           ;app_sens_calibration.c: 57: g_sens_calib.seq = CALIB_WAIT;
  4215  00A9D2  0E01               	movlw	1
  4216  00A9D4  6F84               	movwf	_g_sens_calib& (0+255),b
  4217                           
  4218                           ;app_sens_calibration.c: 58: break;
  4219  00A9D6  EF33  F055         	goto	l1610
  4220  00A9DA                     l13683:
  4221                           
  4222                           ; BSR set to: 1
  4223                           ;app_sens_calibration.c: 60: if (g_calib_count > 18000) {
  4224  00A9DA  515F               	movf	(_g_calib_count+3)& (0+255),w,b	;volatile
  4225  00A9DC  115E               	iorwf	(_g_calib_count+2)& (0+255),w,b	;volatile
  4226  00A9DE  E10B               	bnz	u14200
  4227  00A9E0  0E51               	movlw	81
  4228  00A9E2  5D5C               	subwf	_g_calib_count& (0+255),w,b	;volatile
  4229  00A9E4  0E46               	movlw	70
  4230  00A9E6  595D               	subwfb	(_g_calib_count+1)& (0+255),w,b	;volatile
  4231  00A9E8  A0D8               	btfss	status,0,c
  4232  00A9EA  EFF9  F054         	goto	u14201
  4233  00A9EE  EFFB  F054         	goto	u14200
  4234  00A9F2                     u14201:
  4235  00A9F2  EF33  F055         	goto	l1610
  4236  00A9F6                     u14200:
  4237  00A9F6                     
  4238                           ; BSR set to: 1
  4239                           ;app_sens_calibration.c: 61: g_calib_count = 0;
  4240  00A9F6  0E00               	movlw	0
  4241  00A9F8  6F5C               	movwf	_g_calib_count& (0+255),b	;volatile
  4242  00A9FA  0E00               	movlw	0
  4243  00A9FC  6F5D               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
  4244  00A9FE  0E00               	movlw	0
  4245  00AA00  6F5E               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
  4246  00AA02  0E00               	movlw	0
  4247  00AA04  6F5F               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
  4248                           
  4249                           ;app_sens_calibration.c: 62: g_sens_calib.seq = CALIB_ZERO;
  4250  00AA06  0E02               	movlw	2
  4251  00AA08  6F84               	movwf	_g_sens_calib& (0+255),b
  4252  00AA0A  EF33  F055         	goto	l1610
  4253  00AA0E                     l13687:
  4254                           
  4255                           ; BSR set to: 1
  4256                           ;app_sens_calibration.c: 65: if (sens_ZeroCalibration() == 0) g_sens_calib.seq = CALIB_Z
      +                          ERO;
  4257  00AA0E  ECA7  F068         	call	_sens_ZeroCalibration	;wreg free
  4258  00AA12  0900               	iorlw	0
  4259  00AA14  A4D8               	btfss	status,2,c
  4260  00AA16  EF0F  F055         	goto	u14211
  4261  00AA1A  EF11  F055         	goto	u14210
  4262  00AA1E                     u14211:
  4263  00AA1E  EF16  F055         	goto	l13691
  4264  00AA22                     u14210:
  4265  00AA22  0E02               	movlw	2
  4266  00AA24  0101               	movlb	1	; () banked
  4267  00AA26  6F84               	movwf	_g_sens_calib& (0+255),b
  4268  00AA28  EF33  F055         	goto	l1610
  4269  00AA2C                     l13691:
  4270                           
  4271                           ;app_sens_calibration.c: 66: else g_led_status.seq = LED_ZEROCAL_END;
  4272  00AA2C  0E07               	movlw	7
  4273  00AA2E  0100               	movlb	0	; () banked
  4274  00AA30  6FC0               	movwf	_g_led_status& (0+255),b
  4275  00AA32  EF33  F055         	goto	l1610
  4276  00AA36                     l13695:
  4277                           
  4278                           ; BSR set to: 1
  4279  00AA36  5184               	movf	_g_sens_calib& (0+255),w,b
  4280                           
  4281                           ; Switch size 1, requested type "simple"
  4282                           ; Number of cases is 3, Range of values is 0 to 2
  4283                           ; switch strategies available:
  4284                           ; Name         Instructions Cycles
  4285                           ; simple_byte           10     6 (average)
  4286                           ;	Chosen strategy is simple_byte
  4287  00AA38  0A00               	xorlw	0	; case 0
  4288  00AA3A  B4D8               	btfsc	status,2,c
  4289  00AA3C  EFDB  F054         	goto	l13675
  4290  00AA40  0A01               	xorlw	1	; case 1
  4291  00AA42  B4D8               	btfsc	status,2,c
  4292  00AA44  EFED  F054         	goto	l13683
  4293  00AA48  0A03               	xorlw	3	; case 2
  4294  00AA4A  B4D8               	btfsc	status,2,c
  4295  00AA4C  EF07  F055         	goto	l13687
  4296  00AA50  EF33  F055         	goto	l1610
  4297  00AA54                     l13697:
  4298                           
  4299                           ;app_sens_calibration.c: 70: g_calib_count = 0;
  4300  00AA54  0E00               	movlw	0
  4301  00AA56  0101               	movlb	1	; () banked
  4302  00AA58  6F5C               	movwf	_g_calib_count& (0+255),b	;volatile
  4303  00AA5A  0E00               	movlw	0
  4304  00AA5C  6F5D               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
  4305  00AA5E  0E00               	movlw	0
  4306  00AA60  6F5E               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
  4307  00AA62  0E00               	movlw	0
  4308  00AA64  6F5F               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
  4309  00AA66                     l1610:
  4310  00AA66  0012               	return		;funcret
  4311  00AA68                     __end_of_sens_ZeroCalib_task:
  4312                           	callstack 0
  4313                           
  4314 ;; *************** function _sens_ZeroCalibration *****************
  4315 ;; Defined at:
  4316 ;;		line 40 in file "app_sens_calibration.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 3
  4337 ;; This function calls:
  4338 ;;		_nvm_write_flash_all
  4339 ;; This function is called by:
  4340 ;;		_sens_ZeroCalib_task
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text8
  4345  00D14E                     __ptext8:
  4346                           	callstack 0
  4347  00D14E                     _sens_ZeroCalibration:
  4348                           	callstack 26
  4349  00D14E                     
  4350                           ;app_sens_calibration.c: 42: g_nvm.flash.baseLine_uV = g_last_value[LV_GAS_VOLT];
  4351  00D14E  C11C  F195         	movff	_g_last_value,_g_nvm+5
  4352  00D152  C11D  F196         	movff	_g_last_value+1,_g_nvm+6
  4353  00D156  C11E  F197         	movff	_g_last_value+2,_g_nvm+7
  4354  00D15A  C11F  F198         	movff	_g_last_value+3,_g_nvm+8
  4355                           
  4356                           ;app_sens_calibration.c: 43: g_nvm.flash.calib_temp = g_last_value[LV_TEMP];
  4357  00D15E  C130  F1A5         	movff	_g_last_value+20,_g_nvm+21
  4358  00D162  C131  F1A6         	movff	_g_last_value+21,_g_nvm+22
  4359  00D166  C132  F1A7         	movff	_g_last_value+22,_g_nvm+23
  4360  00D16A  C133  F1A8         	movff	_g_last_value+23,_g_nvm+24
  4361  00D16E                     
  4362                           ;app_sens_calibration.c: 44: g_sens_calib.zero_cal = nvm_write_flash_all(&g_nvm.flash);
  4363  00D16E  0E91               	movlw	low (_g_nvm+1)
  4364  00D170  6E11               	movwf	nvm_write_flash_all@flash^0,c
  4365  00D172  0E01               	movlw	high (_g_nvm+1)
  4366  00D174  6E12               	movwf	(nvm_write_flash_all@flash+1)^0,c
  4367  00D176  ECBF  F066         	call	_nvm_write_flash_all	;wreg free
  4368  00D17A  0101               	movlb	1	; () banked
  4369  00D17C  6F85               	movwf	(_g_sens_calib+1)& (0+255),b
  4370  00D17E                     
  4371                           ; BSR set to: 1
  4372                           ;app_sens_calibration.c: 45: return g_sens_calib.zero_cal;
  4373  00D17E  5185               	movf	(_g_sens_calib+1)& (0+255),w,b
  4374  00D180                     
  4375                           ; BSR set to: 1
  4376  00D180  0012               	return		;funcret
  4377  00D182                     __end_of_sens_ZeroCalibration:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _sensMeasure_task *****************
  4381 ;; Defined at:
  4382 ;;		line 124 in file "app_sens_measure.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4398 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4399 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4400 ;;Total ram usage:        4 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 8
  4403 ;; This function calls:
  4404 ;;		_Linear_regression
  4405 ;;		___fladd
  4406 ;;		_sensMeasure_gas_read
  4407 ;;		_sensMeasure_temp_read
  4408 ;;		_sensor_init
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text9
  4415  00711A                     __ptext9:
  4416                           	callstack 0
  4417  00711A                     _sensMeasure_task:
  4418                           	callstack 22
  4419  00711A                     
  4420                           ;app_sens_measure.c: 126: switch (g_sens_measure.seq)
  4421  00711A  EFA6  F039         	goto	l19653
  4422  00711E                     l19593:
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;app_sens_measure.c: 129: if (sensor_init()) {
  4426  00711E  ECD8  F065         	call	_sensor_init	;wreg free
  4427  007122  0900               	iorlw	0
  4428  007124  B4D8               	btfsc	status,2,c
  4429  007126  EF97  F038         	goto	u21431
  4430  00712A  EF99  F038         	goto	u21430
  4431  00712E                     u21431:
  4432  00712E  EFA8  F038         	goto	l19597
  4433  007132                     u21430:
  4434  007132                     
  4435                           ;app_sens_measure.c: 130: g_sens_measure.isInitDone = 1;
  4436  007132  0E01               	movlw	1
  4437  007134  0101               	movlb	1	; () banked
  4438  007136  6F43               	movwf	(_g_sens_measure+3)& (0+255),b
  4439                           
  4440                           ;app_sens_measure.c: 131: g_large_counter = 0;
  4441  007138  0E00               	movlw	0
  4442  00713A  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4443  00713C  0E00               	movlw	0
  4444  00713E  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4445  007140  0E00               	movlw	0
  4446  007142  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4447  007144  0E00               	movlw	0
  4448  007146  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4449                           
  4450                           ;app_sens_measure.c: 132: g_sens_measure.seq = SENS_READY;
  4451  007148  0E01               	movlw	1
  4452  00714A  6F40               	movwf	_g_sens_measure& (0+255),b
  4453                           
  4454                           ;app_sens_measure.c: 133: } else {
  4455  00714C  EFC6  F039         	goto	l1687
  4456  007150                     l19597:
  4457                           
  4458                           ;app_sens_measure.c: 134: g_large_counter = 0;
  4459  007150  0E00               	movlw	0
  4460  007152  0101               	movlb	1	; () banked
  4461  007154  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4462  007156  0E00               	movlw	0
  4463  007158  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4464  00715A  0E00               	movlw	0
  4465  00715C  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4466  00715E  0E00               	movlw	0
  4467  007160  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4468                           
  4469                           ;app_sens_measure.c: 135: g_sens_measure.seq_count = 30;
  4470  007162  0E1E               	movlw	30
  4471  007164  6F42               	movwf	(_g_sens_measure+2)& (0+255),b
  4472                           
  4473                           ;app_sens_measure.c: 136: g_sens_measure.seq = SENS_WAIT;
  4474  007166  0E05               	movlw	5
  4475  007168  6F40               	movwf	_g_sens_measure& (0+255),b
  4476                           
  4477                           ;app_sens_measure.c: 137: g_sens_measure.next_seq = SENS_INIT;
  4478  00716A  0E00               	movlw	0
  4479  00716C  6F41               	movwf	(_g_sens_measure+1)& (0+255),b
  4480  00716E  EFC6  F039         	goto	l1687
  4481  007172                     l19599:
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;app_sens_measure.c: 140: if (g_large_counter >= 100) {
  4485  007172  515B               	movf	(_g_large_counter+3)& (0+255),w,b	;volatile
  4486  007174  115A               	iorwf	(_g_large_counter+2)& (0+255),w,b	;volatile
  4487  007176  1159               	iorwf	(_g_large_counter+1)& (0+255),w,b	;volatile
  4488  007178  E109               	bnz	u21440
  4489  00717A  0E64               	movlw	100
  4490  00717C  5D58               	subwf	_g_large_counter& (0+255),w,b	;volatile
  4491  00717E  A0D8               	btfss	status,0,c
  4492  007180  EFC4  F038         	goto	u21441
  4493  007184  EFC6  F038         	goto	u21440
  4494  007188                     u21441:
  4495  007188  EFC6  F039         	goto	l1687
  4496  00718C                     u21440:
  4497  00718C                     
  4498                           ; BSR set to: 1
  4499                           ;app_sens_measure.c: 142: if (gCnt == 3600) gCnt = 1;
  4500  00718C  0E10               	movlw	16
  4501  00718E  1982               	xorwf	_gCnt& (0+255),w,b	;volatile
  4502  007190  E107               	bnz	u21451
  4503  007192  0E0E               	movlw	14
  4504  007194  1983               	xorwf	(_gCnt+1)& (0+255),w,b	;volatile
  4505  007196  A4D8               	btfss	status,2,c
  4506  007198  EFD0  F038         	goto	u21451
  4507  00719C  EFD2  F038         	goto	u21450
  4508  0071A0                     u21451:
  4509  0071A0  EFD8  F038         	goto	l19605
  4510  0071A4                     u21450:
  4511  0071A4                     
  4512                           ; BSR set to: 1
  4513  0071A4  0E00               	movlw	0
  4514  0071A6  6F83               	movwf	(_gCnt+1)& (0+255),b	;volatile
  4515  0071A8  0E01               	movlw	1
  4516  0071AA  6F82               	movwf	_gCnt& (0+255),b	;volatile
  4517  0071AC  EFDA  F038         	goto	l19607
  4518  0071B0                     l19605:
  4519                           
  4520                           ; BSR set to: 1
  4521                           ;app_sens_measure.c: 143: else gCnt++;
  4522  0071B0  4B82               	infsnz	_gCnt& (0+255),f,b	;volatile
  4523  0071B2  2B83               	incf	(_gCnt+1)& (0+255),f,b	;volatile
  4524  0071B4                     l19607:
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;app_sens_measure.c: 145: g_large_counter = 0;
  4528  0071B4  0E00               	movlw	0
  4529  0071B6  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4530  0071B8  0E00               	movlw	0
  4531  0071BA  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4532  0071BC  0E00               	movlw	0
  4533  0071BE  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4534  0071C0  0E00               	movlw	0
  4535  0071C2  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4536  0071C4                     
  4537                           ; BSR set to: 1
  4538                           ;app_sens_measure.c: 146: g_sens_measure.seq = SENS_TEMP_MEASURE;
  4539  0071C4  0E02               	movlw	2
  4540  0071C6  6F40               	movwf	_g_sens_measure& (0+255),b
  4541  0071C8  EFC6  F039         	goto	l1687
  4542  0071CC                     l19611:
  4543                           
  4544                           ; BSR set to: 1
  4545                           ;app_sens_measure.c: 149: g_sens_measure.isTemp_Success = sensMeasure_temp_read();
  4546  0071CC  ECE2  F05C         	call	_sensMeasure_temp_read	;wreg free
  4547  0071D0  0101               	movlb	1	; () banked
  4548  0071D2  6F45               	movwf	(_g_sens_measure+5)& (0+255),b
  4549  0071D4                     
  4550                           ; BSR set to: 1
  4551                           ;app_sens_measure.c: 150: g_large_counter = 0;
  4552  0071D4  0E00               	movlw	0
  4553  0071D6  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4554  0071D8  0E00               	movlw	0
  4555  0071DA  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4556  0071DC  0E00               	movlw	0
  4557  0071DE  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4558  0071E0  0E00               	movlw	0
  4559  0071E2  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4560  0071E4                     
  4561                           ; BSR set to: 1
  4562                           ;app_sens_measure.c: 151: g_sens_measure.seq_count = 2;
  4563  0071E4  0E02               	movlw	2
  4564  0071E6  6F42               	movwf	(_g_sens_measure+2)& (0+255),b
  4565  0071E8                     
  4566                           ; BSR set to: 1
  4567                           ;app_sens_measure.c: 152: g_sens_measure.seq = SENS_WAIT;
  4568  0071E8  0E05               	movlw	5
  4569  0071EA  6F40               	movwf	_g_sens_measure& (0+255),b
  4570  0071EC                     
  4571                           ; BSR set to: 1
  4572                           ;app_sens_measure.c: 153: g_sens_measure.next_seq = SENS_GAS_MEASURE;
  4573  0071EC  0E03               	movlw	3
  4574  0071EE  6F41               	movwf	(_g_sens_measure+1)& (0+255),b
  4575                           
  4576                           ;app_sens_measure.c: 154: break;
  4577  0071F0  EFC6  F039         	goto	l1687
  4578  0071F4                     l19621:
  4579                           
  4580                           ; BSR set to: 1
  4581                           ;app_sens_measure.c: 156: g_sens_measure.isGasSensor_Success = sensMeasure_gas_read();
  4582  0071F4  EC7B  F045         	call	_sensMeasure_gas_read	;wreg free
  4583  0071F8  0101               	movlb	1	; () banked
  4584  0071FA  6F44               	movwf	(_g_sens_measure+4)& (0+255),b
  4585  0071FC                     
  4586                           ; BSR set to: 1
  4587                           ;app_sens_measure.c: 157: g_large_counter = 0;
  4588  0071FC  0E00               	movlw	0
  4589  0071FE  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4590  007200  0E00               	movlw	0
  4591  007202  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4592  007204  0E00               	movlw	0
  4593  007206  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4594  007208  0E00               	movlw	0
  4595  00720A  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4596  00720C                     
  4597                           ; BSR set to: 1
  4598                           ;app_sens_measure.c: 158: g_sens_measure.seq = SENS_APPLY;
  4599  00720C  0E04               	movlw	4
  4600  00720E  6F40               	movwf	_g_sens_measure& (0+255),b
  4601                           
  4602                           ;app_sens_measure.c: 159: break;
  4603  007210  EFC6  F039         	goto	l1687
  4604  007214                     l19627:
  4605                           
  4606                           ; BSR set to: 1
  4607                           ;app_sens_measure.c: 161: if (g_sens_measure.isGasSensor_Success) {
  4608  007214  5144               	movf	(_g_sens_measure+4)& (0+255),w,b
  4609  007216  B4D8               	btfsc	status,2,c
  4610  007218  EF10  F039         	goto	u21461
  4611  00721C  EF12  F039         	goto	u21460
  4612  007220                     u21461:
  4613  007220  EF4B  F039         	goto	l19637
  4614  007224                     u21460:
  4615  007224                     
  4616                           ; BSR set to: 1
  4617                           ;app_sens_measure.c: 162: g_last_value[LV_GAS_VOLT] = g_temp_value[LV_GAS_VOLT];
  4618  007224  C100  F11C         	movff	_g_temp_value,_g_last_value
  4619  007228  C101  F11D         	movff	_g_temp_value+1,_g_last_value+1
  4620  00722C  C102  F11E         	movff	_g_temp_value+2,_g_last_value+2
  4621  007230  C103  F11F         	movff	_g_temp_value+3,_g_last_value+3
  4622  007234                     
  4623                           ; BSR set to: 1
  4624                           ;app_sens_measure.c: 164: Linear_regression(&g_linear_reg, g_last_value[LV_GAS_VOLT]);
  4625  007234  0E00               	movlw	low _g_linear_reg
  4626  007236  0100               	movlb	0	; () banked
  4627  007238  6F85               	movwf	Linear_regression@p& (0+255),b
  4628  00723A  0E03               	movlw	high _g_linear_reg
  4629  00723C  6F86               	movwf	(Linear_regression@p+1)& (0+255),b
  4630  00723E  C11C  F087         	movff	_g_last_value,Linear_regression@uVoltage
  4631  007242  C11D  F088         	movff	_g_last_value+1,Linear_regression@uVoltage+1
  4632  007246  C11E  F089         	movff	_g_last_value+2,Linear_regression@uVoltage+2
  4633  00724A  C11F  F08A         	movff	_g_last_value+3,Linear_regression@uVoltage+3
  4634  00724E  ECE5  F01C         	call	_Linear_regression	;wreg free
  4635  007252                     
  4636                           ;app_sens_measure.c: 169: g_last_value[LV_GAS_PPM] = g_temp_value[LV_GAS_PPM];
  4637  007252  C104  F120         	movff	_g_temp_value+4,_g_last_value+4
  4638  007256  C105  F121         	movff	_g_temp_value+5,_g_last_value+5
  4639  00725A  C106  F122         	movff	_g_temp_value+6,_g_last_value+6
  4640  00725E  C107  F123         	movff	_g_temp_value+7,_g_last_value+7
  4641  007262                     
  4642                           ;app_sens_measure.c: 171: g_last_value[LV_GAS_PPM] = g_last_value[LV_GAS_PPM] + g_nvm.fl
      +                          ash.gasOffset;;
  4643  007262  C19D  F027         	movff	_g_nvm+13,___fladd@b
  4644  007266  C19E  F028         	movff	_g_nvm+14,___fladd@b+1
  4645  00726A  C19F  F029         	movff	_g_nvm+15,___fladd@b+2
  4646  00726E  C1A0  F02A         	movff	_g_nvm+16,___fladd@b+3
  4647  007272  C120  F02B         	movff	_g_last_value+4,___fladd@a
  4648  007276  C121  F02C         	movff	_g_last_value+5,___fladd@a+1
  4649  00727A  C122  F02D         	movff	_g_last_value+6,___fladd@a+2
  4650  00727E  C123  F02E         	movff	_g_last_value+7,___fladd@a+3
  4651  007282  EC13  F029         	call	___fladd	;wreg free
  4652  007286  C027  F120         	movff	?___fladd,_g_last_value+4
  4653  00728A  C028  F121         	movff	?___fladd+1,_g_last_value+5
  4654  00728E  C029  F122         	movff	?___fladd+2,_g_last_value+6
  4655  007292  C02A  F123         	movff	?___fladd+3,_g_last_value+7
  4656  007296                     l19637:
  4657                           
  4658                           ;app_sens_measure.c: 172: };app_sens_measure.c: 173: if (g_sens_measure.isTemp_Success) 
      +                          {
  4659  007296  0101               	movlb	1	; () banked
  4660  007298  5145               	movf	(_g_sens_measure+5)& (0+255),w,b
  4661  00729A  B4D8               	btfsc	status,2,c
  4662  00729C  EF52  F039         	goto	u21471
  4663  0072A0  EF54  F039         	goto	u21470
  4664  0072A4                     u21471:
  4665  0072A4  EF64  F039         	goto	l19641
  4666  0072A8                     u21470:
  4667  0072A8                     
  4668                           ; BSR set to: 1
  4669                           ;app_sens_measure.c: 174: g_last_value[LV_TEMP] = g_temp_value[LV_TEMP];
  4670  0072A8  C114  F130         	movff	_g_temp_value+20,_g_last_value+20
  4671  0072AC  C115  F131         	movff	_g_temp_value+21,_g_last_value+21
  4672  0072B0  C116  F132         	movff	_g_temp_value+22,_g_last_value+22
  4673  0072B4  C117  F133         	movff	_g_temp_value+23,_g_last_value+23
  4674                           
  4675                           ;app_sens_measure.c: 175: g_last_value[LV_HUMI] = g_temp_value[LV_HUMI];
  4676  0072B8  C118  F134         	movff	_g_temp_value+24,_g_last_value+24
  4677  0072BC  C119  F135         	movff	_g_temp_value+25,_g_last_value+25
  4678  0072C0  C11A  F136         	movff	_g_temp_value+26,_g_last_value+26
  4679  0072C4  C11B  F137         	movff	_g_temp_value+27,_g_last_value+27
  4680  0072C8                     l19641:
  4681                           
  4682                           ; BSR set to: 1
  4683                           ;app_sens_measure.c: 176: };app_sens_measure.c: 177: g_large_counter = 0;
  4684  0072C8  0E00               	movlw	0
  4685  0072CA  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4686  0072CC  0E00               	movlw	0
  4687  0072CE  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4688  0072D0  0E00               	movlw	0
  4689  0072D2  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4690  0072D4  0E00               	movlw	0
  4691  0072D6  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4692                           
  4693                           ;app_sens_measure.c: 178: g_sens_measure.seq = SENS_DISPLAY;
  4694  0072D8  0E06               	movlw	6
  4695  0072DA  6F40               	movwf	_g_sens_measure& (0+255),b
  4696                           
  4697                           ;app_sens_measure.c: 179: break;
  4698  0072DC  EFC6  F039         	goto	l1687
  4699  0072E0                     l19643:
  4700                           
  4701                           ; BSR set to: 1
  4702                           ;app_sens_measure.c: 181: if (g_large_counter > g_sens_measure.seq_count) {
  4703  0072E0  C142  F0A3         	movff	_g_sens_measure+2,??_sensMeasure_task
  4704  0072E4  0100               	movlb	0	; () banked
  4705  0072E6  6BA4               	clrf	(??_sensMeasure_task+1)& (0+255),b
  4706  0072E8  6BA5               	clrf	(??_sensMeasure_task+2)& (0+255),b
  4707  0072EA  6BA6               	clrf	(??_sensMeasure_task+3)& (0+255),b
  4708  0072EC  0101               	movlb	1	; () banked
  4709  0072EE  5158               	movf	_g_large_counter& (0+255),w,b	;volatile
  4710  0072F0  0100               	movlb	0	; () banked
  4711  0072F2  5DA3               	subwf	??_sensMeasure_task& (0+255),w,b
  4712  0072F4  0101               	movlb	1	; () banked
  4713  0072F6  5159               	movf	(_g_large_counter+1)& (0+255),w,b	;volatile
  4714  0072F8  0100               	movlb	0	; () banked
  4715  0072FA  59A4               	subwfb	(??_sensMeasure_task+1)& (0+255),w,b
  4716  0072FC  0101               	movlb	1	; () banked
  4717  0072FE  515A               	movf	(_g_large_counter+2)& (0+255),w,b	;volatile
  4718  007300  0100               	movlb	0	; () banked
  4719  007302  59A5               	subwfb	(??_sensMeasure_task+2)& (0+255),w,b
  4720  007304  0101               	movlb	1	; () banked
  4721  007306  515B               	movf	(_g_large_counter+3)& (0+255),w,b	;volatile
  4722  007308  0100               	movlb	0	; () banked
  4723  00730A  59A6               	subwfb	(??_sensMeasure_task+3)& (0+255),w,b
  4724  00730C  B0D8               	btfsc	status,0,c
  4725  00730E  EF8B  F039         	goto	u21481
  4726  007312  EF8D  F039         	goto	u21480
  4727  007316                     u21481:
  4728  007316  EFC6  F039         	goto	l1687
  4729  00731A                     u21480:
  4730  00731A                     
  4731                           ; BSR set to: 0
  4732                           ;app_sens_measure.c: 182: g_large_counter = 0;
  4733  00731A  0E00               	movlw	0
  4734  00731C  0101               	movlb	1	; () banked
  4735  00731E  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4736  007320  0E00               	movlw	0
  4737  007322  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4738  007324  0E00               	movlw	0
  4739  007326  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4740  007328  0E00               	movlw	0
  4741  00732A  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4742  00732C                     
  4743                           ; BSR set to: 1
  4744                           ;app_sens_measure.c: 183: g_sens_measure.seq = g_sens_measure.next_seq;
  4745  00732C  C141  F140         	movff	_g_sens_measure+1,_g_sens_measure
  4746  007330  EFC6  F039         	goto	l1687
  4747  007334                     l19649:
  4748                           
  4749                           ; BSR set to: 1
  4750                           ;app_sens_measure.c: 186: {;app_sens_measure.c: 201: g_large_counter = 0;
  4751  007334  0E00               	movlw	0
  4752  007336  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
  4753  007338  0E00               	movlw	0
  4754  00733A  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4755  00733C  0E00               	movlw	0
  4756  00733E  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4757  007340  0E00               	movlw	0
  4758  007342  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4759                           
  4760                           ;app_sens_measure.c: 202: g_sens_measure.seq = SENS_READY;
  4761  007344  0E01               	movlw	1
  4762  007346  6F40               	movwf	_g_sens_measure& (0+255),b
  4763                           
  4764                           ;app_sens_measure.c: 203: } break;
  4765  007348  EFC6  F039         	goto	l1687
  4766  00734C                     l19653:
  4767  00734C  0101               	movlb	1	; () banked
  4768  00734E  5140               	movf	_g_sens_measure& (0+255),w,b
  4769                           
  4770                           ; Switch size 1, requested type "simple"
  4771                           ; Number of cases is 7, Range of values is 0 to 6
  4772                           ; switch strategies available:
  4773                           ; Name         Instructions Cycles
  4774                           ; simple_byte           22    12 (average)
  4775                           ;	Chosen strategy is simple_byte
  4776  007350  0A00               	xorlw	0	; case 0
  4777  007352  B4D8               	btfsc	status,2,c
  4778  007354  EF8F  F038         	goto	l19593
  4779  007358  0A01               	xorlw	1	; case 1
  4780  00735A  B4D8               	btfsc	status,2,c
  4781  00735C  EFB9  F038         	goto	l19599
  4782  007360  0A03               	xorlw	3	; case 2
  4783  007362  B4D8               	btfsc	status,2,c
  4784  007364  EFE6  F038         	goto	l19611
  4785  007368  0A01               	xorlw	1	; case 3
  4786  00736A  B4D8               	btfsc	status,2,c
  4787  00736C  EFFA  F038         	goto	l19621
  4788  007370  0A07               	xorlw	7	; case 4
  4789  007372  B4D8               	btfsc	status,2,c
  4790  007374  EF0A  F039         	goto	l19627
  4791  007378  0A01               	xorlw	1	; case 5
  4792  00737A  B4D8               	btfsc	status,2,c
  4793  00737C  EF70  F039         	goto	l19643
  4794  007380  0A03               	xorlw	3	; case 6
  4795  007382  B4D8               	btfsc	status,2,c
  4796  007384  EF9A  F039         	goto	l19649
  4797  007388  EFC6  F039         	goto	l1687
  4798  00738C                     l1687:
  4799  00738C  0012               	return		;funcret
  4800  00738E                     __end_of_sensMeasure_task:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _sensor_init *****************
  4804 ;; Defined at:
  4805 ;;		line 107 in file "sensor.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      unsigned char 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 7
  4826 ;; This function calls:
  4827 ;;		_sensor_adc_init
  4828 ;;		_sensor_lmp_init
  4829 ;;		_sensor_sht3x_init
  4830 ;; This function is called by:
  4831 ;;		_sensMeasure_task
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text10
  4836  00CBB0                     __ptext10:
  4837                           	callstack 0
  4838  00CBB0                     _sensor_init:
  4839                           	callstack 22
  4840  00CBB0                     
  4841                           ;sensor.c: 109: if (sensor_sht3x_init() == 0)
  4842  00CBB0  EC56  F063         	call	_sensor_sht3x_init	;wreg free
  4843  00CBB4  0900               	iorlw	0
  4844  00CBB6  A4D8               	btfss	status,2,c
  4845  00CBB8  EFE0  F065         	goto	u21161
  4846  00CBBC  EFE2  F065         	goto	u21160
  4847  00CBC0                     u21161:
  4848  00CBC0  EFE5  F065         	goto	l19391
  4849  00CBC4                     u21160:
  4850  00CBC4                     l19387:
  4851                           
  4852                           ;sensor.c: 110: return 0;
  4853  00CBC4  0E00               	movlw	0
  4854  00CBC6  EFFE  F065         	goto	l2027
  4855  00CBCA                     l19391:
  4856                           
  4857                           ;sensor.c: 112: if (sensor_lmp_init() == 0)
  4858  00CBCA  ECA1  F059         	call	_sensor_lmp_init	;wreg free
  4859  00CBCE  0900               	iorlw	0
  4860  00CBD0  A4D8               	btfss	status,2,c
  4861  00CBD2  EFED  F065         	goto	u21171
  4862  00CBD6  EFEF  F065         	goto	u21170
  4863  00CBDA                     u21171:
  4864  00CBDA  EFF1  F065         	goto	l19397
  4865  00CBDE                     u21170:
  4866  00CBDE  EFE2  F065         	goto	l19387
  4867  00CBE2                     l19397:
  4868                           
  4869                           ;sensor.c: 115: if (sensor_adc_init() == 0)
  4870  00CBE2  EC12  F06B         	call	_sensor_adc_init	;wreg free
  4871  00CBE6  0900               	iorlw	0
  4872  00CBE8  A4D8               	btfss	status,2,c
  4873  00CBEA  EFF9  F065         	goto	u21181
  4874  00CBEE  EFFB  F065         	goto	u21180
  4875  00CBF2                     u21181:
  4876  00CBF2  EFFD  F065         	goto	l19403
  4877  00CBF6                     u21180:
  4878  00CBF6  EFE2  F065         	goto	l19387
  4879  00CBFA                     l19403:
  4880                           
  4881                           ;sensor.c: 118: return 1;
  4882  00CBFA  0E01               	movlw	1
  4883  00CBFC                     l2027:
  4884  00CBFC  0012               	return		;funcret
  4885  00CBFE                     __end_of_sensor_init:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _sensor_sht3x_init *****************
  4889 ;; Defined at:
  4890 ;;		line 91 in file "sensor.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      unsigned char 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;Total ram usage:        2 bytes
  4909 ;; Hardware stack levels used: 1
  4910 ;; Hardware stack levels required when called: 5
  4911 ;; This function calls:
  4912 ;;		_sht3x_clear_status_reg
  4913 ;;		_sht3x_heaterOff
  4914 ;;		_sht3x_measure_start
  4915 ;; This function is called by:
  4916 ;;		_sensor_init
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text11
  4921  00C6AC                     __ptext11:
  4922                           	callstack 0
  4923  00C6AC                     _sensor_sht3x_init:
  4924                           	callstack 23
  4925  00C6AC                     
  4926                           ;sensor.c: 93: if (sht3x_heaterOff() == 0)
  4927  00C6AC  EC53  F06A         	call	_sht3x_heaterOff	;wreg free
  4928  00C6B0  0900               	iorlw	0
  4929  00C6B2  A4D8               	btfss	status,2,c
  4930  00C6B4  EF5E  F063         	goto	u20711
  4931  00C6B8  EF60  F063         	goto	u20710
  4932  00C6BC                     u20711:
  4933  00C6BC  EF63  F063         	goto	l18865
  4934  00C6C0                     u20710:
  4935  00C6C0                     l18861:
  4936                           
  4937                           ;sensor.c: 94: return 0;
  4938  00C6C0  0E00               	movlw	0
  4939  00C6C2  EF87  F063         	goto	l2022
  4940  00C6C6                     l18865:
  4941                           
  4942                           ;sensor.c: 96: _delay((unsigned long)((50)*(48000000/4000.0)));
  4943  00C6C6  0E04               	movlw	4
  4944  00C6C8  6E0F               	movwf	(??_sensor_sht3x_init+1)^0,c
  4945  00C6CA  0E0C               	movlw	12
  4946  00C6CC  6E0E               	movwf	??_sensor_sht3x_init^0,c
  4947  00C6CE  0E34               	movlw	52
  4948  00C6D0                     u21867:
  4949  00C6D0  2EE8               	decfsz	wreg,f,c
  4950  00C6D2  D7FE               	bra	u21867
  4951  00C6D4  2E0E               	decfsz	??_sensor_sht3x_init^0,f,c
  4952  00C6D6  D7FC               	bra	u21867
  4953  00C6D8  2E0F               	decfsz	(??_sensor_sht3x_init+1)^0,f,c
  4954  00C6DA  D7FA               	bra	u21867
  4955  00C6DC                     
  4956                           ;sensor.c: 98: if (sht3x_clear_status_reg() == 0)
  4957  00C6DC  EC63  F06A         	call	_sht3x_clear_status_reg	;wreg free
  4958  00C6E0  0900               	iorlw	0
  4959  00C6E2  A4D8               	btfss	status,2,c
  4960  00C6E4  EF76  F063         	goto	u20721
  4961  00C6E8  EF78  F063         	goto	u20720
  4962  00C6EC                     u20721:
  4963  00C6EC  EF7A  F063         	goto	l18873
  4964  00C6F0                     u20720:
  4965  00C6F0  EF60  F063         	goto	l18861
  4966  00C6F4                     l18873:
  4967                           
  4968                           ;sensor.c: 101: _delay((unsigned long)((50)*(48000000/4000.0)));
  4969  00C6F4  0E04               	movlw	4
  4970  00C6F6  6E0F               	movwf	(??_sensor_sht3x_init+1)^0,c
  4971  00C6F8  0E0C               	movlw	12
  4972  00C6FA  6E0E               	movwf	??_sensor_sht3x_init^0,c
  4973  00C6FC  0E34               	movlw	52
  4974  00C6FE                     u21877:
  4975  00C6FE  2EE8               	decfsz	wreg,f,c
  4976  00C700  D7FE               	bra	u21877
  4977  00C702  2E0E               	decfsz	??_sensor_sht3x_init^0,f,c
  4978  00C704  D7FC               	bra	u21877
  4979  00C706  2E0F               	decfsz	(??_sensor_sht3x_init+1)^0,f,c
  4980  00C708  D7FA               	bra	u21877
  4981  00C70A                     
  4982                           ;sensor.c: 104: return sht3x_measure_start();
  4983  00C70A  EC43  F06A         	call	_sht3x_measure_start	;wreg free
  4984  00C70E                     l2022:
  4985  00C70E  0012               	return		;funcret
  4986  00C710                     __end_of_sensor_sht3x_init:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _sht3x_measure_start *****************
  4990 ;; Defined at:
  4991 ;;		line 52 in file "bsp/sht3x.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  cmd             2   11[COMRAM] unsigned char [2]
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      unsigned char 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;Total ram usage:        2 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 4
  5012 ;; This function calls:
  5013 ;;		_i2c_writeBytes
  5014 ;; This function is called by:
  5015 ;;		_sensor_sht3x_init
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text12
  5020  00D486                     __ptext12:
  5021                           	callstack 0
  5022  00D486                     _sht3x_measure_start:
  5023                           	callstack 23
  5024  00D486                     
  5025                           ;sht3x.c: 54: uint8_t cmd[2];;sht3x.c: 55: cmd[0] = 0x21;
  5026  00D486  0E21               	movlw	33
  5027  00D488  6E0C               	movwf	sht3x_measure_start@cmd^0,c
  5028                           
  5029                           ;sht3x.c: 56: cmd[1] = 0x2d;
  5030  00D48A  0E2D               	movlw	45
  5031  00D48C  6E0D               	movwf	(sht3x_measure_start@cmd+1)^0,c
  5032  00D48E                     
  5033                           ;sht3x.c: 57: return i2c_writeBytes(0x88, cmd, 2, 1);
  5034  00D48E  0E0C               	movlw	low sht3x_measure_start@cmd
  5035  00D490  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5036  00D492  0E00               	movlw	high sht3x_measure_start@cmd
  5037  00D494  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5038  00D496  0E02               	movlw	2
  5039  00D498  6E09               	movwf	i2c_writeBytes@len^0,c
  5040  00D49A  0E01               	movlw	1
  5041  00D49C  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5042  00D49E  0E88               	movlw	136
  5043  00D4A0  EC87  F065         	call	_i2c_writeBytes
  5044  00D4A4  0012               	return		;funcret
  5045  00D4A6                     __end_of_sht3x_measure_start:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _sht3x_heaterOff *****************
  5049 ;; Defined at:
  5050 ;;		line 283 in file "bsp/sht3x.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  cmd             2   11[COMRAM] unsigned char [2]
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      unsigned char 
  5057 ;; Registers used:
  5058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5065 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;Total ram usage:        2 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 4
  5071 ;; This function calls:
  5072 ;;		_i2c_writeBytes
  5073 ;; This function is called by:
  5074 ;;		_sensor_sht3x_init
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text13
  5079  00D4A6                     __ptext13:
  5080                           	callstack 0
  5081  00D4A6                     _sht3x_heaterOff:
  5082                           	callstack 23
  5083  00D4A6                     
  5084                           ;sht3x.c: 285: uint8_t cmd[2];;sht3x.c: 286: cmd[0] = 0X30;
  5085  00D4A6  0E30               	movlw	48
  5086  00D4A8  6E0C               	movwf	sht3x_heaterOff@cmd^0,c
  5087                           
  5088                           ;sht3x.c: 287: cmd[1] = 0X66;
  5089  00D4AA  0E66               	movlw	102
  5090  00D4AC  6E0D               	movwf	(sht3x_heaterOff@cmd+1)^0,c
  5091  00D4AE                     
  5092                           ;sht3x.c: 288: return i2c_writeBytes(0x88, cmd, 2, 1);
  5093  00D4AE  0E0C               	movlw	low sht3x_heaterOff@cmd
  5094  00D4B0  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5095  00D4B2  0E00               	movlw	high sht3x_heaterOff@cmd
  5096  00D4B4  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5097  00D4B6  0E02               	movlw	2
  5098  00D4B8  6E09               	movwf	i2c_writeBytes@len^0,c
  5099  00D4BA  0E01               	movlw	1
  5100  00D4BC  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5101  00D4BE  0E88               	movlw	136
  5102  00D4C0  EC87  F065         	call	_i2c_writeBytes
  5103  00D4C4  0012               	return		;funcret
  5104  00D4C6                     __end_of_sht3x_heaterOff:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function _sht3x_clear_status_reg *****************
  5108 ;; Defined at:
  5109 ;;		line 249 in file "bsp/sht3x.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  cmd             2   11[COMRAM] unsigned char [2]
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      unsigned char 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;Total ram usage:        2 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; Hardware stack levels required when called: 4
  5130 ;; This function calls:
  5131 ;;		_i2c_writeBytes
  5132 ;; This function is called by:
  5133 ;;		_sensor_sht3x_init
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text14
  5138  00D4C6                     __ptext14:
  5139                           	callstack 0
  5140  00D4C6                     _sht3x_clear_status_reg:
  5141                           	callstack 23
  5142  00D4C6                     
  5143                           ;sht3x.c: 251: uint8_t cmd[2];;sht3x.c: 252: cmd[0] = 0x30;
  5144  00D4C6  0E30               	movlw	48
  5145  00D4C8  6E0C               	movwf	sht3x_clear_status_reg@cmd^0,c
  5146                           
  5147                           ;sht3x.c: 253: cmd[1] = 0x41;
  5148  00D4CA  0E41               	movlw	65
  5149  00D4CC  6E0D               	movwf	(sht3x_clear_status_reg@cmd+1)^0,c
  5150  00D4CE                     
  5151                           ;sht3x.c: 254: return i2c_writeBytes(0x88, cmd, 2, 1);
  5152  00D4CE  0E0C               	movlw	low sht3x_clear_status_reg@cmd
  5153  00D4D0  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5154  00D4D2  0E00               	movlw	high sht3x_clear_status_reg@cmd
  5155  00D4D4  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5156  00D4D6  0E02               	movlw	2
  5157  00D4D8  6E09               	movwf	i2c_writeBytes@len^0,c
  5158  00D4DA  0E01               	movlw	1
  5159  00D4DC  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5160  00D4DE  0E88               	movlw	136
  5161  00D4E0  EC87  F065         	call	_i2c_writeBytes
  5162  00D4E4  0012               	return		;funcret
  5163  00D4E6                     __end_of_sht3x_clear_status_reg:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _sensor_lmp_init *****************
  5167 ;; Defined at:
  5168 ;;		line 65 in file "sensor.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      unsigned char 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;Total ram usage:        0 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 6
  5189 ;; This function calls:
  5190 ;;		_lmp91000_isReady
  5191 ;;		_lmp91000_lock
  5192 ;;		_lmp91000_set_GainRLoad
  5193 ;;		_lmp91000_set_Mode
  5194 ;;		_lmp91000_set_Reference
  5195 ;;		_lmp91000_unlock
  5196 ;; This function is called by:
  5197 ;;		_sensor_init
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text15
  5202  00B342                     __ptext15:
  5203                           	callstack 0
  5204  00B342                     _sensor_lmp_init:
  5205                           	callstack 22
  5206  00B342                     
  5207                           ;sensor.c: 67: if (lmp91000_isReady() == 0)
  5208  00B342  ECAF  F069         	call	_lmp91000_isReady	;wreg free
  5209  00B346  0900               	iorlw	0
  5210  00B348  A4D8               	btfss	status,2,c
  5211  00B34A  EFA9  F059         	goto	u20651
  5212  00B34E  EFAB  F059         	goto	u20650
  5213  00B352                     u20651:
  5214  00B352  EFAE  F059         	goto	l18825
  5215  00B356                     u20650:
  5216  00B356                     l18821:
  5217                           
  5218                           ;sensor.c: 68: return 0;
  5219  00B356  0E00               	movlw	0
  5220  00B358  EFF8  F059         	goto	l2013
  5221  00B35C                     l18825:
  5222                           
  5223                           ;sensor.c: 70: if (lmp91000_unlock() == 0)
  5224  00B35C  EC73  F06A         	call	_lmp91000_unlock	;wreg free
  5225  00B360  0900               	iorlw	0
  5226  00B362  A4D8               	btfss	status,2,c
  5227  00B364  EFB6  F059         	goto	u20661
  5228  00B368  EFB8  F059         	goto	u20660
  5229  00B36C                     u20661:
  5230  00B36C  EFBA  F059         	goto	l18831
  5231  00B370                     u20660:
  5232  00B370  EFAB  F059         	goto	l18821
  5233  00B374                     l18831:
  5234                           
  5235                           ;sensor.c: 73: if (lmp91000_set_GainRLoad(R350K, R10) == 0)
  5236  00B374  0E00               	movlw	0
  5237  00B376  6E0C               	movwf	lmp91000_set_GainRLoad@RLoad^0,c
  5238  00B378  0E07               	movlw	7
  5239  00B37A  EC57  F068         	call	_lmp91000_set_GainRLoad
  5240  00B37E  0900               	iorlw	0
  5241  00B380  A4D8               	btfss	status,2,c
  5242  00B382  EFC5  F059         	goto	u20671
  5243  00B386  EFC7  F059         	goto	u20670
  5244  00B38A                     u20671:
  5245  00B38A  EFC9  F059         	goto	l18837
  5246  00B38E                     u20670:
  5247  00B38E  EFAB  F059         	goto	l18821
  5248  00B392                     l18837:
  5249                           
  5250                           ;sensor.c: 78: if (lmp91000_set_Reference(EXTERNAL, S20P, NAGATIVE, B0P) == 0)
  5251  00B392  0E00               	movlw	0
  5252  00B394  6E0C               	movwf	lmp91000_set_Reference@IntZ^0,c
  5253  00B396  0E00               	movlw	0
  5254  00B398  6E0D               	movwf	lmp91000_set_Reference@sign^0,c
  5255  00B39A  0E00               	movlw	0
  5256  00B39C  6E0E               	movwf	lmp91000_set_Reference@bias^0,c
  5257  00B39E  0E01               	movlw	1
  5258  00B3A0  EC6E  F067         	call	_lmp91000_set_Reference
  5259  00B3A4  0900               	iorlw	0
  5260  00B3A6  A4D8               	btfss	status,2,c
  5261  00B3A8  EFD8  F059         	goto	u20681
  5262  00B3AC  EFDA  F059         	goto	u20680
  5263  00B3B0                     u20681:
  5264  00B3B0  EFDC  F059         	goto	l18843
  5265  00B3B4                     u20680:
  5266  00B3B4  EFAB  F059         	goto	l18821
  5267  00B3B8                     l18843:
  5268                           
  5269                           ;sensor.c: 82: if (lmp91000_set_Mode(DISABLE, AMPEROETRIC_3LEAD) == 0)
  5270  00B3B8  0E03               	movlw	3
  5271  00B3BA  6E0C               	movwf	lmp91000_set_Mode@mode^0,c
  5272  00B3BC  0E00               	movlw	0
  5273  00B3BE  EC25  F069         	call	_lmp91000_set_Mode
  5274  00B3C2  0900               	iorlw	0
  5275  00B3C4  A4D8               	btfss	status,2,c
  5276  00B3C6  EFE7  F059         	goto	u20691
  5277  00B3CA  EFE9  F059         	goto	u20690
  5278  00B3CE                     u20691:
  5279  00B3CE  EFEB  F059         	goto	l18849
  5280  00B3D2                     u20690:
  5281  00B3D2  EFAB  F059         	goto	l18821
  5282  00B3D6                     l18849:
  5283                           
  5284                           ;sensor.c: 85: if (lmp91000_lock() == 0)
  5285  00B3D6  EC83  F06A         	call	_lmp91000_lock	;wreg free
  5286  00B3DA  0900               	iorlw	0
  5287  00B3DC  A4D8               	btfss	status,2,c
  5288  00B3DE  EFF3  F059         	goto	u20701
  5289  00B3E2  EFF5  F059         	goto	u20700
  5290  00B3E6                     u20701:
  5291  00B3E6  EFF7  F059         	goto	l18855
  5292  00B3EA                     u20700:
  5293  00B3EA  EFAB  F059         	goto	l18821
  5294  00B3EE                     l18855:
  5295                           
  5296                           ;sensor.c: 88: return 1;
  5297  00B3EE  0E01               	movlw	1
  5298  00B3F0                     l2013:
  5299  00B3F0  0012               	return		;funcret
  5300  00B3F2                     __end_of_sensor_lmp_init:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function _lmp91000_unlock *****************
  5304 ;; Defined at:
  5305 ;;		line 123 in file "bsp/lmp91000.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  buff            2   11[COMRAM] unsigned char [2]
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      unsigned char 
  5312 ;; Registers used:
  5313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;Total ram usage:        2 bytes
  5324 ;; Hardware stack levels used: 1
  5325 ;; Hardware stack levels required when called: 4
  5326 ;; This function calls:
  5327 ;;		_i2c_writeBytes
  5328 ;; This function is called by:
  5329 ;;		_sensor_lmp_init
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	text16
  5334  00D4E6                     __ptext16:
  5335                           	callstack 0
  5336  00D4E6                     _lmp91000_unlock:
  5337                           	callstack 23
  5338  00D4E6                     
  5339                           ;lmp91000.c: 125: uint8_t buff[2];;lmp91000.c: 126: buff[0] = 0x01;
  5340  00D4E6  0E01               	movlw	1
  5341  00D4E8  6E0C               	movwf	lmp91000_unlock@buff^0,c
  5342                           
  5343                           ;lmp91000.c: 127: buff[1] = 0x00;
  5344  00D4EA  0E00               	movlw	0
  5345  00D4EC  6E0D               	movwf	(lmp91000_unlock@buff+1)^0,c
  5346  00D4EE                     
  5347                           ;lmp91000.c: 129: return i2c_writeBytes(0x90, buff, 2, 1);
  5348  00D4EE  0E0C               	movlw	low lmp91000_unlock@buff
  5349  00D4F0  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5350  00D4F2  0E00               	movlw	high lmp91000_unlock@buff
  5351  00D4F4  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5352  00D4F6  0E02               	movlw	2
  5353  00D4F8  6E09               	movwf	i2c_writeBytes@len^0,c
  5354  00D4FA  0E01               	movlw	1
  5355  00D4FC  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5356  00D4FE  0E90               	movlw	144
  5357  00D500  EC87  F065         	call	_i2c_writeBytes
  5358  00D504  0012               	return		;funcret
  5359  00D506                     __end_of_lmp91000_unlock:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function _lmp91000_set_Reference *****************
  5363 ;; Defined at:
  5364 ;;		line 195 in file "bsp/lmp91000.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  source          1    wreg     unsigned char 
  5367 ;;  IntZ            1   11[COMRAM] unsigned char 
  5368 ;;  sign            1   12[COMRAM] unsigned char 
  5369 ;;  bias            1   13[COMRAM] unsigned char 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  source          1   14[COMRAM] unsigned char 
  5372 ;;  buff            2   15[COMRAM] unsigned char [2]
  5373 ;;  reg             1   17[COMRAM] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      unsigned char 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5384 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5387 ;;Total ram usage:        7 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; Hardware stack levels required when called: 4
  5390 ;; This function calls:
  5391 ;;		_i2c_writeBytes
  5392 ;; This function is called by:
  5393 ;;		_sensor_lmp_init
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text17
  5398  00CEDC                     __ptext17:
  5399                           	callstack 0
  5400  00CEDC                     _lmp91000_set_Reference:
  5401                           	callstack 23
  5402                           
  5403                           ;incstack = 0
  5404                           ;lmp91000_set_Reference@source stored from wreg
  5405  00CEDC  6E0F               	movwf	lmp91000_set_Reference@source^0,c
  5406  00CEDE                     
  5407                           ;lmp91000.c: 197: uint8_t reg;;lmp91000.c: 198: uint8_t buff[2];;lmp91000.c: 200: reg = 
      +                          0x20;
  5408  00CEDE  0E20               	movlw	32
  5409  00CEE0  6E12               	movwf	lmp91000_set_Reference@reg^0,c
  5410  00CEE2                     
  5411                           ;lmp91000.c: 201: reg &= ~(3 << 5);
  5412  00CEE2  0E9F               	movlw	159
  5413  00CEE4  1612               	andwf	lmp91000_set_Reference@reg^0,f,c
  5414  00CEE6                     
  5415                           ;lmp91000.c: 202: reg |= source << 7;
  5416  00CEE6  400F               	rrncf	lmp91000_set_Reference@source^0,w,c
  5417  00CEE8  0B80               	andlw	128
  5418  00CEEA  1212               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5419  00CEEC                     
  5420                           ;lmp91000.c: 203: reg |= IntZ << 5;
  5421  00CEEC  380C               	swapf	lmp91000_set_Reference@IntZ^0,w,c
  5422  00CEEE  46E8               	rlncf	wreg,f,c
  5423  00CEF0  0BE0               	andlw	224
  5424  00CEF2  1212               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5425  00CEF4                     
  5426                           ;lmp91000.c: 204: reg |= sign << 4;
  5427  00CEF4  380D               	swapf	lmp91000_set_Reference@sign^0,w,c
  5428  00CEF6  0BF0               	andlw	240
  5429  00CEF8  1212               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5430  00CEFA                     
  5431                           ;lmp91000.c: 205: reg |= bias;
  5432  00CEFA  500E               	movf	lmp91000_set_Reference@bias^0,w,c
  5433  00CEFC  1212               	iorwf	lmp91000_set_Reference@reg^0,f,c
  5434  00CEFE                     
  5435                           ;lmp91000.c: 207: buff[0] = 0x11;;
  5436  00CEFE  0E11               	movlw	17
  5437  00CF00  6E10               	movwf	lmp91000_set_Reference@buff^0,c
  5438  00CF02                     
  5439                           ;lmp91000.c: 208: buff[1] = reg;
  5440  00CF02  C012  F011         	movff	lmp91000_set_Reference@reg,lmp91000_set_Reference@buff+1
  5441  00CF06                     
  5442                           ;lmp91000.c: 210: return i2c_writeBytes(0x90, buff, 2, 1);
  5443  00CF06  0E10               	movlw	low lmp91000_set_Reference@buff
  5444  00CF08  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5445  00CF0A  0E00               	movlw	high lmp91000_set_Reference@buff
  5446  00CF0C  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5447  00CF0E  0E02               	movlw	2
  5448  00CF10  6E09               	movwf	i2c_writeBytes@len^0,c
  5449  00CF12  0E01               	movlw	1
  5450  00CF14  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5451  00CF16  0E90               	movlw	144
  5452  00CF18  EC87  F065         	call	_i2c_writeBytes
  5453  00CF1C  0012               	return		;funcret
  5454  00CF1E                     __end_of_lmp91000_set_Reference:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _lmp91000_set_Mode *****************
  5458 ;; Defined at:
  5459 ;;		line 220 in file "bsp/lmp91000.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  fet             1    wreg     unsigned char 
  5462 ;;  mode            1   11[COMRAM] unsigned char 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  fet             1   12[COMRAM] unsigned char 
  5465 ;;  buff            2   13[COMRAM] unsigned char [2]
  5466 ;;  reg             1   15[COMRAM] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      unsigned char 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5477 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5479 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;Total ram usage:        5 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 4
  5483 ;; This function calls:
  5484 ;;		_i2c_writeBytes
  5485 ;; This function is called by:
  5486 ;;		_sensor_lmp_init
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text18
  5491  00D24A                     __ptext18:
  5492                           	callstack 0
  5493  00D24A                     _lmp91000_set_Mode:
  5494                           	callstack 23
  5495                           
  5496                           ;incstack = 0
  5497                           ;lmp91000_set_Mode@fet stored from wreg
  5498  00D24A  6E0D               	movwf	lmp91000_set_Mode@fet^0,c
  5499  00D24C                     
  5500                           ;lmp91000.c: 222: uint8_t reg;;lmp91000.c: 223: uint8_t buff[2];;lmp91000.c: 225: reg = 
      +                          0x00;
  5501  00D24C  0E00               	movlw	0
  5502  00D24E  6E10               	movwf	lmp91000_set_Mode@reg^0,c
  5503  00D250                     
  5504                           ;lmp91000.c: 226: reg |= fet << 7;
  5505  00D250  400D               	rrncf	lmp91000_set_Mode@fet^0,w,c
  5506  00D252  0B80               	andlw	128
  5507  00D254  1210               	iorwf	lmp91000_set_Mode@reg^0,f,c
  5508  00D256                     
  5509                           ;lmp91000.c: 227: reg |= mode;
  5510  00D256  500C               	movf	lmp91000_set_Mode@mode^0,w,c
  5511  00D258  1210               	iorwf	lmp91000_set_Mode@reg^0,f,c
  5512  00D25A                     
  5513                           ;lmp91000.c: 229: buff[0] = 0x12;;
  5514  00D25A  0E12               	movlw	18
  5515  00D25C  6E0E               	movwf	lmp91000_set_Mode@buff^0,c
  5516  00D25E                     
  5517                           ;lmp91000.c: 230: buff[1] = reg;
  5518  00D25E  C010  F00F         	movff	lmp91000_set_Mode@reg,lmp91000_set_Mode@buff+1
  5519  00D262                     
  5520                           ;lmp91000.c: 232: return i2c_writeBytes(0x90, buff, 2, 1);
  5521  00D262  0E0E               	movlw	low lmp91000_set_Mode@buff
  5522  00D264  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5523  00D266  0E00               	movlw	high lmp91000_set_Mode@buff
  5524  00D268  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5525  00D26A  0E02               	movlw	2
  5526  00D26C  6E09               	movwf	i2c_writeBytes@len^0,c
  5527  00D26E  0E01               	movlw	1
  5528  00D270  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5529  00D272  0E90               	movlw	144
  5530  00D274  EC87  F065         	call	_i2c_writeBytes
  5531  00D278  0012               	return		;funcret
  5532  00D27A                     __end_of_lmp91000_set_Mode:
  5533                           	callstack 0
  5534                           
  5535 ;; *************** function _lmp91000_set_GainRLoad *****************
  5536 ;; Defined at:
  5537 ;;		line 172 in file "bsp/lmp91000.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  user_gain       1    wreg     unsigned char 
  5540 ;;  RLoad           1   11[COMRAM] unsigned char 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  user_gain       1   12[COMRAM] unsigned char 
  5543 ;;  buff            2   13[COMRAM] unsigned char [2]
  5544 ;;  reg             1   15[COMRAM] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      unsigned char 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5555 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5557 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5558 ;;Total ram usage:        5 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 4
  5561 ;; This function calls:
  5562 ;;		_i2c_writeBytes
  5563 ;; This function is called by:
  5564 ;;		_sensor_lmp_init
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text19
  5569  00D0AE                     __ptext19:
  5570                           	callstack 0
  5571  00D0AE                     _lmp91000_set_GainRLoad:
  5572                           	callstack 23
  5573                           
  5574                           ;incstack = 0
  5575                           ;lmp91000_set_GainRLoad@user_gain stored from wreg
  5576  00D0AE  6E0D               	movwf	lmp91000_set_GainRLoad@user_gain^0,c
  5577  00D0B0                     
  5578                           ;lmp91000.c: 174: uint8_t reg;;lmp91000.c: 175: uint8_t buff[2];;lmp91000.c: 177: reg = 
      +                          0x03;
  5579  00D0B0  0E03               	movlw	3
  5580  00D0B2  6E10               	movwf	lmp91000_set_GainRLoad@reg^0,c
  5581  00D0B4                     
  5582                           ;lmp91000.c: 178: reg &= ~3;
  5583  00D0B4  0EFC               	movlw	252
  5584  00D0B6  1610               	andwf	lmp91000_set_GainRLoad@reg^0,f,c
  5585  00D0B8                     
  5586                           ;lmp91000.c: 179: reg |= (user_gain << 2);
  5587  00D0B8  440D               	rlncf	lmp91000_set_GainRLoad@user_gain^0,w,c
  5588  00D0BA  46E8               	rlncf	wreg,f,c
  5589  00D0BC  0BFC               	andlw	252
  5590  00D0BE  1210               	iorwf	lmp91000_set_GainRLoad@reg^0,f,c
  5591  00D0C0                     
  5592                           ;lmp91000.c: 180: reg |= RLoad;
  5593  00D0C0  500C               	movf	lmp91000_set_GainRLoad@RLoad^0,w,c
  5594  00D0C2  1210               	iorwf	lmp91000_set_GainRLoad@reg^0,f,c
  5595  00D0C4                     
  5596                           ;lmp91000.c: 182: buff[0] = 0x10;;
  5597  00D0C4  0E10               	movlw	16
  5598  00D0C6  6E0E               	movwf	lmp91000_set_GainRLoad@buff^0,c
  5599  00D0C8                     
  5600                           ;lmp91000.c: 183: buff[1] = reg;
  5601  00D0C8  C010  F00F         	movff	lmp91000_set_GainRLoad@reg,lmp91000_set_GainRLoad@buff+1
  5602  00D0CC                     
  5603                           ;lmp91000.c: 185: return i2c_writeBytes(0x90, buff, 2, 1);
  5604  00D0CC  0E0E               	movlw	low lmp91000_set_GainRLoad@buff
  5605  00D0CE  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5606  00D0D0  0E00               	movlw	high lmp91000_set_GainRLoad@buff
  5607  00D0D2  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5608  00D0D4  0E02               	movlw	2
  5609  00D0D6  6E09               	movwf	i2c_writeBytes@len^0,c
  5610  00D0D8  0E01               	movlw	1
  5611  00D0DA  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5612  00D0DC  0E90               	movlw	144
  5613  00D0DE  EC87  F065         	call	_i2c_writeBytes
  5614  00D0E2  0012               	return		;funcret
  5615  00D0E4                     __end_of_lmp91000_set_GainRLoad:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function _lmp91000_lock *****************
  5619 ;; Defined at:
  5620 ;;		line 108 in file "bsp/lmp91000.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  buff            2   11[COMRAM] unsigned char [2]
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      unsigned char 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;Total ram usage:        2 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; Hardware stack levels required when called: 4
  5641 ;; This function calls:
  5642 ;;		_i2c_writeBytes
  5643 ;; This function is called by:
  5644 ;;		_sensor_lmp_init
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text20
  5649  00D506                     __ptext20:
  5650                           	callstack 0
  5651  00D506                     _lmp91000_lock:
  5652                           	callstack 23
  5653  00D506                     
  5654                           ;lmp91000.c: 110: uint8_t buff[2];;lmp91000.c: 111: buff[0] = 0x01;
  5655  00D506  0E01               	movlw	1
  5656  00D508  6E0C               	movwf	lmp91000_lock@buff^0,c
  5657                           
  5658                           ;lmp91000.c: 112: buff[1] = 0x01;
  5659  00D50A  0E01               	movlw	1
  5660  00D50C  6E0D               	movwf	(lmp91000_lock@buff+1)^0,c
  5661  00D50E                     
  5662                           ;lmp91000.c: 114: return i2c_writeBytes(0x90, buff, 2, 1);
  5663  00D50E  0E0C               	movlw	low lmp91000_lock@buff
  5664  00D510  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5665  00D512  0E00               	movlw	high lmp91000_lock@buff
  5666  00D514  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5667  00D516  0E02               	movlw	2
  5668  00D518  6E09               	movwf	i2c_writeBytes@len^0,c
  5669  00D51A  0E01               	movlw	1
  5670  00D51C  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5671  00D51E  0E90               	movlw	144
  5672  00D520  EC87  F065         	call	_i2c_writeBytes
  5673  00D524  0012               	return		;funcret
  5674  00D526                     __end_of_lmp91000_lock:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function _lmp91000_isReady *****************
  5678 ;; Defined at:
  5679 ;;		line 155 in file "bsp/lmp91000.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  rBuff           1   18[COMRAM] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      unsigned char 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5697 ;;Total ram usage:        1 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 5
  5700 ;; This function calls:
  5701 ;;		_lmp91000_get_status
  5702 ;; This function is called by:
  5703 ;;		_sensor_lmp_init
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text21
  5708  00D35E                     __ptext21:
  5709                           	callstack 0
  5710  00D35E                     _lmp91000_isReady:
  5711                           	callstack 22
  5712  00D35E                     
  5713                           ;lmp91000.c: 157: uint8_t rBuff;;lmp91000.c: 159: if (lmp91000_get_status(&rBuff) == 0)
  5714  00D35E  0E13               	movlw	low lmp91000_isReady@rBuff
  5715  00D360  6E0F               	movwf	lmp91000_get_status@preg^0,c
  5716  00D362  0E00               	movlw	high lmp91000_isReady@rBuff
  5717  00D364  6E10               	movwf	(lmp91000_get_status@preg+1)^0,c
  5718  00D366  ECBD  F062         	call	_lmp91000_get_status	;wreg free
  5719  00D36A  0900               	iorlw	0
  5720  00D36C  A4D8               	btfss	status,2,c
  5721  00D36E  EFBB  F069         	goto	u20341
  5722  00D372  EFBD  F069         	goto	u20340
  5723  00D376                     u20341:
  5724  00D376  EFC0  F069         	goto	l18461
  5725  00D37A                     u20340:
  5726  00D37A                     
  5727                           ;lmp91000.c: 160: return 0;
  5728  00D37A  0E00               	movlw	0
  5729  00D37C  EFC2  F069         	goto	l977
  5730  00D380                     l18461:
  5731                           
  5732                           ;lmp91000.c: 162: return (rBuff & 0x01);
  5733  00D380  5013               	movf	lmp91000_isReady@rBuff^0,w,c
  5734  00D382  0B01               	andlw	1
  5735  00D384                     l977:
  5736  00D384  0012               	return		;funcret
  5737  00D386                     __end_of_lmp91000_isReady:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function _lmp91000_get_status *****************
  5741 ;; Defined at:
  5742 ;;		line 12 in file "bsp/lmp91000.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  preg            2   14[COMRAM] PTR unsigned char 
  5745 ;;		 -> lmp91000_isReady@rBuff(1), 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  rBuff           1   17[COMRAM] unsigned char 
  5748 ;;  wBuff           1   16[COMRAM] unsigned char 
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      unsigned char 
  5751 ;; Registers used:
  5752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;Total ram usage:        4 bytes
  5763 ;; Hardware stack levels used: 1
  5764 ;; Hardware stack levels required when called: 4
  5765 ;; This function calls:
  5766 ;;		_i2c_readBytes
  5767 ;;		_i2c_writeBytes
  5768 ;; This function is called by:
  5769 ;;		_lmp91000_isReady
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text22
  5774  00C57A                     __ptext22:
  5775                           	callstack 0
  5776  00C57A                     _lmp91000_get_status:
  5777                           	callstack 22
  5778  00C57A                     
  5779                           ;lmp91000.c: 14: uint8_t wBuff = 0x00;
  5780  00C57A  0E00               	movlw	0
  5781  00C57C  6E11               	movwf	lmp91000_get_status@wBuff^0,c
  5782  00C57E                     
  5783                           ;lmp91000.c: 15: uint8_t rBuff;;lmp91000.c: 17: if (i2c_writeBytes(0x90, &wBuff, 1, 0) =
      +                          = 0) {
  5784  00C57E  0E11               	movlw	low lmp91000_get_status@wBuff
  5785  00C580  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  5786  00C582  0E00               	movlw	high lmp91000_get_status@wBuff
  5787  00C584  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  5788  00C586  0E01               	movlw	1
  5789  00C588  6E09               	movwf	i2c_writeBytes@len^0,c
  5790  00C58A  0E00               	movlw	0
  5791  00C58C  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  5792  00C58E  0E90               	movlw	144
  5793  00C590  EC87  F065         	call	_i2c_writeBytes
  5794  00C594  0900               	iorlw	0
  5795  00C596  A4D8               	btfss	status,2,c
  5796  00C598  EFD0  F062         	goto	u19861
  5797  00C59C  EFD2  F062         	goto	u19860
  5798  00C5A0                     u19861:
  5799  00C5A0  EFD5  F062         	goto	l18075
  5800  00C5A4                     u19860:
  5801  00C5A4                     l18071:
  5802                           
  5803                           ;lmp91000.c: 18: return 0;
  5804  00C5A4  0E00               	movlw	0
  5805  00C5A6  EFEF  F062         	goto	l942
  5806  00C5AA                     l18075:
  5807                           
  5808                           ;lmp91000.c: 19: };lmp91000.c: 21: if (i2c_readBytes(0x90, &rBuff, 1) == 0) {
  5809  00C5AA  0E12               	movlw	low lmp91000_get_status@rBuff
  5810  00C5AC  6E03               	movwf	i2c_readBytes@rdptr^0,c
  5811  00C5AE  0E00               	movlw	high lmp91000_get_status@rBuff
  5812  00C5B0  6E04               	movwf	(i2c_readBytes@rdptr+1)^0,c
  5813  00C5B2  0E01               	movlw	1
  5814  00C5B4  6E05               	movwf	i2c_readBytes@len^0,c
  5815  00C5B6  0E90               	movlw	144
  5816  00C5B8  EC51  F05A         	call	_i2c_readBytes
  5817  00C5BC  0900               	iorlw	0
  5818  00C5BE  A4D8               	btfss	status,2,c
  5819  00C5C0  EFE4  F062         	goto	u19871
  5820  00C5C4  EFE6  F062         	goto	u19870
  5821  00C5C8                     u19871:
  5822  00C5C8  EFE8  F062         	goto	l18081
  5823  00C5CC                     u19870:
  5824  00C5CC  EFD2  F062         	goto	l18071
  5825  00C5D0                     l18081:
  5826                           
  5827                           ;lmp91000.c: 23: };lmp91000.c: 25: *preg = rBuff;
  5828  00C5D0  C00F  FFD9         	movff	lmp91000_get_status@preg,fsr2l
  5829  00C5D4  C010  FFDA         	movff	lmp91000_get_status@preg+1,fsr2h
  5830  00C5D8  C012  FFDF         	movff	lmp91000_get_status@rBuff,indf2
  5831  00C5DC                     
  5832                           ;lmp91000.c: 27: return 1;
  5833  00C5DC  0E01               	movlw	1
  5834  00C5DE                     l942:
  5835  00C5DE  0012               	return		;funcret
  5836  00C5E0                     __end_of_lmp91000_get_status:
  5837                           	callstack 0
  5838                           
  5839 ;; *************** function _sensor_adc_init *****************
  5840 ;; Defined at:
  5841 ;;		line 60 in file "sensor.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      unsigned char 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 6
  5862 ;; This function calls:
  5863 ;;		_ads1114_SetUp
  5864 ;; This function is called by:
  5865 ;;		_sensor_init
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text23
  5870  00D624                     __ptext23:
  5871                           	callstack 0
  5872  00D624                     _sensor_adc_init:
  5873                           	callstack 22
  5874  00D624                     
  5875                           ;sensor.c: 62: return ads1114_SetUp(CONTINUE_CONV, FSR_0p256V, SPS128);
  5876  00D624  0E05               	movlw	5
  5877  00D626  6E13               	movwf	ads1114_SetUp@pga^0,c
  5878  00D628  0E04               	movlw	4
  5879  00D62A  6E14               	movwf	ads1114_SetUp@dataRate^0,c
  5880  00D62C  0E00               	movlw	0
  5881  00D62E  ECE7  F067         	call	_ads1114_SetUp
  5882  00D632  0012               	return		;funcret
  5883  00D634                     __end_of_sensor_adc_init:
  5884                           	callstack 0
  5885                           
  5886 ;; *************** function _ads1114_SetUp *****************
  5887 ;; Defined at:
  5888 ;;		line 32 in file "bsp/ads1114.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  mode            1    wreg     unsigned char 
  5891 ;;  pga             1   18[COMRAM] unsigned char 
  5892 ;;  dataRate        1   19[COMRAM] unsigned char 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  mode            1   20[COMRAM] unsigned char 
  5895 ;;  buff            2   21[COMRAM] unsigned char [2]
  5896 ;;  wraddr          1   23[COMRAM] unsigned char 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      unsigned char 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5907 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5909 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5910 ;;Total ram usage:        6 bytes
  5911 ;; Hardware stack levels used: 1
  5912 ;; Hardware stack levels required when called: 5
  5913 ;; This function calls:
  5914 ;;		_i2c_writeBytes_to
  5915 ;; This function is called by:
  5916 ;;		_sensor_adc_init
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text24
  5921  00CFCE                     __ptext24:
  5922                           	callstack 0
  5923  00CFCE                     _ads1114_SetUp:
  5924                           	callstack 22
  5925                           
  5926                           ;incstack = 0
  5927                           ;ads1114_SetUp@mode stored from wreg
  5928  00CFCE  6E15               	movwf	ads1114_SetUp@mode^0,c
  5929  00CFD0                     
  5930                           ;ads1114.c: 34: uint8_t wraddr = 0x01;
  5931  00CFD0  0E01               	movlw	1
  5932  00CFD2  6E18               	movwf	ads1114_SetUp@wraddr^0,c
  5933  00CFD4                     
  5934                           ;ads1114.c: 35: uint8_t buff[2];;ads1114.c: 37: buff[0] = 0x00 | (pga << 1) | mode;
  5935  00CFD4  5013               	movf	ads1114_SetUp@pga^0,w,c
  5936  00CFD6  2413               	addwf	ads1114_SetUp@pga^0,w,c
  5937  00CFD8  1015               	iorwf	ads1114_SetUp@mode^0,w,c
  5938  00CFDA  6E16               	movwf	ads1114_SetUp@buff^0,c
  5939  00CFDC                     
  5940                           ;ads1114.c: 38: buff[1] = dataRate << 5 | 0b00010011;
  5941  00CFDC  3814               	swapf	ads1114_SetUp@dataRate^0,w,c
  5942  00CFDE  46E8               	rlncf	wreg,f,c
  5943  00CFE0  0BE0               	andlw	224
  5944  00CFE2  0913               	iorlw	19
  5945  00CFE4  6E17               	movwf	(ads1114_SetUp@buff+1)^0,c
  5946  00CFE6                     
  5947                           ;ads1114.c: 40: return i2c_writeBytes_to(0x92, &wraddr, 1, buff, 2);
  5948  00CFE6  0E18               	movlw	low ads1114_SetUp@wraddr
  5949  00CFE8  6E0C               	movwf	i2c_writeBytes_to@wraddr^0,c
  5950  00CFEA  0E00               	movlw	high ads1114_SetUp@wraddr
  5951  00CFEC  6E0D               	movwf	(i2c_writeBytes_to@wraddr+1)^0,c
  5952  00CFEE  0E01               	movlw	1
  5953  00CFF0  6E0E               	movwf	i2c_writeBytes_to@addrlen^0,c
  5954  00CFF2  0E16               	movlw	low ads1114_SetUp@buff
  5955  00CFF4  6E0F               	movwf	i2c_writeBytes_to@wrptr^0,c
  5956  00CFF6  0E00               	movlw	high ads1114_SetUp@buff
  5957  00CFF8  6E10               	movwf	(i2c_writeBytes_to@wrptr+1)^0,c
  5958  00CFFA  0E02               	movlw	2
  5959  00CFFC  6E11               	movwf	i2c_writeBytes_to@len^0,c
  5960  00CFFE  0E92               	movlw	146
  5961  00D000  EC7D  F064         	call	_i2c_writeBytes_to
  5962  00D004  0012               	return		;funcret
  5963  00D006                     __end_of_ads1114_SetUp:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function _i2c_writeBytes_to *****************
  5967 ;; Defined at:
  5968 ;;		line 73 in file "bsp/i2c.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  address         1    wreg     const unsigned char 
  5971 ;;  wraddr          2   11[COMRAM] PTR const unsigned char 
  5972 ;;		 -> sht3x_write_alert_limits@cmd(2), ads1114_Comparator_SetUp@wbuff(1), ads1114_SetUp@wraddr(1), 
  5973 ;;  addrlen         1   13[COMRAM] const unsigned char 
  5974 ;;  wrptr           2   14[COMRAM] PTR const unsigned char 
  5975 ;;		 -> sht3x_write_alert_limits@buff(3), ads1114_Comparator_SetUp@rbuff(2), ads1114_SetUp@buff(2), 
  5976 ;;  len             1   16[COMRAM] const unsigned char 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  address         1   17[COMRAM] const unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      unsigned char 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5992 ;;Total ram usage:        7 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 4
  5995 ;; This function calls:
  5996 ;;		_I2C_Stop
  5997 ;;		_i2c_writeBytes
  5998 ;;		_i2c_writeData
  5999 ;; This function is called by:
  6000 ;;		_ads1114_SetUp
  6001 ;;		_ads1114_Comparator_SetUp
  6002 ;;		_sht3x_write_alert_limits
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text25
  6007  00C8FA                     __ptext25:
  6008                           	callstack 0
  6009  00C8FA                     _i2c_writeBytes_to:
  6010                           	callstack 22
  6011                           
  6012                           ;incstack = 0
  6013                           ;i2c_writeBytes_to@address stored from wreg
  6014  00C8FA  6E12               	movwf	i2c_writeBytes_to@address^0,c
  6015  00C8FC                     
  6016                           ;i2c.c: 75: if (i2c_writeBytes(address, wraddr, addrlen, 0) == 0) {
  6017  00C8FC  C00C  F007         	movff	i2c_writeBytes_to@wraddr,i2c_writeBytes@wrptr
  6018  00C900  C00D  F008         	movff	i2c_writeBytes_to@wraddr+1,i2c_writeBytes@wrptr+1
  6019  00C904  C00E  F009         	movff	i2c_writeBytes_to@addrlen,i2c_writeBytes@len
  6020  00C908  0E00               	movlw	0
  6021  00C90A  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  6022  00C90C  5012               	movf	i2c_writeBytes_to@address^0,w,c
  6023  00C90E  EC87  F065         	call	_i2c_writeBytes
  6024  00C912  0900               	iorlw	0
  6025  00C914  A4D8               	btfss	status,2,c
  6026  00C916  EF8F  F064         	goto	u19841
  6027  00C91A  EF91  F064         	goto	u19840
  6028  00C91E                     u19841:
  6029  00C91E  EF96  F064         	goto	l18057
  6030  00C922                     u19840:
  6031  00C922                     
  6032                           ;i2c.c: 76: I2C_Stop();
  6033  00C922  ECFD  F069         	call	_I2C_Stop	;wreg free
  6034  00C926                     l18053:
  6035                           
  6036                           ;i2c.c: 77: return 0;
  6037  00C926  0E00               	movlw	0
  6038  00C928  EFAB  F064         	goto	l833
  6039  00C92C                     l18057:
  6040                           
  6041                           ;i2c.c: 78: };i2c.c: 80: if (i2c_writeData(wrptr, len, 1) == 0) {
  6042  00C92C  C00F  F002         	movff	i2c_writeBytes_to@wrptr,i2c_writeData@wrptr
  6043  00C930  C010  F003         	movff	i2c_writeBytes_to@wrptr+1,i2c_writeData@wrptr+1
  6044  00C934  C011  F004         	movff	i2c_writeBytes_to@len,i2c_writeData@len
  6045  00C938  0E01               	movlw	1
  6046  00C93A  6E05               	movwf	i2c_writeData@isStop^0,c
  6047  00C93C  EC47  F061         	call	_i2c_writeData	;wreg free
  6048  00C940  0900               	iorlw	0
  6049  00C942  A4D8               	btfss	status,2,c
  6050  00C944  EFA6  F064         	goto	u19851
  6051  00C948  EFA8  F064         	goto	u19850
  6052  00C94C                     u19851:
  6053  00C94C  EFAA  F064         	goto	l18063
  6054  00C950                     u19850:
  6055  00C950  EF93  F064         	goto	l18053
  6056  00C954                     l18063:
  6057                           
  6058                           ;i2c.c: 82: };i2c.c: 84: return 1;
  6059  00C954  0E01               	movlw	1
  6060  00C956                     l833:
  6061  00C956  0012               	return		;funcret
  6062  00C958                     __end_of_i2c_writeBytes_to:
  6063                           	callstack 0
  6064                           
  6065 ;; *************** function _sensMeasure_temp_read *****************
  6066 ;; Defined at:
  6067 ;;		line 76 in file "app_sens_measure.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  humi            4   49[BANK0 ] float 
  6072 ;;  temp            4   45[BANK0 ] float 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      unsigned char 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;Total ram usage:        8 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 7
  6089 ;; This function calls:
  6090 ;;		___fladd
  6091 ;;		_sensor_read_temp_humi
  6092 ;; This function is called by:
  6093 ;;		_sensMeasure_task
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text26
  6098  00B9C4                     __ptext26:
  6099                           	callstack 0
  6100  00B9C4                     _sensMeasure_temp_read:
  6101                           	callstack 22
  6102  00B9C4                     
  6103                           ;app_sens_measure.c: 78: float temp, humi;;app_sens_measure.c: 80: if (g_sens_measure.is
      +                          InitDone == 0)
  6104  00B9C4  0101               	movlb	1	; () banked
  6105  00B9C6  5143               	movf	(_g_sens_measure+3)& (0+255),w,b
  6106  00B9C8  A4D8               	btfss	status,2,c
  6107  00B9CA  EFE9  F05C         	goto	u21101
  6108  00B9CE  EFEB  F05C         	goto	u21100
  6109  00B9D2                     u21101:
  6110  00B9D2  EFEE  F05C         	goto	l19335
  6111  00B9D6                     u21100:
  6112  00B9D6                     l19331:
  6113                           
  6114                           ;app_sens_measure.c: 81: return 0;
  6115  00B9D6  0E00               	movlw	0
  6116  00B9D8  EF2C  F05D         	goto	l1659
  6117  00B9DC                     l19335:
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;app_sens_measure.c: 83: if (sensor_read_temp_humi(&temp, &humi)) {
  6121  00B9DC  0E8D               	movlw	low sensMeasure_temp_read@temp
  6122  00B9DE  0100               	movlb	0	; () banked
  6123  00B9E0  6F89               	movwf	sensor_read_temp_humi@temp& (0+255),b
  6124  00B9E2  0E00               	movlw	high sensMeasure_temp_read@temp
  6125  00B9E4  6F8A               	movwf	(sensor_read_temp_humi@temp+1)& (0+255),b
  6126  00B9E6  0E91               	movlw	low sensMeasure_temp_read@humi
  6127  00B9E8  6F8B               	movwf	sensor_read_temp_humi@humi& (0+255),b
  6128  00B9EA  0E00               	movlw	high sensMeasure_temp_read@humi
  6129  00B9EC  6F8C               	movwf	(sensor_read_temp_humi@humi+1)& (0+255),b
  6130  00B9EE  EC07  F06B         	call	_sensor_read_temp_humi	;wreg free
  6131  00B9F2  0900               	iorlw	0
  6132  00B9F4  B4D8               	btfsc	status,2,c
  6133  00B9F6  EFFF  F05C         	goto	u21111
  6134  00B9FA  EF01  F05D         	goto	u21110
  6135  00B9FE                     u21111:
  6136  00B9FE  EFEB  F05C         	goto	l19331
  6137  00BA02                     u21110:
  6138  00BA02                     
  6139                           ;app_sens_measure.c: 84: g_temp_value[LV_TEMP] = temp;
  6140  00BA02  C08D  F114         	movff	sensMeasure_temp_read@temp,_g_temp_value+20
  6141  00BA06  C08E  F115         	movff	sensMeasure_temp_read@temp+1,_g_temp_value+21
  6142  00BA0A  C08F  F116         	movff	sensMeasure_temp_read@temp+2,_g_temp_value+22
  6143  00BA0E  C090  F117         	movff	sensMeasure_temp_read@temp+3,_g_temp_value+23
  6144  00BA12                     
  6145                           ;app_sens_measure.c: 85: g_temp_value[LV_TEMP] += g_nvm.flash.tempOffset;
  6146  00BA12  C114  F027         	movff	_g_temp_value+20,___fladd@b
  6147  00BA16  C115  F028         	movff	_g_temp_value+21,___fladd@b+1
  6148  00BA1A  C116  F029         	movff	_g_temp_value+22,___fladd@b+2
  6149  00BA1E  C117  F02A         	movff	_g_temp_value+23,___fladd@b+3
  6150  00BA22  C1A1  F02B         	movff	_g_nvm+17,___fladd@a
  6151  00BA26  C1A2  F02C         	movff	_g_nvm+18,___fladd@a+1
  6152  00BA2A  C1A3  F02D         	movff	_g_nvm+19,___fladd@a+2
  6153  00BA2E  C1A4  F02E         	movff	_g_nvm+20,___fladd@a+3
  6154  00BA32  EC13  F029         	call	___fladd	;wreg free
  6155  00BA36  C027  F114         	movff	?___fladd,_g_temp_value+20
  6156  00BA3A  C028  F115         	movff	?___fladd+1,_g_temp_value+21
  6157  00BA3E  C029  F116         	movff	?___fladd+2,_g_temp_value+22
  6158  00BA42  C02A  F117         	movff	?___fladd+3,_g_temp_value+23
  6159  00BA46                     
  6160                           ;app_sens_measure.c: 86: g_temp_value[LV_HUMI] = humi;
  6161  00BA46  C091  F118         	movff	sensMeasure_temp_read@humi,_g_temp_value+24
  6162  00BA4A  C092  F119         	movff	sensMeasure_temp_read@humi+1,_g_temp_value+25
  6163  00BA4E  C093  F11A         	movff	sensMeasure_temp_read@humi+2,_g_temp_value+26
  6164  00BA52  C094  F11B         	movff	sensMeasure_temp_read@humi+3,_g_temp_value+27
  6165  00BA56                     
  6166                           ;app_sens_measure.c: 87: return 1;
  6167  00BA56  0E01               	movlw	1
  6168  00BA58                     l1659:
  6169  00BA58  0012               	return		;funcret
  6170  00BA5A                     __end_of_sensMeasure_temp_read:
  6171                           	callstack 0
  6172                           
  6173 ;; *************** function _sensor_read_temp_humi *****************
  6174 ;; Defined at:
  6175 ;;		line 121 in file "sensor.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;  temp            2   41[BANK0 ] PTR float 
  6178 ;;		 -> sensMeasure_temp_read@temp(4), 
  6179 ;;  humi            2   43[BANK0 ] PTR float 
  6180 ;;		 -> sensMeasure_temp_read@humi(4), 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      unsigned char 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6192 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;Total ram usage:        4 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; Hardware stack levels required when called: 6
  6199 ;; This function calls:
  6200 ;;		_sht3x_measure_nonblock_read
  6201 ;; This function is called by:
  6202 ;;		_sensMeasure_temp_read
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text27
  6207  00D60E                     __ptext27:
  6208                           	callstack 0
  6209  00D60E                     _sensor_read_temp_humi:
  6210                           	callstack 22
  6211  00D60E                     
  6212                           ;sensor.c: 127: return sht3x_measure_nonblock_read(temp, humi);
  6213  00D60E  C089  F085         	movff	sensor_read_temp_humi@temp,sht3x_measure_nonblock_read@temp
  6214  00D612  C08A  F086         	movff	sensor_read_temp_humi@temp+1,sht3x_measure_nonblock_read@temp+1
  6215  00D616  C08B  F087         	movff	sensor_read_temp_humi@humi,sht3x_measure_nonblock_read@humi
  6216  00D61A  C08C  F088         	movff	sensor_read_temp_humi@humi+1,sht3x_measure_nonblock_read@humi+1
  6217  00D61E  EC4D  F064         	call	_sht3x_measure_nonblock_read	;wreg free
  6218  00D622  0012               	return		;funcret
  6219  00D624                     __end_of_sensor_read_temp_humi:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _sht3x_measure_nonblock_read *****************
  6223 ;; Defined at:
  6224 ;;		line 200 in file "bsp/sht3x.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  temp            2   37[BANK0 ] PTR float 
  6227 ;;		 -> sensMeasure_temp_read@temp(4), 
  6228 ;;  humi            2   39[BANK0 ] PTR float 
  6229 ;;		 -> sensMeasure_temp_read@humi(4), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  cmd             2   92[COMRAM] unsigned char [2]
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      unsigned char 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6244 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6245 ;;Total ram usage:        6 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 5
  6248 ;; This function calls:
  6249 ;;		_i2c_writeBytes
  6250 ;;		_sht3x_measure_read
  6251 ;; This function is called by:
  6252 ;;		_sensor_read_temp_humi
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text28
  6257  00C89A                     __ptext28:
  6258                           	callstack 0
  6259  00C89A                     _sht3x_measure_nonblock_read:
  6260                           	callstack 22
  6261  00C89A                     
  6262                           ;sht3x.c: 202: uint8_t cmd[2];;sht3x.c: 203: cmd[0] = 0xe0;
  6263  00C89A  0EE0               	movlw	224
  6264  00C89C  6E5D               	movwf	sht3x_measure_nonblock_read@cmd^0,c
  6265                           
  6266                           ;sht3x.c: 204: cmd[1] = 0x00;
  6267  00C89E  0E00               	movlw	0
  6268  00C8A0  6E5E               	movwf	(sht3x_measure_nonblock_read@cmd+1)^0,c
  6269  00C8A2                     
  6270                           ;sht3x.c: 206: if (i2c_writeBytes(0x88, cmd, 2, 0) == 0)
  6271  00C8A2  0E5D               	movlw	low sht3x_measure_nonblock_read@cmd
  6272  00C8A4  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  6273  00C8A6  0E00               	movlw	high sht3x_measure_nonblock_read@cmd
  6274  00C8A8  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  6275  00C8AA  0E02               	movlw	2
  6276  00C8AC  6E09               	movwf	i2c_writeBytes@len^0,c
  6277  00C8AE  0E00               	movlw	0
  6278  00C8B0  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  6279  00C8B2  0E88               	movlw	136
  6280  00C8B4  EC87  F065         	call	_i2c_writeBytes
  6281  00C8B8  0900               	iorlw	0
  6282  00C8BA  A4D8               	btfss	status,2,c
  6283  00C8BC  EF62  F064         	goto	u20351
  6284  00C8C0  EF64  F064         	goto	u20350
  6285  00C8C4                     u20351:
  6286  00C8C4  EF67  F064         	goto	l18529
  6287  00C8C8                     u20350:
  6288  00C8C8                     l18525:
  6289                           
  6290                           ;sht3x.c: 207: return 0;
  6291  00C8C8  0E00               	movlw	0
  6292  00C8CA  EF7C  F064         	goto	l1030
  6293  00C8CE                     l18529:
  6294                           
  6295                           ;sht3x.c: 209: if (sht3x_measure_read(temp, humi) == 0)
  6296  00C8CE  C085  F079         	movff	sht3x_measure_nonblock_read@temp,sht3x_measure_read@temp
  6297  00C8D2  C086  F07A         	movff	sht3x_measure_nonblock_read@temp+1,sht3x_measure_read@temp+1
  6298  00C8D6  C087  F07B         	movff	sht3x_measure_nonblock_read@humi,sht3x_measure_read@humi
  6299  00C8DA  C088  F07C         	movff	sht3x_measure_nonblock_read@humi+1,sht3x_measure_read@humi+1
  6300  00C8DE  EC43  F043         	call	_sht3x_measure_read	;wreg free
  6301  00C8E2  0900               	iorlw	0
  6302  00C8E4  A4D8               	btfss	status,2,c
  6303  00C8E6  EF77  F064         	goto	u20361
  6304  00C8EA  EF79  F064         	goto	u20360
  6305  00C8EE                     u20361:
  6306  00C8EE  EF7B  F064         	goto	l18535
  6307  00C8F2                     u20360:
  6308  00C8F2  EF64  F064         	goto	l18525
  6309  00C8F6                     l18535:
  6310                           
  6311                           ;sht3x.c: 212: return 1;
  6312  00C8F6  0E01               	movlw	1
  6313  00C8F8                     l1030:
  6314  00C8F8  0012               	return		;funcret
  6315  00C8FA                     __end_of_sht3x_measure_nonblock_read:
  6316                           	callstack 0
  6317                           
  6318 ;; *************** function _sht3x_measure_read *****************
  6319 ;; Defined at:
  6320 ;;		line 175 in file "bsp/sht3x.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  temp            2   25[BANK0 ] PTR float 
  6323 ;;		 -> sensMeasure_temp_read@temp(4), 
  6324 ;;  humi            2   27[BANK0 ] PTR float 
  6325 ;;		 -> sensMeasure_temp_read@humi(4), 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  raw_humi        4   33[BANK0 ] long 
  6328 ;;  raw_temp        4   29[BANK0 ] long 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      unsigned char 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;Total ram usage:       13 bytes
  6343 ;; Hardware stack levels used: 1
  6344 ;; Hardware stack levels required when called: 4
  6345 ;; This function calls:
  6346 ;;		___fldiv
  6347 ;;		___lmul
  6348 ;;		___xxtofl
  6349 ;;		_sht3x_common_read
  6350 ;; This function is called by:
  6351 ;;		_sht3x_measure_nonblock_read
  6352 ;;		_sht3x_measure_block_read
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text29
  6357  008686                     __ptext29:
  6358                           	callstack 0
  6359  008686                     _sht3x_measure_read:
  6360                           	callstack 22
  6361  008686                     
  6362                           ;sht3x.c: 177: int32_t raw_temp, raw_humi;;sht3x.c: 178: if (sht3x_common_read(&raw_temp
      +                          , &raw_humi) == 0)
  6363  008686  0E7D               	movlw	low sht3x_measure_read@raw_temp
  6364  008688  6E0F               	movwf	sht3x_common_read@temp^0,c
  6365  00868A  0E00               	movlw	high sht3x_measure_read@raw_temp
  6366  00868C  6E10               	movwf	(sht3x_common_read@temp+1)^0,c
  6367  00868E  0E81               	movlw	low sht3x_measure_read@raw_humi
  6368  008690  6E11               	movwf	sht3x_common_read@humi^0,c
  6369  008692  0E00               	movlw	high sht3x_measure_read@raw_humi
  6370  008694  6E12               	movwf	(sht3x_common_read@humi+1)^0,c
  6371  008696  ECEE  F051         	call	_sht3x_common_read	;wreg free
  6372  00869A  0900               	iorlw	0
  6373  00869C  A4D8               	btfss	status,2,c
  6374  00869E  EF53  F043         	goto	u19881
  6375  0086A2  EF55  F043         	goto	u19880
  6376  0086A6                     u19881:
  6377  0086A6  EF58  F043         	goto	l18093
  6378  0086AA                     u19880:
  6379  0086AA                     
  6380                           ;sht3x.c: 179: return 0;
  6381  0086AA  0E00               	movlw	0
  6382  0086AC  EF06  F044         	goto	l1026
  6383  0086B0                     l18093:
  6384                           
  6385                           ;sht3x.c: 187: raw_temp = ((21875 * raw_temp) >> 13) - 45000;
  6386  0086B0  0E0D               	movlw	13
  6387  0086B2  6E5C               	movwf	??_sht3x_measure_read^0,c
  6388  0086B4  C07D  F001         	movff	sht3x_measure_read@raw_temp,___lmul@multiplier
  6389  0086B8  C07E  F002         	movff	sht3x_measure_read@raw_temp+1,___lmul@multiplier+1
  6390  0086BC  C07F  F003         	movff	sht3x_measure_read@raw_temp+2,___lmul@multiplier+2
  6391  0086C0  C080  F004         	movff	sht3x_measure_read@raw_temp+3,___lmul@multiplier+3
  6392  0086C4  0E73               	movlw	115
  6393  0086C6  6E05               	movwf	___lmul@multiplicand^0,c
  6394  0086C8  0E55               	movlw	85
  6395  0086CA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6396  0086CC  0E00               	movlw	0
  6397  0086CE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6398  0086D0  0E00               	movlw	0
  6399  0086D2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6400  0086D4  EC20  F062         	call	___lmul	;wreg free
  6401  0086D8                     u19895:
  6402  0086D8  665C               	tstfsz	??_sht3x_measure_read^0,c
  6403  0086DA  EF71  F043         	goto	u19896
  6404  0086DE  EF79  F043         	goto	u19897
  6405  0086E2                     u19896:
  6406  0086E2  3404               	rlcf	(?___lmul+3)^0,w,c
  6407  0086E4  3204               	rrcf	(?___lmul+3)^0,f,c
  6408  0086E6  3203               	rrcf	(?___lmul+2)^0,f,c
  6409  0086E8  3202               	rrcf	(?___lmul+1)^0,f,c
  6410  0086EA  3201               	rrcf	?___lmul^0,f,c
  6411  0086EC  2E5C               	decfsz	??_sht3x_measure_read^0,f,c
  6412  0086EE  EF6C  F043         	goto	u19895
  6413  0086F2                     u19897:
  6414  0086F2  0E38               	movlw	56
  6415  0086F4  2401               	addwf	?___lmul^0,w,c
  6416  0086F6  0100               	movlb	0	; () banked
  6417  0086F8  6F7D               	movwf	sht3x_measure_read@raw_temp& (0+255),b
  6418  0086FA  0E50               	movlw	80
  6419  0086FC  2002               	addwfc	(?___lmul+1)^0,w,c
  6420  0086FE  6F7E               	movwf	(sht3x_measure_read@raw_temp+1)& (0+255),b
  6421  008700  0EFF               	movlw	255
  6422  008702  2003               	addwfc	(?___lmul+2)^0,w,c
  6423  008704  6F7F               	movwf	(sht3x_measure_read@raw_temp+2)& (0+255),b
  6424  008706  0EFF               	movlw	255
  6425  008708  2004               	addwfc	(?___lmul+3)^0,w,c
  6426  00870A  6F80               	movwf	(sht3x_measure_read@raw_temp+3)& (0+255),b
  6427                           
  6428                           ;sht3x.c: 188: raw_humi = ((12500 * raw_humi) >> 13);
  6429  00870C  0E0D               	movlw	13
  6430  00870E  6E5C               	movwf	??_sht3x_measure_read^0,c
  6431  008710  C081  F001         	movff	sht3x_measure_read@raw_humi,___lmul@multiplier
  6432  008714  C082  F002         	movff	sht3x_measure_read@raw_humi+1,___lmul@multiplier+1
  6433  008718  C083  F003         	movff	sht3x_measure_read@raw_humi+2,___lmul@multiplier+2
  6434  00871C  C084  F004         	movff	sht3x_measure_read@raw_humi+3,___lmul@multiplier+3
  6435  008720  0ED4               	movlw	212
  6436  008722  6E05               	movwf	___lmul@multiplicand^0,c
  6437  008724  0E30               	movlw	48
  6438  008726  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6439  008728  0E00               	movlw	0
  6440  00872A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6441  00872C  0E00               	movlw	0
  6442  00872E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6443  008730  EC20  F062         	call	___lmul	;wreg free
  6444  008734                     u19905:
  6445  008734  665C               	tstfsz	??_sht3x_measure_read^0,c
  6446  008736  EF9F  F043         	goto	u19906
  6447  00873A  EFA7  F043         	goto	u19907
  6448  00873E                     u19906:
  6449  00873E  3404               	rlcf	(?___lmul+3)^0,w,c
  6450  008740  3204               	rrcf	(?___lmul+3)^0,f,c
  6451  008742  3203               	rrcf	(?___lmul+2)^0,f,c
  6452  008744  3202               	rrcf	(?___lmul+1)^0,f,c
  6453  008746  3201               	rrcf	?___lmul^0,f,c
  6454  008748  2E5C               	decfsz	??_sht3x_measure_read^0,f,c
  6455  00874A  EF9A  F043         	goto	u19905
  6456  00874E                     u19907:
  6457  00874E  C001  F081         	movff	?___lmul,sht3x_measure_read@raw_humi
  6458  008752  C002  F082         	movff	?___lmul+1,sht3x_measure_read@raw_humi+1
  6459  008756  C003  F083         	movff	?___lmul+2,sht3x_measure_read@raw_humi+2
  6460  00875A  C004  F084         	movff	?___lmul+3,sht3x_measure_read@raw_humi+3
  6461  00875E                     
  6462                           ;sht3x.c: 190: *temp = (float)(raw_temp / 1000.0f);
  6463  00875E  C07D  F019         	movff	sht3x_measure_read@raw_temp,___xxtofl@val
  6464  008762  C07E  F01A         	movff	sht3x_measure_read@raw_temp+1,___xxtofl@val+1
  6465  008766  C07F  F01B         	movff	sht3x_measure_read@raw_temp+2,___xxtofl@val+2
  6466  00876A  C080  F01C         	movff	sht3x_measure_read@raw_temp+3,___xxtofl@val+3
  6467  00876E  0E01               	movlw	1
  6468  008770  ECC1  F040         	call	___xxtofl
  6469  008774  C019  F060         	movff	?___xxtofl,___fldiv@b
  6470  008778  C01A  F061         	movff	?___xxtofl+1,___fldiv@b+1
  6471  00877C  C01B  F062         	movff	?___xxtofl+2,___fldiv@b+2
  6472  008780  C01C  F063         	movff	?___xxtofl+3,___fldiv@b+3
  6473  008784  0E00               	movlw	0
  6474  008786  0100               	movlb	0	; () banked
  6475  008788  6F64               	movwf	___fldiv@a& (0+255),b
  6476  00878A  0E00               	movlw	0
  6477  00878C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6478  00878E  0E7A               	movlw	122
  6479  008790  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6480  008792  0E44               	movlw	68
  6481  008794  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6482  008796  EC96  F02F         	call	___fldiv	;wreg free
  6483  00879A  C079  FFD9         	movff	sht3x_measure_read@temp,fsr2l
  6484  00879E  C07A  FFDA         	movff	sht3x_measure_read@temp+1,fsr2h
  6485  0087A2  0100               	movlb	0	; () banked
  6486  0087A4  C060  FFDE         	movff	?___fldiv,postinc2
  6487  0087A8  C061  FFDE         	movff	?___fldiv+1,postinc2
  6488  0087AC  C062  FFDE         	movff	?___fldiv+2,postinc2
  6489  0087B0  C063  FFDE         	movff	?___fldiv+3,postinc2
  6490  0087B4                     
  6491                           ; BSR set to: 0
  6492                           ;sht3x.c: 191: *humi = (float)(raw_humi / 1000.0f);
  6493  0087B4  C081  F019         	movff	sht3x_measure_read@raw_humi,___xxtofl@val
  6494  0087B8  C082  F01A         	movff	sht3x_measure_read@raw_humi+1,___xxtofl@val+1
  6495  0087BC  C083  F01B         	movff	sht3x_measure_read@raw_humi+2,___xxtofl@val+2
  6496  0087C0  C084  F01C         	movff	sht3x_measure_read@raw_humi+3,___xxtofl@val+3
  6497  0087C4  0E01               	movlw	1
  6498  0087C6  ECC1  F040         	call	___xxtofl
  6499  0087CA  C019  F060         	movff	?___xxtofl,___fldiv@b
  6500  0087CE  C01A  F061         	movff	?___xxtofl+1,___fldiv@b+1
  6501  0087D2  C01B  F062         	movff	?___xxtofl+2,___fldiv@b+2
  6502  0087D6  C01C  F063         	movff	?___xxtofl+3,___fldiv@b+3
  6503  0087DA  0E00               	movlw	0
  6504  0087DC  0100               	movlb	0	; () banked
  6505  0087DE  6F64               	movwf	___fldiv@a& (0+255),b
  6506  0087E0  0E00               	movlw	0
  6507  0087E2  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6508  0087E4  0E7A               	movlw	122
  6509  0087E6  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6510  0087E8  0E44               	movlw	68
  6511  0087EA  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6512  0087EC  EC96  F02F         	call	___fldiv	;wreg free
  6513  0087F0  C07B  FFD9         	movff	sht3x_measure_read@humi,fsr2l
  6514  0087F4  C07C  FFDA         	movff	sht3x_measure_read@humi+1,fsr2h
  6515  0087F8  0100               	movlb	0	; () banked
  6516  0087FA  C060  FFDE         	movff	?___fldiv,postinc2
  6517  0087FE  C061  FFDE         	movff	?___fldiv+1,postinc2
  6518  008802  C062  FFDE         	movff	?___fldiv+2,postinc2
  6519  008806  C063  FFDE         	movff	?___fldiv+3,postinc2
  6520  00880A                     
  6521                           ; BSR set to: 0
  6522                           ;sht3x.c: 197: return 1;
  6523  00880A  0E01               	movlw	1
  6524  00880C                     l1026:
  6525  00880C  0012               	return		;funcret
  6526  00880E                     __end_of_sht3x_measure_read:
  6527                           	callstack 0
  6528                           
  6529 ;; *************** function _sht3x_common_read *****************
  6530 ;; Defined at:
  6531 ;;		line 60 in file "bsp/sht3x.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  temp            2   14[COMRAM] PTR long 
  6534 ;;		 -> sht3x_measure_read@raw_temp(4), 
  6535 ;;  humi            2   16[COMRAM] PTR long 
  6536 ;;		 -> sht3x_measure_read@raw_humi(4), 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  buff            6   26[COMRAM] unsigned char [6]
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      unsigned char 
  6541 ;; Registers used:
  6542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6549 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6550 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6551 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6552 ;;Total ram usage:       18 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 3
  6555 ;; This function calls:
  6556 ;;		_check_crc8
  6557 ;;		_i2c_readBytes
  6558 ;; This function is called by:
  6559 ;;		_sht3x_measure_read
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text30
  6564  00A3DC                     __ptext30:
  6565                           	callstack 0
  6566  00A3DC                     _sht3x_common_read:
  6567                           	callstack 22
  6568  00A3DC                     
  6569                           ;sht3x.c: 62: uint8_t buff[6];;sht3x.c: 63: if (i2c_readBytes(0x88, buff, 6) == 0)
  6570  00A3DC  0E1B               	movlw	low sht3x_common_read@buff
  6571  00A3DE  6E03               	movwf	i2c_readBytes@rdptr^0,c
  6572  00A3E0  0E00               	movlw	high sht3x_common_read@buff
  6573  00A3E2  6E04               	movwf	(i2c_readBytes@rdptr+1)^0,c
  6574  00A3E4  0E06               	movlw	6
  6575  00A3E6  6E05               	movwf	i2c_readBytes@len^0,c
  6576  00A3E8  0E88               	movlw	136
  6577  00A3EA  EC51  F05A         	call	_i2c_readBytes
  6578  00A3EE  0900               	iorlw	0
  6579  00A3F0  A4D8               	btfss	status,2,c
  6580  00A3F2  EFFD  F051         	goto	u19171
  6581  00A3F6  EFFF  F051         	goto	u19170
  6582  00A3FA                     u19171:
  6583  00A3FA  EF02  F052         	goto	l17637
  6584  00A3FE                     u19170:
  6585  00A3FE                     l17633:
  6586                           
  6587                           ;sht3x.c: 64: return 0;
  6588  00A3FE  0E00               	movlw	0
  6589  00A400  EF6D  F052         	goto	l1020
  6590  00A404                     l17637:
  6591                           
  6592                           ;sht3x.c: 66: if(check_crc8(&buff[0], 2, buff[2]) == 0)
  6593  00A404  0E1B               	movlw	low sht3x_common_read@buff
  6594  00A406  6E07               	movwf	check_crc8@data^0,c
  6595  00A408  0E00               	movlw	high sht3x_common_read@buff
  6596  00A40A  6E08               	movwf	(check_crc8@data+1)^0,c
  6597  00A40C  0E02               	movlw	2
  6598  00A40E  6E09               	movwf	check_crc8@nbrOfBytes^0,c
  6599  00A410  C01D  F00A         	movff	sht3x_common_read@buff+2,check_crc8@checksum
  6600  00A414  EC55  F069         	call	_check_crc8	;wreg free
  6601  00A418  0900               	iorlw	0
  6602  00A41A  A4D8               	btfss	status,2,c
  6603  00A41C  EF12  F052         	goto	u19181
  6604  00A420  EF14  F052         	goto	u19180
  6605  00A424                     u19181:
  6606  00A424  EF16  F052         	goto	l17643
  6607  00A428                     u19180:
  6608  00A428  EFFF  F051         	goto	l17633
  6609  00A42C                     l17643:
  6610                           
  6611                           ;sht3x.c: 68: if(check_crc8(&buff[3], 2, buff[5]) == 0)
  6612  00A42C  0E1E               	movlw	low (sht3x_common_read@buff+3)
  6613  00A42E  6E07               	movwf	check_crc8@data^0,c
  6614  00A430  0E00               	movlw	high (sht3x_common_read@buff+3)
  6615  00A432  6E08               	movwf	(check_crc8@data+1)^0,c
  6616  00A434  0E02               	movlw	2
  6617  00A436  6E09               	movwf	check_crc8@nbrOfBytes^0,c
  6618  00A438  C020  F00A         	movff	sht3x_common_read@buff+5,check_crc8@checksum
  6619  00A43C  EC55  F069         	call	_check_crc8	;wreg free
  6620  00A440  0900               	iorlw	0
  6621  00A442  A4D8               	btfss	status,2,c
  6622  00A444  EF26  F052         	goto	u19191
  6623  00A448  EF28  F052         	goto	u19190
  6624  00A44C                     u19191:
  6625  00A44C  EF2A  F052         	goto	l17649
  6626  00A450                     u19190:
  6627  00A450  EFFF  F051         	goto	l17633
  6628  00A454                     l17649:
  6629                           
  6630                           ;sht3x.c: 71: *temp = (int32_t)((int32_t)buff[0] << 8 | (buff[1] & 0xff));
  6631  00A454  501C               	movf	(sht3x_common_read@buff+1)^0,w,c
  6632  00A456  C01B  F013         	movff	sht3x_common_read@buff,??_sht3x_common_read
  6633  00A45A  6A14               	clrf	(??_sht3x_common_read+1)^0,c
  6634  00A45C  6A15               	clrf	(??_sht3x_common_read+2)^0,c
  6635  00A45E  6A16               	clrf	(??_sht3x_common_read+3)^0,c
  6636  00A460  C015  F016         	movff	??_sht3x_common_read+2,??_sht3x_common_read+3
  6637  00A464  C014  F015         	movff	??_sht3x_common_read+1,??_sht3x_common_read+2
  6638  00A468  C013  F014         	movff	??_sht3x_common_read,??_sht3x_common_read+1
  6639  00A46C  6A13               	clrf	??_sht3x_common_read^0,c
  6640  00A46E  1013               	iorwf	??_sht3x_common_read^0,w,c
  6641  00A470  6E17               	movwf	(??_sht3x_common_read+4)^0,c
  6642  00A472  5014               	movf	(??_sht3x_common_read+1)^0,w,c
  6643  00A474  6E18               	movwf	(??_sht3x_common_read+5)^0,c
  6644  00A476  5015               	movf	(??_sht3x_common_read+2)^0,w,c
  6645  00A478  6E19               	movwf	(??_sht3x_common_read+6)^0,c
  6646  00A47A  5016               	movf	(??_sht3x_common_read+3)^0,w,c
  6647  00A47C  6E1A               	movwf	(??_sht3x_common_read+7)^0,c
  6648  00A47E  C00F  FFD9         	movff	sht3x_common_read@temp,fsr2l
  6649  00A482  C010  FFDA         	movff	sht3x_common_read@temp+1,fsr2h
  6650  00A486  C017  FFDE         	movff	??_sht3x_common_read+4,postinc2
  6651  00A48A  C018  FFDE         	movff	??_sht3x_common_read+5,postinc2
  6652  00A48E  C019  FFDE         	movff	??_sht3x_common_read+6,postinc2
  6653  00A492  C01A  FFDE         	movff	??_sht3x_common_read+7,postinc2
  6654                           
  6655                           ;sht3x.c: 72: *humi = (int32_t)((int32_t)buff[3] << 8 | (buff[4] & 0xff));
  6656  00A496  501F               	movf	(sht3x_common_read@buff+4)^0,w,c
  6657  00A498  C01E  F013         	movff	sht3x_common_read@buff+3,??_sht3x_common_read
  6658  00A49C  6A14               	clrf	(??_sht3x_common_read+1)^0,c
  6659  00A49E  6A15               	clrf	(??_sht3x_common_read+2)^0,c
  6660  00A4A0  6A16               	clrf	(??_sht3x_common_read+3)^0,c
  6661  00A4A2  C015  F016         	movff	??_sht3x_common_read+2,??_sht3x_common_read+3
  6662  00A4A6  C014  F015         	movff	??_sht3x_common_read+1,??_sht3x_common_read+2
  6663  00A4AA  C013  F014         	movff	??_sht3x_common_read,??_sht3x_common_read+1
  6664  00A4AE  6A13               	clrf	??_sht3x_common_read^0,c
  6665  00A4B0  1013               	iorwf	??_sht3x_common_read^0,w,c
  6666  00A4B2  6E17               	movwf	(??_sht3x_common_read+4)^0,c
  6667  00A4B4  5014               	movf	(??_sht3x_common_read+1)^0,w,c
  6668  00A4B6  6E18               	movwf	(??_sht3x_common_read+5)^0,c
  6669  00A4B8  5015               	movf	(??_sht3x_common_read+2)^0,w,c
  6670  00A4BA  6E19               	movwf	(??_sht3x_common_read+6)^0,c
  6671  00A4BC  5016               	movf	(??_sht3x_common_read+3)^0,w,c
  6672  00A4BE  6E1A               	movwf	(??_sht3x_common_read+7)^0,c
  6673  00A4C0  C011  FFD9         	movff	sht3x_common_read@humi,fsr2l
  6674  00A4C4  C012  FFDA         	movff	sht3x_common_read@humi+1,fsr2h
  6675  00A4C8  C017  FFDE         	movff	??_sht3x_common_read+4,postinc2
  6676  00A4CC  C018  FFDE         	movff	??_sht3x_common_read+5,postinc2
  6677  00A4D0  C019  FFDE         	movff	??_sht3x_common_read+6,postinc2
  6678  00A4D4  C01A  FFDE         	movff	??_sht3x_common_read+7,postinc2
  6679  00A4D8                     
  6680                           ;sht3x.c: 74: return 1;
  6681  00A4D8  0E01               	movlw	1
  6682  00A4DA                     l1020:
  6683  00A4DA  0012               	return		;funcret
  6684  00A4DC                     __end_of_sht3x_common_read:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function _check_crc8 *****************
  6688 ;; Defined at:
  6689 ;;		line 32 in file "bsp/sht3x.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  data            2    6[COMRAM] PTR unsigned char 
  6692 ;;		 -> sht3x_read_status_reg@buff(3), sht3x_common_read@buff(6), 
  6693 ;;  nbrOfBytes      1    8[COMRAM] unsigned char 
  6694 ;;  checksum        1    9[COMRAM] unsigned char 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  crc             1   10[COMRAM] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      unsigned char 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6710 ;;Total ram usage:        5 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; Hardware stack levels required when called: 2
  6713 ;; This function calls:
  6714 ;;		_crc8
  6715 ;; This function is called by:
  6716 ;;		_sht3x_common_read
  6717 ;;		_sht3x_read_status_reg
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text31
  6722  00D2AA                     __ptext31:
  6723                           	callstack 0
  6724  00D2AA                     _check_crc8:
  6725                           	callstack 22
  6726  00D2AA                     
  6727                           ;sht3x.c: 34: unsigned char crc;;sht3x.c: 36: crc = crc8(data, nbrOfBytes);
  6728  00D2AA  C007  F001         	movff	check_crc8@data,crc8@data
  6729  00D2AE  C008  F002         	movff	check_crc8@data+1,crc8@data+1
  6730  00D2B2  C009  F003         	movff	check_crc8@nbrOfBytes,crc8@len
  6731  00D2B6  EC55  F062         	call	_crc8	;wreg free
  6732  00D2BA  6E0B               	movwf	check_crc8@crc^0,c
  6733  00D2BC                     
  6734                           ;sht3x.c: 39: if(crc != checksum) return 0;
  6735  00D2BC  500A               	movf	check_crc8@checksum^0,w,c
  6736  00D2BE  180B               	xorwf	check_crc8@crc^0,w,c
  6737  00D2C0  B4D8               	btfsc	status,2,c
  6738  00D2C2  EF65  F069         	goto	u18821
  6739  00D2C6  EF67  F069         	goto	u18820
  6740  00D2CA                     u18821:
  6741  00D2CA  EF6A  F069         	goto	l17449
  6742  00D2CE                     u18820:
  6743  00D2CE  0E00               	movlw	0
  6744  00D2D0  EF6B  F069         	goto	l1010
  6745  00D2D4                     l17449:
  6746                           
  6747                           ;sht3x.c: 41: return 1;
  6748  00D2D4  0E01               	movlw	1
  6749  00D2D6                     l1010:
  6750  00D2D6  0012               	return		;funcret
  6751  00D2D8                     __end_of_check_crc8:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function _crc8 *****************
  6755 ;; Defined at:
  6756 ;;		line 11 in file "bsp/sht3x.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  data            2    0[COMRAM] PTR unsigned char 
  6759 ;;		 -> sht3x_write_alert_limits@buff(3), sht3x_read_status_reg@buff(3), sht3x_common_read@buff(6), 
  6760 ;;  len             1    2[COMRAM] unsigned char 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  crc             1    5[COMRAM] unsigned char 
  6763 ;;  j               1    4[COMRAM] unsigned char 
  6764 ;;  i               1    3[COMRAM] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      unsigned char 
  6767 ;; Registers used:
  6768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6774 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6775 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6777 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6778 ;;Total ram usage:        6 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_check_crc8
  6785 ;;		_sht3x_write_alert_limits
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text32
  6790  00C4AA                     __ptext32:
  6791                           	callstack 0
  6792  00C4AA                     _crc8:
  6793                           	callstack 22
  6794  00C4AA                     
  6795                           ;sht3x.c: 13: unsigned char crc = 0xff;
  6796  00C4AA  6806               	setf	crc8@crc^0,c
  6797  00C4AC                     
  6798                           ;sht3x.c: 14: unsigned char i;;sht3x.c: 15: unsigned char j;;sht3x.c: 18: for (i = 0; i 
      +                          < len; ++i)
  6799  00C4AC  0E00               	movlw	0
  6800  00C4AE  6E04               	movwf	crc8@i^0,c
  6801  00C4B0  EF7E  F062         	goto	l17339
  6802  00C4B4                     l17321:
  6803                           
  6804                           ;sht3x.c: 19: {;sht3x.c: 20: crc ^= (data[i]);
  6805  00C4B4  5004               	movf	crc8@i^0,w,c
  6806  00C4B6  2401               	addwf	crc8@data^0,w,c
  6807  00C4B8  6ED9               	movwf	fsr2l,c
  6808  00C4BA  0E00               	movlw	0
  6809  00C4BC  2002               	addwfc	(crc8@data+1)^0,w,c
  6810  00C4BE  6EDA               	movwf	fsr2h,c
  6811  00C4C0  50DF               	movf	indf2,w,c
  6812  00C4C2  1A06               	xorwf	crc8@crc^0,f,c
  6813  00C4C4                     
  6814                           ;sht3x.c: 21: for (j = 8; j > 0; --j)
  6815  00C4C4  0E08               	movlw	8
  6816  00C4C6  6E05               	movwf	crc8@j^0,c
  6817  00C4C8                     l1001:
  6818                           
  6819                           ;sht3x.c: 22: {;sht3x.c: 23: if (crc & 0x80)
  6820  00C4C8  AE06               	btfss	crc8@crc^0,7,c
  6821  00C4CA  EF69  F062         	goto	u18671
  6822  00C4CE  EF6B  F062         	goto	u18670
  6823  00C4D2                     u18671:
  6824  00C4D2  EF71  F062         	goto	l17331
  6825  00C4D6                     u18670:
  6826  00C4D6                     
  6827                           ;sht3x.c: 24: crc = (crc << 1) ^ 0x31;
  6828  00C4D6  5006               	movf	crc8@crc^0,w,c
  6829  00C4D8  2406               	addwf	crc8@crc^0,w,c
  6830  00C4DA  0A31               	xorlw	49
  6831  00C4DC  6E06               	movwf	crc8@crc^0,c
  6832  00C4DE  EF74  F062         	goto	l17333
  6833  00C4E2                     l17331:
  6834                           
  6835                           ;sht3x.c: 25: else;sht3x.c: 26: crc = (crc << 1);
  6836  00C4E2  5006               	movf	crc8@crc^0,w,c
  6837  00C4E4  2406               	addwf	crc8@crc^0,w,c
  6838  00C4E6  6E06               	movwf	crc8@crc^0,c
  6839  00C4E8                     l17333:
  6840  00C4E8  0605               	decf	crc8@j^0,f,c
  6841  00C4EA  5005               	movf	crc8@j^0,w,c
  6842  00C4EC  A4D8               	btfss	status,2,c
  6843  00C4EE  EF7B  F062         	goto	u18681
  6844  00C4F2  EF7D  F062         	goto	u18680
  6845  00C4F6                     u18681:
  6846  00C4F6  EF64  F062         	goto	l1001
  6847  00C4FA                     u18680:
  6848  00C4FA  2A04               	incf	crc8@i^0,f,c
  6849  00C4FC                     l17339:
  6850  00C4FC  5003               	movf	crc8@len^0,w,c
  6851  00C4FE  5C04               	subwf	crc8@i^0,w,c
  6852  00C500  A0D8               	btfss	status,0,c
  6853  00C502  EF85  F062         	goto	u18691
  6854  00C506  EF87  F062         	goto	u18690
  6855  00C50A                     u18691:
  6856  00C50A  EF5A  F062         	goto	l17321
  6857  00C50E                     u18690:
  6858  00C50E                     
  6859                           ;sht3x.c: 27: };sht3x.c: 28: };sht3x.c: 29: return crc;
  6860  00C50E  5006               	movf	crc8@crc^0,w,c
  6861  00C510  0012               	return		;funcret
  6862  00C512                     __end_of_crc8:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _sensMeasure_gas_read *****************
  6866 ;; Defined at:
  6867 ;;		line 92 in file "app_sens_measure.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  cmp_val         4   61[BANK0 ] float 
  6872 ;;  volt            4   57[BANK0 ] float 
  6873 ;;  raw             2   65[BANK0 ] int 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1    wreg      unsigned char 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;Total ram usage:       10 bytes
  6888 ;; Hardware stack levels used: 1
  6889 ;; Hardware stack levels required when called: 6
  6890 ;; This function calls:
  6891 ;;		_ADCto_uVoltage
  6892 ;;		_Kalman_updateEstimate
  6893 ;;		___flmul
  6894 ;;		_compensate_temperature
  6895 ;;		_gasSensor_calib
  6896 ;;		_gasSensor_lowfilter
  6897 ;;		_sensor_ADC_read
  6898 ;; This function is called by:
  6899 ;;		_sensMeasure_task
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           	psect	text33
  6904  008AF6                     __ptext33:
  6905                           	callstack 0
  6906  008AF6                     _sensMeasure_gas_read:
  6907                           	callstack 23
  6908  008AF6                     
  6909                           ;app_sens_measure.c: 94: int16_t raw;;app_sens_measure.c: 96: if (g_sens_measure.isInitD
      +                          one == 0)
  6910  008AF6  0101               	movlb	1	; () banked
  6911  008AF8  5143               	movf	(_g_sens_measure+3)& (0+255),w,b
  6912  008AFA  A4D8               	btfss	status,2,c
  6913  008AFC  EF82  F045         	goto	u21121
  6914  008B00  EF84  F045         	goto	u21120
  6915  008B04                     u21121:
  6916  008B04  EF87  F045         	goto	l19357
  6917  008B08                     u21120:
  6918  008B08                     l19353:
  6919                           
  6920                           ;app_sens_measure.c: 97: return 0;
  6921  008B08  0E00               	movlw	0
  6922  008B0A  EF31  F046         	goto	l1664
  6923  008B0E                     l19357:
  6924                           
  6925                           ; BSR set to: 1
  6926                           ;app_sens_measure.c: 99: if (sensor_ADC_read(&raw)) {
  6927  008B0E  0EA1               	movlw	low sensMeasure_gas_read@raw
  6928  008B10  6E16               	movwf	sensor_ADC_read@raw_adc^0,c
  6929  008B12  0E00               	movlw	high sensMeasure_gas_read@raw
  6930  008B14  6E17               	movwf	(sensor_ADC_read@raw_adc+1)^0,c
  6931  008B16  ECC3  F069         	call	_sensor_ADC_read	;wreg free
  6932  008B1A  0900               	iorlw	0
  6933  008B1C  B4D8               	btfsc	status,2,c
  6934  008B1E  EF93  F045         	goto	u21131
  6935  008B22  EF95  F045         	goto	u21130
  6936  008B26                     u21131:
  6937  008B26  EF84  F045         	goto	l19353
  6938  008B2A                     u21130:
  6939  008B2A                     
  6940                           ;app_sens_measure.c: 100: float volt = ADCto_uVoltage(raw, FSR_0p256V);
  6941  008B2A  C0A1  F060         	movff	sensMeasure_gas_read@raw,ADCto_uVoltage@raw_adc
  6942  008B2E  C0A2  F061         	movff	sensMeasure_gas_read@raw+1,ADCto_uVoltage@raw_adc+1
  6943  008B32  0E05               	movlw	5
  6944  008B34  0100               	movlb	0	; () banked
  6945  008B36  6F62               	movwf	ADCto_uVoltage@gain& (0+255),b
  6946  008B38  EC5C  F060         	call	_ADCto_uVoltage	;wreg free
  6947  008B3C  C060  F099         	movff	?_ADCto_uVoltage,sensMeasure_gas_read@volt
  6948  008B40  C061  F09A         	movff	?_ADCto_uVoltage+1,sensMeasure_gas_read@volt+1
  6949  008B44  C062  F09B         	movff	?_ADCto_uVoltage+2,sensMeasure_gas_read@volt+2
  6950  008B48  C063  F09C         	movff	?_ADCto_uVoltage+3,sensMeasure_gas_read@volt+3
  6951  008B4C                     
  6952                           ;app_sens_measure.c: 101: g_temp_value[LV_GAS_VOLT] = Kalman_updateEstimate(&kalmanFilte
      +                          r, volt);
  6953  008B4C  0ED9               	movlw	low _kalmanFilter
  6954  008B4E  0100               	movlb	0	; () banked
  6955  008B50  6F79               	movwf	Kalman_updateEstimate@pObj& (0+255),b
  6956  008B52  0E01               	movlw	high _kalmanFilter
  6957  008B54  6F7A               	movwf	(Kalman_updateEstimate@pObj+1)& (0+255),b
  6958  008B56  C099  F07B         	movff	sensMeasure_gas_read@volt,Kalman_updateEstimate@mea
  6959  008B5A  C09A  F07C         	movff	sensMeasure_gas_read@volt+1,Kalman_updateEstimate@mea+1
  6960  008B5E  C09B  F07D         	movff	sensMeasure_gas_read@volt+2,Kalman_updateEstimate@mea+2
  6961  008B62  C09C  F07E         	movff	sensMeasure_gas_read@volt+3,Kalman_updateEstimate@mea+3
  6962  008B66  EC8D  F034         	call	_Kalman_updateEstimate	;wreg free
  6963  008B6A  C079  F100         	movff	?_Kalman_updateEstimate,_g_temp_value
  6964  008B6E  C07A  F101         	movff	?_Kalman_updateEstimate+1,_g_temp_value+1
  6965  008B72  C07B  F102         	movff	?_Kalman_updateEstimate+2,_g_temp_value+2
  6966  008B76  C07C  F103         	movff	?_Kalman_updateEstimate+3,_g_temp_value+3
  6967  008B7A                     
  6968                           ;app_sens_measure.c: 108: g_temp_value[LV_GAS_VOLT] = g_temp_value[LV_GAS_VOLT] * 2.0f;
  6969  008B7A  C100  F043         	movff	_g_temp_value,___flmul@b
  6970  008B7E  C101  F044         	movff	_g_temp_value+1,___flmul@b+1
  6971  008B82  C102  F045         	movff	_g_temp_value+2,___flmul@b+2
  6972  008B86  C103  F046         	movff	_g_temp_value+3,___flmul@b+3
  6973  008B8A  0E00               	movlw	0
  6974  008B8C  6E47               	movwf	___flmul@a^0,c
  6975  008B8E  0E00               	movlw	0
  6976  008B90  6E48               	movwf	(___flmul@a+1)^0,c
  6977  008B92  0E00               	movlw	0
  6978  008B94  6E49               	movwf	(___flmul@a+2)^0,c
  6979  008B96  0E40               	movlw	64
  6980  008B98  6E4A               	movwf	(___flmul@a+3)^0,c
  6981  008B9A  EC73  F02B         	call	___flmul	;wreg free
  6982  008B9E  C043  F100         	movff	?___flmul,_g_temp_value
  6983  008BA2  C044  F101         	movff	?___flmul+1,_g_temp_value+1
  6984  008BA6  C045  F102         	movff	?___flmul+2,_g_temp_value+2
  6985  008BAA  C046  F103         	movff	?___flmul+3,_g_temp_value+3
  6986  008BAE                     
  6987                           ;app_sens_measure.c: 110: float cmp_val = 0.0f;
  6988  008BAE  0E00               	movlw	0
  6989  008BB0  0100               	movlb	0	; () banked
  6990  008BB2  6F9D               	movwf	sensMeasure_gas_read@cmp_val& (0+255),b
  6991  008BB4  0E00               	movlw	0
  6992  008BB6  6F9E               	movwf	(sensMeasure_gas_read@cmp_val+1)& (0+255),b
  6993  008BB8  0E00               	movlw	0
  6994  008BBA  6F9F               	movwf	(sensMeasure_gas_read@cmp_val+2)& (0+255),b
  6995  008BBC  0E00               	movlw	0
  6996  008BBE  6FA0               	movwf	(sensMeasure_gas_read@cmp_val+3)& (0+255),b
  6997  008BC0                     
  6998                           ; BSR set to: 0
  6999                           ;app_sens_measure.c: 111: if (g_nvm.flash.temp_compensate == TEMP_COMPENSATION)
  7000  008BC0  0101               	movlb	1	; () banked
  7001  008BC2  0594               	decf	(_g_nvm+4)& (0+255),w,b
  7002  008BC4  A4D8               	btfss	status,2,c
  7003  008BC6  EFE7  F045         	goto	u21141
  7004  008BCA  EFE9  F045         	goto	u21140
  7005  008BCE                     u21141:
  7006  008BCE  EFFB  F045         	goto	l19371
  7007  008BD2                     u21140:
  7008  008BD2                     
  7009                           ; BSR set to: 1
  7010                           ;app_sens_measure.c: 112: cmp_val = compensate_temperature(g_temp_value[LV_TEMP]);
  7011  008BD2  C114  F001         	movff	_g_temp_value+20,compensate_temperature@temp
  7012  008BD6  C115  F002         	movff	_g_temp_value+21,compensate_temperature@temp+1
  7013  008BDA  C116  F003         	movff	_g_temp_value+22,compensate_temperature@temp+2
  7014  008BDE  C117  F004         	movff	_g_temp_value+23,compensate_temperature@temp+3
  7015  008BE2  EC21  F06A         	call	_compensate_temperature	;wreg free
  7016  008BE6  C001  F09D         	movff	?_compensate_temperature,sensMeasure_gas_read@cmp_val
  7017  008BEA  C002  F09E         	movff	?_compensate_temperature+1,sensMeasure_gas_read@cmp_val+1
  7018  008BEE  C003  F09F         	movff	?_compensate_temperature+2,sensMeasure_gas_read@cmp_val+2
  7019  008BF2  C004  F0A0         	movff	?_compensate_temperature+3,sensMeasure_gas_read@cmp_val+3
  7020  008BF6                     l19371:
  7021                           
  7022                           ;app_sens_measure.c: 114: g_temp_value[LV_GAS_PPM] = gasSensor_calib(cmp_val, g_temp_val
      +                          ue[LV_GAS_VOLT]);
  7023  008BF6  C09D  F079         	movff	sensMeasure_gas_read@cmp_val,gasSensor_calib@cmp_val
  7024  008BFA  C09E  F07A         	movff	sensMeasure_gas_read@cmp_val+1,gasSensor_calib@cmp_val+1
  7025  008BFE  C09F  F07B         	movff	sensMeasure_gas_read@cmp_val+2,gasSensor_calib@cmp_val+2
  7026  008C02  C0A0  F07C         	movff	sensMeasure_gas_read@cmp_val+3,gasSensor_calib@cmp_val+3
  7027  008C06  C100  F07D         	movff	_g_temp_value,gasSensor_calib@gas_uVolt
  7028  008C0A  C101  F07E         	movff	_g_temp_value+1,gasSensor_calib@gas_uVolt+1
  7029  008C0E  C102  F07F         	movff	_g_temp_value+2,gasSensor_calib@gas_uVolt+2
  7030  008C12  C103  F080         	movff	_g_temp_value+3,gasSensor_calib@gas_uVolt+3
  7031  008C16  ECF9  F03E         	call	_gasSensor_calib	;wreg free
  7032  008C1A  C079  F104         	movff	?_gasSensor_calib,_g_temp_value+4
  7033  008C1E  C07A  F105         	movff	?_gasSensor_calib+1,_g_temp_value+5
  7034  008C22  C07B  F106         	movff	?_gasSensor_calib+2,_g_temp_value+6
  7035  008C26  C07C  F107         	movff	?_gasSensor_calib+3,_g_temp_value+7
  7036  008C2A                     
  7037                           ;app_sens_measure.c: 116: if(g_nvm.flash.filter_mode == FIL_MODE)
  7038  008C2A  0101               	movlb	1	; () banked
  7039  008C2C  0591               	decf	(_g_nvm+1)& (0+255),w,b
  7040  008C2E  A4D8               	btfss	status,2,c
  7041  008C30  EF1C  F046         	goto	u21151
  7042  008C34  EF1E  F046         	goto	u21150
  7043  008C38                     u21151:
  7044  008C38  EF30  F046         	goto	l19377
  7045  008C3C                     u21150:
  7046  008C3C                     
  7047                           ; BSR set to: 1
  7048                           ;app_sens_measure.c: 117: g_temp_value[LV_GAS_PPM] = gasSensor_lowfilter(g_temp_value[LV
      +                          _GAS_PPM]);
  7049  008C3C  C104  F00D         	movff	_g_temp_value+4,gasSensor_lowfilter@gasConcent
  7050  008C40  C105  F00E         	movff	_g_temp_value+5,gasSensor_lowfilter@gasConcent+1
  7051  008C44  C106  F00F         	movff	_g_temp_value+6,gasSensor_lowfilter@gasConcent+2
  7052  008C48  C107  F010         	movff	_g_temp_value+7,gasSensor_lowfilter@gasConcent+3
  7053  008C4C  EC15  F033         	call	_gasSensor_lowfilter	;wreg free
  7054  008C50  C00D  F104         	movff	?_gasSensor_lowfilter,_g_temp_value+4
  7055  008C54  C00E  F105         	movff	?_gasSensor_lowfilter+1,_g_temp_value+5
  7056  008C58  C00F  F106         	movff	?_gasSensor_lowfilter+2,_g_temp_value+6
  7057  008C5C  C010  F107         	movff	?_gasSensor_lowfilter+3,_g_temp_value+7
  7058  008C60                     l19377:
  7059                           
  7060                           ;app_sens_measure.c: 119: return 1;
  7061  008C60  0E01               	movlw	1
  7062  008C62                     l1664:
  7063  008C62  0012               	return		;funcret
  7064  008C64                     __end_of_sensMeasure_gas_read:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function _sensor_ADC_read *****************
  7068 ;; Defined at:
  7069 ;;		line 136 in file "sensor.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  raw_adc         2   21[COMRAM] PTR int 
  7072 ;;		 -> sensMeasure_gas_read@raw(2), 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;		None
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      unsigned char 
  7077 ;; Registers used:
  7078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7088 ;;Total ram usage:        2 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; Hardware stack levels required when called: 5
  7091 ;; This function calls:
  7092 ;;		_ads1114_read
  7093 ;;		_ads1114_read_ready
  7094 ;; This function is called by:
  7095 ;;		_sensMeasure_gas_read
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text34
  7100  00D386                     __ptext34:
  7101                           	callstack 0
  7102  00D386                     _sensor_ADC_read:
  7103                           	callstack 23
  7104  00D386                     
  7105                           ;sensor.c: 138: if (ads1114_read_ready() == 0)
  7106  00D386  EC7F  F061         	call	_ads1114_read_ready	;wreg free
  7107  00D38A  0900               	iorlw	0
  7108  00D38C  A4D8               	btfss	status,2,c
  7109  00D38E  EFCB  F069         	goto	u20631
  7110  00D392  EFCD  F069         	goto	u20630
  7111  00D396                     u20631:
  7112  00D396  EFD0  F069         	goto	l18763
  7113  00D39A                     u20630:
  7114  00D39A                     
  7115                           ;sensor.c: 139: return 0;
  7116  00D39A  0E00               	movlw	0
  7117  00D39C  EFD6  F069         	goto	l2039
  7118  00D3A0                     l18763:
  7119                           
  7120                           ;sensor.c: 141: return ads1114_read(raw_adc);
  7121  00D3A0  C016  F00F         	movff	sensor_ADC_read@raw_adc,ads1114_read@raw_adc
  7122  00D3A4  C017  F010         	movff	sensor_ADC_read@raw_adc+1,ads1114_read@raw_adc+1
  7123  00D3A8  ECA4  F05F         	call	_ads1114_read	;wreg free
  7124  00D3AC                     l2039:
  7125  00D3AC  0012               	return		;funcret
  7126  00D3AE                     __end_of_sensor_ADC_read:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function _ads1114_read_ready *****************
  7130 ;; Defined at:
  7131 ;;		line 15 in file "bsp/ads1114.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;		None
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  rbuff           2   14[COMRAM] unsigned char [2]
  7136 ;;  wbuff           1   16[COMRAM] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      unsigned char 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7147 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7149 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7150 ;;Total ram usage:        3 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 4
  7153 ;; This function calls:
  7154 ;;		_i2c_readBytes
  7155 ;;		_i2c_writeBytes
  7156 ;; This function is called by:
  7157 ;;		_sensor_ADC_read
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text35
  7162  00C2FE                     __ptext35:
  7163                           	callstack 0
  7164  00C2FE                     _ads1114_read_ready:
  7165                           	callstack 23
  7166  00C2FE                     
  7167                           ;ads1114.c: 17: uint8_t wbuff = 0x01;
  7168  00C2FE  0E01               	movlw	1
  7169  00C300  6E11               	movwf	ads1114_read_ready@wbuff^0,c
  7170  00C302                     
  7171                           ;ads1114.c: 18: uint8_t rbuff[2];;ads1114.c: 20: if (i2c_writeBytes(0x92, &wbuff, 1, 1) 
      +                          == 0)
  7172  00C302  0E11               	movlw	low ads1114_read_ready@wbuff
  7173  00C304  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  7174  00C306  0E00               	movlw	high ads1114_read_ready@wbuff
  7175  00C308  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  7176  00C30A  0E01               	movlw	1
  7177  00C30C  6E09               	movwf	i2c_writeBytes@len^0,c
  7178  00C30E  0E01               	movlw	1
  7179  00C310  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  7180  00C312  0E92               	movlw	146
  7181  00C314  EC87  F065         	call	_i2c_writeBytes
  7182  00C318  0900               	iorlw	0
  7183  00C31A  A4D8               	btfss	status,2,c
  7184  00C31C  EF92  F061         	goto	u20291
  7185  00C320  EF94  F061         	goto	u20290
  7186  00C324                     u20291:
  7187  00C324  EF97  F061         	goto	l18399
  7188  00C328                     u20290:
  7189  00C328                     l18395:
  7190                           
  7191                           ;ads1114.c: 21: return 0;
  7192  00C328  0E00               	movlw	0
  7193  00C32A  EFB4  F061         	goto	l728
  7194  00C32E                     l18399:
  7195                           
  7196                           ;ads1114.c: 23: if (i2c_readBytes(0x92, rbuff, 2) == 0)
  7197  00C32E  0E0F               	movlw	low ads1114_read_ready@rbuff
  7198  00C330  6E03               	movwf	i2c_readBytes@rdptr^0,c
  7199  00C332  0E00               	movlw	high ads1114_read_ready@rbuff
  7200  00C334  6E04               	movwf	(i2c_readBytes@rdptr+1)^0,c
  7201  00C336  0E02               	movlw	2
  7202  00C338  6E05               	movwf	i2c_readBytes@len^0,c
  7203  00C33A  0E92               	movlw	146
  7204  00C33C  EC51  F05A         	call	_i2c_readBytes
  7205  00C340  0900               	iorlw	0
  7206  00C342  A4D8               	btfss	status,2,c
  7207  00C344  EFA6  F061         	goto	u20301
  7208  00C348  EFA8  F061         	goto	u20300
  7209  00C34C                     u20301:
  7210  00C34C  EFAA  F061         	goto	l729
  7211  00C350                     u20300:
  7212  00C350  EF94  F061         	goto	l18395
  7213  00C354                     l729:
  7214                           
  7215                           ;ads1114.c: 26: if (rbuff[0] & 0x80)
  7216  00C354  AE0F               	btfss	ads1114_read_ready@rbuff^0,7,c
  7217  00C356  EFAF  F061         	goto	u20311
  7218  00C35A  EFB1  F061         	goto	u20310
  7219  00C35E                     u20311:
  7220  00C35E  EFB3  F061         	goto	l18409
  7221  00C362                     u20310:
  7222  00C362  EF94  F061         	goto	l18395
  7223  00C366                     l18409:
  7224                           
  7225                           ;ads1114.c: 29: return 1;
  7226  00C366  0E01               	movlw	1
  7227  00C368                     l728:
  7228  00C368  0012               	return		;funcret
  7229  00C36A                     __end_of_ads1114_read_ready:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function _ads1114_read *****************
  7233 ;; Defined at:
  7234 ;;		line 43 in file "bsp/ads1114.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  raw_adc         2   14[COMRAM] PTR int 
  7237 ;;		 -> sensMeasure_gas_read@raw(2), 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  rbuff           2   19[COMRAM] unsigned char [2]
  7240 ;;  wbuff           1   18[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      unsigned char 
  7243 ;; Registers used:
  7244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;Total ram usage:        7 bytes
  7255 ;; Hardware stack levels used: 1
  7256 ;; Hardware stack levels required when called: 4
  7257 ;; This function calls:
  7258 ;;		_i2c_readBytes
  7259 ;;		_i2c_writeBytes
  7260 ;; This function is called by:
  7261 ;;		_sensor_ADC_read
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text36
  7266  00BF48                     __ptext36:
  7267                           	callstack 0
  7268  00BF48                     _ads1114_read:
  7269                           	callstack 23
  7270  00BF48                     
  7271                           ;ads1114.c: 45: uint8_t wbuff = 0x00;
  7272  00BF48  0E00               	movlw	0
  7273  00BF4A  6E13               	movwf	ads1114_read@wbuff^0,c
  7274  00BF4C                     
  7275                           ;ads1114.c: 46: uint8_t rbuff[2];;ads1114.c: 48: if (i2c_writeBytes(0x92, &wbuff, 1, 1) 
      +                          == 0)
  7276  00BF4C  0E13               	movlw	low ads1114_read@wbuff
  7277  00BF4E  6E07               	movwf	i2c_writeBytes@wrptr^0,c
  7278  00BF50  0E00               	movlw	high ads1114_read@wbuff
  7279  00BF52  6E08               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  7280  00BF54  0E01               	movlw	1
  7281  00BF56  6E09               	movwf	i2c_writeBytes@len^0,c
  7282  00BF58  0E01               	movlw	1
  7283  00BF5A  6E0A               	movwf	i2c_writeBytes@isStop^0,c
  7284  00BF5C  0E92               	movlw	146
  7285  00BF5E  EC87  F065         	call	_i2c_writeBytes
  7286  00BF62  0900               	iorlw	0
  7287  00BF64  A4D8               	btfss	status,2,c
  7288  00BF66  EFB7  F05F         	goto	u20321
  7289  00BF6A  EFB9  F05F         	goto	u20320
  7290  00BF6E                     u20321:
  7291  00BF6E  EFBC  F05F         	goto	l18431
  7292  00BF72                     u20320:
  7293  00BF72                     l18427:
  7294                           
  7295                           ;ads1114.c: 49: return 0;
  7296  00BF72  0E00               	movlw	0
  7297  00BF74  EFE2  F05F         	goto	l737
  7298  00BF78                     l18431:
  7299                           
  7300                           ;ads1114.c: 51: if (i2c_readBytes(0x92, rbuff, 2) == 0)
  7301  00BF78  0E14               	movlw	low ads1114_read@rbuff
  7302  00BF7A  6E03               	movwf	i2c_readBytes@rdptr^0,c
  7303  00BF7C  0E00               	movlw	high ads1114_read@rbuff
  7304  00BF7E  6E04               	movwf	(i2c_readBytes@rdptr+1)^0,c
  7305  00BF80  0E02               	movlw	2
  7306  00BF82  6E05               	movwf	i2c_readBytes@len^0,c
  7307  00BF84  0E92               	movlw	146
  7308  00BF86  EC51  F05A         	call	_i2c_readBytes
  7309  00BF8A  0900               	iorlw	0
  7310  00BF8C  A4D8               	btfss	status,2,c
  7311  00BF8E  EFCB  F05F         	goto	u20331
  7312  00BF92  EFCD  F05F         	goto	u20330
  7313  00BF96                     u20331:
  7314  00BF96  EFCF  F05F         	goto	l18437
  7315  00BF9A                     u20330:
  7316  00BF9A  EFB9  F05F         	goto	l18427
  7317  00BF9E                     l18437:
  7318                           
  7319                           ;ads1114.c: 54: *raw_adc = ((uint16_t)rbuff[0] << 8) | rbuff[1];
  7320  00BF9E  5015               	movf	(ads1114_read@rbuff+1)^0,w,c
  7321  00BFA0  C014  F011         	movff	ads1114_read@rbuff,??_ads1114_read
  7322  00BFA4  6A12               	clrf	(??_ads1114_read+1)^0,c
  7323  00BFA6  C011  F012         	movff	??_ads1114_read,??_ads1114_read+1
  7324  00BFAA  6A11               	clrf	??_ads1114_read^0,c
  7325  00BFAC  1211               	iorwf	??_ads1114_read^0,f,c
  7326  00BFAE  0E00               	movlw	0
  7327  00BFB0  1212               	iorwf	(??_ads1114_read+1)^0,f,c
  7328  00BFB2  C00F  FFD9         	movff	ads1114_read@raw_adc,fsr2l
  7329  00BFB6  C010  FFDA         	movff	ads1114_read@raw_adc+1,fsr2h
  7330  00BFBA  C011  FFDE         	movff	??_ads1114_read,postinc2
  7331  00BFBE  C012  FFDD         	movff	??_ads1114_read+1,postdec2
  7332  00BFC2                     
  7333                           ;ads1114.c: 55: return 1;
  7334  00BFC2  0E01               	movlw	1
  7335  00BFC4                     l737:
  7336  00BFC4  0012               	return		;funcret
  7337  00BFC6                     __end_of_ads1114_read:
  7338                           	callstack 0
  7339                           
  7340 ;; *************** function _i2c_writeBytes *****************
  7341 ;; Defined at:
  7342 ;;		line 57 in file "bsp/i2c.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  address         1    wreg     const unsigned char 
  7345 ;;  wrptr           2    6[COMRAM] PTR const unsigned char 
  7346 ;;		 -> sht3x_write_alert_limits@cmd(2), sht3x_heaterOff@cmd(2), sht3x_heaterOn@cmd(2), sht3x_read_status_reg@cmd(2), 
  7347 ;;		 -> sht3x_clear_status_reg@cmd(2), sht3x_break_cmd@cmd(2), sht3x_art_cmd@cmd(2), sht3x_measure_block_read@cmd(2), 
  7348 ;;		 -> sht3x_measure_nonblock_read@cmd(2), sht3x_measure_start@cmd(2), sht3x_softreset@cmd(2), lmp91000_set_Mode@buff(2
      +), 
  7349 ;;		 -> lmp91000_set_Reference@buff(2), lmp91000_set_GainRLoad@buff(2), lmp91000_unlock@buff(2), lmp91000_lock@buff(2), 
  7350 ;;		 -> lmp91000_get_Modecn@wBuff(1), lmp91000_get_Refcn@wBuff(1), lmp91000_get_Tiacn@wBuff(1), lmp91000_get_lock@wBuff(
      +1), 
  7351 ;;		 -> lmp91000_get_status@wBuff(1), ads1114_Comparator_SetUp@wbuff(1), ads1114_read@wbuff(1), ads1114_SetUp@wraddr(1),
      + 
  7352 ;;		 -> ads1114_read_ready@wbuff(1), 
  7353 ;;  len             1    8[COMRAM] const unsigned char 
  7354 ;;  isStop          1    9[COMRAM] unsigned char 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  address         1   10[COMRAM] const unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      unsigned char 
  7359 ;; Registers used:
  7360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7369 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;Total ram usage:        5 bytes
  7371 ;; Hardware stack levels used: 1
  7372 ;; Hardware stack levels required when called: 3
  7373 ;; This function calls:
  7374 ;;		_I2C_Start
  7375 ;;		_I2C_Stop
  7376 ;;		_I2C_Write
  7377 ;;		_i2c_writeData
  7378 ;; This function is called by:
  7379 ;;		_ads1114_read_ready
  7380 ;;		_ads1114_read
  7381 ;;		_i2c_writeBytes_to
  7382 ;;		_lmp91000_get_status
  7383 ;;		_lmp91000_lock
  7384 ;;		_lmp91000_unlock
  7385 ;;		_lmp91000_set_GainRLoad
  7386 ;;		_lmp91000_set_Reference
  7387 ;;		_lmp91000_set_Mode
  7388 ;;		_sht3x_measure_start
  7389 ;;		_sht3x_measure_nonblock_read
  7390 ;;		_sht3x_clear_status_reg
  7391 ;;		_sht3x_heaterOff
  7392 ;;		_ads1114_Comparator_SetUp
  7393 ;;		_i2c_readBytes_from
  7394 ;;		_lmp91000_get_lock
  7395 ;;		_lmp91000_get_Tiacn
  7396 ;;		_lmp91000_get_Refcn
  7397 ;;		_lmp91000_get_Modecn
  7398 ;;		_sht3x_softreset
  7399 ;;		_sht3x_measure_block_read
  7400 ;;		_sht3x_art_cmd
  7401 ;;		_sht3x_break_cmd
  7402 ;;		_sht3x_heaterOn
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text37
  7407  00CB0E                     __ptext37:
  7408                           	callstack 0
  7409  00CB0E                     _i2c_writeBytes:
  7410                           	callstack 23
  7411                           
  7412                           ;incstack = 0
  7413                           ;i2c_writeBytes@address stored from wreg
  7414  00CB0E  6E0B               	movwf	i2c_writeBytes@address^0,c
  7415  00CB10                     
  7416                           ;i2c.c: 59: I2C_Start();
  7417  00CB10  EC0F  F06A         	call	_I2C_Start	;wreg free
  7418  00CB14                     
  7419                           ;i2c.c: 61: if (I2C_Write(address | 0x00)) {
  7420  00CB14  500B               	movf	i2c_writeBytes@address^0,w,c
  7421  00CB16  ECAD  F067         	call	_I2C_Write
  7422  00CB1A  0900               	iorlw	0
  7423  00CB1C  B4D8               	btfsc	status,2,c
  7424  00CB1E  EF93  F065         	goto	u19151
  7425  00CB22  EF95  F065         	goto	u19150
  7426  00CB26                     u19151:
  7427  00CB26  EF9A  F065         	goto	l17621
  7428  00CB2A                     u19150:
  7429  00CB2A                     
  7430                           ;i2c.c: 62: I2C_Stop();
  7431  00CB2A  ECFD  F069         	call	_I2C_Stop	;wreg free
  7432  00CB2E                     l17617:
  7433                           
  7434                           ;i2c.c: 63: return 0;
  7435  00CB2E  0E00               	movlw	0
  7436  00CB30  EFAF  F065         	goto	l828
  7437  00CB34                     l17621:
  7438                           
  7439                           ;i2c.c: 64: };i2c.c: 66: if (i2c_writeData(wrptr, len, isStop) == 0) {
  7440  00CB34  C007  F002         	movff	i2c_writeBytes@wrptr,i2c_writeData@wrptr
  7441  00CB38  C008  F003         	movff	i2c_writeBytes@wrptr+1,i2c_writeData@wrptr+1
  7442  00CB3C  C009  F004         	movff	i2c_writeBytes@len,i2c_writeData@len
  7443  00CB40  C00A  F005         	movff	i2c_writeBytes@isStop,i2c_writeData@isStop
  7444  00CB44  EC47  F061         	call	_i2c_writeData	;wreg free
  7445  00CB48  0900               	iorlw	0
  7446  00CB4A  A4D8               	btfss	status,2,c
  7447  00CB4C  EFAA  F065         	goto	u19161
  7448  00CB50  EFAC  F065         	goto	u19160
  7449  00CB54                     u19161:
  7450  00CB54  EFAE  F065         	goto	l17627
  7451  00CB58                     u19160:
  7452  00CB58  EF97  F065         	goto	l17617
  7453  00CB5C                     l17627:
  7454                           
  7455                           ;i2c.c: 68: };i2c.c: 70: return 1;
  7456  00CB5C  0E01               	movlw	1
  7457  00CB5E                     l828:
  7458  00CB5E  0012               	return		;funcret
  7459  00CB60                     __end_of_i2c_writeBytes:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _i2c_writeData *****************
  7463 ;; Defined at:
  7464 ;;		line 42 in file "bsp/i2c.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  wrptr           2    1[COMRAM] PTR const unsigned char 
  7467 ;;		 -> sht3x_write_alert_limits@buff(3), sht3x_write_alert_limits@cmd(2), sht3x_heaterOff@cmd(2), sht3x_heaterOn@cmd(2)
      +, 
  7468 ;;		 -> sht3x_read_status_reg@cmd(2), sht3x_clear_status_reg@cmd(2), sht3x_break_cmd@cmd(2), sht3x_art_cmd@cmd(2), 
  7469 ;;		 -> sht3x_measure_block_read@cmd(2), sht3x_measure_nonblock_read@cmd(2), sht3x_measure_start@cmd(2), sht3x_softreset
      +@cmd(2), 
  7470 ;;		 -> lmp91000_set_Mode@buff(2), lmp91000_set_Reference@buff(2), lmp91000_set_GainRLoad@buff(2), lmp91000_unlock@buff(
      +2), 
  7471 ;;		 -> lmp91000_lock@buff(2), lmp91000_get_Modecn@wBuff(1), lmp91000_get_Refcn@wBuff(1), lmp91000_get_Tiacn@wBuff(1), 
  7472 ;;		 -> lmp91000_get_lock@wBuff(1), lmp91000_get_status@wBuff(1), ads1114_Comparator_SetUp@rbuff(2), ads1114_Comparator_
      +SetUp@wbuff(1), 
  7473 ;;		 -> ads1114_read@wbuff(1), ads1114_SetUp@buff(2), ads1114_SetUp@wraddr(1), ads1114_read_ready@wbuff(1), 
  7474 ;;  len             1    3[COMRAM] const unsigned char 
  7475 ;;  isStop          1    4[COMRAM] unsigned char 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;  i               1    5[COMRAM] unsigned char 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      unsigned char 
  7480 ;; Registers used:
  7481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7490 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7491 ;;Total ram usage:        5 bytes
  7492 ;; Hardware stack levels used: 1
  7493 ;; Hardware stack levels required when called: 2
  7494 ;; This function calls:
  7495 ;;		_I2C_Stop
  7496 ;;		_I2C_Write
  7497 ;; This function is called by:
  7498 ;;		_i2c_writeBytes
  7499 ;;		_i2c_writeBytes_to
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text38
  7504  00C28E                     __ptext38:
  7505                           	callstack 0
  7506  00C28E                     _i2c_writeData:
  7507                           	callstack 23
  7508  00C28E                     
  7509                           ;i2c.c: 44: for(uint8_t i = 0 ; i < len ; i++)
  7510  00C28E  0E00               	movlw	0
  7511  00C290  6E06               	movwf	i2c_writeData@i^0,c
  7512  00C292  5004               	movf	i2c_writeData@len^0,w,c
  7513  00C294  A4D8               	btfss	status,2,c
  7514  00C296  EF4F  F061         	goto	u18781
  7515  00C29A  EF51  F061         	goto	u18780
  7516  00C29E                     u18781:
  7517  00C29E  EF53  F061         	goto	l17421
  7518  00C2A2                     u18780:
  7519  00C2A2  EF73  F061         	goto	l17433
  7520  00C2A6                     l17421:
  7521                           
  7522                           ;i2c.c: 45: {;i2c.c: 46: if(I2C_Write(wrptr[i])) {
  7523  00C2A6  5006               	movf	i2c_writeData@i^0,w,c
  7524  00C2A8  2402               	addwf	i2c_writeData@wrptr^0,w,c
  7525  00C2AA  6ED9               	movwf	fsr2l,c
  7526  00C2AC  0E00               	movlw	0
  7527  00C2AE  2003               	addwfc	(i2c_writeData@wrptr+1)^0,w,c
  7528  00C2B0  6EDA               	movwf	fsr2h,c
  7529  00C2B2  50DF               	movf	indf2,w,c
  7530  00C2B4  ECAD  F067         	call	_I2C_Write
  7531  00C2B8  0900               	iorlw	0
  7532  00C2BA  B4D8               	btfsc	status,2,c
  7533  00C2BC  EF62  F061         	goto	u18791
  7534  00C2C0  EF64  F061         	goto	u18790
  7535  00C2C4                     u18791:
  7536  00C2C4  EF69  F061         	goto	l17429
  7537  00C2C8                     u18790:
  7538  00C2C8                     
  7539                           ;i2c.c: 47: I2C_Stop();
  7540  00C2C8  ECFD  F069         	call	_I2C_Stop	;wreg free
  7541  00C2CC                     
  7542                           ;i2c.c: 48: return 0;
  7543  00C2CC  0E00               	movlw	0
  7544  00C2CE  EF7E  F061         	goto	l823
  7545  00C2D2                     l17429:
  7546  00C2D2  2A06               	incf	i2c_writeData@i^0,f,c
  7547  00C2D4  5004               	movf	i2c_writeData@len^0,w,c
  7548  00C2D6  5C06               	subwf	i2c_writeData@i^0,w,c
  7549  00C2D8  A0D8               	btfss	status,0,c
  7550  00C2DA  EF71  F061         	goto	u18801
  7551  00C2DE  EF73  F061         	goto	u18800
  7552  00C2E2                     u18801:
  7553  00C2E2  EF53  F061         	goto	l17421
  7554  00C2E6                     u18800:
  7555  00C2E6                     l17433:
  7556                           
  7557                           ;i2c.c: 49: };i2c.c: 50: };i2c.c: 52: if (isStop) I2C_Stop();
  7558  00C2E6  5005               	movf	i2c_writeData@isStop^0,w,c
  7559  00C2E8  B4D8               	btfsc	status,2,c
  7560  00C2EA  EF79  F061         	goto	u18811
  7561  00C2EE  EF7B  F061         	goto	u18810
  7562  00C2F2                     u18811:
  7563  00C2F2  EF7D  F061         	goto	l17437
  7564  00C2F6                     u18810:
  7565  00C2F6  ECFD  F069         	call	_I2C_Stop	;wreg free
  7566  00C2FA                     l17437:
  7567                           
  7568                           ;i2c.c: 54: return 1;
  7569  00C2FA  0E01               	movlw	1
  7570  00C2FC                     l823:
  7571  00C2FC  0012               	return		;funcret
  7572  00C2FE                     __end_of_i2c_writeData:
  7573                           	callstack 0
  7574                           
  7575 ;; *************** function _i2c_readBytes *****************
  7576 ;; Defined at:
  7577 ;;		line 87 in file "bsp/i2c.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  address         1    wreg     const unsigned char 
  7580 ;;  rdptr           2    2[COMRAM] PTR unsigned char 
  7581 ;;		 -> sht3x_read_status_reg@buff(3), sht3x_common_read@buff(6), lmp91000_get_Modecn@rBuff(1), lmp91000_get_Refcn@rBuff
      +(1), 
  7582 ;;		 -> lmp91000_get_Tiacn@rBuff(1), lmp91000_get_lock@rBuff(1), lmp91000_get_status@rBuff(1), ads1114_Comparator_SetUp@
      +rbuff(2), 
  7583 ;;		 -> ads1114_read@rbuff(2), ads1114_read_ready@rbuff(2), 
  7584 ;;  len             1    4[COMRAM] const unsigned char 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;  address         1   11[COMRAM] const unsigned char 
  7587 ;;  i               1   13[COMRAM] unsigned char 
  7588 ;;  ackbit          1   12[COMRAM] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      unsigned char 
  7591 ;; Registers used:
  7592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7598 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7600 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7601 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;Total ram usage:       12 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 2
  7605 ;; This function calls:
  7606 ;;		_I2C_Read
  7607 ;;		_I2C_Start
  7608 ;;		_I2C_Stop
  7609 ;;		_I2C_Write
  7610 ;; This function is called by:
  7611 ;;		_ads1114_read_ready
  7612 ;;		_ads1114_read
  7613 ;;		_lmp91000_get_status
  7614 ;;		_sht3x_common_read
  7615 ;;		_ads1114_Comparator_SetUp
  7616 ;;		_i2c_readBytes_from
  7617 ;;		_lmp91000_get_lock
  7618 ;;		_lmp91000_get_Tiacn
  7619 ;;		_lmp91000_get_Refcn
  7620 ;;		_lmp91000_get_Modecn
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text39
  7625  00B4A2                     __ptext39:
  7626                           	callstack 0
  7627  00B4A2                     _i2c_readBytes:
  7628                           	callstack 23
  7629                           
  7630                           ;incstack = 0
  7631                           ;i2c_readBytes@address stored from wreg
  7632  00B4A2  6E0C               	movwf	i2c_readBytes@address^0,c
  7633  00B4A4                     
  7634                           ;i2c.c: 89: I2C_Start();
  7635  00B4A4  EC0F  F06A         	call	_I2C_Start	;wreg free
  7636  00B4A8                     
  7637                           ;i2c.c: 91: if(I2C_Write(address | 0x01)) {
  7638  00B4A8  500C               	movf	i2c_readBytes@address^0,w,c
  7639  00B4AA  0901               	iorlw	1
  7640  00B4AC  ECAD  F067         	call	_I2C_Write
  7641  00B4B0  0900               	iorlw	0
  7642  00B4B2  B4D8               	btfsc	status,2,c
  7643  00B4B4  EF5E  F05A         	goto	u18741
  7644  00B4B8  EF60  F05A         	goto	u18740
  7645  00B4BC                     u18741:
  7646  00B4BC  EF65  F05A         	goto	l17393
  7647  00B4C0                     u18740:
  7648  00B4C0                     
  7649                           ;i2c.c: 92: I2C_Stop();
  7650  00B4C0  ECFD  F069         	call	_I2C_Stop	;wreg free
  7651  00B4C4                     
  7652                           ;i2c.c: 93: return 0;
  7653  00B4C4  0E00               	movlw	0
  7654  00B4C6  EFA6  F05A         	goto	l838
  7655  00B4CA                     l17393:
  7656                           
  7657                           ;i2c.c: 94: };i2c.c: 96: uint8_t ackbit = I2C_ACK;
  7658  00B4CA  0E00               	movlw	0
  7659  00B4CC  6E0D               	movwf	i2c_readBytes@ackbit^0,c
  7660                           
  7661                           ;i2c.c: 97: for(uint8_t i = 0 ; i < len ; i++)
  7662  00B4CE  0E00               	movlw	0
  7663  00B4D0  6E0E               	movwf	i2c_readBytes@i^0,c
  7664  00B4D2  5005               	movf	i2c_readBytes@len^0,w,c
  7665  00B4D4  A4D8               	btfss	status,2,c
  7666  00B4D6  EF6F  F05A         	goto	u18751
  7667  00B4DA  EF71  F05A         	goto	u18750
  7668  00B4DE                     u18751:
  7669  00B4DE  EF73  F05A         	goto	l17399
  7670  00B4E2                     u18750:
  7671  00B4E2  EFA3  F05A         	goto	l17409
  7672  00B4E6                     l17399:
  7673                           
  7674                           ;i2c.c: 98: {;i2c.c: 99: if (i == len - 1) ackbit = I2C_NACK;
  7675  00B4E6  500E               	movf	i2c_readBytes@i^0,w,c
  7676  00B4E8  6E06               	movwf	??_i2c_readBytes^0,c
  7677  00B4EA  6A07               	clrf	(??_i2c_readBytes+1)^0,c
  7678  00B4EC  0EFF               	movlw	255
  7679  00B4EE  6E08               	movwf	(??_i2c_readBytes+2)^0,c
  7680  00B4F0  0EFF               	movlw	255
  7681  00B4F2  6E09               	movwf	(??_i2c_readBytes+3)^0,c
  7682  00B4F4  5005               	movf	i2c_readBytes@len^0,w,c
  7683  00B4F6  6E0A               	movwf	(??_i2c_readBytes+4)^0,c
  7684  00B4F8  6A0B               	clrf	(??_i2c_readBytes+5)^0,c
  7685  00B4FA  5008               	movf	(??_i2c_readBytes+2)^0,w,c
  7686  00B4FC  260A               	addwf	(??_i2c_readBytes+4)^0,f,c
  7687  00B4FE  5009               	movf	(??_i2c_readBytes+3)^0,w,c
  7688  00B500  220B               	addwfc	(??_i2c_readBytes+5)^0,f,c
  7689  00B502  5006               	movf	??_i2c_readBytes^0,w,c
  7690  00B504  180A               	xorwf	(??_i2c_readBytes+4)^0,w,c
  7691  00B506  E107               	bnz	u18761
  7692  00B508  5007               	movf	(??_i2c_readBytes+1)^0,w,c
  7693  00B50A  180B               	xorwf	(??_i2c_readBytes+5)^0,w,c
  7694  00B50C  A4D8               	btfss	status,2,c
  7695  00B50E  EF8B  F05A         	goto	u18761
  7696  00B512  EF8D  F05A         	goto	u18760
  7697  00B516                     u18761:
  7698  00B516  EF8F  F05A         	goto	l17403
  7699  00B51A                     u18760:
  7700  00B51A  0E01               	movlw	1
  7701  00B51C  6E0D               	movwf	i2c_readBytes@ackbit^0,c
  7702  00B51E                     l17403:
  7703                           
  7704                           ;i2c.c: 100: rdptr[i] = I2C_Read(ackbit);
  7705  00B51E  500E               	movf	i2c_readBytes@i^0,w,c
  7706  00B520  2403               	addwf	i2c_readBytes@rdptr^0,w,c
  7707  00B522  6ED9               	movwf	fsr2l,c
  7708  00B524  0E00               	movlw	0
  7709  00B526  2004               	addwfc	(i2c_readBytes@rdptr+1)^0,w,c
  7710  00B528  6EDA               	movwf	fsr2h,c
  7711  00B52A  500D               	movf	i2c_readBytes@ackbit^0,w,c
  7712  00B52C  EC5C  F065         	call	_I2C_Read
  7713  00B530  6EDF               	movwf	indf2,c
  7714  00B532  2A0E               	incf	i2c_readBytes@i^0,f,c
  7715  00B534  5005               	movf	i2c_readBytes@len^0,w,c
  7716  00B536  5C0E               	subwf	i2c_readBytes@i^0,w,c
  7717  00B538  A0D8               	btfss	status,0,c
  7718  00B53A  EFA1  F05A         	goto	u18771
  7719  00B53E  EFA3  F05A         	goto	u18770
  7720  00B542                     u18771:
  7721  00B542  EF73  F05A         	goto	l17399
  7722  00B546                     u18770:
  7723  00B546                     l17409:
  7724                           
  7725                           ;i2c.c: 101: };i2c.c: 103: I2C_Stop();
  7726  00B546  ECFD  F069         	call	_I2C_Stop	;wreg free
  7727  00B54A                     
  7728                           ;i2c.c: 105: return 1;
  7729  00B54A  0E01               	movlw	1
  7730  00B54C                     l838:
  7731  00B54C  0012               	return		;funcret
  7732  00B54E                     __end_of_i2c_readBytes:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function _I2C_Write *****************
  7736 ;; Defined at:
  7737 ;;		line 152 in file "bsp/i2c.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  I2cWriteData    1    wreg     unsigned char 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  I2cWriteData    1    0[COMRAM] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      unsigned char 
  7744 ;; Registers used:
  7745 ;;		wreg
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;Total ram usage:        1 bytes
  7756 ;; Hardware stack levels used: 1
  7757 ;; Hardware stack levels required when called: 1
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_i2c_writeData
  7762 ;;		_i2c_writeBytes
  7763 ;;		_i2c_readBytes
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text40
  7768  00CF5A                     __ptext40:
  7769                           	callstack 0
  7770  00CF5A                     _I2C_Write:
  7771                           	callstack 23
  7772                           
  7773                           ;incstack = 0
  7774                           ;I2C_Write@I2cWriteData stored from wreg
  7775  00CF5A  6E01               	movwf	I2C_Write@I2cWriteData^0,c
  7776  00CF5C                     
  7777                           ;i2c.c: 154: PIR1bits.SSP1IF = 0;
  7778  00CF5C  969E               	bcf	158,3,c	;volatile
  7779  00CF5E                     l875:
  7780  00CF5E  B0C7               	btfsc	199,0,c	;volatile
  7781  00CF60  EFB4  F067         	goto	u18561
  7782  00CF64  EFB6  F067         	goto	u18560
  7783  00CF68                     u18561:
  7784  00CF68  EFAF  F067         	goto	l875
  7785  00CF6C                     u18560:
  7786  00CF6C                     
  7787                           ;i2c.c: 157: SSP1BUF = I2cWriteData;
  7788  00CF6C  C001  FFC9         	movff	I2C_Write@I2cWriteData,4041	;volatile
  7789  00CF70                     l878:
  7790  00CF70  A69E               	btfss	158,3,c	;volatile
  7791  00CF72  EFBD  F067         	goto	u18571
  7792  00CF76  EFBF  F067         	goto	u18570
  7793  00CF7A                     u18571:
  7794  00CF7A  EFB8  F067         	goto	l878
  7795  00CF7E                     u18570:
  7796  00CF7E                     
  7797                           ;i2c.c: 160: PIR1bits.SSP1IF = 0;
  7798  00CF7E  969E               	bcf	158,3,c	;volatile
  7799                           
  7800                           ;i2c.c: 162: return (SSP1CON2bits.ACKSTAT);
  7801  00CF80  BCC5               	btfsc	197,6,c	;volatile
  7802  00CF82  EFC5  F067         	goto	u18581
  7803  00CF86  EFC8  F067         	goto	u18580
  7804  00CF8A                     u18581:
  7805  00CF8A  0E01               	movlw	1
  7806  00CF8C  EFC9  F067         	goto	u18586
  7807  00CF90                     u18580:
  7808  00CF90  0E00               	movlw	0
  7809  00CF92                     u18586:
  7810  00CF92  0012               	return		;funcret
  7811  00CF94                     __end_of_I2C_Write:
  7812                           	callstack 0
  7813                           
  7814 ;; *************** function _I2C_Stop *****************
  7815 ;; Defined at:
  7816 ;;		line 130 in file "bsp/i2c.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		None
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; Hardware stack levels required when called: 1
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_i2c_writeData
  7841 ;;		_i2c_writeBytes
  7842 ;;		_i2c_writeBytes_to
  7843 ;;		_i2c_readBytes
  7844 ;;		_i2c_readBytes_from
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text41
  7849  00D3FA                     __ptext41:
  7850                           	callstack 0
  7851  00D3FA                     _I2C_Stop:
  7852                           	callstack 23
  7853  00D3FA                     
  7854                           ;i2c.c: 132: PIR1bits.SSP1IF = 0;
  7855  00D3FA  969E               	bcf	158,3,c	;volatile
  7856  00D3FC                     l857:
  7857  00D3FC  B0C7               	btfsc	199,0,c	;volatile
  7858  00D3FE  EF03  F06A         	goto	u18591
  7859  00D402  EF05  F06A         	goto	u18590
  7860  00D406                     u18591:
  7861  00D406  EFFE  F069         	goto	l857
  7862  00D40A                     u18590:
  7863  00D40A                     
  7864                           ;i2c.c: 135: SSP1CON2bits.PEN = 1;
  7865  00D40A  84C5               	bsf	197,2,c	;volatile
  7866  00D40C                     l860:
  7867  00D40C  A69E               	btfss	158,3,c	;volatile
  7868  00D40E  EF0B  F06A         	goto	u18601
  7869  00D412  EF0D  F06A         	goto	u18600
  7870  00D416                     u18601:
  7871  00D416  EF06  F06A         	goto	l860
  7872  00D41A                     u18600:
  7873  00D41A                     
  7874                           ;i2c.c: 138: PIR1bits.SSP1IF = 0;
  7875  00D41A  969E               	bcf	158,3,c	;volatile
  7876  00D41C  0012               	return		;funcret
  7877  00D41E                     __end_of_I2C_Stop:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _I2C_Start *****************
  7881 ;; Defined at:
  7882 ;;		line 119 in file "bsp/i2c.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;		None
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;		None
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      void 
  7889 ;; Registers used:
  7890 ;;		None
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;Total ram usage:        0 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_i2c_writeBytes
  7907 ;;		_i2c_readBytes
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text42
  7912  00D41E                     __ptext42:
  7913                           	callstack 0
  7914  00D41E                     _I2C_Start:
  7915                           	callstack 24
  7916  00D41E                     
  7917                           ;i2c.c: 121: PIR1bits.SSP1IF = 0;
  7918  00D41E  969E               	bcf	158,3,c	;volatile
  7919  00D420                     l848:
  7920  00D420  B0C7               	btfsc	199,0,c	;volatile
  7921  00D422  EF15  F06A         	goto	u18611
  7922  00D426  EF17  F06A         	goto	u18610
  7923  00D42A                     u18611:
  7924  00D42A  EF10  F06A         	goto	l848
  7925  00D42E                     u18610:
  7926  00D42E                     
  7927                           ;i2c.c: 124: SSP1CON2bits.SEN = 1;
  7928  00D42E  80C5               	bsf	197,0,c	;volatile
  7929  00D430                     l851:
  7930  00D430  A69E               	btfss	158,3,c	;volatile
  7931  00D432  EF1D  F06A         	goto	u18621
  7932  00D436  EF1F  F06A         	goto	u18620
  7933  00D43A                     u18621:
  7934  00D43A  EF18  F06A         	goto	l851
  7935  00D43E                     u18620:
  7936  00D43E                     
  7937                           ;i2c.c: 127: PIR1bits.SSP1IF = 0;
  7938  00D43E  969E               	bcf	158,3,c	;volatile
  7939  00D440  0012               	return		;funcret
  7940  00D442                     __end_of_I2C_Start:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _I2C_Read *****************
  7944 ;; Defined at:
  7945 ;;		line 166 in file "bsp/i2c.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  ack             1    wreg     enum E5217
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  ack             1    0[COMRAM] enum E5217
  7950 ;;  I2CReadData     1    1[COMRAM] unsigned char 
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      unsigned char 
  7953 ;; Registers used:
  7954 ;;		wreg, status,2, status,0
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7964 ;;Total ram usage:        2 bytes
  7965 ;; Hardware stack levels used: 1
  7966 ;; Hardware stack levels required when called: 1
  7967 ;; This function calls:
  7968 ;;		Nothing
  7969 ;; This function is called by:
  7970 ;;		_i2c_readBytes
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974                           	psect	text43
  7975  00CAB8                     __ptext43:
  7976                           	callstack 0
  7977  00CAB8                     _I2C_Read:
  7978                           	callstack 23
  7979                           
  7980                           ;incstack = 0
  7981                           ;I2C_Read@ack stored from wreg
  7982  00CAB8  6E01               	movwf	I2C_Read@ack^0,c
  7983  00CABA                     
  7984                           ;i2c.c: 168: uint8_t I2CReadData;;i2c.c: 170: PIR1bits.SSP1IF = 0;
  7985  00CABA  969E               	bcf	158,3,c	;volatile
  7986  00CABC                     l884:
  7987  00CABC  B0C7               	btfsc	199,0,c	;volatile
  7988  00CABE  EF63  F065         	goto	u18631
  7989  00CAC2  EF65  F065         	goto	u18630
  7990  00CAC6                     u18631:
  7991  00CAC6  EF5E  F065         	goto	l884
  7992  00CACA                     u18630:
  7993  00CACA                     
  7994                           ;i2c.c: 173: SSP1CON2bits.RCEN = 1;
  7995  00CACA  86C5               	bsf	197,3,c	;volatile
  7996  00CACC                     l887:
  7997  00CACC  A69E               	btfss	158,3,c	;volatile
  7998  00CACE  EF6B  F065         	goto	u18641
  7999  00CAD2  EF6D  F065         	goto	u18640
  8000  00CAD6                     u18641:
  8001  00CAD6  EF66  F065         	goto	l887
  8002  00CADA                     u18640:
  8003  00CADA                     
  8004                           ;i2c.c: 176: PIR1bits.SSP1IF = 0;
  8005  00CADA  969E               	bcf	158,3,c	;volatile
  8006                           
  8007                           ;i2c.c: 178: I2CReadData = SSP1BUF;
  8008  00CADC  CFC9 F002          	movff	4041,I2C_Read@I2CReadData	;volatile
  8009  00CAE0                     
  8010                           ;i2c.c: 180: if (ack == I2C_NACK)
  8011  00CAE0  0401               	decf	I2C_Read@ack^0,w,c
  8012  00CAE2  A4D8               	btfss	status,2,c
  8013  00CAE4  EF76  F065         	goto	u18651
  8014  00CAE8  EF78  F065         	goto	u18650
  8015  00CAEC                     u18651:
  8016  00CAEC  EF7B  F065         	goto	l890
  8017  00CAF0                     u18650:
  8018  00CAF0                     
  8019                           ;i2c.c: 181: {;i2c.c: 182: SSP1CON2bits.ACKDT = 1;
  8020  00CAF0  8AC5               	bsf	197,5,c	;volatile
  8021                           
  8022                           ;i2c.c: 183: }
  8023  00CAF2  EF7C  F065         	goto	l891
  8024  00CAF6                     l890:
  8025                           
  8026                           ;i2c.c: 184: else;i2c.c: 185: {;i2c.c: 186: SSP1CON2bits.ACKDT = 0;
  8027  00CAF6  9AC5               	bcf	197,5,c	;volatile
  8028  00CAF8                     l891:
  8029                           
  8030                           ;i2c.c: 187: };i2c.c: 189: SSP1CON2bits.ACKEN = 1;
  8031  00CAF8  88C5               	bsf	197,4,c	;volatile
  8032                           
  8033                           ;i2c.c: 191: PIR1bits.SSP1IF = 0;
  8034  00CAFA  969E               	bcf	158,3,c	;volatile
  8035  00CAFC                     l892:
  8036  00CAFC  A69E               	btfss	158,3,c	;volatile
  8037  00CAFE  EF83  F065         	goto	u18661
  8038  00CB02  EF85  F065         	goto	u18660
  8039  00CB06                     u18661:
  8040  00CB06  EF7E  F065         	goto	l892
  8041  00CB0A                     u18660:
  8042  00CB0A                     
  8043                           ;i2c.c: 194: return I2CReadData;
  8044  00CB0A  5002               	movf	I2C_Read@I2CReadData^0,w,c
  8045  00CB0C  0012               	return		;funcret
  8046  00CB0E                     __end_of_I2C_Read:
  8047                           	callstack 0
  8048                           
  8049 ;; *************** function _gasSensor_lowfilter *****************
  8050 ;; Defined at:
  8051 ;;		line 21 in file "sensor.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  gasConcent      4   12[COMRAM] float 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  retval          4   16[COMRAM] float 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  4   12[COMRAM] float 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8066 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;Total ram usage:        8 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 2
  8072 ;; This function calls:
  8073 ;;		___flge
  8074 ;; This function is called by:
  8075 ;;		_sensMeasure_gas_read
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text44
  8080  00662A                     __ptext44:
  8081                           	callstack 0
  8082  00662A                     _gasSensor_lowfilter:
  8083                           	callstack 26
  8084  00662A                     
  8085                           ;sensor.c: 24: float retval;;sensor.c: 25: if (gasConcent < 0.2 && gasConcent >= 0.0)
  8086  00662A  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8087  00662E  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8088  006632  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8089  006636  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8090  00663A  0ECD               	movlw	205
  8091  00663C  6E05               	movwf	___flge@ff2^0,c
  8092  00663E  0ECC               	movlw	204
  8093  006640  6E06               	movwf	(___flge@ff2+1)^0,c
  8094  006642  0E4C               	movlw	76
  8095  006644  6E07               	movwf	(___flge@ff2+2)^0,c
  8096  006646  0E3E               	movlw	62
  8097  006648  6E08               	movwf	(___flge@ff2+3)^0,c
  8098  00664A  EC6C  F051         	call	___flge	;wreg free
  8099  00664E  B0D8               	btfsc	status,0,c
  8100  006650  EF2C  F033         	goto	u12021
  8101  006654  EF2E  F033         	goto	u12020
  8102  006658                     u12021:
  8103  006658  EF3F  F033         	goto	l12067
  8104  00665C                     u12020:
  8105  00665C  BE10               	btfsc	(gasSensor_lowfilter@gasConcent+3)^0,7,c
  8106  00665E  EF33  F033         	goto	u12031
  8107  006662  EF35  F033         	goto	u12030
  8108  006666                     u12031:
  8109  006666  EF3F  F033         	goto	l12067
  8110  00666A                     u12030:
  8111  00666A                     
  8112                           ;sensor.c: 26: retval = 0.0;
  8113  00666A  0E00               	movlw	0
  8114  00666C  6E11               	movwf	gasSensor_lowfilter@retval^0,c
  8115  00666E  0E00               	movlw	0
  8116  006670  6E12               	movwf	(gasSensor_lowfilter@retval+1)^0,c
  8117  006672  0E00               	movlw	0
  8118  006674  6E13               	movwf	(gasSensor_lowfilter@retval+2)^0,c
  8119  006676  0E00               	movlw	0
  8120  006678  6E14               	movwf	(gasSensor_lowfilter@retval+3)^0,c
  8121  00667A  EF84  F034         	goto	l1981
  8122  00667E                     l12067:
  8123                           
  8124                           ;sensor.c: 27: else if (gasConcent < 0 && gasConcent >= -0.5)
  8125  00667E  BE10               	btfsc	(gasSensor_lowfilter@gasConcent+3)^0,7,c
  8126  006680  EF46  F033         	goto	u12040
  8127  006684  EF44  F033         	goto	u12041
  8128  006688                     u12041:
  8129  006688  EF69  F033         	goto	l12073
  8130  00668C                     u12040:
  8131  00668C  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8132  006690  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8133  006694  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8134  006698  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8135  00669C  0E00               	movlw	0
  8136  00669E  6E05               	movwf	___flge@ff2^0,c
  8137  0066A0  0E00               	movlw	0
  8138  0066A2  6E06               	movwf	(___flge@ff2+1)^0,c
  8139  0066A4  0E00               	movlw	0
  8140  0066A6  6E07               	movwf	(___flge@ff2+2)^0,c
  8141  0066A8  0EBF               	movlw	191
  8142  0066AA  6E08               	movwf	(___flge@ff2+3)^0,c
  8143  0066AC  EC6C  F051         	call	___flge	;wreg free
  8144  0066B0  A0D8               	btfss	status,0,c
  8145  0066B2  EF5D  F033         	goto	u12051
  8146  0066B6  EF5F  F033         	goto	u12050
  8147  0066BA                     u12051:
  8148  0066BA  EF69  F033         	goto	l12073
  8149  0066BE                     u12050:
  8150  0066BE                     
  8151                           ;sensor.c: 28: retval = 0.0;
  8152  0066BE  0E00               	movlw	0
  8153  0066C0  6E11               	movwf	gasSensor_lowfilter@retval^0,c
  8154  0066C2  0E00               	movlw	0
  8155  0066C4  6E12               	movwf	(gasSensor_lowfilter@retval+1)^0,c
  8156  0066C6  0E00               	movlw	0
  8157  0066C8  6E13               	movwf	(gasSensor_lowfilter@retval+2)^0,c
  8158  0066CA  0E00               	movlw	0
  8159  0066CC  6E14               	movwf	(gasSensor_lowfilter@retval+3)^0,c
  8160  0066CE  EF84  F034         	goto	l1981
  8161  0066D2                     l12073:
  8162                           
  8163                           ;sensor.c: 29: else if (gasConcent < -0.5 && gasConcent >= -1.0)
  8164  0066D2  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8165  0066D6  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8166  0066DA  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8167  0066DE  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8168  0066E2  0E00               	movlw	0
  8169  0066E4  6E05               	movwf	___flge@ff2^0,c
  8170  0066E6  0E00               	movlw	0
  8171  0066E8  6E06               	movwf	(___flge@ff2+1)^0,c
  8172  0066EA  0E00               	movlw	0
  8173  0066EC  6E07               	movwf	(___flge@ff2+2)^0,c
  8174  0066EE  0EBF               	movlw	191
  8175  0066F0  6E08               	movwf	(___flge@ff2+3)^0,c
  8176  0066F2  EC6C  F051         	call	___flge	;wreg free
  8177  0066F6  B0D8               	btfsc	status,0,c
  8178  0066F8  EF80  F033         	goto	u12061
  8179  0066FC  EF82  F033         	goto	u12060
  8180  006700                     u12061:
  8181  006700  EFA5  F033         	goto	l12079
  8182  006704                     u12060:
  8183  006704  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8184  006708  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8185  00670C  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8186  006710  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8187  006714  0E00               	movlw	0
  8188  006716  6E05               	movwf	___flge@ff2^0,c
  8189  006718  0E00               	movlw	0
  8190  00671A  6E06               	movwf	(___flge@ff2+1)^0,c
  8191  00671C  0E80               	movlw	128
  8192  00671E  6E07               	movwf	(___flge@ff2+2)^0,c
  8193  006720  0EBF               	movlw	191
  8194  006722  6E08               	movwf	(___flge@ff2+3)^0,c
  8195  006724  EC6C  F051         	call	___flge	;wreg free
  8196  006728  A0D8               	btfss	status,0,c
  8197  00672A  EF99  F033         	goto	u12071
  8198  00672E  EF9B  F033         	goto	u12070
  8199  006732                     u12071:
  8200  006732  EFA5  F033         	goto	l12079
  8201  006736                     u12070:
  8202  006736                     
  8203                           ;sensor.c: 30: retval = 0.02;
  8204  006736  0E0A               	movlw	10
  8205  006738  6E11               	movwf	gasSensor_lowfilter@retval^0,c
  8206  00673A  0ED7               	movlw	215
  8207  00673C  6E12               	movwf	(gasSensor_lowfilter@retval+1)^0,c
  8208  00673E  0EA3               	movlw	163
  8209  006740  6E13               	movwf	(gasSensor_lowfilter@retval+2)^0,c
  8210  006742  0E3C               	movlw	60
  8211  006744  6E14               	movwf	(gasSensor_lowfilter@retval+3)^0,c
  8212  006746  EF84  F034         	goto	l1981
  8213  00674A                     l12079:
  8214                           
  8215                           ;sensor.c: 31: else if (gasConcent < -1.0 && gasConcent >= -5.0)
  8216  00674A  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8217  00674E  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8218  006752  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8219  006756  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8220  00675A  0E00               	movlw	0
  8221  00675C  6E05               	movwf	___flge@ff2^0,c
  8222  00675E  0E00               	movlw	0
  8223  006760  6E06               	movwf	(___flge@ff2+1)^0,c
  8224  006762  0E80               	movlw	128
  8225  006764  6E07               	movwf	(___flge@ff2+2)^0,c
  8226  006766  0EBF               	movlw	191
  8227  006768  6E08               	movwf	(___flge@ff2+3)^0,c
  8228  00676A  EC6C  F051         	call	___flge	;wreg free
  8229  00676E  B0D8               	btfsc	status,0,c
  8230  006770  EFBC  F033         	goto	u12081
  8231  006774  EFBE  F033         	goto	u12080
  8232  006778                     u12081:
  8233  006778  EFE1  F033         	goto	l12085
  8234  00677C                     u12080:
  8235  00677C  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8236  006780  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8237  006784  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8238  006788  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8239  00678C  0E00               	movlw	0
  8240  00678E  6E05               	movwf	___flge@ff2^0,c
  8241  006790  0E00               	movlw	0
  8242  006792  6E06               	movwf	(___flge@ff2+1)^0,c
  8243  006794  0EA0               	movlw	160
  8244  006796  6E07               	movwf	(___flge@ff2+2)^0,c
  8245  006798  0EC0               	movlw	192
  8246  00679A  6E08               	movwf	(___flge@ff2+3)^0,c
  8247  00679C  EC6C  F051         	call	___flge	;wreg free
  8248  0067A0  A0D8               	btfss	status,0,c
  8249  0067A2  EFD5  F033         	goto	u12091
  8250  0067A6  EFD7  F033         	goto	u12090
  8251  0067AA                     u12091:
  8252  0067AA  EFE1  F033         	goto	l12085
  8253  0067AE                     u12090:
  8254  0067AE                     
  8255                           ;sensor.c: 32: retval = 0.03;
  8256  0067AE  0E8F               	movlw	143
  8257  0067B0  6E11               	movwf	gasSensor_lowfilter@retval^0,c
  8258  0067B2  0EC2               	movlw	194
  8259  0067B4  6E12               	movwf	(gasSensor_lowfilter@retval+1)^0,c
  8260  0067B6  0EF5               	movlw	245
  8261  0067B8  6E13               	movwf	(gasSensor_lowfilter@retval+2)^0,c
  8262  0067BA  0E3C               	movlw	60
  8263  0067BC  6E14               	movwf	(gasSensor_lowfilter@retval+3)^0,c
  8264  0067BE  EF84  F034         	goto	l1981
  8265  0067C2                     l12085:
  8266                           
  8267                           ;sensor.c: 33: else if (gasConcent < -5.0 && gasConcent >= -10.0)
  8268  0067C2  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8269  0067C6  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8270  0067CA  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8271  0067CE  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8272  0067D2  0E00               	movlw	0
  8273  0067D4  6E05               	movwf	___flge@ff2^0,c
  8274  0067D6  0E00               	movlw	0
  8275  0067D8  6E06               	movwf	(___flge@ff2+1)^0,c
  8276  0067DA  0EA0               	movlw	160
  8277  0067DC  6E07               	movwf	(___flge@ff2+2)^0,c
  8278  0067DE  0EC0               	movlw	192
  8279  0067E0  6E08               	movwf	(___flge@ff2+3)^0,c
  8280  0067E2  EC6C  F051         	call	___flge	;wreg free
  8281  0067E6  B0D8               	btfsc	status,0,c
  8282  0067E8  EFF8  F033         	goto	u12101
  8283  0067EC  EFFA  F033         	goto	u12100
  8284  0067F0                     u12101:
  8285  0067F0  EF1D  F034         	goto	l12091
  8286  0067F4                     u12100:
  8287  0067F4  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8288  0067F8  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8289  0067FC  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8290  006800  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8291  006804  0E00               	movlw	0
  8292  006806  6E05               	movwf	___flge@ff2^0,c
  8293  006808  0E00               	movlw	0
  8294  00680A  6E06               	movwf	(___flge@ff2+1)^0,c
  8295  00680C  0E20               	movlw	32
  8296  00680E  6E07               	movwf	(___flge@ff2+2)^0,c
  8297  006810  0EC1               	movlw	193
  8298  006812  6E08               	movwf	(___flge@ff2+3)^0,c
  8299  006814  EC6C  F051         	call	___flge	;wreg free
  8300  006818  A0D8               	btfss	status,0,c
  8301  00681A  EF11  F034         	goto	u12111
  8302  00681E  EF13  F034         	goto	u12110
  8303  006822                     u12111:
  8304  006822  EF1D  F034         	goto	l12091
  8305  006826                     u12110:
  8306  006826                     
  8307                           ;sensor.c: 34: retval = 0.04;
  8308  006826  0E0A               	movlw	10
  8309  006828  6E11               	movwf	gasSensor_lowfilter@retval^0,c
  8310  00682A  0ED7               	movlw	215
  8311  00682C  6E12               	movwf	(gasSensor_lowfilter@retval+1)^0,c
  8312  00682E  0E23               	movlw	35
  8313  006830  6E13               	movwf	(gasSensor_lowfilter@retval+2)^0,c
  8314  006832  0E3D               	movlw	61
  8315  006834  6E14               	movwf	(gasSensor_lowfilter@retval+3)^0,c
  8316  006836  EF84  F034         	goto	l1981
  8317  00683A                     l12091:
  8318                           
  8319                           ;sensor.c: 35: else if (gasConcent < -10.0 && gasConcent >= -30.0)
  8320  00683A  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8321  00683E  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8322  006842  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8323  006846  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8324  00684A  0E00               	movlw	0
  8325  00684C  6E05               	movwf	___flge@ff2^0,c
  8326  00684E  0E00               	movlw	0
  8327  006850  6E06               	movwf	(___flge@ff2+1)^0,c
  8328  006852  0E20               	movlw	32
  8329  006854  6E07               	movwf	(___flge@ff2+2)^0,c
  8330  006856  0EC1               	movlw	193
  8331  006858  6E08               	movwf	(___flge@ff2+3)^0,c
  8332  00685A  EC6C  F051         	call	___flge	;wreg free
  8333  00685E  B0D8               	btfsc	status,0,c
  8334  006860  EF34  F034         	goto	u12121
  8335  006864  EF36  F034         	goto	u12120
  8336  006868                     u12121:
  8337  006868  EF59  F034         	goto	l12097
  8338  00686C                     u12120:
  8339  00686C  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8340  006870  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8341  006874  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8342  006878  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8343  00687C  0E00               	movlw	0
  8344  00687E  6E05               	movwf	___flge@ff2^0,c
  8345  006880  0E00               	movlw	0
  8346  006882  6E06               	movwf	(___flge@ff2+1)^0,c
  8347  006884  0EF0               	movlw	240
  8348  006886  6E07               	movwf	(___flge@ff2+2)^0,c
  8349  006888  0EC1               	movlw	193
  8350  00688A  6E08               	movwf	(___flge@ff2+3)^0,c
  8351  00688C  EC6C  F051         	call	___flge	;wreg free
  8352  006890  A0D8               	btfss	status,0,c
  8353  006892  EF4D  F034         	goto	u12131
  8354  006896  EF4F  F034         	goto	u12130
  8355  00689A                     u12131:
  8356  00689A  EF59  F034         	goto	l12097
  8357  00689E                     u12130:
  8358  00689E                     
  8359                           ;sensor.c: 36: retval = 0.05;
  8360  00689E  0ECD               	movlw	205
  8361  0068A0  6E11               	movwf	gasSensor_lowfilter@retval^0,c
  8362  0068A2  0ECC               	movlw	204
  8363  0068A4  6E12               	movwf	(gasSensor_lowfilter@retval+1)^0,c
  8364  0068A6  0E4C               	movlw	76
  8365  0068A8  6E13               	movwf	(gasSensor_lowfilter@retval+2)^0,c
  8366  0068AA  0E3D               	movlw	61
  8367  0068AC  6E14               	movwf	(gasSensor_lowfilter@retval+3)^0,c
  8368  0068AE  EF84  F034         	goto	l1981
  8369  0068B2                     l12097:
  8370                           
  8371                           ;sensor.c: 37: else if (gasConcent < -30.0)
  8372  0068B2  C00D  F001         	movff	gasSensor_lowfilter@gasConcent,___flge@ff1
  8373  0068B6  C00E  F002         	movff	gasSensor_lowfilter@gasConcent+1,___flge@ff1+1
  8374  0068BA  C00F  F003         	movff	gasSensor_lowfilter@gasConcent+2,___flge@ff1+2
  8375  0068BE  C010  F004         	movff	gasSensor_lowfilter@gasConcent+3,___flge@ff1+3
  8376  0068C2  0E00               	movlw	0
  8377  0068C4  6E05               	movwf	___flge@ff2^0,c
  8378  0068C6  0E00               	movlw	0
  8379  0068C8  6E06               	movwf	(___flge@ff2+1)^0,c
  8380  0068CA  0EF0               	movlw	240
  8381  0068CC  6E07               	movwf	(___flge@ff2+2)^0,c
  8382  0068CE  0EC1               	movlw	193
  8383  0068D0  6E08               	movwf	(___flge@ff2+3)^0,c
  8384  0068D2  EC6C  F051         	call	___flge	;wreg free
  8385  0068D6  B0D8               	btfsc	status,0,c
  8386  0068D8  EF70  F034         	goto	u12141
  8387  0068DC  EF72  F034         	goto	u12140
  8388  0068E0                     u12141:
  8389  0068E0  EF7C  F034         	goto	l1992
  8390  0068E4                     u12140:
  8391  0068E4                     
  8392                           ;sensor.c: 38: retval = 0.06;
  8393  0068E4  0E8F               	movlw	143
  8394  0068E6  6E11               	movwf	gasSensor_lowfilter@retval^0,c
  8395  0068E8  0EC2               	movlw	194
  8396  0068EA  6E12               	movwf	(gasSensor_lowfilter@retval+1)^0,c
  8397  0068EC  0E75               	movlw	117
  8398  0068EE  6E13               	movwf	(gasSensor_lowfilter@retval+2)^0,c
  8399  0068F0  0E3D               	movlw	61
  8400  0068F2  6E14               	movwf	(gasSensor_lowfilter@retval+3)^0,c
  8401  0068F4  EF84  F034         	goto	l1981
  8402  0068F8                     l1992:
  8403                           
  8404                           ;sensor.c: 39: else;sensor.c: 40: retval = gasConcent;
  8405  0068F8  C00D  F011         	movff	gasSensor_lowfilter@gasConcent,gasSensor_lowfilter@retval
  8406  0068FC  C00E  F012         	movff	gasSensor_lowfilter@gasConcent+1,gasSensor_lowfilter@retval+1
  8407  006900  C00F  F013         	movff	gasSensor_lowfilter@gasConcent+2,gasSensor_lowfilter@retval+2
  8408  006904  C010  F014         	movff	gasSensor_lowfilter@gasConcent+3,gasSensor_lowfilter@retval+3
  8409  006908                     l1981:
  8410                           
  8411                           ;sensor.c: 41: return retval;
  8412  006908  C011  F00D         	movff	gasSensor_lowfilter@retval,?_gasSensor_lowfilter
  8413  00690C  C012  F00E         	movff	gasSensor_lowfilter@retval+1,?_gasSensor_lowfilter+1
  8414  006910  C013  F00F         	movff	gasSensor_lowfilter@retval+2,?_gasSensor_lowfilter+2
  8415  006914  C014  F010         	movff	gasSensor_lowfilter@retval+3,?_gasSensor_lowfilter+3
  8416  006918  0012               	return		;funcret
  8417  00691A                     __end_of_gasSensor_lowfilter:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function _gasSensor_calib *****************
  8421 ;; Defined at:
  8422 ;;		line 169 in file "sensor.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  cmp_val         4   25[BANK0 ] float 
  8425 ;;  gas_uVolt       4   29[BANK0 ] float 
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;  sensitivity     4   53[BANK0 ] float 
  8428 ;;  gas_ppm         4   49[BANK0 ] float 
  8429 ;;  nA              4   37[BANK0 ] float 
  8430 ;;  baseline        4   33[BANK0 ] float 
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  4   25[BANK0 ] float 
  8433 ;; Registers used:
  8434 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8440 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8443 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8444 ;;Total ram usage:       32 bytes
  8445 ;; Hardware stack levels used: 1
  8446 ;; Hardware stack levels required when called: 3
  8447 ;; This function calls:
  8448 ;;		___fladd
  8449 ;;		___fldiv
  8450 ;;		___fleq
  8451 ;;		___flmul
  8452 ;;		___flsub
  8453 ;; This function is called by:
  8454 ;;		_sensMeasure_gas_read
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text45
  8459  007DF2                     __ptext45:
  8460                           	callstack 0
  8461  007DF2                     _gasSensor_calib:
  8462                           	callstack 25
  8463  007DF2                     
  8464                           ;sensor.c: 172: float baseline = g_nvm.flash.baseLine_uV;
  8465  007DF2  C195  F081         	movff	_g_nvm+5,gasSensor_calib@baseline
  8466  007DF6  C196  F082         	movff	_g_nvm+6,gasSensor_calib@baseline+1
  8467  007DFA  C197  F083         	movff	_g_nvm+7,gasSensor_calib@baseline+2
  8468  007DFE  C198  F084         	movff	_g_nvm+8,gasSensor_calib@baseline+3
  8469  007E02                     
  8470                           ;sensor.c: 173: float sensitivity = g_nvm.flash.nA_per_ppm;
  8471  007E02  C199  F095         	movff	_g_nvm+9,gasSensor_calib@sensitivity
  8472  007E06  C19A  F096         	movff	_g_nvm+10,gasSensor_calib@sensitivity+1
  8473  007E0A  C19B  F097         	movff	_g_nvm+11,gasSensor_calib@sensitivity+2
  8474  007E0E  C19C  F098         	movff	_g_nvm+12,gasSensor_calib@sensitivity+3
  8475  007E12                     
  8476                           ;sensor.c: 175: g_uV_per_ppm = sensitivity * 350.0f;
  8477  007E12  C095  F043         	movff	gasSensor_calib@sensitivity,___flmul@b
  8478  007E16  C096  F044         	movff	gasSensor_calib@sensitivity+1,___flmul@b+1
  8479  007E1A  C097  F045         	movff	gasSensor_calib@sensitivity+2,___flmul@b+2
  8480  007E1E  C098  F046         	movff	gasSensor_calib@sensitivity+3,___flmul@b+3
  8481  007E22  0E00               	movlw	0
  8482  007E24  6E47               	movwf	___flmul@a^0,c
  8483  007E26  0E00               	movlw	0
  8484  007E28  6E48               	movwf	(___flmul@a+1)^0,c
  8485  007E2A  0EAF               	movlw	175
  8486  007E2C  6E49               	movwf	(___flmul@a+2)^0,c
  8487  007E2E  0E43               	movlw	67
  8488  007E30  6E4A               	movwf	(___flmul@a+3)^0,c
  8489  007E32  EC73  F02B         	call	___flmul	;wreg free
  8490  007E36  C043  F168         	movff	?___flmul,_g_uV_per_ppm
  8491  007E3A  C044  F169         	movff	?___flmul+1,_g_uV_per_ppm+1
  8492  007E3E  C045  F16A         	movff	?___flmul+2,_g_uV_per_ppm+2
  8493  007E42  C046  F16B         	movff	?___flmul+3,_g_uV_per_ppm+3
  8494  007E46                     
  8495                           ;sensor.c: 179: float nA = ((gas_uVolt + g_nvm.flash.zeroShift_uV) - (baseline + g_nvm.f
      +                          lash.zeroShift_uV)) / 350.0f;
  8496  007E46  C081  F02B         	movff	gasSensor_calib@baseline,___fladd@a
  8497  007E4A  C082  F02C         	movff	gasSensor_calib@baseline+1,___fladd@a+1
  8498  007E4E  C083  F02D         	movff	gasSensor_calib@baseline+2,___fladd@a+2
  8499  007E52  C084  F02E         	movff	gasSensor_calib@baseline+3,___fladd@a+3
  8500  007E56  C1BB  F027         	movff	_g_nvm+43,___fladd@b
  8501  007E5A  C1BC  F028         	movff	_g_nvm+44,___fladd@b+1
  8502  007E5E  C1BD  F029         	movff	_g_nvm+45,___fladd@b+2
  8503  007E62  C1BE  F02A         	movff	_g_nvm+46,___fladd@b+3
  8504  007E66  EC13  F029         	call	___fladd	;wreg free
  8505  007E6A  C027  F089         	movff	?___fladd,_gasSensor_calib$6565
  8506  007E6E  C028  F08A         	movff	?___fladd+1,_gasSensor_calib$6565+1
  8507  007E72  C029  F08B         	movff	?___fladd+2,_gasSensor_calib$6565+2
  8508  007E76  C02A  F08C         	movff	?___fladd+3,_gasSensor_calib$6565+3
  8509  007E7A                     
  8510                           ;sensor.c: 179: float nA = ((gas_uVolt + g_nvm.flash.zeroShift_uV) - (baseline + g_nvm.f
      +                          lash.zeroShift_uV)) / 350.0f;
  8511  007E7A  C07D  F02B         	movff	gasSensor_calib@gas_uVolt,___fladd@a
  8512  007E7E  C07E  F02C         	movff	gasSensor_calib@gas_uVolt+1,___fladd@a+1
  8513  007E82  C07F  F02D         	movff	gasSensor_calib@gas_uVolt+2,___fladd@a+2
  8514  007E86  C080  F02E         	movff	gasSensor_calib@gas_uVolt+3,___fladd@a+3
  8515  007E8A  C1BB  F027         	movff	_g_nvm+43,___fladd@b
  8516  007E8E  C1BC  F028         	movff	_g_nvm+44,___fladd@b+1
  8517  007E92  C1BD  F029         	movff	_g_nvm+45,___fladd@b+2
  8518  007E96  C1BE  F02A         	movff	_g_nvm+46,___fladd@b+3
  8519  007E9A  EC13  F029         	call	___fladd	;wreg free
  8520  007E9E  C027  F08D         	movff	?___fladd,_gasSensor_calib$6566
  8521  007EA2  C028  F08E         	movff	?___fladd+1,_gasSensor_calib$6566+1
  8522  007EA6  C029  F08F         	movff	?___fladd+2,_gasSensor_calib$6566+2
  8523  007EAA  C02A  F090         	movff	?___fladd+3,_gasSensor_calib$6566+3
  8524  007EAE                     
  8525                           ;sensor.c: 179: float nA = ((gas_uVolt + g_nvm.flash.zeroShift_uV) - (baseline + g_nvm.f
      +                          lash.zeroShift_uV)) / 350.0f;
  8526  007EAE  C089  F03B         	movff	_gasSensor_calib$6565,___flsub@a
  8527  007EB2  C08A  F03C         	movff	_gasSensor_calib$6565+1,___flsub@a+1
  8528  007EB6  C08B  F03D         	movff	_gasSensor_calib$6565+2,___flsub@a+2
  8529  007EBA  C08C  F03E         	movff	_gasSensor_calib$6565+3,___flsub@a+3
  8530  007EBE  C08D  F037         	movff	_gasSensor_calib$6566,___flsub@b
  8531  007EC2  C08E  F038         	movff	_gasSensor_calib$6566+1,___flsub@b+1
  8532  007EC6  C08F  F039         	movff	_gasSensor_calib$6566+2,___flsub@b+2
  8533  007ECA  C090  F03A         	movff	_gasSensor_calib$6566+3,___flsub@b+3
  8534  007ECE  EC08  F067         	call	___flsub	;wreg free
  8535  007ED2  C037  F060         	movff	?___flsub,___fldiv@b
  8536  007ED6  C038  F061         	movff	?___flsub+1,___fldiv@b+1
  8537  007EDA  C039  F062         	movff	?___flsub+2,___fldiv@b+2
  8538  007EDE  C03A  F063         	movff	?___flsub+3,___fldiv@b+3
  8539  007EE2  0E00               	movlw	0
  8540  007EE4  0100               	movlb	0	; () banked
  8541  007EE6  6F64               	movwf	___fldiv@a& (0+255),b
  8542  007EE8  0E00               	movlw	0
  8543  007EEA  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  8544  007EEC  0EAF               	movlw	175
  8545  007EEE  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  8546  007EF0  0E43               	movlw	67
  8547  007EF2  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  8548  007EF4  EC96  F02F         	call	___fldiv	;wreg free
  8549  007EF8  C060  F085         	movff	?___fldiv,gasSensor_calib@nA
  8550  007EFC  C061  F086         	movff	?___fldiv+1,gasSensor_calib@nA+1
  8551  007F00  C062  F087         	movff	?___fldiv+2,gasSensor_calib@nA+2
  8552  007F04  C063  F088         	movff	?___fldiv+3,gasSensor_calib@nA+3
  8553  007F08                     
  8554                           ;sensor.c: 180: if (sensitivity == 0) return 0.0f;
  8555  007F08  C095  F001         	movff	gasSensor_calib@sensitivity,___fleq@ff1
  8556  007F0C  C096  F002         	movff	gasSensor_calib@sensitivity+1,___fleq@ff1+1
  8557  007F10  C097  F003         	movff	gasSensor_calib@sensitivity+2,___fleq@ff1+2
  8558  007F14  C098  F004         	movff	gasSensor_calib@sensitivity+3,___fleq@ff1+3
  8559  007F18  0E00               	movlw	0
  8560  007F1A  6E05               	movwf	___fleq@ff2^0,c
  8561  007F1C  0E00               	movlw	0
  8562  007F1E  6E06               	movwf	(___fleq@ff2+1)^0,c
  8563  007F20  0E00               	movlw	0
  8564  007F22  6E07               	movwf	(___fleq@ff2+2)^0,c
  8565  007F24  0E00               	movlw	0
  8566  007F26  6E08               	movwf	(___fleq@ff2+3)^0,c
  8567  007F28  ECFD  F05A         	call	___fleq	;wreg free
  8568  007F2C  A0D8               	btfss	status,0,c
  8569  007F2E  EF9B  F03F         	goto	u20641
  8570  007F32  EF9D  F03F         	goto	u20640
  8571  007F36                     u20641:
  8572  007F36  EFA8  F03F         	goto	l18809
  8573  007F3A                     u20640:
  8574  007F3A  0E00               	movlw	0
  8575  007F3C  0100               	movlb	0	; () banked
  8576  007F3E  6F79               	movwf	?_gasSensor_calib& (0+255),b
  8577  007F40  0E00               	movlw	0
  8578  007F42  6F7A               	movwf	(?_gasSensor_calib+1)& (0+255),b
  8579  007F44  0E00               	movlw	0
  8580  007F46  6F7B               	movwf	(?_gasSensor_calib+2)& (0+255),b
  8581  007F48  0E00               	movlw	0
  8582  007F4A  6F7C               	movwf	(?_gasSensor_calib+3)& (0+255),b
  8583  007F4C  EFDC  F03F         	goto	l2049
  8584  007F50                     l18809:
  8585                           
  8586                           ;sensor.c: 182: gas_ppm = nA / sensitivity - cmp_val;
  8587  007F50  C095  F064         	movff	gasSensor_calib@sensitivity,___fldiv@a
  8588  007F54  C096  F065         	movff	gasSensor_calib@sensitivity+1,___fldiv@a+1
  8589  007F58  C097  F066         	movff	gasSensor_calib@sensitivity+2,___fldiv@a+2
  8590  007F5C  C098  F067         	movff	gasSensor_calib@sensitivity+3,___fldiv@a+3
  8591  007F60  C085  F060         	movff	gasSensor_calib@nA,___fldiv@b
  8592  007F64  C086  F061         	movff	gasSensor_calib@nA+1,___fldiv@b+1
  8593  007F68  C087  F062         	movff	gasSensor_calib@nA+2,___fldiv@b+2
  8594  007F6C  C088  F063         	movff	gasSensor_calib@nA+3,___fldiv@b+3
  8595  007F70  EC96  F02F         	call	___fldiv	;wreg free
  8596  007F74  C060  F037         	movff	?___fldiv,___flsub@b
  8597  007F78  C061  F038         	movff	?___fldiv+1,___flsub@b+1
  8598  007F7C  C062  F039         	movff	?___fldiv+2,___flsub@b+2
  8599  007F80  C063  F03A         	movff	?___fldiv+3,___flsub@b+3
  8600  007F84  C079  F03B         	movff	gasSensor_calib@cmp_val,___flsub@a
  8601  007F88  C07A  F03C         	movff	gasSensor_calib@cmp_val+1,___flsub@a+1
  8602  007F8C  C07B  F03D         	movff	gasSensor_calib@cmp_val+2,___flsub@a+2
  8603  007F90  C07C  F03E         	movff	gasSensor_calib@cmp_val+3,___flsub@a+3
  8604  007F94  EC08  F067         	call	___flsub	;wreg free
  8605  007F98  C037  F091         	movff	?___flsub,gasSensor_calib@gas_ppm
  8606  007F9C  C038  F092         	movff	?___flsub+1,gasSensor_calib@gas_ppm+1
  8607  007FA0  C039  F093         	movff	?___flsub+2,gasSensor_calib@gas_ppm+2
  8608  007FA4  C03A  F094         	movff	?___flsub+3,gasSensor_calib@gas_ppm+3
  8609  007FA8                     
  8610                           ;sensor.c: 186: return gas_ppm;
  8611  007FA8  C091  F079         	movff	gasSensor_calib@gas_ppm,?_gasSensor_calib
  8612  007FAC  C092  F07A         	movff	gasSensor_calib@gas_ppm+1,?_gasSensor_calib+1
  8613  007FB0  C093  F07B         	movff	gasSensor_calib@gas_ppm+2,?_gasSensor_calib+2
  8614  007FB4  C094  F07C         	movff	gasSensor_calib@gas_ppm+3,?_gasSensor_calib+3
  8615  007FB8                     l2049:
  8616  007FB8  0012               	return		;funcret
  8617  007FBA                     __end_of_gasSensor_calib:
  8618                           	callstack 0
  8619                           
  8620 ;; *************** function _compensate_temperature *****************
  8621 ;; Defined at:
  8622 ;;		line 152 in file "sensor.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  temp            4    0[COMRAM] float 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;  cmp_val         4    4[COMRAM] float 
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  4    0[COMRAM] float 
  8629 ;; Registers used:
  8630 ;;		wreg, status,2
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8637 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8639 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8640 ;;Total ram usage:        8 bytes
  8641 ;; Hardware stack levels used: 1
  8642 ;; Hardware stack levels required when called: 1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_sensMeasure_gas_read
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text46
  8651  00D442                     __ptext46:
  8652                           	callstack 0
  8653  00D442                     _compensate_temperature:
  8654                           	callstack 27
  8655  00D442                     
  8656                           ;sensor.c: 154: float cmp_val = 0.0f;
  8657  00D442  0E00               	movlw	0
  8658  00D444  6E05               	movwf	compensate_temperature@cmp_val^0,c
  8659  00D446  0E00               	movlw	0
  8660  00D448  6E06               	movwf	(compensate_temperature@cmp_val+1)^0,c
  8661  00D44A  0E00               	movlw	0
  8662  00D44C  6E07               	movwf	(compensate_temperature@cmp_val+2)^0,c
  8663  00D44E  0E00               	movlw	0
  8664  00D450  6E08               	movwf	(compensate_temperature@cmp_val+3)^0,c
  8665  00D452                     
  8666                           ;sensor.c: 166: return cmp_val;
  8667  00D452  C005  F001         	movff	compensate_temperature@cmp_val,?_compensate_temperature
  8668  00D456  C006  F002         	movff	compensate_temperature@cmp_val+1,?_compensate_temperature+1
  8669  00D45A  C007  F003         	movff	compensate_temperature@cmp_val+2,?_compensate_temperature+2
  8670  00D45E  C008  F004         	movff	compensate_temperature@cmp_val+3,?_compensate_temperature+3
  8671  00D462  0012               	return		;funcret
  8672  00D464                     __end_of_compensate_temperature:
  8673                           	callstack 0
  8674                           
  8675 ;; *************** function _Kalman_updateEstimate *****************
  8676 ;; Defined at:
  8677 ;;		line 22 in file "filter.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  pObj            2   25[BANK0 ] PTR struct .
  8680 ;;		 -> kalmanFilter(24), 
  8681 ;;  mea             4   27[BANK0 ] float 
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;		None
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  4   25[BANK0 ] float 
  8686 ;; Registers used:
  8687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8693 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8694 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8696 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;Total ram usage:       14 bytes
  8698 ;; Hardware stack levels used: 1
  8699 ;; Hardware stack levels required when called: 3
  8700 ;; This function calls:
  8701 ;;		___fladd
  8702 ;;		___fldiv
  8703 ;;		___flmul
  8704 ;;		___flsub
  8705 ;;		_fabs
  8706 ;; This function is called by:
  8707 ;;		_sensMeasure_gas_read
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           	psect	text47
  8712  00691A                     __ptext47:
  8713                           	callstack 0
  8714  00691A                     _Kalman_updateEstimate:
  8715                           	callstack 25
  8716  00691A                     
  8717                           ;filter.c: 25: pObj->_kalman_gain = pObj->_err_estimate/(pObj->_err_estimate + pObj->_er
      +                          r_measure);
  8718  00691A  0100               	movlb	0	; () banked
  8719  00691C  EE20 F004          	lfsr	2,4
  8720  006920  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8721  006922  26D9               	addwf	fsr2l,f,c
  8722  006924  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8723  006926  22DA               	addwfc	fsr2h,f,c
  8724  006928  CFDE F060          	movff	postinc2,___fldiv@b
  8725  00692C  CFDE F061          	movff	postinc2,___fldiv@b+1
  8726  006930  CFDE F062          	movff	postinc2,___fldiv@b+2
  8727  006934  CFDE F063          	movff	postinc2,___fldiv@b+3
  8728  006938  C079  FFD9         	movff	Kalman_updateEstimate@pObj,fsr2l
  8729  00693C  C07A  FFDA         	movff	Kalman_updateEstimate@pObj+1,fsr2h
  8730  006940  CFDE F02B          	movff	postinc2,___fladd@a
  8731  006944  CFDE F02C          	movff	postinc2,___fladd@a+1
  8732  006948  CFDE F02D          	movff	postinc2,___fladd@a+2
  8733  00694C  CFDE F02E          	movff	postinc2,___fladd@a+3
  8734  006950  EE20 F004          	lfsr	2,4
  8735  006954  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8736  006956  26D9               	addwf	fsr2l,f,c
  8737  006958  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8738  00695A  22DA               	addwfc	fsr2h,f,c
  8739  00695C  CFDE F027          	movff	postinc2,___fladd@b
  8740  006960  CFDE F028          	movff	postinc2,___fladd@b+1
  8741  006964  CFDE F029          	movff	postinc2,___fladd@b+2
  8742  006968  CFDE F02A          	movff	postinc2,___fladd@b+3
  8743  00696C  EC13  F029         	call	___fladd	;wreg free
  8744  006970  C027  F064         	movff	?___fladd,___fldiv@a
  8745  006974  C028  F065         	movff	?___fladd+1,___fldiv@a+1
  8746  006978  C029  F066         	movff	?___fladd+2,___fldiv@a+2
  8747  00697C  C02A  F067         	movff	?___fladd+3,___fldiv@a+3
  8748  006980  EC96  F02F         	call	___fldiv	;wreg free
  8749  006984  0100               	movlb	0	; () banked
  8750  006986  EE20 F014          	lfsr	2,20
  8751  00698A  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8752  00698C  26D9               	addwf	fsr2l,f,c
  8753  00698E  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8754  006990  22DA               	addwfc	fsr2h,f,c
  8755  006992  C060  FFDE         	movff	?___fldiv,postinc2
  8756  006996  C061  FFDE         	movff	?___fldiv+1,postinc2
  8757  00699A  C062  FFDE         	movff	?___fldiv+2,postinc2
  8758  00699E  C063  FFDE         	movff	?___fldiv+3,postinc2
  8759  0069A2                     
  8760                           ; BSR set to: 0
  8761                           ;filter.c: 27: pObj->_current_estimate = pObj->_last_estimate + pObj->_kalman_gain * (me
      +                          a - pObj->_last_estimate);
  8762  0069A2  EE20 F014          	lfsr	2,20
  8763  0069A6  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8764  0069A8  26D9               	addwf	fsr2l,f,c
  8765  0069AA  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8766  0069AC  22DA               	addwfc	fsr2h,f,c
  8767  0069AE  CFDE F047          	movff	postinc2,___flmul@a
  8768  0069B2  CFDE F048          	movff	postinc2,___flmul@a+1
  8769  0069B6  CFDE F049          	movff	postinc2,___flmul@a+2
  8770  0069BA  CFDE F04A          	movff	postinc2,___flmul@a+3
  8771  0069BE  EE20 F010          	lfsr	2,16
  8772  0069C2  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8773  0069C4  26D9               	addwf	fsr2l,f,c
  8774  0069C6  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8775  0069C8  22DA               	addwfc	fsr2h,f,c
  8776  0069CA  CFDE F03B          	movff	postinc2,___flsub@a
  8777  0069CE  CFDE F03C          	movff	postinc2,___flsub@a+1
  8778  0069D2  CFDE F03D          	movff	postinc2,___flsub@a+2
  8779  0069D6  CFDE F03E          	movff	postinc2,___flsub@a+3
  8780  0069DA  C07B  F037         	movff	Kalman_updateEstimate@mea,___flsub@b
  8781  0069DE  C07C  F038         	movff	Kalman_updateEstimate@mea+1,___flsub@b+1
  8782  0069E2  C07D  F039         	movff	Kalman_updateEstimate@mea+2,___flsub@b+2
  8783  0069E6  C07E  F03A         	movff	Kalman_updateEstimate@mea+3,___flsub@b+3
  8784  0069EA  EC08  F067         	call	___flsub	;wreg free
  8785  0069EE  C037  F043         	movff	?___flsub,___flmul@b
  8786  0069F2  C038  F044         	movff	?___flsub+1,___flmul@b+1
  8787  0069F6  C039  F045         	movff	?___flsub+2,___flmul@b+2
  8788  0069FA  C03A  F046         	movff	?___flsub+3,___flmul@b+3
  8789  0069FE  EC73  F02B         	call	___flmul	;wreg free
  8790  006A02  C043  F083         	movff	?___flmul,_Kalman_updateEstimate$6563
  8791  006A06  C044  F084         	movff	?___flmul+1,_Kalman_updateEstimate$6563+1
  8792  006A0A  C045  F085         	movff	?___flmul+2,_Kalman_updateEstimate$6563+2
  8793  006A0E  C046  F086         	movff	?___flmul+3,_Kalman_updateEstimate$6563+3
  8794  006A12                     
  8795                           ;filter.c: 27: pObj->_current_estimate = pObj->_last_estimate + pObj->_kalman_gain * (me
      +                          a - pObj->_last_estimate);
  8796  006A12  C083  F027         	movff	_Kalman_updateEstimate$6563,___fladd@b
  8797  006A16  C084  F028         	movff	_Kalman_updateEstimate$6563+1,___fladd@b+1
  8798  006A1A  C085  F029         	movff	_Kalman_updateEstimate$6563+2,___fladd@b+2
  8799  006A1E  C086  F02A         	movff	_Kalman_updateEstimate$6563+3,___fladd@b+3
  8800  006A22  0100               	movlb	0	; () banked
  8801  006A24  EE20 F010          	lfsr	2,16
  8802  006A28  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8803  006A2A  26D9               	addwf	fsr2l,f,c
  8804  006A2C  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8805  006A2E  22DA               	addwfc	fsr2h,f,c
  8806  006A30  CFDE F02B          	movff	postinc2,___fladd@a
  8807  006A34  CFDE F02C          	movff	postinc2,___fladd@a+1
  8808  006A38  CFDE F02D          	movff	postinc2,___fladd@a+2
  8809  006A3C  CFDE F02E          	movff	postinc2,___fladd@a+3
  8810  006A40  EC13  F029         	call	___fladd	;wreg free
  8811  006A44  0100               	movlb	0	; () banked
  8812  006A46  EE20 F00C          	lfsr	2,12
  8813  006A4A  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8814  006A4C  26D9               	addwf	fsr2l,f,c
  8815  006A4E  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8816  006A50  22DA               	addwfc	fsr2h,f,c
  8817  006A52  C027  FFDE         	movff	?___fladd,postinc2
  8818  006A56  C028  FFDE         	movff	?___fladd+1,postinc2
  8819  006A5A  C029  FFDE         	movff	?___fladd+2,postinc2
  8820  006A5E  C02A  FFDE         	movff	?___fladd+3,postinc2
  8821                           
  8822                           ;filter.c: 29: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;fi
      +                          lter.c: 30: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
  8823  006A62  EE20 F004          	lfsr	2,4
  8824  006A66  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8825  006A68  26D9               	addwf	fsr2l,f,c
  8826  006A6A  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8827  006A6C  22DA               	addwfc	fsr2h,f,c
  8828  006A6E  CFDE F047          	movff	postinc2,___flmul@a
  8829  006A72  CFDE F048          	movff	postinc2,___flmul@a+1
  8830  006A76  CFDE F049          	movff	postinc2,___flmul@a+2
  8831  006A7A  CFDE F04A          	movff	postinc2,___flmul@a+3
  8832  006A7E  EE20 F014          	lfsr	2,20
  8833  006A82  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8834  006A84  26D9               	addwf	fsr2l,f,c
  8835  006A86  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8836  006A88  22DA               	addwfc	fsr2h,f,c
  8837  006A8A  CFDE F03B          	movff	postinc2,___flsub@a
  8838  006A8E  CFDE F03C          	movff	postinc2,___flsub@a+1
  8839  006A92  CFDE F03D          	movff	postinc2,___flsub@a+2
  8840  006A96  CFDE F03E          	movff	postinc2,___flsub@a+3
  8841  006A9A  0E00               	movlw	0
  8842  006A9C  6E37               	movwf	___flsub@b^0,c
  8843  006A9E  0E00               	movlw	0
  8844  006AA0  6E38               	movwf	(___flsub@b+1)^0,c
  8845  006AA2  0E80               	movlw	128
  8846  006AA4  6E39               	movwf	(___flsub@b+2)^0,c
  8847  006AA6  0E3F               	movlw	63
  8848  006AA8  6E3A               	movwf	(___flsub@b+3)^0,c
  8849  006AAA  EC08  F067         	call	___flsub	;wreg free
  8850  006AAE  C037  F043         	movff	?___flsub,___flmul@b
  8851  006AB2  C038  F044         	movff	?___flsub+1,___flmul@b+1
  8852  006AB6  C039  F045         	movff	?___flsub+2,___flmul@b+2
  8853  006ABA  C03A  F046         	movff	?___flsub+3,___flmul@b+3
  8854  006ABE  EC73  F02B         	call	___flmul	;wreg free
  8855  006AC2  C043  F083         	movff	?___flmul,_Kalman_updateEstimate$6563
  8856  006AC6  C044  F084         	movff	?___flmul+1,_Kalman_updateEstimate$6563+1
  8857  006ACA  C045  F085         	movff	?___flmul+2,_Kalman_updateEstimate$6563+2
  8858  006ACE  C046  F086         	movff	?___flmul+3,_Kalman_updateEstimate$6563+3
  8859                           
  8860                           ;filter.c: 29: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;fi
      +                          lter.c: 30: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
  8861  006AD2  0100               	movlb	0	; () banked
  8862  006AD4  EE20 F008          	lfsr	2,8
  8863  006AD8  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8864  006ADA  26D9               	addwf	fsr2l,f,c
  8865  006ADC  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8866  006ADE  22DA               	addwfc	fsr2h,f,c
  8867  006AE0  CFDE F047          	movff	postinc2,___flmul@a
  8868  006AE4  CFDE F048          	movff	postinc2,___flmul@a+1
  8869  006AE8  CFDE F049          	movff	postinc2,___flmul@a+2
  8870  006AEC  CFDE F04A          	movff	postinc2,___flmul@a+3
  8871  006AF0  EE20 F00C          	lfsr	2,12
  8872  006AF4  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8873  006AF6  26D9               	addwf	fsr2l,f,c
  8874  006AF8  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8875  006AFA  22DA               	addwfc	fsr2h,f,c
  8876  006AFC  CFDE F03B          	movff	postinc2,___flsub@a
  8877  006B00  CFDE F03C          	movff	postinc2,___flsub@a+1
  8878  006B04  CFDE F03D          	movff	postinc2,___flsub@a+2
  8879  006B08  CFDE F03E          	movff	postinc2,___flsub@a+3
  8880  006B0C  EE20 F010          	lfsr	2,16
  8881  006B10  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8882  006B12  26D9               	addwf	fsr2l,f,c
  8883  006B14  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8884  006B16  22DA               	addwfc	fsr2h,f,c
  8885  006B18  CFDE F037          	movff	postinc2,___flsub@b
  8886  006B1C  CFDE F038          	movff	postinc2,___flsub@b+1
  8887  006B20  CFDE F039          	movff	postinc2,___flsub@b+2
  8888  006B24  CFDE F03A          	movff	postinc2,___flsub@b+3
  8889  006B28  EC08  F067         	call	___flsub	;wreg free
  8890  006B2C  C037  F03F         	movff	?___flsub,fabs@d
  8891  006B30  C038  F040         	movff	?___flsub+1,fabs@d+1
  8892  006B34  C039  F041         	movff	?___flsub+2,fabs@d+2
  8893  006B38  C03A  F042         	movff	?___flsub+3,fabs@d+3
  8894  006B3C  ECE4  F066         	call	_fabs	;wreg free
  8895  006B40  C03F  F043         	movff	?_fabs,___flmul@b
  8896  006B44  C040  F044         	movff	?_fabs+1,___flmul@b+1
  8897  006B48  C041  F045         	movff	?_fabs+2,___flmul@b+2
  8898  006B4C  C042  F046         	movff	?_fabs+3,___flmul@b+3
  8899  006B50  EC73  F02B         	call	___flmul	;wreg free
  8900  006B54  C043  F07F         	movff	?___flmul,_Kalman_updateEstimate$6564
  8901  006B58  C044  F080         	movff	?___flmul+1,_Kalman_updateEstimate$6564+1
  8902  006B5C  C045  F081         	movff	?___flmul+2,_Kalman_updateEstimate$6564+2
  8903  006B60  C046  F082         	movff	?___flmul+3,_Kalman_updateEstimate$6564+3
  8904  006B64                     
  8905                           ;filter.c: 29: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;fi
      +                          lter.c: 30: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
  8906  006B64  C083  F027         	movff	_Kalman_updateEstimate$6563,___fladd@b
  8907  006B68  C084  F028         	movff	_Kalman_updateEstimate$6563+1,___fladd@b+1
  8908  006B6C  C085  F029         	movff	_Kalman_updateEstimate$6563+2,___fladd@b+2
  8909  006B70  C086  F02A         	movff	_Kalman_updateEstimate$6563+3,___fladd@b+3
  8910  006B74  C07F  F02B         	movff	_Kalman_updateEstimate$6564,___fladd@a
  8911  006B78  C080  F02C         	movff	_Kalman_updateEstimate$6564+1,___fladd@a+1
  8912  006B7C  C081  F02D         	movff	_Kalman_updateEstimate$6564+2,___fladd@a+2
  8913  006B80  C082  F02E         	movff	_Kalman_updateEstimate$6564+3,___fladd@a+3
  8914  006B84  EC13  F029         	call	___fladd	;wreg free
  8915  006B88  0100               	movlb	0	; () banked
  8916  006B8A  EE20 F004          	lfsr	2,4
  8917  006B8E  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8918  006B90  26D9               	addwf	fsr2l,f,c
  8919  006B92  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8920  006B94  22DA               	addwfc	fsr2h,f,c
  8921  006B96  C027  FFDE         	movff	?___fladd,postinc2
  8922  006B9A  C028  FFDE         	movff	?___fladd+1,postinc2
  8923  006B9E  C029  FFDE         	movff	?___fladd+2,postinc2
  8924  006BA2  C02A  FFDE         	movff	?___fladd+3,postinc2
  8925  006BA6                     
  8926                           ; BSR set to: 0
  8927                           ;filter.c: 32: pObj->_last_estimate=pObj->_current_estimate;
  8928  006BA6  EE20 F00C          	lfsr	2,12
  8929  006BAA  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8930  006BAC  26D9               	addwf	fsr2l,f,c
  8931  006BAE  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8932  006BB0  22DA               	addwfc	fsr2h,f,c
  8933  006BB2  EE10 F010          	lfsr	1,16
  8934  006BB6  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8935  006BB8  26E1               	addwf	fsr1l,f,c
  8936  006BBA  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8937  006BBC  22E2               	addwfc	fsr1h,f,c
  8938  006BBE  CFDE FFE6          	movff	postinc2,postinc1
  8939  006BC2  CFDE FFE6          	movff	postinc2,postinc1
  8940  006BC6  CFDE FFE6          	movff	postinc2,postinc1
  8941  006BCA  CFDE FFE6          	movff	postinc2,postinc1
  8942  006BCE                     
  8943                           ; BSR set to: 0
  8944                           ;filter.c: 34: return pObj->_current_estimate;
  8945  006BCE  EE20 F00C          	lfsr	2,12
  8946  006BD2  5179               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
  8947  006BD4  26D9               	addwf	fsr2l,f,c
  8948  006BD6  517A               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
  8949  006BD8  22DA               	addwfc	fsr2h,f,c
  8950  006BDA  CFDE F079          	movff	postinc2,?_Kalman_updateEstimate
  8951  006BDE  CFDE F07A          	movff	postinc2,?_Kalman_updateEstimate+1
  8952  006BE2  CFDE F07B          	movff	postinc2,?_Kalman_updateEstimate+2
  8953  006BE6  CFDE F07C          	movff	postinc2,?_Kalman_updateEstimate+3
  8954  006BEA                     
  8955                           ; BSR set to: 0
  8956  006BEA  0012               	return		;funcret
  8957  006BEC                     __end_of_Kalman_updateEstimate:
  8958                           	callstack 0
  8959                           
  8960 ;; *************** function _fabs *****************
  8961 ;; Defined at:
  8962 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fabs.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  d               4   62[COMRAM] float 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  4   62[COMRAM] float 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8980 ;;Total ram usage:        4 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 2
  8983 ;; This function calls:
  8984 ;;		___flneg
  8985 ;; This function is called by:
  8986 ;;		_Kalman_updateEstimate
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text48
  8991  00CDC8                     __ptext48:
  8992                           	callstack 0
  8993  00CDC8                     _fabs:
  8994                           	callstack 25
  8995  00CDC8  BE42               	btfsc	(fabs@d+3)^0,7,c
  8996  00CDCA  EFEB  F066         	goto	u11320
  8997  00CDCE  EFE9  F066         	goto	u11321
  8998  00CDD2                     u11321:
  8999  00CDD2  EFFF  F066         	goto	l2955
  9000  00CDD6                     u11320:
  9001  00CDD6  C03F  F001         	movff	fabs@d,___flneg@f1
  9002  00CDDA  C040  F002         	movff	fabs@d+1,___flneg@f1+1
  9003  00CDDE  C041  F003         	movff	fabs@d+2,___flneg@f1+2
  9004  00CDE2  C042  F004         	movff	fabs@d+3,___flneg@f1+3
  9005  00CDE6  EC03  F068         	call	___flneg	;wreg free
  9006  00CDEA  C001  F03F         	movff	?___flneg,?_fabs
  9007  00CDEE  C002  F040         	movff	?___flneg+1,?_fabs+1
  9008  00CDF2  C003  F041         	movff	?___flneg+2,?_fabs+2
  9009  00CDF6  C004  F042         	movff	?___flneg+3,?_fabs+3
  9010  00CDFA  EF07  F067         	goto	l2956
  9011  00CDFE                     l2955:
  9012  00CDFE  C03F  F03F         	movff	fabs@d,?_fabs
  9013  00CE02  C040  F040         	movff	fabs@d+1,?_fabs+1
  9014  00CE06  C041  F041         	movff	fabs@d+2,?_fabs+2
  9015  00CE0A  C042  F042         	movff	fabs@d+3,?_fabs+3
  9016  00CE0E                     l2956:
  9017  00CE0E  0012               	return		;funcret
  9018  00CE10                     __end_of_fabs:
  9019                           	callstack 0
  9020                           
  9021 ;; *************** function _ADCto_uVoltage *****************
  9022 ;; Defined at:
  9023 ;;		line 144 in file "sensor.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  raw_adc         2    0[BANK0 ] int 
  9026 ;;  gain            1    2[BANK0 ] unsigned char 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  lsb             4    8[BANK0 ] float 
  9029 ;;  uVolt           4    4[BANK0 ] float 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  4    0[BANK0 ] float 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9040 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;Total ram usage:       12 bytes
  9044 ;; Hardware stack levels used: 1
  9045 ;; Hardware stack levels required when called: 2
  9046 ;; This function calls:
  9047 ;;		_FSR_set_LSB
  9048 ;;		___flmul
  9049 ;;		___xxtofl
  9050 ;; This function is called by:
  9051 ;;		_sensMeasure_gas_read
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text49
  9056  00C0B8                     __ptext49:
  9057                           	callstack 0
  9058  00C0B8                     _ADCto_uVoltage:
  9059                           	callstack 26
  9060  00C0B8                     
  9061                           ;sensor.c: 146: float uVolt;;sensor.c: 147: float lsb = FSR_set_LSB(gain);
  9062  00C0B8  0100               	movlb	0	; () banked
  9063  00C0BA  5162               	movf	ADCto_uVoltage@gain& (0+255),w,b
  9064  00C0BC  EC34  F055         	call	_FSR_set_LSB
  9065  00C0C0  C001  F068         	movff	?_FSR_set_LSB,ADCto_uVoltage@lsb
  9066  00C0C4  C002  F069         	movff	?_FSR_set_LSB+1,ADCto_uVoltage@lsb+1
  9067  00C0C8  C003  F06A         	movff	?_FSR_set_LSB+2,ADCto_uVoltage@lsb+2
  9068  00C0CC  C004  F06B         	movff	?_FSR_set_LSB+3,ADCto_uVoltage@lsb+3
  9069  00C0D0                     
  9070                           ;sensor.c: 148: uVolt = (float)raw_adc * lsb;
  9071  00C0D0  C060  F019         	movff	ADCto_uVoltage@raw_adc,___xxtofl@val
  9072  00C0D4  C061  F01A         	movff	ADCto_uVoltage@raw_adc+1,___xxtofl@val+1
  9073  00C0D8  0E00               	movlw	0
  9074  00C0DA  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  9075  00C0DC  0EFF               	movlw	-1
  9076  00C0DE  6E1B               	movwf	(___xxtofl@val+2)^0,c
  9077  00C0E0  6E1C               	movwf	(___xxtofl@val+3)^0,c
  9078  00C0E2  0E01               	movlw	1
  9079  00C0E4  ECC1  F040         	call	___xxtofl
  9080  00C0E8  C019  F043         	movff	?___xxtofl,___flmul@b
  9081  00C0EC  C01A  F044         	movff	?___xxtofl+1,___flmul@b+1
  9082  00C0F0  C01B  F045         	movff	?___xxtofl+2,___flmul@b+2
  9083  00C0F4  C01C  F046         	movff	?___xxtofl+3,___flmul@b+3
  9084  00C0F8  C068  F047         	movff	ADCto_uVoltage@lsb,___flmul@a
  9085  00C0FC  C069  F048         	movff	ADCto_uVoltage@lsb+1,___flmul@a+1
  9086  00C100  C06A  F049         	movff	ADCto_uVoltage@lsb+2,___flmul@a+2
  9087  00C104  C06B  F04A         	movff	ADCto_uVoltage@lsb+3,___flmul@a+3
  9088  00C108  EC73  F02B         	call	___flmul	;wreg free
  9089  00C10C  C043  F064         	movff	?___flmul,ADCto_uVoltage@uVolt
  9090  00C110  C044  F065         	movff	?___flmul+1,ADCto_uVoltage@uVolt+1
  9091  00C114  C045  F066         	movff	?___flmul+2,ADCto_uVoltage@uVolt+2
  9092  00C118  C046  F067         	movff	?___flmul+3,ADCto_uVoltage@uVolt+3
  9093  00C11C                     
  9094                           ;sensor.c: 149: return uVolt;
  9095  00C11C  C064  F060         	movff	ADCto_uVoltage@uVolt,?_ADCto_uVoltage
  9096  00C120  C065  F061         	movff	ADCto_uVoltage@uVolt+1,?_ADCto_uVoltage+1
  9097  00C124  C066  F062         	movff	ADCto_uVoltage@uVolt+2,?_ADCto_uVoltage+2
  9098  00C128  C067  F063         	movff	ADCto_uVoltage@uVolt+3,?_ADCto_uVoltage+3
  9099  00C12C  0012               	return		;funcret
  9100  00C12E                     __end_of_ADCto_uVoltage:
  9101                           	callstack 0
  9102                           
  9103 ;; *************** function _FSR_set_LSB *****************
  9104 ;; Defined at:
  9105 ;;		line 44 in file "sensor.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  gain            1    wreg     unsigned char 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  gain            1    4[COMRAM] unsigned char 
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  4    0[COMRAM] float 
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;Total ram usage:        5 bytes
  9124 ;; Hardware stack levels used: 1
  9125 ;; Hardware stack levels required when called: 1
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_ADCto_uVoltage
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text50
  9134  00AA68                     __ptext50:
  9135                           	callstack 0
  9136  00AA68                     _FSR_set_LSB:
  9137                           	callstack 26
  9138                           
  9139                           ;incstack = 0
  9140                           ;FSR_set_LSB@gain stored from wreg
  9141  00AA68  6E05               	movwf	FSR_set_LSB@gain^0,c
  9142  00AA6A                     
  9143                           ;sensor.c: 46: if(gain == FSR_6p144V)
  9144  00AA6A  5005               	movf	FSR_set_LSB@gain^0,w,c
  9145  00AA6C  A4D8               	btfss	status,2,c
  9146  00AA6E  EF3B  F055         	goto	u20371
  9147  00AA72  EF3D  F055         	goto	u20370
  9148  00AA76                     u20371:
  9149  00AA76  EF47  F055         	goto	l18561
  9150  00AA7A                     u20370:
  9151  00AA7A                     
  9152                           ;sensor.c: 47: return 187.5f;
  9153  00AA7A  0E00               	movlw	0
  9154  00AA7C  6E01               	movwf	?_FSR_set_LSB^0,c
  9155  00AA7E  0E80               	movlw	128
  9156  00AA80  6E02               	movwf	(?_FSR_set_LSB+1)^0,c
  9157  00AA82  0E3B               	movlw	59
  9158  00AA84  6E03               	movwf	(?_FSR_set_LSB+2)^0,c
  9159  00AA86  0E43               	movlw	67
  9160  00AA88  6E04               	movwf	(?_FSR_set_LSB+3)^0,c
  9161  00AA8A  EF9A  F055         	goto	l1998
  9162  00AA8E                     l18561:
  9163                           
  9164                           ;sensor.c: 48: else if(gain == FSR_4p096V)
  9165  00AA8E  0405               	decf	FSR_set_LSB@gain^0,w,c
  9166  00AA90  A4D8               	btfss	status,2,c
  9167  00AA92  EF4D  F055         	goto	u20381
  9168  00AA96  EF4F  F055         	goto	u20380
  9169  00AA9A                     u20381:
  9170  00AA9A  EF59  F055         	goto	l18569
  9171  00AA9E                     u20380:
  9172  00AA9E                     
  9173                           ;sensor.c: 49: return 125.0f;
  9174  00AA9E  0E00               	movlw	0
  9175  00AAA0  6E01               	movwf	?_FSR_set_LSB^0,c
  9176  00AAA2  0E00               	movlw	0
  9177  00AAA4  6E02               	movwf	(?_FSR_set_LSB+1)^0,c
  9178  00AAA6  0EFA               	movlw	250
  9179  00AAA8  6E03               	movwf	(?_FSR_set_LSB+2)^0,c
  9180  00AAAA  0E42               	movlw	66
  9181  00AAAC  6E04               	movwf	(?_FSR_set_LSB+3)^0,c
  9182  00AAAE  EF9A  F055         	goto	l1998
  9183  00AAB2                     l18569:
  9184                           
  9185                           ;sensor.c: 50: else if(gain == FSR_1p024V)
  9186  00AAB2  0E03               	movlw	3
  9187  00AAB4  1805               	xorwf	FSR_set_LSB@gain^0,w,c
  9188  00AAB6  A4D8               	btfss	status,2,c
  9189  00AAB8  EF60  F055         	goto	u20391
  9190  00AABC  EF62  F055         	goto	u20390
  9191  00AAC0                     u20391:
  9192  00AAC0  EF6C  F055         	goto	l18577
  9193  00AAC4                     u20390:
  9194  00AAC4                     
  9195                           ;sensor.c: 51: return 31.25f;
  9196  00AAC4  0E00               	movlw	0
  9197  00AAC6  6E01               	movwf	?_FSR_set_LSB^0,c
  9198  00AAC8  0E00               	movlw	0
  9199  00AACA  6E02               	movwf	(?_FSR_set_LSB+1)^0,c
  9200  00AACC  0EFA               	movlw	250
  9201  00AACE  6E03               	movwf	(?_FSR_set_LSB+2)^0,c
  9202  00AAD0  0E41               	movlw	65
  9203  00AAD2  6E04               	movwf	(?_FSR_set_LSB+3)^0,c
  9204  00AAD4  EF9A  F055         	goto	l1998
  9205  00AAD8                     l18577:
  9206                           
  9207                           ;sensor.c: 52: else if(gain == FSR_0p512V)
  9208  00AAD8  0E04               	movlw	4
  9209  00AADA  1805               	xorwf	FSR_set_LSB@gain^0,w,c
  9210  00AADC  A4D8               	btfss	status,2,c
  9211  00AADE  EF73  F055         	goto	u20401
  9212  00AAE2  EF75  F055         	goto	u20400
  9213  00AAE6                     u20401:
  9214  00AAE6  EF7F  F055         	goto	l18585
  9215  00AAEA                     u20400:
  9216  00AAEA                     
  9217                           ;sensor.c: 53: return 15.62f;
  9218  00AAEA  0E85               	movlw	133
  9219  00AAEC  6E01               	movwf	?_FSR_set_LSB^0,c
  9220  00AAEE  0EEB               	movlw	235
  9221  00AAF0  6E02               	movwf	(?_FSR_set_LSB+1)^0,c
  9222  00AAF2  0E79               	movlw	121
  9223  00AAF4  6E03               	movwf	(?_FSR_set_LSB+2)^0,c
  9224  00AAF6  0E41               	movlw	65
  9225  00AAF8  6E04               	movwf	(?_FSR_set_LSB+3)^0,c
  9226  00AAFA  EF9A  F055         	goto	l1998
  9227  00AAFE                     l18585:
  9228                           
  9229                           ;sensor.c: 54: else if(gain == FSR_0p256V)
  9230  00AAFE  0E05               	movlw	5
  9231  00AB00  1805               	xorwf	FSR_set_LSB@gain^0,w,c
  9232  00AB02  A4D8               	btfss	status,2,c
  9233  00AB04  EF86  F055         	goto	u20411
  9234  00AB08  EF88  F055         	goto	u20410
  9235  00AB0C                     u20411:
  9236  00AB0C  EF92  F055         	goto	l2001
  9237  00AB10                     u20410:
  9238  00AB10                     
  9239                           ;sensor.c: 55: return 7.81f;
  9240  00AB10  0E85               	movlw	133
  9241  00AB12  6E01               	movwf	?_FSR_set_LSB^0,c
  9242  00AB14  0EEB               	movlw	235
  9243  00AB16  6E02               	movwf	(?_FSR_set_LSB+1)^0,c
  9244  00AB18  0EF9               	movlw	249
  9245  00AB1A  6E03               	movwf	(?_FSR_set_LSB+2)^0,c
  9246  00AB1C  0E40               	movlw	64
  9247  00AB1E  6E04               	movwf	(?_FSR_set_LSB+3)^0,c
  9248  00AB20  EF9A  F055         	goto	l1998
  9249  00AB24                     l2001:
  9250  00AB24                     
  9251                           ;sensor.c: 57: return 62.5f;
  9252  00AB24  0E00               	movlw	0
  9253  00AB26  6E01               	movwf	?_FSR_set_LSB^0,c
  9254  00AB28  0E00               	movlw	0
  9255  00AB2A  6E02               	movwf	(?_FSR_set_LSB+1)^0,c
  9256  00AB2C  0E7A               	movlw	122
  9257  00AB2E  6E03               	movwf	(?_FSR_set_LSB+2)^0,c
  9258  00AB30  0E42               	movlw	66
  9259  00AB32  6E04               	movwf	(?_FSR_set_LSB+3)^0,c
  9260  00AB34                     l1998:
  9261  00AB34  0012               	return		;funcret
  9262  00AB36                     __end_of_FSR_set_LSB:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function _Linear_regression *****************
  9266 ;; Defined at:
  9267 ;;		line 58 in file "app_linear_regression.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  p               2   37[BANK0 ] PTR struct .
  9270 ;;		 -> g_linear_reg(109), 
  9271 ;;  uVoltage        4   39[BANK0 ] float 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  slp             4    0        float 
  9274 ;;  index           1   53[BANK0 ] unsigned char 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9284 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9285 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9286 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9287 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9288 ;;Total ram usage:       17 bytes
  9289 ;; Hardware stack levels used: 1
  9290 ;; Hardware stack levels required when called: 5
  9291 ;; This function calls:
  9292 ;;		___fladd
  9293 ;;		___fldiv
  9294 ;;		___fleq
  9295 ;;		___flmul
  9296 ;;		___flsub
  9297 ;;		_fmod
  9298 ;; This function is called by:
  9299 ;;		_sensMeasure_task
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text51
  9304  0039CA                     __ptext51:
  9305                           	callstack 0
  9306  0039CA                     _Linear_regression:
  9307                           	callstack 24
  9308  0039CA                     
  9309                           ;app_linear_regression.c: 60: uint8_t index;;app_linear_regression.c: 61: float slp;;app
      +                          _linear_regression.c: 63: p->sum_x = 0.0f;
  9310  0039CA  0100               	movlb	0	; () banked
  9311  0039CC  EE20 F055          	lfsr	2,85
  9312  0039D0  5185               	movf	Linear_regression@p& (0+255),w,b
  9313  0039D2  26D9               	addwf	fsr2l,f,c
  9314  0039D4  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9315  0039D6  22DA               	addwfc	fsr2h,f,c
  9316  0039D8  0E00               	movlw	0
  9317  0039DA  6EDE               	movwf	postinc2,c
  9318  0039DC  0E00               	movlw	0
  9319  0039DE  6EDE               	movwf	postinc2,c
  9320  0039E0  0E00               	movlw	0
  9321  0039E2  6EDE               	movwf	postinc2,c
  9322  0039E4  0E00               	movlw	0
  9323  0039E6  6EDD               	movwf	postdec2,c
  9324                           
  9325                           ;app_linear_regression.c: 64: p->sum_y = 0.0f;
  9326  0039E8  EE20 F05D          	lfsr	2,93
  9327  0039EC  5185               	movf	Linear_regression@p& (0+255),w,b
  9328  0039EE  26D9               	addwf	fsr2l,f,c
  9329  0039F0  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9330  0039F2  22DA               	addwfc	fsr2h,f,c
  9331  0039F4  0E00               	movlw	0
  9332  0039F6  6EDE               	movwf	postinc2,c
  9333  0039F8  0E00               	movlw	0
  9334  0039FA  6EDE               	movwf	postinc2,c
  9335  0039FC  0E00               	movlw	0
  9336  0039FE  6EDE               	movwf	postinc2,c
  9337  003A00  0E00               	movlw	0
  9338  003A02  6EDD               	movwf	postdec2,c
  9339                           
  9340                           ;app_linear_regression.c: 65: p->sum_x2 = 0.0f;
  9341  003A04  EE20 F059          	lfsr	2,89
  9342  003A08  5185               	movf	Linear_regression@p& (0+255),w,b
  9343  003A0A  26D9               	addwf	fsr2l,f,c
  9344  003A0C  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9345  003A0E  22DA               	addwfc	fsr2h,f,c
  9346  003A10  0E00               	movlw	0
  9347  003A12  6EDE               	movwf	postinc2,c
  9348  003A14  0E00               	movlw	0
  9349  003A16  6EDE               	movwf	postinc2,c
  9350  003A18  0E00               	movlw	0
  9351  003A1A  6EDE               	movwf	postinc2,c
  9352  003A1C  0E00               	movlw	0
  9353  003A1E  6EDD               	movwf	postdec2,c
  9354                           
  9355                           ;app_linear_regression.c: 66: p->sum_xy = 0.0f;
  9356  003A20  EE20 F061          	lfsr	2,97
  9357  003A24  5185               	movf	Linear_regression@p& (0+255),w,b
  9358  003A26  26D9               	addwf	fsr2l,f,c
  9359  003A28  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9360  003A2A  22DA               	addwfc	fsr2h,f,c
  9361  003A2C  0E00               	movlw	0
  9362  003A2E  6EDE               	movwf	postinc2,c
  9363  003A30  0E00               	movlw	0
  9364  003A32  6EDE               	movwf	postinc2,c
  9365  003A34  0E00               	movlw	0
  9366  003A36  6EDE               	movwf	postinc2,c
  9367  003A38  0E00               	movlw	0
  9368  003A3A  6EDD               	movwf	postdec2,c
  9369  003A3C                     
  9370                           ; BSR set to: 0
  9371                           ;app_linear_regression.c: 69: if (p->time_cnt != 60) {
  9372  003A3C  EE20 F051          	lfsr	2,81
  9373  003A40  5185               	movf	Linear_regression@p& (0+255),w,b
  9374  003A42  26D9               	addwf	fsr2l,f,c
  9375  003A44  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9376  003A46  22DA               	addwfc	fsr2h,f,c
  9377  003A48  CFDE F001          	movff	postinc2,___fleq@ff1
  9378  003A4C  CFDE F002          	movff	postinc2,___fleq@ff1+1
  9379  003A50  CFDE F003          	movff	postinc2,___fleq@ff1+2
  9380  003A54  CFDE F004          	movff	postinc2,___fleq@ff1+3
  9381  003A58  0E00               	movlw	0
  9382  003A5A  6E05               	movwf	___fleq@ff2^0,c
  9383  003A5C  0E00               	movlw	0
  9384  003A5E  6E06               	movwf	(___fleq@ff2+1)^0,c
  9385  003A60  0E70               	movlw	112
  9386  003A62  6E07               	movwf	(___fleq@ff2+2)^0,c
  9387  003A64  0E42               	movlw	66
  9388  003A66  6E08               	movwf	(___fleq@ff2+3)^0,c
  9389  003A68  ECFD  F05A         	call	___fleq	;wreg free
  9390  003A6C  B0D8               	btfsc	status,0,c
  9391  003A6E  EF3B  F01D         	goto	u21051
  9392  003A72  EF3D  F01D         	goto	u21050
  9393  003A76                     u21051:
  9394  003A76  EFEA  F01D         	goto	l19289
  9395  003A7A                     u21050:
  9396  003A7A                     
  9397                           ;app_linear_regression.c: 70: p->time_cnt = p->time_cnt + 1.0f;
  9398  003A7A  0100               	movlb	0	; () banked
  9399  003A7C  EE20 F051          	lfsr	2,81
  9400  003A80  5185               	movf	Linear_regression@p& (0+255),w,b
  9401  003A82  26D9               	addwf	fsr2l,f,c
  9402  003A84  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9403  003A86  22DA               	addwfc	fsr2h,f,c
  9404  003A88  CFDE F027          	movff	postinc2,___fladd@b
  9405  003A8C  CFDE F028          	movff	postinc2,___fladd@b+1
  9406  003A90  CFDE F029          	movff	postinc2,___fladd@b+2
  9407  003A94  CFDE F02A          	movff	postinc2,___fladd@b+3
  9408  003A98  0E00               	movlw	0
  9409  003A9A  6E2B               	movwf	___fladd@a^0,c
  9410  003A9C  0E00               	movlw	0
  9411  003A9E  6E2C               	movwf	(___fladd@a+1)^0,c
  9412  003AA0  0E80               	movlw	128
  9413  003AA2  6E2D               	movwf	(___fladd@a+2)^0,c
  9414  003AA4  0E3F               	movlw	63
  9415  003AA6  6E2E               	movwf	(___fladd@a+3)^0,c
  9416  003AA8  EC13  F029         	call	___fladd	;wreg free
  9417  003AAC  0100               	movlb	0	; () banked
  9418  003AAE  EE20 F051          	lfsr	2,81
  9419  003AB2  5185               	movf	Linear_regression@p& (0+255),w,b
  9420  003AB4  26D9               	addwf	fsr2l,f,c
  9421  003AB6  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9422  003AB8  22DA               	addwfc	fsr2h,f,c
  9423  003ABA  C027  FFDE         	movff	?___fladd,postinc2
  9424  003ABE  C028  FFDE         	movff	?___fladd+1,postinc2
  9425  003AC2  C029  FFDE         	movff	?___fladd+2,postinc2
  9426  003AC6  C02A  FFDE         	movff	?___fladd+3,postinc2
  9427  003ACA                     
  9428                           ; BSR set to: 0
  9429                           ;app_linear_regression.c: 71: if ( fmod(p->time_cnt, (float)(60/10)) == 0.0f ) {
  9430  003ACA  0E00               	movlw	0
  9431  003ACC  6F7D               	movwf	fmod@y& (0+255),b
  9432  003ACE  0E00               	movlw	0
  9433  003AD0  6F7E               	movwf	(fmod@y+1)& (0+255),b
  9434  003AD2  0EC0               	movlw	192
  9435  003AD4  6F7F               	movwf	(fmod@y+2)& (0+255),b
  9436  003AD6  0E40               	movlw	64
  9437  003AD8  6F80               	movwf	(fmod@y+3)& (0+255),b
  9438  003ADA  EE20 F051          	lfsr	2,81
  9439  003ADE  5185               	movf	Linear_regression@p& (0+255),w,b
  9440  003AE0  26D9               	addwf	fsr2l,f,c
  9441  003AE2  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9442  003AE4  22DA               	addwfc	fsr2h,f,c
  9443  003AE6  CFDE F079          	movff	postinc2,fmod@x
  9444  003AEA  CFDE F07A          	movff	postinc2,fmod@x+1
  9445  003AEE  CFDE F07B          	movff	postinc2,fmod@x+2
  9446  003AF2  CFDE F07C          	movff	postinc2,fmod@x+3
  9447  003AF6  EC48  F059         	call	_fmod	;wreg free
  9448  003AFA  C079  F091         	movff	?_fmod,_Linear_regression$6561
  9449  003AFE  C07A  F092         	movff	?_fmod+1,_Linear_regression$6561+1
  9450  003B02  C07B  F093         	movff	?_fmod+2,_Linear_regression$6561+2
  9451  003B06  C07C  F094         	movff	?_fmod+3,_Linear_regression$6561+3
  9452  003B0A                     
  9453                           ;app_linear_regression.c: 71: if ( fmod(p->time_cnt, (float)(60/10)) == 0.0f ) {
  9454  003B0A  C091  F001         	movff	_Linear_regression$6561,___fleq@ff1
  9455  003B0E  C092  F002         	movff	_Linear_regression$6561+1,___fleq@ff1+1
  9456  003B12  C093  F003         	movff	_Linear_regression$6561+2,___fleq@ff1+2
  9457  003B16  C094  F004         	movff	_Linear_regression$6561+3,___fleq@ff1+3
  9458  003B1A  0E00               	movlw	0
  9459  003B1C  6E05               	movwf	___fleq@ff2^0,c
  9460  003B1E  0E00               	movlw	0
  9461  003B20  6E06               	movwf	(___fleq@ff2+1)^0,c
  9462  003B22  0E00               	movlw	0
  9463  003B24  6E07               	movwf	(___fleq@ff2+2)^0,c
  9464  003B26  0E00               	movlw	0
  9465  003B28  6E08               	movwf	(___fleq@ff2+3)^0,c
  9466  003B2A  ECFD  F05A         	call	___fleq	;wreg free
  9467  003B2E  A0D8               	btfss	status,0,c
  9468  003B30  EF9C  F01D         	goto	u21061
  9469  003B34  EF9E  F01D         	goto	u21060
  9470  003B38                     u21061:
  9471  003B38  EF8B  F01E         	goto	l19309
  9472  003B3C                     u21060:
  9473  003B3C                     
  9474                           ;app_linear_regression.c: 72: p->x[p->position] = p->time_cnt;
  9475  003B3C  0100               	movlb	0	; () banked
  9476  003B3E  EE20 F051          	lfsr	2,81
  9477  003B42  5185               	movf	Linear_regression@p& (0+255),w,b
  9478  003B44  26D9               	addwf	fsr2l,f,c
  9479  003B46  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9480  003B48  22DA               	addwfc	fsr2h,f,c
  9481  003B4A  EE10 F050          	lfsr	1,80
  9482  003B4E  5185               	movf	Linear_regression@p& (0+255),w,b
  9483  003B50  26E1               	addwf	fsr1l,f,c
  9484  003B52  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9485  003B54  22E2               	addwfc	fsr1h,f,c
  9486  003B56  50E7               	movf	indf1,w,c
  9487  003B58  6F8B               	movwf	??_Linear_regression& (0+255),b
  9488  003B5A  518B               	movf	??_Linear_regression& (0+255),w,b
  9489  003B5C  0D04               	mullw	4
  9490  003B5E  CFF3 F08C          	movff	prodl,??_Linear_regression+1
  9491  003B62  CFF4 F08D          	movff	prodh,??_Linear_regression+2
  9492  003B66  518C               	movf	(??_Linear_regression+1)& (0+255),w,b
  9493  003B68  2585               	addwf	Linear_regression@p& (0+255),w,b
  9494  003B6A  6EE1               	movwf	fsr1l,c
  9495  003B6C  518D               	movf	(??_Linear_regression+2)& (0+255),w,b
  9496  003B6E  2186               	addwfc	(Linear_regression@p+1)& (0+255),w,b
  9497  003B70  6EE2               	movwf	fsr1h,c
  9498  003B72  CFDE FFE6          	movff	postinc2,postinc1
  9499  003B76  CFDE FFE6          	movff	postinc2,postinc1
  9500  003B7A  CFDE FFE6          	movff	postinc2,postinc1
  9501  003B7E  CFDE FFE6          	movff	postinc2,postinc1
  9502  003B82                     
  9503                           ; BSR set to: 0
  9504                           ;app_linear_regression.c: 73: p->y[p->position] = uVoltage;
  9505  003B82  EE20 F050          	lfsr	2,80
  9506  003B86  5185               	movf	Linear_regression@p& (0+255),w,b
  9507  003B88  26D9               	addwf	fsr2l,f,c
  9508  003B8A  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9509  003B8C  22DA               	addwfc	fsr2h,f,c
  9510  003B8E  50DF               	movf	indf2,w,c
  9511  003B90  6F8B               	movwf	??_Linear_regression& (0+255),b
  9512  003B92  518B               	movf	??_Linear_regression& (0+255),w,b
  9513  003B94  0D04               	mullw	4
  9514  003B96  C085  F08C         	movff	Linear_regression@p,??_Linear_regression+1
  9515  003B9A  C086  F08D         	movff	Linear_regression@p+1,??_Linear_regression+2
  9516  003B9E  50F3               	movf	243,w,c
  9517  003BA0  278C               	addwf	(??_Linear_regression+1)& (0+255),f,b
  9518  003BA2  50F4               	movf	244,w,c
  9519  003BA4  238D               	addwfc	(??_Linear_regression+2)& (0+255),f,b
  9520  003BA6  0E28               	movlw	40
  9521  003BA8  258C               	addwf	(??_Linear_regression+1)& (0+255),w,b
  9522  003BAA  6ED9               	movwf	fsr2l,c
  9523  003BAC  0E00               	movlw	0
  9524  003BAE  218D               	addwfc	(??_Linear_regression+2)& (0+255),w,b
  9525  003BB0  6EDA               	movwf	fsr2h,c
  9526  003BB2  C087  FFDE         	movff	Linear_regression@uVoltage,postinc2
  9527  003BB6  C088  FFDE         	movff	Linear_regression@uVoltage+1,postinc2
  9528  003BBA  C089  FFDE         	movff	Linear_regression@uVoltage+2,postinc2
  9529  003BBE  C08A  FFDE         	movff	Linear_regression@uVoltage+3,postinc2
  9530  003BC2                     
  9531                           ; BSR set to: 0
  9532                           ;app_linear_regression.c: 74: p->position++;
  9533  003BC2  EE20 F050          	lfsr	2,80
  9534  003BC6  5185               	movf	Linear_regression@p& (0+255),w,b
  9535  003BC8  26D9               	addwf	fsr2l,f,c
  9536  003BCA  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9537  003BCC  22DA               	addwfc	fsr2h,f,c
  9538  003BCE  2ADF               	incf	indf2,f,c
  9539  003BD0  EF8B  F01E         	goto	l19309
  9540  003BD4                     l19289:
  9541                           
  9542                           ;app_linear_regression.c: 77: g_time_cnt++;
  9543  003BD4  0100               	movlb	0	; () banked
  9544  003BD6  2BD1               	incf	_g_time_cnt& (0+255),f,b	;volatile
  9545  003BD8                     
  9546                           ; BSR set to: 0
  9547                           ;app_linear_regression.c: 78: if (g_time_cnt == 60/10) {
  9548  003BD8  0E06               	movlw	6
  9549  003BDA  19D1               	xorwf	_g_time_cnt& (0+255),w,b	;volatile
  9550  003BDC  A4D8               	btfss	status,2,c
  9551  003BDE  EFF3  F01D         	goto	u21071
  9552  003BE2  EFF5  F01D         	goto	u21070
  9553  003BE6                     u21071:
  9554  003BE6  EF8B  F01E         	goto	l19309
  9555  003BEA                     u21070:
  9556  003BEA                     
  9557                           ; BSR set to: 0
  9558                           ;app_linear_regression.c: 79: g_time_cnt = 0;
  9559  003BEA  0E00               	movlw	0
  9560  003BEC  6FD1               	movwf	_g_time_cnt& (0+255),b	;volatile
  9561                           
  9562                           ;app_linear_regression.c: 80: for (index = 0; index < 10 -1; index++) {
  9563  003BEE  0E00               	movlw	0
  9564  003BF0  6F95               	movwf	Linear_regression@index& (0+255),b
  9565  003BF2                     l19299:
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;app_linear_regression.c: 81: p->x[index] = (p->x[index +1] - (float)(60/10));
  9569  003BF2  5195               	movf	Linear_regression@index& (0+255),w,b
  9570  003BF4  6F8B               	movwf	??_Linear_regression& (0+255),b
  9571  003BF6  6B8C               	clrf	(??_Linear_regression+1)& (0+255),b
  9572  003BF8  90D8               	bcf	status,0,c
  9573  003BFA  378B               	rlcf	??_Linear_regression& (0+255),f,b
  9574  003BFC  378C               	rlcf	(??_Linear_regression+1)& (0+255),f,b
  9575  003BFE  90D8               	bcf	status,0,c
  9576  003C00  378B               	rlcf	??_Linear_regression& (0+255),f,b
  9577  003C02  378C               	rlcf	(??_Linear_regression+1)& (0+255),f,b
  9578  003C04  C085  F08D         	movff	Linear_regression@p,??_Linear_regression+2
  9579  003C08  C086  F08E         	movff	Linear_regression@p+1,??_Linear_regression+3
  9580  003C0C  518B               	movf	??_Linear_regression& (0+255),w,b
  9581  003C0E  278D               	addwf	(??_Linear_regression+2)& (0+255),f,b
  9582  003C10  518C               	movf	(??_Linear_regression+1)& (0+255),w,b
  9583  003C12  238E               	addwfc	(??_Linear_regression+3)& (0+255),f,b
  9584  003C14  0E04               	movlw	4
  9585  003C16  258D               	addwf	(??_Linear_regression+2)& (0+255),w,b
  9586  003C18  6ED9               	movwf	fsr2l,c
  9587  003C1A  0E00               	movlw	0
  9588  003C1C  218E               	addwfc	(??_Linear_regression+3)& (0+255),w,b
  9589  003C1E  6EDA               	movwf	fsr2h,c
  9590  003C20  CFDE F027          	movff	postinc2,___fladd@b
  9591  003C24  CFDE F028          	movff	postinc2,___fladd@b+1
  9592  003C28  CFDE F029          	movff	postinc2,___fladd@b+2
  9593  003C2C  CFDE F02A          	movff	postinc2,___fladd@b+3
  9594  003C30  0E00               	movlw	0
  9595  003C32  6E2B               	movwf	___fladd@a^0,c
  9596  003C34  0E00               	movlw	0
  9597  003C36  6E2C               	movwf	(___fladd@a+1)^0,c
  9598  003C38  0EC0               	movlw	192
  9599  003C3A  6E2D               	movwf	(___fladd@a+2)^0,c
  9600  003C3C  0EC0               	movlw	192
  9601  003C3E  6E2E               	movwf	(___fladd@a+3)^0,c
  9602  003C40  EC13  F029         	call	___fladd	;wreg free
  9603  003C44  0100               	movlb	0	; () banked
  9604  003C46  5195               	movf	Linear_regression@index& (0+255),w,b
  9605  003C48  0D04               	mullw	4
  9606  003C4A  CFF3 F08F          	movff	prodl,??_Linear_regression+4
  9607  003C4E  CFF4 F090          	movff	prodh,??_Linear_regression+5
  9608  003C52  518F               	movf	(??_Linear_regression+4)& (0+255),w,b
  9609  003C54  2585               	addwf	Linear_regression@p& (0+255),w,b
  9610  003C56  6ED9               	movwf	fsr2l,c
  9611  003C58  5190               	movf	(??_Linear_regression+5)& (0+255),w,b
  9612  003C5A  2186               	addwfc	(Linear_regression@p+1)& (0+255),w,b
  9613  003C5C  6EDA               	movwf	fsr2h,c
  9614  003C5E  C027  FFDE         	movff	?___fladd,postinc2
  9615  003C62  C028  FFDE         	movff	?___fladd+1,postinc2
  9616  003C66  C029  FFDE         	movff	?___fladd+2,postinc2
  9617  003C6A  C02A  FFDE         	movff	?___fladd+3,postinc2
  9618  003C6E                     
  9619                           ; BSR set to: 0
  9620                           ;app_linear_regression.c: 82: p->y[index] = p->y[index +1];
  9621  003C6E  5195               	movf	Linear_regression@index& (0+255),w,b
  9622  003C70  6F8B               	movwf	??_Linear_regression& (0+255),b
  9623  003C72  6B8C               	clrf	(??_Linear_regression+1)& (0+255),b
  9624  003C74  90D8               	bcf	status,0,c
  9625  003C76  378B               	rlcf	??_Linear_regression& (0+255),f,b
  9626  003C78  378C               	rlcf	(??_Linear_regression+1)& (0+255),f,b
  9627  003C7A  90D8               	bcf	status,0,c
  9628  003C7C  378B               	rlcf	??_Linear_regression& (0+255),f,b
  9629  003C7E  378C               	rlcf	(??_Linear_regression+1)& (0+255),f,b
  9630  003C80  C085  F08D         	movff	Linear_regression@p,??_Linear_regression+2
  9631  003C84  C086  F08E         	movff	Linear_regression@p+1,??_Linear_regression+3
  9632  003C88  518B               	movf	??_Linear_regression& (0+255),w,b
  9633  003C8A  278D               	addwf	(??_Linear_regression+2)& (0+255),f,b
  9634  003C8C  518C               	movf	(??_Linear_regression+1)& (0+255),w,b
  9635  003C8E  238E               	addwfc	(??_Linear_regression+3)& (0+255),f,b
  9636  003C90  0E2C               	movlw	44
  9637  003C92  258D               	addwf	(??_Linear_regression+2)& (0+255),w,b
  9638  003C94  6ED9               	movwf	fsr2l,c
  9639  003C96  0E00               	movlw	0
  9640  003C98  218E               	addwfc	(??_Linear_regression+3)& (0+255),w,b
  9641  003C9A  6EDA               	movwf	fsr2h,c
  9642  003C9C  5195               	movf	Linear_regression@index& (0+255),w,b
  9643  003C9E  0D04               	mullw	4
  9644  003CA0  C085  F08F         	movff	Linear_regression@p,??_Linear_regression+4
  9645  003CA4  C086  F090         	movff	Linear_regression@p+1,??_Linear_regression+5
  9646  003CA8  50F3               	movf	243,w,c
  9647  003CAA  278F               	addwf	(??_Linear_regression+4)& (0+255),f,b
  9648  003CAC  50F4               	movf	244,w,c
  9649  003CAE  2390               	addwfc	(??_Linear_regression+5)& (0+255),f,b
  9650  003CB0  0E28               	movlw	40
  9651  003CB2  258F               	addwf	(??_Linear_regression+4)& (0+255),w,b
  9652  003CB4  6EE1               	movwf	fsr1l,c
  9653  003CB6  0E00               	movlw	0
  9654  003CB8  2190               	addwfc	(??_Linear_regression+5)& (0+255),w,b
  9655  003CBA  6EE2               	movwf	fsr1h,c
  9656  003CBC  CFDE FFE6          	movff	postinc2,postinc1
  9657  003CC0  CFDE FFE6          	movff	postinc2,postinc1
  9658  003CC4  CFDE FFE6          	movff	postinc2,postinc1
  9659  003CC8  CFDE FFE6          	movff	postinc2,postinc1
  9660  003CCC                     
  9661                           ; BSR set to: 0
  9662  003CCC  2B95               	incf	Linear_regression@index& (0+255),f,b
  9663  003CCE                     
  9664                           ; BSR set to: 0
  9665  003CCE  0E08               	movlw	8
  9666  003CD0  6595               	cpfsgt	Linear_regression@index& (0+255),b
  9667  003CD2  EF6D  F01E         	goto	u21081
  9668  003CD6  EF6F  F01E         	goto	u21080
  9669  003CDA                     u21081:
  9670  003CDA  EFF9  F01D         	goto	l19299
  9671  003CDE                     u21080:
  9672  003CDE                     
  9673                           ; BSR set to: 0
  9674                           ;app_linear_regression.c: 83: };app_linear_regression.c: 84: p->x[10 -1] = (float)60;
  9675  003CDE  EE20 F024          	lfsr	2,36
  9676  003CE2  5185               	movf	Linear_regression@p& (0+255),w,b
  9677  003CE4  26D9               	addwf	fsr2l,f,c
  9678  003CE6  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9679  003CE8  22DA               	addwfc	fsr2h,f,c
  9680  003CEA  0E00               	movlw	0
  9681  003CEC  6EDE               	movwf	postinc2,c
  9682  003CEE  0E00               	movlw	0
  9683  003CF0  6EDE               	movwf	postinc2,c
  9684  003CF2  0E70               	movlw	112
  9685  003CF4  6EDE               	movwf	postinc2,c
  9686  003CF6  0E42               	movlw	66
  9687  003CF8  6EDD               	movwf	postdec2,c
  9688                           
  9689                           ;app_linear_regression.c: 85: p->y[10 -1] = uVoltage;
  9690  003CFA  EE20 F04C          	lfsr	2,76
  9691  003CFE  5185               	movf	Linear_regression@p& (0+255),w,b
  9692  003D00  26D9               	addwf	fsr2l,f,c
  9693  003D02  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9694  003D04  22DA               	addwfc	fsr2h,f,c
  9695  003D06  C087  FFDE         	movff	Linear_regression@uVoltage,postinc2
  9696  003D0A  C088  FFDE         	movff	Linear_regression@uVoltage+1,postinc2
  9697  003D0E  C089  FFDE         	movff	Linear_regression@uVoltage+2,postinc2
  9698  003D12  C08A  FFDE         	movff	Linear_regression@uVoltage+3,postinc2
  9699  003D16                     l19309:
  9700                           
  9701                           ;app_linear_regression.c: 86: };app_linear_regression.c: 87: };app_linear_regression.c: 
      +                          90: for (index = 0; index < 10; index++) {
  9702  003D16  0E00               	movlw	0
  9703  003D18  0100               	movlb	0	; () banked
  9704  003D1A  6F95               	movwf	Linear_regression@index& (0+255),b
  9705  003D1C                     l19315:
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;app_linear_regression.c: 91: p->sum_x += p->x[index];
  9709  003D1C  EE20 F055          	lfsr	2,85
  9710  003D20  5185               	movf	Linear_regression@p& (0+255),w,b
  9711  003D22  26D9               	addwf	fsr2l,f,c
  9712  003D24  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9713  003D26  22DA               	addwfc	fsr2h,f,c
  9714  003D28  CFDE F027          	movff	postinc2,___fladd@b
  9715  003D2C  CFDE F028          	movff	postinc2,___fladd@b+1
  9716  003D30  CFDE F029          	movff	postinc2,___fladd@b+2
  9717  003D34  CFDE F02A          	movff	postinc2,___fladd@b+3
  9718  003D38  5195               	movf	Linear_regression@index& (0+255),w,b
  9719  003D3A  0D04               	mullw	4
  9720  003D3C  CFF3 F08B          	movff	prodl,??_Linear_regression
  9721  003D40  CFF4 F08C          	movff	prodh,??_Linear_regression+1
  9722  003D44  518B               	movf	??_Linear_regression& (0+255),w,b
  9723  003D46  2585               	addwf	Linear_regression@p& (0+255),w,b
  9724  003D48  6ED9               	movwf	fsr2l,c
  9725  003D4A  518C               	movf	(??_Linear_regression+1)& (0+255),w,b
  9726  003D4C  2186               	addwfc	(Linear_regression@p+1)& (0+255),w,b
  9727  003D4E  6EDA               	movwf	fsr2h,c
  9728  003D50  CFDE F02B          	movff	postinc2,___fladd@a
  9729  003D54  CFDE F02C          	movff	postinc2,___fladd@a+1
  9730  003D58  CFDE F02D          	movff	postinc2,___fladd@a+2
  9731  003D5C  CFDE F02E          	movff	postinc2,___fladd@a+3
  9732  003D60  EC13  F029         	call	___fladd	;wreg free
  9733  003D64  0100               	movlb	0	; () banked
  9734  003D66  EE20 F055          	lfsr	2,85
  9735  003D6A  5185               	movf	Linear_regression@p& (0+255),w,b
  9736  003D6C  26D9               	addwf	fsr2l,f,c
  9737  003D6E  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9738  003D70  22DA               	addwfc	fsr2h,f,c
  9739  003D72  C027  FFDE         	movff	?___fladd,postinc2
  9740  003D76  C028  FFDE         	movff	?___fladd+1,postinc2
  9741  003D7A  C029  FFDE         	movff	?___fladd+2,postinc2
  9742  003D7E  C02A  FFDE         	movff	?___fladd+3,postinc2
  9743                           
  9744                           ;app_linear_regression.c: 92: p->sum_y += p->y[index];
  9745  003D82  EE20 F05D          	lfsr	2,93
  9746  003D86  5185               	movf	Linear_regression@p& (0+255),w,b
  9747  003D88  26D9               	addwf	fsr2l,f,c
  9748  003D8A  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9749  003D8C  22DA               	addwfc	fsr2h,f,c
  9750  003D8E  CFDE F027          	movff	postinc2,___fladd@b
  9751  003D92  CFDE F028          	movff	postinc2,___fladd@b+1
  9752  003D96  CFDE F029          	movff	postinc2,___fladd@b+2
  9753  003D9A  CFDE F02A          	movff	postinc2,___fladd@b+3
  9754  003D9E  5195               	movf	Linear_regression@index& (0+255),w,b
  9755  003DA0  0D04               	mullw	4
  9756  003DA2  C085  F08B         	movff	Linear_regression@p,??_Linear_regression
  9757  003DA6  C086  F08C         	movff	Linear_regression@p+1,??_Linear_regression+1
  9758  003DAA  50F3               	movf	243,w,c
  9759  003DAC  278B               	addwf	??_Linear_regression& (0+255),f,b
  9760  003DAE  50F4               	movf	244,w,c
  9761  003DB0  238C               	addwfc	(??_Linear_regression+1)& (0+255),f,b
  9762  003DB2  0E28               	movlw	40
  9763  003DB4  258B               	addwf	??_Linear_regression& (0+255),w,b
  9764  003DB6  6ED9               	movwf	fsr2l,c
  9765  003DB8  0E00               	movlw	0
  9766  003DBA  218C               	addwfc	(??_Linear_regression+1)& (0+255),w,b
  9767  003DBC  6EDA               	movwf	fsr2h,c
  9768  003DBE  CFDE F02B          	movff	postinc2,___fladd@a
  9769  003DC2  CFDE F02C          	movff	postinc2,___fladd@a+1
  9770  003DC6  CFDE F02D          	movff	postinc2,___fladd@a+2
  9771  003DCA  CFDE F02E          	movff	postinc2,___fladd@a+3
  9772  003DCE  EC13  F029         	call	___fladd	;wreg free
  9773  003DD2  0100               	movlb	0	; () banked
  9774  003DD4  EE20 F05D          	lfsr	2,93
  9775  003DD8  5185               	movf	Linear_regression@p& (0+255),w,b
  9776  003DDA  26D9               	addwf	fsr2l,f,c
  9777  003DDC  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9778  003DDE  22DA               	addwfc	fsr2h,f,c
  9779  003DE0  C027  FFDE         	movff	?___fladd,postinc2
  9780  003DE4  C028  FFDE         	movff	?___fladd+1,postinc2
  9781  003DE8  C029  FFDE         	movff	?___fladd+2,postinc2
  9782  003DEC  C02A  FFDE         	movff	?___fladd+3,postinc2
  9783                           
  9784                           ;app_linear_regression.c: 93: p->sum_x2 += p->x[index] * p->x[index];
  9785  003DF0  EE20 F059          	lfsr	2,89
  9786  003DF4  5185               	movf	Linear_regression@p& (0+255),w,b
  9787  003DF6  26D9               	addwf	fsr2l,f,c
  9788  003DF8  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9789  003DFA  22DA               	addwfc	fsr2h,f,c
  9790  003DFC  CFDE F027          	movff	postinc2,___fladd@b
  9791  003E00  CFDE F028          	movff	postinc2,___fladd@b+1
  9792  003E04  CFDE F029          	movff	postinc2,___fladd@b+2
  9793  003E08  CFDE F02A          	movff	postinc2,___fladd@b+3
  9794  003E0C  5195               	movf	Linear_regression@index& (0+255),w,b
  9795  003E0E  0D04               	mullw	4
  9796  003E10  CFF3 F08B          	movff	prodl,??_Linear_regression
  9797  003E14  CFF4 F08C          	movff	prodh,??_Linear_regression+1
  9798  003E18  518B               	movf	??_Linear_regression& (0+255),w,b
  9799  003E1A  2585               	addwf	Linear_regression@p& (0+255),w,b
  9800  003E1C  6ED9               	movwf	fsr2l,c
  9801  003E1E  518C               	movf	(??_Linear_regression+1)& (0+255),w,b
  9802  003E20  2186               	addwfc	(Linear_regression@p+1)& (0+255),w,b
  9803  003E22  6EDA               	movwf	fsr2h,c
  9804  003E24  CFDE F047          	movff	postinc2,___flmul@a
  9805  003E28  CFDE F048          	movff	postinc2,___flmul@a+1
  9806  003E2C  CFDE F049          	movff	postinc2,___flmul@a+2
  9807  003E30  CFDE F04A          	movff	postinc2,___flmul@a+3
  9808  003E34  5195               	movf	Linear_regression@index& (0+255),w,b
  9809  003E36  0D04               	mullw	4
  9810  003E38  CFF3 F08D          	movff	prodl,??_Linear_regression+2
  9811  003E3C  CFF4 F08E          	movff	prodh,??_Linear_regression+3
  9812  003E40  518D               	movf	(??_Linear_regression+2)& (0+255),w,b
  9813  003E42  2585               	addwf	Linear_regression@p& (0+255),w,b
  9814  003E44  6ED9               	movwf	fsr2l,c
  9815  003E46  518E               	movf	(??_Linear_regression+3)& (0+255),w,b
  9816  003E48  2186               	addwfc	(Linear_regression@p+1)& (0+255),w,b
  9817  003E4A  6EDA               	movwf	fsr2h,c
  9818  003E4C  CFDE F043          	movff	postinc2,___flmul@b
  9819  003E50  CFDE F044          	movff	postinc2,___flmul@b+1
  9820  003E54  CFDE F045          	movff	postinc2,___flmul@b+2
  9821  003E58  CFDE F046          	movff	postinc2,___flmul@b+3
  9822  003E5C  EC73  F02B         	call	___flmul	;wreg free
  9823  003E60  C043  F02B         	movff	?___flmul,___fladd@a
  9824  003E64  C044  F02C         	movff	?___flmul+1,___fladd@a+1
  9825  003E68  C045  F02D         	movff	?___flmul+2,___fladd@a+2
  9826  003E6C  C046  F02E         	movff	?___flmul+3,___fladd@a+3
  9827  003E70  EC13  F029         	call	___fladd	;wreg free
  9828  003E74  0100               	movlb	0	; () banked
  9829  003E76  EE20 F059          	lfsr	2,89
  9830  003E7A  5185               	movf	Linear_regression@p& (0+255),w,b
  9831  003E7C  26D9               	addwf	fsr2l,f,c
  9832  003E7E  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9833  003E80  22DA               	addwfc	fsr2h,f,c
  9834  003E82  C027  FFDE         	movff	?___fladd,postinc2
  9835  003E86  C028  FFDE         	movff	?___fladd+1,postinc2
  9836  003E8A  C029  FFDE         	movff	?___fladd+2,postinc2
  9837  003E8E  C02A  FFDE         	movff	?___fladd+3,postinc2
  9838                           
  9839                           ;app_linear_regression.c: 94: p->sum_xy += p->x[index] * p->y[index];
  9840  003E92  EE20 F061          	lfsr	2,97
  9841  003E96  5185               	movf	Linear_regression@p& (0+255),w,b
  9842  003E98  26D9               	addwf	fsr2l,f,c
  9843  003E9A  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9844  003E9C  22DA               	addwfc	fsr2h,f,c
  9845  003E9E  CFDE F027          	movff	postinc2,___fladd@b
  9846  003EA2  CFDE F028          	movff	postinc2,___fladd@b+1
  9847  003EA6  CFDE F029          	movff	postinc2,___fladd@b+2
  9848  003EAA  CFDE F02A          	movff	postinc2,___fladd@b+3
  9849  003EAE  5195               	movf	Linear_regression@index& (0+255),w,b
  9850  003EB0  0D04               	mullw	4
  9851  003EB2  C085  F08B         	movff	Linear_regression@p,??_Linear_regression
  9852  003EB6  C086  F08C         	movff	Linear_regression@p+1,??_Linear_regression+1
  9853  003EBA  50F3               	movf	243,w,c
  9854  003EBC  278B               	addwf	??_Linear_regression& (0+255),f,b
  9855  003EBE  50F4               	movf	244,w,c
  9856  003EC0  238C               	addwfc	(??_Linear_regression+1)& (0+255),f,b
  9857  003EC2  0E28               	movlw	40
  9858  003EC4  258B               	addwf	??_Linear_regression& (0+255),w,b
  9859  003EC6  6ED9               	movwf	fsr2l,c
  9860  003EC8  0E00               	movlw	0
  9861  003ECA  218C               	addwfc	(??_Linear_regression+1)& (0+255),w,b
  9862  003ECC  6EDA               	movwf	fsr2h,c
  9863  003ECE  CFDE F047          	movff	postinc2,___flmul@a
  9864  003ED2  CFDE F048          	movff	postinc2,___flmul@a+1
  9865  003ED6  CFDE F049          	movff	postinc2,___flmul@a+2
  9866  003EDA  CFDE F04A          	movff	postinc2,___flmul@a+3
  9867  003EDE  5195               	movf	Linear_regression@index& (0+255),w,b
  9868  003EE0  0D04               	mullw	4
  9869  003EE2  CFF3 F08D          	movff	prodl,??_Linear_regression+2
  9870  003EE6  CFF4 F08E          	movff	prodh,??_Linear_regression+3
  9871  003EEA  518D               	movf	(??_Linear_regression+2)& (0+255),w,b
  9872  003EEC  2585               	addwf	Linear_regression@p& (0+255),w,b
  9873  003EEE  6ED9               	movwf	fsr2l,c
  9874  003EF0  518E               	movf	(??_Linear_regression+3)& (0+255),w,b
  9875  003EF2  2186               	addwfc	(Linear_regression@p+1)& (0+255),w,b
  9876  003EF4  6EDA               	movwf	fsr2h,c
  9877  003EF6  CFDE F043          	movff	postinc2,___flmul@b
  9878  003EFA  CFDE F044          	movff	postinc2,___flmul@b+1
  9879  003EFE  CFDE F045          	movff	postinc2,___flmul@b+2
  9880  003F02  CFDE F046          	movff	postinc2,___flmul@b+3
  9881  003F06  EC73  F02B         	call	___flmul	;wreg free
  9882  003F0A  C043  F02B         	movff	?___flmul,___fladd@a
  9883  003F0E  C044  F02C         	movff	?___flmul+1,___fladd@a+1
  9884  003F12  C045  F02D         	movff	?___flmul+2,___fladd@a+2
  9885  003F16  C046  F02E         	movff	?___flmul+3,___fladd@a+3
  9886  003F1A  EC13  F029         	call	___fladd	;wreg free
  9887  003F1E  0100               	movlb	0	; () banked
  9888  003F20  EE20 F061          	lfsr	2,97
  9889  003F24  5185               	movf	Linear_regression@p& (0+255),w,b
  9890  003F26  26D9               	addwf	fsr2l,f,c
  9891  003F28  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9892  003F2A  22DA               	addwfc	fsr2h,f,c
  9893  003F2C  C027  FFDE         	movff	?___fladd,postinc2
  9894  003F30  C028  FFDE         	movff	?___fladd+1,postinc2
  9895  003F34  C029  FFDE         	movff	?___fladd+2,postinc2
  9896  003F38  C02A  FFDE         	movff	?___fladd+3,postinc2
  9897  003F3C                     
  9898                           ; BSR set to: 0
  9899  003F3C  2B95               	incf	Linear_regression@index& (0+255),f,b
  9900  003F3E                     
  9901                           ; BSR set to: 0
  9902  003F3E  0E09               	movlw	9
  9903  003F40  6595               	cpfsgt	Linear_regression@index& (0+255),b
  9904  003F42  EFA5  F01F         	goto	u21091
  9905  003F46  EFA7  F01F         	goto	u21090
  9906  003F4A                     u21091:
  9907  003F4A  EF8E  F01E         	goto	l19315
  9908  003F4E                     u21090:
  9909  003F4E                     
  9910                           ; BSR set to: 0
  9911                           ;app_linear_regression.c: 95: };app_linear_regression.c: 98: p->slope = (10*p->sum_xy - 
      +                          p->sum_x*p->sum_y) / (10*p->sum_x2 - p->sum_x*p->sum_x);
  9912  003F4E  EE20 F05D          	lfsr	2,93
  9913  003F52  5185               	movf	Linear_regression@p& (0+255),w,b
  9914  003F54  26D9               	addwf	fsr2l,f,c
  9915  003F56  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9916  003F58  22DA               	addwfc	fsr2h,f,c
  9917  003F5A  CFDE F047          	movff	postinc2,___flmul@a
  9918  003F5E  CFDE F048          	movff	postinc2,___flmul@a+1
  9919  003F62  CFDE F049          	movff	postinc2,___flmul@a+2
  9920  003F66  CFDE F04A          	movff	postinc2,___flmul@a+3
  9921  003F6A  EE20 F055          	lfsr	2,85
  9922  003F6E  5185               	movf	Linear_regression@p& (0+255),w,b
  9923  003F70  26D9               	addwf	fsr2l,f,c
  9924  003F72  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9925  003F74  22DA               	addwfc	fsr2h,f,c
  9926  003F76  CFDE F043          	movff	postinc2,___flmul@b
  9927  003F7A  CFDE F044          	movff	postinc2,___flmul@b+1
  9928  003F7E  CFDE F045          	movff	postinc2,___flmul@b+2
  9929  003F82  CFDE F046          	movff	postinc2,___flmul@b+3
  9930  003F86  EC73  F02B         	call	___flmul	;wreg free
  9931  003F8A  C043  F03B         	movff	?___flmul,___flsub@a
  9932  003F8E  C044  F03C         	movff	?___flmul+1,___flsub@a+1
  9933  003F92  C045  F03D         	movff	?___flmul+2,___flsub@a+2
  9934  003F96  C046  F03E         	movff	?___flmul+3,___flsub@a+3
  9935  003F9A  0E00               	movlw	0
  9936  003F9C  6E47               	movwf	___flmul@a^0,c
  9937  003F9E  0E00               	movlw	0
  9938  003FA0  6E48               	movwf	(___flmul@a+1)^0,c
  9939  003FA2  0E20               	movlw	32
  9940  003FA4  6E49               	movwf	(___flmul@a+2)^0,c
  9941  003FA6  0E41               	movlw	65
  9942  003FA8  6E4A               	movwf	(___flmul@a+3)^0,c
  9943  003FAA  0100               	movlb	0	; () banked
  9944  003FAC  EE20 F061          	lfsr	2,97
  9945  003FB0  5185               	movf	Linear_regression@p& (0+255),w,b
  9946  003FB2  26D9               	addwf	fsr2l,f,c
  9947  003FB4  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9948  003FB6  22DA               	addwfc	fsr2h,f,c
  9949  003FB8  CFDE F043          	movff	postinc2,___flmul@b
  9950  003FBC  CFDE F044          	movff	postinc2,___flmul@b+1
  9951  003FC0  CFDE F045          	movff	postinc2,___flmul@b+2
  9952  003FC4  CFDE F046          	movff	postinc2,___flmul@b+3
  9953  003FC8  EC73  F02B         	call	___flmul	;wreg free
  9954  003FCC  C043  F037         	movff	?___flmul,___flsub@b
  9955  003FD0  C044  F038         	movff	?___flmul+1,___flsub@b+1
  9956  003FD4  C045  F039         	movff	?___flmul+2,___flsub@b+2
  9957  003FD8  C046  F03A         	movff	?___flmul+3,___flsub@b+3
  9958  003FDC  EC08  F067         	call	___flsub	;wreg free
  9959  003FE0  C037  F060         	movff	?___flsub,___fldiv@b
  9960  003FE4  C038  F061         	movff	?___flsub+1,___fldiv@b+1
  9961  003FE8  C039  F062         	movff	?___flsub+2,___fldiv@b+2
  9962  003FEC  C03A  F063         	movff	?___flsub+3,___fldiv@b+3
  9963  003FF0  0100               	movlb	0	; () banked
  9964  003FF2  EE20 F055          	lfsr	2,85
  9965  003FF6  5185               	movf	Linear_regression@p& (0+255),w,b
  9966  003FF8  26D9               	addwf	fsr2l,f,c
  9967  003FFA  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9968  003FFC  22DA               	addwfc	fsr2h,f,c
  9969  003FFE  CFDE F047          	movff	postinc2,___flmul@a
  9970  004002  CFDE F048          	movff	postinc2,___flmul@a+1
  9971  004006  CFDE F049          	movff	postinc2,___flmul@a+2
  9972  00400A  CFDE F04A          	movff	postinc2,___flmul@a+3
  9973  00400E  EE20 F055          	lfsr	2,85
  9974  004012  5185               	movf	Linear_regression@p& (0+255),w,b
  9975  004014  26D9               	addwf	fsr2l,f,c
  9976  004016  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
  9977  004018  22DA               	addwfc	fsr2h,f,c
  9978  00401A  CFDE F043          	movff	postinc2,___flmul@b
  9979  00401E  CFDE F044          	movff	postinc2,___flmul@b+1
  9980  004022  CFDE F045          	movff	postinc2,___flmul@b+2
  9981  004026  CFDE F046          	movff	postinc2,___flmul@b+3
  9982  00402A  EC73  F02B         	call	___flmul	;wreg free
  9983  00402E  C043  F03B         	movff	?___flmul,___flsub@a
  9984  004032  C044  F03C         	movff	?___flmul+1,___flsub@a+1
  9985  004036  C045  F03D         	movff	?___flmul+2,___flsub@a+2
  9986  00403A  C046  F03E         	movff	?___flmul+3,___flsub@a+3
  9987  00403E  0E00               	movlw	0
  9988  004040  6E47               	movwf	___flmul@a^0,c
  9989  004042  0E00               	movlw	0
  9990  004044  6E48               	movwf	(___flmul@a+1)^0,c
  9991  004046  0E20               	movlw	32
  9992  004048  6E49               	movwf	(___flmul@a+2)^0,c
  9993  00404A  0E41               	movlw	65
  9994  00404C  6E4A               	movwf	(___flmul@a+3)^0,c
  9995  00404E  0100               	movlb	0	; () banked
  9996  004050  EE20 F059          	lfsr	2,89
  9997  004054  5185               	movf	Linear_regression@p& (0+255),w,b
  9998  004056  26D9               	addwf	fsr2l,f,c
  9999  004058  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
 10000  00405A  22DA               	addwfc	fsr2h,f,c
 10001  00405C  CFDE F043          	movff	postinc2,___flmul@b
 10002  004060  CFDE F044          	movff	postinc2,___flmul@b+1
 10003  004064  CFDE F045          	movff	postinc2,___flmul@b+2
 10004  004068  CFDE F046          	movff	postinc2,___flmul@b+3
 10005  00406C  EC73  F02B         	call	___flmul	;wreg free
 10006  004070  C043  F037         	movff	?___flmul,___flsub@b
 10007  004074  C044  F038         	movff	?___flmul+1,___flsub@b+1
 10008  004078  C045  F039         	movff	?___flmul+2,___flsub@b+2
 10009  00407C  C046  F03A         	movff	?___flmul+3,___flsub@b+3
 10010  004080  EC08  F067         	call	___flsub	;wreg free
 10011  004084  C037  F064         	movff	?___flsub,___fldiv@a
 10012  004088  C038  F065         	movff	?___flsub+1,___fldiv@a+1
 10013  00408C  C039  F066         	movff	?___flsub+2,___fldiv@a+2
 10014  004090  C03A  F067         	movff	?___flsub+3,___fldiv@a+3
 10015  004094  EC96  F02F         	call	___fldiv	;wreg free
 10016  004098  0100               	movlb	0	; () banked
 10017  00409A  EE20 F065          	lfsr	2,101
 10018  00409E  5185               	movf	Linear_regression@p& (0+255),w,b
 10019  0040A0  26D9               	addwf	fsr2l,f,c
 10020  0040A2  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
 10021  0040A4  22DA               	addwfc	fsr2h,f,c
 10022  0040A6  C060  FFDE         	movff	?___fldiv,postinc2
 10023  0040AA  C061  FFDE         	movff	?___fldiv+1,postinc2
 10024  0040AE  C062  FFDE         	movff	?___fldiv+2,postinc2
 10025  0040B2  C063  FFDE         	movff	?___fldiv+3,postinc2
 10026                           
 10027                           ;app_linear_regression.c: 99: p->offset = (p->sum_y - p->slope*p->sum_x) / 10;
 10028  0040B6  EE20 F055          	lfsr	2,85
 10029  0040BA  5185               	movf	Linear_regression@p& (0+255),w,b
 10030  0040BC  26D9               	addwf	fsr2l,f,c
 10031  0040BE  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
 10032  0040C0  22DA               	addwfc	fsr2h,f,c
 10033  0040C2  CFDE F047          	movff	postinc2,___flmul@a
 10034  0040C6  CFDE F048          	movff	postinc2,___flmul@a+1
 10035  0040CA  CFDE F049          	movff	postinc2,___flmul@a+2
 10036  0040CE  CFDE F04A          	movff	postinc2,___flmul@a+3
 10037  0040D2  EE20 F065          	lfsr	2,101
 10038  0040D6  5185               	movf	Linear_regression@p& (0+255),w,b
 10039  0040D8  26D9               	addwf	fsr2l,f,c
 10040  0040DA  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
 10041  0040DC  22DA               	addwfc	fsr2h,f,c
 10042  0040DE  CFDE F043          	movff	postinc2,___flmul@b
 10043  0040E2  CFDE F044          	movff	postinc2,___flmul@b+1
 10044  0040E6  CFDE F045          	movff	postinc2,___flmul@b+2
 10045  0040EA  CFDE F046          	movff	postinc2,___flmul@b+3
 10046  0040EE  EC73  F02B         	call	___flmul	;wreg free
 10047  0040F2  C043  F03B         	movff	?___flmul,___flsub@a
 10048  0040F6  C044  F03C         	movff	?___flmul+1,___flsub@a+1
 10049  0040FA  C045  F03D         	movff	?___flmul+2,___flsub@a+2
 10050  0040FE  C046  F03E         	movff	?___flmul+3,___flsub@a+3
 10051  004102  0100               	movlb	0	; () banked
 10052  004104  EE20 F05D          	lfsr	2,93
 10053  004108  5185               	movf	Linear_regression@p& (0+255),w,b
 10054  00410A  26D9               	addwf	fsr2l,f,c
 10055  00410C  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
 10056  00410E  22DA               	addwfc	fsr2h,f,c
 10057  004110  CFDE F037          	movff	postinc2,___flsub@b
 10058  004114  CFDE F038          	movff	postinc2,___flsub@b+1
 10059  004118  CFDE F039          	movff	postinc2,___flsub@b+2
 10060  00411C  CFDE F03A          	movff	postinc2,___flsub@b+3
 10061  004120  EC08  F067         	call	___flsub	;wreg free
 10062  004124  C037  F060         	movff	?___flsub,___fldiv@b
 10063  004128  C038  F061         	movff	?___flsub+1,___fldiv@b+1
 10064  00412C  C039  F062         	movff	?___flsub+2,___fldiv@b+2
 10065  004130  C03A  F063         	movff	?___flsub+3,___fldiv@b+3
 10066  004134  0E00               	movlw	0
 10067  004136  0100               	movlb	0	; () banked
 10068  004138  6F64               	movwf	___fldiv@a& (0+255),b
 10069  00413A  0E00               	movlw	0
 10070  00413C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 10071  00413E  0E20               	movlw	32
 10072  004140  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 10073  004142  0E41               	movlw	65
 10074  004144  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 10075  004146  EC96  F02F         	call	___fldiv	;wreg free
 10076  00414A  0100               	movlb	0	; () banked
 10077  00414C  EE20 F069          	lfsr	2,105
 10078  004150  5185               	movf	Linear_regression@p& (0+255),w,b
 10079  004152  26D9               	addwf	fsr2l,f,c
 10080  004154  5186               	movf	(Linear_regression@p+1)& (0+255),w,b
 10081  004156  22DA               	addwfc	fsr2h,f,c
 10082  004158  C060  FFDE         	movff	?___fldiv,postinc2
 10083  00415C  C061  FFDE         	movff	?___fldiv+1,postinc2
 10084  004160  C062  FFDE         	movff	?___fldiv+2,postinc2
 10085  004164  C063  FFDE         	movff	?___fldiv+3,postinc2
 10086  004168                     
 10087                           ; BSR set to: 0
 10088  004168  0012               	return		;funcret
 10089  00416A                     __end_of_Linear_regression:
 10090                           	callstack 0
 10091                           
 10092 ;; *************** function _fmod *****************
 10093 ;; Defined at:
 10094 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fmod.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  x               4   25[BANK0 ] void 
 10097 ;;  y               4   29[BANK0 ] void 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  n               4   33[BANK0 ] void 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  4   25[BANK0 ] void 
 10102 ;; Registers used:
 10103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10110 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10112 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10113 ;;Total ram usage:       12 bytes
 10114 ;; Hardware stack levels used: 1
 10115 ;; Hardware stack levels required when called: 4
 10116 ;; This function calls:
 10117 ;;		___fldiv
 10118 ;;		___flmul
 10119 ;;		___flsub
 10120 ;;		_trunc
 10121 ;; This function is called by:
 10122 ;;		_Linear_regression
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           	psect	text52
 10127  00B290                     __ptext52:
 10128                           	callstack 0
 10129  00B290                     _fmod:
 10130                           	callstack 24
 10131  00B290  C079  F060         	movff	fmod@x,___fldiv@b
 10132  00B294  C07A  F061         	movff	fmod@x+1,___fldiv@b+1
 10133  00B298  C07B  F062         	movff	fmod@x+2,___fldiv@b+2
 10134  00B29C  C07C  F063         	movff	fmod@x+3,___fldiv@b+3
 10135  00B2A0  C07D  F064         	movff	fmod@y,___fldiv@a
 10136  00B2A4  C07E  F065         	movff	fmod@y+1,___fldiv@a+1
 10137  00B2A8  C07F  F066         	movff	fmod@y+2,___fldiv@a+2
 10138  00B2AC  C080  F067         	movff	fmod@y+3,___fldiv@a+3
 10139  00B2B0  EC96  F02F         	call	___fldiv	;wreg free
 10140  00B2B4  C060  F081         	movff	?___fldiv,fmod@n
 10141  00B2B8  C061  F082         	movff	?___fldiv+1,fmod@n+1
 10142  00B2BC  C062  F083         	movff	?___fldiv+2,fmod@n+2
 10143  00B2C0  C063  F084         	movff	?___fldiv+3,fmod@n+3
 10144  00B2C4  C081  F027         	movff	fmod@n,trunc@x
 10145  00B2C8  C082  F028         	movff	fmod@n+1,trunc@x+1
 10146  00B2CC  C083  F029         	movff	fmod@n+2,trunc@x+2
 10147  00B2D0  C084  F02A         	movff	fmod@n+3,trunc@x+3
 10148  00B2D4  EC3A  F058         	call	_trunc	;wreg free
 10149  00B2D8  C027  F081         	movff	?_trunc,fmod@n
 10150  00B2DC  C028  F082         	movff	?_trunc+1,fmod@n+1
 10151  00B2E0  C029  F083         	movff	?_trunc+2,fmod@n+2
 10152  00B2E4  C02A  F084         	movff	?_trunc+3,fmod@n+3
 10153  00B2E8  C079  F037         	movff	fmod@x,___flsub@b
 10154  00B2EC  C07A  F038         	movff	fmod@x+1,___flsub@b+1
 10155  00B2F0  C07B  F039         	movff	fmod@x+2,___flsub@b+2
 10156  00B2F4  C07C  F03A         	movff	fmod@x+3,___flsub@b+3
 10157  00B2F8  C07D  F047         	movff	fmod@y,___flmul@a
 10158  00B2FC  C07E  F048         	movff	fmod@y+1,___flmul@a+1
 10159  00B300  C07F  F049         	movff	fmod@y+2,___flmul@a+2
 10160  00B304  C080  F04A         	movff	fmod@y+3,___flmul@a+3
 10161  00B308  C081  F043         	movff	fmod@n,___flmul@b
 10162  00B30C  C082  F044         	movff	fmod@n+1,___flmul@b+1
 10163  00B310  C083  F045         	movff	fmod@n+2,___flmul@b+2
 10164  00B314  C084  F046         	movff	fmod@n+3,___flmul@b+3
 10165  00B318  EC73  F02B         	call	___flmul	;wreg free
 10166  00B31C  C043  F03B         	movff	?___flmul,___flsub@a
 10167  00B320  C044  F03C         	movff	?___flmul+1,___flsub@a+1
 10168  00B324  C045  F03D         	movff	?___flmul+2,___flsub@a+2
 10169  00B328  C046  F03E         	movff	?___flmul+3,___flsub@a+3
 10170  00B32C  EC08  F067         	call	___flsub	;wreg free
 10171  00B330  C037  F079         	movff	?___flsub,?_fmod
 10172  00B334  C038  F07A         	movff	?___flsub+1,?_fmod+1
 10173  00B338  C039  F07B         	movff	?___flsub+2,?_fmod+2
 10174  00B33C  C03A  F07C         	movff	?___flsub+3,?_fmod+3
 10175  00B340  0012               	return		;funcret
 10176  00B342                     __end_of_fmod:
 10177                           	callstack 0
 10178                           
 10179 ;; *************** function _trunc *****************
 10180 ;; Defined at:
 10181 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\trunc.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  x               4   38[COMRAM] void 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  i               4   42[COMRAM] void 
 10186 ;;  expon           2   46[COMRAM] int 
 10187 ;; Return value:  Size  Location     Type
 10188 ;;                  4   38[COMRAM] int 
 10189 ;; Registers used:
 10190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10197 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10199 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10200 ;;Total ram usage:       10 bytes
 10201 ;; Hardware stack levels used: 1
 10202 ;; Hardware stack levels required when called: 3
 10203 ;; This function calls:
 10204 ;;		___fltol
 10205 ;;		___xxtofl
 10206 ;;		_frexp
 10207 ;; This function is called by:
 10208 ;;		_fmod
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text53
 10213  00B074                     __ptext53:
 10214                           	callstack 0
 10215  00B074                     _trunc:
 10216                           	callstack 24
 10217  00B074  C027  F00D         	movff	trunc@x,frexp@value
 10218  00B078  C028  F00E         	movff	trunc@x+1,frexp@value+1
 10219  00B07C  C029  F00F         	movff	trunc@x+2,frexp@value+2
 10220  00B080  C02A  F010         	movff	trunc@x+3,frexp@value+3
 10221  00B084  0E2F               	movlw	low trunc@expon
 10222  00B086  6E11               	movwf	frexp@eptr^0,c
 10223  00B088  0E00               	movlw	high trunc@expon
 10224  00B08A  6E12               	movwf	(frexp@eptr+1)^0,c
 10225  00B08C  EC9B  F055         	call	_frexp	;wreg free
 10226  00B090  BE30               	btfsc	(trunc@expon+1)^0,7,c
 10227  00B092  EF4F  F058         	goto	u20420
 10228  00B096  EF4D  F058         	goto	u20421
 10229  00B09A                     u20421:
 10230  00B09A  EF59  F058         	goto	l18603
 10231  00B09E                     u20420:
 10232  00B09E  0E00               	movlw	0
 10233  00B0A0  6E27               	movwf	?_trunc^0,c
 10234  00B0A2  0E00               	movlw	0
 10235  00B0A4  6E28               	movwf	(?_trunc+1)^0,c
 10236  00B0A6  0E00               	movlw	0
 10237  00B0A8  6E29               	movwf	(?_trunc+2)^0,c
 10238  00B0AA  0E00               	movlw	0
 10239  00B0AC  6E2A               	movwf	(?_trunc+3)^0,c
 10240  00B0AE  EF93  F058         	goto	l3054
 10241  00B0B2                     l18603:
 10242  00B0B2  5030               	movf	(trunc@expon+1)^0,w,c
 10243  00B0B4  E109               	bnz	u20430
 10244  00B0B6  0E1D               	movlw	29
 10245  00B0B8  5C2F               	subwf	trunc@expon^0,w,c
 10246  00B0BA  A0D8               	btfss	status,0,c
 10247  00B0BC  EF62  F058         	goto	u20431
 10248  00B0C0  EF64  F058         	goto	u20430
 10249  00B0C4                     u20431:
 10250  00B0C4  EF6E  F058         	goto	l18607
 10251  00B0C8                     u20430:
 10252  00B0C8  C027  F027         	movff	trunc@x,?_trunc
 10253  00B0CC  C028  F028         	movff	trunc@x+1,?_trunc+1
 10254  00B0D0  C029  F029         	movff	trunc@x+2,?_trunc+2
 10255  00B0D4  C02A  F02A         	movff	trunc@x+3,?_trunc+3
 10256  00B0D8  EF93  F058         	goto	l3054
 10257  00B0DC                     l18607:
 10258  00B0DC  C027  F00F         	movff	trunc@x,___fltol@f1
 10259  00B0E0  C028  F010         	movff	trunc@x+1,___fltol@f1+1
 10260  00B0E4  C029  F011         	movff	trunc@x+2,___fltol@f1+2
 10261  00B0E8  C02A  F012         	movff	trunc@x+3,___fltol@f1+3
 10262  00B0EC  ECE9  F050         	call	___fltol	;wreg free
 10263  00B0F0  C00F  F019         	movff	?___fltol,___xxtofl@val
 10264  00B0F4  C010  F01A         	movff	?___fltol+1,___xxtofl@val+1
 10265  00B0F8  C011  F01B         	movff	?___fltol+2,___xxtofl@val+2
 10266  00B0FC  C012  F01C         	movff	?___fltol+3,___xxtofl@val+3
 10267  00B100  0E01               	movlw	1
 10268  00B102  ECC1  F040         	call	___xxtofl
 10269  00B106  C019  F02B         	movff	?___xxtofl,trunc@i
 10270  00B10A  C01A  F02C         	movff	?___xxtofl+1,trunc@i+1
 10271  00B10E  C01B  F02D         	movff	?___xxtofl+2,trunc@i+2
 10272  00B112  C01C  F02E         	movff	?___xxtofl+3,trunc@i+3
 10273  00B116  C02B  F027         	movff	trunc@i,?_trunc
 10274  00B11A  C02C  F028         	movff	trunc@i+1,?_trunc+1
 10275  00B11E  C02D  F029         	movff	trunc@i+2,?_trunc+2
 10276  00B122  C02E  F02A         	movff	trunc@i+3,?_trunc+3
 10277  00B126                     l3054:
 10278  00B126  0012               	return		;funcret
 10279  00B128                     __end_of_trunc:
 10280                           	callstack 0
 10281                           
 10282 ;; *************** function _frexp *****************
 10283 ;; Defined at:
 10284 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  value           4   12[COMRAM] int 
 10287 ;;  eptr            2   16[COMRAM] PTR int 
 10288 ;;		 -> trunc@expon(2), log@exponent(2), 
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;		None
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  4   12[COMRAM] PTR int 
 10293 ;; Registers used:
 10294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10300 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10303 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10304 ;;Total ram usage:        8 bytes
 10305 ;; Hardware stack levels used: 1
 10306 ;; Hardware stack levels required when called: 2
 10307 ;; This function calls:
 10308 ;;		___fleq
 10309 ;; This function is called by:
 10310 ;;		_trunc
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text54
 10315  00AB36                     __ptext54:
 10316                           	callstack 0
 10317  00AB36                     _frexp:
 10318                           	callstack 24
 10319  00AB36  C00D  F001         	movff	frexp@value,___fleq@ff1
 10320  00AB3A  C00E  F002         	movff	frexp@value+1,___fleq@ff1+1
 10321  00AB3E  C00F  F003         	movff	frexp@value+2,___fleq@ff1+2
 10322  00AB42  C010  F004         	movff	frexp@value+3,___fleq@ff1+3
 10323  00AB46  0E00               	movlw	0
 10324  00AB48  6E05               	movwf	___fleq@ff2^0,c
 10325  00AB4A  0E00               	movlw	0
 10326  00AB4C  6E06               	movwf	(___fleq@ff2+1)^0,c
 10327  00AB4E  0E00               	movlw	0
 10328  00AB50  6E07               	movwf	(___fleq@ff2+2)^0,c
 10329  00AB52  0E00               	movlw	0
 10330  00AB54  6E08               	movwf	(___fleq@ff2+3)^0,c
 10331  00AB56  ECFD  F05A         	call	___fleq	;wreg free
 10332  00AB5A  A0D8               	btfss	status,0,c
 10333  00AB5C  EFB2  F055         	goto	u10451
 10334  00AB60  EFB4  F055         	goto	u10450
 10335  00AB64                     u10451:
 10336  00AB64  EFC6  F055         	goto	l10695
 10337  00AB68                     u10450:
 10338  00AB68  C011  FFD9         	movff	frexp@eptr,fsr2l
 10339  00AB6C  C012  FFDA         	movff	frexp@eptr+1,fsr2h
 10340  00AB70  0E00               	movlw	0
 10341  00AB72  6EDE               	movwf	postinc2,c
 10342  00AB74  0E00               	movlw	0
 10343  00AB76  6EDD               	movwf	postdec2,c
 10344  00AB78  0E00               	movlw	0
 10345  00AB7A  6E0D               	movwf	?_frexp^0,c
 10346  00AB7C  0E00               	movlw	0
 10347  00AB7E  6E0E               	movwf	(?_frexp+1)^0,c
 10348  00AB80  0E00               	movlw	0
 10349  00AB82  6E0F               	movwf	(?_frexp+2)^0,c
 10350  00AB84  0E00               	movlw	0
 10351  00AB86  6E10               	movwf	(?_frexp+3)^0,c
 10352  00AB88  EFFC  F055         	goto	l2996
 10353  00AB8C                     l10695:
 10354  00AB8C  5010               	movf	(frexp@value+3)^0,w,c
 10355  00AB8E  0B7F               	andlw	127
 10356  00AB90  6E13               	movwf	??_frexp^0,c
 10357  00AB92  6A14               	clrf	(??_frexp+1)^0,c
 10358  00AB94  90D8               	bcf	status,0,c
 10359  00AB96  3613               	rlcf	??_frexp^0,f,c
 10360  00AB98  3614               	rlcf	(??_frexp+1)^0,f,c
 10361  00AB9A  C011  FFD9         	movff	frexp@eptr,fsr2l
 10362  00AB9E  C012  FFDA         	movff	frexp@eptr+1,fsr2h
 10363  00ABA2  C013  FFDE         	movff	??_frexp,postinc2
 10364  00ABA6  C014  FFDD         	movff	??_frexp+1,postdec2
 10365  00ABAA  BE0F               	btfsc	(frexp@value+2)^0,7,c
 10366  00ABAC  EFDA  F055         	goto	u10461
 10367  00ABB0  EFDE  F055         	goto	u10460
 10368  00ABB4                     u10461:
 10369  00ABB4  6A13               	clrf	??_frexp^0,c
 10370  00ABB6  2A13               	incf	??_frexp^0,f,c
 10371  00ABB8  EFDF  F055         	goto	u10468
 10372  00ABBC                     u10460:
 10373  00ABBC  6A13               	clrf	??_frexp^0,c
 10374  00ABBE                     u10468:
 10375  00ABBE  5013               	movf	??_frexp^0,w,c
 10376  00ABC0  C011  FFD9         	movff	frexp@eptr,fsr2l
 10377  00ABC4  C012  FFDA         	movff	frexp@eptr+1,fsr2h
 10378  00ABC8  12DE               	iorwf	postinc2,f,c
 10379  00ABCA  0E00               	movlw	0
 10380  00ABCC  12DD               	iorwf	postdec2,f,c
 10381  00ABCE  C011  FFD9         	movff	frexp@eptr,fsr2l
 10382  00ABD2  C012  FFDA         	movff	frexp@eptr+1,fsr2h
 10383  00ABD6  0E82               	movlw	130
 10384  00ABD8  26DE               	addwf	postinc2,f,c
 10385  00ABDA  0EFF               	movlw	255
 10386  00ABDC  22DD               	addwfc	postdec2,f,c
 10387  00ABDE  5010               	movf	(frexp@value+3)^0,w,c
 10388  00ABE0  0B80               	andlw	-128
 10389  00ABE2  093F               	iorlw	63
 10390  00ABE4  6E10               	movwf	(frexp@value+3)^0,c
 10391  00ABE6  9E0F               	bcf	(frexp@value+2)^0,7,c
 10392  00ABE8  C00D  F00D         	movff	frexp@value,?_frexp
 10393  00ABEC  C00E  F00E         	movff	frexp@value+1,?_frexp+1
 10394  00ABF0  C00F  F00F         	movff	frexp@value+2,?_frexp+2
 10395  00ABF4  C010  F010         	movff	frexp@value+3,?_frexp+3
 10396  00ABF8                     l2996:
 10397  00ABF8  0012               	return		;funcret
 10398  00ABFA                     __end_of_frexp:
 10399                           	callstack 0
 10400                           
 10401 ;; *************** function _led_task *****************
 10402 ;; Defined at:
 10403 ;;		line 78 in file "app_led_task.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;		None
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10421 ;;Total ram usage:        2 bytes
 10422 ;; Hardware stack levels used: 1
 10423 ;; Hardware stack levels required when called: 3
 10424 ;; This function calls:
 10425 ;;		_LED_Off
 10426 ;;		_LED_On
 10427 ;;		_led_fail
 10428 ;;		_led_warmup
 10429 ;;		_led_zerocal_end
 10430 ;; This function is called by:
 10431 ;;		_main
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           	psect	text55
 10436  007C1A                     __ptext55:
 10437                           	callstack 0
 10438  007C1A                     _led_task:
 10439                           	callstack 27
 10440  007C1A                     
 10441                           ;app_led_task.c: 80: switch (g_led_status.seq) {
 10442  007C1A  EFCC  F03E         	goto	l13591
 10443  007C1E                     l13533:
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;app_led_task.c: 82: g_led_counter = 0;
 10447  007C1E  0E00               	movlw	0
 10448  007C20  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10449  007C22  0E00               	movlw	0
 10450  007C24  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10451  007C26  0E00               	movlw	0
 10452  007C28  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10453  007C2A  0E00               	movlw	0
 10454  007C2C  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10455                           
 10456                           ;app_led_task.c: 83: g_led_status.toggle = 0;
 10457  007C2E  0E00               	movlw	0
 10458  007C30  6FC3               	movwf	(_g_led_status+3)& (0+255),b
 10459                           
 10460                           ;app_led_task.c: 84: g_led_status.seq = LED_READY;
 10461  007C32  0E01               	movlw	1
 10462  007C34  6FC0               	movwf	_g_led_status& (0+255),b
 10463                           
 10464                           ;app_led_task.c: 85: break;
 10465  007C36  EFF8  F03E         	goto	l1479
 10466  007C3A                     l13535:
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;app_led_task.c: 87: if (USBDeviceState == CONFIGURED_STATE) {
 10470  007C3A  0E20               	movlw	32
 10471  007C3C  19E2               	xorwf	_USBDeviceState& (0+255),w,b
 10472  007C3E  A4D8               	btfss	status,2,c
 10473  007C40  EF24  F03E         	goto	u14041
 10474  007C44  EF26  F03E         	goto	u14040
 10475  007C48                     u14041:
 10476  007C48  EFF8  F03E         	goto	l1479
 10477  007C4C                     u14040:
 10478  007C4C                     
 10479                           ; BSR set to: 0
 10480                           ;app_led_task.c: 88: g_led_counter = 0;
 10481  007C4C  0E00               	movlw	0
 10482  007C4E  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10483  007C50  0E00               	movlw	0
 10484  007C52  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10485  007C54  0E00               	movlw	0
 10486  007C56  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10487  007C58  0E00               	movlw	0
 10488  007C5A  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10489                           
 10490                           ;app_led_task.c: 89: g_led_status.seq = LED_WAIT_OFF;
 10491  007C5C  0E02               	movlw	2
 10492  007C5E  6FC0               	movwf	_g_led_status& (0+255),b
 10493                           
 10494                           ;app_led_task.c: 90: g_led_status.isBlink = 1;
 10495  007C60  0E01               	movlw	1
 10496  007C62  6FC2               	movwf	(_g_led_status+2)& (0+255),b
 10497                           
 10498                           ;app_led_task.c: 91: g_led_status.last_state = LED_WARMUP;
 10499  007C64  0E04               	movlw	4
 10500  007C66  6FC1               	movwf	(_g_led_status+1)& (0+255),b
 10501  007C68  EFF8  F03E         	goto	l1479
 10502  007C6C                     l13539:
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;app_led_task.c: 95: if (g_led_counter > 10) {
 10506  007C6C  51C8               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 10507  007C6E  11C7               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 10508  007C70  11C6               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 10509  007C72  E109               	bnz	u14050
 10510  007C74  0E0B               	movlw	11
 10511  007C76  5DC5               	subwf	_g_led_counter& (0+255),w,b	;volatile
 10512  007C78  A0D8               	btfss	status,0,c
 10513  007C7A  EF41  F03E         	goto	u14051
 10514  007C7E  EF43  F03E         	goto	u14050
 10515  007C82                     u14051:
 10516  007C82  EFF8  F03E         	goto	l1479
 10517  007C86                     u14050:
 10518  007C86                     
 10519                           ; BSR set to: 0
 10520                           ;app_led_task.c: 96: g_led_counter = 0;
 10521  007C86  0E00               	movlw	0
 10522  007C88  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10523  007C8A  0E00               	movlw	0
 10524  007C8C  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10525  007C8E  0E00               	movlw	0
 10526  007C90  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10527  007C92  0E00               	movlw	0
 10528  007C94  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10529                           
 10530                           ;app_led_task.c: 97: g_led_status.seq = LED_ALLOFF;
 10531  007C96  0E09               	movlw	9
 10532  007C98  6FC0               	movwf	_g_led_status& (0+255),b
 10533  007C9A  EFF8  F03E         	goto	l1479
 10534  007C9E                     l13543:
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;app_led_task.c: 101: g_led_counter = 0;
 10538  007C9E  0E00               	movlw	0
 10539  007CA0  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10540  007CA2  0E00               	movlw	0
 10541  007CA4  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10542  007CA6  0E00               	movlw	0
 10543  007CA8  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10544  007CAA  0E00               	movlw	0
 10545  007CAC  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10546                           
 10547                           ;app_led_task.c: 102: g_led_status.last_state = LED_WARMUP;
 10548  007CAE  0E04               	movlw	4
 10549  007CB0  6FC1               	movwf	(_g_led_status+1)& (0+255),b
 10550                           
 10551                           ;app_led_task.c: 103: g_led_status.seq = LED_NOTHING;
 10552  007CB2  0E0A               	movlw	10
 10553  007CB4  6FC0               	movwf	_g_led_status& (0+255),b
 10554                           
 10555                           ;app_led_task.c: 104: break;
 10556  007CB6  EFF8  F03E         	goto	l1479
 10557  007CBA                     l13545:
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;app_led_task.c: 106: LED_Off();
 10561  007CBA  EC35  F06B         	call	_LED_Off	;wreg free
 10562  007CBE                     
 10563                           ;app_led_task.c: 107: LED_On((g_led_status.twoYear==1)?LED_RED:LED_GREEN);
 10564  007CBE  0100               	movlb	0	; () banked
 10565  007CC0  05C4               	decf	(_g_led_status+4)& (0+255),w,b
 10566  007CC2  B4D8               	btfsc	status,2,c
 10567  007CC4  EF66  F03E         	goto	u14061
 10568  007CC8  EF68  F03E         	goto	u14060
 10569  007CCC                     u14061:
 10570  007CCC  EF6E  F03E         	goto	l13551
 10571  007CD0                     u14060:
 10572  007CD0                     
 10573                           ; BSR set to: 0
 10574  007CD0  0E00               	movlw	0
 10575  007CD2  6E05               	movwf	(_led_task$3764+1)^0,c
 10576  007CD4  0E02               	movlw	2
 10577  007CD6  6E04               	movwf	_led_task$3764^0,c
 10578  007CD8  EF72  F03E         	goto	l13553
 10579  007CDC                     l13551:
 10580                           
 10581                           ; BSR set to: 0
 10582  007CDC  0E00               	movlw	0
 10583  007CDE  6E05               	movwf	(_led_task$3764+1)^0,c
 10584  007CE0  0E01               	movlw	1
 10585  007CE2  6E04               	movwf	_led_task$3764^0,c
 10586  007CE4                     l13553:
 10587                           
 10588                           ; BSR set to: 0
 10589  007CE4  5004               	movf	_led_task$3764^0,w,c
 10590  007CE6  ECF3  F068         	call	_LED_On
 10591  007CEA                     l13555:
 10592                           
 10593                           ;app_led_task.c: 108: g_led_counter = 0;
 10594  007CEA  0E00               	movlw	0
 10595  007CEC  0100               	movlb	0	; () banked
 10596  007CEE  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10597  007CF0  0E00               	movlw	0
 10598  007CF2  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10599  007CF4  0E00               	movlw	0
 10600  007CF6  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10601  007CF8  0E00               	movlw	0
 10602  007CFA  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10603  007CFC                     
 10604                           ; BSR set to: 0
 10605                           ;app_led_task.c: 109: g_led_status.seq = LED_NOTHING;
 10606  007CFC  0E0A               	movlw	10
 10607  007CFE  6FC0               	movwf	_g_led_status& (0+255),b
 10608                           
 10609                           ;app_led_task.c: 110: break;
 10610  007D00  EFF8  F03E         	goto	l1479
 10611  007D04                     l13559:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;app_led_task.c: 112: LED_Off();
 10615  007D04  EC35  F06B         	call	_LED_Off	;wreg free
 10616  007D08                     
 10617                           ;app_led_task.c: 113: LED_On(LED_GREEN);
 10618  007D08  0E02               	movlw	2
 10619  007D0A  ECF3  F068         	call	_LED_On
 10620  007D0E  EF75  F03E         	goto	l13555
 10621  007D12                     l13567:
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;app_led_task.c: 118: g_led_counter = 0;
 10625  007D12  0E00               	movlw	0
 10626  007D14  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10627  007D16  0E00               	movlw	0
 10628  007D18  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10629  007D1A  0E00               	movlw	0
 10630  007D1C  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10631  007D1E  0E00               	movlw	0
 10632  007D20  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10633                           
 10634                           ;app_led_task.c: 119: g_led_status.last_state = LED_ZEROCAL_END;
 10635  007D22  0E07               	movlw	7
 10636  007D24  6FC1               	movwf	(_g_led_status+1)& (0+255),b
 10637                           
 10638                           ;app_led_task.c: 120: g_led_status.seq = LED_NOTHING;
 10639  007D26  0E0A               	movlw	10
 10640  007D28  6FC0               	movwf	_g_led_status& (0+255),b
 10641                           
 10642                           ;app_led_task.c: 121: break;
 10643  007D2A  EFF8  F03E         	goto	l1479
 10644  007D2E                     l13569:
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;app_led_task.c: 123: g_led_counter = 0;
 10648  007D2E  0E00               	movlw	0
 10649  007D30  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10650  007D32  0E00               	movlw	0
 10651  007D34  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10652  007D36  0E00               	movlw	0
 10653  007D38  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10654  007D3A  0E00               	movlw	0
 10655  007D3C  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10656                           
 10657                           ;app_led_task.c: 124: g_led_status.last_state = LED_FAIL;
 10658  007D3E  0E08               	movlw	8
 10659  007D40  6FC1               	movwf	(_g_led_status+1)& (0+255),b
 10660                           
 10661                           ;app_led_task.c: 125: g_led_status.seq = LED_NOTHING;
 10662  007D42  0E0A               	movlw	10
 10663  007D44  6FC0               	movwf	_g_led_status& (0+255),b
 10664                           
 10665                           ;app_led_task.c: 126: break;
 10666  007D46  EFF8  F03E         	goto	l1479
 10667  007D4A                     l13571:
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;app_led_task.c: 128: LED_Off();
 10671  007D4A  EC35  F06B         	call	_LED_Off	;wreg free
 10672  007D4E  EF75  F03E         	goto	l13555
 10673  007D52                     l13577:
 10674                           
 10675                           ; BSR set to: 0
 10676  007D52  51C2               	movf	(_g_led_status+2)& (0+255),w,b
 10677  007D54  B4D8               	btfsc	status,2,c
 10678  007D56  EFAF  F03E         	goto	u14071
 10679  007D5A  EFB1  F03E         	goto	u14070
 10680  007D5E                     u14071:
 10681  007D5E  EFF8  F03E         	goto	l1479
 10682  007D62                     u14070:
 10683  007D62                     
 10684                           ; BSR set to: 0
 10685  007D62  EC97  F060         	call	_led_warmup	;wreg free
 10686  007D66  EFF8  F03E         	goto	l1479
 10687  007D6A                     l13581:
 10688                           
 10689                           ; BSR set to: 0
 10690  007D6A  ECAC  F064         	call	_led_zerocal_end	;wreg free
 10691  007D6E  EFF8  F03E         	goto	l1479
 10692  007D72                     l13583:
 10693                           
 10694                           ; BSR set to: 0
 10695  007D72  ECD8  F064         	call	_led_fail	;wreg free
 10696  007D76  EFF8  F03E         	goto	l1479
 10697  007D7A                     l13587:
 10698                           
 10699                           ; BSR set to: 0
 10700  007D7A  51C1               	movf	(_g_led_status+1)& (0+255),w,b
 10701                           
 10702                           ; Switch size 1, requested type "simple"
 10703                           ; Number of cases is 3, Range of values is 4 to 8
 10704                           ; switch strategies available:
 10705                           ; Name         Instructions Cycles
 10706                           ; simple_byte           10     6 (average)
 10707                           ;	Chosen strategy is simple_byte
 10708  007D7C  0A04               	xorlw	4	; case 4
 10709  007D7E  B4D8               	btfsc	status,2,c
 10710  007D80  EFA9  F03E         	goto	l13577
 10711  007D84  0A03               	xorlw	3	; case 7
 10712  007D86  B4D8               	btfsc	status,2,c
 10713  007D88  EFB5  F03E         	goto	l13581
 10714  007D8C  0A0F               	xorlw	15	; case 8
 10715  007D8E  B4D8               	btfsc	status,2,c
 10716  007D90  EFB9  F03E         	goto	l13583
 10717  007D94  EFF8  F03E         	goto	l1479
 10718  007D98                     l13591:
 10719  007D98  0100               	movlb	0	; () banked
 10720  007D9A  51C0               	movf	_g_led_status& (0+255),w,b
 10721                           
 10722                           ; Switch size 1, requested type "simple"
 10723                           ; Number of cases is 10, Range of values is 0 to 10
 10724                           ; switch strategies available:
 10725                           ; Name         Instructions Cycles
 10726                           ; simple_byte           31    16 (average)
 10727                           ;	Chosen strategy is simple_byte
 10728  007D9C  0A00               	xorlw	0	; case 0
 10729  007D9E  B4D8               	btfsc	status,2,c
 10730  007DA0  EF0F  F03E         	goto	l13533
 10731  007DA4  0A01               	xorlw	1	; case 1
 10732  007DA6  B4D8               	btfsc	status,2,c
 10733  007DA8  EF1D  F03E         	goto	l13535
 10734  007DAC  0A03               	xorlw	3	; case 2
 10735  007DAE  B4D8               	btfsc	status,2,c
 10736  007DB0  EF36  F03E         	goto	l13539
 10737  007DB4  0A06               	xorlw	6	; case 4
 10738  007DB6  B4D8               	btfsc	status,2,c
 10739  007DB8  EF4F  F03E         	goto	l13543
 10740  007DBC  0A01               	xorlw	1	; case 5
 10741  007DBE  B4D8               	btfsc	status,2,c
 10742  007DC0  EF5D  F03E         	goto	l13545
 10743  007DC4  0A03               	xorlw	3	; case 6
 10744  007DC6  B4D8               	btfsc	status,2,c
 10745  007DC8  EF82  F03E         	goto	l13559
 10746  007DCC  0A01               	xorlw	1	; case 7
 10747  007DCE  B4D8               	btfsc	status,2,c
 10748  007DD0  EF89  F03E         	goto	l13567
 10749  007DD4  0A0F               	xorlw	15	; case 8
 10750  007DD6  B4D8               	btfsc	status,2,c
 10751  007DD8  EF97  F03E         	goto	l13569
 10752  007DDC  0A01               	xorlw	1	; case 9
 10753  007DDE  B4D8               	btfsc	status,2,c
 10754  007DE0  EFA5  F03E         	goto	l13571
 10755  007DE4  0A03               	xorlw	3	; case 10
 10756  007DE6  B4D8               	btfsc	status,2,c
 10757  007DE8  EFBD  F03E         	goto	l13587
 10758  007DEC  EFF8  F03E         	goto	l1479
 10759  007DF0                     l1479:
 10760  007DF0  0012               	return		;funcret
 10761  007DF2                     __end_of_led_task:
 10762                           	callstack 0
 10763                           
 10764 ;; *************** function _led_zerocal_end *****************
 10765 ;; Defined at:
 10766 ;;		line 33 in file "app_led_task.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;		None
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;		None
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10784 ;;Total ram usage:        0 bytes
 10785 ;; Hardware stack levels used: 1
 10786 ;; Hardware stack levels required when called: 2
 10787 ;; This function calls:
 10788 ;;		_LED_Off
 10789 ;;		_LED_On
 10790 ;; This function is called by:
 10791 ;;		_led_task
 10792 ;; This function uses a non-reentrant model
 10793 ;;
 10794                           
 10795                           	psect	text56
 10796  00C958                     __ptext56:
 10797                           	callstack 0
 10798  00C958                     _led_zerocal_end:
 10799                           	callstack 27
 10800  00C958                     
 10801                           ;app_led_task.c: 35: if (g_led_counter > 10) {
 10802  00C958  0100               	movlb	0	; () banked
 10803  00C95A  51C8               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 10804  00C95C  11C7               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 10805  00C95E  11C6               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 10806  00C960  E109               	bnz	u13380
 10807  00C962  0E0B               	movlw	11
 10808  00C964  5DC5               	subwf	_g_led_counter& (0+255),w,b	;volatile
 10809  00C966  A0D8               	btfss	status,0,c
 10810  00C968  EFB8  F064         	goto	u13381
 10811  00C96C  EFBA  F064         	goto	u13380
 10812  00C970                     u13381:
 10813  00C970  EFD7  F064         	goto	l1441
 10814  00C974                     u13380:
 10815  00C974                     
 10816                           ; BSR set to: 0
 10817                           ;app_led_task.c: 36: g_led_counter = 0;
 10818  00C974  0E00               	movlw	0
 10819  00C976  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10820  00C978  0E00               	movlw	0
 10821  00C97A  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10822  00C97C  0E00               	movlw	0
 10823  00C97E  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10824  00C980  0E00               	movlw	0
 10825  00C982  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10826  00C984                     
 10827                           ; BSR set to: 0
 10828                           ;app_led_task.c: 37: if (g_led_status.toggle == 1) {
 10829  00C984  05C3               	decf	(_g_led_status+3)& (0+255),w,b
 10830  00C986  A4D8               	btfss	status,2,c
 10831  00C988  EFC8  F064         	goto	u13391
 10832  00C98C  EFCA  F064         	goto	u13390
 10833  00C990                     u13391:
 10834  00C990  EFD1  F064         	goto	l13059
 10835  00C994                     u13390:
 10836  00C994                     
 10837                           ; BSR set to: 0
 10838                           ;app_led_task.c: 38: LED_Off();
 10839  00C994  EC35  F06B         	call	_LED_Off	;wreg free
 10840  00C998                     
 10841                           ;app_led_task.c: 39: g_led_status.toggle = 0;
 10842  00C998  0E00               	movlw	0
 10843  00C99A  0100               	movlb	0	; () banked
 10844  00C99C  6FC3               	movwf	(_g_led_status+3)& (0+255),b
 10845                           
 10846                           ;app_led_task.c: 40: } else {
 10847  00C99E  EFD7  F064         	goto	l1441
 10848  00C9A2                     l13059:
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;app_led_task.c: 41: LED_On(LED_GREEN);
 10852  00C9A2  0E02               	movlw	2
 10853  00C9A4  ECF3  F068         	call	_LED_On
 10854  00C9A8                     
 10855                           ;app_led_task.c: 42: g_led_status.toggle = 1;
 10856  00C9A8  0E01               	movlw	1
 10857  00C9AA  0100               	movlb	0	; () banked
 10858  00C9AC  6FC3               	movwf	(_g_led_status+3)& (0+255),b
 10859  00C9AE                     l1441:
 10860                           
 10861                           ; BSR set to: 0
 10862  00C9AE  0012               	return		;funcret
 10863  00C9B0                     __end_of_led_zerocal_end:
 10864                           	callstack 0
 10865                           
 10866 ;; *************** function _led_warmup *****************
 10867 ;; Defined at:
 10868 ;;		line 23 in file "app_led_task.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, status,0, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10886 ;;Total ram usage:        2 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 2
 10889 ;; This function calls:
 10890 ;;		_LED_Off
 10891 ;;		_LED_On
 10892 ;; This function is called by:
 10893 ;;		_led_task
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text57
 10898  00C12E                     __ptext57:
 10899                           	callstack 0
 10900  00C12E                     _led_warmup:
 10901                           	callstack 27
 10902  00C12E                     
 10903                           ;app_led_task.c: 25: if (g_led_counter > 50) {
 10904  00C12E  0100               	movlb	0	; () banked
 10905  00C130  51C8               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 10906  00C132  11C7               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 10907  00C134  11C6               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 10908  00C136  E109               	bnz	u13340
 10909  00C138  0E33               	movlw	51
 10910  00C13A  5DC5               	subwf	_g_led_counter& (0+255),w,b	;volatile
 10911  00C13C  A0D8               	btfss	status,0,c
 10912  00C13E  EFA3  F060         	goto	u13341
 10913  00C142  EFA5  F060         	goto	u13340
 10914  00C146                     u13341:
 10915  00C146  EFD1  F060         	goto	l1435
 10916  00C14A                     u13340:
 10917  00C14A                     
 10918                           ; BSR set to: 0
 10919                           ;app_led_task.c: 26: LED_Off();
 10920  00C14A  EC35  F06B         	call	_LED_Off	;wreg free
 10921  00C14E                     
 10922                           ;app_led_task.c: 27: LED_On((g_led_status.toggle==1)?LED_RED:LED_GREEN);
 10923  00C14E  0100               	movlb	0	; () banked
 10924  00C150  05C3               	decf	(_g_led_status+3)& (0+255),w,b
 10925  00C152  B4D8               	btfsc	status,2,c
 10926  00C154  EFAE  F060         	goto	u13351
 10927  00C158  EFB0  F060         	goto	u13350
 10928  00C15C                     u13351:
 10929  00C15C  EFB6  F060         	goto	l13041
 10930  00C160                     u13350:
 10931  00C160                     
 10932                           ; BSR set to: 0
 10933  00C160  0E00               	movlw	0
 10934  00C162  6E03               	movwf	(_led_warmup$3759+1)^0,c
 10935  00C164  0E02               	movlw	2
 10936  00C166  6E02               	movwf	_led_warmup$3759^0,c
 10937  00C168  EFBA  F060         	goto	l13043
 10938  00C16C                     l13041:
 10939                           
 10940                           ; BSR set to: 0
 10941  00C16C  0E00               	movlw	0
 10942  00C16E  6E03               	movwf	(_led_warmup$3759+1)^0,c
 10943  00C170  0E01               	movlw	1
 10944  00C172  6E02               	movwf	_led_warmup$3759^0,c
 10945  00C174                     l13043:
 10946                           
 10947                           ; BSR set to: 0
 10948  00C174  5002               	movf	_led_warmup$3759^0,w,c
 10949  00C176  ECF3  F068         	call	_LED_On
 10950  00C17A                     
 10951                           ;app_led_task.c: 28: g_led_status.toggle = (g_led_status.toggle)?0:1;
 10952  00C17A  0100               	movlb	0	; () banked
 10953  00C17C  51C3               	movf	(_g_led_status+3)& (0+255),w,b
 10954  00C17E  B4D8               	btfsc	status,2,c
 10955  00C180  EFC4  F060         	goto	u13361
 10956  00C184  EFC7  F060         	goto	u13360
 10957  00C188                     u13361:
 10958  00C188  0E01               	movlw	1
 10959  00C18A  EFC8  F060         	goto	u13370
 10960  00C18E                     u13360:
 10961  00C18E  0E00               	movlw	0
 10962  00C190                     u13370:
 10963  00C190  6FC3               	movwf	(_g_led_status+3)& (0+255),b
 10964  00C192                     
 10965                           ; BSR set to: 0
 10966                           ;app_led_task.c: 29: g_led_counter = 0;
 10967  00C192  0E00               	movlw	0
 10968  00C194  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 10969  00C196  0E00               	movlw	0
 10970  00C198  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 10971  00C19A  0E00               	movlw	0
 10972  00C19C  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 10973  00C19E  0E00               	movlw	0
 10974  00C1A0  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 10975  00C1A2                     l1435:
 10976                           
 10977                           ; BSR set to: 0
 10978  00C1A2  0012               	return		;funcret
 10979  00C1A4                     __end_of_led_warmup:
 10980                           	callstack 0
 10981                           
 10982 ;; *************** function _led_fail *****************
 10983 ;; Defined at:
 10984 ;;		line 47 in file "app_led_task.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;		None
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;		None
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2, status,0, cstack
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;Total ram usage:        0 bytes
 11003 ;; Hardware stack levels used: 1
 11004 ;; Hardware stack levels required when called: 2
 11005 ;; This function calls:
 11006 ;;		_LED_Off
 11007 ;;		_LED_On
 11008 ;; This function is called by:
 11009 ;;		_led_task
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text58
 11014  00C9B0                     __ptext58:
 11015                           	callstack 0
 11016  00C9B0                     _led_fail:
 11017                           	callstack 27
 11018  00C9B0                     
 11019                           ;app_led_task.c: 49: if (g_led_counter > 10) {
 11020  00C9B0  0100               	movlb	0	; () banked
 11021  00C9B2  51C8               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 11022  00C9B4  11C7               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 11023  00C9B6  11C6               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 11024  00C9B8  E109               	bnz	u13400
 11025  00C9BA  0E0B               	movlw	11
 11026  00C9BC  5DC5               	subwf	_g_led_counter& (0+255),w,b	;volatile
 11027  00C9BE  A0D8               	btfss	status,0,c
 11028  00C9C0  EFE4  F064         	goto	u13401
 11029  00C9C4  EFE6  F064         	goto	u13400
 11030  00C9C8                     u13401:
 11031  00C9C8  EF03  F065         	goto	l1447
 11032  00C9CC                     u13400:
 11033  00C9CC                     
 11034                           ; BSR set to: 0
 11035                           ;app_led_task.c: 50: g_led_counter = 0;
 11036  00C9CC  0E00               	movlw	0
 11037  00C9CE  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 11038  00C9D0  0E00               	movlw	0
 11039  00C9D2  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11040  00C9D4  0E00               	movlw	0
 11041  00C9D6  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11042  00C9D8  0E00               	movlw	0
 11043  00C9DA  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11044  00C9DC                     
 11045                           ; BSR set to: 0
 11046                           ;app_led_task.c: 51: if (g_led_status.toggle == 1) {
 11047  00C9DC  05C3               	decf	(_g_led_status+3)& (0+255),w,b
 11048  00C9DE  A4D8               	btfss	status,2,c
 11049  00C9E0  EFF4  F064         	goto	u13411
 11050  00C9E4  EFF6  F064         	goto	u13410
 11051  00C9E8                     u13411:
 11052  00C9E8  EFFD  F064         	goto	l13073
 11053  00C9EC                     u13410:
 11054  00C9EC                     
 11055                           ; BSR set to: 0
 11056                           ;app_led_task.c: 52: LED_Off();
 11057  00C9EC  EC35  F06B         	call	_LED_Off	;wreg free
 11058  00C9F0                     
 11059                           ;app_led_task.c: 53: g_led_status.toggle = 0;
 11060  00C9F0  0E00               	movlw	0
 11061  00C9F2  0100               	movlb	0	; () banked
 11062  00C9F4  6FC3               	movwf	(_g_led_status+3)& (0+255),b
 11063                           
 11064                           ;app_led_task.c: 54: } else {
 11065  00C9F6  EF03  F065         	goto	l1447
 11066  00C9FA                     l13073:
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;app_led_task.c: 55: LED_On(LED_RED);
 11070  00C9FA  0E01               	movlw	1
 11071  00C9FC  ECF3  F068         	call	_LED_On
 11072  00CA00                     
 11073                           ;app_led_task.c: 56: g_led_status.toggle = 1;
 11074  00CA00  0E01               	movlw	1
 11075  00CA02  0100               	movlb	0	; () banked
 11076  00CA04  6FC3               	movwf	(_g_led_status+3)& (0+255),b
 11077  00CA06                     l1447:
 11078                           
 11079                           ; BSR set to: 0
 11080  00CA06  0012               	return		;funcret
 11081  00CA08                     __end_of_led_fail:
 11082                           	callstack 0
 11083                           
 11084 ;; *************** function _changeUsbState_task *****************
 11085 ;; Defined at:
 11086 ;;		line 134 in file "main.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;		None
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;		None
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, status,2, status,0
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11104 ;;Total ram usage:        0 bytes
 11105 ;; Hardware stack levels used: 1
 11106 ;; Hardware stack levels required when called: 1
 11107 ;; This function calls:
 11108 ;;		Nothing
 11109 ;; This function is called by:
 11110 ;;		_main
 11111 ;; This function uses a non-reentrant model
 11112 ;;
 11113                           
 11114                           	psect	text59
 11115  00D464                     __ptext59:
 11116                           	callstack 0
 11117  00D464                     _changeUsbState_task:
 11118                           	callstack 29
 11119  00D464                     
 11120                           ;main.c: 136: if (USBDeviceState == CONFIGURED_STATE) g_usb_state = USB_ATTACHED;
 11121  00D464  0E20               	movlw	32
 11122  00D466  0100               	movlb	0	; () banked
 11123  00D468  19E2               	xorwf	_USBDeviceState& (0+255),w,b
 11124  00D46A  A4D8               	btfss	status,2,c
 11125  00D46C  EF3A  F06A         	goto	u14381
 11126  00D470  EF3C  F06A         	goto	u14380
 11127  00D474                     u14381:
 11128  00D474  EF40  F06A         	goto	l13861
 11129  00D478                     u14380:
 11130  00D478                     
 11131                           ; BSR set to: 0
 11132  00D478  0E02               	movlw	2
 11133  00D47A  6FD2               	movwf	_g_usb_state& (0+255),b
 11134  00D47C  EF42  F06A         	goto	l1886
 11135  00D480                     l13861:
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;main.c: 137: else g_usb_state = USB_DETACHED;
 11139  00D480  0E01               	movlw	1
 11140  00D482  6FD2               	movwf	_g_usb_state& (0+255),b
 11141  00D484                     l1886:
 11142                           
 11143                           ; BSR set to: 0
 11144  00D484  0012               	return		;funcret
 11145  00D486                     __end_of_changeUsbState_task:
 11146                           	callstack 0
 11147                           
 11148 ;; *************** function _atcommand_task *****************
 11149 ;; Defined at:
 11150 ;;		line 131 in file "app_atcommand.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;		None
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  ch              1   83[BANK0 ] unsigned char 
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  1    wreg      void 
 11157 ;; Registers used:
 11158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11167 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11168 ;;Total ram usage:        3 bytes
 11169 ;; Hardware stack levels used: 1
 11170 ;; Hardware stack levels required when called: 10
 11171 ;; This function calls:
 11172 ;;		__strclr
 11173 ;;		_buffer_de_queue
 11174 ;;		_build_response
 11175 ;;		_clear_command
 11176 ;;		_parse_command
 11177 ;;		_update_command
 11178 ;; This function is called by:
 11179 ;;		_main
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text60
 11184  007A20                     __ptext60:
 11185                           	callstack 0
 11186  007A20                     _atcommand_task:
 11187                           	callstack 20
 11188  007A20                     
 11189                           ;app_atcommand.c: 133: uint8_t ch;;app_atcommand.c: 134: if (g_usb_state != USB_ATTACHED
      +                          ) return;
 11190  007A20  0E02               	movlw	2
 11191  007A22  0100               	movlb	0	; () banked
 11192  007A24  19D2               	xorwf	_g_usb_state& (0+255),w,b
 11193  007A26  B4D8               	btfsc	status,2,c
 11194  007A28  EF18  F03D         	goto	u21251
 11195  007A2C  EF1A  F03D         	goto	u21250
 11196  007A30                     u21251:
 11197  007A30  EFF0  F03D         	goto	l19549
 11198  007A34                     u21250:
 11199  007A34  EF0C  F03E         	goto	l1166
 11200  007A38                     l19477:
 11201                           
 11202                           ; BSR set to: 0
 11203  007A38  EF0C  F03E         	goto	l1166
 11204  007A3C                     l19479:
 11205                           
 11206                           ;app_atcommand.c: 138: g_atcommand.seq = AT_START;
 11207  007A3C  0E01               	movlw	1
 11208  007A3E  0105               	movlb	5	; () banked
 11209  007A40  6F00               	movwf	_g_atcommand& (0+255),b
 11210                           
 11211                           ;app_atcommand.c: 139: break;
 11212  007A42  EF0C  F03E         	goto	l1166
 11213  007A46                     l19481:
 11214                           
 11215                           ; BSR set to: 5
 11216                           ;app_atcommand.c: 141: ch = buffer_de_queue(&g_usb_queue);
 11217  007A46  0E40               	movlw	low _g_usb_queue
 11218  007A48  6E01               	movwf	buffer_de_queue@queue^0,c
 11219  007A4A  0E04               	movlw	high _g_usb_queue
 11220  007A4C  6E02               	movwf	(buffer_de_queue@queue+1)^0,c
 11221  007A4E  EC64  F05F         	call	_buffer_de_queue	;wreg free
 11222  007A52  0100               	movlb	0	; () banked
 11223  007A54  6FB3               	movwf	atcommand_task@ch& (0+255),b
 11224  007A56                     
 11225                           ; BSR set to: 0
 11226                           ;app_atcommand.c: 142: if (ch) {
 11227  007A56  51B3               	movf	atcommand_task@ch& (0+255),w,b
 11228  007A58  B4D8               	btfsc	status,2,c
 11229  007A5A  EF31  F03D         	goto	u21261
 11230  007A5E  EF33  F03D         	goto	u21260
 11231  007A62                     u21261:
 11232  007A62  EF0C  F03E         	goto	l1166
 11233  007A66                     u21260:
 11234  007A66                     
 11235                           ; BSR set to: 0
 11236                           ;app_atcommand.c: 143: if (ch == '\r' || ch == '\n') {
 11237  007A66  0E0D               	movlw	13
 11238  007A68  19B3               	xorwf	atcommand_task@ch& (0+255),w,b
 11239  007A6A  B4D8               	btfsc	status,2,c
 11240  007A6C  EF3A  F03D         	goto	u21271
 11241  007A70  EF3C  F03D         	goto	u21270
 11242  007A74                     u21271:
 11243  007A74  EF45  F03D         	goto	l19489
 11244  007A78                     u21270:
 11245  007A78                     
 11246                           ; BSR set to: 0
 11247  007A78  0E0A               	movlw	10
 11248  007A7A  19B3               	xorwf	atcommand_task@ch& (0+255),w,b
 11249  007A7C  A4D8               	btfss	status,2,c
 11250  007A7E  EF43  F03D         	goto	u21281
 11251  007A82  EF45  F03D         	goto	u21280
 11252  007A86                     u21281:
 11253  007A86  EF7E  F03D         	goto	l19509
 11254  007A8A                     u21280:
 11255  007A8A                     l19489:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;app_atcommand.c: 144: if (g_atcommand.readidx > 2) {
 11259  007A8A  0E02               	movlw	2
 11260  007A8C  0105               	movlb	5	; () banked
 11261  007A8E  6541               	cpfsgt	(_g_atcommand+65)& (0+255),b
 11262  007A90  EF4C  F03D         	goto	u21291
 11263  007A94  EF4E  F03D         	goto	u21290
 11264  007A98                     u21291:
 11265  007A98  EF70  F03D         	goto	l19505
 11266  007A9C                     u21290:
 11267  007A9C                     
 11268                           ; BSR set to: 5
 11269                           ;app_atcommand.c: 145: g_atcommand.read_cmd[g_atcommand.readidx++] = ch;
 11270  007A9C  0E01               	movlw	low (_g_atcommand+1)
 11271  007A9E  2541               	addwf	(_g_atcommand+65)& (0+255),w,b
 11272  007AA0  6ED9               	movwf	fsr2l,c
 11273  007AA2  6ADA               	clrf	fsr2h,c
 11274  007AA4  0E05               	movlw	high (_g_atcommand+1)
 11275  007AA6  22DA               	addwfc	fsr2h,f,c
 11276  007AA8  C0B3  FFDF         	movff	atcommand_task@ch,indf2
 11277  007AAC                     
 11278                           ; BSR set to: 5
 11279  007AAC  2B41               	incf	(_g_atcommand+65)& (0+255),f,b
 11280  007AAE                     
 11281                           ; BSR set to: 5
 11282                           ;app_atcommand.c: 146: g_atcommand.readidx = 0;
 11283  007AAE  0E00               	movlw	0
 11284  007AB0  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 11285  007AB2                     
 11286                           ; BSR set to: 5
 11287                           ;app_atcommand.c: 147: g_atcommand.seq = AT_PARSE;
 11288  007AB2  0E02               	movlw	2
 11289  007AB4  6F00               	movwf	_g_atcommand& (0+255),b
 11290  007AB6                     
 11291                           ; BSR set to: 5
 11292                           ;app_atcommand.c: 148: if (g_led_status.isBlink == 0 && g_sens_autoCalib.led_slpSet == O
      +                          FF)
 11293  007AB6  0100               	movlb	0	; () banked
 11294  007AB8  51C2               	movf	(_g_led_status+2)& (0+255),w,b
 11295  007ABA  A4D8               	btfss	status,2,c
 11296  007ABC  EF62  F03D         	goto	u21301
 11297  007AC0  EF64  F03D         	goto	u21300
 11298  007AC4                     u21301:
 11299  007AC4  EF1C  F03D         	goto	l19477
 11300  007AC8                     u21300:
 11301  007AC8                     
 11302                           ; BSR set to: 0
 11303  007AC8  51E6               	movf	(_g_sens_autoCalib+3)& (0+255),w,b	;volatile
 11304  007ACA  A4D8               	btfss	status,2,c
 11305  007ACC  EF6A  F03D         	goto	u21311
 11306  007AD0  EF6C  F03D         	goto	u21310
 11307  007AD4                     u21311:
 11308  007AD4  EF1C  F03D         	goto	l19477
 11309  007AD8                     u21310:
 11310  007AD8                     
 11311                           ; BSR set to: 0
 11312                           ;app_atcommand.c: 149: g_led_status.seq = LED_COMMAND;
 11313  007AD8  0E05               	movlw	5
 11314  007ADA  6FC0               	movwf	_g_led_status& (0+255),b
 11315  007ADC  EF0C  F03E         	goto	l1166
 11316  007AE0                     l19505:
 11317                           
 11318                           ; BSR set to: 5
 11319                           ;app_atcommand.c: 151: g_atcommand.readidx = 0;
 11320  007AE0  0E00               	movlw	0
 11321  007AE2  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 11322  007AE4                     
 11323                           ; BSR set to: 5
 11324                           ;app_atcommand.c: 152: _strclr(g_atcommand.read_cmd, sizeof(g_atcommand.read_cmd));
 11325  007AE4  0E01               	movlw	low (_g_atcommand+1)
 11326  007AE6  6E01               	movwf	__strclr@dest^0,c
 11327  007AE8  0E05               	movlw	high (_g_atcommand+1)
 11328  007AEA  6E02               	movwf	(__strclr@dest+1)^0,c
 11329  007AEC  0E00               	movlw	0
 11330  007AEE  6E04               	movwf	(__strclr@n+1)^0,c
 11331  007AF0  0E40               	movlw	64
 11332  007AF2  6E03               	movwf	__strclr@n^0,c
 11333  007AF4  EC1C  F064         	call	__strclr	;wreg free
 11334  007AF8  EF0C  F03E         	goto	l1166
 11335  007AFC                     l19509:
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;app_atcommand.c: 155: if (g_atcommand.readidx >= sizeof(g_atcommand.read_cmd)) g_atcomm
      +                          and.readidx = 0;
 11339  007AFC  0E3F               	movlw	63
 11340  007AFE  0105               	movlb	5	; () banked
 11341  007B00  6541               	cpfsgt	(_g_atcommand+65)& (0+255),b
 11342  007B02  EF85  F03D         	goto	u21321
 11343  007B06  EF87  F03D         	goto	u21320
 11344  007B0A                     u21321:
 11345  007B0A  EF89  F03D         	goto	l19513
 11346  007B0E                     u21320:
 11347  007B0E                     
 11348                           ; BSR set to: 5
 11349  007B0E  0E00               	movlw	0
 11350  007B10  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 11351  007B12                     l19513:
 11352                           
 11353                           ; BSR set to: 5
 11354                           ;app_atcommand.c: 156: g_atcommand.read_cmd[g_atcommand.readidx++] = ch;
 11355  007B12  0E01               	movlw	low (_g_atcommand+1)
 11356  007B14  2541               	addwf	(_g_atcommand+65)& (0+255),w,b
 11357  007B16  6ED9               	movwf	fsr2l,c
 11358  007B18  6ADA               	clrf	fsr2h,c
 11359  007B1A  0E05               	movlw	high (_g_atcommand+1)
 11360  007B1C  22DA               	addwfc	fsr2h,f,c
 11361  007B1E  C0B3  FFDF         	movff	atcommand_task@ch,indf2
 11362  007B22                     
 11363                           ; BSR set to: 5
 11364  007B22  2B41               	incf	(_g_atcommand+65)& (0+255),f,b
 11365  007B24  EF0C  F03E         	goto	l1166
 11366  007B28                     l19517:
 11367                           
 11368                           ; BSR set to: 5
 11369                           ;app_atcommand.c: 161: if (parse_command(g_atcommand.read_cmd, &g_atcommand.status) == A
      +                          T_PARSE_OK)
 11370  007B28  0E01               	movlw	low (_g_atcommand+1)
 11371  007B2A  6E1B               	movwf	parse_command@buff^0,c
 11372  007B2C  0E05               	movlw	high (_g_atcommand+1)
 11373  007B2E  6E1C               	movwf	(parse_command@buff+1)^0,c
 11374  007B30  0E42               	movlw	low (_g_atcommand+66)
 11375  007B32  6E1D               	movwf	parse_command@status^0,c
 11376  007B34  0E05               	movlw	high (_g_atcommand+66)
 11377  007B36  6E1E               	movwf	(parse_command@status+1)^0,c
 11378  007B38  EC89  F026         	call	_parse_command	;wreg free
 11379  007B3C  06E8               	decf	wreg,f,c
 11380  007B3E  A4D8               	btfss	status,2,c
 11381  007B40  EFA4  F03D         	goto	u21331
 11382  007B44  EFA6  F03D         	goto	u21330
 11383  007B48                     u21331:
 11384  007B48  EFBF  F03D         	goto	l19527
 11385  007B4C                     u21330:
 11386  007B4C                     
 11387                           ;app_atcommand.c: 162: g_atcommand.seq = (g_atcommand.status.isApply) ? AT_APPLY : AT_ME
      +                          SSAGE;
 11388  007B4C  0105               	movlb	5	; () banked
 11389  007B4E  5151               	movf	(_g_atcommand+81)& (0+255),w,b
 11390  007B50  A4D8               	btfss	status,2,c
 11391  007B52  EFAD  F03D         	goto	u21341
 11392  007B56  EFAF  F03D         	goto	u21340
 11393  007B5A                     u21341:
 11394  007B5A  EFB6  F03D         	goto	l19523
 11395  007B5E                     u21340:
 11396  007B5E                     
 11397                           ; BSR set to: 5
 11398  007B5E  0E00               	movlw	0
 11399  007B60  0100               	movlb	0	; () banked
 11400  007B62  6FB2               	movwf	(_atcommand_task$3563+1)& (0+255),b
 11401  007B64  0E04               	movlw	4
 11402  007B66  6FB1               	movwf	_atcommand_task$3563& (0+255),b
 11403  007B68  EFBB  F03D         	goto	l19525
 11404  007B6C                     l19523:
 11405                           
 11406                           ; BSR set to: 5
 11407  007B6C  0E00               	movlw	0
 11408  007B6E  0100               	movlb	0	; () banked
 11409  007B70  6FB2               	movwf	(_atcommand_task$3563+1)& (0+255),b
 11410  007B72  0E03               	movlw	3
 11411  007B74  6FB1               	movwf	_atcommand_task$3563& (0+255),b
 11412  007B76                     l19525:
 11413                           
 11414                           ; BSR set to: 0
 11415  007B76  C0B1  F500         	movff	_atcommand_task$3563,_g_atcommand
 11416  007B7A  EF0C  F03E         	goto	l1166
 11417  007B7E                     l19527:
 11418                           
 11419                           ;app_atcommand.c: 163: else g_atcommand.seq = AT_END;
 11420  007B7E  0E05               	movlw	5
 11421  007B80  0105               	movlb	5	; () banked
 11422  007B82  6F00               	movwf	_g_atcommand& (0+255),b
 11423  007B84  EF0C  F03E         	goto	l1166
 11424  007B88                     l19529:
 11425                           
 11426                           ; BSR set to: 5
 11427                           ;app_atcommand.c: 166: update_command(&g_atcommand.status);
 11428  007B88  0E42               	movlw	low (_g_atcommand+66)
 11429  007B8A  0100               	movlb	0	; () banked
 11430  007B8C  6F9C               	movwf	update_command@status& (0+255),b
 11431  007B8E  0E05               	movlw	high (_g_atcommand+66)
 11432  007B90  6F9D               	movwf	(update_command@status+1)& (0+255),b
 11433  007B92  ECFA  F023         	call	_update_command	;wreg free
 11434  007B96                     
 11435                           ;app_atcommand.c: 167: g_atcommand.seq = AT_MESSAGE;
 11436  007B96  0E04               	movlw	4
 11437  007B98  0105               	movlb	5	; () banked
 11438  007B9A  6F00               	movwf	_g_atcommand& (0+255),b
 11439                           
 11440                           ;app_atcommand.c: 168: break;
 11441  007B9C  EF0C  F03E         	goto	l1166
 11442  007BA0                     l19533:
 11443                           
 11444                           ; BSR set to: 5
 11445                           ;app_atcommand.c: 170: build_response(&g_atcommand.status);
 11446  007BA0  0E42               	movlw	low (_g_atcommand+66)
 11447  007BA2  0100               	movlb	0	; () banked
 11448  007BA4  6F9A               	movwf	build_response@status& (0+255),b
 11449  007BA6  0E05               	movlw	high (_g_atcommand+66)
 11450  007BA8  6F9B               	movwf	(build_response@status+1)& (0+255),b
 11451  007BAA  ECDB  F011         	call	_build_response	;wreg free
 11452  007BAE  EFBF  F03D         	goto	l19527
 11453  007BB2                     l19537:
 11454                           
 11455                           ; BSR set to: 5
 11456                           ;app_atcommand.c: 174: if (g_led_status.isBlink == 0 && g_sens_autoCalib.led_slpSet == O
      +                          FF)
 11457  007BB2  0100               	movlb	0	; () banked
 11458  007BB4  51C2               	movf	(_g_led_status+2)& (0+255),w,b
 11459  007BB6  A4D8               	btfss	status,2,c
 11460  007BB8  EFE0  F03D         	goto	u21351
 11461  007BBC  EFE2  F03D         	goto	u21350
 11462  007BC0                     u21351:
 11463  007BC0  EFEC  F03D         	goto	l19543
 11464  007BC4                     u21350:
 11465  007BC4                     
 11466                           ; BSR set to: 0
 11467  007BC4  51E6               	movf	(_g_sens_autoCalib+3)& (0+255),w,b	;volatile
 11468  007BC6  A4D8               	btfss	status,2,c
 11469  007BC8  EFE8  F03D         	goto	u21361
 11470  007BCC  EFEA  F03D         	goto	u21360
 11471  007BD0                     u21361:
 11472  007BD0  EFEC  F03D         	goto	l19543
 11473  007BD4                     u21360:
 11474  007BD4                     
 11475                           ; BSR set to: 0
 11476                           ;app_atcommand.c: 175: g_led_status.seq = LED_WAIT_OFF;
 11477  007BD4  0E02               	movlw	2
 11478  007BD6  6FC0               	movwf	_g_led_status& (0+255),b
 11479  007BD8                     l19543:
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;app_atcommand.c: 176: clear_command();
 11483  007BD8  ECB5  F061         	call	_clear_command	;wreg free
 11484  007BDC  EF1E  F03D         	goto	l19479
 11485  007BE0                     l19549:
 11486                           
 11487                           ; BSR set to: 0
 11488  007BE0  0105               	movlb	5	; () banked
 11489  007BE2  5100               	movf	_g_atcommand& (0+255),w,b
 11490                           
 11491                           ; Switch size 1, requested type "simple"
 11492                           ; Number of cases is 6, Range of values is 0 to 5
 11493                           ; switch strategies available:
 11494                           ; Name         Instructions Cycles
 11495                           ; simple_byte           19    10 (average)
 11496                           ;	Chosen strategy is simple_byte
 11497  007BE4  0A00               	xorlw	0	; case 0
 11498  007BE6  B4D8               	btfsc	status,2,c
 11499  007BE8  EF1E  F03D         	goto	l19479
 11500  007BEC  0A01               	xorlw	1	; case 1
 11501  007BEE  B4D8               	btfsc	status,2,c
 11502  007BF0  EF23  F03D         	goto	l19481
 11503  007BF4  0A03               	xorlw	3	; case 2
 11504  007BF6  B4D8               	btfsc	status,2,c
 11505  007BF8  EF94  F03D         	goto	l19517
 11506  007BFC  0A01               	xorlw	1	; case 3
 11507  007BFE  B4D8               	btfsc	status,2,c
 11508  007C00  EFC4  F03D         	goto	l19529
 11509  007C04  0A07               	xorlw	7	; case 4
 11510  007C06  B4D8               	btfsc	status,2,c
 11511  007C08  EFD0  F03D         	goto	l19533
 11512  007C0C  0A01               	xorlw	1	; case 5
 11513  007C0E  B4D8               	btfsc	status,2,c
 11514  007C10  EFD9  F03D         	goto	l19537
 11515  007C14  EF0C  F03E         	goto	l1166
 11516  007C18                     l1166:
 11517  007C18  0012               	return		;funcret
 11518  007C1A                     __end_of_atcommand_task:
 11519                           	callstack 0
 11520                           
 11521 ;; *************** function _update_command *****************
 11522 ;; Defined at:
 11523 ;;		line 343 in file "app_atcommand.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;  status          2   60[BANK0 ] PTR struct .
 11526 ;;		 -> g_atcommand(243), 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  i               2   65[BANK0 ] int 
 11529 ;;  apply           1   67[BANK0 ] unsigned char 
 11530 ;;  chno            1   62[BANK0 ] unsigned char 
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  1    wreg      void 
 11533 ;; Registers used:
 11534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11541 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11543 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11544 ;;Total ram usage:       10 bytes
 11545 ;; Hardware stack levels used: 1
 11546 ;; Hardware stack levels required when called: 9
 11547 ;; This function calls:
 11548 ;;		_Kalman_setEstimateError
 11549 ;;		_Kalman_setMeasurementError
 11550 ;;		_ResetBootloaderCleanly
 11551 ;;		_ResetDeviceCleanly
 11552 ;;		_Set_KamanFilter_Sensitivity
 11553 ;;		__atof
 11554 ;;		__atoi
 11555 ;;		__isdigit
 11556 ;;		__strlen
 11557 ;;		_nvm_clear_all
 11558 ;;		_nvm_write_flash_all
 11559 ;;		_split_param
 11560 ;; This function is called by:
 11561 ;;		_atcommand_task
 11562 ;; This function uses a non-reentrant model
 11563 ;;
 11564                           
 11565                           	psect	text61
 11566  0047F4                     __ptext61:
 11567                           	callstack 0
 11568  0047F4                     _update_command:
 11569                           	callstack 20
 11570  0047F4                     
 11571                           ;app_atcommand.c: 345: uint8_t apply;;app_atcommand.c: 346: uint8_t chno = ((status->cha
      +                          nnelno - 1) < 0) ? 0 : status->channelno - 1;
 11572  0047F4  C09C  FFD9         	movff	update_command@status,fsr2l
 11573  0047F8  C09D  FFDA         	movff	update_command@status+1,fsr2h
 11574  0047FC  50DF               	movf	indf2,w,c
 11575  0047FE  6E5C               	movwf	??_update_command^0,c
 11576  004800  6A5D               	clrf	(??_update_command+1)^0,c
 11577  004802  0EFF               	movlw	255
 11578  004804  245C               	addwf	??_update_command^0,w,c
 11579  004806  0EFF               	movlw	255
 11580  004808  205D               	addwfc	(??_update_command+1)^0,w,c
 11581  00480A  0B80               	andlw	128
 11582  00480C  A4D8               	btfss	status,2,c
 11583  00480E  EF0B  F024         	goto	u20731
 11584  004812  EF0D  F024         	goto	u20730
 11585  004816                     u20731:
 11586  004816  EF1C  F024         	goto	l18883
 11587  00481A                     u20730:
 11588  00481A  C09C  FFD9         	movff	update_command@status,fsr2l
 11589  00481E  C09D  FFDA         	movff	update_command@status+1,fsr2h
 11590  004822  50DF               	movf	indf2,w,c
 11591  004824  6E5C               	movwf	??_update_command^0,c
 11592  004826  0EFF               	movlw	255
 11593  004828  245C               	addwf	??_update_command^0,w,c
 11594  00482A  0100               	movlb	0	; () banked
 11595  00482C  6F9F               	movwf	_update_command$3632& (0+255),b
 11596  00482E  6BA0               	clrf	(_update_command$3632+1)& (0+255),b
 11597  004830  0EFF               	movlw	255
 11598  004832  23A0               	addwfc	(_update_command$3632+1)& (0+255),f,b
 11599  004834  EF21  F024         	goto	l18885
 11600  004838                     l18883:
 11601  004838  0E00               	movlw	0
 11602  00483A  0100               	movlb	0	; () banked
 11603  00483C  6FA0               	movwf	(_update_command$3632+1)& (0+255),b
 11604  00483E  0E00               	movlw	0
 11605  004840  6F9F               	movwf	_update_command$3632& (0+255),b
 11606  004842                     l18885:
 11607                           
 11608                           ; BSR set to: 0
 11609  004842  C09F  F09E         	movff	_update_command$3632,update_command@chno
 11610                           
 11611                           ;app_atcommand.c: 348: switch (status->atcommand)
 11612  004846  EF06  F026         	goto	l18979
 11613  00484A                     l18887:
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;app_atcommand.c: 352: ResetDeviceCleanly();
 11617  00484A  EC21  F06B         	call	_ResetDeviceCleanly	;wreg free
 11618  00484E  EF88  F026         	goto	l1313
 11619  004852                     l18891:
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;app_atcommand.c: 357: ResetBootloaderCleanly();
 11623  004852  EC1A  F06B         	call	_ResetBootloaderCleanly	;wreg free
 11624  004856  EF88  F026         	goto	l1313
 11625  00485A                     l18895:
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;app_atcommand.c: 362: if (_strlen(status->apply_params) != 8) break;
 11629  00485A  0E10               	movlw	16
 11630  00485C  259C               	addwf	update_command@status& (0+255),w,b
 11631  00485E  6E01               	movwf	__strlen@source^0,c
 11632  004860  0E00               	movlw	0
 11633  004862  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11634  004864  6E02               	movwf	(__strlen@source+1)^0,c
 11635  004866  ECFF  F065         	call	__strlen	;wreg free
 11636  00486A  0E08               	movlw	8
 11637  00486C  1801               	xorwf	?__strlen^0,w,c
 11638  00486E  1002               	iorwf	(?__strlen+1)^0,w,c
 11639  004870  B4D8               	btfsc	status,2,c
 11640  004872  EF3D  F024         	goto	u20741
 11641  004876  EF3F  F024         	goto	u20740
 11642  00487A                     u20741:
 11643  00487A  EF41  F024         	goto	l18899
 11644  00487E                     u20740:
 11645  00487E  EF5B  F026         	goto	l18981
 11646  004882                     l18899:
 11647                           
 11648                           ;app_atcommand.c: 363: if (_isdigit(status->apply_params, 8)) {
 11649  004882  0E10               	movlw	16
 11650  004884  0100               	movlb	0	; () banked
 11651  004886  259C               	addwf	update_command@status& (0+255),w,b
 11652  004888  6E01               	movwf	__isdigit@src^0,c
 11653  00488A  0E00               	movlw	0
 11654  00488C  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11655  00488E  6E02               	movwf	(__isdigit@src+1)^0,c
 11656  004890  0E00               	movlw	0
 11657  004892  6E04               	movwf	(__isdigit@n+1)^0,c
 11658  004894  0E08               	movlw	8
 11659  004896  6E03               	movwf	__isdigit@n^0,c
 11660  004898  EC9A  F066         	call	__isdigit	;wreg free
 11661  00489C  0900               	iorlw	0
 11662  00489E  B4D8               	btfsc	status,2,c
 11663  0048A0  EF54  F024         	goto	u20751
 11664  0048A4  EF56  F024         	goto	u20750
 11665  0048A8                     u20751:
 11666  0048A8  EF5B  F026         	goto	l18981
 11667  0048AC                     u20750:
 11668  0048AC                     
 11669                           ;app_atcommand.c: 364: nvm_clear_all();
 11670  0048AC  EC83  F069         	call	_nvm_clear_all	;wreg free
 11671  0048B0                     
 11672                           ;app_atcommand.c: 365: for (int i = 0 ; i < 8 ; i++) g_nvm.flash.serialNum[i] = status->
      +                          apply_params[i];
 11673  0048B0  0E00               	movlw	0
 11674  0048B2  0100               	movlb	0	; () banked
 11675  0048B4  6FA2               	movwf	(update_command@i+1)& (0+255),b
 11676  0048B6  0E00               	movlw	0
 11677  0048B8  6FA1               	movwf	update_command@i& (0+255),b
 11678  0048BA                     l18909:
 11679                           
 11680                           ; BSR set to: 0
 11681  0048BA  51A1               	movf	update_command@i& (0+255),w,b
 11682  0048BC  259C               	addwf	update_command@status& (0+255),w,b
 11683  0048BE  6E5C               	movwf	??_update_command^0,c
 11684  0048C0  51A2               	movf	(update_command@i+1)& (0+255),w,b
 11685  0048C2  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11686  0048C4  6E5D               	movwf	(??_update_command+1)^0,c
 11687  0048C6  0E10               	movlw	16
 11688  0048C8  245C               	addwf	??_update_command^0,w,c
 11689  0048CA  6ED9               	movwf	fsr2l,c
 11690  0048CC  0E00               	movlw	0
 11691  0048CE  205D               	addwfc	(??_update_command+1)^0,w,c
 11692  0048D0  6EDA               	movwf	fsr2h,c
 11693  0048D2  0ED1               	movlw	low (_g_nvm+65)
 11694  0048D4  25A1               	addwf	update_command@i& (0+255),w,b
 11695  0048D6  6EE1               	movwf	fsr1l,c
 11696  0048D8  0E01               	movlw	high (_g_nvm+65)
 11697  0048DA  21A2               	addwfc	(update_command@i+1)& (0+255),w,b
 11698  0048DC  6EE2               	movwf	fsr1h,c
 11699  0048DE  CFDF FFE7          	movff	indf2,indf1
 11700  0048E2                     
 11701                           ; BSR set to: 0
 11702  0048E2  4BA1               	infsnz	update_command@i& (0+255),f,b
 11703  0048E4  2BA2               	incf	(update_command@i+1)& (0+255),f,b
 11704  0048E6                     
 11705                           ; BSR set to: 0
 11706  0048E6  BFA2               	btfsc	(update_command@i+1)& (0+255),7,b
 11707  0048E8  EF7F  F024         	goto	u20761
 11708  0048EC  51A2               	movf	(update_command@i+1)& (0+255),w,b
 11709  0048EE  E109               	bnz	u20760
 11710  0048F0  0E08               	movlw	8
 11711  0048F2  5DA1               	subwf	update_command@i& (0+255),w,b
 11712  0048F4  A0D8               	btfss	status,0,c
 11713  0048F6  EF7F  F024         	goto	u20761
 11714  0048FA  EF81  F024         	goto	u20760
 11715  0048FE                     u20761:
 11716  0048FE  EF5D  F024         	goto	l18909
 11717  004902                     u20760:
 11718  004902  EF5B  F026         	goto	l18981
 11719  004906                     l18915:
 11720                           
 11721                           ; BSR set to: 0
 11722  004906  0E10               	movlw	16
 11723  004908  259C               	addwf	update_command@status& (0+255),w,b
 11724  00490A  6E0D               	movwf	__atoi@str^0,c
 11725  00490C  0E00               	movlw	0
 11726  00490E  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11727  004910  6E0E               	movwf	(__atoi@str+1)^0,c
 11728  004912  EC26  F04A         	call	__atoi	;wreg free
 11729  004916  500D               	movf	?__atoi^0,w,c
 11730  004918  0100               	movlb	0	; () banked
 11731  00491A  6FA3               	movwf	update_command@apply& (0+255),b
 11732  00491C                     
 11733                           ; BSR set to: 0
 11734  00491C  0E02               	movlw	2
 11735  00491E  61A3               	cpfslt	update_command@apply& (0+255),b
 11736  004920  EF94  F024         	goto	u20771
 11737  004924  EF96  F024         	goto	u20770
 11738  004928                     u20771:
 11739  004928  EF5B  F026         	goto	l18981
 11740  00492C                     u20770:
 11741  00492C                     
 11742                           ; BSR set to: 0
 11743  00492C  C0A3  F191         	movff	update_command@apply,_g_nvm+1
 11744  004930  EF5B  F026         	goto	l18981
 11745  004934                     l18921:
 11746                           
 11747                           ; BSR set to: 0
 11748  004934  0E10               	movlw	16
 11749  004936  259C               	addwf	update_command@status& (0+255),w,b
 11750  004938  6E0D               	movwf	__atoi@str^0,c
 11751  00493A  0E00               	movlw	0
 11752  00493C  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11753  00493E  6E0E               	movwf	(__atoi@str+1)^0,c
 11754  004940  EC26  F04A         	call	__atoi	;wreg free
 11755  004944  500D               	movf	?__atoi^0,w,c
 11756  004946  0100               	movlb	0	; () banked
 11757  004948  6FA3               	movwf	update_command@apply& (0+255),b
 11758  00494A                     
 11759                           ; BSR set to: 0
 11760  00494A  0E02               	movlw	2
 11761  00494C  61A3               	cpfslt	update_command@apply& (0+255),b
 11762  00494E  EFAB  F024         	goto	u20781
 11763  004952  EFAD  F024         	goto	u20780
 11764  004956                     u20781:
 11765  004956  EF5B  F026         	goto	l18981
 11766  00495A                     u20780:
 11767  00495A                     
 11768                           ; BSR set to: 0
 11769  00495A  C0A3  F194         	movff	update_command@apply,_g_nvm+4
 11770  00495E  EF5B  F026         	goto	l18981
 11771  004962                     l18927:
 11772                           
 11773                           ; BSR set to: 0
 11774  004962  0E00               	movlw	0
 11775  004964  0101               	movlb	1	; () banked
 11776  004966  6F93               	movwf	(_g_nvm+3)& (0+255),b
 11777  004968  EF5B  F026         	goto	l18981
 11778  00496C                     l18929:
 11779                           
 11780                           ; BSR set to: 0
 11781  00496C  0E01               	movlw	1
 11782  00496E  0101               	movlb	1	; () banked
 11783  004970  6F93               	movwf	(_g_nvm+3)& (0+255),b
 11784  004972  EF5B  F026         	goto	l18981
 11785  004976                     l18931:
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;app_atcommand.c: 373: if (chno == 0) g_nvm.flash.gasOffset = _atof(status->apply_params
      +                          );
 11789  004976  519E               	movf	update_command@chno& (0+255),w,b
 11790  004978  A4D8               	btfss	status,2,c
 11791  00497A  EFC1  F024         	goto	u20791
 11792  00497E  EFC3  F024         	goto	u20790
 11793  004982                     u20791:
 11794  004982  EFD5  F024         	goto	l18935
 11795  004986                     u20790:
 11796  004986                     
 11797                           ; BSR set to: 0
 11798  004986  0E10               	movlw	16
 11799  004988  259C               	addwf	update_command@status& (0+255),w,b
 11800  00498A  6F79               	movwf	__atof@str& (0+255),b
 11801  00498C  0E00               	movlw	0
 11802  00498E  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11803  004990  6F7A               	movwf	(__atof@str+1)& (0+255),b
 11804  004992  ECC7  F039         	call	__atof	;wreg free
 11805  004996  C079  F19D         	movff	?__atof,_g_nvm+13
 11806  00499A  C07A  F19E         	movff	?__atof+1,_g_nvm+14
 11807  00499E  C07B  F19F         	movff	?__atof+2,_g_nvm+15
 11808  0049A2  C07C  F1A0         	movff	?__atof+3,_g_nvm+16
 11809  0049A6  EF5B  F026         	goto	l18981
 11810  0049AA                     l18935:
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;app_atcommand.c: 374: else g_nvm.flash.tempOffset = _atof(status->apply_params);
 11814  0049AA  0E10               	movlw	16
 11815  0049AC  259C               	addwf	update_command@status& (0+255),w,b
 11816  0049AE  6F79               	movwf	__atof@str& (0+255),b
 11817  0049B0  0E00               	movlw	0
 11818  0049B2  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11819  0049B4  6F7A               	movwf	(__atof@str+1)& (0+255),b
 11820  0049B6  ECC7  F039         	call	__atof	;wreg free
 11821  0049BA  C079  F1A1         	movff	?__atof,_g_nvm+17
 11822  0049BE  C07A  F1A2         	movff	?__atof+1,_g_nvm+18
 11823  0049C2  C07B  F1A3         	movff	?__atof+2,_g_nvm+19
 11824  0049C6  C07C  F1A4         	movff	?__atof+3,_g_nvm+20
 11825  0049CA  EF5B  F026         	goto	l18981
 11826  0049CE                     l18937:
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;app_atcommand.c: 377: if (split_param(status->apply_params, status->manual_params, 3, 3
      +                          2) >= 2) {
 11830  0049CE  0E10               	movlw	16
 11831  0049D0  259C               	addwf	update_command@status& (0+255),w,b
 11832  0049D2  6E05               	movwf	split_param@src^0,c
 11833  0049D4  0E00               	movlw	0
 11834  0049D6  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11835  0049D8  6E06               	movwf	(split_param@src+1)^0,c
 11836  0049DA  0E30               	movlw	48
 11837  0049DC  259C               	addwf	update_command@status& (0+255),w,b
 11838  0049DE  6E07               	movwf	split_param@params^0,c
 11839  0049E0  0E00               	movlw	0
 11840  0049E2  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11841  0049E4  6E08               	movwf	(split_param@params+1)^0,c
 11842  0049E6  0E03               	movlw	3
 11843  0049E8  6E09               	movwf	split_param@m^0,c
 11844  0049EA  0E20               	movlw	32
 11845  0049EC  6E0A               	movwf	split_param@n^0,c
 11846  0049EE  EC9F  F04C         	call	_split_param	;wreg free
 11847  0049F2  6E5C               	movwf	??_update_command^0,c
 11848  0049F4  0E01               	movlw	1
 11849  0049F6  645C               	cpfsgt	??_update_command^0,c
 11850  0049F8  EF00  F025         	goto	u20801
 11851  0049FC  EF02  F025         	goto	u20800
 11852  004A00                     u20801:
 11853  004A00  EF88  F026         	goto	l1313
 11854  004A04                     u20800:
 11855  004A04                     
 11856                           ;app_atcommand.c: 378: g_nvm.flash.baseLine_uV = _atof(status->manual_params[0]);
 11857  004A04  0E30               	movlw	48
 11858  004A06  0100               	movlb	0	; () banked
 11859  004A08  259C               	addwf	update_command@status& (0+255),w,b
 11860  004A0A  6F79               	movwf	__atof@str& (0+255),b
 11861  004A0C  0E00               	movlw	0
 11862  004A0E  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11863  004A10  6F7A               	movwf	(__atof@str+1)& (0+255),b
 11864  004A12  ECC7  F039         	call	__atof	;wreg free
 11865  004A16  C079  F195         	movff	?__atof,_g_nvm+5
 11866  004A1A  C07A  F196         	movff	?__atof+1,_g_nvm+6
 11867  004A1E  C07B  F197         	movff	?__atof+2,_g_nvm+7
 11868  004A22  C07C  F198         	movff	?__atof+3,_g_nvm+8
 11869                           
 11870                           ;app_atcommand.c: 379: g_nvm.flash.nA_per_ppm = _atof(status->manual_params[1]);
 11871  004A26  0E50               	movlw	80
 11872  004A28  0100               	movlb	0	; () banked
 11873  004A2A  259C               	addwf	update_command@status& (0+255),w,b
 11874  004A2C  6F79               	movwf	__atof@str& (0+255),b
 11875  004A2E  0E00               	movlw	0
 11876  004A30  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11877  004A32  6F7A               	movwf	(__atof@str+1)& (0+255),b
 11878  004A34  ECC7  F039         	call	__atof	;wreg free
 11879  004A38  C079  F199         	movff	?__atof,_g_nvm+9
 11880  004A3C  C07A  F19A         	movff	?__atof+1,_g_nvm+10
 11881  004A40  C07B  F19B         	movff	?__atof+2,_g_nvm+11
 11882  004A44  C07C  F19C         	movff	?__atof+3,_g_nvm+12
 11883  004A48                     
 11884                           ;app_atcommand.c: 380: g_nvm.flash.calib_temp = g_last_value[LV_TEMP];
 11885  004A48  C130  F1A5         	movff	_g_last_value+20,_g_nvm+21
 11886  004A4C  C131  F1A6         	movff	_g_last_value+21,_g_nvm+22
 11887  004A50  C132  F1A7         	movff	_g_last_value+22,_g_nvm+23
 11888  004A54  C133  F1A8         	movff	_g_last_value+23,_g_nvm+24
 11889                           
 11890                           ;app_atcommand.c: 381: } else
 11891  004A58  EF5B  F026         	goto	l18981
 11892  004A5C                     l18943:
 11893                           
 11894                           ; BSR set to: 0
 11895  004A5C  0E10               	movlw	16
 11896  004A5E  259C               	addwf	update_command@status& (0+255),w,b
 11897  004A60  6F79               	movwf	__atof@str& (0+255),b
 11898  004A62  0E00               	movlw	0
 11899  004A64  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11900  004A66  6F7A               	movwf	(__atof@str+1)& (0+255),b
 11901  004A68  ECC7  F039         	call	__atof	;wreg free
 11902  004A6C  C079  F199         	movff	?__atof,_g_nvm+9
 11903  004A70  C07A  F19A         	movff	?__atof+1,_g_nvm+10
 11904  004A74  C07B  F19B         	movff	?__atof+2,_g_nvm+11
 11905  004A78  C07C  F19C         	movff	?__atof+3,_g_nvm+12
 11906  004A7C  EF5B  F026         	goto	l18981
 11907  004A80                     l1334:
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;app_atcommand.c: 386: g_nvm.flash.baseLine_uV = g_last_value[LV_GAS_VOLT];
 11911  004A80  C11C  F195         	movff	_g_last_value,_g_nvm+5
 11912  004A84  C11D  F196         	movff	_g_last_value+1,_g_nvm+6
 11913  004A88  C11E  F197         	movff	_g_last_value+2,_g_nvm+7
 11914  004A8C  C11F  F198         	movff	_g_last_value+3,_g_nvm+8
 11915                           
 11916                           ;app_atcommand.c: 387: g_nvm.flash.calib_temp = g_last_value[LV_TEMP];
 11917  004A90  C130  F1A5         	movff	_g_last_value+20,_g_nvm+21
 11918  004A94  C131  F1A6         	movff	_g_last_value+21,_g_nvm+22
 11919  004A98  C132  F1A7         	movff	_g_last_value+22,_g_nvm+23
 11920  004A9C  C133  F1A8         	movff	_g_last_value+23,_g_nvm+24
 11921                           
 11922                           ;app_atcommand.c: 388: break;
 11923  004AA0  EF5B  F026         	goto	l18981
 11924  004AA4                     l18945:
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;app_atcommand.c: 390: apply = (uint8_t)_atoi(status->apply_params);
 11928  004AA4  0E10               	movlw	16
 11929  004AA6  259C               	addwf	update_command@status& (0+255),w,b
 11930  004AA8  6E0D               	movwf	__atoi@str^0,c
 11931  004AAA  0E00               	movlw	0
 11932  004AAC  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11933  004AAE  6E0E               	movwf	(__atoi@str+1)^0,c
 11934  004AB0  EC26  F04A         	call	__atoi	;wreg free
 11935  004AB4  500D               	movf	?__atoi^0,w,c
 11936  004AB6  0100               	movlb	0	; () banked
 11937  004AB8  6FA3               	movwf	update_command@apply& (0+255),b
 11938  004ABA                     
 11939                           ; BSR set to: 0
 11940                           ;app_atcommand.c: 391: if (apply >= LEVEL_1 && apply <= LEVEL_15) {
 11941  004ABA  51A3               	movf	update_command@apply& (0+255),w,b
 11942  004ABC  B4D8               	btfsc	status,2,c
 11943  004ABE  EF63  F025         	goto	u20811
 11944  004AC2  EF65  F025         	goto	u20810
 11945  004AC6                     u20811:
 11946  004AC6  EF5B  F026         	goto	l18981
 11947  004ACA                     u20810:
 11948  004ACA                     
 11949                           ; BSR set to: 0
 11950  004ACA  0E10               	movlw	16
 11951  004ACC  61A3               	cpfslt	update_command@apply& (0+255),b
 11952  004ACE  EF6B  F025         	goto	u20821
 11953  004AD2  EF6D  F025         	goto	u20820
 11954  004AD6                     u20821:
 11955  004AD6  EF5B  F026         	goto	l18981
 11956  004ADA                     u20820:
 11957  004ADA                     
 11958                           ; BSR set to: 0
 11959                           ;app_atcommand.c: 392: g_nvm.flash.window_size = apply;
 11960  004ADA  C0A3  F192         	movff	update_command@apply,_g_nvm+2
 11961  004ADE                     
 11962                           ; BSR set to: 0
 11963                           ;app_atcommand.c: 393: Set_KamanFilter_Sensitivity(g_nvm.flash.window_size);
 11964  004ADE  0101               	movlb	1	; () banked
 11965  004AE0  5192               	movf	(_g_nvm+2)& (0+255),w,b
 11966  004AE2  EC0F  F03C         	call	_Set_KamanFilter_Sensitivity
 11967  004AE6  EF5B  F026         	goto	l18981
 11968  004AEA                     l18955:
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;app_atcommand.c: 396: g_nvm.flash.KMf_e_measure = _atof(status->apply_params);
 11972  004AEA  0E10               	movlw	16
 11973  004AEC  259C               	addwf	update_command@status& (0+255),w,b
 11974  004AEE  6F79               	movwf	__atof@str& (0+255),b
 11975  004AF0  0E00               	movlw	0
 11976  004AF2  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 11977  004AF4  6F7A               	movwf	(__atof@str+1)& (0+255),b
 11978  004AF6  ECC7  F039         	call	__atof	;wreg free
 11979  004AFA  C079  F1A9         	movff	?__atof,_g_nvm+25
 11980  004AFE  C07A  F1AA         	movff	?__atof+1,_g_nvm+26
 11981  004B02  C07B  F1AB         	movff	?__atof+2,_g_nvm+27
 11982  004B06  C07C  F1AC         	movff	?__atof+3,_g_nvm+28
 11983  004B0A                     
 11984                           ;app_atcommand.c: 397: Kalman_setMeasurementError(&kalmanFilter, g_nvm.flash.KMf_e_measu
      +                          re);
 11985  004B0A  0ED9               	movlw	low _kalmanFilter
 11986  004B0C  6E01               	movwf	Kalman_setMeasurementError@pObj^0,c
 11987  004B0E  0E01               	movlw	high _kalmanFilter
 11988  004B10  6E02               	movwf	(Kalman_setMeasurementError@pObj+1)^0,c
 11989  004B12  C1A9  F003         	movff	_g_nvm+25,Kalman_setMeasurementError@mea_e
 11990  004B16  C1AA  F004         	movff	_g_nvm+26,Kalman_setMeasurementError@mea_e+1
 11991  004B1A  C1AB  F005         	movff	_g_nvm+27,Kalman_setMeasurementError@mea_e+2
 11992  004B1E  C1AC  F006         	movff	_g_nvm+28,Kalman_setMeasurementError@mea_e+3
 11993  004B22  ECEE  F06A         	call	_Kalman_setMeasurementError	;wreg free
 11994                           
 11995                           ;app_atcommand.c: 398: break;
 11996  004B26  EF5B  F026         	goto	l18981
 11997  004B2A                     l18959:
 11998                           
 11999                           ; BSR set to: 0
 12000                           ;app_atcommand.c: 400: g_nvm.flash.KMF_e_estimate = _atof(status->apply_params);
 12001  004B2A  0E10               	movlw	16
 12002  004B2C  259C               	addwf	update_command@status& (0+255),w,b
 12003  004B2E  6F79               	movwf	__atof@str& (0+255),b
 12004  004B30  0E00               	movlw	0
 12005  004B32  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 12006  004B34  6F7A               	movwf	(__atof@str+1)& (0+255),b
 12007  004B36  ECC7  F039         	call	__atof	;wreg free
 12008  004B3A  C079  F1AD         	movff	?__atof,_g_nvm+29
 12009  004B3E  C07A  F1AE         	movff	?__atof+1,_g_nvm+30
 12010  004B42  C07B  F1AF         	movff	?__atof+2,_g_nvm+31
 12011  004B46  C07C  F1B0         	movff	?__atof+3,_g_nvm+32
 12012  004B4A                     
 12013                           ;app_atcommand.c: 401: Kalman_setEstimateError(&kalmanFilter, g_nvm.flash.KMF_e_estimate
      +                          );
 12014  004B4A  0ED9               	movlw	low _kalmanFilter
 12015  004B4C  6E01               	movwf	Kalman_setEstimateError@pObj^0,c
 12016  004B4E  0E01               	movlw	high _kalmanFilter
 12017  004B50  6E02               	movwf	(Kalman_setEstimateError@pObj+1)^0,c
 12018  004B52  C1AD  F003         	movff	_g_nvm+29,Kalman_setEstimateError@est_e
 12019  004B56  C1AE  F004         	movff	_g_nvm+30,Kalman_setEstimateError@est_e+1
 12020  004B5A  C1AF  F005         	movff	_g_nvm+31,Kalman_setEstimateError@est_e+2
 12021  004B5E  C1B0  F006         	movff	_g_nvm+32,Kalman_setEstimateError@est_e+3
 12022  004B62  ECD1  F06A         	call	_Kalman_setEstimateError	;wreg free
 12023                           
 12024                           ;app_atcommand.c: 402: break;
 12025  004B66  EF5B  F026         	goto	l18981
 12026  004B6A                     l18963:
 12027                           
 12028                           ; BSR set to: 0
 12029  004B6A  0E10               	movlw	16
 12030  004B6C  259C               	addwf	update_command@status& (0+255),w,b
 12031  004B6E  6E0D               	movwf	__atoi@str^0,c
 12032  004B70  0E00               	movlw	0
 12033  004B72  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 12034  004B74  6E0E               	movwf	(__atoi@str+1)^0,c
 12035  004B76  EC26  F04A         	call	__atoi	;wreg free
 12036  004B7A  C00D  F1C9         	movff	?__atoi,_g_nvm+57
 12037  004B7E  C00E  F1CA         	movff	?__atoi+1,_g_nvm+58
 12038  004B82  C00F  F1CB         	movff	?__atoi+2,_g_nvm+59
 12039  004B86  C010  F1CC         	movff	?__atoi+3,_g_nvm+60
 12040  004B8A  EF5B  F026         	goto	l18981
 12041  004B8E                     l18965:
 12042                           
 12043                           ; BSR set to: 0
 12044  004B8E  0E10               	movlw	16
 12045  004B90  259C               	addwf	update_command@status& (0+255),w,b
 12046  004B92  6E0D               	movwf	__atoi@str^0,c
 12047  004B94  0E00               	movlw	0
 12048  004B96  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 12049  004B98  6E0E               	movwf	(__atoi@str+1)^0,c
 12050  004B9A  EC26  F04A         	call	__atoi	;wreg free
 12051  004B9E  C00D  F1C5         	movff	?__atoi,_g_nvm+53
 12052  004BA2  C00E  F1C6         	movff	?__atoi+1,_g_nvm+54
 12053  004BA6  C00F  F1C7         	movff	?__atoi+2,_g_nvm+55
 12054  004BAA  C010  F1C8         	movff	?__atoi+3,_g_nvm+56
 12055  004BAE  EF5B  F026         	goto	l18981
 12056  004BB2                     l18967:
 12057                           
 12058                           ; BSR set to: 0
 12059  004BB2  0E10               	movlw	16
 12060  004BB4  259C               	addwf	update_command@status& (0+255),w,b
 12061  004BB6  6E0D               	movwf	__atoi@str^0,c
 12062  004BB8  0E00               	movlw	0
 12063  004BBA  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 12064  004BBC  6E0E               	movwf	(__atoi@str+1)^0,c
 12065  004BBE  EC26  F04A         	call	__atoi	;wreg free
 12066  004BC2  500D               	movf	?__atoi^0,w,c
 12067  004BC4  0100               	movlb	0	; () banked
 12068  004BC6  6FA3               	movwf	update_command@apply& (0+255),b
 12069  004BC8                     
 12070                           ; BSR set to: 0
 12071  004BC8  0E02               	movlw	2
 12072  004BCA  61A3               	cpfslt	update_command@apply& (0+255),b
 12073  004BCC  EFEA  F025         	goto	u20831
 12074  004BD0  EFEC  F025         	goto	u20830
 12075  004BD4                     u20831:
 12076  004BD4  EF5B  F026         	goto	l18981
 12077  004BD8                     u20830:
 12078  004BD8                     
 12079                           ; BSR set to: 0
 12080  004BD8  C0A3  F1B1         	movff	update_command@apply,_g_nvm+33
 12081  004BDC  EF5B  F026         	goto	l18981
 12082  004BE0                     l18973:
 12083                           
 12084                           ; BSR set to: 0
 12085  004BE0  0E10               	movlw	16
 12086  004BE2  259C               	addwf	update_command@status& (0+255),w,b
 12087  004BE4  6F79               	movwf	__atof@str& (0+255),b
 12088  004BE6  0E00               	movlw	0
 12089  004BE8  219D               	addwfc	(update_command@status+1)& (0+255),w,b
 12090  004BEA  6F7A               	movwf	(__atof@str+1)& (0+255),b
 12091  004BEC  ECC7  F039         	call	__atof	;wreg free
 12092  004BF0  C079  F1BF         	movff	?__atof,_g_nvm+47
 12093  004BF4  C07A  F1C0         	movff	?__atof+1,_g_nvm+48
 12094  004BF8  C07B  F1C1         	movff	?__atof+2,_g_nvm+49
 12095  004BFC  C07C  F1C2         	movff	?__atof+3,_g_nvm+50
 12096  004C00  EF5B  F026         	goto	l18981
 12097  004C04                     l18975:
 12098                           
 12099                           ; BSR set to: 0
 12100  004C04  0E01               	movlw	1
 12101  004C06  6FE5               	movwf	(_g_sens_autoCalib+2)& (0+255),b	;volatile
 12102  004C08  EF5B  F026         	goto	l18981
 12103  004C0C                     l18979:
 12104                           
 12105                           ; BSR set to: 0
 12106  004C0C  EE20 F003          	lfsr	2,3
 12107  004C10  519C               	movf	update_command@status& (0+255),w,b
 12108  004C12  26D9               	addwf	fsr2l,f,c
 12109  004C14  519D               	movf	(update_command@status+1)& (0+255),w,b
 12110  004C16  22DA               	addwfc	fsr2h,f,c
 12111  004C18  50DF               	movf	indf2,w,c
 12112                           
 12113                           ; Switch size 1, requested type "simple"
 12114                           ; Number of cases is 19, Range of values is 3 to 32
 12115                           ; switch strategies available:
 12116                           ; Name         Instructions Cycles
 12117                           ; simple_byte           58    30 (average)
 12118                           ;	Chosen strategy is simple_byte
 12119  004C1A  0A03               	xorlw	3	; case 3
 12120  004C1C  B4D8               	btfsc	status,2,c
 12121  004C1E  EF25  F024         	goto	l18887
 12122  004C22  0A07               	xorlw	7	; case 4
 12123  004C24  B4D8               	btfsc	status,2,c
 12124  004C26  EF29  F024         	goto	l18891
 12125  004C2A  0A14               	xorlw	20	; case 16
 12126  004C2C  B4D8               	btfsc	status,2,c
 12127  004C2E  EF02  F026         	goto	l18975
 12128  004C32  0A01               	xorlw	1	; case 17
 12129  004C34  B4D8               	btfsc	status,2,c
 12130  004C36  EF2D  F024         	goto	l18895
 12131  004C3A  0A03               	xorlw	3	; case 18
 12132  004C3C  B4D8               	btfsc	status,2,c
 12133  004C3E  EFB1  F024         	goto	l18927
 12134  004C42  0A01               	xorlw	1	; case 19
 12135  004C44  B4D8               	btfsc	status,2,c
 12136  004C46  EFB6  F024         	goto	l18929
 12137  004C4A  0A07               	xorlw	7	; case 20
 12138  004C4C  B4D8               	btfsc	status,2,c
 12139  004C4E  EFE7  F024         	goto	l18937
 12140  004C52  0A01               	xorlw	1	; case 21
 12141  004C54  B4D8               	btfsc	status,2,c
 12142  004C56  EF40  F025         	goto	l1334
 12143  004C5A  0A03               	xorlw	3	; case 22
 12144  004C5C  B4D8               	btfsc	status,2,c
 12145  004C5E  EF2E  F025         	goto	l18943
 12146  004C62  0A01               	xorlw	1	; case 23
 12147  004C64  B4D8               	btfsc	status,2,c
 12148  004C66  EFBB  F024         	goto	l18931
 12149  004C6A  0A0F               	xorlw	15	; case 24
 12150  004C6C  B4D8               	btfsc	status,2,c
 12151  004C6E  EF83  F024         	goto	l18915
 12152  004C72  0A01               	xorlw	1	; case 25
 12153  004C74  B4D8               	btfsc	status,2,c
 12154  004C76  EF9A  F024         	goto	l18921
 12155  004C7A  0A03               	xorlw	3	; case 26
 12156  004C7C  B4D8               	btfsc	status,2,c
 12157  004C7E  EF52  F025         	goto	l18945
 12158  004C82  0A01               	xorlw	1	; case 27
 12159  004C84  B4D8               	btfsc	status,2,c
 12160  004C86  EF75  F025         	goto	l18955
 12161  004C8A  0A07               	xorlw	7	; case 28
 12162  004C8C  B4D8               	btfsc	status,2,c
 12163  004C8E  EF95  F025         	goto	l18959
 12164  004C92  0A01               	xorlw	1	; case 29
 12165  004C94  B4D8               	btfsc	status,2,c
 12166  004C96  EFD9  F025         	goto	l18967
 12167  004C9A  0A03               	xorlw	3	; case 30
 12168  004C9C  B4D8               	btfsc	status,2,c
 12169  004C9E  EFF0  F025         	goto	l18973
 12170  004CA2  0A01               	xorlw	1	; case 31
 12171  004CA4  B4D8               	btfsc	status,2,c
 12172  004CA6  EFB5  F025         	goto	l18963
 12173  004CAA  0A3F               	xorlw	63	; case 32
 12174  004CAC  B4D8               	btfsc	status,2,c
 12175  004CAE  EFC7  F025         	goto	l18965
 12176  004CB2  EF5B  F026         	goto	l18981
 12177  004CB6                     l18981:
 12178                           
 12179                           ;app_atcommand.c: 410: if (status->atcommand >= ATCSMODEL && status->atcommand <= ATCEXT
      +                          M)
 12180  004CB6  0100               	movlb	0	; () banked
 12181  004CB8  EE20 F003          	lfsr	2,3
 12182  004CBC  519C               	movf	update_command@status& (0+255),w,b
 12183  004CBE  26D9               	addwf	fsr2l,f,c
 12184  004CC0  519D               	movf	(update_command@status+1)& (0+255),w,b
 12185  004CC2  22DA               	addwfc	fsr2h,f,c
 12186  004CC4  0E10               	movlw	16
 12187  004CC6  64DF               	cpfsgt	indf2,c
 12188  004CC8  EF68  F026         	goto	u20841
 12189  004CCC  EF6A  F026         	goto	u20840
 12190  004CD0                     u20841:
 12191  004CD0  EF88  F026         	goto	l1313
 12192  004CD4                     u20840:
 12193  004CD4                     
 12194                           ; BSR set to: 0
 12195  004CD4  EE20 F003          	lfsr	2,3
 12196  004CD8  519C               	movf	update_command@status& (0+255),w,b
 12197  004CDA  26D9               	addwf	fsr2l,f,c
 12198  004CDC  519D               	movf	(update_command@status+1)& (0+255),w,b
 12199  004CDE  22DA               	addwfc	fsr2h,f,c
 12200  004CE0  0E21               	movlw	33
 12201  004CE2  60DF               	cpfslt	indf2,c
 12202  004CE4  EF76  F026         	goto	u20851
 12203  004CE8  EF78  F026         	goto	u20850
 12204  004CEC                     u20851:
 12205  004CEC  EF88  F026         	goto	l1313
 12206  004CF0                     u20850:
 12207  004CF0                     
 12208                           ; BSR set to: 0
 12209                           ;app_atcommand.c: 411: status->last_update = nvm_write_flash_all(&g_nvm.flash);
 12210  004CF0  0E91               	movlw	low (_g_nvm+1)
 12211  004CF2  6E11               	movwf	nvm_write_flash_all@flash^0,c
 12212  004CF4  0E01               	movlw	high (_g_nvm+1)
 12213  004CF6  6E12               	movwf	(nvm_write_flash_all@flash+1)^0,c
 12214  004CF8  ECBF  F066         	call	_nvm_write_flash_all	;wreg free
 12215  004CFC  6E5C               	movwf	??_update_command^0,c
 12216  004CFE  0100               	movlb	0	; () banked
 12217  004D00  EE20 F001          	lfsr	2,1
 12218  004D04  519C               	movf	update_command@status& (0+255),w,b
 12219  004D06  26D9               	addwf	fsr2l,f,c
 12220  004D08  519D               	movf	(update_command@status+1)& (0+255),w,b
 12221  004D0A  22DA               	addwfc	fsr2h,f,c
 12222  004D0C  C05C  FFDF         	movff	??_update_command,indf2
 12223  004D10                     l1313:
 12224  004D10  0012               	return		;funcret
 12225  004D12                     __end_of_update_command:
 12226                           	callstack 0
 12227                           
 12228 ;; *************** function _split_param *****************
 12229 ;; Defined at:
 12230 ;;		line 321 in file "app_atcommand.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;  src             2    4[COMRAM] PTR unsigned char 
 12233 ;;		 -> g_atcommand(243), 
 12234 ;;  params          2    6[COMRAM] PTR unsigned char 
 12235 ;;		 -> g_atcommand(243), 
 12236 ;;  m               1    8[COMRAM] unsigned char 
 12237 ;;  n               1    9[COMRAM] unsigned char 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;  ch              1   13[COMRAM] unsigned char 
 12240 ;;  cnt             1   15[COMRAM] unsigned char 
 12241 ;;  i               1   14[COMRAM] unsigned char 
 12242 ;;  len             1   12[COMRAM] unsigned char 
 12243 ;; Return value:  Size  Location     Type
 12244 ;;                  1    wreg      unsigned char 
 12245 ;; Registers used:
 12246 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12247 ;; Tracked objects:
 12248 ;;		On entry : 0/0
 12249 ;;		On exit  : 0/0
 12250 ;;		Unchanged: 0/0
 12251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12252 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12253 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12255 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12256 ;;Total ram usage:       12 bytes
 12257 ;; Hardware stack levels used: 1
 12258 ;; Hardware stack levels required when called: 2
 12259 ;; This function calls:
 12260 ;;		__strlen
 12261 ;; This function is called by:
 12262 ;;		_update_command
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text62
 12267  00993E                     __ptext62:
 12268                           	callstack 0
 12269  00993E                     _split_param:
 12270                           	callstack 26
 12271  00993E                     
 12272                           ;app_atcommand.c: 323: if(!src || !params) return 0;
 12273  00993E  5005               	movf	split_param@src^0,w,c
 12274  009940  1006               	iorwf	(split_param@src+1)^0,w,c
 12275  009942  B4D8               	btfsc	status,2,c
 12276  009944  EFA6  F04C         	goto	u11931
 12277  009948  EFA8  F04C         	goto	u11930
 12278  00994C                     u11931:
 12279  00994C  EFB1  F04C         	goto	l11855
 12280  009950                     u11930:
 12281  009950  5007               	movf	split_param@params^0,w,c
 12282  009952  1008               	iorwf	(split_param@params+1)^0,w,c
 12283  009954  A4D8               	btfss	status,2,c
 12284  009956  EFAF  F04C         	goto	u11941
 12285  00995A  EFB1  F04C         	goto	u11940
 12286  00995E                     u11941:
 12287  00995E  EFB4  F04C         	goto	l11859
 12288  009962                     u11940:
 12289  009962                     l11855:
 12290  009962  0E00               	movlw	0
 12291  009964  EF31  F04D         	goto	l1297
 12292  009968                     l11859:
 12293                           
 12294                           ;app_atcommand.c: 324: uint8_t len = _strlen(src);
 12295  009968  C005  F001         	movff	split_param@src,__strlen@source
 12296  00996C  C006  F002         	movff	split_param@src+1,__strlen@source+1
 12297  009970  ECFF  F065         	call	__strlen	;wreg free
 12298  009974  5001               	movf	?__strlen^0,w,c
 12299  009976  6E0D               	movwf	split_param@len^0,c
 12300  009978                     
 12301                           ;app_atcommand.c: 325: uint8_t i = 0, cnt = 0;
 12302  009978  0E00               	movlw	0
 12303  00997A  6E0F               	movwf	split_param@i^0,c
 12304  00997C  0E00               	movlw	0
 12305  00997E  6E10               	movwf	split_param@cnt^0,c
 12306                           
 12307                           ;app_atcommand.c: 326: while (len--) {
 12308  009980  EF14  F04D         	goto	l11895
 12309  009984                     l11865:
 12310                           
 12311                           ;app_atcommand.c: 327: char ch = *src;
 12312  009984  C005  FFD9         	movff	split_param@src,fsr2l
 12313  009988  C006  FFDA         	movff	split_param@src+1,fsr2h
 12314  00998C  50DF               	movf	indf2,w,c
 12315  00998E  6E0E               	movwf	split_param@ch^0,c
 12316  009990                     
 12317                           ;app_atcommand.c: 328: if (ch == ',') {
 12318  009990  0E2C               	movlw	44
 12319  009992  180E               	xorwf	split_param@ch^0,w,c
 12320  009994  A4D8               	btfss	status,2,c
 12321  009996  EFCF  F04C         	goto	u11951
 12322  00999A  EFD1  F04C         	goto	u11950
 12323  00999E                     u11951:
 12324  00999E  EFF4  F04C         	goto	l11883
 12325  0099A2                     u11950:
 12326  0099A2                     
 12327                           ;app_atcommand.c: 329: if (cnt >= m) return 0;
 12328  0099A2  5009               	movf	split_param@m^0,w,c
 12329  0099A4  5C10               	subwf	split_param@cnt^0,w,c
 12330  0099A6  A0D8               	btfss	status,0,c
 12331  0099A8  EFD8  F04C         	goto	u11961
 12332  0099AC  EFDA  F04C         	goto	u11960
 12333  0099B0                     u11961:
 12334  0099B0  EFDC  F04C         	goto	l11875
 12335  0099B4                     u11960:
 12336  0099B4  EFB1  F04C         	goto	l11855
 12337  0099B8                     l11875:
 12338                           
 12339                           ;app_atcommand.c: 330: *((params + (n * cnt++)) + i++) = '\0';
 12340  0099B8  500A               	movf	split_param@n^0,w,c
 12341  0099BA  0210               	mulwf	split_param@cnt^0,c
 12342  0099BC  C007  F00B         	movff	split_param@params,??_split_param
 12343  0099C0  C008  F00C         	movff	split_param@params+1,??_split_param+1
 12344  0099C4  50F3               	movf	243,w,c
 12345  0099C6  260B               	addwf	??_split_param^0,f,c
 12346  0099C8  50F4               	movf	244,w,c
 12347  0099CA  220C               	addwfc	(??_split_param+1)^0,f,c
 12348  0099CC  500F               	movf	split_param@i^0,w,c
 12349  0099CE  240B               	addwf	??_split_param^0,w,c
 12350  0099D0  6ED9               	movwf	fsr2l,c
 12351  0099D2  0E00               	movlw	0
 12352  0099D4  200C               	addwfc	(??_split_param+1)^0,w,c
 12353  0099D6  6EDA               	movwf	fsr2h,c
 12354  0099D8  0E00               	movlw	0
 12355  0099DA  6EDF               	movwf	indf2,c
 12356  0099DC  2A0F               	incf	split_param@i^0,f,c
 12357  0099DE  2A10               	incf	split_param@cnt^0,f,c
 12358  0099E0                     
 12359                           ;app_atcommand.c: 331: i = 0;
 12360  0099E0  0E00               	movlw	0
 12361  0099E2  6E0F               	movwf	split_param@i^0,c
 12362                           
 12363                           ;app_atcommand.c: 332: } else {
 12364  0099E4  EF12  F04D         	goto	l11893
 12365  0099E8                     l11883:
 12366                           
 12367                           ;app_atcommand.c: 333: *((params + (n * cnt)) + i++) = ch;
 12368  0099E8  500A               	movf	split_param@n^0,w,c
 12369  0099EA  0210               	mulwf	split_param@cnt^0,c
 12370  0099EC  C007  F00B         	movff	split_param@params,??_split_param
 12371  0099F0  C008  F00C         	movff	split_param@params+1,??_split_param+1
 12372  0099F4  50F3               	movf	243,w,c
 12373  0099F6  260B               	addwf	??_split_param^0,f,c
 12374  0099F8  50F4               	movf	244,w,c
 12375  0099FA  220C               	addwfc	(??_split_param+1)^0,f,c
 12376  0099FC  500F               	movf	split_param@i^0,w,c
 12377  0099FE  240B               	addwf	??_split_param^0,w,c
 12378  009A00  6ED9               	movwf	fsr2l,c
 12379  009A02  0E00               	movlw	0
 12380  009A04  200C               	addwfc	(??_split_param+1)^0,w,c
 12381  009A06  6EDA               	movwf	fsr2h,c
 12382  009A08  C00E  FFDF         	movff	split_param@ch,indf2
 12383  009A0C  2A0F               	incf	split_param@i^0,f,c
 12384  009A0E                     
 12385                           ;app_atcommand.c: 334: if (i >= n) return 0;
 12386  009A0E  500A               	movf	split_param@n^0,w,c
 12387  009A10  5C0F               	subwf	split_param@i^0,w,c
 12388  009A12  A0D8               	btfss	status,0,c
 12389  009A14  EF0E  F04D         	goto	u11971
 12390  009A18  EF10  F04D         	goto	u11970
 12391  009A1C                     u11971:
 12392  009A1C  EF12  F04D         	goto	l11893
 12393  009A20                     u11970:
 12394  009A20  EFB1  F04C         	goto	l11855
 12395  009A24                     l11893:
 12396                           
 12397                           ;app_atcommand.c: 335: };app_atcommand.c: 336: src++;
 12398  009A24  4A05               	infsnz	split_param@src^0,f,c
 12399  009A26  2A06               	incf	(split_param@src+1)^0,f,c
 12400  009A28                     l11895:
 12401  009A28  060D               	decf	split_param@len^0,f,c
 12402  009A2A  280D               	incf	split_param@len^0,w,c
 12403  009A2C  A4D8               	btfss	status,2,c
 12404  009A2E  EF1B  F04D         	goto	u11981
 12405  009A32  EF1D  F04D         	goto	u11980
 12406  009A36                     u11981:
 12407  009A36  EFC2  F04C         	goto	l11865
 12408  009A3A                     u11980:
 12409  009A3A                     
 12410                           ;app_atcommand.c: 337: };app_atcommand.c: 338: *((params + (n * cnt)) + i++) = '\0';
 12411  009A3A  500A               	movf	split_param@n^0,w,c
 12412  009A3C  0210               	mulwf	split_param@cnt^0,c
 12413  009A3E  C007  F00B         	movff	split_param@params,??_split_param
 12414  009A42  C008  F00C         	movff	split_param@params+1,??_split_param+1
 12415  009A46  50F3               	movf	243,w,c
 12416  009A48  260B               	addwf	??_split_param^0,f,c
 12417  009A4A  50F4               	movf	244,w,c
 12418  009A4C  220C               	addwfc	(??_split_param+1)^0,f,c
 12419  009A4E  500F               	movf	split_param@i^0,w,c
 12420  009A50  240B               	addwf	??_split_param^0,w,c
 12421  009A52  6ED9               	movwf	fsr2l,c
 12422  009A54  0E00               	movlw	0
 12423  009A56  200C               	addwfc	(??_split_param+1)^0,w,c
 12424  009A58  6EDA               	movwf	fsr2h,c
 12425  009A5A  0E00               	movlw	0
 12426  009A5C  6EDF               	movwf	indf2,c
 12427  009A5E  2A0F               	incf	split_param@i^0,f,c
 12428  009A60                     
 12429                           ;app_atcommand.c: 339: return cnt+1;
 12430  009A60  2810               	incf	split_param@cnt^0,w,c
 12431  009A62                     l1297:
 12432  009A62  0012               	return		;funcret
 12433  009A64                     __end_of_split_param:
 12434                           	callstack 0
 12435                           
 12436 ;; *************** function _nvm_clear_all *****************
 12437 ;; Defined at:
 12438 ;;		line 54 in file "nvm.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;		None
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;  i               1   59[COMRAM] unsigned char 
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  1    wreg      void 
 12445 ;; Registers used:
 12446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12456 ;;Total ram usage:        1 bytes
 12457 ;; Hardware stack levels used: 1
 12458 ;; Hardware stack levels required when called: 8
 12459 ;; This function calls:
 12460 ;;		_nvm_clear
 12461 ;; This function is called by:
 12462 ;;		_update_command
 12463 ;; This function uses a non-reentrant model
 12464 ;;
 12465                           
 12466                           	psect	text63
 12467  00D306                     __ptext63:
 12468                           	callstack 0
 12469  00D306                     _nvm_clear_all:
 12470                           	callstack 20
 12471  00D306                     
 12472                           ;nvm.c: 56: uint8_t i;;nvm.c: 57: nvm_clear();
 12473  00D306  EC32  F06B         	call	_nvm_clear	;wreg free
 12474  00D30A                     
 12475                           ;nvm.c: 58: for (i = 0 ; i < 8 ; i++) g_nvm.flash.serialNum[i] = 0xff;
 12476  00D30A  0E00               	movlw	0
 12477  00D30C  6E3C               	movwf	nvm_clear_all@i^0,c
 12478  00D30E                     l18737:
 12479  00D30E  0ED1               	movlw	low (_g_nvm+65)
 12480  00D310  243C               	addwf	nvm_clear_all@i^0,w,c
 12481  00D312  6ED9               	movwf	fsr2l,c
 12482  00D314  6ADA               	clrf	fsr2h,c
 12483  00D316  0E01               	movlw	high (_g_nvm+65)
 12484  00D318  22DA               	addwfc	fsr2h,f,c
 12485  00D31A  0EFF               	movlw	255
 12486  00D31C  6EDF               	movwf	indf2,c
 12487  00D31E  2A3C               	incf	nvm_clear_all@i^0,f,c
 12488  00D320  0E07               	movlw	7
 12489  00D322  643C               	cpfsgt	nvm_clear_all@i^0,c
 12490  00D324  EF96  F069         	goto	u20621
 12491  00D328  EF98  F069         	goto	u20620
 12492  00D32C                     u20621:
 12493  00D32C  EF87  F069         	goto	l18737
 12494  00D330                     u20620:
 12495  00D330  0012               	return		;funcret
 12496  00D332                     __end_of_nvm_clear_all:
 12497                           	callstack 0
 12498                           
 12499 ;; *************** function __isdigit *****************
 12500 ;; Defined at:
 12501 ;;		line 53 in file "util/_string.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;  src             2    0[COMRAM] PTR const unsigned char 
 12504 ;;		 -> g_atcommand.apply_params(32), g_atcommand(243), 
 12505 ;;  n               2    2[COMRAM] int 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  ch              1    4[COMRAM] unsigned char 
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      unsigned char 
 12510 ;; Registers used:
 12511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12520 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12521 ;;Total ram usage:        5 bytes
 12522 ;; Hardware stack levels used: 1
 12523 ;; Hardware stack levels required when called: 1
 12524 ;; This function calls:
 12525 ;;		Nothing
 12526 ;; This function is called by:
 12527 ;;		_update_command
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           	psect	text64
 12532  00CD34                     __ptext64:
 12533                           	callstack 0
 12534  00CD34                     __isdigit:
 12535                           	callstack 27
 12536  00CD34                     
 12537                           ;_string.c: 55: while (n--) {
 12538  00CD34  EFB0  F066         	goto	l11685
 12539  00CD38                     l11675:
 12540                           
 12541                           ;_string.c: 56: char ch = *src - '0';
 12542  00CD38  C001  FFD9         	movff	__isdigit@src,fsr2l
 12543  00CD3C  C002  FFDA         	movff	__isdigit@src+1,fsr2h
 12544  00CD40  50DF               	movf	indf2,w,c
 12545  00CD42  0FD0               	addlw	208
 12546  00CD44  6E05               	movwf	__isdigit@ch^0,c
 12547  00CD46                     
 12548                           ;_string.c: 57: if (!(ch >= 0 && ch <= 9))
 12549  00CD46  0E09               	movlw	9
 12550  00CD48  6405               	cpfsgt	__isdigit@ch^0,c
 12551  00CD4A  EFA9  F066         	goto	u11741
 12552  00CD4E  EFAB  F066         	goto	u11740
 12553  00CD52                     u11741:
 12554  00CD52  EFAE  F066         	goto	l11683
 12555  00CD56                     u11740:
 12556  00CD56                     
 12557                           ;_string.c: 58: return 0;
 12558  00CD56  0E00               	movlw	0
 12559  00CD58  EFBE  F066         	goto	l103
 12560  00CD5C                     l11683:
 12561                           
 12562                           ;_string.c: 59: src++;
 12563  00CD5C  4A01               	infsnz	__isdigit@src^0,f,c
 12564  00CD5E  2A02               	incf	(__isdigit@src+1)^0,f,c
 12565  00CD60                     l11685:
 12566  00CD60  0603               	decf	__isdigit@n^0,f,c
 12567  00CD62  A0D8               	btfss	status,0,c
 12568  00CD64  0604               	decf	(__isdigit@n+1)^0,f,c
 12569  00CD66  2803               	incf	__isdigit@n^0,w,c
 12570  00CD68  E106               	bnz	u11751
 12571  00CD6A  2804               	incf	(__isdigit@n+1)^0,w,c
 12572  00CD6C  A4D8               	btfss	status,2,c
 12573  00CD6E  EFBB  F066         	goto	u11751
 12574  00CD72  EFBD  F066         	goto	u11750
 12575  00CD76                     u11751:
 12576  00CD76  EF9C  F066         	goto	l11675
 12577  00CD7A                     u11750:
 12578  00CD7A                     
 12579                           ;_string.c: 60: };_string.c: 61: return 1;
 12580  00CD7A  0E01               	movlw	1
 12581  00CD7C                     l103:
 12582  00CD7C  0012               	return		;funcret
 12583  00CD7E                     __end_of__isdigit:
 12584                           	callstack 0
 12585                           
 12586 ;; *************** function __atoi *****************
 12587 ;; Defined at:
 12588 ;;		line 4 in file "util/_atoi.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  str             2   12[COMRAM] PTR const unsigned char 
 12591 ;;		 -> g_atcommand.apply_params(32), g_atcommand(243), 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;  ret             4   22[COMRAM] long 
 12594 ;;  p               2   26[COMRAM] PTR unsigned char 
 12595 ;;		 -> g_atcommand.apply_params(32), g_atcommand(243), 
 12596 ;;  sign            2   20[COMRAM] int 
 12597 ;; Return value:  Size  Location     Type
 12598 ;;                  4   12[COMRAM] long 
 12599 ;; Registers used:
 12600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12607 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12608 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12609 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12610 ;;Total ram usage:       16 bytes
 12611 ;; Hardware stack levels used: 1
 12612 ;; Hardware stack levels required when called: 2
 12613 ;; This function calls:
 12614 ;;		___lmul
 12615 ;; This function is called by:
 12616 ;;		_update_command
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           	psect	text65
 12621  00944C                     __ptext65:
 12622                           	callstack 0
 12623  00944C                     __atoi:
 12624                           	callstack 26
 12625  00944C                     
 12626                           ;_atoi.c: 6: long ret = 0;
 12627  00944C  0E00               	movlw	0
 12628  00944E  6E17               	movwf	__atoi@ret^0,c
 12629  009450  0E00               	movlw	0
 12630  009452  6E18               	movwf	(__atoi@ret+1)^0,c
 12631  009454  0E00               	movlw	0
 12632  009456  6E19               	movwf	(__atoi@ret+2)^0,c
 12633  009458  0E00               	movlw	0
 12634  00945A  6E1A               	movwf	(__atoi@ret+3)^0,c
 12635                           
 12636                           ;_atoi.c: 7: int sign = 1;
 12637  00945C  0E00               	movlw	0
 12638  00945E  6E16               	movwf	(__atoi@sign+1)^0,c
 12639  009460  0E01               	movlw	1
 12640  009462  6E15               	movwf	__atoi@sign^0,c
 12641  009464                     
 12642                           ;_atoi.c: 8: char* p = (char*)str;
 12643  009464  C00D  F01B         	movff	__atoi@str,__atoi@p
 12644  009468  C00E  F01C         	movff	__atoi@str+1,__atoi@p+1
 12645                           
 12646                           ;_atoi.c: 10: while (('-' == *p) || (*p == '+')) {
 12647  00946C  EF49  F04A         	goto	l18669
 12648  009470                     l18663:
 12649                           
 12650                           ;_atoi.c: 11: if (*p == '-') sign = -1;
 12651  009470  C01B  FFD9         	movff	__atoi@p,fsr2l
 12652  009474  C01C  FFDA         	movff	__atoi@p+1,fsr2h
 12653  009478  0E2D               	movlw	45
 12654  00947A  18DE               	xorwf	postinc2,w,c
 12655  00947C  A4D8               	btfss	status,2,c
 12656  00947E  EF43  F04A         	goto	u20531
 12657  009482  EF45  F04A         	goto	u20530
 12658  009486                     u20531:
 12659  009486  EF47  F04A         	goto	l18667
 12660  00948A                     u20530:
 12661  00948A  6815               	setf	__atoi@sign^0,c
 12662  00948C  6816               	setf	(__atoi@sign+1)^0,c
 12663  00948E                     l18667:
 12664                           
 12665                           ;_atoi.c: 12: p++;
 12666  00948E  4A1B               	infsnz	__atoi@p^0,f,c
 12667  009490  2A1C               	incf	(__atoi@p+1)^0,f,c
 12668  009492                     l18669:
 12669  009492  C01B  FFD9         	movff	__atoi@p,fsr2l
 12670  009496  C01C  FFDA         	movff	__atoi@p+1,fsr2h
 12671  00949A  0E2D               	movlw	45
 12672  00949C  18DE               	xorwf	postinc2,w,c
 12673  00949E  B4D8               	btfsc	status,2,c
 12674  0094A0  EF54  F04A         	goto	u20541
 12675  0094A4  EF56  F04A         	goto	u20540
 12676  0094A8                     u20541:
 12677  0094A8  EF38  F04A         	goto	l18663
 12678  0094AC                     u20540:
 12679  0094AC  C01B  FFD9         	movff	__atoi@p,fsr2l
 12680  0094B0  C01C  FFDA         	movff	__atoi@p+1,fsr2h
 12681  0094B4  0E2B               	movlw	43
 12682  0094B6  18DE               	xorwf	postinc2,w,c
 12683  0094B8  B4D8               	btfsc	status,2,c
 12684  0094BA  EF61  F04A         	goto	u20551
 12685  0094BE  EF63  F04A         	goto	u20550
 12686  0094C2                     u20551:
 12687  0094C2  EF38  F04A         	goto	l18663
 12688  0094C6                     u20550:
 12689  0094C6  EF94  F04A         	goto	l18677
 12690  0094CA                     l18673:
 12691                           
 12692                           ;_atoi.c: 16: ret = (ret * 10) + (*p - '0');
 12693  0094CA  0ED0               	movlw	208
 12694  0094CC  6E11               	movwf	??__atoi^0,c
 12695  0094CE  0EFF               	movlw	255
 12696  0094D0  6E12               	movwf	(??__atoi+1)^0,c
 12697  0094D2  C01B  FFD9         	movff	__atoi@p,fsr2l
 12698  0094D6  C01C  FFDA         	movff	__atoi@p+1,fsr2h
 12699  0094DA  50DF               	movf	indf2,w,c
 12700  0094DC  6E13               	movwf	(??__atoi+2)^0,c
 12701  0094DE  6A14               	clrf	(??__atoi+3)^0,c
 12702  0094E0  5011               	movf	??__atoi^0,w,c
 12703  0094E2  2613               	addwf	(??__atoi+2)^0,f,c
 12704  0094E4  5012               	movf	(??__atoi+1)^0,w,c
 12705  0094E6  2214               	addwfc	(??__atoi+3)^0,f,c
 12706  0094E8  C017  F001         	movff	__atoi@ret,___lmul@multiplier
 12707  0094EC  C018  F002         	movff	__atoi@ret+1,___lmul@multiplier+1
 12708  0094F0  C019  F003         	movff	__atoi@ret+2,___lmul@multiplier+2
 12709  0094F4  C01A  F004         	movff	__atoi@ret+3,___lmul@multiplier+3
 12710  0094F8  0E0A               	movlw	10
 12711  0094FA  6E05               	movwf	___lmul@multiplicand^0,c
 12712  0094FC  0E00               	movlw	0
 12713  0094FE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 12714  009500  0E00               	movlw	0
 12715  009502  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 12716  009504  0E00               	movlw	0
 12717  009506  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 12718  009508  EC20  F062         	call	___lmul	;wreg free
 12719  00950C  5013               	movf	(??__atoi+2)^0,w,c
 12720  00950E  2401               	addwf	?___lmul^0,w,c
 12721  009510  6E17               	movwf	__atoi@ret^0,c
 12722  009512  5014               	movf	(??__atoi+3)^0,w,c
 12723  009514  2002               	addwfc	(?___lmul+1)^0,w,c
 12724  009516  6E18               	movwf	(__atoi@ret+1)^0,c
 12725  009518  0E00               	movlw	0
 12726  00951A  2003               	addwfc	(?___lmul+2)^0,w,c
 12727  00951C  6E19               	movwf	(__atoi@ret+2)^0,c
 12728  00951E  0E00               	movlw	0
 12729  009520  2004               	addwfc	(?___lmul+3)^0,w,c
 12730  009522  6E1A               	movwf	(__atoi@ret+3)^0,c
 12731  009524                     
 12732                           ;_atoi.c: 17: p++;
 12733  009524  4A1B               	infsnz	__atoi@p^0,f,c
 12734  009526  2A1C               	incf	(__atoi@p+1)^0,f,c
 12735  009528                     l18677:
 12736  009528  C01B  FFD9         	movff	__atoi@p,fsr2l
 12737  00952C  C01C  FFDA         	movff	__atoi@p+1,fsr2h
 12738  009530  0E2F               	movlw	47
 12739  009532  64DF               	cpfsgt	indf2,c
 12740  009534  EF9E  F04A         	goto	u20561
 12741  009538  EFA0  F04A         	goto	u20560
 12742  00953C                     u20561:
 12743  00953C  EFAC  F04A         	goto	l18681
 12744  009540                     u20560:
 12745  009540  C01B  FFD9         	movff	__atoi@p,fsr2l
 12746  009544  C01C  FFDA         	movff	__atoi@p+1,fsr2h
 12747  009548  0E39               	movlw	57
 12748  00954A  64DF               	cpfsgt	indf2,c
 12749  00954C  EFAA  F04A         	goto	u20571
 12750  009550  EFAC  F04A         	goto	u20570
 12751  009554                     u20571:
 12752  009554  EF65  F04A         	goto	l18673
 12753  009558                     u20570:
 12754  009558                     l18681:
 12755                           
 12756                           ;_atoi.c: 18: };_atoi.c: 20: return (ret * sign);
 12757  009558  C015  F001         	movff	__atoi@sign,___lmul@multiplier
 12758  00955C  C016  F002         	movff	__atoi@sign+1,___lmul@multiplier+1
 12759  009560  0E00               	movlw	0
 12760  009562  BE02               	btfsc	(___lmul@multiplier+1)^0,7,c
 12761  009564  0EFF               	movlw	-1
 12762  009566  6E03               	movwf	(___lmul@multiplier+2)^0,c
 12763  009568  6E04               	movwf	(___lmul@multiplier+3)^0,c
 12764  00956A  C017  F005         	movff	__atoi@ret,___lmul@multiplicand
 12765  00956E  C018  F006         	movff	__atoi@ret+1,___lmul@multiplicand+1
 12766  009572  C019  F007         	movff	__atoi@ret+2,___lmul@multiplicand+2
 12767  009576  C01A  F008         	movff	__atoi@ret+3,___lmul@multiplicand+3
 12768  00957A  EC20  F062         	call	___lmul	;wreg free
 12769  00957E  C001  F00D         	movff	?___lmul,?__atoi
 12770  009582  C002  F00E         	movff	?___lmul+1,?__atoi+1
 12771  009586  C003  F00F         	movff	?___lmul+2,?__atoi+2
 12772  00958A  C004  F010         	movff	?___lmul+3,?__atoi+3
 12773  00958E  0012               	return		;funcret
 12774  009590                     __end_of__atoi:
 12775                           	callstack 0
 12776                           
 12777 ;; *************** function __atof *****************
 12778 ;; Defined at:
 12779 ;;		line 4 in file "util/_atof.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;  str             2   25[BANK0 ] PTR const unsigned char 
 12782 ;;		 -> g_atcommand.manual_params(128), g_atcommand.apply_params(32), g_atcommand(243), 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;  ret             4   37[BANK0 ] float 
 12785 ;;  p               2   43[BANK0 ] PTR unsigned char 
 12786 ;;		 -> g_atcommand.manual_params(128), g_atcommand.apply_params(32), g_atcommand(243), 
 12787 ;;  dotpos          2   41[BANK0 ] unsigned int 
 12788 ;;  cnt             2   35[BANK0 ] unsigned int 
 12789 ;;  sign            2   33[BANK0 ] int 
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  4   25[BANK0 ] float 
 12792 ;; Registers used:
 12793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12802 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12803 ;;Total ram usage:       20 bytes
 12804 ;; Hardware stack levels used: 1
 12805 ;; Hardware stack levels required when called: 2
 12806 ;; This function calls:
 12807 ;;		___fladd
 12808 ;;		___fldiv
 12809 ;;		___flmul
 12810 ;;		___xxtofl
 12811 ;; This function is called by:
 12812 ;;		_update_command
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text66
 12817  00738E                     __ptext66:
 12818                           	callstack 0
 12819  00738E                     __atof:
 12820                           	callstack 26
 12821  00738E                     
 12822                           ;_atof.c: 6: float ret = 0.0f;
 12823  00738E  0E00               	movlw	0
 12824  007390  0100               	movlb	0	; () banked
 12825  007392  6F85               	movwf	__atof@ret& (0+255),b
 12826  007394  0E00               	movlw	0
 12827  007396  6F86               	movwf	(__atof@ret+1)& (0+255),b
 12828  007398  0E00               	movlw	0
 12829  00739A  6F87               	movwf	(__atof@ret+2)& (0+255),b
 12830  00739C  0E00               	movlw	0
 12831  00739E  6F88               	movwf	(__atof@ret+3)& (0+255),b
 12832                           
 12833                           ;_atof.c: 7: int sign = 1;
 12834  0073A0  0E00               	movlw	0
 12835  0073A2  6F82               	movwf	(__atof@sign+1)& (0+255),b
 12836  0073A4  0E01               	movlw	1
 12837  0073A6  6F81               	movwf	__atof@sign& (0+255),b
 12838  0073A8                     
 12839                           ; BSR set to: 0
 12840                           ;_atof.c: 8: char* p = (char*)str;
 12841  0073A8  C079  F08B         	movff	__atof@str,__atof@p
 12842  0073AC  C07A  F08C         	movff	__atof@str+1,__atof@p+1
 12843  0073B0                     
 12844                           ; BSR set to: 0
 12845                           ;_atof.c: 9: unsigned dotpos = 0;
 12846  0073B0  0E00               	movlw	0
 12847  0073B2  6F8A               	movwf	(__atof@dotpos+1)& (0+255),b
 12848  0073B4  0E00               	movlw	0
 12849  0073B6  6F89               	movwf	__atof@dotpos& (0+255),b
 12850  0073B8                     
 12851                           ; BSR set to: 0
 12852                           ;_atof.c: 10: unsigned cnt = 0;
 12853  0073B8  0E00               	movlw	0
 12854  0073BA  6F84               	movwf	(__atof@cnt+1)& (0+255),b
 12855  0073BC  0E00               	movlw	0
 12856  0073BE  6F83               	movwf	__atof@cnt& (0+255),b
 12857                           
 12858                           ;_atof.c: 12: while (('-' == *p) || (*p == '+')) {
 12859  0073C0  EFF5  F039         	goto	l18627
 12860  0073C4                     l18621:
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;_atof.c: 13: if (*p == '-') sign = -1;
 12864  0073C4  C08B  FFD9         	movff	__atof@p,fsr2l
 12865  0073C8  C08C  FFDA         	movff	__atof@p+1,fsr2h
 12866  0073CC  0E2D               	movlw	45
 12867  0073CE  18DE               	xorwf	postinc2,w,c
 12868  0073D0  A4D8               	btfss	status,2,c
 12869  0073D2  EFED  F039         	goto	u20441
 12870  0073D6  EFEF  F039         	goto	u20440
 12871  0073DA                     u20441:
 12872  0073DA  EFF1  F039         	goto	l18625
 12873  0073DE                     u20440:
 12874  0073DE                     
 12875                           ; BSR set to: 0
 12876  0073DE  6981               	setf	__atof@sign& (0+255),b
 12877  0073E0  6982               	setf	(__atof@sign+1)& (0+255),b
 12878  0073E2                     l18625:
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;_atof.c: 14: p++; cnt++;
 12882  0073E2  4B8B               	infsnz	__atof@p& (0+255),f,b
 12883  0073E4  2B8C               	incf	(__atof@p+1)& (0+255),f,b
 12884  0073E6  4B83               	infsnz	__atof@cnt& (0+255),f,b
 12885  0073E8  2B84               	incf	(__atof@cnt+1)& (0+255),f,b
 12886  0073EA                     l18627:
 12887                           
 12888                           ; BSR set to: 0
 12889  0073EA  C08B  FFD9         	movff	__atof@p,fsr2l
 12890  0073EE  C08C  FFDA         	movff	__atof@p+1,fsr2h
 12891  0073F2  0E2D               	movlw	45
 12892  0073F4  18DE               	xorwf	postinc2,w,c
 12893  0073F6  B4D8               	btfsc	status,2,c
 12894  0073F8  EF00  F03A         	goto	u20451
 12895  0073FC  EF02  F03A         	goto	u20450
 12896  007400                     u20451:
 12897  007400  EFE2  F039         	goto	l18621
 12898  007404                     u20450:
 12899  007404                     
 12900                           ; BSR set to: 0
 12901  007404  C08B  FFD9         	movff	__atof@p,fsr2l
 12902  007408  C08C  FFDA         	movff	__atof@p+1,fsr2h
 12903  00740C  0E2B               	movlw	43
 12904  00740E  18DE               	xorwf	postinc2,w,c
 12905  007410  B4D8               	btfsc	status,2,c
 12906  007412  EF0D  F03A         	goto	u20461
 12907  007416  EF0F  F03A         	goto	u20460
 12908  00741A                     u20461:
 12909  00741A  EFE2  F039         	goto	l18621
 12910  00741E                     u20460:
 12911  00741E  EF6E  F03A         	goto	l18641
 12912  007422                     l18631:
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;_atof.c: 18: if (*p == '.') {
 12916  007422  C08B  FFD9         	movff	__atof@p,fsr2l
 12917  007426  C08C  FFDA         	movff	__atof@p+1,fsr2h
 12918  00742A  0E2E               	movlw	46
 12919  00742C  18DE               	xorwf	postinc2,w,c
 12920  00742E  A4D8               	btfss	status,2,c
 12921  007430  EF1C  F03A         	goto	u20471
 12922  007434  EF1E  F03A         	goto	u20470
 12923  007438                     u20471:
 12924  007438  EF24  F03A         	goto	l18635
 12925  00743C                     u20470:
 12926  00743C                     
 12927                           ; BSR set to: 0
 12928                           ;_atof.c: 19: dotpos = cnt;
 12929  00743C  C083  F089         	movff	__atof@cnt,__atof@dotpos
 12930  007440  C084  F08A         	movff	__atof@cnt+1,__atof@dotpos+1
 12931                           
 12932                           ;_atof.c: 20: } else {
 12933  007444  EF69  F03A         	goto	l18637
 12934  007448                     l18635:
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;_atof.c: 21: ret = (ret * 10.0f) + (*p - '0');
 12938  007448  0E00               	movlw	0
 12939  00744A  6E47               	movwf	___flmul@a^0,c
 12940  00744C  0E00               	movlw	0
 12941  00744E  6E48               	movwf	(___flmul@a+1)^0,c
 12942  007450  0E20               	movlw	32
 12943  007452  6E49               	movwf	(___flmul@a+2)^0,c
 12944  007454  0E41               	movlw	65
 12945  007456  6E4A               	movwf	(___flmul@a+3)^0,c
 12946  007458  C085  F043         	movff	__atof@ret,___flmul@b
 12947  00745C  C086  F044         	movff	__atof@ret+1,___flmul@b+1
 12948  007460  C087  F045         	movff	__atof@ret+2,___flmul@b+2
 12949  007464  C088  F046         	movff	__atof@ret+3,___flmul@b+3
 12950  007468  EC73  F02B         	call	___flmul	;wreg free
 12951  00746C  C043  F027         	movff	?___flmul,___fladd@b
 12952  007470  C044  F028         	movff	?___flmul+1,___fladd@b+1
 12953  007474  C045  F029         	movff	?___flmul+2,___fladd@b+2
 12954  007478  C046  F02A         	movff	?___flmul+3,___fladd@b+3
 12955  00747C  0ED0               	movlw	208
 12956  00747E  0100               	movlb	0	; () banked
 12957  007480  6F7D               	movwf	??__atof& (0+255),b
 12958  007482  0EFF               	movlw	255
 12959  007484  6F7E               	movwf	(??__atof+1)& (0+255),b
 12960  007486  C08B  FFD9         	movff	__atof@p,fsr2l
 12961  00748A  C08C  FFDA         	movff	__atof@p+1,fsr2h
 12962  00748E  50DF               	movf	indf2,w,c
 12963  007490  6F7F               	movwf	(??__atof+2)& (0+255),b
 12964  007492  6B80               	clrf	(??__atof+3)& (0+255),b
 12965  007494  517D               	movf	??__atof& (0+255),w,b
 12966  007496  277F               	addwf	(??__atof+2)& (0+255),f,b
 12967  007498  517E               	movf	(??__atof+1)& (0+255),w,b
 12968  00749A  2380               	addwfc	(??__atof+3)& (0+255),f,b
 12969  00749C  C07F  F019         	movff	??__atof+2,___xxtofl@val
 12970  0074A0  C080  F01A         	movff	??__atof+3,___xxtofl@val+1
 12971  0074A4  6A1B               	clrf	(___xxtofl@val+2)^0,c
 12972  0074A6  6A1C               	clrf	(___xxtofl@val+3)^0,c
 12973  0074A8  0E00               	movlw	0
 12974  0074AA  ECC1  F040         	call	___xxtofl
 12975  0074AE  C019  F02B         	movff	?___xxtofl,___fladd@a
 12976  0074B2  C01A  F02C         	movff	?___xxtofl+1,___fladd@a+1
 12977  0074B6  C01B  F02D         	movff	?___xxtofl+2,___fladd@a+2
 12978  0074BA  C01C  F02E         	movff	?___xxtofl+3,___fladd@a+3
 12979  0074BE  EC13  F029         	call	___fladd	;wreg free
 12980  0074C2  C027  F085         	movff	?___fladd,__atof@ret
 12981  0074C6  C028  F086         	movff	?___fladd+1,__atof@ret+1
 12982  0074CA  C029  F087         	movff	?___fladd+2,__atof@ret+2
 12983  0074CE  C02A  F088         	movff	?___fladd+3,__atof@ret+3
 12984  0074D2                     l18637:
 12985                           
 12986                           ;_atof.c: 22: };_atof.c: 23: p++; cnt++;
 12987  0074D2  0100               	movlb	0	; () banked
 12988  0074D4  4B8B               	infsnz	__atof@p& (0+255),f,b
 12989  0074D6  2B8C               	incf	(__atof@p+1)& (0+255),f,b
 12990  0074D8                     
 12991                           ; BSR set to: 0
 12992  0074D8  4B83               	infsnz	__atof@cnt& (0+255),f,b
 12993  0074DA  2B84               	incf	(__atof@cnt+1)& (0+255),f,b
 12994  0074DC                     l18641:
 12995                           
 12996                           ; BSR set to: 0
 12997  0074DC  C08B  FFD9         	movff	__atof@p,fsr2l
 12998  0074E0  C08C  FFDA         	movff	__atof@p+1,fsr2h
 12999  0074E4  0E2F               	movlw	47
 13000  0074E6  64DF               	cpfsgt	indf2,c
 13001  0074E8  EF78  F03A         	goto	u20481
 13002  0074EC  EF7A  F03A         	goto	u20480
 13003  0074F0                     u20481:
 13004  0074F0  EF86  F03A         	goto	l18645
 13005  0074F4                     u20480:
 13006  0074F4                     
 13007                           ; BSR set to: 0
 13008  0074F4  C08B  FFD9         	movff	__atof@p,fsr2l
 13009  0074F8  C08C  FFDA         	movff	__atof@p+1,fsr2h
 13010  0074FC  0E39               	movlw	57
 13011  0074FE  64DF               	cpfsgt	indf2,c
 13012  007500  EF84  F03A         	goto	u20491
 13013  007504  EF86  F03A         	goto	u20490
 13014  007508                     u20491:
 13015  007508  EF11  F03A         	goto	l18631
 13016  00750C                     u20490:
 13017  00750C                     l18645:
 13018                           
 13019                           ; BSR set to: 0
 13020  00750C  C08B  FFD9         	movff	__atof@p,fsr2l
 13021  007510  C08C  FFDA         	movff	__atof@p+1,fsr2h
 13022  007514  0E2E               	movlw	46
 13023  007516  18DE               	xorwf	postinc2,w,c
 13024  007518  B4D8               	btfsc	status,2,c
 13025  00751A  EF91  F03A         	goto	u20501
 13026  00751E  EF93  F03A         	goto	u20500
 13027  007522                     u20501:
 13028  007522  EF11  F03A         	goto	l18631
 13029  007526                     u20500:
 13030  007526                     
 13031                           ; BSR set to: 0
 13032                           ;_atof.c: 24: };_atof.c: 26: if (dotpos > 0) {
 13033  007526  5189               	movf	__atof@dotpos& (0+255),w,b
 13034  007528  118A               	iorwf	(__atof@dotpos+1)& (0+255),w,b
 13035  00752A  B4D8               	btfsc	status,2,c
 13036  00752C  EF9A  F03A         	goto	u20511
 13037  007530  EF9C  F03A         	goto	u20510
 13038  007534                     u20511:
 13039  007534  EFD2  F03A         	goto	l18655
 13040  007538                     u20510:
 13041  007538                     
 13042                           ; BSR set to: 0
 13043                           ;_atof.c: 27: dotpos = cnt - dotpos - 1;
 13044  007538  5189               	movf	__atof@dotpos& (0+255),w,b
 13045  00753A  5D83               	subwf	__atof@cnt& (0+255),w,b
 13046  00753C  6F7D               	movwf	??__atof& (0+255),b
 13047  00753E  518A               	movf	(__atof@dotpos+1)& (0+255),w,b
 13048  007540  5984               	subwfb	(__atof@cnt+1)& (0+255),w,b
 13049  007542  6F7E               	movwf	(??__atof+1)& (0+255),b
 13050  007544  0EFF               	movlw	255
 13051  007546  257D               	addwf	??__atof& (0+255),w,b
 13052  007548  6F89               	movwf	__atof@dotpos& (0+255),b
 13053  00754A  0EFF               	movlw	255
 13054  00754C  217E               	addwfc	(??__atof+1)& (0+255),w,b
 13055  00754E  6F8A               	movwf	(__atof@dotpos+1)& (0+255),b
 13056                           
 13057                           ;_atof.c: 28: while (dotpos--) ret /= 10.0f;
 13058  007550  EFC4  F03A         	goto	l18653
 13059  007554                     l18651:
 13060                           
 13061                           ; BSR set to: 0
 13062  007554  C085  F060         	movff	__atof@ret,___fldiv@b
 13063  007558  C086  F061         	movff	__atof@ret+1,___fldiv@b+1
 13064  00755C  C087  F062         	movff	__atof@ret+2,___fldiv@b+2
 13065  007560  C088  F063         	movff	__atof@ret+3,___fldiv@b+3
 13066  007564  0E00               	movlw	0
 13067  007566  6F64               	movwf	___fldiv@a& (0+255),b
 13068  007568  0E00               	movlw	0
 13069  00756A  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 13070  00756C  0E20               	movlw	32
 13071  00756E  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 13072  007570  0E41               	movlw	65
 13073  007572  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 13074  007574  EC96  F02F         	call	___fldiv	;wreg free
 13075  007578  C060  F085         	movff	?___fldiv,__atof@ret
 13076  00757C  C061  F086         	movff	?___fldiv+1,__atof@ret+1
 13077  007580  C062  F087         	movff	?___fldiv+2,__atof@ret+2
 13078  007584  C063  F088         	movff	?___fldiv+3,__atof@ret+3
 13079  007588                     l18653:
 13080  007588  0100               	movlb	0	; () banked
 13081  00758A  0789               	decf	__atof@dotpos& (0+255),f,b
 13082  00758C  A0D8               	btfss	status,0,c
 13083  00758E  078A               	decf	(__atof@dotpos+1)& (0+255),f,b
 13084  007590  2989               	incf	__atof@dotpos& (0+255),w,b
 13085  007592  E106               	bnz	u20521
 13086  007594  298A               	incf	(__atof@dotpos+1)& (0+255),w,b
 13087  007596  A4D8               	btfss	status,2,c
 13088  007598  EFD0  F03A         	goto	u20521
 13089  00759C  EFD2  F03A         	goto	u20520
 13090  0075A0                     u20521:
 13091  0075A0  EFAA  F03A         	goto	l18651
 13092  0075A4                     u20520:
 13093  0075A4                     l18655:
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;_atof.c: 29: };_atof.c: 31: return (ret * sign);
 13097  0075A4  C081  F019         	movff	__atof@sign,___xxtofl@val
 13098  0075A8  C082  F01A         	movff	__atof@sign+1,___xxtofl@val+1
 13099  0075AC  0E00               	movlw	0
 13100  0075AE  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
 13101  0075B0  0EFF               	movlw	-1
 13102  0075B2  6E1B               	movwf	(___xxtofl@val+2)^0,c
 13103  0075B4  6E1C               	movwf	(___xxtofl@val+3)^0,c
 13104  0075B6  0E01               	movlw	1
 13105  0075B8  ECC1  F040         	call	___xxtofl
 13106  0075BC  C019  F043         	movff	?___xxtofl,___flmul@b
 13107  0075C0  C01A  F044         	movff	?___xxtofl+1,___flmul@b+1
 13108  0075C4  C01B  F045         	movff	?___xxtofl+2,___flmul@b+2
 13109  0075C8  C01C  F046         	movff	?___xxtofl+3,___flmul@b+3
 13110  0075CC  C085  F047         	movff	__atof@ret,___flmul@a
 13111  0075D0  C086  F048         	movff	__atof@ret+1,___flmul@a+1
 13112  0075D4  C087  F049         	movff	__atof@ret+2,___flmul@a+2
 13113  0075D8  C088  F04A         	movff	__atof@ret+3,___flmul@a+3
 13114  0075DC  EC73  F02B         	call	___flmul	;wreg free
 13115  0075E0  C043  F079         	movff	?___flmul,?__atof
 13116  0075E4  C044  F07A         	movff	?___flmul+1,?__atof+1
 13117  0075E8  C045  F07B         	movff	?___flmul+2,?__atof+2
 13118  0075EC  C046  F07C         	movff	?___flmul+3,?__atof+3
 13119  0075F0  0012               	return		;funcret
 13120  0075F2                     __end_of__atof:
 13121                           	callstack 0
 13122                           
 13123 ;; *************** function _ResetDeviceCleanly *****************
 13124 ;; Defined at:
 13125 ;;		line 293 in file "system.c"
 13126 ;; Parameters:    Size  Location     Type
 13127 ;;		None
 13128 ;; Auto vars:     Size  Location     Type
 13129 ;;		None
 13130 ;; Return value:  Size  Location     Type
 13131 ;;                  1    wreg      void 
 13132 ;; Registers used:
 13133 ;;		wreg, status,2, status,0, cstack
 13134 ;; Tracked objects:
 13135 ;;		On entry : 0/0
 13136 ;;		On exit  : 0/0
 13137 ;;		Unchanged: 0/0
 13138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13143 ;;Total ram usage:        0 bytes
 13144 ;; Hardware stack levels used: 1
 13145 ;; Hardware stack levels required when called: 3
 13146 ;; This function calls:
 13147 ;;		_USBDisableWithLongDelay
 13148 ;; This function is called by:
 13149 ;;		_update_command
 13150 ;; This function uses a non-reentrant model
 13151 ;;
 13152                           
 13153                           	psect	text67
 13154  00D642                     __ptext67:
 13155                           	callstack 0
 13156  00D642                     _ResetDeviceCleanly:
 13157                           	callstack 25
 13158  00D642                     
 13159                           ;system.c: 295: USBDisableWithLongDelay();
 13160  00D642  ECFB  F06A         	call	_USBDisableWithLongDelay	;wreg free
 13161  00D646  00FF               	reset		;# 
 13162  00D648                     
 13163                           ;system.c: 297: __nop();
 13164  00D648  F000               	nop	
 13165  00D64A                     
 13166                           ;system.c: 298: __nop();
 13167  00D64A  F000               	nop	
 13168  00D64C  0012               	return		;funcret
 13169  00D64E                     __end_of_ResetDeviceCleanly:
 13170                           	callstack 0
 13171                           
 13172 ;; *************** function _ResetBootloaderCleanly *****************
 13173 ;; Defined at:
 13174 ;;		line 301 in file "system.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used: 1
 13194 ;; Hardware stack levels required when called: 3
 13195 ;; This function calls:
 13196 ;;		_USBDisableWithLongDelay
 13197 ;; This function is called by:
 13198 ;;		_update_command
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text68
 13203  00D634                     __ptext68:
 13204                           	callstack 0
 13205  00D634                     _ResetBootloaderCleanly:
 13206                           	callstack 25
 13207  00D634                     
 13208                           ;system.c: 303: USBDisableWithLongDelay();
 13209  00D634  ECFB  F06A         	call	_USBDisableWithLongDelay	;wreg free
 13210  00D638  EF0E F000          	goto	28	;# 
 13211  00D63C                     
 13212                           ;system.c: 305: __nop();
 13213  00D63C  F000               	nop	
 13214  00D63E                     
 13215                           ;system.c: 306: __nop();
 13216  00D63E  F000               	nop	
 13217  00D640  0012               	return		;funcret
 13218  00D642                     __end_of_ResetBootloaderCleanly:
 13219                           	callstack 0
 13220                           
 13221 ;; *************** function _USBDisableWithLongDelay *****************
 13222 ;; Defined at:
 13223 ;;		line 277 in file "system.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;		None
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;		None
 13228 ;; Return value:  Size  Location     Type
 13229 ;;                  1    wreg      void 
 13230 ;; Registers used:
 13231 ;;		wreg, status,2, status,0, cstack
 13232 ;; Tracked objects:
 13233 ;;		On entry : 0/0
 13234 ;;		On exit  : 0/0
 13235 ;;		Unchanged: 0/0
 13236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13241 ;;Total ram usage:        0 bytes
 13242 ;; Hardware stack levels used: 1
 13243 ;; Hardware stack levels required when called: 2
 13244 ;; This function calls:
 13245 ;;		_DelayRoutine
 13246 ;; This function is called by:
 13247 ;;		_ResetDeviceCleanly
 13248 ;;		_ResetBootloaderCleanly
 13249 ;; This function uses a non-reentrant model
 13250 ;;
 13251                           
 13252                           	psect	text69
 13253  00D5F6                     __ptext69:
 13254                           	callstack 0
 13255  00D5F6                     _USBDisableWithLongDelay:
 13256                           	callstack 25
 13257  00D5F6                     
 13258                           ;system.c: 279: UCONbits.SUSPND = 0;
 13259  00D5F6  9265               	bcf	101,1,c	;volatile
 13260  00D5F8                     
 13261                           ;system.c: 280: UCON = 0x00;
 13262  00D5F8  0E00               	movlw	0
 13263  00D5FA  6E65               	movwf	101,c	;volatile
 13264  00D5FC                     
 13265                           ;system.c: 281: DelayRoutine(0xFFFF);
 13266  00D5FC  0EFF               	movlw	255
 13267  00D5FE  6E02               	movwf	(DelayRoutine@DelayAmount+1)^0,c
 13268  00D600  6801               	setf	DelayRoutine@DelayAmount^0,c
 13269  00D602  EC93  F06A         	call	_DelayRoutine	;wreg free
 13270  00D606                     
 13271                           ;system.c: 282: USBDeviceState = DETACHED_STATE;
 13272  00D606  0E00               	movlw	0
 13273  00D608  0100               	movlb	0	; () banked
 13274  00D60A  6FE2               	movwf	_USBDeviceState& (0+255),b
 13275  00D60C                     
 13276                           ; BSR set to: 0
 13277  00D60C  0012               	return		;funcret
 13278  00D60E                     __end_of_USBDisableWithLongDelay:
 13279                           	callstack 0
 13280                           
 13281 ;; *************** function _DelayRoutine *****************
 13282 ;; Defined at:
 13283 ;;		line 265 in file "system.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;  DelayAmount     2    0[COMRAM] unsigned int 
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;		None
 13288 ;; Return value:  Size  Location     Type
 13289 ;;                  1    wreg      void 
 13290 ;; Registers used:
 13291 ;;		wreg, status,2, status,0
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13301 ;;Total ram usage:        2 bytes
 13302 ;; Hardware stack levels used: 1
 13303 ;; Hardware stack levels required when called: 1
 13304 ;; This function calls:
 13305 ;;		Nothing
 13306 ;; This function is called by:
 13307 ;;		_USBDisableWithLongDelay
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           	psect	text70
 13312  00D526                     __ptext70:
 13313                           	callstack 0
 13314  00D526                     _DelayRoutine:
 13315                           	callstack 25
 13316  00D526                     
 13317                           ;system.c: 267: while(DelayAmount)
 13318  00D526  EF99  F06A         	goto	l10383
 13319  00D52A                     l2102:
 13320  00D52A  0004               	clrwdt		;# 
 13321  00D52C                     
 13322                           ;system.c: 270: DelayAmount--;
 13323  00D52C  0601               	decf	DelayRoutine@DelayAmount^0,f,c
 13324  00D52E  A0D8               	btfss	status,0,c
 13325  00D530  0602               	decf	(DelayRoutine@DelayAmount+1)^0,f,c
 13326  00D532                     l10383:
 13327  00D532  5001               	movf	DelayRoutine@DelayAmount^0,w,c
 13328  00D534  1002               	iorwf	(DelayRoutine@DelayAmount+1)^0,w,c
 13329  00D536  A4D8               	btfss	status,2,c
 13330  00D538  EFA0  F06A         	goto	u10001
 13331  00D53C  EFA2  F06A         	goto	u10000
 13332  00D540                     u10001:
 13333  00D540  EF95  F06A         	goto	l2102
 13334  00D544                     u10000:
 13335  00D544  0012               	return		;funcret
 13336  00D546                     __end_of_DelayRoutine:
 13337                           	callstack 0
 13338                           
 13339 ;; *************** function _parse_command *****************
 13340 ;; Defined at:
 13341 ;;		line 239 in file "app_atcommand.c"
 13342 ;; Parameters:    Size  Location     Type
 13343 ;;  buff            2   26[COMRAM] PTR const unsigned char 
 13344 ;;		 -> g_atcommand.read_cmd(64), g_atcommand(243), 
 13345 ;;  status          2   28[COMRAM] PTR struct .
 13346 ;;		 -> g_atcommand(243), 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;  idx             1   77[COMRAM] char 
 13349 ;;  chno            1   76[COMRAM] unsigned char 
 13350 ;;  param          32   31[COMRAM] unsigned char [32]
 13351 ;;  cmd            11   64[COMRAM] unsigned char [11]
 13352 ;;  ch              1   80[COMRAM] unsigned char 
 13353 ;;  cmdidx          1   79[COMRAM] unsigned char 
 13354 ;;  paramidx        1   78[COMRAM] unsigned char 
 13355 ;;  seq             1   75[COMRAM] enum E6546
 13356 ;;  retval          1   63[COMRAM] enum E6552
 13357 ;; Return value:  Size  Location     Type
 13358 ;;                  1    wreg      enum E6552
 13359 ;; Registers used:
 13360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13361 ;; Tracked objects:
 13362 ;;		On entry : 0/0
 13363 ;;		On exit  : 0/0
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13367 ;;      Locals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13369 ;;      Totals:        55       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13370 ;;Total ram usage:       55 bytes
 13371 ;; Hardware stack levels used: 1
 13372 ;; Hardware stack levels required when called: 3
 13373 ;; This function calls:
 13374 ;;		__strcpy
 13375 ;;		_check_atcommand
 13376 ;;		_param_copy
 13377 ;; This function is called by:
 13378 ;;		_atcommand_task
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text71
 13383  004D12                     __ptext71:
 13384                           	callstack 0
 13385  004D12                     _parse_command:
 13386                           	callstack 26
 13387  004D12                     
 13388                           ;app_atcommand.c: 241: e_Parsing_Seq seq = PARSE_READY;
 13389  004D12  0E00               	movlw	0
 13390  004D14  6E4C               	movwf	parse_command@seq^0,c
 13391  004D16                     
 13392                           ;app_atcommand.c: 243: char cmd[11] = {0};
 13393  004D16  EE20  F041         	lfsr	2,parse_command@cmd
 13394  004D1A  0E0A               	movlw	10
 13395  004D1C                     u12581:
 13396  004D1C  6ADE               	clrf	postinc2,c
 13397  004D1E  06E8               	decf	wreg,f,c
 13398  004D20  E2FD               	bc	u12581
 13399  004D22                     
 13400                           ;app_atcommand.c: 244: char param[32] = {0};
 13401  004D22  EE20  F020         	lfsr	2,parse_command@param
 13402  004D26  0E1F               	movlw	31
 13403  004D28                     u12591:
 13404  004D28  6ADE               	clrf	postinc2,c
 13405  004D2A  06E8               	decf	wreg,f,c
 13406  004D2C  E2FD               	bc	u12591
 13407                           
 13408                           ;app_atcommand.c: 245: uint8_t cmdidx = 0, paramidx = 0;
 13409  004D2E  0E00               	movlw	0
 13410  004D30  6E50               	movwf	parse_command@cmdidx^0,c
 13411  004D32  0E00               	movlw	0
 13412  004D34  6E4F               	movwf	parse_command@paramidx^0,c
 13413                           
 13414                           ;app_atcommand.c: 247: e_ParseState retval = AT_PARSE_NONE;
 13415  004D36  0E00               	movlw	0
 13416  004D38  6E40               	movwf	parse_command@retval^0,c
 13417  004D3A                     l12483:
 13418                           
 13419                           ;app_atcommand.c: 251: {;app_atcommand.c: 252: ch = *buff;
 13420  004D3A  C01B  FFD9         	movff	parse_command@buff,fsr2l
 13421  004D3E  C01C  FFDA         	movff	parse_command@buff+1,fsr2h
 13422  004D42  50DF               	movf	indf2,w,c
 13423  004D44  6E51               	movwf	parse_command@ch^0,c
 13424                           
 13425                           ;app_atcommand.c: 253: switch (seq) {
 13426  004D46  EFEC  F028         	goto	l12627
 13427  004D4A                     l12485:
 13428                           
 13429                           ;app_atcommand.c: 255: if (ch == 'A' || ch == 'T' || ch == 'a' || ch == 't') {
 13430  004D4A  0E41               	movlw	65
 13431  004D4C  1851               	xorwf	parse_command@ch^0,w,c
 13432  004D4E  B4D8               	btfsc	status,2,c
 13433  004D50  EFAC  F026         	goto	u12601
 13434  004D54  EFAE  F026         	goto	u12600
 13435  004D58                     u12601:
 13436  004D58  EFC9  F026         	goto	l12493
 13437  004D5C                     u12600:
 13438  004D5C  0E54               	movlw	84
 13439  004D5E  1851               	xorwf	parse_command@ch^0,w,c
 13440  004D60  B4D8               	btfsc	status,2,c
 13441  004D62  EFB5  F026         	goto	u12611
 13442  004D66  EFB7  F026         	goto	u12610
 13443  004D6A                     u12611:
 13444  004D6A  EFC9  F026         	goto	l12493
 13445  004D6E                     u12610:
 13446  004D6E  0E61               	movlw	97
 13447  004D70  1851               	xorwf	parse_command@ch^0,w,c
 13448  004D72  B4D8               	btfsc	status,2,c
 13449  004D74  EFBE  F026         	goto	u12621
 13450  004D78  EFC0  F026         	goto	u12620
 13451  004D7C                     u12621:
 13452  004D7C  EFC9  F026         	goto	l12493
 13453  004D80                     u12620:
 13454  004D80  0E74               	movlw	116
 13455  004D82  1851               	xorwf	parse_command@ch^0,w,c
 13456  004D84  A4D8               	btfss	status,2,c
 13457  004D86  EFC7  F026         	goto	u12631
 13458  004D8A  EFC9  F026         	goto	u12630
 13459  004D8E                     u12631:
 13460  004D8E  EFFF  F028         	goto	l12629
 13461  004D92                     u12630:
 13462  004D92                     l12493:
 13463                           
 13464                           ;app_atcommand.c: 256: cmd[cmdidx++] = ch;
 13465  004D92  0E41               	movlw	low parse_command@cmd
 13466  004D94  2450               	addwf	parse_command@cmdidx^0,w,c
 13467  004D96  6ED9               	movwf	fsr2l,c
 13468  004D98  6ADA               	clrf	fsr2h,c
 13469  004D9A  0E00               	movlw	high parse_command@cmd
 13470  004D9C  22DA               	addwfc	fsr2h,f,c
 13471  004D9E  C051  FFDF         	movff	parse_command@ch,indf2
 13472  004DA2  2A50               	incf	parse_command@cmdidx^0,f,c
 13473  004DA4                     
 13474                           ;app_atcommand.c: 257: if (cmdidx > 1) {
 13475  004DA4  0E01               	movlw	1
 13476  004DA6  6450               	cpfsgt	parse_command@cmdidx^0,c
 13477  004DA8  EFD8  F026         	goto	u12641
 13478  004DAC  EFDA  F026         	goto	u12640
 13479  004DB0                     u12641:
 13480  004DB0  EFFF  F028         	goto	l12629
 13481  004DB4                     u12640:
 13482  004DB4                     
 13483                           ;app_atcommand.c: 258: if ((cmd[0] == 'A' || cmd[0] == 'a') &&;app_atcommand.c: 259: (cm
      +                          d[1] == 'T' || cmd[1] == 't')) {
 13484  004DB4  0E41               	movlw	65
 13485  004DB6  1841               	xorwf	parse_command@cmd^0,w,c
 13486  004DB8  B4D8               	btfsc	status,2,c
 13487  004DBA  EFE1  F026         	goto	u12651
 13488  004DBE  EFE3  F026         	goto	u12650
 13489  004DC2                     u12651:
 13490  004DC2  EFEC  F026         	goto	l12503
 13491  004DC6                     u12650:
 13492  004DC6  0E61               	movlw	97
 13493  004DC8  1841               	xorwf	parse_command@cmd^0,w,c
 13494  004DCA  A4D8               	btfss	status,2,c
 13495  004DCC  EFEA  F026         	goto	u12661
 13496  004DD0  EFEC  F026         	goto	u12660
 13497  004DD4                     u12661:
 13498  004DD4  EF02  F027         	goto	l12509
 13499  004DD8                     u12660:
 13500  004DD8                     l12503:
 13501  004DD8  0E54               	movlw	84
 13502  004DDA  1842               	xorwf	(parse_command@cmd+1)^0,w,c
 13503  004DDC  B4D8               	btfsc	status,2,c
 13504  004DDE  EFF3  F026         	goto	u12671
 13505  004DE2  EFF5  F026         	goto	u12670
 13506  004DE6                     u12671:
 13507  004DE6  EFFE  F026         	goto	l12507
 13508  004DEA                     u12670:
 13509  004DEA  0E74               	movlw	116
 13510  004DEC  1842               	xorwf	(parse_command@cmd+1)^0,w,c
 13511  004DEE  A4D8               	btfss	status,2,c
 13512  004DF0  EFFC  F026         	goto	u12681
 13513  004DF4  EFFE  F026         	goto	u12680
 13514  004DF8                     u12681:
 13515  004DF8  EF02  F027         	goto	l12509
 13516  004DFC                     u12680:
 13517  004DFC                     l12507:
 13518                           
 13519                           ;app_atcommand.c: 260: seq = PARSE_START;
 13520  004DFC  0E01               	movlw	1
 13521  004DFE  6E4C               	movwf	parse_command@seq^0,c
 13522                           
 13523                           ;app_atcommand.c: 261: } else retval = AT_PARSE_ERROR;
 13524  004E00  EFFF  F028         	goto	l12629
 13525  004E04                     l12509:
 13526  004E04  0E02               	movlw	2
 13527  004E06  6E40               	movwf	parse_command@retval^0,c
 13528  004E08  EFFF  F028         	goto	l12629
 13529  004E0C                     l12511:
 13530                           
 13531                           ;app_atcommand.c: 266: if (ch == ' ') {
 13532  004E0C  0E20               	movlw	32
 13533  004E0E  1851               	xorwf	parse_command@ch^0,w,c
 13534  004E10  A4D8               	btfss	status,2,c
 13535  004E12  EF0D  F027         	goto	u12691
 13536  004E16  EF0F  F027         	goto	u12690
 13537  004E1A                     u12691:
 13538  004E1A  EF15  F027         	goto	l12515
 13539  004E1E                     u12690:
 13540  004E1E                     
 13541                           ;app_atcommand.c: 267: seq = PARSE_PARAM;
 13542  004E1E  0E02               	movlw	2
 13543  004E20  6E4C               	movwf	parse_command@seq^0,c
 13544                           
 13545                           ;app_atcommand.c: 268: paramidx = 0;
 13546  004E22  0E00               	movlw	0
 13547  004E24  6E4F               	movwf	parse_command@paramidx^0,c
 13548                           
 13549                           ;app_atcommand.c: 269: } else
 13550  004E26  EFFF  F028         	goto	l12629
 13551  004E2A                     l12515:
 13552                           
 13553                           ;app_atcommand.c: 270: if (cmdidx > 8 &&;app_atcommand.c: 271: (cmd[0] == 'A' || cmd[0] 
      +                          == 'a') && (cmd[1] == 'T' || cmd[1] == 't') && (cmd[2] == 'C' || cmd[2] == 'c') &&;app_a
      +                          tcommand.c: 272: (cmd[3] == 'S' || cmd[3] == 's') && (cmd[4] == 'M' || cmd[4] == 'm') &&
      +                           (cmd[5] == 'O' || cmd[5] == 'o') &&;app_atcommand.c: 273: (cmd[6] == 'D' || cmd[6] == '
      +                          d') && (cmd[7] == 'E' || cmd[7] == 'e') && (cmd[8] == 'L' || cmd[8] == 'l'))
 13554  004E2A  0E08               	movlw	8
 13555  004E2C  6450               	cpfsgt	parse_command@cmdidx^0,c
 13556  004E2E  EF1B  F027         	goto	u12701
 13557  004E32  EF1D  F027         	goto	u12700
 13558  004E36                     u12701:
 13559  004E36  EFC8  F027         	goto	l12559
 13560  004E3A                     u12700:
 13561  004E3A  0E41               	movlw	65
 13562  004E3C  1841               	xorwf	parse_command@cmd^0,w,c
 13563  004E3E  B4D8               	btfsc	status,2,c
 13564  004E40  EF24  F027         	goto	u12711
 13565  004E44  EF26  F027         	goto	u12710
 13566  004E48                     u12711:
 13567  004E48  EF2F  F027         	goto	l12521
 13568  004E4C                     u12710:
 13569  004E4C  0E61               	movlw	97
 13570  004E4E  1841               	xorwf	parse_command@cmd^0,w,c
 13571  004E50  A4D8               	btfss	status,2,c
 13572  004E52  EF2D  F027         	goto	u12721
 13573  004E56  EF2F  F027         	goto	u12720
 13574  004E5A                     u12721:
 13575  004E5A  EFC8  F027         	goto	l12559
 13576  004E5E                     u12720:
 13577  004E5E                     l12521:
 13578  004E5E  0E54               	movlw	84
 13579  004E60  1842               	xorwf	(parse_command@cmd+1)^0,w,c
 13580  004E62  B4D8               	btfsc	status,2,c
 13581  004E64  EF36  F027         	goto	u12731
 13582  004E68  EF38  F027         	goto	u12730
 13583  004E6C                     u12731:
 13584  004E6C  EF41  F027         	goto	l12525
 13585  004E70                     u12730:
 13586  004E70  0E74               	movlw	116
 13587  004E72  1842               	xorwf	(parse_command@cmd+1)^0,w,c
 13588  004E74  A4D8               	btfss	status,2,c
 13589  004E76  EF3F  F027         	goto	u12741
 13590  004E7A  EF41  F027         	goto	u12740
 13591  004E7E                     u12741:
 13592  004E7E  EFC8  F027         	goto	l12559
 13593  004E82                     u12740:
 13594  004E82                     l12525:
 13595  004E82  0E43               	movlw	67
 13596  004E84  1843               	xorwf	(parse_command@cmd+2)^0,w,c
 13597  004E86  B4D8               	btfsc	status,2,c
 13598  004E88  EF48  F027         	goto	u12751
 13599  004E8C  EF4A  F027         	goto	u12750
 13600  004E90                     u12751:
 13601  004E90  EF53  F027         	goto	l12529
 13602  004E94                     u12750:
 13603  004E94  0E63               	movlw	99
 13604  004E96  1843               	xorwf	(parse_command@cmd+2)^0,w,c
 13605  004E98  A4D8               	btfss	status,2,c
 13606  004E9A  EF51  F027         	goto	u12761
 13607  004E9E  EF53  F027         	goto	u12760
 13608  004EA2                     u12761:
 13609  004EA2  EFC8  F027         	goto	l12559
 13610  004EA6                     u12760:
 13611  004EA6                     l12529:
 13612  004EA6  0E53               	movlw	83
 13613  004EA8  1844               	xorwf	(parse_command@cmd+3)^0,w,c
 13614  004EAA  B4D8               	btfsc	status,2,c
 13615  004EAC  EF5A  F027         	goto	u12771
 13616  004EB0  EF5C  F027         	goto	u12770
 13617  004EB4                     u12771:
 13618  004EB4  EF65  F027         	goto	l12533
 13619  004EB8                     u12770:
 13620  004EB8  0E73               	movlw	115
 13621  004EBA  1844               	xorwf	(parse_command@cmd+3)^0,w,c
 13622  004EBC  A4D8               	btfss	status,2,c
 13623  004EBE  EF63  F027         	goto	u12781
 13624  004EC2  EF65  F027         	goto	u12780
 13625  004EC6                     u12781:
 13626  004EC6  EFC8  F027         	goto	l12559
 13627  004ECA                     u12780:
 13628  004ECA                     l12533:
 13629  004ECA  0E4D               	movlw	77
 13630  004ECC  1845               	xorwf	(parse_command@cmd+4)^0,w,c
 13631  004ECE  B4D8               	btfsc	status,2,c
 13632  004ED0  EF6C  F027         	goto	u12791
 13633  004ED4  EF6E  F027         	goto	u12790
 13634  004ED8                     u12791:
 13635  004ED8  EF77  F027         	goto	l12537
 13636  004EDC                     u12790:
 13637  004EDC  0E6D               	movlw	109
 13638  004EDE  1845               	xorwf	(parse_command@cmd+4)^0,w,c
 13639  004EE0  A4D8               	btfss	status,2,c
 13640  004EE2  EF75  F027         	goto	u12801
 13641  004EE6  EF77  F027         	goto	u12800
 13642  004EEA                     u12801:
 13643  004EEA  EFC8  F027         	goto	l12559
 13644  004EEE                     u12800:
 13645  004EEE                     l12537:
 13646  004EEE  0E4F               	movlw	79
 13647  004EF0  1846               	xorwf	(parse_command@cmd+5)^0,w,c
 13648  004EF2  B4D8               	btfsc	status,2,c
 13649  004EF4  EF7E  F027         	goto	u12811
 13650  004EF8  EF80  F027         	goto	u12810
 13651  004EFC                     u12811:
 13652  004EFC  EF89  F027         	goto	l12541
 13653  004F00                     u12810:
 13654  004F00  0E6F               	movlw	111
 13655  004F02  1846               	xorwf	(parse_command@cmd+5)^0,w,c
 13656  004F04  A4D8               	btfss	status,2,c
 13657  004F06  EF87  F027         	goto	u12821
 13658  004F0A  EF89  F027         	goto	u12820
 13659  004F0E                     u12821:
 13660  004F0E  EFC8  F027         	goto	l12559
 13661  004F12                     u12820:
 13662  004F12                     l12541:
 13663  004F12  0E44               	movlw	68
 13664  004F14  1847               	xorwf	(parse_command@cmd+6)^0,w,c
 13665  004F16  B4D8               	btfsc	status,2,c
 13666  004F18  EF90  F027         	goto	u12831
 13667  004F1C  EF92  F027         	goto	u12830
 13668  004F20                     u12831:
 13669  004F20  EF9B  F027         	goto	l12545
 13670  004F24                     u12830:
 13671  004F24  0E64               	movlw	100
 13672  004F26  1847               	xorwf	(parse_command@cmd+6)^0,w,c
 13673  004F28  A4D8               	btfss	status,2,c
 13674  004F2A  EF99  F027         	goto	u12841
 13675  004F2E  EF9B  F027         	goto	u12840
 13676  004F32                     u12841:
 13677  004F32  EFC8  F027         	goto	l12559
 13678  004F36                     u12840:
 13679  004F36                     l12545:
 13680  004F36  0E45               	movlw	69
 13681  004F38  1848               	xorwf	(parse_command@cmd+7)^0,w,c
 13682  004F3A  B4D8               	btfsc	status,2,c
 13683  004F3C  EFA2  F027         	goto	u12851
 13684  004F40  EFA4  F027         	goto	u12850
 13685  004F44                     u12851:
 13686  004F44  EFAD  F027         	goto	l12549
 13687  004F48                     u12850:
 13688  004F48  0E65               	movlw	101
 13689  004F4A  1848               	xorwf	(parse_command@cmd+7)^0,w,c
 13690  004F4C  A4D8               	btfss	status,2,c
 13691  004F4E  EFAB  F027         	goto	u12861
 13692  004F52  EFAD  F027         	goto	u12860
 13693  004F56                     u12861:
 13694  004F56  EFC8  F027         	goto	l12559
 13695  004F5A                     u12860:
 13696  004F5A                     l12549:
 13697  004F5A  0E4C               	movlw	76
 13698  004F5C  1849               	xorwf	(parse_command@cmd+8)^0,w,c
 13699  004F5E  B4D8               	btfsc	status,2,c
 13700  004F60  EFB4  F027         	goto	u12871
 13701  004F64  EFB6  F027         	goto	u12870
 13702  004F68                     u12871:
 13703  004F68  EFBF  F027         	goto	l12553
 13704  004F6C                     u12870:
 13705  004F6C  0E6C               	movlw	108
 13706  004F6E  1849               	xorwf	(parse_command@cmd+8)^0,w,c
 13707  004F70  A4D8               	btfss	status,2,c
 13708  004F72  EFBD  F027         	goto	u12881
 13709  004F76  EFBF  F027         	goto	u12880
 13710  004F7A                     u12881:
 13711  004F7A  EFC8  F027         	goto	l12559
 13712  004F7E                     u12880:
 13713  004F7E                     l12553:
 13714                           
 13715                           ;app_atcommand.c: 274: {;app_atcommand.c: 275: seq = PARSE_PARAM;
 13716  004F7E  0E02               	movlw	2
 13717  004F80  6E4C               	movwf	parse_command@seq^0,c
 13718                           
 13719                           ;app_atcommand.c: 276: paramidx = 0;
 13720  004F82  0E00               	movlw	0
 13721  004F84  6E4F               	movwf	parse_command@paramidx^0,c
 13722  004F86                     
 13723                           ;app_atcommand.c: 277: param[paramidx++] = ch;
 13724  004F86  C051  F020         	movff	parse_command@ch,parse_command@param
 13725  004F8A                     l12557:
 13726  004F8A  2A4F               	incf	parse_command@paramidx^0,f,c
 13727                           
 13728                           ;app_atcommand.c: 278: } else
 13729  004F8C  EFFF  F028         	goto	l12629
 13730  004F90                     l12559:
 13731                           
 13732                           ;app_atcommand.c: 279: if (ch == '\r' || ch == '\n') {
 13733  004F90  0E0D               	movlw	13
 13734  004F92  1851               	xorwf	parse_command@ch^0,w,c
 13735  004F94  B4D8               	btfsc	status,2,c
 13736  004F96  EFCF  F027         	goto	u12891
 13737  004F9A  EFD1  F027         	goto	u12890
 13738  004F9E                     u12891:
 13739  004F9E  EFDA  F027         	goto	l12563
 13740  004FA2                     u12890:
 13741  004FA2  0E0A               	movlw	10
 13742  004FA4  1851               	xorwf	parse_command@ch^0,w,c
 13743  004FA6  A4D8               	btfss	status,2,c
 13744  004FA8  EFD8  F027         	goto	u12901
 13745  004FAC  EFDA  F027         	goto	u12900
 13746  004FB0                     u12901:
 13747  004FB0  EFDE  F027         	goto	l12565
 13748  004FB4                     u12900:
 13749  004FB4                     l12563:
 13750                           
 13751                           ;app_atcommand.c: 280: seq = PARSE_COMPL;
 13752  004FB4  0E03               	movlw	3
 13753  004FB6  6E4C               	movwf	parse_command@seq^0,c
 13754                           
 13755                           ;app_atcommand.c: 281: } else {
 13756  004FB8  EFFF  F028         	goto	l12629
 13757  004FBC                     l12565:
 13758                           
 13759                           ;app_atcommand.c: 282: if (cmdidx >= sizeof(cmd)) cmdidx = 0;
 13760  004FBC  0E0A               	movlw	10
 13761  004FBE  6450               	cpfsgt	parse_command@cmdidx^0,c
 13762  004FC0  EFE4  F027         	goto	u12911
 13763  004FC4  EFE6  F027         	goto	u12910
 13764  004FC8                     u12911:
 13765  004FC8  EFE8  F027         	goto	l12569
 13766  004FCC                     u12910:
 13767  004FCC  0E00               	movlw	0
 13768  004FCE  6E50               	movwf	parse_command@cmdidx^0,c
 13769  004FD0                     l12569:
 13770                           
 13771                           ;app_atcommand.c: 283: cmd[cmdidx++] = ch;
 13772  004FD0  0E41               	movlw	low parse_command@cmd
 13773  004FD2  2450               	addwf	parse_command@cmdidx^0,w,c
 13774  004FD4  6ED9               	movwf	fsr2l,c
 13775  004FD6  6ADA               	clrf	fsr2h,c
 13776  004FD8  0E00               	movlw	high parse_command@cmd
 13777  004FDA  22DA               	addwfc	fsr2h,f,c
 13778  004FDC  C051  FFDF         	movff	parse_command@ch,indf2
 13779  004FE0  2A50               	incf	parse_command@cmdidx^0,f,c
 13780  004FE2  EFFF  F028         	goto	l12629
 13781  004FE6                     l12573:
 13782                           
 13783                           ;app_atcommand.c: 287: if (ch == '\r' || ch == '\n') {
 13784  004FE6  0E0D               	movlw	13
 13785  004FE8  1851               	xorwf	parse_command@ch^0,w,c
 13786  004FEA  B4D8               	btfsc	status,2,c
 13787  004FEC  EFFA  F027         	goto	u12921
 13788  004FF0  EFFC  F027         	goto	u12920
 13789  004FF4                     u12921:
 13790  004FF4  EFDA  F027         	goto	l12563
 13791  004FF8                     u12920:
 13792  004FF8  0E0A               	movlw	10
 13793  004FFA  1851               	xorwf	parse_command@ch^0,w,c
 13794  004FFC  A4D8               	btfss	status,2,c
 13795  004FFE  EF03  F028         	goto	u12931
 13796  005002  EF05  F028         	goto	u12930
 13797  005006                     u12931:
 13798  005006  EF07  F028         	goto	l12579
 13799  00500A                     u12930:
 13800  00500A  EFDA  F027         	goto	l12563
 13801  00500E                     l12579:
 13802                           
 13803                           ;app_atcommand.c: 290: if (paramidx >= sizeof(param)) paramidx = 0;
 13804  00500E  0E1F               	movlw	31
 13805  005010  644F               	cpfsgt	parse_command@paramidx^0,c
 13806  005012  EF0D  F028         	goto	u12941
 13807  005016  EF0F  F028         	goto	u12940
 13808  00501A                     u12941:
 13809  00501A  EF11  F028         	goto	l12583
 13810  00501E                     u12940:
 13811  00501E  0E00               	movlw	0
 13812  005020  6E4F               	movwf	parse_command@paramidx^0,c
 13813  005022                     l12583:
 13814                           
 13815                           ;app_atcommand.c: 291: param[paramidx++] = ch;
 13816  005022  0E20               	movlw	low parse_command@param
 13817  005024  244F               	addwf	parse_command@paramidx^0,w,c
 13818  005026  6ED9               	movwf	fsr2l,c
 13819  005028  6ADA               	clrf	fsr2h,c
 13820  00502A  0E00               	movlw	high parse_command@param
 13821  00502C  22DA               	addwfc	fsr2h,f,c
 13822  00502E  C051  FFDF         	movff	parse_command@ch,indf2
 13823  005032  EFC5  F027         	goto	l12557
 13824  005036                     l12587:
 13825                           
 13826                           ;app_atcommand.c: 295: {;app_atcommand.c: 296: uint8_t chno = 0;
 13827  005036  0E00               	movlw	0
 13828  005038  6E4D               	movwf	parse_command@chno^0,c
 13829  00503A                     
 13830                           ;app_atcommand.c: 297: int8_t idx = check_atcommand(cmd, &chno);
 13831  00503A  0E41               	movlw	low parse_command@cmd
 13832  00503C  6E14               	movwf	check_atcommand@cmd^0,c
 13833  00503E  0E00               	movlw	high parse_command@cmd
 13834  005040  6E15               	movwf	(check_atcommand@cmd+1)^0,c
 13835  005042  0E4D               	movlw	low parse_command@chno
 13836  005044  6E16               	movwf	check_atcommand@chno^0,c
 13837  005046  0E00               	movlw	high parse_command@chno
 13838  005048  6E17               	movwf	(check_atcommand@chno+1)^0,c
 13839  00504A  EC94  F058         	call	_check_atcommand	;wreg free
 13840  00504E  6E4E               	movwf	parse_command@idx^0,c
 13841  005050                     
 13842                           ;app_atcommand.c: 298: if (idx >= 0) {
 13843  005050  BE4E               	btfsc	parse_command@idx^0,7,c
 13844  005052  EF2D  F028         	goto	u12951
 13845  005056  EF2F  F028         	goto	u12950
 13846  00505A                     u12951:
 13847  00505A  EFE9  F028         	goto	l12621
 13848  00505E                     u12950:
 13849  00505E                     
 13850                           ;app_atcommand.c: 299: status->channelno = chno;
 13851  00505E  C01D  FFD9         	movff	parse_command@status,fsr2l
 13852  005062  C01E  FFDA         	movff	parse_command@status+1,fsr2h
 13853  005066  C04D  FFDF         	movff	parse_command@chno,indf2
 13854  00506A                     
 13855                           ;app_atcommand.c: 300: status->atcommand = atcommand_type[idx].atcommand;
 13856  00506A  504E               	movf	parse_command@idx^0,w,c
 13857  00506C  0D0D               	mullw	13
 13858  00506E  0EFB               	movlw	low _atcommand_type
 13859  005070  24F3               	addwf	243,w,c
 13860  005072  6EF6               	movwf	tblptrl,c
 13861  005074  0E20               	movlw	high _atcommand_type
 13862  005076  20F4               	addwfc	244,w,c
 13863  005078  6EF7               	movwf	tblptrh,c
 13864  00507A                     	if	0	;There are less than 3 active tblptr bytes
 13865  00507A                     	endif
 13866  00507A  EE20 F003          	lfsr	2,3
 13867  00507E  501D               	movf	parse_command@status^0,w,c
 13868  005080  26D9               	addwf	fsr2l,f,c
 13869  005082  501E               	movf	(parse_command@status+1)^0,w,c
 13870  005084  22DA               	addwfc	fsr2h,f,c
 13871  005086  0008               	tblrd		*
 13872  005088  CFF5 FFDF          	movff	tablat,indf2
 13873  00508C                     
 13874                           ;app_atcommand.c: 301: status->type = atcommand_type[idx].type;
 13875  00508C  504E               	movf	parse_command@idx^0,w,c
 13876  00508E  0D0D               	mullw	13
 13877  005090  0E0C               	movlw	12
 13878  005092  26F3               	addwf	243,f,c
 13879  005094  0E00               	movlw	0
 13880  005096  22F4               	addwfc	244,f,c
 13881  005098  0EFB               	movlw	low _atcommand_type
 13882  00509A  24F3               	addwf	243,w,c
 13883  00509C  6EF6               	movwf	tblptrl,c
 13884  00509E  0E20               	movlw	high _atcommand_type
 13885  0050A0  20F4               	addwfc	244,w,c
 13886  0050A2  6EF7               	movwf	tblptrh,c
 13887  0050A4                     	if	0	;There are less than 3 active tblptr bytes
 13888  0050A4                     	endif
 13889  0050A4  EE20 F0B0          	lfsr	2,176
 13890  0050A8  501D               	movf	parse_command@status^0,w,c
 13891  0050AA  26D9               	addwf	fsr2l,f,c
 13892  0050AC  501E               	movf	(parse_command@status+1)^0,w,c
 13893  0050AE  22DA               	addwfc	fsr2h,f,c
 13894  0050B0  0008               	tblrd		*
 13895  0050B2  CFF5 FFDF          	movff	tablat,indf2
 13896  0050B6                     
 13897                           ;app_atcommand.c: 302: _strcpy(status->szcommand, cmd);
 13898  0050B6  0E04               	movlw	4
 13899  0050B8  241D               	addwf	parse_command@status^0,w,c
 13900  0050BA  6E01               	movwf	__strcpy@dest^0,c
 13901  0050BC  0E00               	movlw	0
 13902  0050BE  201E               	addwfc	(parse_command@status+1)^0,w,c
 13903  0050C0  6E02               	movwf	(__strcpy@dest+1)^0,c
 13904  0050C2  0E41               	movlw	low parse_command@cmd
 13905  0050C4  6E03               	movwf	__strcpy@source^0,c
 13906  0050C6  0E00               	movlw	high parse_command@cmd
 13907  0050C8  6E04               	movwf	(__strcpy@source+1)^0,c
 13908  0050CA  EC76  F05D         	call	__strcpy	;wreg free
 13909                           
 13910                           ;app_atcommand.c: 303: switch (status->type) {
 13911  0050CE  EFCD  F028         	goto	l12613
 13912  0050D2                     l12601:
 13913  0050D2  EE20 F00F          	lfsr	2,15
 13914  0050D6  501D               	movf	parse_command@status^0,w,c
 13915  0050D8  26D9               	addwf	fsr2l,f,c
 13916  0050DA  501E               	movf	(parse_command@status+1)^0,w,c
 13917  0050DC  22DA               	addwfc	fsr2h,f,c
 13918  0050DE  0E00               	movlw	0
 13919  0050E0  6EDF               	movwf	indf2,c
 13920  0050E2  EFE6  F028         	goto	l12615
 13921  0050E6                     l12603:
 13922  0050E6  0E10               	movlw	16
 13923  0050E8  241D               	addwf	parse_command@status^0,w,c
 13924  0050EA  6E02               	movwf	param_copy@src1^0,c
 13925  0050EC  0E00               	movlw	0
 13926  0050EE  201E               	addwfc	(parse_command@status+1)^0,w,c
 13927  0050F0  6E03               	movwf	(param_copy@src1+1)^0,c
 13928  0050F2  0E20               	movlw	low parse_command@param
 13929  0050F4  6E04               	movwf	param_copy@src2^0,c
 13930  0050F6  0E00               	movlw	high parse_command@param
 13931  0050F8  6E05               	movwf	(param_copy@src2+1)^0,c
 13932  0050FA  EC94  F05E         	call	_param_copy	;wreg free
 13933  0050FE  EE20 F00F          	lfsr	2,15
 13934  005102  501D               	movf	parse_command@status^0,w,c
 13935  005104  26D9               	addwf	fsr2l,f,c
 13936  005106  501E               	movf	(parse_command@status+1)^0,w,c
 13937  005108  22DA               	addwfc	fsr2h,f,c
 13938  00510A  0E01               	movlw	1
 13939  00510C  6EDF               	movwf	indf2,c
 13940  00510E  EFE6  F028         	goto	l12615
 13941  005112                     l12607:
 13942  005112  0E10               	movlw	16
 13943  005114  241D               	addwf	parse_command@status^0,w,c
 13944  005116  6E02               	movwf	param_copy@src1^0,c
 13945  005118  0E00               	movlw	0
 13946  00511A  201E               	addwfc	(parse_command@status+1)^0,w,c
 13947  00511C  6E03               	movwf	(param_copy@src1+1)^0,c
 13948  00511E  0E20               	movlw	low parse_command@param
 13949  005120  6E04               	movwf	param_copy@src2^0,c
 13950  005122  0E00               	movlw	high parse_command@param
 13951  005124  6E05               	movwf	(param_copy@src2+1)^0,c
 13952  005126  EC94  F05E         	call	_param_copy	;wreg free
 13953  00512A  5002               	movf	?_param_copy^0,w,c
 13954  00512C  1003               	iorwf	(?_param_copy+1)^0,w,c
 13955  00512E  A4D8               	btfss	status,2,c
 13956  005130  EF9C  F028         	goto	u12961
 13957  005134  EFA0  F028         	goto	u12960
 13958  005138                     u12961:
 13959  005138  6A1F               	clrf	??_parse_command^0,c
 13960  00513A  2A1F               	incf	??_parse_command^0,f,c
 13961  00513C  EFA1  F028         	goto	u12978
 13962  005140                     u12960:
 13963  005140  6A1F               	clrf	??_parse_command^0,c
 13964  005142                     u12978:
 13965  005142  EE20 F00F          	lfsr	2,15
 13966  005146  501D               	movf	parse_command@status^0,w,c
 13967  005148  26D9               	addwf	fsr2l,f,c
 13968  00514A  501E               	movf	(parse_command@status+1)^0,w,c
 13969  00514C  22DA               	addwfc	fsr2h,f,c
 13970  00514E  C01F  FFDF         	movff	??_parse_command,indf2
 13971  005152  EFE6  F028         	goto	l12615
 13972  005156                     l12609:
 13973  005156  0E10               	movlw	16
 13974  005158  241D               	addwf	parse_command@status^0,w,c
 13975  00515A  6E01               	movwf	__strcpy@dest^0,c
 13976  00515C  0E00               	movlw	0
 13977  00515E  201E               	addwfc	(parse_command@status+1)^0,w,c
 13978  005160  6E02               	movwf	(__strcpy@dest+1)^0,c
 13979  005162  0E20               	movlw	low parse_command@param
 13980  005164  6E03               	movwf	__strcpy@source^0,c
 13981  005166  0E00               	movlw	high parse_command@param
 13982  005168  6E04               	movwf	(__strcpy@source+1)^0,c
 13983  00516A  EC76  F05D         	call	__strcpy	;wreg free
 13984  00516E  5001               	movf	?__strcpy^0,w,c
 13985  005170  1002               	iorwf	(?__strcpy+1)^0,w,c
 13986  005172  A4D8               	btfss	status,2,c
 13987  005174  EFBE  F028         	goto	u12981
 13988  005178  EFC2  F028         	goto	u12980
 13989  00517C                     u12981:
 13990  00517C  6A1F               	clrf	??_parse_command^0,c
 13991  00517E  2A1F               	incf	??_parse_command^0,f,c
 13992  005180  EFC3  F028         	goto	u12998
 13993  005184                     u12980:
 13994  005184  6A1F               	clrf	??_parse_command^0,c
 13995  005186                     u12998:
 13996  005186  EE20 F00F          	lfsr	2,15
 13997  00518A  501D               	movf	parse_command@status^0,w,c
 13998  00518C  26D9               	addwf	fsr2l,f,c
 13999  00518E  501E               	movf	(parse_command@status+1)^0,w,c
 14000  005190  22DA               	addwfc	fsr2h,f,c
 14001  005192  C01F  FFDF         	movff	??_parse_command,indf2
 14002  005196  EFE6  F028         	goto	l12615
 14003  00519A                     l12613:
 14004  00519A  EE20 F0B0          	lfsr	2,176
 14005  00519E  501D               	movf	parse_command@status^0,w,c
 14006  0051A0  26D9               	addwf	fsr2l,f,c
 14007  0051A2  501E               	movf	(parse_command@status+1)^0,w,c
 14008  0051A4  22DA               	addwfc	fsr2h,f,c
 14009  0051A6  50DF               	movf	indf2,w,c
 14010                           
 14011                           ; Switch size 1, requested type "simple"
 14012                           ; Number of cases is 4, Range of values is 0 to 3
 14013                           ; switch strategies available:
 14014                           ; Name         Instructions Cycles
 14015                           ; simple_byte           13     7 (average)
 14016                           ;	Chosen strategy is simple_byte
 14017  0051A8  0A00               	xorlw	0	; case 0
 14018  0051AA  B4D8               	btfsc	status,2,c
 14019  0051AC  EF69  F028         	goto	l12601
 14020  0051B0  0A01               	xorlw	1	; case 1
 14021  0051B2  B4D8               	btfsc	status,2,c
 14022  0051B4  EF73  F028         	goto	l12603
 14023  0051B8  0A03               	xorlw	3	; case 2
 14024  0051BA  B4D8               	btfsc	status,2,c
 14025  0051BC  EF89  F028         	goto	l12607
 14026  0051C0  0A01               	xorlw	1	; case 3
 14027  0051C2  B4D8               	btfsc	status,2,c
 14028  0051C4  EFAB  F028         	goto	l12609
 14029  0051C8  EFE6  F028         	goto	l12615
 14030  0051CC                     l12615:
 14031                           
 14032                           ;app_atcommand.c: 309: return AT_PARSE_OK;
 14033  0051CC  0E01               	movlw	1
 14034  0051CE  EF12  F029         	goto	l1288
 14035  0051D2                     l12621:
 14036                           
 14037                           ;app_atcommand.c: 311: return AT_PARSE_ERROR;
 14038  0051D2  0E02               	movlw	2
 14039  0051D4  EF12  F029         	goto	l1288
 14040  0051D8                     l12627:
 14041  0051D8  504C               	movf	parse_command@seq^0,w,c
 14042                           
 14043                           ; Switch size 1, requested type "simple"
 14044                           ; Number of cases is 4, Range of values is 0 to 3
 14045                           ; switch strategies available:
 14046                           ; Name         Instructions Cycles
 14047                           ; simple_byte           13     7 (average)
 14048                           ;	Chosen strategy is simple_byte
 14049  0051DA  0A00               	xorlw	0	; case 0
 14050  0051DC  B4D8               	btfsc	status,2,c
 14051  0051DE  EFA5  F026         	goto	l12485
 14052  0051E2  0A01               	xorlw	1	; case 1
 14053  0051E4  B4D8               	btfsc	status,2,c
 14054  0051E6  EF06  F027         	goto	l12511
 14055  0051EA  0A03               	xorlw	3	; case 2
 14056  0051EC  B4D8               	btfsc	status,2,c
 14057  0051EE  EFF3  F027         	goto	l12573
 14058  0051F2  0A01               	xorlw	1	; case 3
 14059  0051F4  B4D8               	btfsc	status,2,c
 14060  0051F6  EF1B  F028         	goto	l12587
 14061  0051FA  EFFF  F028         	goto	l12629
 14062  0051FE                     l12629:
 14063                           
 14064                           ;app_atcommand.c: 315: if (ch) buff++;
 14065  0051FE  5051               	movf	parse_command@ch^0,w,c
 14066  005200  B4D8               	btfsc	status,2,c
 14067  005202  EF05  F029         	goto	u13001
 14068  005206  EF07  F029         	goto	u13000
 14069  00520A                     u13001:
 14070  00520A  EF09  F029         	goto	l12633
 14071  00520E                     u13000:
 14072  00520E  4A1B               	infsnz	parse_command@buff^0,f,c
 14073  005210  2A1C               	incf	(parse_command@buff+1)^0,f,c
 14074  005212                     l12633:
 14075                           
 14076                           ;app_atcommand.c: 316: } while(ch);
 14077  005212  5051               	movf	parse_command@ch^0,w,c
 14078  005214  A4D8               	btfss	status,2,c
 14079  005216  EF0F  F029         	goto	u13011
 14080  00521A  EF11  F029         	goto	u13010
 14081  00521E                     u13011:
 14082  00521E  EF9D  F026         	goto	l12483
 14083  005222                     u13010:
 14084  005222                     
 14085                           ;app_atcommand.c: 318: return retval;
 14086  005222  5040               	movf	parse_command@retval^0,w,c
 14087  005224                     l1288:
 14088  005224  0012               	return		;funcret
 14089  005226                     __end_of_parse_command:
 14090                           	callstack 0
 14091                           
 14092 ;; *************** function _param_copy *****************
 14093 ;; Defined at:
 14094 ;;		line 190 in file "app_atcommand.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  src1            2    1[COMRAM] PTR unsigned char 
 14097 ;;		 -> g_atcommand(243), 
 14098 ;;  src2            2    3[COMRAM] PTR const unsigned char 
 14099 ;;		 -> parse_command@param(32), 
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;  i               2    5[COMRAM] unsigned int 
 14102 ;;  ch              1    7[COMRAM] unsigned char 
 14103 ;; Return value:  Size  Location     Type
 14104 ;;                  2    1[COMRAM] unsigned int 
 14105 ;; Registers used:
 14106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14107 ;; Tracked objects:
 14108 ;;		On entry : 0/0
 14109 ;;		On exit  : 0/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14113 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14116 ;;Total ram usage:        7 bytes
 14117 ;; Hardware stack levels used: 1
 14118 ;; Hardware stack levels required when called: 2
 14119 ;; This function calls:
 14120 ;;		_check_param
 14121 ;; This function is called by:
 14122 ;;		_parse_command
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126                           	psect	text72
 14127  00BD28                     __ptext72:
 14128                           	callstack 0
 14129  00BD28                     _param_copy:
 14130                           	callstack 26
 14131  00BD28                     
 14132                           ;app_atcommand.c: 192: unsigned int i = 0;
 14133  00BD28  0E00               	movlw	0
 14134  00BD2A  6E07               	movwf	(param_copy@i+1)^0,c
 14135  00BD2C  0E00               	movlw	0
 14136  00BD2E  6E06               	movwf	param_copy@i^0,c
 14137  00BD30                     
 14138                           ;app_atcommand.c: 194: if(!src1 || !src2) return 0;
 14139  00BD30  5002               	movf	param_copy@src1^0,w,c
 14140  00BD32  1003               	iorwf	(param_copy@src1+1)^0,w,c
 14141  00BD34  B4D8               	btfsc	status,2,c
 14142  00BD36  EF9F  F05E         	goto	u11861
 14143  00BD3A  EFA1  F05E         	goto	u11860
 14144  00BD3E                     u11861:
 14145  00BD3E  EFAA  F05E         	goto	l11811
 14146  00BD42                     u11860:
 14147  00BD42  5004               	movf	param_copy@src2^0,w,c
 14148  00BD44  1005               	iorwf	(param_copy@src2+1)^0,w,c
 14149  00BD46  A4D8               	btfss	status,2,c
 14150  00BD48  EFA8  F05E         	goto	u11871
 14151  00BD4C  EFAA  F05E         	goto	u11870
 14152  00BD50                     u11871:
 14153  00BD50  EFB0  F05E         	goto	l11815
 14154  00BD54                     u11870:
 14155  00BD54                     l11811:
 14156  00BD54  0E00               	movlw	0
 14157  00BD56  6E03               	movwf	(?_param_copy+1)^0,c
 14158  00BD58  0E00               	movlw	0
 14159  00BD5A  6E02               	movwf	?_param_copy^0,c
 14160  00BD5C  EFD9  F05E         	goto	l1202
 14161  00BD60                     l11815:
 14162                           
 14163                           ;app_atcommand.c: 196: ch = *src2++;
 14164  00BD60  C004  FFD9         	movff	param_copy@src2,fsr2l
 14165  00BD64  C005  FFDA         	movff	param_copy@src2+1,fsr2h
 14166  00BD68  50DF               	movf	indf2,w,c
 14167  00BD6A  6E08               	movwf	param_copy@ch^0,c
 14168  00BD6C  4A04               	infsnz	param_copy@src2^0,f,c
 14169  00BD6E  2A05               	incf	(param_copy@src2+1)^0,f,c
 14170  00BD70                     
 14171                           ;app_atcommand.c: 197: if (check_param(ch)) {
 14172  00BD70  5008               	movf	param_copy@ch^0,w,c
 14173  00BD72  ECBA  F063         	call	_check_param
 14174  00BD76  0900               	iorlw	0
 14175  00BD78  B4D8               	btfsc	status,2,c
 14176  00BD7A  EFC1  F05E         	goto	u11881
 14177  00BD7E  EFC3  F05E         	goto	u11880
 14178  00BD82                     u11881:
 14179  00BD82  EFCD  F05E         	goto	l11827
 14180  00BD86                     u11880:
 14181  00BD86                     
 14182                           ;app_atcommand.c: 198: *src1++ = ch;
 14183  00BD86  C002  FFD9         	movff	param_copy@src1,fsr2l
 14184  00BD8A  C003  FFDA         	movff	param_copy@src1+1,fsr2h
 14185  00BD8E  C008  FFDF         	movff	param_copy@ch,indf2
 14186  00BD92  4A02               	infsnz	param_copy@src1^0,f,c
 14187  00BD94  2A03               	incf	(param_copy@src1+1)^0,f,c
 14188  00BD96                     
 14189                           ;app_atcommand.c: 199: i++;
 14190  00BD96  4A06               	infsnz	param_copy@i^0,f,c
 14191  00BD98  2A07               	incf	(param_copy@i+1)^0,f,c
 14192  00BD9A                     l11827:
 14193                           
 14194                           ;app_atcommand.c: 200: };app_atcommand.c: 201: } while(ch);
 14195  00BD9A  5008               	movf	param_copy@ch^0,w,c
 14196  00BD9C  A4D8               	btfss	status,2,c
 14197  00BD9E  EFD3  F05E         	goto	u11891
 14198  00BDA2  EFD5  F05E         	goto	u11890
 14199  00BDA6                     u11891:
 14200  00BDA6  EFB0  F05E         	goto	l11815
 14201  00BDAA                     u11890:
 14202  00BDAA                     
 14203                           ;app_atcommand.c: 202: return i;
 14204  00BDAA  C006  F002         	movff	param_copy@i,?_param_copy
 14205  00BDAE  C007  F003         	movff	param_copy@i+1,?_param_copy+1
 14206  00BDB2                     l1202:
 14207  00BDB2  0012               	return		;funcret
 14208  00BDB4                     __end_of_param_copy:
 14209                           	callstack 0
 14210                           
 14211 ;; *************** function _check_param *****************
 14212 ;; Defined at:
 14213 ;;		line 182 in file "app_atcommand.c"
 14214 ;; Parameters:    Size  Location     Type
 14215 ;;  param           1    wreg     unsigned char 
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;  param           1    0[COMRAM] unsigned char 
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1    wreg      unsigned char 
 14220 ;; Registers used:
 14221 ;;		wreg, status,2, status,0
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14231 ;;Total ram usage:        1 bytes
 14232 ;; Hardware stack levels used: 1
 14233 ;; Hardware stack levels required when called: 1
 14234 ;; This function calls:
 14235 ;;		Nothing
 14236 ;; This function is called by:
 14237 ;;		_param_copy
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           
 14241                           	psect	text73
 14242  00C774                     __ptext73:
 14243                           	callstack 0
 14244  00C774                     _check_param:
 14245                           	callstack 26
 14246                           
 14247                           ;incstack = 0
 14248                           ;check_param@param stored from wreg
 14249  00C774  6E01               	movwf	check_param@param^0,c
 14250  00C776                     
 14251                           ;app_atcommand.c: 184: if (param == '-' || param == '.' || param == ',' ||;app_atcommand
      +                          .c: 185: (param >= '0' && param <= '9'))
 14252  00C776  0E2D               	movlw	45
 14253  00C778  1801               	xorwf	check_param@param^0,w,c
 14254  00C77A  B4D8               	btfsc	status,2,c
 14255  00C77C  EFC2  F063         	goto	u11181
 14256  00C780  EFC4  F063         	goto	u11180
 14257  00C784                     u11181:
 14258  00C784  EFE6  F063         	goto	l11337
 14259  00C788                     u11180:
 14260  00C788  0E2E               	movlw	46
 14261  00C78A  1801               	xorwf	check_param@param^0,w,c
 14262  00C78C  B4D8               	btfsc	status,2,c
 14263  00C78E  EFCB  F063         	goto	u11191
 14264  00C792  EFCD  F063         	goto	u11190
 14265  00C796                     u11191:
 14266  00C796  EFE6  F063         	goto	l11337
 14267  00C79A                     u11190:
 14268  00C79A  0E2C               	movlw	44
 14269  00C79C  1801               	xorwf	check_param@param^0,w,c
 14270  00C79E  B4D8               	btfsc	status,2,c
 14271  00C7A0  EFD4  F063         	goto	u11201
 14272  00C7A4  EFD6  F063         	goto	u11200
 14273  00C7A8                     u11201:
 14274  00C7A8  EFE6  F063         	goto	l11337
 14275  00C7AC                     u11200:
 14276  00C7AC  0E2F               	movlw	47
 14277  00C7AE  6401               	cpfsgt	check_param@param^0,c
 14278  00C7B0  EFDC  F063         	goto	u11211
 14279  00C7B4  EFDE  F063         	goto	u11210
 14280  00C7B8                     u11211:
 14281  00C7B8  EFE9  F063         	goto	l11341
 14282  00C7BC                     u11210:
 14283  00C7BC  0E3A               	movlw	58
 14284  00C7BE  6001               	cpfslt	check_param@param^0,c
 14285  00C7C0  EFE4  F063         	goto	u11221
 14286  00C7C4  EFE6  F063         	goto	u11220
 14287  00C7C8                     u11221:
 14288  00C7C8  EFE9  F063         	goto	l11341
 14289  00C7CC                     u11220:
 14290  00C7CC                     l11337:
 14291                           
 14292                           ;app_atcommand.c: 186: return 1;
 14293  00C7CC  0E01               	movlw	1
 14294  00C7CE  EFEA  F063         	goto	l1196
 14295  00C7D2                     l11341:
 14296                           
 14297                           ;app_atcommand.c: 187: return 0;
 14298  00C7D2  0E00               	movlw	0
 14299  00C7D4                     l1196:
 14300  00C7D4  0012               	return		;funcret
 14301  00C7D6                     __end_of_check_param:
 14302                           	callstack 0
 14303                           
 14304 ;; *************** function _check_atcommand *****************
 14305 ;; Defined at:
 14306 ;;		line 227 in file "app_atcommand.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;  cmd             2   19[COMRAM] PTR const unsigned char 
 14309 ;;		 -> parse_command@cmd(11), 
 14310 ;;  chno            2   21[COMRAM] PTR unsigned char 
 14311 ;;		 -> parse_command@chno(1), 
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;  i               1   25[COMRAM] unsigned char 
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  1    wreg      char 
 14316 ;; Registers used:
 14317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 0/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14326 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14327 ;;Total ram usage:        7 bytes
 14328 ;; Hardware stack levels used: 1
 14329 ;; Hardware stack levels required when called: 2
 14330 ;; This function calls:
 14331 ;;		__strlen
 14332 ;;		_atcommand_compare
 14333 ;; This function is called by:
 14334 ;;		_parse_command
 14335 ;; This function uses a non-reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text74
 14339  00B128                     __ptext74:
 14340                           	callstack 0
 14341  00B128                     _check_atcommand:
 14342                           	callstack 26
 14343  00B128                     
 14344                           ;app_atcommand.c: 229: for (uint8_t i = 0 ; i < sizeof(atcommand_type)/sizeof(s_Command_
      +                          type) ; i++) {
 14345  00B128  0E00               	movlw	0
 14346  00B12A  6E1A               	movwf	check_atcommand@i^0,c
 14347  00B12C                     l11835:
 14348                           
 14349                           ;app_atcommand.c: 230: if (_strlen(cmd) == _strlen(atcommand_type[i].szcommand)) {
 14350  00B12C  C014  F001         	movff	check_atcommand@cmd,__strlen@source
 14351  00B130  C015  F002         	movff	check_atcommand@cmd+1,__strlen@source+1
 14352  00B134  ECFF  F065         	call	__strlen	;wreg free
 14353  00B138  C001  F018         	movff	?__strlen,??_check_atcommand
 14354  00B13C  C002  F019         	movff	?__strlen+1,??_check_atcommand+1
 14355  00B140  501A               	movf	check_atcommand@i^0,w,c
 14356  00B142  0D0D               	mullw	13
 14357  00B144  0E01               	movlw	1
 14358  00B146  26F3               	addwf	243,f,c
 14359  00B148  0E00               	movlw	0
 14360  00B14A  22F4               	addwfc	244,f,c
 14361  00B14C  0EFB               	movlw	low _atcommand_type
 14362  00B14E  24F3               	addwf	243,w,c
 14363  00B150  6E01               	movwf	__strlen@source^0,c
 14364  00B152  0E20               	movlw	high _atcommand_type
 14365  00B154  20F4               	addwfc	prodh,w,c
 14366  00B156  6E02               	movwf	(__strlen@source+1)^0,c
 14367  00B158  ECFF  F065         	call	__strlen	;wreg free
 14368  00B15C  5001               	movf	?__strlen^0,w,c
 14369  00B15E  1818               	xorwf	??_check_atcommand^0,w,c
 14370  00B160  E107               	bnz	u11901
 14371  00B162  5002               	movf	(?__strlen+1)^0,w,c
 14372  00B164  1819               	xorwf	(??_check_atcommand+1)^0,w,c
 14373  00B166  A4D8               	btfss	status,2,c
 14374  00B168  EFB8  F058         	goto	u11901
 14375  00B16C  EFBA  F058         	goto	u11900
 14376  00B170                     u11901:
 14377  00B170  EFE3  F058         	goto	l11843
 14378  00B174                     u11900:
 14379  00B174                     
 14380                           ;app_atcommand.c: 231: if (atcommand_compare(atcommand_type[i].szcommand, cmd, _strlen(c
      +                          md), chno)) {
 14381  00B174  501A               	movf	check_atcommand@i^0,w,c
 14382  00B176  0D0D               	mullw	13
 14383  00B178  0E01               	movlw	1
 14384  00B17A  26F3               	addwf	243,f,c
 14385  00B17C  0E00               	movlw	0
 14386  00B17E  22F4               	addwfc	244,f,c
 14387  00B180  0EFB               	movlw	low _atcommand_type
 14388  00B182  24F3               	addwf	243,w,c
 14389  00B184  6E05               	movwf	atcommand_compare@src1^0,c
 14390  00B186  0E20               	movlw	high _atcommand_type
 14391  00B188  20F4               	addwfc	prodh,w,c
 14392  00B18A  6E06               	movwf	(atcommand_compare@src1+1)^0,c
 14393  00B18C  C014  F007         	movff	check_atcommand@cmd,atcommand_compare@src2
 14394  00B190  C015  F008         	movff	check_atcommand@cmd+1,atcommand_compare@src2+1
 14395  00B194  C014  F001         	movff	check_atcommand@cmd,__strlen@source
 14396  00B198  C015  F002         	movff	check_atcommand@cmd+1,__strlen@source+1
 14397  00B19C  ECFF  F065         	call	__strlen	;wreg free
 14398  00B1A0  5001               	movf	?__strlen^0,w,c
 14399  00B1A2  6E09               	movwf	atcommand_compare@n^0,c
 14400  00B1A4  C016  F00A         	movff	check_atcommand@chno,atcommand_compare@channelno
 14401  00B1A8  C017  F00B         	movff	check_atcommand@chno+1,atcommand_compare@channelno+1
 14402  00B1AC  EC32  F04D         	call	_atcommand_compare	;wreg free
 14403  00B1B0  0900               	iorlw	0
 14404  00B1B2  B4D8               	btfsc	status,2,c
 14405  00B1B4  EFDE  F058         	goto	u11911
 14406  00B1B8  EFE0  F058         	goto	u11910
 14407  00B1BC                     u11911:
 14408  00B1BC  EFE3  F058         	goto	l11843
 14409  00B1C0                     u11910:
 14410  00B1C0                     
 14411                           ;app_atcommand.c: 232: return i;
 14412  00B1C0  501A               	movf	check_atcommand@i^0,w,c
 14413  00B1C2  EFED  F058         	goto	l1225
 14414  00B1C6                     l11843:
 14415  00B1C6  2A1A               	incf	check_atcommand@i^0,f,c
 14416  00B1C8  0E1E               	movlw	30
 14417  00B1CA  641A               	cpfsgt	check_atcommand@i^0,c
 14418  00B1CC  EFEA  F058         	goto	u11921
 14419  00B1D0  EFEC  F058         	goto	u11920
 14420  00B1D4                     u11921:
 14421  00B1D4  EF96  F058         	goto	l11835
 14422  00B1D8                     u11920:
 14423  00B1D8                     
 14424                           ;app_atcommand.c: 233: };app_atcommand.c: 234: };app_atcommand.c: 235: };app_atcommand.c
      +                          : 236: return -1;
 14425  00B1D8  0EFF               	movlw	255
 14426  00B1DA                     l1225:
 14427  00B1DA  0012               	return		;funcret
 14428  00B1DC                     __end_of_check_atcommand:
 14429                           	callstack 0
 14430                           
 14431 ;; *************** function _atcommand_compare *****************
 14432 ;; Defined at:
 14433 ;;		line 205 in file "app_atcommand.c"
 14434 ;; Parameters:    Size  Location     Type
 14435 ;;  src1            2    4[COMRAM] PTR const unsigned char 
 14436 ;;		 -> atcommand_type(403), 
 14437 ;;  src2            2    6[COMRAM] PTR const unsigned char 
 14438 ;;		 -> parse_command@cmd(11), 
 14439 ;;  n               1    8[COMRAM] unsigned char 
 14440 ;;  channelno       2    9[COMRAM] PTR unsigned char 
 14441 ;;		 -> parse_command@chno(1), 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;  no              1   17[COMRAM] unsigned char 
 14444 ;;  ch              1   18[COMRAM] unsigned char 
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      unsigned char 
 14447 ;; Registers used:
 14448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14454 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14456 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14457 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14458 ;;Total ram usage:       15 bytes
 14459 ;; Hardware stack levels used: 1
 14460 ;; Hardware stack levels required when called: 1
 14461 ;; This function calls:
 14462 ;;		Nothing
 14463 ;; This function is called by:
 14464 ;;		_check_atcommand
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468                           	psect	text75
 14469  009A64                     __ptext75:
 14470                           	callstack 0
 14471  009A64                     _atcommand_compare:
 14472                           	callstack 26
 14473  009A64                     
 14474                           ;app_atcommand.c: 207: if(!src1 || !src2 || n<=0) return 0;
 14475  009A64  5005               	movf	atcommand_compare@src1^0,w,c
 14476  009A66  1006               	iorwf	(atcommand_compare@src1+1)^0,w,c
 14477  009A68  B4D8               	btfsc	status,2,c
 14478  009A6A  EF39  F04D         	goto	u11231
 14479  009A6E  EF3B  F04D         	goto	u11230
 14480  009A72                     u11231:
 14481  009A72  EF4C  F04D         	goto	l11351
 14482  009A76                     u11230:
 14483  009A76  5007               	movf	atcommand_compare@src2^0,w,c
 14484  009A78  1008               	iorwf	(atcommand_compare@src2+1)^0,w,c
 14485  009A7A  B4D8               	btfsc	status,2,c
 14486  009A7C  EF42  F04D         	goto	u11241
 14487  009A80  EF44  F04D         	goto	u11240
 14488  009A84                     u11241:
 14489  009A84  EF4C  F04D         	goto	l11351
 14490  009A88                     u11240:
 14491  009A88  5009               	movf	atcommand_compare@n^0,w,c
 14492  009A8A  A4D8               	btfss	status,2,c
 14493  009A8C  EF4A  F04D         	goto	u11251
 14494  009A90  EF4C  F04D         	goto	u11250
 14495  009A94                     u11251:
 14496  009A94  EFB3  F04D         	goto	l11383
 14497  009A98                     u11250:
 14498  009A98                     l11351:
 14499  009A98  0E00               	movlw	0
 14500  009A9A  EFBD  F04D         	goto	l1211
 14501  009A9E                     l11355:
 14502                           
 14503                           ;app_atcommand.c: 209: char ch = *src1;
 14504  009A9E  C005  FFF6         	movff	atcommand_compare@src1,tblptrl
 14505  009AA2  C006  FFF7         	movff	atcommand_compare@src1+1,tblptrh
 14506  009AA6                     	if	0	;tblptru may be non-zero
 14507  009AA6                     	endif
 14508  009AA6                     	if	0	;tblptru may be non-zero
 14509  009AA6                     	endif
 14510  009AA6  0008               	tblrd		*
 14511  009AA8  CFF5 F013          	movff	tablat,atcommand_compare@ch
 14512  009AAC                     
 14513                           ;app_atcommand.c: 210: if (ch == '%') {
 14514  009AAC  0E25               	movlw	37
 14515  009AAE  1813               	xorwf	atcommand_compare@ch^0,w,c
 14516  009AB0  A4D8               	btfss	status,2,c
 14517  009AB2  EF5D  F04D         	goto	u11261
 14518  009AB6  EF5F  F04D         	goto	u11260
 14519  009ABA                     u11261:
 14520  009ABA  EF82  F04D         	goto	l11373
 14521  009ABE                     u11260:
 14522  009ABE                     
 14523                           ;app_atcommand.c: 211: uint8_t no = *src2 - '0';
 14524  009ABE  C007  FFD9         	movff	atcommand_compare@src2,fsr2l
 14525  009AC2  C008  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 14526  009AC6  50DF               	movf	indf2,w,c
 14527  009AC8  0FD0               	addlw	208
 14528  009ACA  6E12               	movwf	atcommand_compare@no^0,c
 14529  009ACC                     
 14530                           ;app_atcommand.c: 212: if (no > 0 && no <= 2) {
 14531  009ACC  5012               	movf	atcommand_compare@no^0,w,c
 14532  009ACE  B4D8               	btfsc	status,2,c
 14533  009AD0  EF6C  F04D         	goto	u11271
 14534  009AD4  EF6E  F04D         	goto	u11270
 14535  009AD8                     u11271:
 14536  009AD8  EF4C  F04D         	goto	l11351
 14537  009ADC                     u11270:
 14538  009ADC  0E03               	movlw	3
 14539  009ADE  6012               	cpfslt	atcommand_compare@no^0,c
 14540  009AE0  EF74  F04D         	goto	u11281
 14541  009AE4  EF76  F04D         	goto	u11280
 14542  009AE8                     u11281:
 14543  009AE8  EF4C  F04D         	goto	l11351
 14544  009AEC                     u11280:
 14545  009AEC                     
 14546                           ;app_atcommand.c: 213: *channelno = no;
 14547  009AEC  C00A  FFD9         	movff	atcommand_compare@channelno,fsr2l
 14548  009AF0  C00B  FFDA         	movff	atcommand_compare@channelno+1,fsr2h
 14549  009AF4  C012  FFDF         	movff	atcommand_compare@no,indf2
 14550  009AF8                     
 14551                           ;app_atcommand.c: 214: ch = *src2;
 14552  009AF8  C007  FFD9         	movff	atcommand_compare@src2,fsr2l
 14553  009AFC  C008  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 14554  009B00  50DF               	movf	indf2,w,c
 14555  009B02  6E13               	movwf	atcommand_compare@ch^0,c
 14556  009B04                     l11373:
 14557                           
 14558                           ;app_atcommand.c: 217: };app_atcommand.c: 218: if (!(ch == *src2 || ch == (*src2 - 0x20)
      +                          ))
 14559  009B04  C007  FFD9         	movff	atcommand_compare@src2,fsr2l
 14560  009B08  C008  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 14561  009B0C  5013               	movf	atcommand_compare@ch^0,w,c
 14562  009B0E  18DE               	xorwf	postinc2,w,c
 14563  009B10  B4D8               	btfsc	status,2,c
 14564  009B12  EF8D  F04D         	goto	u11291
 14565  009B16  EF8F  F04D         	goto	u11290
 14566  009B1A                     u11291:
 14567  009B1A  EFAF  F04D         	goto	l11381
 14568  009B1E                     u11290:
 14569  009B1E  5013               	movf	atcommand_compare@ch^0,w,c
 14570  009B20  6E0C               	movwf	??_atcommand_compare^0,c
 14571  009B22  6A0D               	clrf	(??_atcommand_compare+1)^0,c
 14572  009B24  0EE0               	movlw	224
 14573  009B26  6E0E               	movwf	(??_atcommand_compare+2)^0,c
 14574  009B28  0EFF               	movlw	255
 14575  009B2A  6E0F               	movwf	(??_atcommand_compare+3)^0,c
 14576  009B2C  C007  FFD9         	movff	atcommand_compare@src2,fsr2l
 14577  009B30  C008  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 14578  009B34  50DF               	movf	indf2,w,c
 14579  009B36  6E10               	movwf	(??_atcommand_compare+4)^0,c
 14580  009B38  6A11               	clrf	(??_atcommand_compare+5)^0,c
 14581  009B3A  500E               	movf	(??_atcommand_compare+2)^0,w,c
 14582  009B3C  2610               	addwf	(??_atcommand_compare+4)^0,f,c
 14583  009B3E  500F               	movf	(??_atcommand_compare+3)^0,w,c
 14584  009B40  2211               	addwfc	(??_atcommand_compare+5)^0,f,c
 14585  009B42  500C               	movf	??_atcommand_compare^0,w,c
 14586  009B44  1810               	xorwf	(??_atcommand_compare+4)^0,w,c
 14587  009B46  E109               	bnz	u11300
 14588  009B48  500D               	movf	(??_atcommand_compare+1)^0,w,c
 14589  009B4A  1811               	xorwf	(??_atcommand_compare+5)^0,w,c
 14590  009B4C  B4D8               	btfsc	status,2,c
 14591  009B4E  EFAB  F04D         	goto	u11301
 14592  009B52  EFAD  F04D         	goto	u11300
 14593  009B56                     u11301:
 14594  009B56  EFAF  F04D         	goto	l11381
 14595  009B5A                     u11300:
 14596  009B5A  EF4C  F04D         	goto	l11351
 14597  009B5E                     l11381:
 14598                           
 14599                           ;app_atcommand.c: 221: src1++;
 14600  009B5E  4A05               	infsnz	atcommand_compare@src1^0,f,c
 14601  009B60  2A06               	incf	(atcommand_compare@src1+1)^0,f,c
 14602                           
 14603                           ;app_atcommand.c: 222: src2++;
 14604  009B62  4A07               	infsnz	atcommand_compare@src2^0,f,c
 14605  009B64  2A08               	incf	(atcommand_compare@src2+1)^0,f,c
 14606  009B66                     l11383:
 14607  009B66  0609               	decf	atcommand_compare@n^0,f,c
 14608  009B68  2809               	incf	atcommand_compare@n^0,w,c
 14609  009B6A  A4D8               	btfss	status,2,c
 14610  009B6C  EFBA  F04D         	goto	u11311
 14611  009B70  EFBC  F04D         	goto	u11310
 14612  009B74                     u11311:
 14613  009B74  EF4F  F04D         	goto	l11355
 14614  009B78                     u11310:
 14615  009B78                     
 14616                           ;app_atcommand.c: 223: };app_atcommand.c: 224: return 1;
 14617  009B78  0E01               	movlw	1
 14618  009B7A                     l1211:
 14619  009B7A  0012               	return		;funcret
 14620  009B7C                     __end_of_atcommand_compare:
 14621                           	callstack 0
 14622                           
 14623 ;; *************** function _build_response *****************
 14624 ;; Defined at:
 14625 ;;		line 414 in file "app_atcommand.c"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;  status          2   58[BANK0 ] PTR const struct .
 14628 ;;		 -> g_atcommand.status(177), g_atcommand(243), 
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;  temp            4   73[BANK0 ] float 
 14631 ;;  temp            4   69[BANK0 ] float 
 14632 ;;  temp            4   65[BANK0 ] float 
 14633 ;;  i               2   77[BANK0 ] int 
 14634 ;;  len             1   80[BANK0 ] unsigned char 
 14635 ;;  i               1   79[BANK0 ] unsigned char 
 14636 ;;  chno            1   62[BANK0 ] unsigned char 
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  1    wreg      void 
 14639 ;; Registers used:
 14640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 0/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14647 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14648 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14649 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14650 ;;Total ram usage:       23 bytes
 14651 ;; Hardware stack levels used: 1
 14652 ;; Hardware stack levels required when called: 5
 14653 ;; This function calls:
 14654 ;;		___fldiv
 14655 ;;		___fleq
 14656 ;;		__ftoa
 14657 ;;		__itoa
 14658 ;;		__strcpy
 14659 ;;		_nvm_read_flash_all
 14660 ;;		_sensor_temp_fahrenheit
 14661 ;;		_write_command
 14662 ;; This function is called by:
 14663 ;;		_atcommand_task
 14664 ;; This function uses a non-reentrant model
 14665 ;;
 14666                           
 14667                           	psect	text76
 14668  0023B6                     __ptext76:
 14669                           	callstack 0
 14670  0023B6                     _build_response:
 14671                           	callstack 24
 14672  0023B6                     
 14673                           ;app_atcommand.c: 416: uint8_t i;;app_atcommand.c: 417: uint8_t chno = ((status->channel
      +                          no - 1) < 0) ? 0 : status->channelno - 1;
 14674  0023B6  C09A  FFD9         	movff	build_response@status,fsr2l
 14675  0023BA  C09B  FFDA         	movff	build_response@status+1,fsr2h
 14676  0023BE  50DF               	movf	indf2,w,c
 14677  0023C0  0100               	movlb	0	; () banked
 14678  0023C2  6F9C               	movwf	??_build_response& (0+255),b
 14679  0023C4  6B9D               	clrf	(??_build_response+1)& (0+255),b
 14680  0023C6  0EFF               	movlw	255
 14681  0023C8  259C               	addwf	??_build_response& (0+255),w,b
 14682  0023CA  0EFF               	movlw	255
 14683  0023CC  219D               	addwfc	(??_build_response+1)& (0+255),w,b
 14684  0023CE  0B80               	andlw	128
 14685  0023D0  A4D8               	btfss	status,2,c
 14686  0023D2  EFED  F011         	goto	u20861
 14687  0023D6  EFEF  F011         	goto	u20860
 14688  0023DA                     u20861:
 14689  0023DA  EFFD  F011         	goto	l18991
 14690  0023DE                     u20860:
 14691  0023DE                     
 14692                           ; BSR set to: 0
 14693  0023DE  C09A  FFD9         	movff	build_response@status,fsr2l
 14694  0023E2  C09B  FFDA         	movff	build_response@status+1,fsr2h
 14695  0023E6  50DF               	movf	indf2,w,c
 14696  0023E8  6F9C               	movwf	??_build_response& (0+255),b
 14697  0023EA  0EFF               	movlw	255
 14698  0023EC  259C               	addwf	??_build_response& (0+255),w,b
 14699  0023EE  6F9F               	movwf	_build_response$3673& (0+255),b
 14700  0023F0  6BA0               	clrf	(_build_response$3673+1)& (0+255),b
 14701  0023F2  0EFF               	movlw	255
 14702  0023F4  23A0               	addwfc	(_build_response$3673+1)& (0+255),f,b
 14703  0023F6  EF01  F012         	goto	l18993
 14704  0023FA                     l18991:
 14705                           
 14706                           ; BSR set to: 0
 14707  0023FA  0E00               	movlw	0
 14708  0023FC  6FA0               	movwf	(_build_response$3673+1)& (0+255),b
 14709  0023FE  0E00               	movlw	0
 14710  002400  6F9F               	movwf	_build_response$3673& (0+255),b
 14711  002402                     l18993:
 14712                           
 14713                           ; BSR set to: 0
 14714  002402  C09F  F09E         	movff	_build_response$3673,build_response@chno
 14715  002406                     
 14716                           ; BSR set to: 0
 14717                           ;app_atcommand.c: 418: uint8_t len = _strcpy(&writeBuffer[0], status->szcommand);
 14718  002406  0E77               	movlw	low _writeBuffer
 14719  002408  6E01               	movwf	__strcpy@dest^0,c
 14720  00240A  0E02               	movlw	high _writeBuffer
 14721  00240C  6E02               	movwf	(__strcpy@dest+1)^0,c
 14722  00240E  0E04               	movlw	4
 14723  002410  259A               	addwf	build_response@status& (0+255),w,b
 14724  002412  6E03               	movwf	__strcpy@source^0,c
 14725  002414  0E00               	movlw	0
 14726  002416  219B               	addwfc	(build_response@status+1)& (0+255),w,b
 14727  002418  6E04               	movwf	(__strcpy@source+1)^0,c
 14728  00241A  EC76  F05D         	call	__strcpy	;wreg free
 14729  00241E  5001               	movf	?__strcpy^0,w,c
 14730  002420  0100               	movlb	0	; () banked
 14731  002422  6FB0               	movwf	build_response@len& (0+255),b
 14732  002424                     
 14733                           ; BSR set to: 0
 14734                           ;app_atcommand.c: 419: writeBuffer[len++] = ' ';
 14735  002424  0E77               	movlw	low _writeBuffer
 14736  002426  25B0               	addwf	build_response@len& (0+255),w,b
 14737  002428  6ED9               	movwf	fsr2l,c
 14738  00242A  6ADA               	clrf	fsr2h,c
 14739  00242C  0E02               	movlw	high _writeBuffer
 14740  00242E  22DA               	addwfc	fsr2h,f,c
 14741  002430  0E20               	movlw	32
 14742  002432  6EDF               	movwf	indf2,c
 14743  002434                     
 14744                           ; BSR set to: 0
 14745  002434  2BB0               	incf	build_response@len& (0+255),f,b
 14746  002436                     
 14747                           ; BSR set to: 0
 14748                           ;app_atcommand.c: 421: if (status->atcommand >= ATCSMODEL && status->atcommand <= ATCEXT
      +                          M)
 14749  002436  EE20 F003          	lfsr	2,3
 14750  00243A  519A               	movf	build_response@status& (0+255),w,b
 14751  00243C  26D9               	addwf	fsr2l,f,c
 14752  00243E  519B               	movf	(build_response@status+1)& (0+255),w,b
 14753  002440  22DA               	addwfc	fsr2h,f,c
 14754  002442  0E10               	movlw	16
 14755  002444  64DF               	cpfsgt	indf2,c
 14756  002446  EF27  F012         	goto	u20871
 14757  00244A  EF29  F012         	goto	u20870
 14758  00244E                     u20871:
 14759  00244E  EFA9  F017         	goto	l19259
 14760  002452                     u20870:
 14761  002452                     
 14762                           ; BSR set to: 0
 14763  002452  EE20 F003          	lfsr	2,3
 14764  002456  519A               	movf	build_response@status& (0+255),w,b
 14765  002458  26D9               	addwf	fsr2l,f,c
 14766  00245A  519B               	movf	(build_response@status+1)& (0+255),w,b
 14767  00245C  22DA               	addwfc	fsr2h,f,c
 14768  00245E  0E21               	movlw	33
 14769  002460  60DF               	cpfslt	indf2,c
 14770  002462  EF35  F012         	goto	u20881
 14771  002466  EF37  F012         	goto	u20880
 14772  00246A                     u20881:
 14773  00246A  EFA9  F017         	goto	l19259
 14774  00246E                     u20880:
 14775  00246E                     
 14776                           ; BSR set to: 0
 14777                           ;app_atcommand.c: 422: nvm_read_flash_all(&g_nvm.flash);
 14778  00246E  0E91               	movlw	low (_g_nvm+1)
 14779  002470  6E11               	movwf	nvm_read_flash_all@flash^0,c
 14780  002472  0E01               	movlw	high (_g_nvm+1)
 14781  002474  6E12               	movwf	(nvm_read_flash_all@flash+1)^0,c
 14782  002476  ECD7  F069         	call	_nvm_read_flash_all	;wreg free
 14783  00247A  EFA9  F017         	goto	l19259
 14784  00247E                     l19007:
 14785                           
 14786                           ; BSR set to: 0
 14787  00247E  0E77               	movlw	low _writeBuffer
 14788  002480  25B0               	addwf	build_response@len& (0+255),w,b
 14789  002482  6ED9               	movwf	fsr2l,c
 14790  002484  6ADA               	clrf	fsr2h,c
 14791  002486  0E02               	movlw	high _writeBuffer
 14792  002488  22DA               	addwfc	fsr2h,f,c
 14793  00248A  0E4F               	movlw	79
 14794  00248C  6EDF               	movwf	indf2,c
 14795  00248E                     
 14796                           ; BSR set to: 0
 14797  00248E  2BB0               	incf	build_response@len& (0+255),f,b
 14798  002490                     
 14799                           ; BSR set to: 0
 14800  002490  0E77               	movlw	low _writeBuffer
 14801  002492  25B0               	addwf	build_response@len& (0+255),w,b
 14802  002494  6ED9               	movwf	fsr2l,c
 14803  002496  6ADA               	clrf	fsr2h,c
 14804  002498  0E02               	movlw	high _writeBuffer
 14805  00249A  22DA               	addwfc	fsr2h,f,c
 14806  00249C  0E4B               	movlw	75
 14807  00249E  6EDF               	movwf	indf2,c
 14808  0024A0  2BB0               	incf	build_response@len& (0+255),f,b
 14809  0024A2  EF27  F018         	goto	l19261
 14810  0024A6                     l19013:
 14811                           
 14812                           ; BSR set to: 0
 14813  0024A6  0E77               	movlw	low _writeBuffer
 14814  0024A8  25B0               	addwf	build_response@len& (0+255),w,b
 14815  0024AA  6E01               	movwf	__strcpy@dest^0,c
 14816  0024AC  6A02               	clrf	(__strcpy@dest+1)^0,c
 14817  0024AE  0E02               	movlw	high _writeBuffer
 14818  0024B0  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 14819  0024B2  0E85               	movlw	low STR_45
 14820  0024B4  6E03               	movwf	__strcpy@source^0,c
 14821  0024B6  0E23               	movlw	high STR_45
 14822  0024B8  6E04               	movwf	(__strcpy@source+1)^0,c
 14823  0024BA  EC76  F05D         	call	__strcpy	;wreg free
 14824  0024BE  5001               	movf	?__strcpy^0,w,c
 14825  0024C0  0100               	movlb	0	; () banked
 14826  0024C2  27B0               	addwf	build_response@len& (0+255),f,b
 14827  0024C4  EF27  F018         	goto	l19261
 14828  0024C8                     l19015:
 14829                           
 14830                           ; BSR set to: 0
 14831                           ;app_atcommand.c: 429: {;app_atcommand.c: 430: for (i = 0 ; i < 2 ; i++) {
 14832  0024C8  0E00               	movlw	0
 14833  0024CA  6FAF               	movwf	build_response@i& (0+255),b
 14834  0024CC                     l19021:
 14835                           
 14836                           ; BSR set to: 0
 14837                           ;app_atcommand.c: 431: len += _ftoa(g_last_value[i], &writeBuffer[len]);
 14838  0024CC  51AF               	movf	build_response@i& (0+255),w,b
 14839  0024CE  0D04               	mullw	4
 14840  0024D0  0E1C               	movlw	low _g_last_value
 14841  0024D2  24F3               	addwf	243,w,c
 14842  0024D4  6ED9               	movwf	fsr2l,c
 14843  0024D6  0E01               	movlw	high _g_last_value
 14844  0024D8  20F4               	addwfc	prodh,w,c
 14845  0024DA  6EDA               	movwf	fsr2h,c
 14846  0024DC  CFDE F094          	movff	postinc2,__ftoa@num
 14847  0024E0  CFDE F095          	movff	postinc2,__ftoa@num+1
 14848  0024E4  CFDE F096          	movff	postinc2,__ftoa@num+2
 14849  0024E8  CFDE F097          	movff	postinc2,__ftoa@num+3
 14850  0024EC  0E77               	movlw	low _writeBuffer
 14851  0024EE  25B0               	addwf	build_response@len& (0+255),w,b
 14852  0024F0  6F98               	movwf	__ftoa@str& (0+255),b
 14853  0024F2  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 14854  0024F4  0E02               	movlw	high _writeBuffer
 14855  0024F6  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 14856  0024F8  EC26  F066         	call	__ftoa	;wreg free
 14857  0024FC  0100               	movlb	0	; () banked
 14858  0024FE  5194               	movf	?__ftoa& (0+255),w,b
 14859  002500  27B0               	addwf	build_response@len& (0+255),f,b
 14860  002502                     
 14861                           ; BSR set to: 0
 14862                           ;app_atcommand.c: 432: if (i != (2 - 1)) writeBuffer[len++] = ',';
 14863  002502  05AF               	decf	build_response@i& (0+255),w,b
 14864  002504  B4D8               	btfsc	status,2,c
 14865  002506  EF87  F012         	goto	u20891
 14866  00250A  EF89  F012         	goto	u20890
 14867  00250E                     u20891:
 14868  00250E  EF92  F012         	goto	l19029
 14869  002512                     u20890:
 14870  002512                     
 14871                           ; BSR set to: 0
 14872  002512  0E77               	movlw	low _writeBuffer
 14873  002514  25B0               	addwf	build_response@len& (0+255),w,b
 14874  002516  6ED9               	movwf	fsr2l,c
 14875  002518  6ADA               	clrf	fsr2h,c
 14876  00251A  0E02               	movlw	high _writeBuffer
 14877  00251C  22DA               	addwfc	fsr2h,f,c
 14878  00251E  0E2C               	movlw	44
 14879  002520  6EDF               	movwf	indf2,c
 14880  002522                     
 14881                           ; BSR set to: 0
 14882  002522  2BB0               	incf	build_response@len& (0+255),f,b
 14883  002524                     l19029:
 14884                           
 14885                           ; BSR set to: 0
 14886  002524  2BAF               	incf	build_response@i& (0+255),f,b
 14887  002526                     
 14888                           ; BSR set to: 0
 14889  002526  0E01               	movlw	1
 14890  002528  65AF               	cpfsgt	build_response@i& (0+255),b
 14891  00252A  EF99  F012         	goto	u20901
 14892  00252E  EF9B  F012         	goto	u20900
 14893  002532                     u20901:
 14894  002532  EF66  F012         	goto	l19021
 14895  002536                     u20900:
 14896  002536  EF27  F018         	goto	l19261
 14897  00253A                     l19033:
 14898                           
 14899                           ; BSR set to: 0
 14900  00253A  C12C  F094         	movff	_g_last_value+16,__ftoa@num
 14901  00253E  C12D  F095         	movff	_g_last_value+17,__ftoa@num+1
 14902  002542  C12E  F096         	movff	_g_last_value+18,__ftoa@num+2
 14903  002546  C12F  F097         	movff	_g_last_value+19,__ftoa@num+3
 14904  00254A  0E77               	movlw	low _writeBuffer
 14905  00254C  25B0               	addwf	build_response@len& (0+255),w,b
 14906  00254E  6F98               	movwf	__ftoa@str& (0+255),b
 14907  002550  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 14908  002552  0E02               	movlw	high _writeBuffer
 14909  002554  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 14910  002556  EC26  F066         	call	__ftoa	;wreg free
 14911  00255A  0100               	movlb	0	; () banked
 14912  00255C  5194               	movf	?__ftoa& (0+255),w,b
 14913  00255E  27B0               	addwf	build_response@len& (0+255),f,b
 14914  002560  EF27  F018         	goto	l19261
 14915  002564                     l19035:
 14916                           
 14917                           ; BSR set to: 0
 14918                           ;app_atcommand.c: 437: {;app_atcommand.c: 438: if (g_sens_measure.isInitDone) {
 14919  002564  0101               	movlb	1	; () banked
 14920  002566  5143               	movf	(_g_sens_measure+3)& (0+255),w,b
 14921  002568  B4D8               	btfsc	status,2,c
 14922  00256A  EFB9  F012         	goto	u20911
 14923  00256E  EFBB  F012         	goto	u20910
 14924  002572                     u20911:
 14925  002572  EF38  F013         	goto	l19057
 14926  002576                     u20910:
 14927  002576                     
 14928                           ; BSR set to: 1
 14929                           ;app_atcommand.c: 439: if(g_nvm.flash.nA_per_ppm == 0.0f || g_led_status.isBlink)
 14930  002576  C199  F001         	movff	_g_nvm+9,___fleq@ff1
 14931  00257A  C19A  F002         	movff	_g_nvm+10,___fleq@ff1+1
 14932  00257E  C19B  F003         	movff	_g_nvm+11,___fleq@ff1+2
 14933  002582  C19C  F004         	movff	_g_nvm+12,___fleq@ff1+3
 14934  002586  0E00               	movlw	0
 14935  002588  6E05               	movwf	___fleq@ff2^0,c
 14936  00258A  0E00               	movlw	0
 14937  00258C  6E06               	movwf	(___fleq@ff2+1)^0,c
 14938  00258E  0E00               	movlw	0
 14939  002590  6E07               	movwf	(___fleq@ff2+2)^0,c
 14940  002592  0E00               	movlw	0
 14941  002594  6E08               	movwf	(___fleq@ff2+3)^0,c
 14942  002596  ECFD  F05A         	call	___fleq	;wreg free
 14943  00259A  B0D8               	btfsc	status,0,c
 14944  00259C  EFD2  F012         	goto	u20921
 14945  0025A0  EFD4  F012         	goto	u20920
 14946  0025A4                     u20921:
 14947  0025A4  EFDD  F012         	goto	l19041
 14948  0025A8                     u20920:
 14949  0025A8  0100               	movlb	0	; () banked
 14950  0025AA  51C2               	movf	(_g_led_status+2)& (0+255),w,b
 14951  0025AC  B4D8               	btfsc	status,2,c
 14952  0025AE  EFDB  F012         	goto	u20931
 14953  0025B2  EFDD  F012         	goto	u20930
 14954  0025B6                     u20931:
 14955  0025B6  EFEF  F012         	goto	l19043
 14956  0025BA                     u20930:
 14957  0025BA                     l19041:
 14958                           
 14959                           ;app_atcommand.c: 440: len += _strcpy(&writeBuffer[len], "----");
 14960  0025BA  0E77               	movlw	low _writeBuffer
 14961  0025BC  0100               	movlb	0	; () banked
 14962  0025BE  25B0               	addwf	build_response@len& (0+255),w,b
 14963  0025C0  6E01               	movwf	__strcpy@dest^0,c
 14964  0025C2  6A02               	clrf	(__strcpy@dest+1)^0,c
 14965  0025C4  0E02               	movlw	high _writeBuffer
 14966  0025C6  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 14967  0025C8  0E80               	movlw	low (STR_52+25)
 14968  0025CA  6E03               	movwf	__strcpy@source^0,c
 14969  0025CC  0E23               	movlw	high (STR_52+25)
 14970  0025CE  6E04               	movwf	(__strcpy@source+1)^0,c
 14971  0025D0  EC76  F05D         	call	__strcpy	;wreg free
 14972  0025D4  5001               	movf	?__strcpy^0,w,c
 14973  0025D6  0100               	movlb	0	; () banked
 14974  0025D8  27B0               	addwf	build_response@len& (0+255),f,b
 14975  0025DA  EF02  F013         	goto	l19045
 14976  0025DE                     l19043:
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;app_atcommand.c: 441: else;app_atcommand.c: 442: len += _ftoa(g_last_value[LV_GAS_PPM],
      +                           &writeBuffer[len]);
 14980  0025DE  C120  F094         	movff	_g_last_value+4,__ftoa@num
 14981  0025E2  C121  F095         	movff	_g_last_value+5,__ftoa@num+1
 14982  0025E6  C122  F096         	movff	_g_last_value+6,__ftoa@num+2
 14983  0025EA  C123  F097         	movff	_g_last_value+7,__ftoa@num+3
 14984  0025EE  0E77               	movlw	low _writeBuffer
 14985  0025F0  25B0               	addwf	build_response@len& (0+255),w,b
 14986  0025F2  6F98               	movwf	__ftoa@str& (0+255),b
 14987  0025F4  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 14988  0025F6  0E02               	movlw	high _writeBuffer
 14989  0025F8  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 14990  0025FA  EC26  F066         	call	__ftoa	;wreg free
 14991  0025FE  0100               	movlb	0	; () banked
 14992  002600  5194               	movf	?__ftoa& (0+255),w,b
 14993  002602  27B0               	addwf	build_response@len& (0+255),f,b
 14994  002604                     l19045:
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;app_atcommand.c: 443: writeBuffer[len++] = ',';
 14998  002604  0E77               	movlw	low _writeBuffer
 14999  002606  25B0               	addwf	build_response@len& (0+255),w,b
 15000  002608  6ED9               	movwf	fsr2l,c
 15001  00260A  6ADA               	clrf	fsr2h,c
 15002  00260C  0E02               	movlw	high _writeBuffer
 15003  00260E  22DA               	addwfc	fsr2h,f,c
 15004  002610  0E2C               	movlw	44
 15005  002612  6EDF               	movwf	indf2,c
 15006  002614                     
 15007                           ; BSR set to: 0
 15008  002614  2BB0               	incf	build_response@len& (0+255),f,b
 15009  002616                     
 15010                           ; BSR set to: 0
 15011                           ;app_atcommand.c: 444: float temp = g_last_value[LV_TEMP];
 15012  002616  C130  F0A1         	movff	_g_last_value+20,build_response@temp
 15013  00261A  C131  F0A2         	movff	_g_last_value+21,build_response@temp+1
 15014  00261E  C132  F0A3         	movff	_g_last_value+22,build_response@temp+2
 15015  002622  C133  F0A4         	movff	_g_last_value+23,build_response@temp+3
 15016  002626                     
 15017                           ; BSR set to: 0
 15018                           ;app_atcommand.c: 445: if (g_nvm.flash.temp_corf == FAHRENHEIT)
 15019  002626  0101               	movlb	1	; () banked
 15020  002628  0593               	decf	(_g_nvm+3)& (0+255),w,b
 15021  00262A  A4D8               	btfss	status,2,c
 15022  00262C  EF1A  F013         	goto	u20941
 15023  002630  EF1C  F013         	goto	u20940
 15024  002634                     u20941:
 15025  002634  EF22  F013         	goto	l19055
 15026  002638                     u20940:
 15027  002638                     
 15028                           ; BSR set to: 1
 15029                           ;app_atcommand.c: 446: sensor_temp_fahrenheit(&temp);
 15030  002638  0EA1               	movlw	low build_response@temp
 15031  00263A  6E5C               	movwf	sensor_temp_fahrenheit@temp^0,c
 15032  00263C  0E00               	movlw	high build_response@temp
 15033  00263E  6E5D               	movwf	(sensor_temp_fahrenheit@temp+1)^0,c
 15034  002640  ECEB  F061         	call	_sensor_temp_fahrenheit	;wreg free
 15035  002644                     l19055:
 15036                           
 15037                           ;app_atcommand.c: 447: len += _ftoa(temp, &writeBuffer[len]);
 15038  002644  C0A1  F094         	movff	build_response@temp,__ftoa@num
 15039  002648  C0A2  F095         	movff	build_response@temp+1,__ftoa@num+1
 15040  00264C  C0A3  F096         	movff	build_response@temp+2,__ftoa@num+2
 15041  002650  C0A4  F097         	movff	build_response@temp+3,__ftoa@num+3
 15042  002654  0E77               	movlw	low _writeBuffer
 15043  002656  0100               	movlb	0	; () banked
 15044  002658  25B0               	addwf	build_response@len& (0+255),w,b
 15045  00265A  6F98               	movwf	__ftoa@str& (0+255),b
 15046  00265C  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15047  00265E  0E02               	movlw	high _writeBuffer
 15048  002660  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15049  002662  EC26  F066         	call	__ftoa	;wreg free
 15050  002666  0100               	movlb	0	; () banked
 15051  002668  5194               	movf	?__ftoa& (0+255),w,b
 15052  00266A  27B0               	addwf	build_response@len& (0+255),f,b
 15053                           
 15054                           ;app_atcommand.c: 448: } else
 15055  00266C  EF27  F018         	goto	l19261
 15056  002670                     l19057:
 15057                           
 15058                           ; BSR set to: 1
 15059                           ;app_atcommand.c: 449: len += _strcpy(&writeBuffer[len], "----,----");
 15060  002670  0E77               	movlw	low _writeBuffer
 15061  002672  0100               	movlb	0	; () banked
 15062  002674  25B0               	addwf	build_response@len& (0+255),w,b
 15063  002676  6E01               	movwf	__strcpy@dest^0,c
 15064  002678  6A02               	clrf	(__strcpy@dest+1)^0,c
 15065  00267A  0E02               	movlw	high _writeBuffer
 15066  00267C  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 15067  00267E  0E7B               	movlw	low (STR_52+20)
 15068  002680  6E03               	movwf	__strcpy@source^0,c
 15069  002682  0E23               	movlw	high (STR_52+20)
 15070  002684  6E04               	movwf	(__strcpy@source+1)^0,c
 15071  002686  EC76  F05D         	call	__strcpy	;wreg free
 15072  00268A  5001               	movf	?__strcpy^0,w,c
 15073  00268C  0100               	movlb	0	; () banked
 15074  00268E  27B0               	addwf	build_response@len& (0+255),f,b
 15075  002690  EF27  F018         	goto	l19261
 15076  002694                     l19059:
 15077                           
 15078                           ; BSR set to: 0
 15079                           ;app_atcommand.c: 452: {;app_atcommand.c: 453: if (g_sens_measure.isInitDone) {
 15080  002694  0101               	movlb	1	; () banked
 15081  002696  5143               	movf	(_g_sens_measure+3)& (0+255),w,b
 15082  002698  B4D8               	btfsc	status,2,c
 15083  00269A  EF51  F013         	goto	u20951
 15084  00269E  EF53  F013         	goto	u20950
 15085  0026A2                     u20951:
 15086  0026A2  EFD1  F013         	goto	l19087
 15087  0026A6                     u20950:
 15088  0026A6                     
 15089                           ; BSR set to: 1
 15090                           ;app_atcommand.c: 454: len += _ftoa(g_last_value[LV_GAS_PPM], &writeBuffer[len]);
 15091  0026A6  C120  F094         	movff	_g_last_value+4,__ftoa@num
 15092  0026AA  C121  F095         	movff	_g_last_value+5,__ftoa@num+1
 15093  0026AE  C122  F096         	movff	_g_last_value+6,__ftoa@num+2
 15094  0026B2  C123  F097         	movff	_g_last_value+7,__ftoa@num+3
 15095  0026B6  0E77               	movlw	low _writeBuffer
 15096  0026B8  0100               	movlb	0	; () banked
 15097  0026BA  25B0               	addwf	build_response@len& (0+255),w,b
 15098  0026BC  6F98               	movwf	__ftoa@str& (0+255),b
 15099  0026BE  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15100  0026C0  0E02               	movlw	high _writeBuffer
 15101  0026C2  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15102  0026C4  EC26  F066         	call	__ftoa	;wreg free
 15103  0026C8  0100               	movlb	0	; () banked
 15104  0026CA  5194               	movf	?__ftoa& (0+255),w,b
 15105  0026CC  27B0               	addwf	build_response@len& (0+255),f,b
 15106  0026CE                     
 15107                           ; BSR set to: 0
 15108                           ;app_atcommand.c: 455: writeBuffer[len++] = ',';
 15109  0026CE  0E77               	movlw	low _writeBuffer
 15110  0026D0  25B0               	addwf	build_response@len& (0+255),w,b
 15111  0026D2  6ED9               	movwf	fsr2l,c
 15112  0026D4  6ADA               	clrf	fsr2h,c
 15113  0026D6  0E02               	movlw	high _writeBuffer
 15114  0026D8  22DA               	addwfc	fsr2h,f,c
 15115  0026DA  0E2C               	movlw	44
 15116  0026DC  6EDF               	movwf	indf2,c
 15117  0026DE                     
 15118                           ; BSR set to: 0
 15119  0026DE  2BB0               	incf	build_response@len& (0+255),f,b
 15120  0026E0                     
 15121                           ; BSR set to: 0
 15122                           ;app_atcommand.c: 456: float temp = g_last_value[LV_TEMP];
 15123  0026E0  C130  F0A5         	movff	_g_last_value+20,build_response@temp_3680
 15124  0026E4  C131  F0A6         	movff	_g_last_value+21,build_response@temp_3680+1
 15125  0026E8  C132  F0A7         	movff	_g_last_value+22,build_response@temp_3680+2
 15126  0026EC  C133  F0A8         	movff	_g_last_value+23,build_response@temp_3680+3
 15127  0026F0                     
 15128                           ; BSR set to: 0
 15129                           ;app_atcommand.c: 457: if (g_nvm.flash.temp_corf == FAHRENHEIT)
 15130  0026F0  0101               	movlb	1	; () banked
 15131  0026F2  0593               	decf	(_g_nvm+3)& (0+255),w,b
 15132  0026F4  A4D8               	btfss	status,2,c
 15133  0026F6  EF7F  F013         	goto	u20961
 15134  0026FA  EF81  F013         	goto	u20960
 15135  0026FE                     u20961:
 15136  0026FE  EF87  F013         	goto	l19073
 15137  002702                     u20960:
 15138  002702                     
 15139                           ; BSR set to: 1
 15140                           ;app_atcommand.c: 458: sensor_temp_fahrenheit(&temp);
 15141  002702  0EA5               	movlw	low build_response@temp_3680
 15142  002704  6E5C               	movwf	sensor_temp_fahrenheit@temp^0,c
 15143  002706  0E00               	movlw	high build_response@temp_3680
 15144  002708  6E5D               	movwf	(sensor_temp_fahrenheit@temp+1)^0,c
 15145  00270A  ECEB  F061         	call	_sensor_temp_fahrenheit	;wreg free
 15146  00270E                     l19073:
 15147                           
 15148                           ;app_atcommand.c: 459: len += _ftoa(temp, &writeBuffer[len]);
 15149  00270E  C0A5  F094         	movff	build_response@temp_3680,__ftoa@num
 15150  002712  C0A6  F095         	movff	build_response@temp_3680+1,__ftoa@num+1
 15151  002716  C0A7  F096         	movff	build_response@temp_3680+2,__ftoa@num+2
 15152  00271A  C0A8  F097         	movff	build_response@temp_3680+3,__ftoa@num+3
 15153  00271E  0E77               	movlw	low _writeBuffer
 15154  002720  0100               	movlb	0	; () banked
 15155  002722  25B0               	addwf	build_response@len& (0+255),w,b
 15156  002724  6F98               	movwf	__ftoa@str& (0+255),b
 15157  002726  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15158  002728  0E02               	movlw	high _writeBuffer
 15159  00272A  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15160  00272C  EC26  F066         	call	__ftoa	;wreg free
 15161  002730  0100               	movlb	0	; () banked
 15162  002732  5194               	movf	?__ftoa& (0+255),w,b
 15163  002734  27B0               	addwf	build_response@len& (0+255),f,b
 15164  002736                     
 15165                           ; BSR set to: 0
 15166                           ;app_atcommand.c: 460: writeBuffer[len++] = ',';
 15167  002736  0E77               	movlw	low _writeBuffer
 15168  002738  25B0               	addwf	build_response@len& (0+255),w,b
 15169  00273A  6ED9               	movwf	fsr2l,c
 15170  00273C  6ADA               	clrf	fsr2h,c
 15171  00273E  0E02               	movlw	high _writeBuffer
 15172  002740  22DA               	addwfc	fsr2h,f,c
 15173  002742  0E2C               	movlw	44
 15174  002744  6EDF               	movwf	indf2,c
 15175  002746                     
 15176                           ; BSR set to: 0
 15177  002746  2BB0               	incf	build_response@len& (0+255),f,b
 15178  002748                     
 15179                           ; BSR set to: 0
 15180                           ;app_atcommand.c: 461: len += _ftoa(g_last_value[LV_HUMI], &writeBuffer[len]);
 15181  002748  C134  F094         	movff	_g_last_value+24,__ftoa@num
 15182  00274C  C135  F095         	movff	_g_last_value+25,__ftoa@num+1
 15183  002750  C136  F096         	movff	_g_last_value+26,__ftoa@num+2
 15184  002754  C137  F097         	movff	_g_last_value+27,__ftoa@num+3
 15185  002758  0E77               	movlw	low _writeBuffer
 15186  00275A  25B0               	addwf	build_response@len& (0+255),w,b
 15187  00275C  6F98               	movwf	__ftoa@str& (0+255),b
 15188  00275E  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15189  002760  0E02               	movlw	high _writeBuffer
 15190  002762  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15191  002764  EC26  F066         	call	__ftoa	;wreg free
 15192  002768  0100               	movlb	0	; () banked
 15193  00276A  5194               	movf	?__ftoa& (0+255),w,b
 15194  00276C  27B0               	addwf	build_response@len& (0+255),f,b
 15195  00276E                     
 15196                           ; BSR set to: 0
 15197                           ;app_atcommand.c: 462: writeBuffer[len++] = ',';
 15198  00276E  0E77               	movlw	low _writeBuffer
 15199  002770  25B0               	addwf	build_response@len& (0+255),w,b
 15200  002772  6ED9               	movwf	fsr2l,c
 15201  002774  6ADA               	clrf	fsr2h,c
 15202  002776  0E02               	movlw	high _writeBuffer
 15203  002778  22DA               	addwfc	fsr2h,f,c
 15204  00277A  0E2C               	movlw	44
 15205  00277C  6EDF               	movwf	indf2,c
 15206  00277E                     
 15207                           ; BSR set to: 0
 15208  00277E  2BB0               	incf	build_response@len& (0+255),f,b
 15209  002780                     
 15210                           ; BSR set to: 0
 15211                           ;app_atcommand.c: 463: len += _strcpy(&writeBuffer[len], "----");
 15212  002780  0E77               	movlw	low _writeBuffer
 15213  002782  25B0               	addwf	build_response@len& (0+255),w,b
 15214  002784  6E01               	movwf	__strcpy@dest^0,c
 15215  002786  6A02               	clrf	(__strcpy@dest+1)^0,c
 15216  002788  0E02               	movlw	high _writeBuffer
 15217  00278A  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 15218  00278C  0E80               	movlw	low (STR_52+25)
 15219  00278E  6E03               	movwf	__strcpy@source^0,c
 15220  002790  0E23               	movlw	high (STR_52+25)
 15221  002792  6E04               	movwf	(__strcpy@source+1)^0,c
 15222  002794  EC76  F05D         	call	__strcpy	;wreg free
 15223  002798  5001               	movf	?__strcpy^0,w,c
 15224  00279A  0100               	movlb	0	; () banked
 15225  00279C  27B0               	addwf	build_response@len& (0+255),f,b
 15226                           
 15227                           ;app_atcommand.c: 464: } else
 15228  00279E  EF27  F018         	goto	l19261
 15229  0027A2                     l19087:
 15230                           
 15231                           ; BSR set to: 1
 15232                           ;app_atcommand.c: 465: len += _strcpy(&writeBuffer[len], "----,----,----,----");
 15233  0027A2  0E77               	movlw	low _writeBuffer
 15234  0027A4  0100               	movlb	0	; () banked
 15235  0027A6  25B0               	addwf	build_response@len& (0+255),w,b
 15236  0027A8  6E01               	movwf	__strcpy@dest^0,c
 15237  0027AA  6A02               	clrf	(__strcpy@dest+1)^0,c
 15238  0027AC  0E02               	movlw	high _writeBuffer
 15239  0027AE  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 15240  0027B0  0E71               	movlw	low (STR_52+10)
 15241  0027B2  6E03               	movwf	__strcpy@source^0,c
 15242  0027B4  0E23               	movlw	high (STR_52+10)
 15243  0027B6  6E04               	movwf	(__strcpy@source+1)^0,c
 15244  0027B8  EC76  F05D         	call	__strcpy	;wreg free
 15245  0027BC  5001               	movf	?__strcpy^0,w,c
 15246  0027BE  0100               	movlb	0	; () banked
 15247  0027C0  27B0               	addwf	build_response@len& (0+255),f,b
 15248  0027C2  EF27  F018         	goto	l19261
 15249  0027C6                     l19089:
 15250                           
 15251                           ; BSR set to: 0
 15252                           ;app_atcommand.c: 468: {;app_atcommand.c: 469: if (g_sens_measure.isInitDone) {
 15253  0027C6  0101               	movlb	1	; () banked
 15254  0027C8  5143               	movf	(_g_sens_measure+3)& (0+255),w,b
 15255  0027CA  B4D8               	btfsc	status,2,c
 15256  0027CC  EFEA  F013         	goto	u20971
 15257  0027D0  EFEC  F013         	goto	u20970
 15258  0027D4                     u20971:
 15259  0027D4  EFD6  F014         	goto	l19135
 15260  0027D8                     u20970:
 15261  0027D8                     
 15262                           ; BSR set to: 1
 15263                           ;app_atcommand.c: 470: len += _ftoa(g_last_value[LV_GAS_VOLT] , &writeBuffer[len]); writ
      +                          eBuffer[len++] = ',';
 15264  0027D8  C11C  F094         	movff	_g_last_value,__ftoa@num
 15265  0027DC  C11D  F095         	movff	_g_last_value+1,__ftoa@num+1
 15266  0027E0  C11E  F096         	movff	_g_last_value+2,__ftoa@num+2
 15267  0027E4  C11F  F097         	movff	_g_last_value+3,__ftoa@num+3
 15268  0027E8  0E77               	movlw	low _writeBuffer
 15269  0027EA  0100               	movlb	0	; () banked
 15270  0027EC  25B0               	addwf	build_response@len& (0+255),w,b
 15271  0027EE  6F98               	movwf	__ftoa@str& (0+255),b
 15272  0027F0  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15273  0027F2  0E02               	movlw	high _writeBuffer
 15274  0027F4  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15275  0027F6  EC26  F066         	call	__ftoa	;wreg free
 15276  0027FA  0100               	movlb	0	; () banked
 15277  0027FC  5194               	movf	?__ftoa& (0+255),w,b
 15278  0027FE  27B0               	addwf	build_response@len& (0+255),f,b
 15279  002800                     
 15280                           ; BSR set to: 0
 15281  002800  0E77               	movlw	low _writeBuffer
 15282  002802  25B0               	addwf	build_response@len& (0+255),w,b
 15283  002804  6ED9               	movwf	fsr2l,c
 15284  002806  6ADA               	clrf	fsr2h,c
 15285  002808  0E02               	movlw	high _writeBuffer
 15286  00280A  22DA               	addwfc	fsr2h,f,c
 15287  00280C  0E2C               	movlw	44
 15288  00280E  6EDF               	movwf	indf2,c
 15289  002810                     
 15290                           ; BSR set to: 0
 15291  002810  2BB0               	incf	build_response@len& (0+255),f,b
 15292  002812                     
 15293                           ; BSR set to: 0
 15294                           ;app_atcommand.c: 471: if(g_nvm.flash.nA_per_ppm == 0.0f || g_led_status.isBlink)
 15295  002812  C199  F001         	movff	_g_nvm+9,___fleq@ff1
 15296  002816  C19A  F002         	movff	_g_nvm+10,___fleq@ff1+1
 15297  00281A  C19B  F003         	movff	_g_nvm+11,___fleq@ff1+2
 15298  00281E  C19C  F004         	movff	_g_nvm+12,___fleq@ff1+3
 15299  002822  0E00               	movlw	0
 15300  002824  6E05               	movwf	___fleq@ff2^0,c
 15301  002826  0E00               	movlw	0
 15302  002828  6E06               	movwf	(___fleq@ff2+1)^0,c
 15303  00282A  0E00               	movlw	0
 15304  00282C  6E07               	movwf	(___fleq@ff2+2)^0,c
 15305  00282E  0E00               	movlw	0
 15306  002830  6E08               	movwf	(___fleq@ff2+3)^0,c
 15307  002832  ECFD  F05A         	call	___fleq	;wreg free
 15308  002836  B0D8               	btfsc	status,0,c
 15309  002838  EF20  F014         	goto	u20981
 15310  00283C  EF22  F014         	goto	u20980
 15311  002840                     u20981:
 15312  002840  EF2B  F014         	goto	l19101
 15313  002844                     u20980:
 15314  002844  0100               	movlb	0	; () banked
 15315  002846  51C2               	movf	(_g_led_status+2)& (0+255),w,b
 15316  002848  B4D8               	btfsc	status,2,c
 15317  00284A  EF29  F014         	goto	u20991
 15318  00284E  EF2B  F014         	goto	u20990
 15319  002852                     u20991:
 15320  002852  EF3D  F014         	goto	l19103
 15321  002856                     u20990:
 15322  002856                     l19101:
 15323                           
 15324                           ;app_atcommand.c: 472: len += _strcpy(&writeBuffer[len], "----");
 15325  002856  0E77               	movlw	low _writeBuffer
 15326  002858  0100               	movlb	0	; () banked
 15327  00285A  25B0               	addwf	build_response@len& (0+255),w,b
 15328  00285C  6E01               	movwf	__strcpy@dest^0,c
 15329  00285E  6A02               	clrf	(__strcpy@dest+1)^0,c
 15330  002860  0E02               	movlw	high _writeBuffer
 15331  002862  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 15332  002864  0E80               	movlw	low (STR_52+25)
 15333  002866  6E03               	movwf	__strcpy@source^0,c
 15334  002868  0E23               	movlw	high (STR_52+25)
 15335  00286A  6E04               	movwf	(__strcpy@source+1)^0,c
 15336  00286C  EC76  F05D         	call	__strcpy	;wreg free
 15337  002870  5001               	movf	?__strcpy^0,w,c
 15338  002872  0100               	movlb	0	; () banked
 15339  002874  27B0               	addwf	build_response@len& (0+255),f,b
 15340  002876  EF50  F014         	goto	l19105
 15341  00287A                     l19103:
 15342                           
 15343                           ; BSR set to: 0
 15344                           ;app_atcommand.c: 473: else;app_atcommand.c: 474: len += _ftoa(g_last_value[LV_GAS_PPM],
      +                           &writeBuffer[len]);
 15345  00287A  C120  F094         	movff	_g_last_value+4,__ftoa@num
 15346  00287E  C121  F095         	movff	_g_last_value+5,__ftoa@num+1
 15347  002882  C122  F096         	movff	_g_last_value+6,__ftoa@num+2
 15348  002886  C123  F097         	movff	_g_last_value+7,__ftoa@num+3
 15349  00288A  0E77               	movlw	low _writeBuffer
 15350  00288C  25B0               	addwf	build_response@len& (0+255),w,b
 15351  00288E  6F98               	movwf	__ftoa@str& (0+255),b
 15352  002890  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15353  002892  0E02               	movlw	high _writeBuffer
 15354  002894  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15355  002896  EC26  F066         	call	__ftoa	;wreg free
 15356  00289A  0100               	movlb	0	; () banked
 15357  00289C  5194               	movf	?__ftoa& (0+255),w,b
 15358  00289E  27B0               	addwf	build_response@len& (0+255),f,b
 15359  0028A0                     l19105:
 15360                           
 15361                           ; BSR set to: 0
 15362                           ;app_atcommand.c: 475: writeBuffer[len++] = ',';
 15363  0028A0  0E77               	movlw	low _writeBuffer
 15364  0028A2  25B0               	addwf	build_response@len& (0+255),w,b
 15365  0028A4  6ED9               	movwf	fsr2l,c
 15366  0028A6  6ADA               	clrf	fsr2h,c
 15367  0028A8  0E02               	movlw	high _writeBuffer
 15368  0028AA  22DA               	addwfc	fsr2h,f,c
 15369  0028AC  0E2C               	movlw	44
 15370  0028AE  6EDF               	movwf	indf2,c
 15371  0028B0                     
 15372                           ; BSR set to: 0
 15373  0028B0  2BB0               	incf	build_response@len& (0+255),f,b
 15374  0028B2                     
 15375                           ; BSR set to: 0
 15376                           ;app_atcommand.c: 476: float temp = g_last_value[LV_TEMP];
 15377  0028B2  C130  F0A9         	movff	_g_last_value+20,build_response@temp_3684
 15378  0028B6  C131  F0AA         	movff	_g_last_value+21,build_response@temp_3684+1
 15379  0028BA  C132  F0AB         	movff	_g_last_value+22,build_response@temp_3684+2
 15380  0028BE  C133  F0AC         	movff	_g_last_value+23,build_response@temp_3684+3
 15381  0028C2                     
 15382                           ; BSR set to: 0
 15383                           ;app_atcommand.c: 477: if (g_nvm.flash.temp_corf == FAHRENHEIT)
 15384  0028C2  0101               	movlb	1	; () banked
 15385  0028C4  0593               	decf	(_g_nvm+3)& (0+255),w,b
 15386  0028C6  A4D8               	btfss	status,2,c
 15387  0028C8  EF68  F014         	goto	u21001
 15388  0028CC  EF6A  F014         	goto	u21000
 15389  0028D0                     u21001:
 15390  0028D0  EF70  F014         	goto	l19115
 15391  0028D4                     u21000:
 15392  0028D4                     
 15393                           ; BSR set to: 1
 15394                           ;app_atcommand.c: 478: sensor_temp_fahrenheit(&temp);
 15395  0028D4  0EA9               	movlw	low build_response@temp_3684
 15396  0028D6  6E5C               	movwf	sensor_temp_fahrenheit@temp^0,c
 15397  0028D8  0E00               	movlw	high build_response@temp_3684
 15398  0028DA  6E5D               	movwf	(sensor_temp_fahrenheit@temp+1)^0,c
 15399  0028DC  ECEB  F061         	call	_sensor_temp_fahrenheit	;wreg free
 15400  0028E0                     l19115:
 15401                           
 15402                           ;app_atcommand.c: 479: len += _ftoa(temp, &writeBuffer[len]);
 15403  0028E0  C0A9  F094         	movff	build_response@temp_3684,__ftoa@num
 15404  0028E4  C0AA  F095         	movff	build_response@temp_3684+1,__ftoa@num+1
 15405  0028E8  C0AB  F096         	movff	build_response@temp_3684+2,__ftoa@num+2
 15406  0028EC  C0AC  F097         	movff	build_response@temp_3684+3,__ftoa@num+3
 15407  0028F0  0E77               	movlw	low _writeBuffer
 15408  0028F2  0100               	movlb	0	; () banked
 15409  0028F4  25B0               	addwf	build_response@len& (0+255),w,b
 15410  0028F6  6F98               	movwf	__ftoa@str& (0+255),b
 15411  0028F8  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15412  0028FA  0E02               	movlw	high _writeBuffer
 15413  0028FC  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15414  0028FE  EC26  F066         	call	__ftoa	;wreg free
 15415  002902  0100               	movlb	0	; () banked
 15416  002904  5194               	movf	?__ftoa& (0+255),w,b
 15417  002906  27B0               	addwf	build_response@len& (0+255),f,b
 15418  002908                     
 15419                           ; BSR set to: 0
 15420                           ;app_atcommand.c: 480: writeBuffer[len++] = ',';
 15421  002908  0E77               	movlw	low _writeBuffer
 15422  00290A  25B0               	addwf	build_response@len& (0+255),w,b
 15423  00290C  6ED9               	movwf	fsr2l,c
 15424  00290E  6ADA               	clrf	fsr2h,c
 15425  002910  0E02               	movlw	high _writeBuffer
 15426  002912  22DA               	addwfc	fsr2h,f,c
 15427  002914  0E2C               	movlw	44
 15428  002916  6EDF               	movwf	indf2,c
 15429  002918                     
 15430                           ; BSR set to: 0
 15431  002918  2BB0               	incf	build_response@len& (0+255),f,b
 15432  00291A                     
 15433                           ; BSR set to: 0
 15434                           ;app_atcommand.c: 481: len += _ftoa(g_nvm.flash.baseLine_uV, &writeBuffer[len]); writeBu
      +                          ffer[len++] = ',';
 15435  00291A  C195  F094         	movff	_g_nvm+5,__ftoa@num
 15436  00291E  C196  F095         	movff	_g_nvm+6,__ftoa@num+1
 15437  002922  C197  F096         	movff	_g_nvm+7,__ftoa@num+2
 15438  002926  C198  F097         	movff	_g_nvm+8,__ftoa@num+3
 15439  00292A  0E77               	movlw	low _writeBuffer
 15440  00292C  25B0               	addwf	build_response@len& (0+255),w,b
 15441  00292E  6F98               	movwf	__ftoa@str& (0+255),b
 15442  002930  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15443  002932  0E02               	movlw	high _writeBuffer
 15444  002934  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15445  002936  EC26  F066         	call	__ftoa	;wreg free
 15446  00293A  0100               	movlb	0	; () banked
 15447  00293C  5194               	movf	?__ftoa& (0+255),w,b
 15448  00293E  27B0               	addwf	build_response@len& (0+255),f,b
 15449  002940                     
 15450                           ; BSR set to: 0
 15451  002940  0E77               	movlw	low _writeBuffer
 15452  002942  25B0               	addwf	build_response@len& (0+255),w,b
 15453  002944  6ED9               	movwf	fsr2l,c
 15454  002946  6ADA               	clrf	fsr2h,c
 15455  002948  0E02               	movlw	high _writeBuffer
 15456  00294A  22DA               	addwfc	fsr2h,f,c
 15457  00294C  0E2C               	movlw	44
 15458  00294E  6EDF               	movwf	indf2,c
 15459  002950                     
 15460                           ; BSR set to: 0
 15461  002950  2BB0               	incf	build_response@len& (0+255),f,b
 15462  002952                     
 15463                           ; BSR set to: 0
 15464                           ;app_atcommand.c: 482: len += _ftoa(g_nvm.flash.nA_per_ppm, &writeBuffer[len]); writeBuf
      +                          fer[len++] = ',';
 15465  002952  C199  F094         	movff	_g_nvm+9,__ftoa@num
 15466  002956  C19A  F095         	movff	_g_nvm+10,__ftoa@num+1
 15467  00295A  C19B  F096         	movff	_g_nvm+11,__ftoa@num+2
 15468  00295E  C19C  F097         	movff	_g_nvm+12,__ftoa@num+3
 15469  002962  0E77               	movlw	low _writeBuffer
 15470  002964  25B0               	addwf	build_response@len& (0+255),w,b
 15471  002966  6F98               	movwf	__ftoa@str& (0+255),b
 15472  002968  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15473  00296A  0E02               	movlw	high _writeBuffer
 15474  00296C  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15475  00296E  EC26  F066         	call	__ftoa	;wreg free
 15476  002972  0100               	movlb	0	; () banked
 15477  002974  5194               	movf	?__ftoa& (0+255),w,b
 15478  002976  27B0               	addwf	build_response@len& (0+255),f,b
 15479  002978                     
 15480                           ; BSR set to: 0
 15481  002978  0E77               	movlw	low _writeBuffer
 15482  00297A  25B0               	addwf	build_response@len& (0+255),w,b
 15483  00297C  6ED9               	movwf	fsr2l,c
 15484  00297E  6ADA               	clrf	fsr2h,c
 15485  002980  0E02               	movlw	high _writeBuffer
 15486  002982  22DA               	addwfc	fsr2h,f,c
 15487  002984  0E2C               	movlw	44
 15488  002986  6EDF               	movwf	indf2,c
 15489  002988                     
 15490                           ; BSR set to: 0
 15491  002988  2BB0               	incf	build_response@len& (0+255),f,b
 15492  00298A                     
 15493                           ; BSR set to: 0
 15494                           ;app_atcommand.c: 483: len += _strcpy(&writeBuffer[len], "----");
 15495  00298A  0E77               	movlw	low _writeBuffer
 15496  00298C  25B0               	addwf	build_response@len& (0+255),w,b
 15497  00298E  6E01               	movwf	__strcpy@dest^0,c
 15498  002990  6A02               	clrf	(__strcpy@dest+1)^0,c
 15499  002992  0E02               	movlw	high _writeBuffer
 15500  002994  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 15501  002996  0E80               	movlw	low (STR_52+25)
 15502  002998  6E03               	movwf	__strcpy@source^0,c
 15503  00299A  0E23               	movlw	high (STR_52+25)
 15504  00299C  6E04               	movwf	(__strcpy@source+1)^0,c
 15505  00299E  EC76  F05D         	call	__strcpy	;wreg free
 15506  0029A2  5001               	movf	?__strcpy^0,w,c
 15507  0029A4  0100               	movlb	0	; () banked
 15508  0029A6  27B0               	addwf	build_response@len& (0+255),f,b
 15509                           
 15510                           ;app_atcommand.c: 484: } else
 15511  0029A8  EF27  F018         	goto	l19261
 15512  0029AC                     l19135:
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;app_atcommand.c: 485: len += _strcpy(&writeBuffer[len], "----,----,----,----,----,----"
      +                          );
 15516  0029AC  0E77               	movlw	low _writeBuffer
 15517  0029AE  0100               	movlb	0	; () banked
 15518  0029B0  25B0               	addwf	build_response@len& (0+255),w,b
 15519  0029B2  6E01               	movwf	__strcpy@dest^0,c
 15520  0029B4  6A02               	clrf	(__strcpy@dest+1)^0,c
 15521  0029B6  0E02               	movlw	high _writeBuffer
 15522  0029B8  2202               	addwfc	(__strcpy@dest+1)^0,f,c
 15523  0029BA  0E67               	movlw	low STR_52
 15524  0029BC  6E03               	movwf	__strcpy@source^0,c
 15525  0029BE  0E23               	movlw	high STR_52
 15526  0029C0  6E04               	movwf	(__strcpy@source+1)^0,c
 15527  0029C2  EC76  F05D         	call	__strcpy	;wreg free
 15528  0029C6  5001               	movf	?__strcpy^0,w,c
 15529  0029C8  0100               	movlb	0	; () banked
 15530  0029CA  27B0               	addwf	build_response@len& (0+255),f,b
 15531  0029CC  EF27  F018         	goto	l19261
 15532  0029D0                     l19137:
 15533                           
 15534                           ; BSR set to: 0
 15535  0029D0  0101               	movlb	1	; () banked
 15536  0029D2  5191               	movf	(_g_nvm+1)& (0+255),w,b
 15537  0029D4  6E0F               	movwf	__itoa@num^0,c
 15538  0029D6  6A10               	clrf	(__itoa@num+1)^0,c
 15539  0029D8  6A11               	clrf	(__itoa@num+2)^0,c
 15540  0029DA  6A12               	clrf	(__itoa@num+3)^0,c
 15541  0029DC  0E77               	movlw	low _writeBuffer
 15542  0029DE  0100               	movlb	0	; () banked
 15543  0029E0  25B0               	addwf	build_response@len& (0+255),w,b
 15544  0029E2  6E13               	movwf	__itoa@str^0,c
 15545  0029E4  6A14               	clrf	(__itoa@str+1)^0,c
 15546  0029E6  0E02               	movlw	high _writeBuffer
 15547  0029E8  2214               	addwfc	(__itoa@str+1)^0,f,c
 15548  0029EA  ECC3  F044         	call	__itoa	;wreg free
 15549  0029EE  500F               	movf	?__itoa^0,w,c
 15550  0029F0  0100               	movlb	0	; () banked
 15551  0029F2  27B0               	addwf	build_response@len& (0+255),f,b
 15552  0029F4  EF27  F018         	goto	l19261
 15553  0029F8                     l19139:
 15554                           
 15555                           ; BSR set to: 0
 15556  0029F8  0101               	movlb	1	; () banked
 15557  0029FA  5194               	movf	(_g_nvm+4)& (0+255),w,b
 15558  0029FC  6E0F               	movwf	__itoa@num^0,c
 15559  0029FE  6A10               	clrf	(__itoa@num+1)^0,c
 15560  002A00  6A11               	clrf	(__itoa@num+2)^0,c
 15561  002A02  6A12               	clrf	(__itoa@num+3)^0,c
 15562  002A04  0E77               	movlw	low _writeBuffer
 15563  002A06  0100               	movlb	0	; () banked
 15564  002A08  25B0               	addwf	build_response@len& (0+255),w,b
 15565  002A0A  6E13               	movwf	__itoa@str^0,c
 15566  002A0C  6A14               	clrf	(__itoa@str+1)^0,c
 15567  002A0E  0E02               	movlw	high _writeBuffer
 15568  002A10  2214               	addwfc	(__itoa@str+1)^0,f,c
 15569  002A12  ECC3  F044         	call	__itoa	;wreg free
 15570  002A16  500F               	movf	?__itoa^0,w,c
 15571  002A18  0100               	movlb	0	; () banked
 15572  002A1A  27B0               	addwf	build_response@len& (0+255),f,b
 15573  002A1C  EF27  F018         	goto	l19261
 15574  002A20                     l19141:
 15575                           
 15576                           ; BSR set to: 0
 15577                           ;app_atcommand.c: 490: if (status->last_update) { writeBuffer[len++] = 'O'; writeBuffer[
      +                          len++] = 'K'; }
 15578  002A20  EE20 F001          	lfsr	2,1
 15579  002A24  519A               	movf	build_response@status& (0+255),w,b
 15580  002A26  26D9               	addwf	fsr2l,f,c
 15581  002A28  519B               	movf	(build_response@status+1)& (0+255),w,b
 15582  002A2A  22DA               	addwfc	fsr2h,f,c
 15583  002A2C  50DF               	movf	indf2,w,c
 15584  002A2E  B4D8               	btfsc	status,2,c
 15585  002A30  EF1C  F015         	goto	u21011
 15586  002A34  EF1E  F015         	goto	u21010
 15587  002A38                     u21011:
 15588  002A38  EF20  F015         	goto	l19149
 15589  002A3C                     u21010:
 15590  002A3C  EF3F  F012         	goto	l19007
 15591  002A40                     l19149:
 15592                           
 15593                           ; BSR set to: 0
 15594                           ;app_atcommand.c: 491: else { writeBuffer[len++] = 'F'; writeBuffer[len++] = 'A'; writeB
      +                          uffer[len++] = 'I'; writeBuffer[len++] = 'L'; }
 15595  002A40  0E77               	movlw	low _writeBuffer
 15596  002A42  25B0               	addwf	build_response@len& (0+255),w,b
 15597  002A44  6ED9               	movwf	fsr2l,c
 15598  002A46  6ADA               	clrf	fsr2h,c
 15599  002A48  0E02               	movlw	high _writeBuffer
 15600  002A4A  22DA               	addwfc	fsr2h,f,c
 15601  002A4C  0E46               	movlw	70
 15602  002A4E  6EDF               	movwf	indf2,c
 15603  002A50                     
 15604                           ; BSR set to: 0
 15605  002A50  2BB0               	incf	build_response@len& (0+255),f,b
 15606  002A52                     
 15607                           ; BSR set to: 0
 15608  002A52  0E77               	movlw	low _writeBuffer
 15609  002A54  25B0               	addwf	build_response@len& (0+255),w,b
 15610  002A56  6ED9               	movwf	fsr2l,c
 15611  002A58  6ADA               	clrf	fsr2h,c
 15612  002A5A  0E02               	movlw	high _writeBuffer
 15613  002A5C  22DA               	addwfc	fsr2h,f,c
 15614  002A5E  0E41               	movlw	65
 15615  002A60  6EDF               	movwf	indf2,c
 15616  002A62  2BB0               	incf	build_response@len& (0+255),f,b
 15617  002A64                     
 15618                           ; BSR set to: 0
 15619  002A64  0E77               	movlw	low _writeBuffer
 15620  002A66  25B0               	addwf	build_response@len& (0+255),w,b
 15621  002A68  6ED9               	movwf	fsr2l,c
 15622  002A6A  6ADA               	clrf	fsr2h,c
 15623  002A6C  0E02               	movlw	high _writeBuffer
 15624  002A6E  22DA               	addwfc	fsr2h,f,c
 15625  002A70  0E49               	movlw	73
 15626  002A72  6EDF               	movwf	indf2,c
 15627  002A74                     
 15628                           ; BSR set to: 0
 15629  002A74  2BB0               	incf	build_response@len& (0+255),f,b
 15630  002A76  0E77               	movlw	low _writeBuffer
 15631  002A78  25B0               	addwf	build_response@len& (0+255),w,b
 15632  002A7A  6ED9               	movwf	fsr2l,c
 15633  002A7C  6ADA               	clrf	fsr2h,c
 15634  002A7E  0E02               	movlw	high _writeBuffer
 15635  002A80  22DA               	addwfc	fsr2h,f,c
 15636  002A82  0E4C               	movlw	76
 15637  002A84  6EDF               	movwf	indf2,c
 15638  002A86                     
 15639                           ; BSR set to: 0
 15640  002A86  2BB0               	incf	build_response@len& (0+255),f,b
 15641  002A88  EF27  F018         	goto	l19261
 15642  002A8C                     l19161:
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;app_atcommand.c: 494: len += _ftoa(g_nvm.flash.baseLine_uV, &writeBuffer[len]); writeBu
      +                          ffer[len++] = ',';
 15646  002A8C  C195  F094         	movff	_g_nvm+5,__ftoa@num
 15647  002A90  C196  F095         	movff	_g_nvm+6,__ftoa@num+1
 15648  002A94  C197  F096         	movff	_g_nvm+7,__ftoa@num+2
 15649  002A98  C198  F097         	movff	_g_nvm+8,__ftoa@num+3
 15650  002A9C  0E77               	movlw	low _writeBuffer
 15651  002A9E  25B0               	addwf	build_response@len& (0+255),w,b
 15652  002AA0  6F98               	movwf	__ftoa@str& (0+255),b
 15653  002AA2  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15654  002AA4  0E02               	movlw	high _writeBuffer
 15655  002AA6  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15656  002AA8  EC26  F066         	call	__ftoa	;wreg free
 15657  002AAC  0100               	movlb	0	; () banked
 15658  002AAE  5194               	movf	?__ftoa& (0+255),w,b
 15659  002AB0  27B0               	addwf	build_response@len& (0+255),f,b
 15660  002AB2                     
 15661                           ; BSR set to: 0
 15662  002AB2  0E77               	movlw	low _writeBuffer
 15663  002AB4  25B0               	addwf	build_response@len& (0+255),w,b
 15664  002AB6  6ED9               	movwf	fsr2l,c
 15665  002AB8  6ADA               	clrf	fsr2h,c
 15666  002ABA  0E02               	movlw	high _writeBuffer
 15667  002ABC  22DA               	addwfc	fsr2h,f,c
 15668  002ABE  0E2C               	movlw	44
 15669  002AC0  6EDF               	movwf	indf2,c
 15670  002AC2                     
 15671                           ; BSR set to: 0
 15672  002AC2  2BB0               	incf	build_response@len& (0+255),f,b
 15673  002AC4                     
 15674                           ; BSR set to: 0
 15675                           ;app_atcommand.c: 495: len += _ftoa(g_nvm.flash.nA_per_ppm, &writeBuffer[len]);
 15676  002AC4  C199  F094         	movff	_g_nvm+9,__ftoa@num
 15677  002AC8  C19A  F095         	movff	_g_nvm+10,__ftoa@num+1
 15678  002ACC  C19B  F096         	movff	_g_nvm+11,__ftoa@num+2
 15679  002AD0  C19C  F097         	movff	_g_nvm+12,__ftoa@num+3
 15680  002AD4  0E77               	movlw	low _writeBuffer
 15681  002AD6  25B0               	addwf	build_response@len& (0+255),w,b
 15682  002AD8  6F98               	movwf	__ftoa@str& (0+255),b
 15683  002ADA  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15684  002ADC  0E02               	movlw	high _writeBuffer
 15685  002ADE  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15686  002AE0  EC26  F066         	call	__ftoa	;wreg free
 15687  002AE4  0100               	movlb	0	; () banked
 15688  002AE6  5194               	movf	?__ftoa& (0+255),w,b
 15689  002AE8  27B0               	addwf	build_response@len& (0+255),f,b
 15690                           
 15691                           ;app_atcommand.c: 496: break;
 15692  002AEA  EF27  F018         	goto	l19261
 15693  002AEE                     l19169:
 15694                           
 15695                           ; BSR set to: 0
 15696  002AEE  07B0               	decf	build_response@len& (0+255),f,b
 15697  002AF0                     l19171:
 15698                           
 15699                           ; BSR set to: 0
 15700  002AF0  0E00               	movlw	0
 15701  002AF2  6FAE               	movwf	(build_response@i_3688+1)& (0+255),b
 15702  002AF4  0E00               	movlw	0
 15703  002AF6  6FAD               	movwf	build_response@i_3688& (0+255),b
 15704  002AF8                     l19173:
 15705                           
 15706                           ; BSR set to: 0
 15707  002AF8  BFAE               	btfsc	(build_response@i_3688+1)& (0+255),7,b
 15708  002AFA  EF88  F015         	goto	u21021
 15709  002AFE  51AE               	movf	(build_response@i_3688+1)& (0+255),w,b
 15710  002B00  E109               	bnz	u21020
 15711  002B02  0E08               	movlw	8
 15712  002B04  5DAD               	subwf	build_response@i_3688& (0+255),w,b
 15713  002B06  A0D8               	btfss	status,0,c
 15714  002B08  EF88  F015         	goto	u21021
 15715  002B0C  EF8A  F015         	goto	u21020
 15716  002B10                     u21021:
 15717  002B10  EF8C  F015         	goto	l19177
 15718  002B14                     u21020:
 15719  002B14  EF27  F018         	goto	l19261
 15720  002B18                     l19177:
 15721                           
 15722                           ; BSR set to: 0
 15723  002B18  0ED1               	movlw	low (_g_nvm+65)
 15724  002B1A  25AD               	addwf	build_response@i_3688& (0+255),w,b
 15725  002B1C  6ED9               	movwf	fsr2l,c
 15726  002B1E  0E01               	movlw	high (_g_nvm+65)
 15727  002B20  21AE               	addwfc	(build_response@i_3688+1)& (0+255),w,b
 15728  002B22  6EDA               	movwf	fsr2h,c
 15729  002B24  0E77               	movlw	low _writeBuffer
 15730  002B26  25B0               	addwf	build_response@len& (0+255),w,b
 15731  002B28  6EE1               	movwf	fsr1l,c
 15732  002B2A  6AE2               	clrf	fsr1h,c
 15733  002B2C  0E02               	movlw	high _writeBuffer
 15734  002B2E  22E2               	addwfc	fsr1h,f,c
 15735  002B30  CFDF FFE7          	movff	indf2,indf1
 15736  002B34                     
 15737                           ; BSR set to: 0
 15738  002B34  2BB0               	incf	build_response@len& (0+255),f,b
 15739  002B36                     
 15740                           ; BSR set to: 0
 15741  002B36  4BAD               	infsnz	build_response@i_3688& (0+255),f,b
 15742  002B38  2BAE               	incf	(build_response@i_3688+1)& (0+255),f,b
 15743  002B3A  EF7C  F015         	goto	l19173
 15744  002B3E                     l19185:
 15745                           
 15746                           ; BSR set to: 0
 15747  002B3E  C195  F094         	movff	_g_nvm+5,__ftoa@num
 15748  002B42  C196  F095         	movff	_g_nvm+6,__ftoa@num+1
 15749  002B46  C197  F096         	movff	_g_nvm+7,__ftoa@num+2
 15750  002B4A  C198  F097         	movff	_g_nvm+8,__ftoa@num+3
 15751  002B4E  0E77               	movlw	low _writeBuffer
 15752  002B50  25B0               	addwf	build_response@len& (0+255),w,b
 15753  002B52  6F98               	movwf	__ftoa@str& (0+255),b
 15754  002B54  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15755  002B56  0E02               	movlw	high _writeBuffer
 15756  002B58  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15757  002B5A  EC26  F066         	call	__ftoa	;wreg free
 15758  002B5E  0100               	movlb	0	; () banked
 15759  002B60  5194               	movf	?__ftoa& (0+255),w,b
 15760  002B62  27B0               	addwf	build_response@len& (0+255),f,b
 15761  002B64  EF27  F018         	goto	l19261
 15762  002B68                     l19187:
 15763                           
 15764                           ; BSR set to: 0
 15765                           ;app_atcommand.c: 501: len += _ftoa(g_nvm.flash.baseLine_uV, &writeBuffer[len]); writeBu
      +                          ffer[len++] = ',';
 15766  002B68  C195  F094         	movff	_g_nvm+5,__ftoa@num
 15767  002B6C  C196  F095         	movff	_g_nvm+6,__ftoa@num+1
 15768  002B70  C197  F096         	movff	_g_nvm+7,__ftoa@num+2
 15769  002B74  C198  F097         	movff	_g_nvm+8,__ftoa@num+3
 15770  002B78  0E77               	movlw	low _writeBuffer
 15771  002B7A  25B0               	addwf	build_response@len& (0+255),w,b
 15772  002B7C  6F98               	movwf	__ftoa@str& (0+255),b
 15773  002B7E  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15774  002B80  0E02               	movlw	high _writeBuffer
 15775  002B82  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15776  002B84  EC26  F066         	call	__ftoa	;wreg free
 15777  002B88  0100               	movlb	0	; () banked
 15778  002B8A  5194               	movf	?__ftoa& (0+255),w,b
 15779  002B8C  27B0               	addwf	build_response@len& (0+255),f,b
 15780  002B8E                     
 15781                           ; BSR set to: 0
 15782  002B8E  0E77               	movlw	low _writeBuffer
 15783  002B90  25B0               	addwf	build_response@len& (0+255),w,b
 15784  002B92  6ED9               	movwf	fsr2l,c
 15785  002B94  6ADA               	clrf	fsr2h,c
 15786  002B96  0E02               	movlw	high _writeBuffer
 15787  002B98  22DA               	addwfc	fsr2h,f,c
 15788  002B9A  0E2C               	movlw	44
 15789  002B9C  6EDF               	movwf	indf2,c
 15790  002B9E                     
 15791                           ; BSR set to: 0
 15792  002B9E  2BB0               	incf	build_response@len& (0+255),f,b
 15793  002BA0                     
 15794                           ; BSR set to: 0
 15795                           ;app_atcommand.c: 502: len += _ftoa(g_nvm.flash.nA_per_ppm, &writeBuffer[len]); writeBuf
      +                          fer[len++] = ',';
 15796  002BA0  C199  F094         	movff	_g_nvm+9,__ftoa@num
 15797  002BA4  C19A  F095         	movff	_g_nvm+10,__ftoa@num+1
 15798  002BA8  C19B  F096         	movff	_g_nvm+11,__ftoa@num+2
 15799  002BAC  C19C  F097         	movff	_g_nvm+12,__ftoa@num+3
 15800  002BB0  0E77               	movlw	low _writeBuffer
 15801  002BB2  25B0               	addwf	build_response@len& (0+255),w,b
 15802  002BB4  6F98               	movwf	__ftoa@str& (0+255),b
 15803  002BB6  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15804  002BB8  0E02               	movlw	high _writeBuffer
 15805  002BBA  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15806  002BBC  EC26  F066         	call	__ftoa	;wreg free
 15807  002BC0  0100               	movlb	0	; () banked
 15808  002BC2  5194               	movf	?__ftoa& (0+255),w,b
 15809  002BC4  27B0               	addwf	build_response@len& (0+255),f,b
 15810  002BC6                     
 15811                           ; BSR set to: 0
 15812  002BC6  0E77               	movlw	low _writeBuffer
 15813  002BC8  25B0               	addwf	build_response@len& (0+255),w,b
 15814  002BCA  6ED9               	movwf	fsr2l,c
 15815  002BCC  6ADA               	clrf	fsr2h,c
 15816  002BCE  0E02               	movlw	high _writeBuffer
 15817  002BD0  22DA               	addwfc	fsr2h,f,c
 15818  002BD2  0E2C               	movlw	44
 15819  002BD4  6EDF               	movwf	indf2,c
 15820  002BD6  2BB0               	incf	build_response@len& (0+255),f,b
 15821  002BD8                     
 15822                           ; BSR set to: 0
 15823                           ;app_atcommand.c: 503: len += _ftoa(g_nvm.flash.calib_temp, &writeBuffer[len]);
 15824  002BD8  C1A5  F094         	movff	_g_nvm+21,__ftoa@num
 15825  002BDC  C1A6  F095         	movff	_g_nvm+22,__ftoa@num+1
 15826  002BE0  C1A7  F096         	movff	_g_nvm+23,__ftoa@num+2
 15827  002BE4  C1A8  F097         	movff	_g_nvm+24,__ftoa@num+3
 15828  002BE8  0E77               	movlw	low _writeBuffer
 15829  002BEA  25B0               	addwf	build_response@len& (0+255),w,b
 15830  002BEC  6F98               	movwf	__ftoa@str& (0+255),b
 15831  002BEE  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15832  002BF0  0E02               	movlw	high _writeBuffer
 15833  002BF2  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15834  002BF4  EC26  F066         	call	__ftoa	;wreg free
 15835  002BF8  0100               	movlb	0	; () banked
 15836  002BFA  5194               	movf	?__ftoa& (0+255),w,b
 15837  002BFC  27B0               	addwf	build_response@len& (0+255),f,b
 15838                           
 15839                           ;app_atcommand.c: 504: break;
 15840  002BFE  EF27  F018         	goto	l19261
 15841  002C02                     l19199:
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;app_atcommand.c: 506: if (chno == 0) len += _ftoa(g_nvm.flash.gasOffset, &writeBuffer[l
      +                          en]);
 15845  002C02  519E               	movf	build_response@chno& (0+255),w,b
 15846  002C04  A4D8               	btfss	status,2,c
 15847  002C06  EF07  F016         	goto	u21031
 15848  002C0A  EF09  F016         	goto	u21030
 15849  002C0E                     u21031:
 15850  002C0E  EF1E  F016         	goto	l19203
 15851  002C12                     u21030:
 15852  002C12                     
 15853                           ; BSR set to: 0
 15854  002C12  C19D  F094         	movff	_g_nvm+13,__ftoa@num
 15855  002C16  C19E  F095         	movff	_g_nvm+14,__ftoa@num+1
 15856  002C1A  C19F  F096         	movff	_g_nvm+15,__ftoa@num+2
 15857  002C1E  C1A0  F097         	movff	_g_nvm+16,__ftoa@num+3
 15858  002C22  0E77               	movlw	low _writeBuffer
 15859  002C24  25B0               	addwf	build_response@len& (0+255),w,b
 15860  002C26  6F98               	movwf	__ftoa@str& (0+255),b
 15861  002C28  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15862  002C2A  0E02               	movlw	high _writeBuffer
 15863  002C2C  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15864  002C2E  EC26  F066         	call	__ftoa	;wreg free
 15865  002C32  0100               	movlb	0	; () banked
 15866  002C34  5194               	movf	?__ftoa& (0+255),w,b
 15867  002C36  27B0               	addwf	build_response@len& (0+255),f,b
 15868  002C38  EF27  F018         	goto	l19261
 15869  002C3C                     l19203:
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;app_atcommand.c: 507: else len += _ftoa(g_nvm.flash.tempOffset, &writeBuffer[len]);
 15873  002C3C  C1A1  F094         	movff	_g_nvm+17,__ftoa@num
 15874  002C40  C1A2  F095         	movff	_g_nvm+18,__ftoa@num+1
 15875  002C44  C1A3  F096         	movff	_g_nvm+19,__ftoa@num+2
 15876  002C48  C1A4  F097         	movff	_g_nvm+20,__ftoa@num+3
 15877  002C4C  0E77               	movlw	low _writeBuffer
 15878  002C4E  25B0               	addwf	build_response@len& (0+255),w,b
 15879  002C50  6F98               	movwf	__ftoa@str& (0+255),b
 15880  002C52  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15881  002C54  0E02               	movlw	high _writeBuffer
 15882  002C56  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15883  002C58  EC26  F066         	call	__ftoa	;wreg free
 15884  002C5C  0100               	movlb	0	; () banked
 15885  002C5E  5194               	movf	?__ftoa& (0+255),w,b
 15886  002C60  27B0               	addwf	build_response@len& (0+255),f,b
 15887  002C62  EF27  F018         	goto	l19261
 15888  002C66                     l19205:
 15889                           
 15890                           ; BSR set to: 0
 15891  002C66  0101               	movlb	1	; () banked
 15892  002C68  5192               	movf	(_g_nvm+2)& (0+255),w,b
 15893  002C6A  6E0F               	movwf	__itoa@num^0,c
 15894  002C6C  6A10               	clrf	(__itoa@num+1)^0,c
 15895  002C6E  6A11               	clrf	(__itoa@num+2)^0,c
 15896  002C70  6A12               	clrf	(__itoa@num+3)^0,c
 15897  002C72  0E77               	movlw	low _writeBuffer
 15898  002C74  0100               	movlb	0	; () banked
 15899  002C76  25B0               	addwf	build_response@len& (0+255),w,b
 15900  002C78  6E13               	movwf	__itoa@str^0,c
 15901  002C7A  6A14               	clrf	(__itoa@str+1)^0,c
 15902  002C7C  0E02               	movlw	high _writeBuffer
 15903  002C7E  2214               	addwfc	(__itoa@str+1)^0,f,c
 15904  002C80  ECC3  F044         	call	__itoa	;wreg free
 15905  002C84  500F               	movf	?__itoa^0,w,c
 15906  002C86  0100               	movlb	0	; () banked
 15907  002C88  27B0               	addwf	build_response@len& (0+255),f,b
 15908  002C8A  EF27  F018         	goto	l19261
 15909  002C8E                     l19207:
 15910                           
 15911                           ; BSR set to: 0
 15912  002C8E  C1A9  F094         	movff	_g_nvm+25,__ftoa@num
 15913  002C92  C1AA  F095         	movff	_g_nvm+26,__ftoa@num+1
 15914  002C96  C1AB  F096         	movff	_g_nvm+27,__ftoa@num+2
 15915  002C9A  C1AC  F097         	movff	_g_nvm+28,__ftoa@num+3
 15916  002C9E  0E77               	movlw	low _writeBuffer
 15917  002CA0  25B0               	addwf	build_response@len& (0+255),w,b
 15918  002CA2  6F98               	movwf	__ftoa@str& (0+255),b
 15919  002CA4  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15920  002CA6  0E02               	movlw	high _writeBuffer
 15921  002CA8  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15922  002CAA  EC26  F066         	call	__ftoa	;wreg free
 15923  002CAE  0100               	movlb	0	; () banked
 15924  002CB0  5194               	movf	?__ftoa& (0+255),w,b
 15925  002CB2  27B0               	addwf	build_response@len& (0+255),f,b
 15926  002CB4  EF27  F018         	goto	l19261
 15927  002CB8                     l19209:
 15928                           
 15929                           ; BSR set to: 0
 15930  002CB8  C1AD  F094         	movff	_g_nvm+29,__ftoa@num
 15931  002CBC  C1AE  F095         	movff	_g_nvm+30,__ftoa@num+1
 15932  002CC0  C1AF  F096         	movff	_g_nvm+31,__ftoa@num+2
 15933  002CC4  C1B0  F097         	movff	_g_nvm+32,__ftoa@num+3
 15934  002CC8  0E77               	movlw	low _writeBuffer
 15935  002CCA  25B0               	addwf	build_response@len& (0+255),w,b
 15936  002CCC  6F98               	movwf	__ftoa@str& (0+255),b
 15937  002CCE  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 15938  002CD0  0E02               	movlw	high _writeBuffer
 15939  002CD2  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 15940  002CD4  EC26  F066         	call	__ftoa	;wreg free
 15941  002CD8  0100               	movlb	0	; () banked
 15942  002CDA  5194               	movf	?__ftoa& (0+255),w,b
 15943  002CDC  27B0               	addwf	build_response@len& (0+255),f,b
 15944  002CDE  EF27  F018         	goto	l19261
 15945  002CE2                     l19211:
 15946                           
 15947                           ; BSR set to: 0
 15948  002CE2  C1C5  F00F         	movff	_g_nvm+53,__itoa@num
 15949  002CE6  C1C6  F010         	movff	_g_nvm+54,__itoa@num+1
 15950  002CEA  C1C7  F011         	movff	_g_nvm+55,__itoa@num+2
 15951  002CEE  C1C8  F012         	movff	_g_nvm+56,__itoa@num+3
 15952  002CF2  0E77               	movlw	low _writeBuffer
 15953  002CF4  25B0               	addwf	build_response@len& (0+255),w,b
 15954  002CF6  6E13               	movwf	__itoa@str^0,c
 15955  002CF8  6A14               	clrf	(__itoa@str+1)^0,c
 15956  002CFA  0E02               	movlw	high _writeBuffer
 15957  002CFC  2214               	addwfc	(__itoa@str+1)^0,f,c
 15958  002CFE  ECC3  F044         	call	__itoa	;wreg free
 15959  002D02  500F               	movf	?__itoa^0,w,c
 15960  002D04  0100               	movlb	0	; () banked
 15961  002D06  27B0               	addwf	build_response@len& (0+255),f,b
 15962  002D08  EF27  F018         	goto	l19261
 15963  002D0C                     l19213:
 15964                           
 15965                           ; BSR set to: 0
 15966  002D0C  C1C9  F00F         	movff	_g_nvm+57,__itoa@num
 15967  002D10  C1CA  F010         	movff	_g_nvm+58,__itoa@num+1
 15968  002D14  C1CB  F011         	movff	_g_nvm+59,__itoa@num+2
 15969  002D18  C1CC  F012         	movff	_g_nvm+60,__itoa@num+3
 15970  002D1C  0E77               	movlw	low _writeBuffer
 15971  002D1E  25B0               	addwf	build_response@len& (0+255),w,b
 15972  002D20  6E13               	movwf	__itoa@str^0,c
 15973  002D22  6A14               	clrf	(__itoa@str+1)^0,c
 15974  002D24  0E02               	movlw	high _writeBuffer
 15975  002D26  2214               	addwfc	(__itoa@str+1)^0,f,c
 15976  002D28  ECC3  F044         	call	__itoa	;wreg free
 15977  002D2C  500F               	movf	?__itoa^0,w,c
 15978  002D2E  0100               	movlb	0	; () banked
 15979  002D30  27B0               	addwf	build_response@len& (0+255),f,b
 15980  002D32  EF27  F018         	goto	l19261
 15981  002D36                     l19215:
 15982                           
 15983                           ; BSR set to: 0
 15984  002D36  C1CD  F00F         	movff	_g_nvm+61,__itoa@num
 15985  002D3A  C1CE  F010         	movff	_g_nvm+62,__itoa@num+1
 15986  002D3E  C1CF  F011         	movff	_g_nvm+63,__itoa@num+2
 15987  002D42  C1D0  F012         	movff	_g_nvm+64,__itoa@num+3
 15988  002D46  0E77               	movlw	low _writeBuffer
 15989  002D48  25B0               	addwf	build_response@len& (0+255),w,b
 15990  002D4A  6E13               	movwf	__itoa@str^0,c
 15991  002D4C  6A14               	clrf	(__itoa@str+1)^0,c
 15992  002D4E  0E02               	movlw	high _writeBuffer
 15993  002D50  2214               	addwfc	(__itoa@str+1)^0,f,c
 15994  002D52  ECC3  F044         	call	__itoa	;wreg free
 15995  002D56  500F               	movf	?__itoa^0,w,c
 15996  002D58  0100               	movlb	0	; () banked
 15997  002D5A  27B0               	addwf	build_response@len& (0+255),f,b
 15998  002D5C  EF27  F018         	goto	l19261
 15999  002D60                     l19217:
 16000                           
 16001                           ; BSR set to: 0
 16002  002D60  0101               	movlb	1	; () banked
 16003  002D62  51B1               	movf	(_g_nvm+33)& (0+255),w,b
 16004  002D64  6E0F               	movwf	__itoa@num^0,c
 16005  002D66  6A10               	clrf	(__itoa@num+1)^0,c
 16006  002D68  6A11               	clrf	(__itoa@num+2)^0,c
 16007  002D6A  6A12               	clrf	(__itoa@num+3)^0,c
 16008  002D6C  0E77               	movlw	low _writeBuffer
 16009  002D6E  0100               	movlb	0	; () banked
 16010  002D70  25B0               	addwf	build_response@len& (0+255),w,b
 16011  002D72  6E13               	movwf	__itoa@str^0,c
 16012  002D74  6A14               	clrf	(__itoa@str+1)^0,c
 16013  002D76  0E02               	movlw	high _writeBuffer
 16014  002D78  2214               	addwfc	(__itoa@str+1)^0,f,c
 16015  002D7A  ECC3  F044         	call	__itoa	;wreg free
 16016  002D7E  500F               	movf	?__itoa^0,w,c
 16017  002D80  0100               	movlb	0	; () banked
 16018  002D82  27B0               	addwf	build_response@len& (0+255),f,b
 16019  002D84  EF27  F018         	goto	l19261
 16020  002D88                     l19219:
 16021                           
 16022                           ; BSR set to: 0
 16023  002D88  C1BF  F094         	movff	_g_nvm+47,__ftoa@num
 16024  002D8C  C1C0  F095         	movff	_g_nvm+48,__ftoa@num+1
 16025  002D90  C1C1  F096         	movff	_g_nvm+49,__ftoa@num+2
 16026  002D94  C1C2  F097         	movff	_g_nvm+50,__ftoa@num+3
 16027  002D98  0E77               	movlw	low _writeBuffer
 16028  002D9A  25B0               	addwf	build_response@len& (0+255),w,b
 16029  002D9C  6F98               	movwf	__ftoa@str& (0+255),b
 16030  002D9E  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 16031  002DA0  0E02               	movlw	high _writeBuffer
 16032  002DA2  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 16033  002DA4  EC26  F066         	call	__ftoa	;wreg free
 16034  002DA8  0100               	movlb	0	; () banked
 16035  002DAA  5194               	movf	?__ftoa& (0+255),w,b
 16036  002DAC  27B0               	addwf	build_response@len& (0+255),f,b
 16037  002DAE  EF27  F018         	goto	l19261
 16038  002DB2                     l19227:
 16039                           
 16040                           ; BSR set to: 0
 16041  002DB2  C1B3  F094         	movff	_g_nvm+35,__ftoa@num
 16042  002DB6  C1B4  F095         	movff	_g_nvm+36,__ftoa@num+1
 16043  002DBA  C1B5  F096         	movff	_g_nvm+37,__ftoa@num+2
 16044  002DBE  C1B6  F097         	movff	_g_nvm+38,__ftoa@num+3
 16045  002DC2  0E77               	movlw	low _writeBuffer
 16046  002DC4  25B0               	addwf	build_response@len& (0+255),w,b
 16047  002DC6  6F98               	movwf	__ftoa@str& (0+255),b
 16048  002DC8  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 16049  002DCA  0E02               	movlw	high _writeBuffer
 16050  002DCC  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 16051  002DCE  EC26  F066         	call	__ftoa	;wreg free
 16052  002DD2  0100               	movlb	0	; () banked
 16053  002DD4  5194               	movf	?__ftoa& (0+255),w,b
 16054  002DD6  27B0               	addwf	build_response@len& (0+255),f,b
 16055  002DD8                     
 16056                           ; BSR set to: 0
 16057  002DD8  0E77               	movlw	low _writeBuffer
 16058  002DDA  25B0               	addwf	build_response@len& (0+255),w,b
 16059  002DDC  6ED9               	movwf	fsr2l,c
 16060  002DDE  6ADA               	clrf	fsr2h,c
 16061  002DE0  0E02               	movlw	high _writeBuffer
 16062  002DE2  22DA               	addwfc	fsr2h,f,c
 16063  002DE4  0E2C               	movlw	44
 16064  002DE6  6EDF               	movwf	indf2,c
 16065  002DE8                     
 16066                           ; BSR set to: 0
 16067  002DE8  2BB0               	incf	build_response@len& (0+255),f,b
 16068  002DEA                     
 16069                           ; BSR set to: 0
 16070                           ;app_atcommand.c: 519: len += _ftoa(g_nvm.flash.slope_max, &writeBuffer[len]); break;
 16071  002DEA  C1B7  F094         	movff	_g_nvm+39,__ftoa@num
 16072  002DEE  C1B8  F095         	movff	_g_nvm+40,__ftoa@num+1
 16073  002DF2  C1B9  F096         	movff	_g_nvm+41,__ftoa@num+2
 16074  002DF6  C1BA  F097         	movff	_g_nvm+42,__ftoa@num+3
 16075  002DFA  0E77               	movlw	low _writeBuffer
 16076  002DFC  25B0               	addwf	build_response@len& (0+255),w,b
 16077  002DFE  6F98               	movwf	__ftoa@str& (0+255),b
 16078  002E00  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 16079  002E02  0E02               	movlw	high _writeBuffer
 16080  002E04  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 16081  002E06  EC26  F066         	call	__ftoa	;wreg free
 16082  002E0A  0100               	movlb	0	; () banked
 16083  002E0C  5194               	movf	?__ftoa& (0+255),w,b
 16084  002E0E  27B0               	addwf	build_response@len& (0+255),f,b
 16085  002E10  EF27  F018         	goto	l19261
 16086  002E14                     l19235:
 16087                           
 16088                           ; BSR set to: 0
 16089  002E14  C365  F094         	movff	_g_linear_reg+101,__ftoa@num
 16090  002E18  C366  F095         	movff	_g_linear_reg+102,__ftoa@num+1
 16091  002E1C  C367  F096         	movff	_g_linear_reg+103,__ftoa@num+2
 16092  002E20  C368  F097         	movff	_g_linear_reg+104,__ftoa@num+3
 16093  002E24  0E77               	movlw	low _writeBuffer
 16094  002E26  25B0               	addwf	build_response@len& (0+255),w,b
 16095  002E28  6F98               	movwf	__ftoa@str& (0+255),b
 16096  002E2A  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 16097  002E2C  0E02               	movlw	high _writeBuffer
 16098  002E2E  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 16099  002E30  EC26  F066         	call	__ftoa	;wreg free
 16100  002E34  0100               	movlb	0	; () banked
 16101  002E36  5194               	movf	?__ftoa& (0+255),w,b
 16102  002E38  27B0               	addwf	build_response@len& (0+255),f,b
 16103  002E3A  EF27  F018         	goto	l19261
 16104  002E3E                     l19237:
 16105                           
 16106                           ; BSR set to: 0
 16107                           ;app_atcommand.c: 522: {;app_atcommand.c: 523: if (g_nvm.flash.zeroShift_uV == 0.0f) g_s
      +                          ens_autoCalib.sft_ppm = 0.0f;
 16108  002E3E  C1BB  F001         	movff	_g_nvm+43,___fleq@ff1
 16109  002E42  C1BC  F002         	movff	_g_nvm+44,___fleq@ff1+1
 16110  002E46  C1BD  F003         	movff	_g_nvm+45,___fleq@ff1+2
 16111  002E4A  C1BE  F004         	movff	_g_nvm+46,___fleq@ff1+3
 16112  002E4E  0E00               	movlw	0
 16113  002E50  6E05               	movwf	___fleq@ff2^0,c
 16114  002E52  0E00               	movlw	0
 16115  002E54  6E06               	movwf	(___fleq@ff2+1)^0,c
 16116  002E56  0E00               	movlw	0
 16117  002E58  6E07               	movwf	(___fleq@ff2+2)^0,c
 16118  002E5A  0E00               	movlw	0
 16119  002E5C  6E08               	movwf	(___fleq@ff2+3)^0,c
 16120  002E5E  ECFD  F05A         	call	___fleq	;wreg free
 16121  002E62  A0D8               	btfss	status,0,c
 16122  002E64  EF36  F017         	goto	u21041
 16123  002E68  EF38  F017         	goto	u21040
 16124  002E6C                     u21041:
 16125  002E6C  EF43  F017         	goto	l19241
 16126  002E70                     u21040:
 16127  002E70  0E00               	movlw	0
 16128  002E72  0100               	movlb	0	; () banked
 16129  002E74  6FF8               	movwf	(_g_sens_autoCalib+21)& (0+255),b	;volatile
 16130  002E76  0E00               	movlw	0
 16131  002E78  6FF9               	movwf	(_g_sens_autoCalib+22)& (0+255),b	;volatile
 16132  002E7A  0E00               	movlw	0
 16133  002E7C  6FFA               	movwf	(_g_sens_autoCalib+23)& (0+255),b	;volatile
 16134  002E7E  0E00               	movlw	0
 16135  002E80  6FFB               	movwf	(_g_sens_autoCalib+24)& (0+255),b	;volatile
 16136  002E82  EF5D  F017         	goto	l19243
 16137  002E86                     l19241:
 16138                           
 16139                           ;app_atcommand.c: 524: else g_sens_autoCalib.sft_ppm = g_nvm.flash.zeroShift_uV / g_uV_p
      +                          er_ppm;
 16140  002E86  C1BB  F060         	movff	_g_nvm+43,___fldiv@b
 16141  002E8A  C1BC  F061         	movff	_g_nvm+44,___fldiv@b+1
 16142  002E8E  C1BD  F062         	movff	_g_nvm+45,___fldiv@b+2
 16143  002E92  C1BE  F063         	movff	_g_nvm+46,___fldiv@b+3
 16144  002E96  C168  F064         	movff	_g_uV_per_ppm,___fldiv@a
 16145  002E9A  C169  F065         	movff	_g_uV_per_ppm+1,___fldiv@a+1
 16146  002E9E  C16A  F066         	movff	_g_uV_per_ppm+2,___fldiv@a+2
 16147  002EA2  C16B  F067         	movff	_g_uV_per_ppm+3,___fldiv@a+3
 16148  002EA6  EC96  F02F         	call	___fldiv	;wreg free
 16149  002EAA  C060  F0F8         	movff	?___fldiv,_g_sens_autoCalib+21	;volatile
 16150  002EAE  C061  F0F9         	movff	?___fldiv+1,_g_sens_autoCalib+22	;volatile
 16151  002EB2  C062  F0FA         	movff	?___fldiv+2,_g_sens_autoCalib+23	;volatile
 16152  002EB6  C063  F0FB         	movff	?___fldiv+3,_g_sens_autoCalib+24	;volatile
 16153  002EBA                     l19243:
 16154                           
 16155                           ;app_atcommand.c: 525: len += _ftoa(g_nvm.flash.zeroShift_uV, &writeBuffer[len]); writeB
      +                          uffer[len++] = ',';
 16156  002EBA  C1BB  F094         	movff	_g_nvm+43,__ftoa@num
 16157  002EBE  C1BC  F095         	movff	_g_nvm+44,__ftoa@num+1
 16158  002EC2  C1BD  F096         	movff	_g_nvm+45,__ftoa@num+2
 16159  002EC6  C1BE  F097         	movff	_g_nvm+46,__ftoa@num+3
 16160  002ECA  0E77               	movlw	low _writeBuffer
 16161  002ECC  0100               	movlb	0	; () banked
 16162  002ECE  25B0               	addwf	build_response@len& (0+255),w,b
 16163  002ED0  6F98               	movwf	__ftoa@str& (0+255),b
 16164  002ED2  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 16165  002ED4  0E02               	movlw	high _writeBuffer
 16166  002ED6  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 16167  002ED8  EC26  F066         	call	__ftoa	;wreg free
 16168  002EDC  0100               	movlb	0	; () banked
 16169  002EDE  5194               	movf	?__ftoa& (0+255),w,b
 16170  002EE0  27B0               	addwf	build_response@len& (0+255),f,b
 16171  002EE2                     
 16172                           ; BSR set to: 0
 16173  002EE2  0E77               	movlw	low _writeBuffer
 16174  002EE4  25B0               	addwf	build_response@len& (0+255),w,b
 16175  002EE6  6ED9               	movwf	fsr2l,c
 16176  002EE8  6ADA               	clrf	fsr2h,c
 16177  002EEA  0E02               	movlw	high _writeBuffer
 16178  002EEC  22DA               	addwfc	fsr2h,f,c
 16179  002EEE  0E2C               	movlw	44
 16180  002EF0  6EDF               	movwf	indf2,c
 16181  002EF2                     
 16182                           ; BSR set to: 0
 16183  002EF2  2BB0               	incf	build_response@len& (0+255),f,b
 16184  002EF4                     
 16185                           ; BSR set to: 0
 16186                           ;app_atcommand.c: 526: len += _ftoa(g_sens_autoCalib.sft_ppm, &writeBuffer[len]); writeB
      +                          uffer[len++] = ',';
 16187  002EF4  C0F8  F094         	movff	_g_sens_autoCalib+21,__ftoa@num	;volatile
 16188  002EF8  C0F9  F095         	movff	_g_sens_autoCalib+22,__ftoa@num+1	;volatile
 16189  002EFC  C0FA  F096         	movff	_g_sens_autoCalib+23,__ftoa@num+2	;volatile
 16190  002F00  C0FB  F097         	movff	_g_sens_autoCalib+24,__ftoa@num+3	;volatile
 16191  002F04  0E77               	movlw	low _writeBuffer
 16192  002F06  25B0               	addwf	build_response@len& (0+255),w,b
 16193  002F08  6F98               	movwf	__ftoa@str& (0+255),b
 16194  002F0A  6B99               	clrf	(__ftoa@str+1)& (0+255),b
 16195  002F0C  0E02               	movlw	high _writeBuffer
 16196  002F0E  2399               	addwfc	(__ftoa@str+1)& (0+255),f,b
 16197  002F10  EC26  F066         	call	__ftoa	;wreg free
 16198  002F14  0100               	movlb	0	; () banked
 16199  002F16  5194               	movf	?__ftoa& (0+255),w,b
 16200  002F18  27B0               	addwf	build_response@len& (0+255),f,b
 16201  002F1A                     
 16202                           ; BSR set to: 0
 16203  002F1A  0E77               	movlw	low _writeBuffer
 16204  002F1C  25B0               	addwf	build_response@len& (0+255),w,b
 16205  002F1E  6ED9               	movwf	fsr2l,c
 16206  002F20  6ADA               	clrf	fsr2h,c
 16207  002F22  0E02               	movlw	high _writeBuffer
 16208  002F24  22DA               	addwfc	fsr2h,f,c
 16209  002F26  0E2C               	movlw	44
 16210  002F28  6EDF               	movwf	indf2,c
 16211  002F2A                     
 16212                           ; BSR set to: 0
 16213  002F2A  2BB0               	incf	build_response@len& (0+255),f,b
 16214  002F2C                     
 16215                           ; BSR set to: 0
 16216                           ;app_atcommand.c: 527: len += _itoa(g_nvm.flash.autoCalib_cnt, &writeBuffer[len]);
 16217  002F2C  C1C3  F00F         	movff	_g_nvm+51,__itoa@num
 16218  002F30  C1C4  F010         	movff	_g_nvm+52,__itoa@num+1
 16219  002F34  6A11               	clrf	(__itoa@num+2)^0,c
 16220  002F36  6A12               	clrf	(__itoa@num+3)^0,c
 16221  002F38  0E77               	movlw	low _writeBuffer
 16222  002F3A  25B0               	addwf	build_response@len& (0+255),w,b
 16223  002F3C  6E13               	movwf	__itoa@str^0,c
 16224  002F3E  6A14               	clrf	(__itoa@str+1)^0,c
 16225  002F40  0E02               	movlw	high _writeBuffer
 16226  002F42  2214               	addwfc	(__itoa@str+1)^0,f,c
 16227  002F44  ECC3  F044         	call	__itoa	;wreg free
 16228  002F48  500F               	movf	?__itoa^0,w,c
 16229  002F4A  0100               	movlb	0	; () banked
 16230  002F4C  27B0               	addwf	build_response@len& (0+255),f,b
 16231                           
 16232                           ;app_atcommand.c: 528: } break;
 16233  002F4E  EF27  F018         	goto	l19261
 16234  002F52                     l19259:
 16235  002F52  0100               	movlb	0	; () banked
 16236  002F54  EE20 F003          	lfsr	2,3
 16237  002F58  519A               	movf	build_response@status& (0+255),w,b
 16238  002F5A  26D9               	addwf	fsr2l,f,c
 16239  002F5C  519B               	movf	(build_response@status+1)& (0+255),w,b
 16240  002F5E  22DA               	addwfc	fsr2h,f,c
 16241  002F60  50DF               	movf	indf2,w,c
 16242                           
 16243                           ; Switch size 1, requested type "simple"
 16244                           ; Number of cases is 29, Range of values is 1 to 33
 16245                           ; switch strategies available:
 16246                           ; Name         Instructions Cycles
 16247                           ; simple_byte           88    45 (average)
 16248                           ;	Chosen strategy is simple_byte
 16249  002F62  0A01               	xorlw	1	; case 1
 16250  002F64  B4D8               	btfsc	status,2,c
 16251  002F66  EF3F  F012         	goto	l19007
 16252  002F6A  0A03               	xorlw	3	; case 2
 16253  002F6C  B4D8               	btfsc	status,2,c
 16254  002F6E  EF53  F012         	goto	l19013
 16255  002F72  0A07               	xorlw	7	; case 5
 16256  002F74  B4D8               	btfsc	status,2,c
 16257  002F76  EFB2  F012         	goto	l19035
 16258  002F7A  0A03               	xorlw	3	; case 6
 16259  002F7C  B4D8               	btfsc	status,2,c
 16260  002F7E  EF4A  F013         	goto	l19059
 16261  002F82  0A01               	xorlw	1	; case 7
 16262  002F84  B4D8               	btfsc	status,2,c
 16263  002F86  EFE3  F013         	goto	l19089
 16264  002F8A  0A0F               	xorlw	15	; case 8
 16265  002F8C  B4D8               	btfsc	status,2,c
 16266  002F8E  EF64  F012         	goto	l19015
 16267  002F92  0A01               	xorlw	1	; case 9
 16268  002F94  B4D8               	btfsc	status,2,c
 16269  002F96  EF9D  F012         	goto	l19033
 16270  002F9A  0A05               	xorlw	5	; case 12
 16271  002F9C  B4D8               	btfsc	status,2,c
 16272  002F9E  EF78  F015         	goto	l19171
 16273  002FA2  0A01               	xorlw	1	; case 13
 16274  002FA4  B4D8               	btfsc	status,2,c
 16275  002FA6  EF0A  F017         	goto	l19235
 16276  002FAA  0A03               	xorlw	3	; case 14
 16277  002FAC  B4D8               	btfsc	status,2,c
 16278  002FAE  EF1F  F017         	goto	l19237
 16279  002FB2  0A01               	xorlw	1	; case 15
 16280  002FB4  B4D8               	btfsc	status,2,c
 16281  002FB6  EFD9  F016         	goto	l19227
 16282  002FBA  0A1F               	xorlw	31	; case 16
 16283  002FBC  B4D8               	btfsc	status,2,c
 16284  002FBE  EF3F  F012         	goto	l19007
 16285  002FC2  0A01               	xorlw	1	; case 17
 16286  002FC4  B4D8               	btfsc	status,2,c
 16287  002FC6  EF77  F015         	goto	l19169
 16288  002FCA  0A03               	xorlw	3	; case 18
 16289  002FCC  B4D8               	btfsc	status,2,c
 16290  002FCE  EF10  F015         	goto	l19141
 16291  002FD2  0A01               	xorlw	1	; case 19
 16292  002FD4  B4D8               	btfsc	status,2,c
 16293  002FD6  EF10  F015         	goto	l19141
 16294  002FDA  0A07               	xorlw	7	; case 20
 16295  002FDC  B4D8               	btfsc	status,2,c
 16296  002FDE  EF46  F015         	goto	l19161
 16297  002FE2  0A01               	xorlw	1	; case 21
 16298  002FE4  B4D8               	btfsc	status,2,c
 16299  002FE6  EF9F  F015         	goto	l19185
 16300  002FEA  0A03               	xorlw	3	; case 22
 16301  002FEC  B4D8               	btfsc	status,2,c
 16302  002FEE  EFB4  F015         	goto	l19187
 16303  002FF2  0A01               	xorlw	1	; case 23
 16304  002FF4  B4D8               	btfsc	status,2,c
 16305  002FF6  EF01  F016         	goto	l19199
 16306  002FFA  0A0F               	xorlw	15	; case 24
 16307  002FFC  B4D8               	btfsc	status,2,c
 16308  002FFE  EFE8  F014         	goto	l19137
 16309  003002  0A01               	xorlw	1	; case 25
 16310  003004  B4D8               	btfsc	status,2,c
 16311  003006  EFFC  F014         	goto	l19139
 16312  00300A  0A03               	xorlw	3	; case 26
 16313  00300C  B4D8               	btfsc	status,2,c
 16314  00300E  EF33  F016         	goto	l19205
 16315  003012  0A01               	xorlw	1	; case 27
 16316  003014  B4D8               	btfsc	status,2,c
 16317  003016  EF47  F016         	goto	l19207
 16318  00301A  0A07               	xorlw	7	; case 28
 16319  00301C  B4D8               	btfsc	status,2,c
 16320  00301E  EF5C  F016         	goto	l19209
 16321  003022  0A01               	xorlw	1	; case 29
 16322  003024  B4D8               	btfsc	status,2,c
 16323  003026  EFB0  F016         	goto	l19217
 16324  00302A  0A03               	xorlw	3	; case 30
 16325  00302C  B4D8               	btfsc	status,2,c
 16326  00302E  EFC4  F016         	goto	l19219
 16327  003032  0A01               	xorlw	1	; case 31
 16328  003034  B4D8               	btfsc	status,2,c
 16329  003036  EF86  F016         	goto	l19213
 16330  00303A  0A3F               	xorlw	63	; case 32
 16331  00303C  B4D8               	btfsc	status,2,c
 16332  00303E  EF71  F016         	goto	l19211
 16333  003042  0A01               	xorlw	1	; case 33
 16334  003044  B4D8               	btfsc	status,2,c
 16335  003046  EF9B  F016         	goto	l19215
 16336  00304A  EF27  F018         	goto	l19261
 16337  00304E                     l19261:
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;app_atcommand.c: 530: writeBuffer[len++] = '\r'; writeBuffer[len++] = '\n'; writeBuffer
      +                          [len++] = '\0';
 16341  00304E  0E77               	movlw	low _writeBuffer
 16342  003050  25B0               	addwf	build_response@len& (0+255),w,b
 16343  003052  6ED9               	movwf	fsr2l,c
 16344  003054  6ADA               	clrf	fsr2h,c
 16345  003056  0E02               	movlw	high _writeBuffer
 16346  003058  22DA               	addwfc	fsr2h,f,c
 16347  00305A  0E0D               	movlw	13
 16348  00305C  6EDF               	movwf	indf2,c
 16349  00305E                     
 16350                           ; BSR set to: 0
 16351  00305E  2BB0               	incf	build_response@len& (0+255),f,b
 16352  003060                     
 16353                           ; BSR set to: 0
 16354  003060  0E77               	movlw	low _writeBuffer
 16355  003062  25B0               	addwf	build_response@len& (0+255),w,b
 16356  003064  6ED9               	movwf	fsr2l,c
 16357  003066  6ADA               	clrf	fsr2h,c
 16358  003068  0E02               	movlw	high _writeBuffer
 16359  00306A  22DA               	addwfc	fsr2h,f,c
 16360  00306C  0E0A               	movlw	10
 16361  00306E  6EDF               	movwf	indf2,c
 16362  003070  2BB0               	incf	build_response@len& (0+255),f,b
 16363  003072                     
 16364                           ; BSR set to: 0
 16365  003072  0E77               	movlw	low _writeBuffer
 16366  003074  25B0               	addwf	build_response@len& (0+255),w,b
 16367  003076  6ED9               	movwf	fsr2l,c
 16368  003078  6ADA               	clrf	fsr2h,c
 16369  00307A  0E02               	movlw	high _writeBuffer
 16370  00307C  22DA               	addwfc	fsr2h,f,c
 16371  00307E  0E00               	movlw	0
 16372  003080  6EDF               	movwf	indf2,c
 16373  003082                     
 16374                           ; BSR set to: 0
 16375  003082  2BB0               	incf	build_response@len& (0+255),f,b
 16376  003084                     
 16377                           ; BSR set to: 0
 16378                           ;app_atcommand.c: 531: write_command(writeBuffer);
 16379  003084  0E77               	movlw	low _writeBuffer
 16380  003086  6E08               	movwf	write_command@buff^0,c
 16381  003088  0E02               	movlw	high _writeBuffer
 16382  00308A  6E09               	movwf	(write_command@buff+1)^0,c
 16383  00308C  EC3D  F069         	call	_write_command	;wreg free
 16384  003090  0012               	return		;funcret
 16385  003092                     __end_of_build_response:
 16386                           	callstack 0
 16387                           
 16388 ;; *************** function _write_command *****************
 16389 ;; Defined at:
 16390 ;;		line 123 in file "app_atcommand.c"
 16391 ;; Parameters:    Size  Location     Type
 16392 ;;  buff            2    7[COMRAM] PTR const unsigned char 
 16393 ;;		 -> STR_53(9), writeBuffer(64), 
 16394 ;; Auto vars:     Size  Location     Type
 16395 ;;		None
 16396 ;; Return value:  Size  Location     Type
 16397 ;;                  1    wreg      void 
 16398 ;; Registers used:
 16399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16400 ;; Tracked objects:
 16401 ;;		On entry : 0/0
 16402 ;;		On exit  : 0/0
 16403 ;;		Unchanged: 0/0
 16404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16409 ;;Total ram usage:        2 bytes
 16410 ;; Hardware stack levels used: 1
 16411 ;; Hardware stack levels required when called: 2
 16412 ;; This function calls:
 16413 ;;		__strlen
 16414 ;;		_putUSBUSART
 16415 ;; This function is called by:
 16416 ;;		_build_response
 16417 ;;		_sens_autoCalib_slp_set_task
 16418 ;; This function uses a non-reentrant model
 16419 ;;
 16420                           
 16421                           	psect	text77
 16422  00D27A                     __ptext77:
 16423                           	callstack 0
 16424  00D27A                     _write_command:
 16425                           	callstack 27
 16426  00D27A                     
 16427                           ;app_atcommand.c: 125: if((cdc_trf_state == 0) == 1)
 16428  00D27A  0100               	movlb	0	; () banked
 16429  00D27C  51D4               	movf	_cdc_trf_state& (0+255),w,b
 16430  00D27E  A4D8               	btfss	status,2,c
 16431  00D280  EF44  F069         	goto	u11851
 16432  00D284  EF46  F069         	goto	u11850
 16433  00D288                     u11851:
 16434  00D288  EF54  F069         	goto	l1162
 16435  00D28C                     u11850:
 16436  00D28C                     
 16437                           ; BSR set to: 0
 16438                           ;app_atcommand.c: 126: {;app_atcommand.c: 127: putUSBUSART((uint8_t*)buff, (uint8_t)_str
      +                          len(buff));
 16439  00D28C  C008  F005         	movff	write_command@buff,putUSBUSART@data
 16440  00D290  C009  F006         	movff	write_command@buff+1,putUSBUSART@data+1
 16441  00D294  C008  F001         	movff	write_command@buff,__strlen@source
 16442  00D298  C009  F002         	movff	write_command@buff+1,__strlen@source+1
 16443  00D29C  ECFF  F065         	call	__strlen	;wreg free
 16444  00D2A0  5001               	movf	?__strlen^0,w,c
 16445  00D2A2  6E07               	movwf	putUSBUSART@length^0,c
 16446  00D2A4  EC99  F069         	call	_putUSBUSART	;wreg free
 16447  00D2A8                     l1162:
 16448  00D2A8  0012               	return		;funcret
 16449  00D2AA                     __end_of_write_command:
 16450                           	callstack 0
 16451                           
 16452 ;; *************** function _putUSBUSART *****************
 16453 ;; Defined at:
 16454 ;;		line 557 in file "usb/usb_device_cdc.c"
 16455 ;; Parameters:    Size  Location     Type
 16456 ;;  data            2    4[COMRAM] PTR unsigned char 
 16457 ;;		 -> STR_53(9), writeBuffer(64), 
 16458 ;;  length          1    6[COMRAM] unsigned char 
 16459 ;; Auto vars:     Size  Location     Type
 16460 ;;		None
 16461 ;; Return value:  Size  Location     Type
 16462 ;;                  1    wreg      void 
 16463 ;; Registers used:
 16464 ;;		wreg, status,2, status,0
 16465 ;; Tracked objects:
 16466 ;;		On entry : 0/0
 16467 ;;		On exit  : 0/0
 16468 ;;		Unchanged: 0/0
 16469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16470 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16474 ;;Total ram usage:        3 bytes
 16475 ;; Hardware stack levels used: 1
 16476 ;; Hardware stack levels required when called: 1
 16477 ;; This function calls:
 16478 ;;		Nothing
 16479 ;; This function is called by:
 16480 ;;		_write_command
 16481 ;; This function uses a non-reentrant model
 16482 ;;
 16483                           
 16484                           	psect	text78
 16485  00D332                     __ptext78:
 16486                           	callstack 0
 16487  00D332                     _putUSBUSART:
 16488                           	callstack 27
 16489  00D332                     
 16490                           ;usb_device_cdc.c: 582: ;;usb_device_cdc.c: 583: if(cdc_trf_state == 0)
 16491  00D332  0100               	movlb	0	; () banked
 16492  00D334  51D4               	movf	_cdc_trf_state& (0+255),w,b
 16493  00D336  A4D8               	btfss	status,2,c
 16494  00D338  EFA0  F069         	goto	u10971
 16495  00D33C  EFA2  F069         	goto	u10970
 16496  00D340                     u10971:
 16497  00D340  EFAE  F069         	goto	l682
 16498  00D344                     u10970:
 16499  00D344                     
 16500                           ; BSR set to: 0
 16501                           ;usb_device_cdc.c: 584: {;usb_device_cdc.c: 585: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx
      +                          _len = length; cdc_mem_type = 0x01; cdc_trf_state = 1; };
 16502  00D344  C005  F177         	movff	putUSBUSART@data,_pCDCSrc
 16503  00D348  C006  F178         	movff	putUSBUSART@data+1,_pCDCSrc+1
 16504  00D34C                     
 16505                           ; BSR set to: 0
 16506  00D34C  C007  F0D3         	movff	putUSBUSART@length,_cdc_tx_len
 16507  00D350                     
 16508                           ; BSR set to: 0
 16509  00D350  0E01               	movlw	1
 16510  00D352  0101               	movlb	1	; () banked
 16511  00D354  6F8E               	movwf	_cdc_mem_type& (0+255),b
 16512  00D356                     
 16513                           ; BSR set to: 1
 16514  00D356  0E01               	movlw	1
 16515  00D358  0100               	movlb	0	; () banked
 16516  00D35A  6FD4               	movwf	_cdc_trf_state& (0+255),b
 16517  00D35C                     l682:
 16518                           
 16519                           ; BSR set to: 0
 16520  00D35C  0012               	return		;funcret
 16521  00D35E                     __end_of_putUSBUSART:
 16522                           	callstack 0
 16523                           
 16524 ;; *************** function __strlen *****************
 16525 ;; Defined at:
 16526 ;;		line 18 in file "util/_string.c"
 16527 ;; Parameters:    Size  Location     Type
 16528 ;;  source          2    0[COMRAM] PTR const unsigned char 
 16529 ;;		 -> g_atcommand.apply_params(32), STR_53(9), writeBuffer(64), parse_command@cmd(11), 
 16530 ;;		 -> g_atcommand(243), atcommand_type(403), 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;  sc              2    2[COMRAM] PTR const unsigned char 
 16533 ;;		 -> g_atcommand.apply_params(32), STR_53(9), writeBuffer(64), parse_command@cmd(11), 
 16534 ;;		 -> g_atcommand(243), atcommand_type(403), 
 16535 ;; Return value:  Size  Location     Type
 16536 ;;                  2    0[COMRAM] unsigned int 
 16537 ;; Registers used:
 16538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16539 ;; Tracked objects:
 16540 ;;		On entry : 0/0
 16541 ;;		On exit  : 0/0
 16542 ;;		Unchanged: 0/0
 16543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16548 ;;Total ram usage:        4 bytes
 16549 ;; Hardware stack levels used: 1
 16550 ;; Hardware stack levels required when called: 1
 16551 ;; This function calls:
 16552 ;;		Nothing
 16553 ;; This function is called by:
 16554 ;;		_write_command
 16555 ;;		_check_atcommand
 16556 ;;		_split_param
 16557 ;;		_update_command
 16558 ;; This function uses a non-reentrant model
 16559 ;;
 16560                           
 16561                           	psect	text79
 16562  00CBFE                     __ptext79:
 16563                           	callstack 0
 16564  00CBFE                     __strlen:
 16565                           	callstack 27
 16566  00CBFE                     
 16567                           ;_string.c: 20: const char* sc = source;
 16568  00CBFE  C001  F003         	movff	__strlen@source,__strlen@sc
 16569  00CC02  C002  F004         	movff	__strlen@source+1,__strlen@sc+1
 16570                           
 16571                           ;_string.c: 21: while(*sc) ++sc;
 16572  00CC06  EF07  F066         	goto	l10939
 16573  00CC0A                     l10937:
 16574  00CC0A  4A03               	infsnz	__strlen@sc^0,f,c
 16575  00CC0C  2A04               	incf	(__strlen@sc+1)^0,f,c
 16576  00CC0E                     l10939:
 16577  00CC0E  C003  FFF6         	movff	__strlen@sc,tblptrl
 16578  00CC12  C004  FFF7         	movff	__strlen@sc+1,tblptrh
 16579  00CC16  6AF8               	clrf	tblptru,c
 16580  00CC18  0E0E               	movlw	(high __ramtop+-1)
 16581  00CC1A  64F7               	cpfsgt	tblptrh,c
 16582  00CC1C  D003               	bra	u10787
 16583  00CC1E  0008               	tblrd		*
 16584  00CC20  50F5               	movf	tablat,w,c
 16585  00CC22  D005               	bra	u10780
 16586  00CC24                     u10787:
 16587  00CC24  CFF6 FFE9          	movff	tblptrl,fsr0l
 16588  00CC28  CFF7 FFEA          	movff	tblptrh,fsr0h
 16589  00CC2C  50EF               	movf	indf0,w,c
 16590  00CC2E                     u10780:
 16591  00CC2E  0900               	iorlw	0
 16592  00CC30  A4D8               	btfss	status,2,c
 16593  00CC32  EF1D  F066         	goto	u10791
 16594  00CC36  EF1F  F066         	goto	u10790
 16595  00CC3A                     u10791:
 16596  00CC3A  EF05  F066         	goto	l10937
 16597  00CC3E                     u10790:
 16598  00CC3E                     
 16599                           ;_string.c: 22: return sc-source;
 16600  00CC3E  5001               	movf	__strlen@source^0,w,c
 16601  00CC40  5C03               	subwf	__strlen@sc^0,w,c
 16602  00CC42  6E01               	movwf	?__strlen^0,c
 16603  00CC44  5002               	movf	(__strlen@source+1)^0,w,c
 16604  00CC46  5804               	subwfb	(__strlen@sc+1)^0,w,c
 16605  00CC48  6E02               	movwf	(?__strlen+1)^0,c
 16606  00CC4A  0012               	return		;funcret
 16607  00CC4C                     __end_of__strlen:
 16608                           	callstack 0
 16609                           
 16610 ;; *************** function _sensor_temp_fahrenheit *****************
 16611 ;; Defined at:
 16612 ;;		line 131 in file "sensor.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;  temp            2   91[COMRAM] PTR float 
 16615 ;;		 -> build_response@temp_3684(4), build_response@temp_3680(4), build_response@temp(4), 
 16616 ;; Auto vars:     Size  Location     Type
 16617 ;;		None
 16618 ;; Return value:  Size  Location     Type
 16619 ;;                  1    wreg      void 
 16620 ;; Registers used:
 16621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16622 ;; Tracked objects:
 16623 ;;		On entry : 0/0
 16624 ;;		On exit  : 0/0
 16625 ;;		Unchanged: 0/0
 16626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16631 ;;Total ram usage:        2 bytes
 16632 ;; Hardware stack levels used: 1
 16633 ;; Hardware stack levels required when called: 2
 16634 ;; This function calls:
 16635 ;;		___fladd
 16636 ;;		___flmul
 16637 ;; This function is called by:
 16638 ;;		_build_response
 16639 ;; This function uses a non-reentrant model
 16640 ;;
 16641                           
 16642                           	psect	text80
 16643  00C3D6                     __ptext80:
 16644                           	callstack 0
 16645  00C3D6                     _sensor_temp_fahrenheit:
 16646                           	callstack 26
 16647  00C3D6                     
 16648                           ;sensor.c: 133: *temp = (*temp * 1.8f) + 32.0f;
 16649  00C3D6  0E66               	movlw	102
 16650  00C3D8  6E47               	movwf	___flmul@a^0,c
 16651  00C3DA  0E66               	movlw	102
 16652  00C3DC  6E48               	movwf	(___flmul@a+1)^0,c
 16653  00C3DE  0EE6               	movlw	230
 16654  00C3E0  6E49               	movwf	(___flmul@a+2)^0,c
 16655  00C3E2  0E3F               	movlw	63
 16656  00C3E4  6E4A               	movwf	(___flmul@a+3)^0,c
 16657  00C3E6  C05C  FFD9         	movff	sensor_temp_fahrenheit@temp,fsr2l
 16658  00C3EA  C05D  FFDA         	movff	sensor_temp_fahrenheit@temp+1,fsr2h
 16659  00C3EE  CFDE F043          	movff	postinc2,___flmul@b
 16660  00C3F2  CFDE F044          	movff	postinc2,___flmul@b+1
 16661  00C3F6  CFDE F045          	movff	postinc2,___flmul@b+2
 16662  00C3FA  CFDE F046          	movff	postinc2,___flmul@b+3
 16663  00C3FE  EC73  F02B         	call	___flmul	;wreg free
 16664  00C402  C043  F027         	movff	?___flmul,___fladd@b
 16665  00C406  C044  F028         	movff	?___flmul+1,___fladd@b+1
 16666  00C40A  C045  F029         	movff	?___flmul+2,___fladd@b+2
 16667  00C40E  C046  F02A         	movff	?___flmul+3,___fladd@b+3
 16668  00C412  0E00               	movlw	0
 16669  00C414  6E2B               	movwf	___fladd@a^0,c
 16670  00C416  0E00               	movlw	0
 16671  00C418  6E2C               	movwf	(___fladd@a+1)^0,c
 16672  00C41A  0E00               	movlw	0
 16673  00C41C  6E2D               	movwf	(___fladd@a+2)^0,c
 16674  00C41E  0E42               	movlw	66
 16675  00C420  6E2E               	movwf	(___fladd@a+3)^0,c
 16676  00C422  EC13  F029         	call	___fladd	;wreg free
 16677  00C426  C05C  FFD9         	movff	sensor_temp_fahrenheit@temp,fsr2l
 16678  00C42A  C05D  FFDA         	movff	sensor_temp_fahrenheit@temp+1,fsr2h
 16679  00C42E  C027  FFDE         	movff	?___fladd,postinc2
 16680  00C432  C028  FFDE         	movff	?___fladd+1,postinc2
 16681  00C436  C029  FFDE         	movff	?___fladd+2,postinc2
 16682  00C43A  C02A  FFDE         	movff	?___fladd+3,postinc2
 16683  00C43E  0012               	return		;funcret
 16684  00C440                     __end_of_sensor_temp_fahrenheit:
 16685                           	callstack 0
 16686                           
 16687 ;; *************** function __strcpy *****************
 16688 ;; Defined at:
 16689 ;;		line 4 in file "util/_string.c"
 16690 ;; Parameters:    Size  Location     Type
 16691 ;;  dest            2    0[COMRAM] PTR unsigned char 
 16692 ;;		 -> writeBuffer(64), g_atcommand(243), 
 16693 ;;  source          2    2[COMRAM] PTR const unsigned char 
 16694 ;;		 -> STR_52(30), STR_51(5), STR_50(5), STR_49(20), 
 16695 ;;		 -> STR_48(5), STR_47(10), STR_46(5), STR_45(12), 
 16696 ;;		 -> parse_command@param(32), parse_command@cmd(11), g_atcommand.status(177), g_atcommand(243), 
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;  i               2    6[COMRAM] unsigned int 
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  2    0[COMRAM] unsigned int 
 16701 ;; Registers used:
 16702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16711 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16712 ;;Total ram usage:        8 bytes
 16713 ;; Hardware stack levels used: 1
 16714 ;; Hardware stack levels required when called: 1
 16715 ;; This function calls:
 16716 ;;		Nothing
 16717 ;; This function is called by:
 16718 ;;		_parse_command
 16719 ;;		_build_response
 16720 ;; This function uses a non-reentrant model
 16721 ;;
 16722                           
 16723                           	psect	text81
 16724  00BAEC                     __ptext81:
 16725                           	callstack 0
 16726  00BAEC                     __strcpy:
 16727                           	callstack 27
 16728  00BAEC                     
 16729                           ;_string.c: 6: unsigned int i = 0;
 16730  00BAEC  0E00               	movlw	0
 16731  00BAEE  6E08               	movwf	(__strcpy@i+1)^0,c
 16732  00BAF0  0E00               	movlw	0
 16733  00BAF2  6E07               	movwf	__strcpy@i^0,c
 16734  00BAF4                     
 16735                           ;_string.c: 7: if(!source || !dest) return i;
 16736  00BAF4  5003               	movf	__strcpy@source^0,w,c
 16737  00BAF6  1004               	iorwf	(__strcpy@source+1)^0,w,c
 16738  00BAF8  B4D8               	btfsc	status,2,c
 16739  00BAFA  EF81  F05D         	goto	u11701
 16740  00BAFE  EF83  F05D         	goto	u11700
 16741  00BB02                     u11701:
 16742  00BB02  EF8C  F05D         	goto	l49
 16743  00BB06                     u11700:
 16744  00BB06  5001               	movf	__strcpy@dest^0,w,c
 16745  00BB08  1002               	iorwf	(__strcpy@dest+1)^0,w,c
 16746  00BB0A  A4D8               	btfss	status,2,c
 16747  00BB0C  EF8A  F05D         	goto	u11711
 16748  00BB10  EF8C  F05D         	goto	u11710
 16749  00BB14                     u11711:
 16750  00BB14  EF94  F05D         	goto	l11671
 16751  00BB18                     u11710:
 16752  00BB18                     l49:
 16753  00BB18  0E00               	movlw	0
 16754  00BB1A  6E02               	movwf	(?__strcpy+1)^0,c
 16755  00BB1C  0E00               	movlw	0
 16756  00BB1E  6E01               	movwf	?__strcpy^0,c
 16757  00BB20  EFBD  F05D         	goto	l50
 16758  00BB24                     l11669:
 16759  00BB24  4A07               	infsnz	__strcpy@i^0,f,c
 16760  00BB26  2A08               	incf	(__strcpy@i+1)^0,f,c
 16761  00BB28                     l11671:
 16762  00BB28  5003               	movf	__strcpy@source^0,w,c
 16763  00BB2A  6E05               	movwf	??__strcpy^0,c
 16764  00BB2C  5004               	movf	(__strcpy@source+1)^0,w,c
 16765  00BB2E  6E06               	movwf	(??__strcpy+1)^0,c
 16766  00BB30  4A03               	infsnz	__strcpy@source^0,f,c
 16767  00BB32  2A04               	incf	(__strcpy@source+1)^0,f,c
 16768  00BB34  C005  FFF6         	movff	??__strcpy,tblptrl
 16769  00BB38  C006  FFF7         	movff	??__strcpy+1,tblptrh
 16770  00BB3C  6AF8               	clrf	tblptru,c
 16771  00BB3E  C001  FFD9         	movff	__strcpy@dest,fsr2l
 16772  00BB42  C002  FFDA         	movff	__strcpy@dest+1,fsr2h
 16773  00BB46  4A01               	infsnz	__strcpy@dest^0,f,c
 16774  00BB48  2A02               	incf	(__strcpy@dest+1)^0,f,c
 16775  00BB4A  0E0E               	movlw	(high __ramtop+-1)
 16776  00BB4C  64F7               	cpfsgt	tblptrh,c
 16777  00BB4E  D003               	bra	u11727
 16778  00BB50  0008               	tblrd		*
 16779  00BB52  50F5               	movf	tablat,w,c
 16780  00BB54  D005               	bra	u11720
 16781  00BB56                     u11727:
 16782  00BB56  CFF6 FFE9          	movff	tblptrl,fsr0l
 16783  00BB5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16784  00BB5E  50EF               	movf	indf0,w,c
 16785  00BB60                     u11720:
 16786  00BB60  6EDF               	movwf	indf2,c
 16787  00BB62  50DF               	movf	indf2,w,c
 16788  00BB64  A4D8               	btfss	status,2,c
 16789  00BB66  EFB7  F05D         	goto	u11731
 16790  00BB6A  EFB9  F05D         	goto	u11730
 16791  00BB6E                     u11731:
 16792  00BB6E  EF92  F05D         	goto	l11669
 16793  00BB72                     u11730:
 16794  00BB72                     
 16795                           ;_string.c: 9: return i;
 16796  00BB72  C007  F001         	movff	__strcpy@i,?__strcpy
 16797  00BB76  C008  F002         	movff	__strcpy@i+1,?__strcpy+1
 16798  00BB7A                     l50:
 16799  00BB7A  0012               	return		;funcret
 16800  00BB7C                     __end_of__strcpy:
 16801                           	callstack 0
 16802                           
 16803 ;; *************** function __itoa *****************
 16804 ;; Defined at:
 16805 ;;		line 4 in file "util/_itoa.c"
 16806 ;; Parameters:    Size  Location     Type
 16807 ;;  num             4   14[COMRAM] const long 
 16808 ;;  str             2   18[COMRAM] PTR unsigned char 
 16809 ;;		 -> writeBuffer(64), 
 16810 ;; Auto vars:     Size  Location     Type
 16811 ;;  n               4   28[COMRAM] long 
 16812 ;;  shifter         4   22[COMRAM] long 
 16813 ;;  p               2   26[COMRAM] PTR unsigned char 
 16814 ;;		 -> writeBuffer(64), 
 16815 ;;  len             2   20[COMRAM] unsigned int 
 16816 ;; Return value:  Size  Location     Type
 16817 ;;                  2   14[COMRAM] unsigned int 
 16818 ;; Registers used:
 16819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16820 ;; Tracked objects:
 16821 ;;		On entry : 0/0
 16822 ;;		On exit  : 0/0
 16823 ;;		Unchanged: 0/0
 16824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16825 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16829 ;;Total ram usage:       18 bytes
 16830 ;; Hardware stack levels used: 1
 16831 ;; Hardware stack levels required when called: 2
 16832 ;; This function calls:
 16833 ;;		___aldiv
 16834 ;;		___almod
 16835 ;;		___lmul
 16836 ;; This function is called by:
 16837 ;;		_build_response
 16838 ;; This function uses a non-reentrant model
 16839 ;;
 16840                           
 16841                           	psect	text82
 16842  008986                     __ptext82:
 16843                           	callstack 0
 16844  008986                     __itoa:
 16845                           	callstack 26
 16846  008986                     
 16847                           ;_itoa.c: 6: long shifter;;_itoa.c: 7: long n;;_itoa.c: 8: unsigned len = 0;
 16848  008986  0E00               	movlw	0
 16849  008988  6E16               	movwf	(__itoa@len+1)^0,c
 16850  00898A  0E00               	movlw	0
 16851  00898C  6E15               	movwf	__itoa@len^0,c
 16852  00898E                     
 16853                           ;_itoa.c: 9: char* p = str;
 16854  00898E  C013  F01B         	movff	__itoa@str,__itoa@p
 16855  008992  C014  F01C         	movff	__itoa@str+1,__itoa@p+1
 16856  008996                     
 16857                           ;_itoa.c: 11: n = num;
 16858  008996  C00F  F01D         	movff	__itoa@num,__itoa@n
 16859  00899A  C010  F01E         	movff	__itoa@num+1,__itoa@n+1
 16860  00899E  C011  F01F         	movff	__itoa@num+2,__itoa@n+2
 16861  0089A2  C012  F020         	movff	__itoa@num+3,__itoa@n+3
 16862  0089A6                     
 16863                           ;_itoa.c: 12: if (num < 0){
 16864  0089A6  BE12               	btfsc	(__itoa@num+3)^0,7,c
 16865  0089A8  EFDA  F044         	goto	u20590
 16866  0089AC  EFD8  F044         	goto	u20591
 16867  0089B0                     u20591:
 16868  0089B0  EFFE  F044         	goto	l18711
 16869  0089B4                     u20590:
 16870  0089B4                     
 16871                           ;_itoa.c: 13: n *= -1;
 16872  0089B4  C01D  F001         	movff	__itoa@n,___lmul@multiplier
 16873  0089B8  C01E  F002         	movff	__itoa@n+1,___lmul@multiplier+1
 16874  0089BC  C01F  F003         	movff	__itoa@n+2,___lmul@multiplier+2
 16875  0089C0  C020  F004         	movff	__itoa@n+3,___lmul@multiplier+3
 16876  0089C4  0EFF               	movlw	255
 16877  0089C6  6E05               	movwf	___lmul@multiplicand^0,c
 16878  0089C8  0EFF               	movlw	255
 16879  0089CA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 16880  0089CC  0EFF               	movlw	255
 16881  0089CE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 16882  0089D0  0EFF               	movlw	255
 16883  0089D2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 16884  0089D4  EC20  F062         	call	___lmul	;wreg free
 16885  0089D8  C001  F01D         	movff	?___lmul,__itoa@n
 16886  0089DC  C002  F01E         	movff	?___lmul+1,__itoa@n+1
 16887  0089E0  C003  F01F         	movff	?___lmul+2,__itoa@n+2
 16888  0089E4  C004  F020         	movff	?___lmul+3,__itoa@n+3
 16889  0089E8                     
 16890                           ;_itoa.c: 14: *p = '-';
 16891  0089E8  C01B  FFD9         	movff	__itoa@p,fsr2l
 16892  0089EC  C01C  FFDA         	movff	__itoa@p+1,fsr2h
 16893  0089F0  0E2D               	movlw	45
 16894  0089F2  6EDF               	movwf	indf2,c
 16895  0089F4                     
 16896                           ;_itoa.c: 15: p++; len++;
 16897  0089F4  4A1B               	infsnz	__itoa@p^0,f,c
 16898  0089F6  2A1C               	incf	(__itoa@p+1)^0,f,c
 16899  0089F8  4A15               	infsnz	__itoa@len^0,f,c
 16900  0089FA  2A16               	incf	(__itoa@len+1)^0,f,c
 16901  0089FC                     l18711:
 16902                           
 16903                           ;_itoa.c: 16: };_itoa.c: 18: shifter = n;
 16904  0089FC  C01D  F017         	movff	__itoa@n,__itoa@shifter
 16905  008A00  C01E  F018         	movff	__itoa@n+1,__itoa@shifter+1
 16906  008A04  C01F  F019         	movff	__itoa@n+2,__itoa@shifter+2
 16907  008A08  C020  F01A         	movff	__itoa@n+3,__itoa@shifter+3
 16908  008A0C                     l18713:
 16909                           
 16910                           ;_itoa.c: 20: shifter /= 10;
 16911  008A0C  C017  F001         	movff	__itoa@shifter,___aldiv@dividend
 16912  008A10  C018  F002         	movff	__itoa@shifter+1,___aldiv@dividend+1
 16913  008A14  C019  F003         	movff	__itoa@shifter+2,___aldiv@dividend+2
 16914  008A18  C01A  F004         	movff	__itoa@shifter+3,___aldiv@dividend+3
 16915  008A1C  0E0A               	movlw	10
 16916  008A1E  6E05               	movwf	___aldiv@divisor^0,c
 16917  008A20  0E00               	movlw	0
 16918  008A22  6E06               	movwf	(___aldiv@divisor+1)^0,c
 16919  008A24  0E00               	movlw	0
 16920  008A26  6E07               	movwf	(___aldiv@divisor+2)^0,c
 16921  008A28  0E00               	movlw	0
 16922  008A2A  6E08               	movwf	(___aldiv@divisor+3)^0,c
 16923  008A2C  EC5A  F04F         	call	___aldiv	;wreg free
 16924  008A30  C001  F017         	movff	?___aldiv,__itoa@shifter
 16925  008A34  C002  F018         	movff	?___aldiv+1,__itoa@shifter+1
 16926  008A38  C003  F019         	movff	?___aldiv+2,__itoa@shifter+2
 16927  008A3C  C004  F01A         	movff	?___aldiv+3,__itoa@shifter+3
 16928  008A40                     
 16929                           ;_itoa.c: 21: p++; len++;
 16930  008A40  4A1B               	infsnz	__itoa@p^0,f,c
 16931  008A42  2A1C               	incf	(__itoa@p+1)^0,f,c
 16932  008A44  4A15               	infsnz	__itoa@len^0,f,c
 16933  008A46  2A16               	incf	(__itoa@len+1)^0,f,c
 16934  008A48                     
 16935                           ;_itoa.c: 22: } while (shifter);
 16936  008A48  5017               	movf	__itoa@shifter^0,w,c
 16937  008A4A  1018               	iorwf	(__itoa@shifter+1)^0,w,c
 16938  008A4C  1019               	iorwf	(__itoa@shifter+2)^0,w,c
 16939  008A4E  101A               	iorwf	(__itoa@shifter+3)^0,w,c
 16940  008A50  A4D8               	btfss	status,2,c
 16941  008A52  EF2D  F045         	goto	u20601
 16942  008A56  EF2F  F045         	goto	u20600
 16943  008A5A                     u20601:
 16944  008A5A  EF06  F045         	goto	l18713
 16945  008A5E                     u20600:
 16946  008A5E                     
 16947                           ;_itoa.c: 24: *p = '\0';
 16948  008A5E  C01B  FFD9         	movff	__itoa@p,fsr2l
 16949  008A62  C01C  FFDA         	movff	__itoa@p+1,fsr2h
 16950  008A66  0E00               	movlw	0
 16951  008A68  6EDF               	movwf	indf2,c
 16952  008A6A                     l18723:
 16953                           
 16954                           ;_itoa.c: 27: *--p = (n % 10) + '0';
 16955  008A6A  C01D  F001         	movff	__itoa@n,___almod@dividend
 16956  008A6E  C01E  F002         	movff	__itoa@n+1,___almod@dividend+1
 16957  008A72  C01F  F003         	movff	__itoa@n+2,___almod@dividend+2
 16958  008A76  C020  F004         	movff	__itoa@n+3,___almod@dividend+3
 16959  008A7A  0E0A               	movlw	10
 16960  008A7C  6E05               	movwf	___almod@divisor^0,c
 16961  008A7E  0E00               	movlw	0
 16962  008A80  6E06               	movwf	(___almod@divisor+1)^0,c
 16963  008A82  0E00               	movlw	0
 16964  008A84  6E07               	movwf	(___almod@divisor+2)^0,c
 16965  008A86  0E00               	movlw	0
 16966  008A88  6E08               	movwf	(___almod@divisor+3)^0,c
 16967  008A8A  ECDB  F053         	call	___almod	;wreg free
 16968  008A8E  5001               	movf	?___almod^0,w,c
 16969  008A90  0F30               	addlw	48
 16970  008A92  061B               	decf	__itoa@p^0,f,c
 16971  008A94  A0D8               	btfss	status,0,c
 16972  008A96  061C               	decf	(__itoa@p+1)^0,f,c
 16973  008A98  C01B  FFD9         	movff	__itoa@p,fsr2l
 16974  008A9C  C01C  FFDA         	movff	__itoa@p+1,fsr2h
 16975  008AA0  6EDF               	movwf	indf2,c
 16976  008AA2                     
 16977                           ;_itoa.c: 28: n /= 10;
 16978  008AA2  C01D  F001         	movff	__itoa@n,___aldiv@dividend
 16979  008AA6  C01E  F002         	movff	__itoa@n+1,___aldiv@dividend+1
 16980  008AAA  C01F  F003         	movff	__itoa@n+2,___aldiv@dividend+2
 16981  008AAE  C020  F004         	movff	__itoa@n+3,___aldiv@dividend+3
 16982  008AB2  0E0A               	movlw	10
 16983  008AB4  6E05               	movwf	___aldiv@divisor^0,c
 16984  008AB6  0E00               	movlw	0
 16985  008AB8  6E06               	movwf	(___aldiv@divisor+1)^0,c
 16986  008ABA  0E00               	movlw	0
 16987  008ABC  6E07               	movwf	(___aldiv@divisor+2)^0,c
 16988  008ABE  0E00               	movlw	0
 16989  008AC0  6E08               	movwf	(___aldiv@divisor+3)^0,c
 16990  008AC2  EC5A  F04F         	call	___aldiv	;wreg free
 16991  008AC6  C001  F01D         	movff	?___aldiv,__itoa@n
 16992  008ACA  C002  F01E         	movff	?___aldiv+1,__itoa@n+1
 16993  008ACE  C003  F01F         	movff	?___aldiv+2,__itoa@n+2
 16994  008AD2  C004  F020         	movff	?___aldiv+3,__itoa@n+3
 16995  008AD6                     
 16996                           ;_itoa.c: 29: } while (n);
 16997  008AD6  501D               	movf	__itoa@n^0,w,c
 16998  008AD8  101E               	iorwf	(__itoa@n+1)^0,w,c
 16999  008ADA  101F               	iorwf	(__itoa@n+2)^0,w,c
 17000  008ADC  1020               	iorwf	(__itoa@n+3)^0,w,c
 17001  008ADE  A4D8               	btfss	status,2,c
 17002  008AE0  EF74  F045         	goto	u20611
 17003  008AE4  EF76  F045         	goto	u20610
 17004  008AE8                     u20611:
 17005  008AE8  EF35  F045         	goto	l18723
 17006  008AEC                     u20610:
 17007  008AEC                     
 17008                           ;_itoa.c: 31: return len;
 17009  008AEC  C015  F00F         	movff	__itoa@len,?__itoa
 17010  008AF0  C016  F010         	movff	__itoa@len+1,?__itoa+1
 17011  008AF4  0012               	return		;funcret
 17012  008AF6                     __end_of__itoa:
 17013                           	callstack 0
 17014                           
 17015 ;; *************** function ___almod *****************
 17016 ;; Defined at:
 17017 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\almod.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  dividend        4    0[COMRAM] long 
 17020 ;;  divisor         4    4[COMRAM] long 
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;  sign            1    9[COMRAM] unsigned char 
 17023 ;;  counter         1    8[COMRAM] unsigned char 
 17024 ;; Return value:  Size  Location     Type
 17025 ;;                  4    0[COMRAM] long 
 17026 ;; Registers used:
 17027 ;;		wreg, status,2, status,0
 17028 ;; Tracked objects:
 17029 ;;		On entry : 0/0
 17030 ;;		On exit  : 0/0
 17031 ;;		Unchanged: 0/0
 17032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17033 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17036 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17037 ;;Total ram usage:       10 bytes
 17038 ;; Hardware stack levels used: 1
 17039 ;; Hardware stack levels required when called: 1
 17040 ;; This function calls:
 17041 ;;		Nothing
 17042 ;; This function is called by:
 17043 ;;		__itoa
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           	psect	text83
 17048  00A7B6                     __ptext83:
 17049                           	callstack 0
 17050  00A7B6                     ___almod:
 17051                           	callstack 26
 17052  00A7B6  0E00               	movlw	0
 17053  00A7B8  6E0A               	movwf	___almod@sign^0,c
 17054  00A7BA  BE04               	btfsc	(___almod@dividend+3)^0,7,c
 17055  00A7BC  EFE4  F053         	goto	u11440
 17056  00A7C0  EFE2  F053         	goto	u11441
 17057  00A7C4                     u11441:
 17058  00A7C4  EFEE  F053         	goto	l11501
 17059  00A7C8                     u11440:
 17060  00A7C8  1E04               	comf	(___almod@dividend+3)^0,f,c
 17061  00A7CA  1E03               	comf	(___almod@dividend+2)^0,f,c
 17062  00A7CC  1E02               	comf	(___almod@dividend+1)^0,f,c
 17063  00A7CE  6C01               	negf	___almod@dividend^0,c
 17064  00A7D0  0E00               	movlw	0
 17065  00A7D2  2202               	addwfc	(___almod@dividend+1)^0,f,c
 17066  00A7D4  2203               	addwfc	(___almod@dividend+2)^0,f,c
 17067  00A7D6  2204               	addwfc	(___almod@dividend+3)^0,f,c
 17068  00A7D8  0E01               	movlw	1
 17069  00A7DA  6E0A               	movwf	___almod@sign^0,c
 17070  00A7DC                     l11501:
 17071  00A7DC  BE08               	btfsc	(___almod@divisor+3)^0,7,c
 17072  00A7DE  EFF5  F053         	goto	u11450
 17073  00A7E2  EFF3  F053         	goto	u11451
 17074  00A7E6                     u11451:
 17075  00A7E6  EFFD  F053         	goto	l11505
 17076  00A7EA                     u11450:
 17077  00A7EA  1E08               	comf	(___almod@divisor+3)^0,f,c
 17078  00A7EC  1E07               	comf	(___almod@divisor+2)^0,f,c
 17079  00A7EE  1E06               	comf	(___almod@divisor+1)^0,f,c
 17080  00A7F0  6C05               	negf	___almod@divisor^0,c
 17081  00A7F2  0E00               	movlw	0
 17082  00A7F4  2206               	addwfc	(___almod@divisor+1)^0,f,c
 17083  00A7F6  2207               	addwfc	(___almod@divisor+2)^0,f,c
 17084  00A7F8  2208               	addwfc	(___almod@divisor+3)^0,f,c
 17085  00A7FA                     l11505:
 17086  00A7FA  5005               	movf	___almod@divisor^0,w,c
 17087  00A7FC  1006               	iorwf	(___almod@divisor+1)^0,w,c
 17088  00A7FE  1007               	iorwf	(___almod@divisor+2)^0,w,c
 17089  00A800  1008               	iorwf	(___almod@divisor+3)^0,w,c
 17090  00A802  B4D8               	btfsc	status,2,c
 17091  00A804  EF06  F054         	goto	u11461
 17092  00A808  EF08  F054         	goto	u11460
 17093  00A80C                     u11461:
 17094  00A80C  EF38  F054         	goto	l11521
 17095  00A810                     u11460:
 17096  00A810  0E01               	movlw	1
 17097  00A812  6E09               	movwf	___almod@counter^0,c
 17098  00A814  EF12  F054         	goto	l11511
 17099  00A818                     l11509:
 17100  00A818  90D8               	bcf	status,0,c
 17101  00A81A  3605               	rlcf	___almod@divisor^0,f,c
 17102  00A81C  3606               	rlcf	(___almod@divisor+1)^0,f,c
 17103  00A81E  3607               	rlcf	(___almod@divisor+2)^0,f,c
 17104  00A820  3608               	rlcf	(___almod@divisor+3)^0,f,c
 17105  00A822  2A09               	incf	___almod@counter^0,f,c
 17106  00A824                     l11511:
 17107  00A824  AE08               	btfss	(___almod@divisor+3)^0,7,c
 17108  00A826  EF17  F054         	goto	u11471
 17109  00A82A  EF19  F054         	goto	u11470
 17110  00A82E                     u11471:
 17111  00A82E  EF0C  F054         	goto	l11509
 17112  00A832                     u11470:
 17113  00A832                     l11513:
 17114  00A832  5005               	movf	___almod@divisor^0,w,c
 17115  00A834  5C01               	subwf	___almod@dividend^0,w,c
 17116  00A836  5006               	movf	(___almod@divisor+1)^0,w,c
 17117  00A838  5802               	subwfb	(___almod@dividend+1)^0,w,c
 17118  00A83A  5007               	movf	(___almod@divisor+2)^0,w,c
 17119  00A83C  5803               	subwfb	(___almod@dividend+2)^0,w,c
 17120  00A83E  5008               	movf	(___almod@divisor+3)^0,w,c
 17121  00A840  5804               	subwfb	(___almod@dividend+3)^0,w,c
 17122  00A842  A0D8               	btfss	status,0,c
 17123  00A844  EF26  F054         	goto	u11481
 17124  00A848  EF28  F054         	goto	u11480
 17125  00A84C                     u11481:
 17126  00A84C  EF30  F054         	goto	l11517
 17127  00A850                     u11480:
 17128  00A850  5005               	movf	___almod@divisor^0,w,c
 17129  00A852  5E01               	subwf	___almod@dividend^0,f,c
 17130  00A854  5006               	movf	(___almod@divisor+1)^0,w,c
 17131  00A856  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 17132  00A858  5007               	movf	(___almod@divisor+2)^0,w,c
 17133  00A85A  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 17134  00A85C  5008               	movf	(___almod@divisor+3)^0,w,c
 17135  00A85E  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 17136  00A860                     l11517:
 17137  00A860  90D8               	bcf	status,0,c
 17138  00A862  3208               	rrcf	(___almod@divisor+3)^0,f,c
 17139  00A864  3207               	rrcf	(___almod@divisor+2)^0,f,c
 17140  00A866  3206               	rrcf	(___almod@divisor+1)^0,f,c
 17141  00A868  3205               	rrcf	___almod@divisor^0,f,c
 17142  00A86A  2E09               	decfsz	___almod@counter^0,f,c
 17143  00A86C  EF19  F054         	goto	l11513
 17144  00A870                     l11521:
 17145  00A870  500A               	movf	___almod@sign^0,w,c
 17146  00A872  B4D8               	btfsc	status,2,c
 17147  00A874  EF3E  F054         	goto	u11491
 17148  00A878  EF40  F054         	goto	u11490
 17149  00A87C                     u11491:
 17150  00A87C  EF48  F054         	goto	l11525
 17151  00A880                     u11490:
 17152  00A880  1E04               	comf	(___almod@dividend+3)^0,f,c
 17153  00A882  1E03               	comf	(___almod@dividend+2)^0,f,c
 17154  00A884  1E02               	comf	(___almod@dividend+1)^0,f,c
 17155  00A886  6C01               	negf	___almod@dividend^0,c
 17156  00A888  0E00               	movlw	0
 17157  00A88A  2202               	addwfc	(___almod@dividend+1)^0,f,c
 17158  00A88C  2203               	addwfc	(___almod@dividend+2)^0,f,c
 17159  00A88E  2204               	addwfc	(___almod@dividend+3)^0,f,c
 17160  00A890                     l11525:
 17161  00A890  C001  F001         	movff	___almod@dividend,?___almod
 17162  00A894  C002  F002         	movff	___almod@dividend+1,?___almod+1
 17163  00A898  C003  F003         	movff	___almod@dividend+2,?___almod+2
 17164  00A89C  C004  F004         	movff	___almod@dividend+3,?___almod+3
 17165  00A8A0  0012               	return		;funcret
 17166  00A8A2                     __end_of___almod:
 17167                           	callstack 0
 17168                           
 17169 ;; *************** function ___aldiv *****************
 17170 ;; Defined at:
 17171 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;  dividend        4    0[COMRAM] long 
 17174 ;;  divisor         4    4[COMRAM] long 
 17175 ;; Auto vars:     Size  Location     Type
 17176 ;;  quotient        4   10[COMRAM] long 
 17177 ;;  sign            1    9[COMRAM] unsigned char 
 17178 ;;  counter         1    8[COMRAM] unsigned char 
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  4    0[COMRAM] long 
 17181 ;; Registers used:
 17182 ;;		wreg, status,2, status,0
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17188 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17189 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;Total ram usage:       14 bytes
 17193 ;; Hardware stack levels used: 1
 17194 ;; Hardware stack levels required when called: 1
 17195 ;; This function calls:
 17196 ;;		Nothing
 17197 ;; This function is called by:
 17198 ;;		__itoa
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202                           	psect	text84
 17203  009EB4                     __ptext84:
 17204                           	callstack 0
 17205  009EB4                     ___aldiv:
 17206                           	callstack 26
 17207  009EB4  0E00               	movlw	0
 17208  009EB6  6E0A               	movwf	___aldiv@sign^0,c
 17209  009EB8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 17210  009EBA  EF63  F04F         	goto	u11380
 17211  009EBE  EF61  F04F         	goto	u11381
 17212  009EC2                     u11381:
 17213  009EC2  EF6D  F04F         	goto	l11457
 17214  009EC6                     u11380:
 17215  009EC6  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 17216  009EC8  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 17217  009ECA  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 17218  009ECC  6C05               	negf	___aldiv@divisor^0,c
 17219  009ECE  0E00               	movlw	0
 17220  009ED0  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 17221  009ED2  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 17222  009ED4  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 17223  009ED6  0E01               	movlw	1
 17224  009ED8  6E0A               	movwf	___aldiv@sign^0,c
 17225  009EDA                     l11457:
 17226  009EDA  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 17227  009EDC  EF74  F04F         	goto	u11390
 17228  009EE0  EF72  F04F         	goto	u11391
 17229  009EE4                     u11391:
 17230  009EE4  EF7E  F04F         	goto	l11463
 17231  009EE8                     u11390:
 17232  009EE8  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 17233  009EEA  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 17234  009EEC  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 17235  009EEE  6C01               	negf	___aldiv@dividend^0,c
 17236  009EF0  0E00               	movlw	0
 17237  009EF2  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 17238  009EF4  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 17239  009EF6  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 17240  009EF8  0E01               	movlw	1
 17241  009EFA  1A0A               	xorwf	___aldiv@sign^0,f,c
 17242  009EFC                     l11463:
 17243  009EFC  0E00               	movlw	0
 17244  009EFE  6E0B               	movwf	___aldiv@quotient^0,c
 17245  009F00  0E00               	movlw	0
 17246  009F02  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 17247  009F04  0E00               	movlw	0
 17248  009F06  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 17249  009F08  0E00               	movlw	0
 17250  009F0A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 17251  009F0C  5005               	movf	___aldiv@divisor^0,w,c
 17252  009F0E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 17253  009F10  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 17254  009F12  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 17255  009F14  B4D8               	btfsc	status,2,c
 17256  009F16  EF8F  F04F         	goto	u11401
 17257  009F1A  EF91  F04F         	goto	u11400
 17258  009F1E                     u11401:
 17259  009F1E  EFC7  F04F         	goto	l11485
 17260  009F22                     u11400:
 17261  009F22  0E01               	movlw	1
 17262  009F24  6E09               	movwf	___aldiv@counter^0,c
 17263  009F26  EF9B  F04F         	goto	l11471
 17264  009F2A                     l11469:
 17265  009F2A  90D8               	bcf	status,0,c
 17266  009F2C  3605               	rlcf	___aldiv@divisor^0,f,c
 17267  009F2E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 17268  009F30  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 17269  009F32  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 17270  009F34  2A09               	incf	___aldiv@counter^0,f,c
 17271  009F36                     l11471:
 17272  009F36  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 17273  009F38  EFA0  F04F         	goto	u11411
 17274  009F3C  EFA2  F04F         	goto	u11410
 17275  009F40                     u11411:
 17276  009F40  EF95  F04F         	goto	l11469
 17277  009F44                     u11410:
 17278  009F44                     l11473:
 17279  009F44  90D8               	bcf	status,0,c
 17280  009F46  360B               	rlcf	___aldiv@quotient^0,f,c
 17281  009F48  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 17282  009F4A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 17283  009F4C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 17284  009F4E  5005               	movf	___aldiv@divisor^0,w,c
 17285  009F50  5C01               	subwf	___aldiv@dividend^0,w,c
 17286  009F52  5006               	movf	(___aldiv@divisor+1)^0,w,c
 17287  009F54  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 17288  009F56  5007               	movf	(___aldiv@divisor+2)^0,w,c
 17289  009F58  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 17290  009F5A  5008               	movf	(___aldiv@divisor+3)^0,w,c
 17291  009F5C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 17292  009F5E  A0D8               	btfss	status,0,c
 17293  009F60  EFB4  F04F         	goto	u11421
 17294  009F64  EFB6  F04F         	goto	u11420
 17295  009F68                     u11421:
 17296  009F68  EFBF  F04F         	goto	l11481
 17297  009F6C                     u11420:
 17298  009F6C  5005               	movf	___aldiv@divisor^0,w,c
 17299  009F6E  5E01               	subwf	___aldiv@dividend^0,f,c
 17300  009F70  5006               	movf	(___aldiv@divisor+1)^0,w,c
 17301  009F72  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 17302  009F74  5007               	movf	(___aldiv@divisor+2)^0,w,c
 17303  009F76  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 17304  009F78  5008               	movf	(___aldiv@divisor+3)^0,w,c
 17305  009F7A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 17306  009F7C  800B               	bsf	___aldiv@quotient^0,0,c
 17307  009F7E                     l11481:
 17308  009F7E  90D8               	bcf	status,0,c
 17309  009F80  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 17310  009F82  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 17311  009F84  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 17312  009F86  3205               	rrcf	___aldiv@divisor^0,f,c
 17313  009F88  2E09               	decfsz	___aldiv@counter^0,f,c
 17314  009F8A  EFA2  F04F         	goto	l11473
 17315  009F8E                     l11485:
 17316  009F8E  500A               	movf	___aldiv@sign^0,w,c
 17317  009F90  B4D8               	btfsc	status,2,c
 17318  009F92  EFCD  F04F         	goto	u11431
 17319  009F96  EFCF  F04F         	goto	u11430
 17320  009F9A                     u11431:
 17321  009F9A  EFD7  F04F         	goto	l11489
 17322  009F9E                     u11430:
 17323  009F9E  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 17324  009FA0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 17325  009FA2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 17326  009FA4  6C0B               	negf	___aldiv@quotient^0,c
 17327  009FA6  0E00               	movlw	0
 17328  009FA8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 17329  009FAA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 17330  009FAC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 17331  009FAE                     l11489:
 17332  009FAE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 17333  009FB2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 17334  009FB6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 17335  009FBA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 17336  009FBE  0012               	return		;funcret
 17337  009FC0                     __end_of___aldiv:
 17338                           	callstack 0
 17339                           
 17340 ;; *************** function __ftoa *****************
 17341 ;; Defined at:
 17342 ;;		line 8 in file "util/_ftoa.c"
 17343 ;; Parameters:    Size  Location     Type
 17344 ;;  num             4   52[BANK0 ] const float 
 17345 ;;  str             2   56[BANK0 ] PTR unsigned char 
 17346 ;;		 -> writeBuffer(64), 
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;  len             2   91[COMRAM] int 
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  2   52[BANK0 ] unsigned int 
 17351 ;; Registers used:
 17352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17353 ;; Tracked objects:
 17354 ;;		On entry : 0/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17358 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17361 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17362 ;;Total ram usage:        8 bytes
 17363 ;; Hardware stack levels used: 1
 17364 ;; Hardware stack levels required when called: 4
 17365 ;; This function calls:
 17366 ;;		_sprintf
 17367 ;; This function is called by:
 17368 ;;		_build_response
 17369 ;; This function uses a non-reentrant model
 17370 ;;
 17371                           
 17372                           	psect	text85
 17373  00CC4C                     __ptext85:
 17374                           	callstack 0
 17375  00CC4C                     __ftoa:
 17376                           	callstack 24
 17377  00CC4C                     
 17378                           ;_ftoa.c: 10: int len = sprintf (str, "%.2f", num);
 17379  00CC4C  C098  F06D         	movff	__ftoa@str,sprintf@sp
 17380  00CC50  C099  F06E         	movff	__ftoa@str+1,sprintf@sp+1
 17381  00CC54  0EAF               	movlw	low STR_1
 17382  00CC56  0100               	movlb	0	; () banked
 17383  00CC58  6F6F               	movwf	sprintf@f& (0+255),b
 17384  00CC5A  0E23               	movlw	high STR_1
 17385  00CC5C  6F70               	movwf	(sprintf@f+1)& (0+255),b
 17386  00CC5E  C094  F071         	movff	__ftoa@num,?_sprintf+4
 17387  00CC62  C095  F072         	movff	__ftoa@num+1,?_sprintf+5
 17388  00CC66  C096  F073         	movff	__ftoa@num+2,?_sprintf+6
 17389  00CC6A  C097  F074         	movff	__ftoa@num+3,?_sprintf+7
 17390  00CC6E  EC49  F018         	call	_sprintf	;wreg free
 17391  00CC72  C06D  F05C         	movff	?_sprintf,__ftoa@len
 17392  00CC76  C06E  F05D         	movff	?_sprintf+1,__ftoa@len+1
 17393  00CC7A                     
 17394                           ;_ftoa.c: 11: if (len < 0) len = 0;
 17395  00CC7A  BE5D               	btfsc	(__ftoa@len+1)^0,7,c
 17396  00CC7C  EF44  F066         	goto	u20580
 17397  00CC80  EF42  F066         	goto	u20581
 17398  00CC84                     u20581:
 17399  00CC84  EF48  F066         	goto	l18691
 17400  00CC88                     u20580:
 17401  00CC88  0E00               	movlw	0
 17402  00CC8A  6E5D               	movwf	(__ftoa@len+1)^0,c
 17403  00CC8C  0E00               	movlw	0
 17404  00CC8E  6E5C               	movwf	__ftoa@len^0,c
 17405  00CC90                     l18691:
 17406                           
 17407                           ;_ftoa.c: 12: return len;
 17408  00CC90  C05C  F094         	movff	__ftoa@len,?__ftoa
 17409  00CC94  C05D  F095         	movff	__ftoa@len+1,?__ftoa+1
 17410  00CC98  0012               	return		;funcret
 17411  00CC9A                     __end_of__ftoa:
 17412                           	callstack 0
 17413                           
 17414 ;; *************** function _sprintf *****************
 17415 ;; Defined at:
 17416 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 17417 ;; Parameters:    Size  Location     Type
 17418 ;;  sp              2   13[BANK0 ] PTR unsigned char 
 17419 ;;		 -> writeBuffer(64), 
 17420 ;;  f               2   15[BANK0 ] PTR const unsigned char 
 17421 ;;		 -> STR_1(5), 
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;  fval            4   47[BANK0 ] PTR const unsigned char 
 17424 ;;  tmpval          4   41[BANK0 ] struct .
 17425 ;;  val             4   35[BANK0 ] unsigned long 
 17426 ;;  cp              3    0        PTR const unsigned char 
 17427 ;;  prec            2   45[BANK0 ] int 
 17428 ;;  eexp            2   39[BANK0 ] int 
 17429 ;;  flag            2   33[BANK0 ] unsigned short 
 17430 ;;  ccnt            2   31[BANK0 ] int 
 17431 ;;  ap              2   29[BANK0 ] PTR void [1]
 17432 ;;		 -> ?_sprintf(2), 
 17433 ;;  len             2    0        unsigned int 
 17434 ;;  width           2    0        int 
 17435 ;;  c               1   51[BANK0 ] unsigned char 
 17436 ;;  d               1    0        unsigned char 
 17437 ;; Return value:  Size  Location     Type
 17438 ;;                  2   13[BANK0 ] int 
 17439 ;; Registers used:
 17440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17441 ;; Tracked objects:
 17442 ;;		On entry : 0/0
 17443 ;;		On exit  : 0/0
 17444 ;;		Unchanged: 0/0
 17445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17446 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17447 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17449 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17450 ;;Total ram usage:       39 bytes
 17451 ;; Hardware stack levels used: 1
 17452 ;; Hardware stack levels required when called: 3
 17453 ;; This function calls:
 17454 ;;		___awdiv
 17455 ;;		___fladd
 17456 ;;		___fleq
 17457 ;;		___flge
 17458 ;;		___flmul
 17459 ;;		___flneg
 17460 ;;		___flsub
 17461 ;;		___fltol
 17462 ;;		___lldiv
 17463 ;;		___llmod
 17464 ;;		___wmul
 17465 ;;		___xxtofl
 17466 ;;		__div_to_l_
 17467 ;;		__tdiv_to_l_
 17468 ;;		_fround
 17469 ;;		_isdigit
 17470 ;;		_scale
 17471 ;; This function is called by:
 17472 ;;		__ftoa
 17473 ;; This function uses a non-reentrant model
 17474 ;;
 17475                           
 17476                           	psect	text86
 17477  003092                     __ptext86:
 17478                           	callstack 0
 17479  003092                     _sprintf:
 17480                           	callstack 24
 17481  003092                     
 17482                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 527: int ccnt = 0;
 17483  003092  0E00               	movlw	0
 17484  003094  0100               	movlb	0	; () banked
 17485  003096  6F80               	movwf	(sprintf@ccnt+1)& (0+255),b
 17486  003098  0E00               	movlw	0
 17487  00309A  6F7F               	movwf	sprintf@ccnt& (0+255),b
 17488  00309C                     
 17489                           ; BSR set to: 0
 17490                           ;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534: int eexp;;doprnt.c: 5
      +                          40: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543:
      +                           } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547:
      +                           const char * cp;;doprnt.c: 550: *ap = __va_start();
 17491  00309C  0E71               	movlw	low (?_sprintf+4)
 17492  00309E  6F7D               	movwf	sprintf@ap& (0+255),b
 17493  0030A0  0E00               	movlw	high (?_sprintf+4)
 17494  0030A2  6F7E               	movwf	(sprintf@ap+1)& (0+255),b
 17495                           
 17496                           ;doprnt.c: 553: while((c = *f++)) {
 17497  0030A4  EFC9  F01C         	goto	l18383
 17498  0030A8                     l18167:
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;doprnt.c: 555: if(c != '%')
 17502  0030A8  0E25               	movlw	37
 17503  0030AA  1993               	xorwf	sprintf@c& (0+255),w,b
 17504  0030AC  B4D8               	btfsc	status,2,c
 17505  0030AE  EF5B  F018         	goto	u19981
 17506  0030B2  EF5D  F018         	goto	u19980
 17507  0030B6                     u19981:
 17508  0030B6  EF69  F018         	goto	l18175
 17509  0030BA                     u19980:
 17510  0030BA                     
 17511                           ; BSR set to: 0
 17512                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)),(++ccnt));
 17513  0030BA  C06D  FFD9         	movff	sprintf@sp,fsr2l
 17514  0030BE  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 17515  0030C2  C093  FFDF         	movff	sprintf@c,indf2
 17516  0030C6                     l18171:
 17517                           
 17518                           ; BSR set to: 0
 17519  0030C6  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 17520  0030C8  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 17521  0030CA                     
 17522                           ; BSR set to: 0
 17523  0030CA  4B7F               	infsnz	sprintf@ccnt& (0+255),f,b
 17524  0030CC  2B80               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17525                           
 17526                           ;doprnt.c: 559: continue;
 17527  0030CE  EFC9  F01C         	goto	l18383
 17528  0030D2                     l18175:
 17529                           
 17530                           ; BSR set to: 0
 17531                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
 17532  0030D2  0E00               	movlw	0
 17533  0030D4  6F82               	movwf	(sprintf@flag+1)& (0+255),b
 17534  0030D6  0E00               	movlw	0
 17535  0030D8  6F81               	movwf	sprintf@flag& (0+255),b
 17536  0030DA                     
 17537                           ; BSR set to: 0
 17538                           ;doprnt.c: 628: if(*f == '.') {
 17539  0030DA  C06F  FFF6         	movff	sprintf@f,tblptrl
 17540  0030DE  C070  FFF7         	movff	sprintf@f+1,tblptrh
 17541  0030E2                     	if	0	;tblptru may be non-zero
 17542  0030E2                     	endif
 17543  0030E2                     	if	0	;tblptru may be non-zero
 17544  0030E2                     	endif
 17545  0030E2  0008               	tblrd		*
 17546  0030E4  50F5               	movf	tablat,w,c
 17547  0030E6  0A2E               	xorlw	46
 17548  0030E8  A4D8               	btfss	status,2,c
 17549  0030EA  EF79  F018         	goto	u19991
 17550  0030EE  EF7B  F018         	goto	u19990
 17551  0030F2                     u19991:
 17552  0030F2  EFBA  F018         	goto	l18191
 17553  0030F6                     u19990:
 17554  0030F6                     
 17555                           ; BSR set to: 0
 17556                           ;doprnt.c: 629: flag |= 0x4000;
 17557  0030F6  8D82               	bsf	(sprintf@flag+1)& (0+255),6,b
 17558                           
 17559                           ;doprnt.c: 630: f++;
 17560  0030F8  4B6F               	infsnz	sprintf@f& (0+255),f,b
 17561  0030FA  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 17562  0030FC                     
 17563                           ; BSR set to: 0
 17564                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 17565  0030FC  0E00               	movlw	0
 17566  0030FE  6F8E               	movwf	(sprintf@prec+1)& (0+255),b
 17567  003100  0E00               	movlw	0
 17568  003102  6F8D               	movwf	sprintf@prec& (0+255),b
 17569                           
 17570                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 17571  003104  EFA9  F018         	goto	l18189
 17572  003108                     l18183:
 17573                           
 17574                           ;doprnt.c: 647: prec *= 10;
 17575  003108  C08D  F001         	movff	sprintf@prec,___wmul@multiplier
 17576  00310C  C08E  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
 17577  003110  0E00               	movlw	0
 17578  003112  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 17579  003114  0E0A               	movlw	10
 17580  003116  6E03               	movwf	___wmul@multiplicand^0,c
 17581  003118  ECEA  F069         	call	___wmul	;wreg free
 17582  00311C  C001  F08D         	movff	?___wmul,sprintf@prec
 17583  003120  C002  F08E         	movff	?___wmul+1,sprintf@prec+1
 17584  003124                     
 17585                           ;doprnt.c: 648: prec += *f++ - '0';
 17586  003124  0ED0               	movlw	208
 17587  003126  0100               	movlb	0	; () banked
 17588  003128  6F75               	movwf	??_sprintf& (0+255),b
 17589  00312A  0EFF               	movlw	255
 17590  00312C  6F76               	movwf	(??_sprintf+1)& (0+255),b
 17591  00312E  C06F  FFF6         	movff	sprintf@f,tblptrl
 17592  003132  C070  FFF7         	movff	sprintf@f+1,tblptrh
 17593  003136                     	if	0	;tblptru may be non-zero
 17594  003136                     	endif
 17595  003136                     	if	0	;tblptru may be non-zero
 17596  003136                     	endif
 17597  003136  0008               	tblrd		*
 17598  003138  50F5               	movf	tablat,w,c
 17599  00313A  6F77               	movwf	(??_sprintf+2)& (0+255),b
 17600  00313C  6B78               	clrf	(??_sprintf+3)& (0+255),b
 17601  00313E  5175               	movf	??_sprintf& (0+255),w,b
 17602  003140  2777               	addwf	(??_sprintf+2)& (0+255),f,b
 17603  003142  5176               	movf	(??_sprintf+1)& (0+255),w,b
 17604  003144  2378               	addwfc	(??_sprintf+3)& (0+255),f,b
 17605  003146  5177               	movf	(??_sprintf+2)& (0+255),w,b
 17606  003148  278D               	addwf	sprintf@prec& (0+255),f,b
 17607  00314A  5178               	movf	(??_sprintf+3)& (0+255),w,b
 17608  00314C  238E               	addwfc	(sprintf@prec+1)& (0+255),f,b
 17609  00314E                     
 17610                           ; BSR set to: 0
 17611  00314E  4B6F               	infsnz	sprintf@f& (0+255),f,b
 17612  003150  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 17613  003152                     l18189:
 17614                           
 17615                           ; BSR set to: 0
 17616  003152  C06F  FFF6         	movff	sprintf@f,tblptrl
 17617  003156  C070  FFF7         	movff	sprintf@f+1,tblptrh
 17618  00315A                     	if	0	;tblptru may be non-zero
 17619  00315A                     	endif
 17620  00315A                     	if	0	;tblptru may be non-zero
 17621  00315A                     	endif
 17622  00315A  0008               	tblrd		*
 17623  00315C  50F5               	movf	tablat,w,c
 17624  00315E  ECC1  F068         	call	_isdigit
 17625  003162  B0D8               	btfsc	status,0,c
 17626  003164  EFB6  F018         	goto	u20001
 17627  003168  EFB8  F018         	goto	u20000
 17628  00316C                     u20001:
 17629  00316C  EF84  F018         	goto	l18183
 17630  003170                     u20000:
 17631  003170  EFC4  F018         	goto	l18199
 17632  003174                     l18191:
 17633                           
 17634                           ; BSR set to: 0
 17635                           ;doprnt.c: 652: prec = 0;
 17636  003174  0E00               	movlw	0
 17637  003176  6F8E               	movwf	(sprintf@prec+1)& (0+255),b
 17638  003178  0E00               	movlw	0
 17639  00317A  6F8D               	movwf	sprintf@prec& (0+255),b
 17640  00317C                     
 17641                           ; BSR set to: 0
 17642                           ;doprnt.c: 654: flag |= 0x1000;
 17643  00317C  8982               	bsf	(sprintf@flag+1)& (0+255),4,b
 17644  00317E  EFC4  F018         	goto	l18199
 17645  003182                     l18195:
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;doprnt.c: 689: flag |= 0x400;
 17649  003182  8582               	bsf	(sprintf@flag+1)& (0+255),2,b
 17650                           
 17651                           ;doprnt.c: 690: break;
 17652  003184  EFD9  F018         	goto	l18201
 17653  003188                     l18199:
 17654  003188  C06F  FFF6         	movff	sprintf@f,tblptrl
 17655  00318C  C070  FFF7         	movff	sprintf@f+1,tblptrh
 17656  003190  0100               	movlb	0	; () banked
 17657  003192  4B6F               	infsnz	sprintf@f& (0+255),f,b
 17658  003194  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 17659  003196                     	if	0	;tblptru may be non-zero
 17660  003196                     	endif
 17661  003196                     	if	0	;tblptru may be non-zero
 17662  003196                     	endif
 17663  003196  0008               	tblrd		*
 17664  003198  CFF5 F093          	movff	tablat,sprintf@c
 17665  00319C  5193               	movf	sprintf@c& (0+255),w,b
 17666                           
 17667                           ; Switch size 1, requested type "simple"
 17668                           ; Number of cases is 2, Range of values is 0 to 102
 17669                           ; switch strategies available:
 17670                           ; Name         Instructions Cycles
 17671                           ; simple_byte            7     4 (average)
 17672                           ;	Chosen strategy is simple_byte
 17673  00319E  0A00               	xorlw	0	; case 0
 17674  0031A0  B4D8               	btfsc	status,2,c
 17675  0031A2  EFDA  F01C         	goto	l18385
 17676  0031A6  0A66               	xorlw	102	; case 102
 17677  0031A8  B4D8               	btfsc	status,2,c
 17678  0031AA  EFC1  F018         	goto	l18195
 17679  0031AE  EFC9  F01C         	goto	l18383
 17680  0031B2                     l18201:
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;doprnt.c: 851: if(flag & (0x700)) {
 17684  0031B2  0E07               	movlw	7
 17685  0031B4  1582               	andwf	(sprintf@flag+1)& (0+255),w,b
 17686  0031B6  B4D8               	btfsc	status,2,c
 17687  0031B8  EFE0  F018         	goto	u20011
 17688  0031BC  EFE2  F018         	goto	u20010
 17689  0031C0                     u20011:
 17690  0031C0  EF76  F01C         	goto	l18361
 17691  0031C4                     u20010:
 17692  0031C4                     
 17693                           ; BSR set to: 0
 17694                           ;doprnt.c: 853: if(flag & 0x1000)
 17695  0031C4  A982               	btfss	(sprintf@flag+1)& (0+255),4,b
 17696  0031C6  EFE7  F018         	goto	u20021
 17697  0031CA  EFE9  F018         	goto	u20020
 17698  0031CE                     u20021:
 17699  0031CE  EFED  F018         	goto	l18207
 17700  0031D2                     u20020:
 17701  0031D2                     
 17702                           ; BSR set to: 0
 17703                           ;doprnt.c: 855: prec = 6;
 17704  0031D2  0E00               	movlw	0
 17705  0031D4  6F8E               	movwf	(sprintf@prec+1)& (0+255),b
 17706  0031D6  0E06               	movlw	6
 17707  0031D8  6F8D               	movwf	sprintf@prec& (0+255),b
 17708  0031DA                     l18207:
 17709                           
 17710                           ; BSR set to: 0
 17711                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 17712  0031DA  C07D  FFD9         	movff	sprintf@ap,fsr2l
 17713  0031DE  C07E  FFDA         	movff	sprintf@ap+1,fsr2h
 17714  0031E2  CFDE F08F          	movff	postinc2,sprintf@fval
 17715  0031E6  CFDE F090          	movff	postinc2,sprintf@fval+1
 17716  0031EA  CFDE F091          	movff	postinc2,sprintf@fval+2
 17717  0031EE  CFDE F092          	movff	postinc2,sprintf@fval+3
 17718  0031F2                     
 17719                           ; BSR set to: 0
 17720  0031F2  0E04               	movlw	4
 17721  0031F4  277D               	addwf	sprintf@ap& (0+255),f,b
 17722  0031F6  0E00               	movlw	0
 17723  0031F8  237E               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17724  0031FA                     
 17725                           ; BSR set to: 0
 17726                           ;doprnt.c: 857: if(fval < 0.0) {
 17727  0031FA  BF92               	btfsc	(sprintf@fval+3)& (0+255),7,b
 17728  0031FC  EF04  F019         	goto	u20030
 17729  003200  EF02  F019         	goto	u20031
 17730  003204                     u20031:
 17731  003204  EF19  F019         	goto	l18217
 17732  003208                     u20030:
 17733  003208                     
 17734                           ; BSR set to: 0
 17735                           ;doprnt.c: 858: fval = -fval;
 17736  003208  C08F  F001         	movff	sprintf@fval,___flneg@f1
 17737  00320C  C090  F002         	movff	sprintf@fval+1,___flneg@f1+1
 17738  003210  C091  F003         	movff	sprintf@fval+2,___flneg@f1+2
 17739  003214  C092  F004         	movff	sprintf@fval+3,___flneg@f1+3
 17740  003218  EC03  F068         	call	___flneg	;wreg free
 17741  00321C  C001  F08F         	movff	?___flneg,sprintf@fval
 17742  003220  C002  F090         	movff	?___flneg+1,sprintf@fval+1
 17743  003224  C003  F091         	movff	?___flneg+2,sprintf@fval+2
 17744  003228  C004  F092         	movff	?___flneg+3,sprintf@fval+3
 17745  00322C                     
 17746                           ;doprnt.c: 859: flag |= 0x03;
 17747  00322C  0E03               	movlw	3
 17748  00322E  0100               	movlb	0	; () banked
 17749  003230  1381               	iorwf	sprintf@flag& (0+255),f,b
 17750  003232                     l18217:
 17751                           
 17752                           ; BSR set to: 0
 17753                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 17754  003232  0E00               	movlw	0
 17755  003234  6F88               	movwf	(sprintf@eexp+1)& (0+255),b
 17756  003236  0E00               	movlw	0
 17757  003238  6F87               	movwf	sprintf@eexp& (0+255),b
 17758  00323A                     
 17759                           ; BSR set to: 0
 17760                           ;doprnt.c: 862: if( fval!=0) {
 17761  00323A  C08F  F001         	movff	sprintf@fval,___fleq@ff1
 17762  00323E  C090  F002         	movff	sprintf@fval+1,___fleq@ff1+1
 17763  003242  C091  F003         	movff	sprintf@fval+2,___fleq@ff1+2
 17764  003246  C092  F004         	movff	sprintf@fval+3,___fleq@ff1+3
 17765  00324A  0E00               	movlw	0
 17766  00324C  6E05               	movwf	___fleq@ff2^0,c
 17767  00324E  0E00               	movlw	0
 17768  003250  6E06               	movwf	(___fleq@ff2+1)^0,c
 17769  003252  0E00               	movlw	0
 17770  003254  6E07               	movwf	(___fleq@ff2+2)^0,c
 17771  003256  0E00               	movlw	0
 17772  003258  6E08               	movwf	(___fleq@ff2+3)^0,c
 17773  00325A  ECFD  F05A         	call	___fleq	;wreg free
 17774  00325E  B0D8               	btfsc	status,0,c
 17775  003260  EF34  F019         	goto	u20041
 17776  003264  EF36  F019         	goto	u20040
 17777  003268                     u20041:
 17778  003268  EFC9  F019         	goto	l18245
 17779  00326C                     u20040:
 17780  00326C                     
 17781                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 17782  00326C  0100               	movlb	0	; () banked
 17783  00326E  3591               	rlcf	(sprintf@fval+2)& (0+255),w,b
 17784  003270  3592               	rlcf	(sprintf@fval+3)& (0+255),w,b
 17785  003272  0F82               	addlw	130
 17786  003274  6F87               	movwf	sprintf@eexp& (0+255),b
 17787  003276  6B88               	clrf	(sprintf@eexp+1)& (0+255),b
 17788  003278  0EFF               	movlw	255
 17789  00327A  2388               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 17790  00327C                     
 17791                           ; BSR set to: 0
 17792                           ;doprnt.c: 864: eexp--;
 17793  00327C  0787               	decf	sprintf@eexp& (0+255),f,b
 17794  00327E  A0D8               	btfss	status,0,c
 17795  003280  0788               	decf	(sprintf@eexp+1)& (0+255),f,b
 17796  003282                     
 17797                           ; BSR set to: 0
 17798                           ;doprnt.c: 865: eexp *= 3;
 17799  003282  C087  F001         	movff	sprintf@eexp,___wmul@multiplier
 17800  003286  C088  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
 17801  00328A  0E00               	movlw	0
 17802  00328C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 17803  00328E  0E03               	movlw	3
 17804  003290  6E03               	movwf	___wmul@multiplicand^0,c
 17805  003292  ECEA  F069         	call	___wmul	;wreg free
 17806  003296  C001  F087         	movff	?___wmul,sprintf@eexp
 17807  00329A  C002  F088         	movff	?___wmul+1,sprintf@eexp+1
 17808  00329E                     
 17809                           ;doprnt.c: 866: eexp /= 10;
 17810  00329E  C087  F007         	movff	sprintf@eexp,___awdiv@dividend
 17811  0032A2  C088  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
 17812  0032A6  0E00               	movlw	0
 17813  0032A8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 17814  0032AA  0E0A               	movlw	10
 17815  0032AC  6E09               	movwf	___awdiv@divisor^0,c
 17816  0032AE  ECFD  F055         	call	___awdiv	;wreg free
 17817  0032B2  C007  F087         	movff	?___awdiv,sprintf@eexp
 17818  0032B6  C008  F088         	movff	?___awdiv+1,sprintf@eexp+1
 17819  0032BA                     
 17820                           ;doprnt.c: 867: if(eexp < 0)
 17821  0032BA  0100               	movlb	0	; () banked
 17822  0032BC  BF88               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 17823  0032BE  EF65  F019         	goto	u20050
 17824  0032C2  EF63  F019         	goto	u20051
 17825  0032C6                     u20051:
 17826  0032C6  EF68  F019         	goto	l18233
 17827  0032CA                     u20050:
 17828  0032CA                     
 17829                           ; BSR set to: 0
 17830                           ;doprnt.c: 868: eexp--;
 17831  0032CA  0787               	decf	sprintf@eexp& (0+255),f,b
 17832  0032CC  A0D8               	btfss	status,0,c
 17833  0032CE  0788               	decf	(sprintf@eexp+1)& (0+255),f,b
 17834  0032D0                     l18233:
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 17838  0032D0  5187               	movf	sprintf@eexp& (0+255),w,b
 17839  0032D2  0800               	sublw	0
 17840  0032D4  EC88  F02D         	call	_scale
 17841  0032D8  C060  F089         	movff	?_scale,sprintf@tmpval
 17842  0032DC  C061  F08A         	movff	?_scale+1,sprintf@tmpval+1
 17843  0032E0  C062  F08B         	movff	?_scale+2,sprintf@tmpval+2
 17844  0032E4  C063  F08C         	movff	?_scale+3,sprintf@tmpval+3
 17845  0032E8                     
 17846                           ;doprnt.c: 873: tmpval.integ *= fval;
 17847  0032E8  C089  F043         	movff	sprintf@tmpval,___flmul@b
 17848  0032EC  C08A  F044         	movff	sprintf@tmpval+1,___flmul@b+1
 17849  0032F0  C08B  F045         	movff	sprintf@tmpval+2,___flmul@b+2
 17850  0032F4  C08C  F046         	movff	sprintf@tmpval+3,___flmul@b+3
 17851  0032F8  C08F  F047         	movff	sprintf@fval,___flmul@a
 17852  0032FC  C090  F048         	movff	sprintf@fval+1,___flmul@a+1
 17853  003300  C091  F049         	movff	sprintf@fval+2,___flmul@a+2
 17854  003304  C092  F04A         	movff	sprintf@fval+3,___flmul@a+3
 17855  003308  EC73  F02B         	call	___flmul	;wreg free
 17856  00330C  C043  F089         	movff	?___flmul,sprintf@tmpval
 17857  003310  C044  F08A         	movff	?___flmul+1,sprintf@tmpval+1
 17858  003314  C045  F08B         	movff	?___flmul+2,sprintf@tmpval+2
 17859  003318  C046  F08C         	movff	?___flmul+3,sprintf@tmpval+3
 17860  00331C                     
 17861                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 17862  00331C  C089  F001         	movff	sprintf@tmpval,___flge@ff1
 17863  003320  C08A  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
 17864  003324  C08B  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
 17865  003328  C08C  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
 17866  00332C  0E00               	movlw	0
 17867  00332E  6E05               	movwf	___flge@ff2^0,c
 17868  003330  0E00               	movlw	0
 17869  003332  6E06               	movwf	(___flge@ff2+1)^0,c
 17870  003334  0E80               	movlw	128
 17871  003336  6E07               	movwf	(___flge@ff2+2)^0,c
 17872  003338  0E3F               	movlw	63
 17873  00333A  6E08               	movwf	(___flge@ff2+3)^0,c
 17874  00333C  EC6C  F051         	call	___flge	;wreg free
 17875  003340  B0D8               	btfsc	status,0,c
 17876  003342  EFA5  F019         	goto	u20061
 17877  003346  EFA7  F019         	goto	u20060
 17878  00334A                     u20061:
 17879  00334A  EFAD  F019         	goto	l18241
 17880  00334E                     u20060:
 17881  00334E                     
 17882                           ;doprnt.c: 875: eexp--;
 17883  00334E  0100               	movlb	0	; () banked
 17884  003350  0787               	decf	sprintf@eexp& (0+255),f,b
 17885  003352  A0D8               	btfss	status,0,c
 17886  003354  0788               	decf	(sprintf@eexp+1)& (0+255),f,b
 17887  003356  EFC9  F019         	goto	l18245
 17888  00335A                     l18241:
 17889                           
 17890                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 17891  00335A  C089  F001         	movff	sprintf@tmpval,___flge@ff1
 17892  00335E  C08A  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
 17893  003362  C08B  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
 17894  003366  C08C  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
 17895  00336A  0E00               	movlw	0
 17896  00336C  6E05               	movwf	___flge@ff2^0,c
 17897  00336E  0E00               	movlw	0
 17898  003370  6E06               	movwf	(___flge@ff2+1)^0,c
 17899  003372  0E20               	movlw	32
 17900  003374  6E07               	movwf	(___flge@ff2+2)^0,c
 17901  003376  0E41               	movlw	65
 17902  003378  6E08               	movwf	(___flge@ff2+3)^0,c
 17903  00337A  EC6C  F051         	call	___flge	;wreg free
 17904  00337E  A0D8               	btfss	status,0,c
 17905  003380  EFC4  F019         	goto	u20071
 17906  003384  EFC6  F019         	goto	u20070
 17907  003388                     u20071:
 17908  003388  EFC9  F019         	goto	l18245
 17909  00338C                     u20070:
 17910  00338C                     
 17911                           ;doprnt.c: 877: eexp++;
 17912  00338C  0100               	movlb	0	; () banked
 17913  00338E  4B87               	infsnz	sprintf@eexp& (0+255),f,b
 17914  003390  2B88               	incf	(sprintf@eexp+1)& (0+255),f,b
 17915  003392                     l18245:
 17916                           
 17917                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 17918  003392  0100               	movlb	0	; () banked
 17919  003394  BF8E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 17920  003396  EFD8  F019         	goto	u20080
 17921  00339A  518E               	movf	(sprintf@prec+1)& (0+255),w,b
 17922  00339C  E107               	bnz	u20081
 17923  00339E  0E0D               	movlw	13
 17924  0033A0  5D8D               	subwf	sprintf@prec& (0+255),w,b
 17925  0033A2  B0D8               	btfsc	status,0,c
 17926  0033A4  EFD6  F019         	goto	u20081
 17927  0033A8  EFD8  F019         	goto	u20080
 17928  0033AC                     u20081:
 17929  0033AC  EFF5  F019         	goto	l18249
 17930  0033B0                     u20080:
 17931  0033B0                     
 17932                           ; BSR set to: 0
 17933                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 17934  0033B0  C08F  F027         	movff	sprintf@fval,___fladd@b
 17935  0033B4  C090  F028         	movff	sprintf@fval+1,___fladd@b+1
 17936  0033B8  C091  F029         	movff	sprintf@fval+2,___fladd@b+2
 17937  0033BC  C092  F02A         	movff	sprintf@fval+3,___fladd@b+3
 17938  0033C0  518D               	movf	sprintf@prec& (0+255),w,b
 17939  0033C2  ECF6  F035         	call	_fround
 17940  0033C6  C060  F02B         	movff	?_fround,___fladd@a
 17941  0033CA  C061  F02C         	movff	?_fround+1,___fladd@a+1
 17942  0033CE  C062  F02D         	movff	?_fround+2,___fladd@a+2
 17943  0033D2  C063  F02E         	movff	?_fround+3,___fladd@a+3
 17944  0033D6  EC13  F029         	call	___fladd	;wreg free
 17945  0033DA  C027  F08F         	movff	?___fladd,sprintf@fval
 17946  0033DE  C028  F090         	movff	?___fladd+1,sprintf@fval+1
 17947  0033E2  C029  F091         	movff	?___fladd+2,sprintf@fval+2
 17948  0033E6  C02A  F092         	movff	?___fladd+3,sprintf@fval+3
 17949  0033EA                     l18249:
 17950                           
 17951                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 17952  0033EA  0100               	movlb	0	; () banked
 17953  0033EC  BF88               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 17954  0033EE  EF04  F01A         	goto	u20090
 17955  0033F2  5188               	movf	(sprintf@eexp+1)& (0+255),w,b
 17956  0033F4  E107               	bnz	u20091
 17957  0033F6  0E0A               	movlw	10
 17958  0033F8  5D87               	subwf	sprintf@eexp& (0+255),w,b
 17959  0033FA  B0D8               	btfsc	status,0,c
 17960  0033FC  EF02  F01A         	goto	u20091
 17961  003400  EF04  F01A         	goto	u20090
 17962  003404                     u20091:
 17963  003404  EF41  F01A         	goto	l18257
 17964  003408                     u20090:
 17965  003408                     
 17966                           ; BSR set to: 0
 17967  003408  C08F  F001         	movff	sprintf@fval,___fleq@ff1
 17968  00340C  C090  F002         	movff	sprintf@fval+1,___fleq@ff1+1
 17969  003410  C091  F003         	movff	sprintf@fval+2,___fleq@ff1+2
 17970  003414  C092  F004         	movff	sprintf@fval+3,___fleq@ff1+3
 17971  003418  0E00               	movlw	0
 17972  00341A  6E05               	movwf	___fleq@ff2^0,c
 17973  00341C  0E00               	movlw	0
 17974  00341E  6E06               	movwf	(___fleq@ff2+1)^0,c
 17975  003420  0E00               	movlw	0
 17976  003422  6E07               	movwf	(___fleq@ff2+2)^0,c
 17977  003424  0E00               	movlw	0
 17978  003426  6E08               	movwf	(___fleq@ff2+3)^0,c
 17979  003428  ECFD  F05A         	call	___fleq	;wreg free
 17980  00342C  B0D8               	btfsc	status,0,c
 17981  00342E  EF1B  F01A         	goto	u20101
 17982  003432  EF1D  F01A         	goto	u20100
 17983  003436                     u20101:
 17984  003436  EF96  F01A         	goto	l18271
 17985  00343A                     u20100:
 17986  00343A  C08F  F00F         	movff	sprintf@fval,___fltol@f1
 17987  00343E  C090  F010         	movff	sprintf@fval+1,___fltol@f1+1
 17988  003442  C091  F011         	movff	sprintf@fval+2,___fltol@f1+2
 17989  003446  C092  F012         	movff	sprintf@fval+3,___fltol@f1+3
 17990  00344A  ECE9  F050         	call	___fltol	;wreg free
 17991  00344E  500F               	movf	?___fltol^0,w,c
 17992  003450  1010               	iorwf	(?___fltol+1)^0,w,c
 17993  003452  1011               	iorwf	(?___fltol+2)^0,w,c
 17994  003454  1012               	iorwf	(?___fltol+3)^0,w,c
 17995  003456  A4D8               	btfss	status,2,c
 17996  003458  EF30  F01A         	goto	u20111
 17997  00345C  EF32  F01A         	goto	u20110
 17998  003460                     u20111:
 17999  003460  EF96  F01A         	goto	l18271
 18000  003464                     u20110:
 18001  003464  0100               	movlb	0	; () banked
 18002  003466  BF88               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 18003  003468  EF3F  F01A         	goto	u20121
 18004  00346C  5188               	movf	(sprintf@eexp+1)& (0+255),w,b
 18005  00346E  E109               	bnz	u20120
 18006  003470  0E02               	movlw	2
 18007  003472  5D87               	subwf	sprintf@eexp& (0+255),w,b
 18008  003474  A0D8               	btfss	status,0,c
 18009  003476  EF3F  F01A         	goto	u20121
 18010  00347A  EF41  F01A         	goto	u20120
 18011  00347E                     u20121:
 18012  00347E  EF96  F01A         	goto	l18271
 18013  003482                     u20120:
 18014  003482                     l18257:
 18015                           
 18016                           ; BSR set to: 0
 18017                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 18018  003482  C089  F001         	movff	sprintf@tmpval,___flge@ff1
 18019  003486  C08A  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
 18020  00348A  C08B  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
 18021  00348E  C08C  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
 18022  003492  0E5F               	movlw	95
 18023  003494  6E05               	movwf	___flge@ff2^0,c
 18024  003496  0E70               	movlw	112
 18025  003498  6E06               	movwf	(___flge@ff2+1)^0,c
 18026  00349A  0E89               	movlw	137
 18027  00349C  6E07               	movwf	(___flge@ff2+2)^0,c
 18028  00349E  0E40               	movlw	64
 18029  0034A0  6E08               	movwf	(___flge@ff2+3)^0,c
 18030  0034A2  EC6C  F051         	call	___flge	;wreg free
 18031  0034A6  B0D8               	btfsc	status,0,c
 18032  0034A8  EF58  F01A         	goto	u20131
 18033  0034AC  EF5A  F01A         	goto	u20130
 18034  0034B0                     u20131:
 18035  0034B0  EF61  F01A         	goto	l18261
 18036  0034B4                     u20130:
 18037  0034B4                     
 18038                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 18039  0034B4  0100               	movlb	0	; () banked
 18040  0034B6  0EF7               	movlw	247
 18041  0034B8  2787               	addwf	sprintf@eexp& (0+255),f,b
 18042  0034BA  0EFF               	movlw	255
 18043  0034BC  2388               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 18044                           
 18045                           ;doprnt.c: 1148: }else{
 18046  0034BE  EF66  F01A         	goto	l18263
 18047  0034C2                     l18261:
 18048                           
 18049                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 18050  0034C2  0100               	movlb	0	; () banked
 18051  0034C4  0EF8               	movlw	248
 18052  0034C6  2787               	addwf	sprintf@eexp& (0+255),f,b
 18053  0034C8  0EFF               	movlw	255
 18054  0034CA  2388               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 18055  0034CC                     l18263:
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 18059  0034CC  5187               	movf	sprintf@eexp& (0+255),w,b
 18060  0034CE  EC88  F02D         	call	_scale
 18061  0034D2  C060  F089         	movff	?_scale,sprintf@tmpval
 18062  0034D6  C061  F08A         	movff	?_scale+1,sprintf@tmpval+1
 18063  0034DA  C062  F08B         	movff	?_scale+2,sprintf@tmpval+2
 18064  0034DE  C063  F08C         	movff	?_scale+3,sprintf@tmpval+3
 18065  0034E2  C08F  F001         	movff	sprintf@fval,__div_to_l_@f1
 18066  0034E6  C090  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
 18067  0034EA  C091  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
 18068  0034EE  C092  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
 18069  0034F2  C089  F005         	movff	sprintf@tmpval,__div_to_l_@f2
 18070  0034F6  C08A  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 18071  0034FA  C08B  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 18072  0034FE  C08C  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
 18073  003502  ECDA  F048         	call	__div_to_l_	;wreg free
 18074  003506  C001  F083         	movff	?__div_to_l_,sprintf@val
 18075  00350A  C002  F084         	movff	?__div_to_l_+1,sprintf@val+1
 18076  00350E  C003  F085         	movff	?__div_to_l_+2,sprintf@val+2
 18077  003512  C004  F086         	movff	?__div_to_l_+3,sprintf@val+3
 18078  003516                     
 18079                           ;doprnt.c: 1155: fval = 0.0;
 18080  003516  0E00               	movlw	0
 18081  003518  0100               	movlb	0	; () banked
 18082  00351A  6F8F               	movwf	sprintf@fval& (0+255),b
 18083  00351C  0E00               	movlw	0
 18084  00351E  6F90               	movwf	(sprintf@fval+1)& (0+255),b
 18085  003520  0E00               	movlw	0
 18086  003522  6F91               	movwf	(sprintf@fval+2)& (0+255),b
 18087  003524  0E00               	movlw	0
 18088  003526  6F92               	movwf	(sprintf@fval+3)& (0+255),b
 18089                           
 18090                           ;doprnt.c: 1156: } else {
 18091  003528  EFD2  F01A         	goto	l18275
 18092  00352C                     l18271:
 18093                           
 18094                           ;doprnt.c: 1157: val = (unsigned long)fval;
 18095  00352C  C08F  F00F         	movff	sprintf@fval,___fltol@f1
 18096  003530  C090  F010         	movff	sprintf@fval+1,___fltol@f1+1
 18097  003534  C091  F011         	movff	sprintf@fval+2,___fltol@f1+2
 18098  003538  C092  F012         	movff	sprintf@fval+3,___fltol@f1+3
 18099  00353C  ECE9  F050         	call	___fltol	;wreg free
 18100  003540  C00F  F083         	movff	?___fltol,sprintf@val
 18101  003544  C010  F084         	movff	?___fltol+1,sprintf@val+1
 18102  003548  C011  F085         	movff	?___fltol+2,sprintf@val+2
 18103  00354C  C012  F086         	movff	?___fltol+3,sprintf@val+3
 18104                           
 18105                           ;doprnt.c: 1158: fval -= (double)val;
 18106  003550  C08F  F037         	movff	sprintf@fval,___flsub@b
 18107  003554  C090  F038         	movff	sprintf@fval+1,___flsub@b+1
 18108  003558  C091  F039         	movff	sprintf@fval+2,___flsub@b+2
 18109  00355C  C092  F03A         	movff	sprintf@fval+3,___flsub@b+3
 18110  003560  C083  F019         	movff	sprintf@val,___xxtofl@val
 18111  003564  C084  F01A         	movff	sprintf@val+1,___xxtofl@val+1
 18112  003568  C085  F01B         	movff	sprintf@val+2,___xxtofl@val+2
 18113  00356C  C086  F01C         	movff	sprintf@val+3,___xxtofl@val+3
 18114  003570  0E00               	movlw	0
 18115  003572  ECC1  F040         	call	___xxtofl
 18116  003576  C019  F03B         	movff	?___xxtofl,___flsub@a
 18117  00357A  C01A  F03C         	movff	?___xxtofl+1,___flsub@a+1
 18118  00357E  C01B  F03D         	movff	?___xxtofl+2,___flsub@a+2
 18119  003582  C01C  F03E         	movff	?___xxtofl+3,___flsub@a+3
 18120  003586  EC08  F067         	call	___flsub	;wreg free
 18121  00358A  C037  F08F         	movff	?___flsub,sprintf@fval
 18122  00358E  C038  F090         	movff	?___flsub+1,sprintf@fval+1
 18123  003592  C039  F091         	movff	?___flsub+2,sprintf@fval+2
 18124  003596  C03A  F092         	movff	?___flsub+3,sprintf@fval+3
 18125  00359A                     
 18126                           ;doprnt.c: 1159: eexp = 0;
 18127  00359A  0E00               	movlw	0
 18128  00359C  0100               	movlb	0	; () banked
 18129  00359E  6F88               	movwf	(sprintf@eexp+1)& (0+255),b
 18130  0035A0  0E00               	movlw	0
 18131  0035A2  6F87               	movwf	sprintf@eexp& (0+255),b
 18132  0035A4                     l18275:
 18133                           
 18134                           ; BSR set to: 0
 18135                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 18136  0035A4  0E01               	movlw	1
 18137  0035A6  6F93               	movwf	sprintf@c& (0+255),b
 18138  0035A8                     l18281:
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;doprnt.c: 1163: if(val < dpowers[c])
 18142  0035A8  5193               	movf	sprintf@c& (0+255),w,b
 18143  0035AA  0D04               	mullw	4
 18144  0035AC  0E05               	movlw	low _dpowers
 18145  0035AE  24F3               	addwf	243,w,c
 18146  0035B0  6EF6               	movwf	tblptrl,c
 18147  0035B2  0E23               	movlw	high _dpowers
 18148  0035B4  20F4               	addwfc	244,w,c
 18149  0035B6  6EF7               	movwf	tblptrh,c
 18150  0035B8                     	if	0	;There are less than 3 active tblptr bytes
 18151  0035B8                     	endif
 18152  0035B8  0009               	tblrd		*+
 18153  0035BA  50F5               	movf	tablat,w,c
 18154  0035BC  5D83               	subwf	sprintf@val& (0+255),w,b
 18155  0035BE  0009               	tblrd		*+
 18156  0035C0  50F5               	movf	tablat,w,c
 18157  0035C2  5984               	subwfb	(sprintf@val+1)& (0+255),w,b
 18158  0035C4  0009               	tblrd		*+
 18159  0035C6  50F5               	movf	tablat,w,c
 18160  0035C8  5985               	subwfb	(sprintf@val+2)& (0+255),w,b
 18161  0035CA  0009               	tblrd		*+
 18162  0035CC  50F5               	movf	tablat,w,c
 18163  0035CE  5986               	subwfb	(sprintf@val+3)& (0+255),w,b
 18164  0035D0  B0D8               	btfsc	status,0,c
 18165  0035D2  EFED  F01A         	goto	u20141
 18166  0035D6  EFEF  F01A         	goto	u20140
 18167  0035DA                     u20141:
 18168  0035DA  EFF1  F01A         	goto	l18285
 18169  0035DE                     u20140:
 18170  0035DE  EFFB  F01A         	goto	l18289
 18171  0035E2                     l18285:
 18172                           
 18173                           ; BSR set to: 0
 18174  0035E2  2B93               	incf	sprintf@c& (0+255),f,b
 18175  0035E4                     
 18176                           ; BSR set to: 0
 18177  0035E4  0E0A               	movlw	10
 18178  0035E6  1993               	xorwf	sprintf@c& (0+255),w,b
 18179  0035E8  A4D8               	btfss	status,2,c
 18180  0035EA  EFF9  F01A         	goto	u20151
 18181  0035EE  EFFB  F01A         	goto	u20150
 18182  0035F2                     u20151:
 18183  0035F2  EFD4  F01A         	goto	l18281
 18184  0035F6                     u20150:
 18185  0035F6                     l18289:
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
 18189  0035F6  0E03               	movlw	3
 18190  0035F8  1581               	andwf	sprintf@flag& (0+255),w,b
 18191  0035FA  6F75               	movwf	??_sprintf& (0+255),b
 18192  0035FC  0E00               	movlw	0
 18193  0035FE  1582               	andwf	(sprintf@flag+1)& (0+255),w,b
 18194  003600  6F76               	movwf	(??_sprintf+1)& (0+255),b
 18195  003602  5175               	movf	??_sprintf& (0+255),w,b
 18196  003604  1176               	iorwf	(??_sprintf+1)& (0+255),w,b
 18197  003606  B4D8               	btfsc	status,2,c
 18198  003608  EF08  F01B         	goto	u20161
 18199  00360C  EF0A  F01B         	goto	u20160
 18200  003610                     u20161:
 18201  003610  EF60  F01B         	goto	l18307
 18202  003614                     u20160:
 18203  003614                     
 18204                           ; BSR set to: 0
 18205                           ;doprnt.c: 1216: ((*sp++ = ('-')),(++ccnt));
 18206  003614  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18207  003618  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18208  00361C  0E2D               	movlw	45
 18209  00361E  6EDF               	movwf	indf2,c
 18210  003620                     l18293:
 18211                           
 18212                           ; BSR set to: 0
 18213  003620  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 18214  003622  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 18215  003624                     
 18216                           ; BSR set to: 0
 18217  003624  4B7F               	infsnz	sprintf@ccnt& (0+255),f,b
 18218  003626  2B80               	incf	(sprintf@ccnt+1)& (0+255),f,b
 18219  003628  EF60  F01B         	goto	l18307
 18220  00362C                     l18297:
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 18224  00362C  C083  F001         	movff	sprintf@val,___lldiv@dividend
 18225  003630  C084  F002         	movff	sprintf@val+1,___lldiv@dividend+1
 18226  003634  C085  F003         	movff	sprintf@val+2,___lldiv@dividend+2
 18227  003638  C086  F004         	movff	sprintf@val+3,___lldiv@dividend+3
 18228  00363C  5193               	movf	sprintf@c& (0+255),w,b
 18229  00363E  0D04               	mullw	4
 18230  003640  0E05               	movlw	low _dpowers
 18231  003642  24F3               	addwf	243,w,c
 18232  003644  6EF6               	movwf	tblptrl,c
 18233  003646  0E23               	movlw	high _dpowers
 18234  003648  20F4               	addwfc	244,w,c
 18235  00364A  6EF7               	movwf	tblptrh,c
 18236  00364C                     	if	0	;There are less than 3 active tblptr bytes
 18237  00364C                     	endif
 18238  00364C  0009               	tblrd		*+
 18239  00364E  CFF5 F005          	movff	tablat,___lldiv@divisor
 18240  003652  0009               	tblrd		*+
 18241  003654  CFF5 F006          	movff	tablat,___lldiv@divisor+1
 18242  003658  0009               	tblrd		*+
 18243  00365A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
 18244  00365E  000A               	tblrd		*-
 18245  003660  CFF5 F008          	movff	tablat,___lldiv@divisor+3
 18246  003664  ECA5  F05B         	call	___lldiv	;wreg free
 18247  003668  C001  F089         	movff	?___lldiv,sprintf@tmpval
 18248  00366C  C002  F08A         	movff	?___lldiv+1,sprintf@tmpval+1
 18249  003670  C003  F08B         	movff	?___lldiv+2,sprintf@tmpval+2
 18250  003674  C004  F08C         	movff	?___lldiv+3,sprintf@tmpval+3
 18251  003678                     
 18252                           ;doprnt.c: 1228: tmpval.vd %= 10;
 18253  003678  C089  F001         	movff	sprintf@tmpval,___llmod@dividend
 18254  00367C  C08A  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
 18255  003680  C08B  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
 18256  003684  C08C  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
 18257  003688  0E0A               	movlw	10
 18258  00368A  6E05               	movwf	___llmod@divisor^0,c
 18259  00368C  0E00               	movlw	0
 18260  00368E  6E06               	movwf	(___llmod@divisor+1)^0,c
 18261  003690  0E00               	movlw	0
 18262  003692  6E07               	movwf	(___llmod@divisor+2)^0,c
 18263  003694  0E00               	movlw	0
 18264  003696  6E08               	movwf	(___llmod@divisor+3)^0,c
 18265  003698  EC20  F05F         	call	___llmod	;wreg free
 18266  00369C  C001  F089         	movff	?___llmod,sprintf@tmpval
 18267  0036A0  C002  F08A         	movff	?___llmod+1,sprintf@tmpval+1
 18268  0036A4  C003  F08B         	movff	?___llmod+2,sprintf@tmpval+2
 18269  0036A8  C004  F08C         	movff	?___llmod+3,sprintf@tmpval+3
 18270  0036AC                     
 18271                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 18272  0036AC  0100               	movlb	0	; () banked
 18273  0036AE  5189               	movf	sprintf@tmpval& (0+255),w,b
 18274  0036B0  0F30               	addlw	48
 18275  0036B2  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18276  0036B6  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18277  0036BA  6EDF               	movwf	indf2,c
 18278  0036BC  EF10  F01B         	goto	l18293
 18279  0036C0                     l18307:
 18280                           
 18281                           ; BSR set to: 0
 18282  0036C0  0793               	decf	sprintf@c& (0+255),f,b
 18283  0036C2  2993               	incf	sprintf@c& (0+255),w,b
 18284  0036C4  A4D8               	btfss	status,2,c
 18285  0036C6  EF67  F01B         	goto	u20171
 18286  0036CA  EF69  F01B         	goto	u20170
 18287  0036CE                     u20171:
 18288  0036CE  EF16  F01B         	goto	l18297
 18289  0036D2                     u20170:
 18290  0036D2  EF78  F01B         	goto	l18317
 18291  0036D6                     l18309:
 18292                           
 18293                           ; BSR set to: 0
 18294                           ;doprnt.c: 1234: ((*sp++ = ('0')),(++ccnt));
 18295  0036D6  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18296  0036DA  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18297  0036DE  0E30               	movlw	48
 18298  0036E0  6EDF               	movwf	indf2,c
 18299  0036E2                     
 18300                           ; BSR set to: 0
 18301  0036E2  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 18302  0036E4  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 18303  0036E6                     
 18304                           ; BSR set to: 0
 18305  0036E6  4B7F               	infsnz	sprintf@ccnt& (0+255),f,b
 18306  0036E8  2B80               	incf	(sprintf@ccnt+1)& (0+255),f,b
 18307  0036EA                     
 18308                           ; BSR set to: 0
 18309                           ;doprnt.c: 1235: eexp--;
 18310  0036EA  0787               	decf	sprintf@eexp& (0+255),f,b
 18311  0036EC  A0D8               	btfss	status,0,c
 18312  0036EE  0788               	decf	(sprintf@eexp+1)& (0+255),f,b
 18313  0036F0                     l18317:
 18314                           
 18315                           ; BSR set to: 0
 18316  0036F0  BF88               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 18317  0036F2  EF85  F01B         	goto	u20180
 18318  0036F6  5188               	movf	(sprintf@eexp+1)& (0+255),w,b
 18319  0036F8  E106               	bnz	u20181
 18320  0036FA  0587               	decf	sprintf@eexp& (0+255),w,b
 18321  0036FC  B0D8               	btfsc	status,0,c
 18322  0036FE  EF83  F01B         	goto	u20181
 18323  003702  EF85  F01B         	goto	u20180
 18324  003706                     u20181:
 18325  003706  EF6B  F01B         	goto	l18309
 18326  00370A                     u20180:
 18327  00370A                     
 18328                           ; BSR set to: 0
 18329                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 18330  00370A  BF8E               	btfsc	(sprintf@prec+1)& (0+255),7,b
 18331  00370C  EF91  F01B         	goto	u20191
 18332  003710  518E               	movf	(sprintf@prec+1)& (0+255),w,b
 18333  003712  E109               	bnz	u20190
 18334  003714  0E09               	movlw	9
 18335  003716  5D8D               	subwf	sprintf@prec& (0+255),w,b
 18336  003718  A0D8               	btfss	status,0,c
 18337  00371A  EF91  F01B         	goto	u20191
 18338  00371E  EF93  F01B         	goto	u20190
 18339  003722                     u20191:
 18340  003722  EF97  F01B         	goto	l2241
 18341  003726                     u20190:
 18342  003726                     
 18343                           ; BSR set to: 0
 18344                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 18345  003726  0E08               	movlw	8
 18346  003728  6F93               	movwf	sprintf@c& (0+255),b
 18347  00372A  EF99  F01B         	goto	l18323
 18348  00372E                     l2241:
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 18352  00372E  C08D  F093         	movff	sprintf@prec,sprintf@c
 18353  003732                     l18323:
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;doprnt.c: 1241: prec -= (int)c;
 18357  003732  5193               	movf	sprintf@c& (0+255),w,b
 18358  003734  5F8D               	subwf	sprintf@prec& (0+255),f,b
 18359  003736  0E00               	movlw	0
 18360  003738  5B8E               	subwfb	(sprintf@prec+1)& (0+255),f,b
 18361  00373A                     
 18362                           ; BSR set to: 0
 18363                           ;doprnt.c: 1245: if(c)
 18364  00373A  5193               	movf	sprintf@c& (0+255),w,b
 18365  00373C  B4D8               	btfsc	status,2,c
 18366  00373E  EFA3  F01B         	goto	u20201
 18367  003742  EFA5  F01B         	goto	u20200
 18368  003746                     u20201:
 18369  003746  EFAF  F01B         	goto	l18333
 18370  00374A                     u20200:
 18371  00374A                     
 18372                           ; BSR set to: 0
 18373                           ;doprnt.c: 1247: ((*sp++ = ('.')),(++ccnt));
 18374  00374A  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18375  00374E  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18376  003752  0E2E               	movlw	46
 18377  003754  6EDF               	movwf	indf2,c
 18378  003756                     
 18379                           ; BSR set to: 0
 18380  003756  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 18381  003758  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 18382  00375A                     
 18383                           ; BSR set to: 0
 18384  00375A  4B7F               	infsnz	sprintf@ccnt& (0+255),f,b
 18385  00375C  2B80               	incf	(sprintf@ccnt+1)& (0+255),f,b
 18386  00375E                     l18333:
 18387                           
 18388                           ; BSR set to: 0
 18389                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 18390  00375E  5193               	movf	sprintf@c& (0+255),w,b
 18391  003760  EC88  F02D         	call	_scale
 18392  003764  C060  F079         	movff	?_scale,_sprintf$6571
 18393  003768  C061  F07A         	movff	?_scale+1,_sprintf$6571+1
 18394  00376C  C062  F07B         	movff	?_scale+2,_sprintf$6571+2
 18395  003770  C063  F07C         	movff	?_scale+3,_sprintf$6571+3
 18396  003774                     
 18397                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 18398  003774  C08F  F047         	movff	sprintf@fval,___flmul@a
 18399  003778  C090  F048         	movff	sprintf@fval+1,___flmul@a+1
 18400  00377C  C091  F049         	movff	sprintf@fval+2,___flmul@a+2
 18401  003780  C092  F04A         	movff	sprintf@fval+3,___flmul@a+3
 18402  003784  C079  F043         	movff	_sprintf$6571,___flmul@b
 18403  003788  C07A  F044         	movff	_sprintf$6571+1,___flmul@b+1
 18404  00378C  C07B  F045         	movff	_sprintf$6571+2,___flmul@b+2
 18405  003790  C07C  F046         	movff	_sprintf$6571+3,___flmul@b+3
 18406  003794  EC73  F02B         	call	___flmul	;wreg free
 18407  003798  C043  F00F         	movff	?___flmul,___fltol@f1
 18408  00379C  C044  F010         	movff	?___flmul+1,___fltol@f1+1
 18409  0037A0  C045  F011         	movff	?___flmul+2,___fltol@f1+2
 18410  0037A4  C046  F012         	movff	?___flmul+3,___fltol@f1+3
 18411  0037A8  ECE9  F050         	call	___fltol	;wreg free
 18412  0037AC  C00F  F083         	movff	?___fltol,sprintf@val
 18413  0037B0  C010  F084         	movff	?___fltol+1,sprintf@val+1
 18414  0037B4  C011  F085         	movff	?___fltol+2,sprintf@val+2
 18415  0037B8  C012  F086         	movff	?___fltol+3,sprintf@val+3
 18416                           
 18417                           ;doprnt.c: 1254: while(c--) {
 18418  0037BC  EF52  F01C         	goto	l18349
 18419  0037C0                     l18337:
 18420                           
 18421                           ; BSR set to: 0
 18422                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 18423  0037C0  C083  F001         	movff	sprintf@val,___lldiv@dividend
 18424  0037C4  C084  F002         	movff	sprintf@val+1,___lldiv@dividend+1
 18425  0037C8  C085  F003         	movff	sprintf@val+2,___lldiv@dividend+2
 18426  0037CC  C086  F004         	movff	sprintf@val+3,___lldiv@dividend+3
 18427  0037D0  5193               	movf	sprintf@c& (0+255),w,b
 18428  0037D2  0D04               	mullw	4
 18429  0037D4  0E05               	movlw	low _dpowers
 18430  0037D6  24F3               	addwf	243,w,c
 18431  0037D8  6EF6               	movwf	tblptrl,c
 18432  0037DA  0E23               	movlw	high _dpowers
 18433  0037DC  20F4               	addwfc	244,w,c
 18434  0037DE  6EF7               	movwf	tblptrh,c
 18435  0037E0                     	if	0	;There are less than 3 active tblptr bytes
 18436  0037E0                     	endif
 18437  0037E0  0009               	tblrd		*+
 18438  0037E2  CFF5 F005          	movff	tablat,___lldiv@divisor
 18439  0037E6  0009               	tblrd		*+
 18440  0037E8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
 18441  0037EC  0009               	tblrd		*+
 18442  0037EE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
 18443  0037F2  000A               	tblrd		*-
 18444  0037F4  CFF5 F008          	movff	tablat,___lldiv@divisor+3
 18445  0037F8  ECA5  F05B         	call	___lldiv	;wreg free
 18446  0037FC  C001  F089         	movff	?___lldiv,sprintf@tmpval
 18447  003800  C002  F08A         	movff	?___lldiv+1,sprintf@tmpval+1
 18448  003804  C003  F08B         	movff	?___lldiv+2,sprintf@tmpval+2
 18449  003808  C004  F08C         	movff	?___lldiv+3,sprintf@tmpval+3
 18450  00380C                     
 18451                           ;doprnt.c: 1256: tmpval.vd %= 10;
 18452  00380C  C089  F001         	movff	sprintf@tmpval,___llmod@dividend
 18453  003810  C08A  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
 18454  003814  C08B  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
 18455  003818  C08C  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
 18456  00381C  0E0A               	movlw	10
 18457  00381E  6E05               	movwf	___llmod@divisor^0,c
 18458  003820  0E00               	movlw	0
 18459  003822  6E06               	movwf	(___llmod@divisor+1)^0,c
 18460  003824  0E00               	movlw	0
 18461  003826  6E07               	movwf	(___llmod@divisor+2)^0,c
 18462  003828  0E00               	movlw	0
 18463  00382A  6E08               	movwf	(___llmod@divisor+3)^0,c
 18464  00382C  EC20  F05F         	call	___llmod	;wreg free
 18465  003830  C001  F089         	movff	?___llmod,sprintf@tmpval
 18466  003834  C002  F08A         	movff	?___llmod+1,sprintf@tmpval+1
 18467  003838  C003  F08B         	movff	?___llmod+2,sprintf@tmpval+2
 18468  00383C  C004  F08C         	movff	?___llmod+3,sprintf@tmpval+3
 18469  003840                     
 18470                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 18471  003840  0100               	movlb	0	; () banked
 18472  003842  5189               	movf	sprintf@tmpval& (0+255),w,b
 18473  003844  0F30               	addlw	48
 18474  003846  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18475  00384A  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18476  00384E  6EDF               	movwf	indf2,c
 18477  003850                     
 18478                           ; BSR set to: 0
 18479  003850  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 18480  003852  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 18481  003854                     
 18482                           ; BSR set to: 0
 18483  003854  4B7F               	infsnz	sprintf@ccnt& (0+255),f,b
 18484  003856  2B80               	incf	(sprintf@ccnt+1)& (0+255),f,b
 18485  003858                     
 18486                           ; BSR set to: 0
 18487                           ;doprnt.c: 1258: val %= dpowers[c];
 18488  003858  C083  F001         	movff	sprintf@val,___llmod@dividend
 18489  00385C  C084  F002         	movff	sprintf@val+1,___llmod@dividend+1
 18490  003860  C085  F003         	movff	sprintf@val+2,___llmod@dividend+2
 18491  003864  C086  F004         	movff	sprintf@val+3,___llmod@dividend+3
 18492  003868  5193               	movf	sprintf@c& (0+255),w,b
 18493  00386A  0D04               	mullw	4
 18494  00386C  0E05               	movlw	low _dpowers
 18495  00386E  24F3               	addwf	243,w,c
 18496  003870  6EF6               	movwf	tblptrl,c
 18497  003872  0E23               	movlw	high _dpowers
 18498  003874  20F4               	addwfc	244,w,c
 18499  003876  6EF7               	movwf	tblptrh,c
 18500  003878                     	if	0	;There are less than 3 active tblptr bytes
 18501  003878                     	endif
 18502  003878  0009               	tblrd		*+
 18503  00387A  CFF5 F005          	movff	tablat,___llmod@divisor
 18504  00387E  0009               	tblrd		*+
 18505  003880  CFF5 F006          	movff	tablat,___llmod@divisor+1
 18506  003884  0009               	tblrd		*+
 18507  003886  CFF5 F007          	movff	tablat,___llmod@divisor+2
 18508  00388A  000A               	tblrd		*-
 18509  00388C  CFF5 F008          	movff	tablat,___llmod@divisor+3
 18510  003890  EC20  F05F         	call	___llmod	;wreg free
 18511  003894  C001  F083         	movff	?___llmod,sprintf@val
 18512  003898  C002  F084         	movff	?___llmod+1,sprintf@val+1
 18513  00389C  C003  F085         	movff	?___llmod+2,sprintf@val+2
 18514  0038A0  C004  F086         	movff	?___llmod+3,sprintf@val+3
 18515  0038A4                     l18349:
 18516  0038A4  0100               	movlb	0	; () banked
 18517  0038A6  0793               	decf	sprintf@c& (0+255),f,b
 18518  0038A8  2993               	incf	sprintf@c& (0+255),w,b
 18519  0038AA  A4D8               	btfss	status,2,c
 18520  0038AC  EF5A  F01C         	goto	u20211
 18521  0038B0  EF5C  F01C         	goto	u20210
 18522  0038B4                     u20211:
 18523  0038B4  EFE0  F01B         	goto	l18337
 18524  0038B8                     u20210:
 18525  0038B8  EF6B  F01C         	goto	l18359
 18526  0038BC                     l18351:
 18527                           
 18528                           ; BSR set to: 0
 18529                           ;doprnt.c: 1262: ((*sp++ = ('0')),(++ccnt));
 18530  0038BC  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18531  0038C0  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18532  0038C4  0E30               	movlw	48
 18533  0038C6  6EDF               	movwf	indf2,c
 18534  0038C8                     
 18535                           ; BSR set to: 0
 18536  0038C8  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 18537  0038CA  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 18538  0038CC                     
 18539                           ; BSR set to: 0
 18540  0038CC  4B7F               	infsnz	sprintf@ccnt& (0+255),f,b
 18541  0038CE  2B80               	incf	(sprintf@ccnt+1)& (0+255),f,b
 18542  0038D0                     
 18543                           ; BSR set to: 0
 18544                           ;doprnt.c: 1263: prec--;
 18545  0038D0  078D               	decf	sprintf@prec& (0+255),f,b
 18546  0038D2  A0D8               	btfss	status,0,c
 18547  0038D4  078E               	decf	(sprintf@prec+1)& (0+255),f,b
 18548  0038D6                     l18359:
 18549                           
 18550                           ; BSR set to: 0
 18551  0038D6  518D               	movf	sprintf@prec& (0+255),w,b
 18552  0038D8  118E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 18553  0038DA  A4D8               	btfss	status,2,c
 18554  0038DC  EF72  F01C         	goto	u20221
 18555  0038E0  EF74  F01C         	goto	u20220
 18556  0038E4                     u20221:
 18557  0038E4  EF5E  F01C         	goto	l18351
 18558  0038E8                     u20220:
 18559  0038E8  EFC9  F01C         	goto	l18383
 18560  0038EC                     l18361:
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
 18564  0038EC  518D               	movf	sprintf@prec& (0+255),w,b
 18565  0038EE  118E               	iorwf	(sprintf@prec+1)& (0+255),w,b
 18566  0038F0  A4D8               	btfss	status,2,c
 18567  0038F2  EF7D  F01C         	goto	u20231
 18568  0038F6  EF7F  F01C         	goto	u20230
 18569  0038FA                     u20231:
 18570  0038FA  EF8C  F01C         	goto	l18367
 18571  0038FE                     u20230:
 18572  0038FE                     
 18573                           ; BSR set to: 0
 18574  0038FE  5183               	movf	sprintf@val& (0+255),w,b
 18575  003900  1184               	iorwf	(sprintf@val+1)& (0+255),w,b
 18576  003902  1185               	iorwf	(sprintf@val+2)& (0+255),w,b
 18577  003904  1186               	iorwf	(sprintf@val+3)& (0+255),w,b
 18578  003906  A4D8               	btfss	status,2,c
 18579  003908  EF88  F01C         	goto	u20241
 18580  00390C  EF8A  F01C         	goto	u20240
 18581  003910                     u20241:
 18582  003910  EF8C  F01C         	goto	l18367
 18583  003914                     u20240:
 18584  003914                     
 18585                           ; BSR set to: 0
 18586                           ;doprnt.c: 1317: prec++;
 18587  003914  4B8D               	infsnz	sprintf@prec& (0+255),f,b
 18588  003916  2B8E               	incf	(sprintf@prec+1)& (0+255),f,b
 18589  003918                     l18367:
 18590                           
 18591                           ; BSR set to: 0
 18592                           ;doprnt.c: 1365: if(c < prec)
 18593  003918  5193               	movf	sprintf@c& (0+255),w,b
 18594  00391A  6F75               	movwf	??_sprintf& (0+255),b
 18595  00391C  6B76               	clrf	(??_sprintf+1)& (0+255),b
 18596  00391E  518D               	movf	sprintf@prec& (0+255),w,b
 18597  003920  5D75               	subwf	??_sprintf& (0+255),w,b
 18598  003922  5176               	movf	(??_sprintf+1)& (0+255),w,b
 18599  003924  0A80               	xorlw	128
 18600  003926  6F77               	movwf	(??_sprintf+2)& (0+255),b
 18601  003928  518E               	movf	(sprintf@prec+1)& (0+255),w,b
 18602  00392A  0A80               	xorlw	128
 18603  00392C  5977               	subwfb	(??_sprintf+2)& (0+255),w,b
 18604  00392E  B0D8               	btfsc	status,0,c
 18605  003930  EF9C  F01C         	goto	u20251
 18606  003934  EF9E  F01C         	goto	u20250
 18607  003938                     u20251:
 18608  003938  EFA0  F01C         	goto	l18371
 18609  00393C                     u20250:
 18610  00393C                     
 18611                           ; BSR set to: 0
 18612  00393C  EFB2  F01C         	goto	l18375
 18613  003940                     l18371:
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;doprnt.c: 1367: else if(prec < c)
 18617  003940  5193               	movf	sprintf@c& (0+255),w,b
 18618  003942  6F75               	movwf	??_sprintf& (0+255),b
 18619  003944  6B76               	clrf	(??_sprintf+1)& (0+255),b
 18620  003946  5175               	movf	??_sprintf& (0+255),w,b
 18621  003948  5D8D               	subwf	sprintf@prec& (0+255),w,b
 18622  00394A  518E               	movf	(sprintf@prec+1)& (0+255),w,b
 18623  00394C  0A80               	xorlw	128
 18624  00394E  6F77               	movwf	(??_sprintf+2)& (0+255),b
 18625  003950  5176               	movf	(??_sprintf+1)& (0+255),w,b
 18626  003952  0A80               	xorlw	128
 18627  003954  5977               	subwfb	(??_sprintf+2)& (0+255),w,b
 18628  003956  B0D8               	btfsc	status,0,c
 18629  003958  EFB0  F01C         	goto	u20261
 18630  00395C  EFB2  F01C         	goto	u20260
 18631  003960                     u20261:
 18632  003960  EFB2  F01C         	goto	l18375
 18633  003964                     u20260:
 18634  003964                     l18375:
 18635                           
 18636                           ; BSR set to: 0
 18637                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
 18638  003964  0E03               	movlw	3
 18639  003966  1581               	andwf	sprintf@flag& (0+255),w,b
 18640  003968  6F75               	movwf	??_sprintf& (0+255),b
 18641  00396A  0E00               	movlw	0
 18642  00396C  1582               	andwf	(sprintf@flag+1)& (0+255),w,b
 18643  00396E  6F76               	movwf	(??_sprintf+1)& (0+255),b
 18644  003970  5175               	movf	??_sprintf& (0+255),w,b
 18645  003972  1176               	iorwf	(??_sprintf+1)& (0+255),w,b
 18646  003974  B4D8               	btfsc	status,2,c
 18647  003976  EFBF  F01C         	goto	u20271
 18648  00397A  EFC1  F01C         	goto	u20270
 18649  00397E                     u20271:
 18650  00397E  EFC9  F01C         	goto	l18383
 18651  003982                     u20270:
 18652  003982                     
 18653                           ; BSR set to: 0
 18654                           ;doprnt.c: 1465: ((*sp++ = ('-')),(++ccnt));
 18655  003982  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18656  003986  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18657  00398A  0E2D               	movlw	45
 18658  00398C  6EDF               	movwf	indf2,c
 18659  00398E  EF63  F018         	goto	l18171
 18660  003992                     l18383:
 18661                           
 18662                           ; BSR set to: 0
 18663  003992  C06F  FFF6         	movff	sprintf@f,tblptrl
 18664  003996  C070  FFF7         	movff	sprintf@f+1,tblptrh
 18665  00399A  4B6F               	infsnz	sprintf@f& (0+255),f,b
 18666  00399C  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 18667  00399E                     	if	0	;tblptru may be non-zero
 18668  00399E                     	endif
 18669  00399E                     	if	0	;tblptru may be non-zero
 18670  00399E                     	endif
 18671  00399E  0008               	tblrd		*
 18672  0039A0  CFF5 F093          	movff	tablat,sprintf@c
 18673  0039A4  5193               	movf	sprintf@c& (0+255),w,b
 18674  0039A6  A4D8               	btfss	status,2,c
 18675  0039A8  EFD8  F01C         	goto	u20281
 18676  0039AC  EFDA  F01C         	goto	u20280
 18677  0039B0                     u20281:
 18678  0039B0  EF54  F018         	goto	l18167
 18679  0039B4                     u20280:
 18680  0039B4                     l18385:
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;doprnt.c: 1564: *sp = 0;
 18684  0039B4  C06D  FFD9         	movff	sprintf@sp,fsr2l
 18685  0039B8  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 18686  0039BC  0E00               	movlw	0
 18687  0039BE  6EDF               	movwf	indf2,c
 18688  0039C0                     
 18689                           ; BSR set to: 0
 18690                           ;doprnt.c: 1566: return ccnt;
 18691  0039C0  C07F  F06D         	movff	sprintf@ccnt,?_sprintf
 18692  0039C4  C080  F06E         	movff	sprintf@ccnt+1,?_sprintf+1
 18693  0039C8                     
 18694                           ; BSR set to: 0
 18695  0039C8  0012               	return		;funcret
 18696  0039CA                     __end_of_sprintf:
 18697                           	callstack 0
 18698                           
 18699 ;; *************** function _scale *****************
 18700 ;; Defined at:
 18701 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 18702 ;; Parameters:    Size  Location     Type
 18703 ;;  scl             1    wreg     char 
 18704 ;; Auto vars:     Size  Location     Type
 18705 ;;  scl             1    8[BANK0 ] char 
 18706 ;; Return value:  Size  Location     Type
 18707 ;;                  4    0[BANK0 ] char 
 18708 ;; Registers used:
 18709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18710 ;; Tracked objects:
 18711 ;;		On entry : 0/0
 18712 ;;		On exit  : 0/0
 18713 ;;		Unchanged: 0/0
 18714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18716 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18718 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18719 ;;Total ram usage:        9 bytes
 18720 ;; Hardware stack levels used: 1
 18721 ;; Hardware stack levels required when called: 2
 18722 ;; This function calls:
 18723 ;;		___awdiv
 18724 ;;		___awmod
 18725 ;;		___flmul
 18726 ;; This function is called by:
 18727 ;;		_sprintf
 18728 ;; This function uses a non-reentrant model
 18729 ;;
 18730                           
 18731                           	psect	text87
 18732  005B10                     __ptext87:
 18733                           	callstack 0
 18734  005B10                     _scale:
 18735                           	callstack 24
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;incstack = 0
 18739                           ;scale@scl stored from wreg
 18740  005B10  0100               	movlb	0	; () banked
 18741  005B12  6F68               	movwf	scale@scl& (0+255),b
 18742  005B14                     
 18743                           ;doprnt.c: 436: if(scl < 0) {
 18744  005B14  0100               	movlb	0	; () banked
 18745  005B16  BF68               	btfsc	scale@scl& (0+255),7,b
 18746  005B18  EF92  F02D         	goto	u19930
 18747  005B1C  EF90  F02D         	goto	u19931
 18748  005B20                     u19931:
 18749  005B20  EF95  F02E         	goto	l18145
 18750  005B24                     u19930:
 18751  005B24                     
 18752                           ; BSR set to: 0
 18753                           ;doprnt.c: 437: scl = -scl;
 18754  005B24  6D68               	negf	scale@scl& (0+255),b
 18755                           
 18756                           ;doprnt.c: 438: if(scl>=110)
 18757  005B26  5168               	movf	scale@scl& (0+255),w,b
 18758  005B28  0A80               	xorlw	128
 18759  005B2A  0F12               	addlw	-238
 18760  005B2C  A0D8               	btfss	status,0,c
 18761  005B2E  EF9B  F02D         	goto	u19941
 18762  005B32  EF9D  F02D         	goto	u19940
 18763  005B36                     u19941:
 18764  005B36  EF28  F02E         	goto	l18135
 18765  005B3A                     u19940:
 18766  005B3A                     
 18767                           ; BSR set to: 0
 18768                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 18769  005B3A  0E00               	movlw	0
 18770  005B3C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 18771  005B3E  0E0A               	movlw	10
 18772  005B40  6E09               	movwf	___awdiv@divisor^0,c
 18773  005B42  0E00               	movlw	0
 18774  005B44  6E04               	movwf	(___awmod@divisor+1)^0,c
 18775  005B46  0E64               	movlw	100
 18776  005B48  6E03               	movwf	___awmod@divisor^0,c
 18777  005B4A  5168               	movf	scale@scl& (0+255),w,b
 18778  005B4C  6E01               	movwf	___awmod@dividend^0,c
 18779  005B4E  6A02               	clrf	(___awmod@dividend+1)^0,c
 18780  005B50  BE01               	btfsc	___awmod@dividend^0,7,c
 18781  005B52  0602               	decf	(___awmod@dividend+1)^0,f,c
 18782  005B54  ECF9  F059         	call	___awmod	;wreg free
 18783  005B58  C001  F007         	movff	?___awmod,___awdiv@dividend
 18784  005B5C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
 18785  005B60  ECFD  F055         	call	___awdiv	;wreg free
 18786  005B64  0E09               	movlw	9
 18787  005B66  2607               	addwf	?___awdiv^0,f,c
 18788  005B68  5007               	movf	?___awdiv^0,w,c
 18789  005B6A  0D04               	mullw	4
 18790  005B6C  0EBF               	movlw	low __npowers_
 18791  005B6E  24F3               	addwf	243,w,c
 18792  005B70  6EF6               	movwf	tblptrl,c
 18793  005B72  0E20               	movlw	high __npowers_
 18794  005B74  20F4               	addwfc	244,w,c
 18795  005B76  6EF7               	movwf	tblptrh,c
 18796  005B78                     	if	0	;There are less than 3 active tblptr bytes
 18797  005B78                     	endif
 18798  005B78  0009               	tblrd		*+
 18799  005B7A  CFF5 F047          	movff	tablat,___flmul@a
 18800  005B7E  0009               	tblrd		*+
 18801  005B80  CFF5 F048          	movff	tablat,___flmul@a+1
 18802  005B84  0009               	tblrd		*+
 18803  005B86  CFF5 F049          	movff	tablat,___flmul@a+2
 18804  005B8A  000A               	tblrd		*-
 18805  005B8C  CFF5 F04A          	movff	tablat,___flmul@a+3
 18806  005B90  0E00               	movlw	0
 18807  005B92  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 18808  005B94  0E64               	movlw	100
 18809  005B96  6E09               	movwf	___awdiv@divisor^0,c
 18810  005B98  0100               	movlb	0	; () banked
 18811  005B9A  5168               	movf	scale@scl& (0+255),w,b
 18812  005B9C  6E07               	movwf	___awdiv@dividend^0,c
 18813  005B9E  6A08               	clrf	(___awdiv@dividend+1)^0,c
 18814  005BA0  BE07               	btfsc	___awdiv@dividend^0,7,c
 18815  005BA2  0608               	decf	(___awdiv@dividend+1)^0,f,c
 18816  005BA4  ECFD  F055         	call	___awdiv	;wreg free
 18817  005BA8  0E12               	movlw	18
 18818  005BAA  2607               	addwf	?___awdiv^0,f,c
 18819  005BAC  5007               	movf	?___awdiv^0,w,c
 18820  005BAE  0D04               	mullw	4
 18821  005BB0  0EBF               	movlw	low __npowers_
 18822  005BB2  24F3               	addwf	243,w,c
 18823  005BB4  6EF6               	movwf	tblptrl,c
 18824  005BB6  0E20               	movlw	high __npowers_
 18825  005BB8  20F4               	addwfc	244,w,c
 18826  005BBA  6EF7               	movwf	tblptrh,c
 18827  005BBC                     	if	0	;There are less than 3 active tblptr bytes
 18828  005BBC                     	endif
 18829  005BBC  0009               	tblrd		*+
 18830  005BBE  CFF5 F043          	movff	tablat,___flmul@b
 18831  005BC2  0009               	tblrd		*+
 18832  005BC4  CFF5 F044          	movff	tablat,___flmul@b+1
 18833  005BC8  0009               	tblrd		*+
 18834  005BCA  CFF5 F045          	movff	tablat,___flmul@b+2
 18835  005BCE  000A               	tblrd		*-
 18836  005BD0  CFF5 F046          	movff	tablat,___flmul@b+3
 18837  005BD4  EC73  F02B         	call	___flmul	;wreg free
 18838  005BD8  C043  F064         	movff	?___flmul,_scale$6570
 18839  005BDC  C044  F065         	movff	?___flmul+1,_scale$6570+1
 18840  005BE0  C045  F066         	movff	?___flmul+2,_scale$6570+2
 18841  005BE4  C046  F067         	movff	?___flmul+3,_scale$6570+3
 18842                           
 18843                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 18844  005BE8  C064  F043         	movff	_scale$6570,___flmul@b
 18845  005BEC  C065  F044         	movff	_scale$6570+1,___flmul@b+1
 18846  005BF0  C066  F045         	movff	_scale$6570+2,___flmul@b+2
 18847  005BF4  C067  F046         	movff	_scale$6570+3,___flmul@b+3
 18848  005BF8  0E00               	movlw	0
 18849  005BFA  6E04               	movwf	(___awmod@divisor+1)^0,c
 18850  005BFC  0E0A               	movlw	10
 18851  005BFE  6E03               	movwf	___awmod@divisor^0,c
 18852  005C00  0100               	movlb	0	; () banked
 18853  005C02  5168               	movf	scale@scl& (0+255),w,b
 18854  005C04  6E01               	movwf	___awmod@dividend^0,c
 18855  005C06  6A02               	clrf	(___awmod@dividend+1)^0,c
 18856  005C08  BE01               	btfsc	___awmod@dividend^0,7,c
 18857  005C0A  0602               	decf	(___awmod@dividend+1)^0,f,c
 18858  005C0C  ECF9  F059         	call	___awmod	;wreg free
 18859  005C10  5001               	movf	?___awmod^0,w,c
 18860  005C12  0D04               	mullw	4
 18861  005C14  0EBF               	movlw	low __npowers_
 18862  005C16  24F3               	addwf	243,w,c
 18863  005C18  6EF6               	movwf	tblptrl,c
 18864  005C1A  0E20               	movlw	high __npowers_
 18865  005C1C  20F4               	addwfc	244,w,c
 18866  005C1E  6EF7               	movwf	tblptrh,c
 18867  005C20                     	if	0	;There are less than 3 active tblptr bytes
 18868  005C20                     	endif
 18869  005C20  0009               	tblrd		*+
 18870  005C22  CFF5 F047          	movff	tablat,___flmul@a
 18871  005C26  0009               	tblrd		*+
 18872  005C28  CFF5 F048          	movff	tablat,___flmul@a+1
 18873  005C2C  0009               	tblrd		*+
 18874  005C2E  CFF5 F049          	movff	tablat,___flmul@a+2
 18875  005C32  000A               	tblrd		*-
 18876  005C34  CFF5 F04A          	movff	tablat,___flmul@a+3
 18877  005C38  EC73  F02B         	call	___flmul	;wreg free
 18878  005C3C  C043  F060         	movff	?___flmul,?_scale
 18879  005C40  C044  F061         	movff	?___flmul+1,?_scale+1
 18880  005C44  C045  F062         	movff	?___flmul+2,?_scale+2
 18881  005C48  C046  F063         	movff	?___flmul+3,?_scale+3
 18882  005C4C  EF95  F02F         	goto	l2190
 18883  005C50                     l18135:
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;doprnt.c: 440: else if(scl > 10)
 18887  005C50  5168               	movf	scale@scl& (0+255),w,b
 18888  005C52  0A80               	xorlw	128
 18889  005C54  0F75               	addlw	-139
 18890  005C56  A0D8               	btfss	status,0,c
 18891  005C58  EF30  F02E         	goto	u19951
 18892  005C5C  EF32  F02E         	goto	u19950
 18893  005C60                     u19951:
 18894  005C60  EF7F  F02E         	goto	l18141
 18895  005C64                     u19950:
 18896  005C64                     
 18897                           ; BSR set to: 0
 18898                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 18899  005C64  0E00               	movlw	0
 18900  005C66  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 18901  005C68  0E0A               	movlw	10
 18902  005C6A  6E09               	movwf	___awdiv@divisor^0,c
 18903  005C6C  5168               	movf	scale@scl& (0+255),w,b
 18904  005C6E  6E07               	movwf	___awdiv@dividend^0,c
 18905  005C70  6A08               	clrf	(___awdiv@dividend+1)^0,c
 18906  005C72  BE07               	btfsc	___awdiv@dividend^0,7,c
 18907  005C74  0608               	decf	(___awdiv@dividend+1)^0,f,c
 18908  005C76  ECFD  F055         	call	___awdiv	;wreg free
 18909  005C7A  0E09               	movlw	9
 18910  005C7C  2607               	addwf	?___awdiv^0,f,c
 18911  005C7E  5007               	movf	?___awdiv^0,w,c
 18912  005C80  0D04               	mullw	4
 18913  005C82  0EBF               	movlw	low __npowers_
 18914  005C84  24F3               	addwf	243,w,c
 18915  005C86  6EF6               	movwf	tblptrl,c
 18916  005C88  0E20               	movlw	high __npowers_
 18917  005C8A  20F4               	addwfc	244,w,c
 18918  005C8C  6EF7               	movwf	tblptrh,c
 18919  005C8E                     	if	0	;There are less than 3 active tblptr bytes
 18920  005C8E                     	endif
 18921  005C8E  0009               	tblrd		*+
 18922  005C90  CFF5 F043          	movff	tablat,___flmul@b
 18923  005C94  0009               	tblrd		*+
 18924  005C96  CFF5 F044          	movff	tablat,___flmul@b+1
 18925  005C9A  0009               	tblrd		*+
 18926  005C9C  CFF5 F045          	movff	tablat,___flmul@b+2
 18927  005CA0  000A               	tblrd		*-
 18928  005CA2  CFF5 F046          	movff	tablat,___flmul@b+3
 18929  005CA6  0E00               	movlw	0
 18930  005CA8  6E04               	movwf	(___awmod@divisor+1)^0,c
 18931  005CAA  0E0A               	movlw	10
 18932  005CAC  6E03               	movwf	___awmod@divisor^0,c
 18933  005CAE  0100               	movlb	0	; () banked
 18934  005CB0  5168               	movf	scale@scl& (0+255),w,b
 18935  005CB2  6E01               	movwf	___awmod@dividend^0,c
 18936  005CB4  6A02               	clrf	(___awmod@dividend+1)^0,c
 18937  005CB6  BE01               	btfsc	___awmod@dividend^0,7,c
 18938  005CB8  0602               	decf	(___awmod@dividend+1)^0,f,c
 18939  005CBA  ECF9  F059         	call	___awmod	;wreg free
 18940  005CBE  5001               	movf	?___awmod^0,w,c
 18941  005CC0  0D04               	mullw	4
 18942  005CC2  0EBF               	movlw	low __npowers_
 18943  005CC4  24F3               	addwf	243,w,c
 18944  005CC6  6EF6               	movwf	tblptrl,c
 18945  005CC8  0E20               	movlw	high __npowers_
 18946  005CCA  20F4               	addwfc	244,w,c
 18947  005CCC  6EF7               	movwf	tblptrh,c
 18948  005CCE                     	if	0	;There are less than 3 active tblptr bytes
 18949  005CCE                     	endif
 18950  005CCE  0009               	tblrd		*+
 18951  005CD0  CFF5 F047          	movff	tablat,___flmul@a
 18952  005CD4  0009               	tblrd		*+
 18953  005CD6  CFF5 F048          	movff	tablat,___flmul@a+1
 18954  005CDA  0009               	tblrd		*+
 18955  005CDC  CFF5 F049          	movff	tablat,___flmul@a+2
 18956  005CE0  000A               	tblrd		*-
 18957  005CE2  CFF5 F04A          	movff	tablat,___flmul@a+3
 18958  005CE6  EC73  F02B         	call	___flmul	;wreg free
 18959  005CEA  C043  F060         	movff	?___flmul,?_scale
 18960  005CEE  C044  F061         	movff	?___flmul+1,?_scale+1
 18961  005CF2  C045  F062         	movff	?___flmul+2,?_scale+2
 18962  005CF6  C046  F063         	movff	?___flmul+3,?_scale+3
 18963  005CFA  EF95  F02F         	goto	l2190
 18964  005CFE                     l18141:
 18965                           
 18966                           ; BSR set to: 0
 18967                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 18968  005CFE  5168               	movf	scale@scl& (0+255),w,b
 18969  005D00  0D04               	mullw	4
 18970  005D02  0EBF               	movlw	low __npowers_
 18971  005D04  24F3               	addwf	243,w,c
 18972  005D06  6EF6               	movwf	tblptrl,c
 18973  005D08  0E20               	movlw	high __npowers_
 18974  005D0A  20F4               	addwfc	244,w,c
 18975  005D0C  6EF7               	movwf	tblptrh,c
 18976  005D0E                     	if	0	;There are less than 3 active tblptr bytes
 18977  005D0E                     	endif
 18978  005D0E  0009               	tblrd		*+
 18979  005D10  CFF5 F060          	movff	tablat,?_scale
 18980  005D14  0009               	tblrd		*+
 18981  005D16  CFF5 F061          	movff	tablat,?_scale+1
 18982  005D1A  0009               	tblrd		*+
 18983  005D1C  CFF5 F062          	movff	tablat,?_scale+2
 18984  005D20  000A               	tblrd		*-
 18985  005D22  CFF5 F063          	movff	tablat,?_scale+3
 18986  005D26  EF95  F02F         	goto	l2190
 18987  005D2A                     l18145:
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 18991  005D2A  5168               	movf	scale@scl& (0+255),w,b
 18992  005D2C  0A80               	xorlw	128
 18993  005D2E  0F12               	addlw	-238
 18994  005D30  A0D8               	btfss	status,0,c
 18995  005D32  EF9D  F02E         	goto	u19961
 18996  005D36  EF9F  F02E         	goto	u19960
 18997  005D3A                     u19961:
 18998  005D3A  EF2A  F02F         	goto	l18153
 18999  005D3E                     u19960:
 19000  005D3E                     
 19001                           ; BSR set to: 0
 19002                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 19003  005D3E  0E00               	movlw	0
 19004  005D40  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 19005  005D42  0E0A               	movlw	10
 19006  005D44  6E09               	movwf	___awdiv@divisor^0,c
 19007  005D46  0E00               	movlw	0
 19008  005D48  6E04               	movwf	(___awmod@divisor+1)^0,c
 19009  005D4A  0E64               	movlw	100
 19010  005D4C  6E03               	movwf	___awmod@divisor^0,c
 19011  005D4E  5168               	movf	scale@scl& (0+255),w,b
 19012  005D50  6E01               	movwf	___awmod@dividend^0,c
 19013  005D52  6A02               	clrf	(___awmod@dividend+1)^0,c
 19014  005D54  BE01               	btfsc	___awmod@dividend^0,7,c
 19015  005D56  0602               	decf	(___awmod@dividend+1)^0,f,c
 19016  005D58  ECF9  F059         	call	___awmod	;wreg free
 19017  005D5C  C001  F007         	movff	?___awmod,___awdiv@dividend
 19018  005D60  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
 19019  005D64  ECFD  F055         	call	___awdiv	;wreg free
 19020  005D68  0E09               	movlw	9
 19021  005D6A  2607               	addwf	?___awdiv^0,f,c
 19022  005D6C  5007               	movf	?___awdiv^0,w,c
 19023  005D6E  0D04               	mullw	4
 19024  005D70  0E8B               	movlw	low __powers_
 19025  005D72  24F3               	addwf	243,w,c
 19026  005D74  6EF6               	movwf	tblptrl,c
 19027  005D76  0E20               	movlw	high __powers_
 19028  005D78  20F4               	addwfc	244,w,c
 19029  005D7A  6EF7               	movwf	tblptrh,c
 19030  005D7C                     	if	0	;There are less than 3 active tblptr bytes
 19031  005D7C                     	endif
 19032  005D7C  0009               	tblrd		*+
 19033  005D7E  CFF5 F047          	movff	tablat,___flmul@a
 19034  005D82  0009               	tblrd		*+
 19035  005D84  CFF5 F048          	movff	tablat,___flmul@a+1
 19036  005D88  0009               	tblrd		*+
 19037  005D8A  CFF5 F049          	movff	tablat,___flmul@a+2
 19038  005D8E  000A               	tblrd		*-
 19039  005D90  CFF5 F04A          	movff	tablat,___flmul@a+3
 19040  005D94  0E00               	movlw	0
 19041  005D96  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 19042  005D98  0E64               	movlw	100
 19043  005D9A  6E09               	movwf	___awdiv@divisor^0,c
 19044  005D9C  0100               	movlb	0	; () banked
 19045  005D9E  5168               	movf	scale@scl& (0+255),w,b
 19046  005DA0  6E07               	movwf	___awdiv@dividend^0,c
 19047  005DA2  6A08               	clrf	(___awdiv@dividend+1)^0,c
 19048  005DA4  BE07               	btfsc	___awdiv@dividend^0,7,c
 19049  005DA6  0608               	decf	(___awdiv@dividend+1)^0,f,c
 19050  005DA8  ECFD  F055         	call	___awdiv	;wreg free
 19051  005DAC  0E12               	movlw	18
 19052  005DAE  2607               	addwf	?___awdiv^0,f,c
 19053  005DB0  5007               	movf	?___awdiv^0,w,c
 19054  005DB2  0D04               	mullw	4
 19055  005DB4  0E8B               	movlw	low __powers_
 19056  005DB6  24F3               	addwf	243,w,c
 19057  005DB8  6EF6               	movwf	tblptrl,c
 19058  005DBA  0E20               	movlw	high __powers_
 19059  005DBC  20F4               	addwfc	244,w,c
 19060  005DBE  6EF7               	movwf	tblptrh,c
 19061  005DC0                     	if	0	;There are less than 3 active tblptr bytes
 19062  005DC0                     	endif
 19063  005DC0  0009               	tblrd		*+
 19064  005DC2  CFF5 F043          	movff	tablat,___flmul@b
 19065  005DC6  0009               	tblrd		*+
 19066  005DC8  CFF5 F044          	movff	tablat,___flmul@b+1
 19067  005DCC  0009               	tblrd		*+
 19068  005DCE  CFF5 F045          	movff	tablat,___flmul@b+2
 19069  005DD2  000A               	tblrd		*-
 19070  005DD4  CFF5 F046          	movff	tablat,___flmul@b+3
 19071  005DD8  EC73  F02B         	call	___flmul	;wreg free
 19072  005DDC  C043  F064         	movff	?___flmul,_scale$6570
 19073  005DE0  C044  F065         	movff	?___flmul+1,_scale$6570+1
 19074  005DE4  C045  F066         	movff	?___flmul+2,_scale$6570+2
 19075  005DE8  C046  F067         	movff	?___flmul+3,_scale$6570+3
 19076                           
 19077                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 19078  005DEC  C064  F043         	movff	_scale$6570,___flmul@b
 19079  005DF0  C065  F044         	movff	_scale$6570+1,___flmul@b+1
 19080  005DF4  C066  F045         	movff	_scale$6570+2,___flmul@b+2
 19081  005DF8  C067  F046         	movff	_scale$6570+3,___flmul@b+3
 19082  005DFC  0E00               	movlw	0
 19083  005DFE  6E04               	movwf	(___awmod@divisor+1)^0,c
 19084  005E00  0E0A               	movlw	10
 19085  005E02  6E03               	movwf	___awmod@divisor^0,c
 19086  005E04  0100               	movlb	0	; () banked
 19087  005E06  5168               	movf	scale@scl& (0+255),w,b
 19088  005E08  6E01               	movwf	___awmod@dividend^0,c
 19089  005E0A  6A02               	clrf	(___awmod@dividend+1)^0,c
 19090  005E0C  BE01               	btfsc	___awmod@dividend^0,7,c
 19091  005E0E  0602               	decf	(___awmod@dividend+1)^0,f,c
 19092  005E10  ECF9  F059         	call	___awmod	;wreg free
 19093  005E14  5001               	movf	?___awmod^0,w,c
 19094  005E16  0D04               	mullw	4
 19095  005E18  0E8B               	movlw	low __powers_
 19096  005E1A  24F3               	addwf	243,w,c
 19097  005E1C  6EF6               	movwf	tblptrl,c
 19098  005E1E  0E20               	movlw	high __powers_
 19099  005E20  20F4               	addwfc	244,w,c
 19100  005E22  6EF7               	movwf	tblptrh,c
 19101  005E24                     	if	0	;There are less than 3 active tblptr bytes
 19102  005E24                     	endif
 19103  005E24  0009               	tblrd		*+
 19104  005E26  CFF5 F047          	movff	tablat,___flmul@a
 19105  005E2A  0009               	tblrd		*+
 19106  005E2C  CFF5 F048          	movff	tablat,___flmul@a+1
 19107  005E30  0009               	tblrd		*+
 19108  005E32  CFF5 F049          	movff	tablat,___flmul@a+2
 19109  005E36  000A               	tblrd		*-
 19110  005E38  CFF5 F04A          	movff	tablat,___flmul@a+3
 19111  005E3C  EC73  F02B         	call	___flmul	;wreg free
 19112  005E40  C043  F060         	movff	?___flmul,?_scale
 19113  005E44  C044  F061         	movff	?___flmul+1,?_scale+1
 19114  005E48  C045  F062         	movff	?___flmul+2,?_scale+2
 19115  005E4C  C046  F063         	movff	?___flmul+3,?_scale+3
 19116  005E50  EF95  F02F         	goto	l2190
 19117  005E54                     l18153:
 19118                           
 19119                           ; BSR set to: 0
 19120                           ;doprnt.c: 446: else if(scl > 10)
 19121  005E54  5168               	movf	scale@scl& (0+255),w,b
 19122  005E56  0A80               	xorlw	128
 19123  005E58  0F75               	addlw	-139
 19124  005E5A  A0D8               	btfss	status,0,c
 19125  005E5C  EF32  F02F         	goto	u19971
 19126  005E60  EF34  F02F         	goto	u19970
 19127  005E64                     u19971:
 19128  005E64  EF81  F02F         	goto	l18159
 19129  005E68                     u19970:
 19130  005E68                     
 19131                           ; BSR set to: 0
 19132                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 19133  005E68  0E00               	movlw	0
 19134  005E6A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 19135  005E6C  0E0A               	movlw	10
 19136  005E6E  6E09               	movwf	___awdiv@divisor^0,c
 19137  005E70  5168               	movf	scale@scl& (0+255),w,b
 19138  005E72  6E07               	movwf	___awdiv@dividend^0,c
 19139  005E74  6A08               	clrf	(___awdiv@dividend+1)^0,c
 19140  005E76  BE07               	btfsc	___awdiv@dividend^0,7,c
 19141  005E78  0608               	decf	(___awdiv@dividend+1)^0,f,c
 19142  005E7A  ECFD  F055         	call	___awdiv	;wreg free
 19143  005E7E  0E09               	movlw	9
 19144  005E80  2607               	addwf	?___awdiv^0,f,c
 19145  005E82  5007               	movf	?___awdiv^0,w,c
 19146  005E84  0D04               	mullw	4
 19147  005E86  0E8B               	movlw	low __powers_
 19148  005E88  24F3               	addwf	243,w,c
 19149  005E8A  6EF6               	movwf	tblptrl,c
 19150  005E8C  0E20               	movlw	high __powers_
 19151  005E8E  20F4               	addwfc	244,w,c
 19152  005E90  6EF7               	movwf	tblptrh,c
 19153  005E92                     	if	0	;There are less than 3 active tblptr bytes
 19154  005E92                     	endif
 19155  005E92  0009               	tblrd		*+
 19156  005E94  CFF5 F043          	movff	tablat,___flmul@b
 19157  005E98  0009               	tblrd		*+
 19158  005E9A  CFF5 F044          	movff	tablat,___flmul@b+1
 19159  005E9E  0009               	tblrd		*+
 19160  005EA0  CFF5 F045          	movff	tablat,___flmul@b+2
 19161  005EA4  000A               	tblrd		*-
 19162  005EA6  CFF5 F046          	movff	tablat,___flmul@b+3
 19163  005EAA  0E00               	movlw	0
 19164  005EAC  6E04               	movwf	(___awmod@divisor+1)^0,c
 19165  005EAE  0E0A               	movlw	10
 19166  005EB0  6E03               	movwf	___awmod@divisor^0,c
 19167  005EB2  0100               	movlb	0	; () banked
 19168  005EB4  5168               	movf	scale@scl& (0+255),w,b
 19169  005EB6  6E01               	movwf	___awmod@dividend^0,c
 19170  005EB8  6A02               	clrf	(___awmod@dividend+1)^0,c
 19171  005EBA  BE01               	btfsc	___awmod@dividend^0,7,c
 19172  005EBC  0602               	decf	(___awmod@dividend+1)^0,f,c
 19173  005EBE  ECF9  F059         	call	___awmod	;wreg free
 19174  005EC2  5001               	movf	?___awmod^0,w,c
 19175  005EC4  0D04               	mullw	4
 19176  005EC6  0E8B               	movlw	low __powers_
 19177  005EC8  24F3               	addwf	243,w,c
 19178  005ECA  6EF6               	movwf	tblptrl,c
 19179  005ECC  0E20               	movlw	high __powers_
 19180  005ECE  20F4               	addwfc	244,w,c
 19181  005ED0  6EF7               	movwf	tblptrh,c
 19182  005ED2                     	if	0	;There are less than 3 active tblptr bytes
 19183  005ED2                     	endif
 19184  005ED2  0009               	tblrd		*+
 19185  005ED4  CFF5 F047          	movff	tablat,___flmul@a
 19186  005ED8  0009               	tblrd		*+
 19187  005EDA  CFF5 F048          	movff	tablat,___flmul@a+1
 19188  005EDE  0009               	tblrd		*+
 19189  005EE0  CFF5 F049          	movff	tablat,___flmul@a+2
 19190  005EE4  000A               	tblrd		*-
 19191  005EE6  CFF5 F04A          	movff	tablat,___flmul@a+3
 19192  005EEA  EC73  F02B         	call	___flmul	;wreg free
 19193  005EEE  C043  F060         	movff	?___flmul,?_scale
 19194  005EF2  C044  F061         	movff	?___flmul+1,?_scale+1
 19195  005EF6  C045  F062         	movff	?___flmul+2,?_scale+2
 19196  005EFA  C046  F063         	movff	?___flmul+3,?_scale+3
 19197  005EFE  EF95  F02F         	goto	l2190
 19198  005F02                     l18159:
 19199                           
 19200                           ; BSR set to: 0
 19201                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 19202  005F02  5168               	movf	scale@scl& (0+255),w,b
 19203  005F04  0D04               	mullw	4
 19204  005F06  0E8B               	movlw	low __powers_
 19205  005F08  24F3               	addwf	243,w,c
 19206  005F0A  6EF6               	movwf	tblptrl,c
 19207  005F0C  0E20               	movlw	high __powers_
 19208  005F0E  20F4               	addwfc	244,w,c
 19209  005F10  6EF7               	movwf	tblptrh,c
 19210  005F12                     	if	0	;There are less than 3 active tblptr bytes
 19211  005F12                     	endif
 19212  005F12  0009               	tblrd		*+
 19213  005F14  CFF5 F060          	movff	tablat,?_scale
 19214  005F18  0009               	tblrd		*+
 19215  005F1A  CFF5 F061          	movff	tablat,?_scale+1
 19216  005F1E  0009               	tblrd		*+
 19217  005F20  CFF5 F062          	movff	tablat,?_scale+2
 19218  005F24  000A               	tblrd		*-
 19219  005F26  CFF5 F063          	movff	tablat,?_scale+3
 19220  005F2A                     l2190:
 19221  005F2A  0012               	return		;funcret
 19222  005F2C                     __end_of_scale:
 19223                           	callstack 0
 19224                           
 19225 ;; *************** function ___awmod *****************
 19226 ;; Defined at:
 19227 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
 19228 ;; Parameters:    Size  Location     Type
 19229 ;;  dividend        2    0[COMRAM] int 
 19230 ;;  divisor         2    2[COMRAM] int 
 19231 ;; Auto vars:     Size  Location     Type
 19232 ;;  sign            1    5[COMRAM] unsigned char 
 19233 ;;  counter         1    4[COMRAM] unsigned char 
 19234 ;; Return value:  Size  Location     Type
 19235 ;;                  2    0[COMRAM] int 
 19236 ;; Registers used:
 19237 ;;		wreg, status,2, status,0
 19238 ;; Tracked objects:
 19239 ;;		On entry : 0/0
 19240 ;;		On exit  : 0/0
 19241 ;;		Unchanged: 0/0
 19242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19247 ;;Total ram usage:        6 bytes
 19248 ;; Hardware stack levels used: 1
 19249 ;; Hardware stack levels required when called: 1
 19250 ;; This function calls:
 19251 ;;		Nothing
 19252 ;; This function is called by:
 19253 ;;		_scale
 19254 ;; This function uses a non-reentrant model
 19255 ;;
 19256                           
 19257                           	psect	text88
 19258  00B3F2                     __ptext88:
 19259                           	callstack 0
 19260  00B3F2                     ___awmod:
 19261                           	callstack 24
 19262  00B3F2  0E00               	movlw	0
 19263  00B3F4  6E06               	movwf	___awmod@sign^0,c
 19264  00B3F6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 19265  00B3F8  EF02  F05A         	goto	u19680
 19266  00B3FC  EF00  F05A         	goto	u19681
 19267  00B400                     u19681:
 19268  00B400  EF08  F05A         	goto	l17975
 19269  00B404                     u19680:
 19270  00B404  6C01               	negf	___awmod@dividend^0,c
 19271  00B406  1E02               	comf	(___awmod@dividend+1)^0,f,c
 19272  00B408  B0D8               	btfsc	status,0,c
 19273  00B40A  2A02               	incf	(___awmod@dividend+1)^0,f,c
 19274  00B40C  0E01               	movlw	1
 19275  00B40E  6E06               	movwf	___awmod@sign^0,c
 19276  00B410                     l17975:
 19277  00B410  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 19278  00B412  EF0F  F05A         	goto	u19690
 19279  00B416  EF0D  F05A         	goto	u19691
 19280  00B41A                     u19691:
 19281  00B41A  EF13  F05A         	goto	l17979
 19282  00B41E                     u19690:
 19283  00B41E  6C03               	negf	___awmod@divisor^0,c
 19284  00B420  1E04               	comf	(___awmod@divisor+1)^0,f,c
 19285  00B422  B0D8               	btfsc	status,0,c
 19286  00B424  2A04               	incf	(___awmod@divisor+1)^0,f,c
 19287  00B426                     l17979:
 19288  00B426  5003               	movf	___awmod@divisor^0,w,c
 19289  00B428  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 19290  00B42A  B4D8               	btfsc	status,2,c
 19291  00B42C  EF1A  F05A         	goto	u19701
 19292  00B430  EF1C  F05A         	goto	u19700
 19293  00B434                     u19701:
 19294  00B434  EF40  F05A         	goto	l17995
 19295  00B438                     u19700:
 19296  00B438  0E01               	movlw	1
 19297  00B43A  6E05               	movwf	___awmod@counter^0,c
 19298  00B43C  EF24  F05A         	goto	l17985
 19299  00B440                     l17983:
 19300  00B440  90D8               	bcf	status,0,c
 19301  00B442  3603               	rlcf	___awmod@divisor^0,f,c
 19302  00B444  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 19303  00B446  2A05               	incf	___awmod@counter^0,f,c
 19304  00B448                     l17985:
 19305  00B448  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 19306  00B44A  EF29  F05A         	goto	u19711
 19307  00B44E  EF2B  F05A         	goto	u19710
 19308  00B452                     u19711:
 19309  00B452  EF20  F05A         	goto	l17983
 19310  00B456                     u19710:
 19311  00B456                     l17987:
 19312  00B456  5003               	movf	___awmod@divisor^0,w,c
 19313  00B458  5C01               	subwf	___awmod@dividend^0,w,c
 19314  00B45A  5004               	movf	(___awmod@divisor+1)^0,w,c
 19315  00B45C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 19316  00B45E  A0D8               	btfss	status,0,c
 19317  00B460  EF34  F05A         	goto	u19721
 19318  00B464  EF36  F05A         	goto	u19720
 19319  00B468                     u19721:
 19320  00B468  EF3A  F05A         	goto	l17991
 19321  00B46C                     u19720:
 19322  00B46C  5003               	movf	___awmod@divisor^0,w,c
 19323  00B46E  5E01               	subwf	___awmod@dividend^0,f,c
 19324  00B470  5004               	movf	(___awmod@divisor+1)^0,w,c
 19325  00B472  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 19326  00B474                     l17991:
 19327  00B474  90D8               	bcf	status,0,c
 19328  00B476  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 19329  00B478  3203               	rrcf	___awmod@divisor^0,f,c
 19330  00B47A  2E05               	decfsz	___awmod@counter^0,f,c
 19331  00B47C  EF2B  F05A         	goto	l17987
 19332  00B480                     l17995:
 19333  00B480  5006               	movf	___awmod@sign^0,w,c
 19334  00B482  B4D8               	btfsc	status,2,c
 19335  00B484  EF46  F05A         	goto	u19731
 19336  00B488  EF48  F05A         	goto	u19730
 19337  00B48C                     u19731:
 19338  00B48C  EF4C  F05A         	goto	l17999
 19339  00B490                     u19730:
 19340  00B490  6C01               	negf	___awmod@dividend^0,c
 19341  00B492  1E02               	comf	(___awmod@dividend+1)^0,f,c
 19342  00B494  B0D8               	btfsc	status,0,c
 19343  00B496  2A02               	incf	(___awmod@dividend+1)^0,f,c
 19344  00B498                     l17999:
 19345  00B498  C001  F001         	movff	___awmod@dividend,?___awmod
 19346  00B49C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 19347  00B4A0  0012               	return		;funcret
 19348  00B4A2                     __end_of___awmod:
 19349                           	callstack 0
 19350                           
 19351 ;; *************** function ___awdiv *****************
 19352 ;; Defined at:
 19353 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
 19354 ;; Parameters:    Size  Location     Type
 19355 ;;  dividend        2    6[COMRAM] int 
 19356 ;;  divisor         2    8[COMRAM] int 
 19357 ;; Auto vars:     Size  Location     Type
 19358 ;;  quotient        2   12[COMRAM] int 
 19359 ;;  sign            1   11[COMRAM] unsigned char 
 19360 ;;  counter         1   10[COMRAM] unsigned char 
 19361 ;; Return value:  Size  Location     Type
 19362 ;;                  2    6[COMRAM] int 
 19363 ;; Registers used:
 19364 ;;		wreg, status,2, status,0
 19365 ;; Tracked objects:
 19366 ;;		On entry : 0/0
 19367 ;;		On exit  : 0/0
 19368 ;;		Unchanged: 0/0
 19369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19371 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19373 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19374 ;;Total ram usage:        8 bytes
 19375 ;; Hardware stack levels used: 1
 19376 ;; Hardware stack levels required when called: 1
 19377 ;; This function calls:
 19378 ;;		Nothing
 19379 ;; This function is called by:
 19380 ;;		_scale
 19381 ;;		_sprintf
 19382 ;; This function uses a non-reentrant model
 19383 ;;
 19384                           
 19385                           	psect	text89
 19386  00ABFA                     __ptext89:
 19387                           	callstack 0
 19388  00ABFA                     ___awdiv:
 19389                           	callstack 24
 19390  00ABFA  0E00               	movlw	0
 19391  00ABFC  6E0C               	movwf	___awdiv@sign^0,c
 19392  00ABFE  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 19393  00AC00  EF06  F056         	goto	u19620
 19394  00AC04  EF04  F056         	goto	u19621
 19395  00AC08                     u19621:
 19396  00AC08  EF0C  F056         	goto	l17931
 19397  00AC0C                     u19620:
 19398  00AC0C  6C09               	negf	___awdiv@divisor^0,c
 19399  00AC0E  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 19400  00AC10  B0D8               	btfsc	status,0,c
 19401  00AC12  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 19402  00AC14  0E01               	movlw	1
 19403  00AC16  6E0C               	movwf	___awdiv@sign^0,c
 19404  00AC18                     l17931:
 19405  00AC18  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 19406  00AC1A  EF13  F056         	goto	u19630
 19407  00AC1E  EF11  F056         	goto	u19631
 19408  00AC22                     u19631:
 19409  00AC22  EF19  F056         	goto	l17937
 19410  00AC26                     u19630:
 19411  00AC26  6C07               	negf	___awdiv@dividend^0,c
 19412  00AC28  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 19413  00AC2A  B0D8               	btfsc	status,0,c
 19414  00AC2C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 19415  00AC2E  0E01               	movlw	1
 19416  00AC30  1A0C               	xorwf	___awdiv@sign^0,f,c
 19417  00AC32                     l17937:
 19418  00AC32  0E00               	movlw	0
 19419  00AC34  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 19420  00AC36  0E00               	movlw	0
 19421  00AC38  6E0D               	movwf	___awdiv@quotient^0,c
 19422  00AC3A  5009               	movf	___awdiv@divisor^0,w,c
 19423  00AC3C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 19424  00AC3E  B4D8               	btfsc	status,2,c
 19425  00AC40  EF24  F056         	goto	u19641
 19426  00AC44  EF26  F056         	goto	u19640
 19427  00AC48                     u19641:
 19428  00AC48  EF4E  F056         	goto	l17959
 19429  00AC4C                     u19640:
 19430  00AC4C  0E01               	movlw	1
 19431  00AC4E  6E0B               	movwf	___awdiv@counter^0,c
 19432  00AC50  EF2E  F056         	goto	l17945
 19433  00AC54                     l17943:
 19434  00AC54  90D8               	bcf	status,0,c
 19435  00AC56  3609               	rlcf	___awdiv@divisor^0,f,c
 19436  00AC58  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 19437  00AC5A  2A0B               	incf	___awdiv@counter^0,f,c
 19438  00AC5C                     l17945:
 19439  00AC5C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 19440  00AC5E  EF33  F056         	goto	u19651
 19441  00AC62  EF35  F056         	goto	u19650
 19442  00AC66                     u19651:
 19443  00AC66  EF2A  F056         	goto	l17943
 19444  00AC6A                     u19650:
 19445  00AC6A                     l17947:
 19446  00AC6A  90D8               	bcf	status,0,c
 19447  00AC6C  360D               	rlcf	___awdiv@quotient^0,f,c
 19448  00AC6E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 19449  00AC70  5009               	movf	___awdiv@divisor^0,w,c
 19450  00AC72  5C07               	subwf	___awdiv@dividend^0,w,c
 19451  00AC74  500A               	movf	(___awdiv@divisor+1)^0,w,c
 19452  00AC76  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 19453  00AC78  A0D8               	btfss	status,0,c
 19454  00AC7A  EF41  F056         	goto	u19661
 19455  00AC7E  EF43  F056         	goto	u19660
 19456  00AC82                     u19661:
 19457  00AC82  EF48  F056         	goto	l17955
 19458  00AC86                     u19660:
 19459  00AC86  5009               	movf	___awdiv@divisor^0,w,c
 19460  00AC88  5E07               	subwf	___awdiv@dividend^0,f,c
 19461  00AC8A  500A               	movf	(___awdiv@divisor+1)^0,w,c
 19462  00AC8C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 19463  00AC8E  800D               	bsf	___awdiv@quotient^0,0,c
 19464  00AC90                     l17955:
 19465  00AC90  90D8               	bcf	status,0,c
 19466  00AC92  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 19467  00AC94  3209               	rrcf	___awdiv@divisor^0,f,c
 19468  00AC96  2E0B               	decfsz	___awdiv@counter^0,f,c
 19469  00AC98  EF35  F056         	goto	l17947
 19470  00AC9C                     l17959:
 19471  00AC9C  500C               	movf	___awdiv@sign^0,w,c
 19472  00AC9E  B4D8               	btfsc	status,2,c
 19473  00ACA0  EF54  F056         	goto	u19671
 19474  00ACA4  EF56  F056         	goto	u19670
 19475  00ACA8                     u19671:
 19476  00ACA8  EF5A  F056         	goto	l17963
 19477  00ACAC                     u19670:
 19478  00ACAC  6C0D               	negf	___awdiv@quotient^0,c
 19479  00ACAE  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 19480  00ACB0  B0D8               	btfsc	status,0,c
 19481  00ACB2  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 19482  00ACB4                     l17963:
 19483  00ACB4  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 19484  00ACB8  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 19485  00ACBC  0012               	return		;funcret
 19486  00ACBE                     __end_of___awdiv:
 19487                           	callstack 0
 19488                           
 19489 ;; *************** function _isdigit *****************
 19490 ;; Defined at:
 19491 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
 19492 ;; Parameters:    Size  Location     Type
 19493 ;;  c               1    wreg     unsigned char 
 19494 ;; Auto vars:     Size  Location     Type
 19495 ;;  c               1    2[COMRAM] unsigned char 
 19496 ;; Return value:  Size  Location     Type
 19497 ;;		None               void
 19498 ;; Registers used:
 19499 ;;		wreg, status,2, status,0
 19500 ;; Tracked objects:
 19501 ;;		On entry : 0/0
 19502 ;;		On exit  : 0/0
 19503 ;;		Unchanged: 0/0
 19504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19509 ;;Total ram usage:        3 bytes
 19510 ;; Hardware stack levels used: 1
 19511 ;; Hardware stack levels required when called: 1
 19512 ;; This function calls:
 19513 ;;		Nothing
 19514 ;; This function is called by:
 19515 ;;		_sprintf
 19516 ;; This function uses a non-reentrant model
 19517 ;;
 19518                           
 19519                           	psect	text90
 19520  00D182                     __ptext90:
 19521                           	callstack 0
 19522  00D182                     _isdigit:
 19523                           	callstack 25
 19524                           
 19525                           ;incstack = 0
 19526                           ;isdigit@c stored from wreg
 19527  00D182  6E03               	movwf	isdigit@c^0,c
 19528  00D184  0E00               	movlw	0
 19529  00D186  6E02               	movwf	_isdigit$5925^0,c
 19530  00D188  0E3A               	movlw	58
 19531  00D18A  6003               	cpfslt	isdigit@c^0,c
 19532  00D18C  EFCA  F068         	goto	u10081
 19533  00D190  EFCC  F068         	goto	u10080
 19534  00D194                     u10081:
 19535  00D194  EFD6  F068         	goto	l10449
 19536  00D198                     u10080:
 19537  00D198  0E2F               	movlw	47
 19538  00D19A  6403               	cpfsgt	isdigit@c^0,c
 19539  00D19C  EFD2  F068         	goto	u10091
 19540  00D1A0  EFD4  F068         	goto	u10090
 19541  00D1A4                     u10091:
 19542  00D1A4  EFD6  F068         	goto	l10449
 19543  00D1A8                     u10090:
 19544  00D1A8  0E01               	movlw	1
 19545  00D1AA  6E02               	movwf	_isdigit$5925^0,c
 19546  00D1AC                     l10449:
 19547  00D1AC  C002  F001         	movff	_isdigit$5925,??_isdigit
 19548  00D1B0  3001               	rrcf	??_isdigit^0,w,c
 19549  00D1B2  0012               	return		;funcret
 19550  00D1B4                     __end_of_isdigit:
 19551                           	callstack 0
 19552                           
 19553 ;; *************** function _fround *****************
 19554 ;; Defined at:
 19555 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 19556 ;; Parameters:    Size  Location     Type
 19557 ;;  prec            1    wreg     unsigned char 
 19558 ;; Auto vars:     Size  Location     Type
 19559 ;;  prec            1   12[BANK0 ] unsigned char 
 19560 ;; Return value:  Size  Location     Type
 19561 ;;                  4    0[BANK0 ] unsigned char 
 19562 ;; Registers used:
 19563 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19564 ;; Tracked objects:
 19565 ;;		On entry : 0/0
 19566 ;;		On exit  : 0/0
 19567 ;;		Unchanged: 0/0
 19568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19570 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19572 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19573 ;;Total ram usage:       13 bytes
 19574 ;; Hardware stack levels used: 1
 19575 ;; Hardware stack levels required when called: 2
 19576 ;; This function calls:
 19577 ;;		___flmul
 19578 ;;		___lwdiv
 19579 ;;		___lwmod
 19580 ;; This function is called by:
 19581 ;;		_sprintf
 19582 ;; This function uses a non-reentrant model
 19583 ;;
 19584                           
 19585                           	psect	text91
 19586  006BEC                     __ptext91:
 19587                           	callstack 0
 19588  006BEC                     _fround:
 19589                           	callstack 24
 19590                           
 19591                           ;incstack = 0
 19592                           ;fround@prec stored from wreg
 19593  006BEC  0100               	movlb	0	; () banked
 19594  006BEE  6F6C               	movwf	fround@prec& (0+255),b
 19595  006BF0                     
 19596                           ;doprnt.c: 421: if(prec>=110)
 19597  006BF0  0E6D               	movlw	109
 19598  006BF2  0100               	movlb	0	; () banked
 19599  006BF4  656C               	cpfsgt	fround@prec& (0+255),b
 19600  006BF6  EFFF  F035         	goto	u19911
 19601  006BFA  EF01  F036         	goto	u19910
 19602  006BFE                     u19911:
 19603  006BFE  EFAE  F036         	goto	l18115
 19604  006C02                     u19910:
 19605  006C02                     
 19606                           ; BSR set to: 0
 19607                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 19608  006C02  0E00               	movlw	0
 19609  006C04  6E47               	movwf	___flmul@a^0,c
 19610  006C06  0E00               	movlw	0
 19611  006C08  6E48               	movwf	(___flmul@a+1)^0,c
 19612  006C0A  0E00               	movlw	0
 19613  006C0C  6E49               	movwf	(___flmul@a+2)^0,c
 19614  006C0E  0E3F               	movlw	63
 19615  006C10  6E4A               	movwf	(___flmul@a+3)^0,c
 19616  006C12  0E00               	movlw	0
 19617  006C14  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 19618  006C16  0E64               	movlw	100
 19619  006C18  6E09               	movwf	___lwdiv@divisor^0,c
 19620  006C1A  C06C  F007         	movff	fround@prec,___lwdiv@dividend
 19621  006C1E  6A08               	clrf	(___lwdiv@dividend+1)^0,c
 19622  006C20  EC0D  F061         	call	___lwdiv	;wreg free
 19623  006C24  90D8               	bcf	status,0,c
 19624  006C26  3607               	rlcf	?___lwdiv^0,f,c
 19625  006C28  3608               	rlcf	(?___lwdiv+1)^0,f,c
 19626  006C2A  90D8               	bcf	status,0,c
 19627  006C2C  3607               	rlcf	?___lwdiv^0,f,c
 19628  006C2E  3608               	rlcf	(?___lwdiv+1)^0,f,c
 19629  006C30  0E48               	movlw	72
 19630  006C32  2607               	addwf	?___lwdiv^0,f,c
 19631  006C34  0E00               	movlw	0
 19632  006C36  2208               	addwfc	(?___lwdiv+1)^0,f,c
 19633  006C38  0EBF               	movlw	low __npowers_
 19634  006C3A  2407               	addwf	?___lwdiv^0,w,c
 19635  006C3C  6EF6               	movwf	tblptrl,c
 19636  006C3E  0E20               	movlw	high __npowers_
 19637  006C40  2008               	addwfc	(?___lwdiv+1)^0,w,c
 19638  006C42  6EF7               	movwf	tblptrh,c
 19639  006C44                     	if	0	;There are less than 3 active tblptr bytes
 19640  006C44                     	endif
 19641  006C44  0009               	tblrd		*+
 19642  006C46  CFF5 F043          	movff	tablat,___flmul@b
 19643  006C4A  0009               	tblrd		*+
 19644  006C4C  CFF5 F044          	movff	tablat,___flmul@b+1
 19645  006C50  0009               	tblrd		*+
 19646  006C52  CFF5 F045          	movff	tablat,___flmul@b+2
 19647  006C56  000A               	tblrd		*-
 19648  006C58  CFF5 F046          	movff	tablat,___flmul@b+3
 19649  006C5C  EC73  F02B         	call	___flmul	;wreg free
 19650  006C60  C043  F068         	movff	?___flmul,_fround$6568
 19651  006C64  C044  F069         	movff	?___flmul+1,_fround$6568+1
 19652  006C68  C045  F06A         	movff	?___flmul+2,_fround$6568+2
 19653  006C6C  C046  F06B         	movff	?___flmul+3,_fround$6568+3
 19654                           
 19655                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 19656  006C70  0E00               	movlw	0
 19657  006C72  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 19658  006C74  0E0A               	movlw	10
 19659  006C76  6E09               	movwf	___lwdiv@divisor^0,c
 19660  006C78  0E00               	movlw	0
 19661  006C7A  6E04               	movwf	(___lwmod@divisor+1)^0,c
 19662  006C7C  0E64               	movlw	100
 19663  006C7E  6E03               	movwf	___lwmod@divisor^0,c
 19664  006C80  C06C  F001         	movff	fround@prec,___lwmod@dividend
 19665  006C84  6A02               	clrf	(___lwmod@dividend+1)^0,c
 19666  006C86  EC88  F063         	call	___lwmod	;wreg free
 19667  006C8A  C001  F007         	movff	?___lwmod,___lwdiv@dividend
 19668  006C8E  C002  F008         	movff	?___lwmod+1,___lwdiv@dividend+1
 19669  006C92  EC0D  F061         	call	___lwdiv	;wreg free
 19670  006C96  90D8               	bcf	status,0,c
 19671  006C98  3607               	rlcf	?___lwdiv^0,f,c
 19672  006C9A  3608               	rlcf	(?___lwdiv+1)^0,f,c
 19673  006C9C  90D8               	bcf	status,0,c
 19674  006C9E  3607               	rlcf	?___lwdiv^0,f,c
 19675  006CA0  3608               	rlcf	(?___lwdiv+1)^0,f,c
 19676  006CA2  0E24               	movlw	36
 19677  006CA4  2607               	addwf	?___lwdiv^0,f,c
 19678  006CA6  0E00               	movlw	0
 19679  006CA8  2208               	addwfc	(?___lwdiv+1)^0,f,c
 19680  006CAA  0EBF               	movlw	low __npowers_
 19681  006CAC  2407               	addwf	?___lwdiv^0,w,c
 19682  006CAE  6EF6               	movwf	tblptrl,c
 19683  006CB0  0E20               	movlw	high __npowers_
 19684  006CB2  2008               	addwfc	(?___lwdiv+1)^0,w,c
 19685  006CB4  6EF7               	movwf	tblptrh,c
 19686  006CB6                     	if	0	;There are less than 3 active tblptr bytes
 19687  006CB6                     	endif
 19688  006CB6  0009               	tblrd		*+
 19689  006CB8  CFF5 F047          	movff	tablat,___flmul@a
 19690  006CBC  0009               	tblrd		*+
 19691  006CBE  CFF5 F048          	movff	tablat,___flmul@a+1
 19692  006CC2  0009               	tblrd		*+
 19693  006CC4  CFF5 F049          	movff	tablat,___flmul@a+2
 19694  006CC8  000A               	tblrd		*-
 19695  006CCA  CFF5 F04A          	movff	tablat,___flmul@a+3
 19696  006CCE  C068  F043         	movff	_fround$6568,___flmul@b
 19697  006CD2  C069  F044         	movff	_fround$6568+1,___flmul@b+1
 19698  006CD6  C06A  F045         	movff	_fround$6568+2,___flmul@b+2
 19699  006CDA  C06B  F046         	movff	_fround$6568+3,___flmul@b+3
 19700  006CDE  EC73  F02B         	call	___flmul	;wreg free
 19701  006CE2  C043  F064         	movff	?___flmul,_fround$6569
 19702  006CE6  C044  F065         	movff	?___flmul+1,_fround$6569+1
 19703  006CEA  C045  F066         	movff	?___flmul+2,_fround$6569+2
 19704  006CEE  C046  F067         	movff	?___flmul+3,_fround$6569+3
 19705                           
 19706                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 19707  006CF2  C064  F043         	movff	_fround$6569,___flmul@b
 19708  006CF6  C065  F044         	movff	_fround$6569+1,___flmul@b+1
 19709  006CFA  C066  F045         	movff	_fround$6569+2,___flmul@b+2
 19710  006CFE  C067  F046         	movff	_fround$6569+3,___flmul@b+3
 19711  006D02  0E00               	movlw	0
 19712  006D04  6E04               	movwf	(___lwmod@divisor+1)^0,c
 19713  006D06  0E0A               	movlw	10
 19714  006D08  6E03               	movwf	___lwmod@divisor^0,c
 19715  006D0A  C06C  F001         	movff	fround@prec,___lwmod@dividend
 19716  006D0E  6A02               	clrf	(___lwmod@dividend+1)^0,c
 19717  006D10  EC88  F063         	call	___lwmod	;wreg free
 19718  006D14  90D8               	bcf	status,0,c
 19719  006D16  3601               	rlcf	?___lwmod^0,f,c
 19720  006D18  3602               	rlcf	(?___lwmod+1)^0,f,c
 19721  006D1A  90D8               	bcf	status,0,c
 19722  006D1C  3601               	rlcf	?___lwmod^0,f,c
 19723  006D1E  3602               	rlcf	(?___lwmod+1)^0,f,c
 19724  006D20  0EBF               	movlw	low __npowers_
 19725  006D22  2401               	addwf	?___lwmod^0,w,c
 19726  006D24  6EF6               	movwf	tblptrl,c
 19727  006D26  0E20               	movlw	high __npowers_
 19728  006D28  2002               	addwfc	(?___lwmod+1)^0,w,c
 19729  006D2A  6EF7               	movwf	tblptrh,c
 19730  006D2C                     	if	0	;There are less than 3 active tblptr bytes
 19731  006D2C                     	endif
 19732  006D2C  0009               	tblrd		*+
 19733  006D2E  CFF5 F047          	movff	tablat,___flmul@a
 19734  006D32  0009               	tblrd		*+
 19735  006D34  CFF5 F048          	movff	tablat,___flmul@a+1
 19736  006D38  0009               	tblrd		*+
 19737  006D3A  CFF5 F049          	movff	tablat,___flmul@a+2
 19738  006D3E  000A               	tblrd		*-
 19739  006D40  CFF5 F04A          	movff	tablat,___flmul@a+3
 19740  006D44  EC73  F02B         	call	___flmul	;wreg free
 19741  006D48  C043  F060         	movff	?___flmul,?_fround
 19742  006D4C  C044  F061         	movff	?___flmul+1,?_fround+1
 19743  006D50  C045  F062         	movff	?___flmul+2,?_fround+2
 19744  006D54  C046  F063         	movff	?___flmul+3,?_fround+3
 19745  006D58  EF48  F037         	goto	l2183
 19746  006D5C                     l18115:
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;doprnt.c: 423: else if(prec > 10)
 19750  006D5C  0E0A               	movlw	10
 19751  006D5E  656C               	cpfsgt	fround@prec& (0+255),b
 19752  006D60  EFB4  F036         	goto	u19921
 19753  006D64  EFB6  F036         	goto	u19920
 19754  006D68                     u19921:
 19755  006D68  EF22  F037         	goto	l18121
 19756  006D6C                     u19920:
 19757  006D6C                     
 19758                           ; BSR set to: 0
 19759                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 19760  006D6C  0E00               	movlw	0
 19761  006D6E  6E47               	movwf	___flmul@a^0,c
 19762  006D70  0E00               	movlw	0
 19763  006D72  6E48               	movwf	(___flmul@a+1)^0,c
 19764  006D74  0E00               	movlw	0
 19765  006D76  6E49               	movwf	(___flmul@a+2)^0,c
 19766  006D78  0E3F               	movlw	63
 19767  006D7A  6E4A               	movwf	(___flmul@a+3)^0,c
 19768  006D7C  0E00               	movlw	0
 19769  006D7E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 19770  006D80  0E0A               	movlw	10
 19771  006D82  6E09               	movwf	___lwdiv@divisor^0,c
 19772  006D84  C06C  F007         	movff	fround@prec,___lwdiv@dividend
 19773  006D88  6A08               	clrf	(___lwdiv@dividend+1)^0,c
 19774  006D8A  EC0D  F061         	call	___lwdiv	;wreg free
 19775  006D8E  90D8               	bcf	status,0,c
 19776  006D90  3607               	rlcf	?___lwdiv^0,f,c
 19777  006D92  3608               	rlcf	(?___lwdiv+1)^0,f,c
 19778  006D94  90D8               	bcf	status,0,c
 19779  006D96  3607               	rlcf	?___lwdiv^0,f,c
 19780  006D98  3608               	rlcf	(?___lwdiv+1)^0,f,c
 19781  006D9A  0E24               	movlw	36
 19782  006D9C  2607               	addwf	?___lwdiv^0,f,c
 19783  006D9E  0E00               	movlw	0
 19784  006DA0  2208               	addwfc	(?___lwdiv+1)^0,f,c
 19785  006DA2  0EBF               	movlw	low __npowers_
 19786  006DA4  2407               	addwf	?___lwdiv^0,w,c
 19787  006DA6  6EF6               	movwf	tblptrl,c
 19788  006DA8  0E20               	movlw	high __npowers_
 19789  006DAA  2008               	addwfc	(?___lwdiv+1)^0,w,c
 19790  006DAC  6EF7               	movwf	tblptrh,c
 19791  006DAE                     	if	0	;There are less than 3 active tblptr bytes
 19792  006DAE                     	endif
 19793  006DAE  0009               	tblrd		*+
 19794  006DB0  CFF5 F043          	movff	tablat,___flmul@b
 19795  006DB4  0009               	tblrd		*+
 19796  006DB6  CFF5 F044          	movff	tablat,___flmul@b+1
 19797  006DBA  0009               	tblrd		*+
 19798  006DBC  CFF5 F045          	movff	tablat,___flmul@b+2
 19799  006DC0  000A               	tblrd		*-
 19800  006DC2  CFF5 F046          	movff	tablat,___flmul@b+3
 19801  006DC6  EC73  F02B         	call	___flmul	;wreg free
 19802  006DCA  C043  F068         	movff	?___flmul,_fround$6568
 19803  006DCE  C044  F069         	movff	?___flmul+1,_fround$6568+1
 19804  006DD2  C045  F06A         	movff	?___flmul+2,_fround$6568+2
 19805  006DD6  C046  F06B         	movff	?___flmul+3,_fround$6568+3
 19806                           
 19807                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 19808  006DDA  C068  F043         	movff	_fround$6568,___flmul@b
 19809  006DDE  C069  F044         	movff	_fround$6568+1,___flmul@b+1
 19810  006DE2  C06A  F045         	movff	_fround$6568+2,___flmul@b+2
 19811  006DE6  C06B  F046         	movff	_fround$6568+3,___flmul@b+3
 19812  006DEA  0E00               	movlw	0
 19813  006DEC  6E04               	movwf	(___lwmod@divisor+1)^0,c
 19814  006DEE  0E0A               	movlw	10
 19815  006DF0  6E03               	movwf	___lwmod@divisor^0,c
 19816  006DF2  C06C  F001         	movff	fround@prec,___lwmod@dividend
 19817  006DF6  6A02               	clrf	(___lwmod@dividend+1)^0,c
 19818  006DF8  EC88  F063         	call	___lwmod	;wreg free
 19819  006DFC  90D8               	bcf	status,0,c
 19820  006DFE  3601               	rlcf	?___lwmod^0,f,c
 19821  006E00  3602               	rlcf	(?___lwmod+1)^0,f,c
 19822  006E02  90D8               	bcf	status,0,c
 19823  006E04  3601               	rlcf	?___lwmod^0,f,c
 19824  006E06  3602               	rlcf	(?___lwmod+1)^0,f,c
 19825  006E08  0EBF               	movlw	low __npowers_
 19826  006E0A  2401               	addwf	?___lwmod^0,w,c
 19827  006E0C  6EF6               	movwf	tblptrl,c
 19828  006E0E  0E20               	movlw	high __npowers_
 19829  006E10  2002               	addwfc	(?___lwmod+1)^0,w,c
 19830  006E12  6EF7               	movwf	tblptrh,c
 19831  006E14                     	if	0	;There are less than 3 active tblptr bytes
 19832  006E14                     	endif
 19833  006E14  0009               	tblrd		*+
 19834  006E16  CFF5 F047          	movff	tablat,___flmul@a
 19835  006E1A  0009               	tblrd		*+
 19836  006E1C  CFF5 F048          	movff	tablat,___flmul@a+1
 19837  006E20  0009               	tblrd		*+
 19838  006E22  CFF5 F049          	movff	tablat,___flmul@a+2
 19839  006E26  000A               	tblrd		*-
 19840  006E28  CFF5 F04A          	movff	tablat,___flmul@a+3
 19841  006E2C  EC73  F02B         	call	___flmul	;wreg free
 19842  006E30  C043  F060         	movff	?___flmul,?_fround
 19843  006E34  C044  F061         	movff	?___flmul+1,?_fround+1
 19844  006E38  C045  F062         	movff	?___flmul+2,?_fround+2
 19845  006E3C  C046  F063         	movff	?___flmul+3,?_fround+3
 19846  006E40  EF48  F037         	goto	l2183
 19847  006E44                     l18121:
 19848                           
 19849                           ; BSR set to: 0
 19850                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 19851  006E44  516C               	movf	fround@prec& (0+255),w,b
 19852  006E46  0D04               	mullw	4
 19853  006E48  0EBF               	movlw	low __npowers_
 19854  006E4A  24F3               	addwf	243,w,c
 19855  006E4C  6EF6               	movwf	tblptrl,c
 19856  006E4E  0E20               	movlw	high __npowers_
 19857  006E50  20F4               	addwfc	244,w,c
 19858  006E52  6EF7               	movwf	tblptrh,c
 19859  006E54                     	if	0	;There are less than 3 active tblptr bytes
 19860  006E54                     	endif
 19861  006E54  0009               	tblrd		*+
 19862  006E56  CFF5 F043          	movff	tablat,___flmul@b
 19863  006E5A  0009               	tblrd		*+
 19864  006E5C  CFF5 F044          	movff	tablat,___flmul@b+1
 19865  006E60  0009               	tblrd		*+
 19866  006E62  CFF5 F045          	movff	tablat,___flmul@b+2
 19867  006E66  000A               	tblrd		*-
 19868  006E68  CFF5 F046          	movff	tablat,___flmul@b+3
 19869  006E6C  0E00               	movlw	0
 19870  006E6E  6E47               	movwf	___flmul@a^0,c
 19871  006E70  0E00               	movlw	0
 19872  006E72  6E48               	movwf	(___flmul@a+1)^0,c
 19873  006E74  0E00               	movlw	0
 19874  006E76  6E49               	movwf	(___flmul@a+2)^0,c
 19875  006E78  0E3F               	movlw	63
 19876  006E7A  6E4A               	movwf	(___flmul@a+3)^0,c
 19877  006E7C  EC73  F02B         	call	___flmul	;wreg free
 19878  006E80  C043  F060         	movff	?___flmul,?_fround
 19879  006E84  C044  F061         	movff	?___flmul+1,?_fround+1
 19880  006E88  C045  F062         	movff	?___flmul+2,?_fround+2
 19881  006E8C  C046  F063         	movff	?___flmul+3,?_fround+3
 19882  006E90                     l2183:
 19883  006E90  0012               	return		;funcret
 19884  006E92                     __end_of_fround:
 19885                           	callstack 0
 19886                           
 19887 ;; *************** function ___flmul *****************
 19888 ;; Defined at:
 19889 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
 19890 ;; Parameters:    Size  Location     Type
 19891 ;;  b               4   66[COMRAM] unsigned char 
 19892 ;;  a               4   70[COMRAM] unsigned char 
 19893 ;; Auto vars:     Size  Location     Type
 19894 ;;  prod            4   85[COMRAM] struct .
 19895 ;;  grs             4   81[COMRAM] unsigned long 
 19896 ;;  temp            2   89[COMRAM] struct .
 19897 ;;  bexp            1   80[COMRAM] unsigned char 
 19898 ;;  aexp            1   79[COMRAM] unsigned char 
 19899 ;;  sign            1   78[COMRAM] unsigned char 
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  4   66[COMRAM] unsigned char 
 19902 ;; Registers used:
 19903 ;;		wreg, status,2, status,0, prodl, prodh
 19904 ;; Tracked objects:
 19905 ;;		On entry : 0/0
 19906 ;;		On exit  : 0/0
 19907 ;;		Unchanged: 0/0
 19908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19909 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19910 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19912 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19913 ;;Total ram usage:       25 bytes
 19914 ;; Hardware stack levels used: 1
 19915 ;; Hardware stack levels required when called: 1
 19916 ;; This function calls:
 19917 ;;		Nothing
 19918 ;; This function is called by:
 19919 ;;		__atof
 19920 ;;		_Linear_regression
 19921 ;;		_sensMeasure_gas_read
 19922 ;;		_Kalman_updateEstimate
 19923 ;;		_sensor_temp_fahrenheit
 19924 ;;		_ADCto_uVoltage
 19925 ;;		_gasSensor_calib
 19926 ;;		_fround
 19927 ;;		_scale
 19928 ;;		_sprintf
 19929 ;;		_fmod
 19930 ;;		_calc_raw_temperature
 19931 ;;		_calc_raw_humidity
 19932 ;;		_sensMeasure_SNR
 19933 ;; This function uses a non-reentrant model
 19934 ;;
 19935                           
 19936                           	psect	text92
 19937  0056E6                     __ptext92:
 19938                           	callstack 0
 19939  0056E6                     ___flmul:
 19940                           	callstack 26
 19941  0056E6  5046               	movf	(___flmul@b+3)^0,w,c
 19942  0056E8  0B80               	andlw	128
 19943  0056EA  6E4F               	movwf	___flmul@sign^0,c
 19944  0056EC  5046               	movf	(___flmul@b+3)^0,w,c
 19945  0056EE  2446               	addwf	(___flmul@b+3)^0,w,c
 19946  0056F0  6E51               	movwf	___flmul@bexp^0,c
 19947  0056F2  AE45               	btfss	(___flmul@b+2)^0,7,c
 19948  0056F4  EF7E  F02B         	goto	u19431
 19949  0056F8  EF80  F02B         	goto	u19430
 19950  0056FC                     u19431:
 19951  0056FC  EF81  F02B         	goto	l17799
 19952  005700                     u19430:
 19953  005700  8051               	bsf	___flmul@bexp^0,0,c
 19954  005702                     l17799:
 19955  005702  5051               	movf	___flmul@bexp^0,w,c
 19956  005704  B4D8               	btfsc	status,2,c
 19957  005706  EF87  F02B         	goto	u19441
 19958  00570A  EF89  F02B         	goto	u19440
 19959  00570E                     u19441:
 19960  00570E  EF9C  F02B         	goto	l17807
 19961  005712                     u19440:
 19962  005712  2851               	incf	___flmul@bexp^0,w,c
 19963  005714  A4D8               	btfss	status,2,c
 19964  005716  EF8F  F02B         	goto	u19451
 19965  00571A  EF91  F02B         	goto	u19450
 19966  00571E                     u19451:
 19967  00571E  EF99  F02B         	goto	l17805
 19968  005722                     u19450:
 19969  005722  0E00               	movlw	0
 19970  005724  6E43               	movwf	___flmul@b^0,c
 19971  005726  0E00               	movlw	0
 19972  005728  6E44               	movwf	(___flmul@b+1)^0,c
 19973  00572A  0E00               	movlw	0
 19974  00572C  6E45               	movwf	(___flmul@b+2)^0,c
 19975  00572E  0E00               	movlw	0
 19976  005730  6E46               	movwf	(___flmul@b+3)^0,c
 19977  005732                     l17805:
 19978  005732  8E45               	bsf	(___flmul@b+2)^0,7,c
 19979  005734  EFA4  F02B         	goto	l17809
 19980  005738                     l17807:
 19981  005738  0E00               	movlw	0
 19982  00573A  6E43               	movwf	___flmul@b^0,c
 19983  00573C  0E00               	movlw	0
 19984  00573E  6E44               	movwf	(___flmul@b+1)^0,c
 19985  005740  0E00               	movlw	0
 19986  005742  6E45               	movwf	(___flmul@b+2)^0,c
 19987  005744  0E00               	movlw	0
 19988  005746  6E46               	movwf	(___flmul@b+3)^0,c
 19989  005748                     l17809:
 19990  005748  504A               	movf	(___flmul@a+3)^0,w,c
 19991  00574A  0B80               	andlw	128
 19992  00574C  1A4F               	xorwf	___flmul@sign^0,f,c
 19993  00574E  504A               	movf	(___flmul@a+3)^0,w,c
 19994  005750  244A               	addwf	(___flmul@a+3)^0,w,c
 19995  005752  6E50               	movwf	___flmul@aexp^0,c
 19996  005754  AE49               	btfss	(___flmul@a+2)^0,7,c
 19997  005756  EFAF  F02B         	goto	u19461
 19998  00575A  EFB1  F02B         	goto	u19460
 19999  00575E                     u19461:
 20000  00575E  EFB2  F02B         	goto	l17817
 20001  005762                     u19460:
 20002  005762  8050               	bsf	___flmul@aexp^0,0,c
 20003  005764                     l17817:
 20004  005764  5050               	movf	___flmul@aexp^0,w,c
 20005  005766  B4D8               	btfsc	status,2,c
 20006  005768  EFB8  F02B         	goto	u19471
 20007  00576C  EFBA  F02B         	goto	u19470
 20008  005770                     u19471:
 20009  005770  EFCD  F02B         	goto	l17825
 20010  005774                     u19470:
 20011  005774  2850               	incf	___flmul@aexp^0,w,c
 20012  005776  A4D8               	btfss	status,2,c
 20013  005778  EFC0  F02B         	goto	u19481
 20014  00577C  EFC2  F02B         	goto	u19480
 20015  005780                     u19481:
 20016  005780  EFCA  F02B         	goto	l17823
 20017  005784                     u19480:
 20018  005784  0E00               	movlw	0
 20019  005786  6E47               	movwf	___flmul@a^0,c
 20020  005788  0E00               	movlw	0
 20021  00578A  6E48               	movwf	(___flmul@a+1)^0,c
 20022  00578C  0E00               	movlw	0
 20023  00578E  6E49               	movwf	(___flmul@a+2)^0,c
 20024  005790  0E00               	movlw	0
 20025  005792  6E4A               	movwf	(___flmul@a+3)^0,c
 20026  005794                     l17823:
 20027  005794  8E49               	bsf	(___flmul@a+2)^0,7,c
 20028  005796  EFD5  F02B         	goto	l2895
 20029  00579A                     l17825:
 20030  00579A  0E00               	movlw	0
 20031  00579C  6E47               	movwf	___flmul@a^0,c
 20032  00579E  0E00               	movlw	0
 20033  0057A0  6E48               	movwf	(___flmul@a+1)^0,c
 20034  0057A2  0E00               	movlw	0
 20035  0057A4  6E49               	movwf	(___flmul@a+2)^0,c
 20036  0057A6  0E00               	movlw	0
 20037  0057A8  6E4A               	movwf	(___flmul@a+3)^0,c
 20038  0057AA                     l2895:
 20039  0057AA  5050               	movf	___flmul@aexp^0,w,c
 20040  0057AC  B4D8               	btfsc	status,2,c
 20041  0057AE  EFDB  F02B         	goto	u19491
 20042  0057B2  EFDD  F02B         	goto	u19490
 20043  0057B6                     u19491:
 20044  0057B6  EFE5  F02B         	goto	l17829
 20045  0057BA                     u19490:
 20046  0057BA  5051               	movf	___flmul@bexp^0,w,c
 20047  0057BC  A4D8               	btfss	status,2,c
 20048  0057BE  EFE3  F02B         	goto	u19501
 20049  0057C2  EFE5  F02B         	goto	u19500
 20050  0057C6                     u19501:
 20051  0057C6  EFEF  F02B         	goto	l17833
 20052  0057CA                     u19500:
 20053  0057CA                     l17829:
 20054  0057CA  0E00               	movlw	0
 20055  0057CC  6E43               	movwf	?___flmul^0,c
 20056  0057CE  0E00               	movlw	0
 20057  0057D0  6E44               	movwf	(?___flmul+1)^0,c
 20058  0057D2  0E00               	movlw	0
 20059  0057D4  6E45               	movwf	(?___flmul+2)^0,c
 20060  0057D6  0E00               	movlw	0
 20061  0057D8  6E46               	movwf	(?___flmul+3)^0,c
 20062  0057DA  EF87  F02D         	goto	l2899
 20063  0057DE                     l17833:
 20064  0057DE  5049               	movf	(___flmul@a+2)^0,w,c
 20065  0057E0  0243               	mulwf	___flmul@b^0,c
 20066  0057E2  CFF3 F05A          	movff	prodl,___flmul@temp
 20067  0057E6  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20068  0057EA  505A               	movf	___flmul@temp^0,w,c
 20069  0057EC  6E52               	movwf	___flmul@grs^0,c
 20070  0057EE  6A53               	clrf	(___flmul@grs+1)^0,c
 20071  0057F0  6A54               	clrf	(___flmul@grs+2)^0,c
 20072  0057F2  6A55               	clrf	(___flmul@grs+3)^0,c
 20073  0057F4  505B               	movf	(___flmul@temp+1)^0,w,c
 20074  0057F6  6E56               	movwf	___flmul@prod^0,c
 20075  0057F8  6A57               	clrf	(___flmul@prod+1)^0,c
 20076  0057FA  6A58               	clrf	(___flmul@prod+2)^0,c
 20077  0057FC  6A59               	clrf	(___flmul@prod+3)^0,c
 20078  0057FE  5048               	movf	(___flmul@a+1)^0,w,c
 20079  005800  0244               	mulwf	(___flmul@b+1)^0,c
 20080  005802  CFF3 F05A          	movff	prodl,___flmul@temp
 20081  005806  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20082  00580A  505A               	movf	___flmul@temp^0,w,c
 20083  00580C  2652               	addwf	___flmul@grs^0,f,c
 20084  00580E  0E00               	movlw	0
 20085  005810  2253               	addwfc	(___flmul@grs+1)^0,f,c
 20086  005812  2254               	addwfc	(___flmul@grs+2)^0,f,c
 20087  005814  2255               	addwfc	(___flmul@grs+3)^0,f,c
 20088  005816  505B               	movf	(___flmul@temp+1)^0,w,c
 20089  005818  2656               	addwf	___flmul@prod^0,f,c
 20090  00581A  0E00               	movlw	0
 20091  00581C  2257               	addwfc	(___flmul@prod+1)^0,f,c
 20092  00581E  2258               	addwfc	(___flmul@prod+2)^0,f,c
 20093  005820  2259               	addwfc	(___flmul@prod+3)^0,f,c
 20094  005822  5047               	movf	___flmul@a^0,w,c
 20095  005824  0245               	mulwf	(___flmul@b+2)^0,c
 20096  005826  CFF3 F05A          	movff	prodl,___flmul@temp
 20097  00582A  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20098  00582E  505A               	movf	___flmul@temp^0,w,c
 20099  005830  2652               	addwf	___flmul@grs^0,f,c
 20100  005832  0E00               	movlw	0
 20101  005834  2253               	addwfc	(___flmul@grs+1)^0,f,c
 20102  005836  2254               	addwfc	(___flmul@grs+2)^0,f,c
 20103  005838  2255               	addwfc	(___flmul@grs+3)^0,f,c
 20104  00583A  505B               	movf	(___flmul@temp+1)^0,w,c
 20105  00583C  2656               	addwf	___flmul@prod^0,f,c
 20106  00583E  0E00               	movlw	0
 20107  005840  2257               	addwfc	(___flmul@prod+1)^0,f,c
 20108  005842  2258               	addwfc	(___flmul@prod+2)^0,f,c
 20109  005844  2259               	addwfc	(___flmul@prod+3)^0,f,c
 20110  005846  C054  F055         	movff	___flmul@grs+2,___flmul@grs+3
 20111  00584A  C053  F054         	movff	___flmul@grs+1,___flmul@grs+2
 20112  00584E  C052  F053         	movff	___flmul@grs,___flmul@grs+1
 20113  005852  6A52               	clrf	___flmul@grs^0,c
 20114  005854  5047               	movf	___flmul@a^0,w,c
 20115  005856  0244               	mulwf	(___flmul@b+1)^0,c
 20116  005858  CFF3 F05A          	movff	prodl,___flmul@temp
 20117  00585C  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20118  005860  505A               	movf	___flmul@temp^0,w,c
 20119  005862  2652               	addwf	___flmul@grs^0,f,c
 20120  005864  505B               	movf	(___flmul@temp+1)^0,w,c
 20121  005866  2253               	addwfc	(___flmul@grs+1)^0,f,c
 20122  005868  0E00               	movlw	0
 20123  00586A  2254               	addwfc	(___flmul@grs+2)^0,f,c
 20124  00586C  0E00               	movlw	0
 20125  00586E  2255               	addwfc	(___flmul@grs+3)^0,f,c
 20126  005870  5048               	movf	(___flmul@a+1)^0,w,c
 20127  005872  0243               	mulwf	___flmul@b^0,c
 20128  005874  CFF3 F05A          	movff	prodl,___flmul@temp
 20129  005878  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20130  00587C  505A               	movf	___flmul@temp^0,w,c
 20131  00587E  2652               	addwf	___flmul@grs^0,f,c
 20132  005880  505B               	movf	(___flmul@temp+1)^0,w,c
 20133  005882  2253               	addwfc	(___flmul@grs+1)^0,f,c
 20134  005884  0E00               	movlw	0
 20135  005886  2254               	addwfc	(___flmul@grs+2)^0,f,c
 20136  005888  0E00               	movlw	0
 20137  00588A  2255               	addwfc	(___flmul@grs+3)^0,f,c
 20138  00588C  C054  F055         	movff	___flmul@grs+2,___flmul@grs+3
 20139  005890  C053  F054         	movff	___flmul@grs+1,___flmul@grs+2
 20140  005894  C052  F053         	movff	___flmul@grs,___flmul@grs+1
 20141  005898  6A52               	clrf	___flmul@grs^0,c
 20142  00589A  5047               	movf	___flmul@a^0,w,c
 20143  00589C  0243               	mulwf	___flmul@b^0,c
 20144  00589E  CFF3 F05A          	movff	prodl,___flmul@temp
 20145  0058A2  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20146  0058A6  505A               	movf	___flmul@temp^0,w,c
 20147  0058A8  2652               	addwf	___flmul@grs^0,f,c
 20148  0058AA  505B               	movf	(___flmul@temp+1)^0,w,c
 20149  0058AC  2253               	addwfc	(___flmul@grs+1)^0,f,c
 20150  0058AE  0E00               	movlw	0
 20151  0058B0  2254               	addwfc	(___flmul@grs+2)^0,f,c
 20152  0058B2  0E00               	movlw	0
 20153  0058B4  2255               	addwfc	(___flmul@grs+3)^0,f,c
 20154  0058B6  5049               	movf	(___flmul@a+2)^0,w,c
 20155  0058B8  0244               	mulwf	(___flmul@b+1)^0,c
 20156  0058BA  CFF3 F05A          	movff	prodl,___flmul@temp
 20157  0058BE  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20158  0058C2  505A               	movf	___flmul@temp^0,w,c
 20159  0058C4  2656               	addwf	___flmul@prod^0,f,c
 20160  0058C6  505B               	movf	(___flmul@temp+1)^0,w,c
 20161  0058C8  2257               	addwfc	(___flmul@prod+1)^0,f,c
 20162  0058CA  0E00               	movlw	0
 20163  0058CC  2258               	addwfc	(___flmul@prod+2)^0,f,c
 20164  0058CE  0E00               	movlw	0
 20165  0058D0  2259               	addwfc	(___flmul@prod+3)^0,f,c
 20166  0058D2  5048               	movf	(___flmul@a+1)^0,w,c
 20167  0058D4  0245               	mulwf	(___flmul@b+2)^0,c
 20168  0058D6  CFF3 F05A          	movff	prodl,___flmul@temp
 20169  0058DA  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20170  0058DE  505A               	movf	___flmul@temp^0,w,c
 20171  0058E0  2656               	addwf	___flmul@prod^0,f,c
 20172  0058E2  505B               	movf	(___flmul@temp+1)^0,w,c
 20173  0058E4  2257               	addwfc	(___flmul@prod+1)^0,f,c
 20174  0058E6  0E00               	movlw	0
 20175  0058E8  2258               	addwfc	(___flmul@prod+2)^0,f,c
 20176  0058EA  0E00               	movlw	0
 20177  0058EC  2259               	addwfc	(___flmul@prod+3)^0,f,c
 20178  0058EE  5049               	movf	(___flmul@a+2)^0,w,c
 20179  0058F0  0245               	mulwf	(___flmul@b+2)^0,c
 20180  0058F2  CFF3 F05A          	movff	prodl,___flmul@temp
 20181  0058F6  CFF4 F05B          	movff	prodh,___flmul@temp+1
 20182  0058FA  505A               	movf	___flmul@temp^0,w,c
 20183  0058FC  6E4B               	movwf	??___flmul^0,c
 20184  0058FE  505B               	movf	(___flmul@temp+1)^0,w,c
 20185  005900  6E4C               	movwf	(??___flmul+1)^0,c
 20186  005902  6A4D               	clrf	(??___flmul+2)^0,c
 20187  005904  6A4E               	clrf	(??___flmul+3)^0,c
 20188  005906  C04D  F04E         	movff	??___flmul+2,??___flmul+3
 20189  00590A  C04C  F04D         	movff	??___flmul+1,??___flmul+2
 20190  00590E  C04B  F04C         	movff	??___flmul,??___flmul+1
 20191  005912  6A4B               	clrf	??___flmul^0,c
 20192  005914  504B               	movf	??___flmul^0,w,c
 20193  005916  2656               	addwf	___flmul@prod^0,f,c
 20194  005918  504C               	movf	(??___flmul+1)^0,w,c
 20195  00591A  2257               	addwfc	(___flmul@prod+1)^0,f,c
 20196  00591C  504D               	movf	(??___flmul+2)^0,w,c
 20197  00591E  2258               	addwfc	(___flmul@prod+2)^0,f,c
 20198  005920  504E               	movf	(??___flmul+3)^0,w,c
 20199  005922  2259               	addwfc	(___flmul@prod+3)^0,f,c
 20200  005924  C052  F04B         	movff	___flmul@grs,??___flmul
 20201  005928  C053  F04C         	movff	___flmul@grs+1,??___flmul+1
 20202  00592C  C054  F04D         	movff	___flmul@grs+2,??___flmul+2
 20203  005930  C055  F04E         	movff	___flmul@grs+3,??___flmul+3
 20204  005934  0E19               	movlw	25
 20205  005936  EFA2  F02C         	goto	u19510
 20206  00593A                     u19515:
 20207  00593A  90D8               	bcf	status,0,c
 20208  00593C  324E               	rrcf	(??___flmul+3)^0,f,c
 20209  00593E  324D               	rrcf	(??___flmul+2)^0,f,c
 20210  005940  324C               	rrcf	(??___flmul+1)^0,f,c
 20211  005942  324B               	rrcf	??___flmul^0,f,c
 20212  005944                     u19510:
 20213  005944  2EE8               	decfsz	wreg,f,c
 20214  005946  EF9D  F02C         	goto	u19515
 20215  00594A  504B               	movf	??___flmul^0,w,c
 20216  00594C  2656               	addwf	___flmul@prod^0,f,c
 20217  00594E  504C               	movf	(??___flmul+1)^0,w,c
 20218  005950  2257               	addwfc	(___flmul@prod+1)^0,f,c
 20219  005952  504D               	movf	(??___flmul+2)^0,w,c
 20220  005954  2258               	addwfc	(___flmul@prod+2)^0,f,c
 20221  005956  504E               	movf	(??___flmul+3)^0,w,c
 20222  005958  2259               	addwfc	(___flmul@prod+3)^0,f,c
 20223  00595A  C054  F055         	movff	___flmul@grs+2,___flmul@grs+3
 20224  00595E  C053  F054         	movff	___flmul@grs+1,___flmul@grs+2
 20225  005962  C052  F053         	movff	___flmul@grs,___flmul@grs+1
 20226  005966  6A52               	clrf	___flmul@grs^0,c
 20227  005968  5050               	movf	___flmul@aexp^0,w,c
 20228  00596A  C051  F04B         	movff	___flmul@bexp,??___flmul
 20229  00596E  6A4C               	clrf	(??___flmul+1)^0,c
 20230  005970  264B               	addwf	??___flmul^0,f,c
 20231  005972  0E00               	movlw	0
 20232  005974  224C               	addwfc	(??___flmul+1)^0,f,c
 20233  005976  0E82               	movlw	130
 20234  005978  244B               	addwf	??___flmul^0,w,c
 20235  00597A  6E5A               	movwf	___flmul@temp^0,c
 20236  00597C  0EFF               	movlw	255
 20237  00597E  204C               	addwfc	(??___flmul+1)^0,w,c
 20238  005980  6E5B               	movwf	(___flmul@temp+1)^0,c
 20239  005982  EFD8  F02C         	goto	l17881
 20240  005986                     l17875:
 20241  005986  90D8               	bcf	status,0,c
 20242  005988  3656               	rlcf	___flmul@prod^0,f,c
 20243  00598A  3657               	rlcf	(___flmul@prod+1)^0,f,c
 20244  00598C  3658               	rlcf	(___flmul@prod+2)^0,f,c
 20245  00598E  3659               	rlcf	(___flmul@prod+3)^0,f,c
 20246  005990  AE55               	btfss	(___flmul@grs+3)^0,7,c
 20247  005992  EFCD  F02C         	goto	u19521
 20248  005996  EFCF  F02C         	goto	u19520
 20249  00599A                     u19521:
 20250  00599A  EFD0  F02C         	goto	l2902
 20251  00599E                     u19520:
 20252  00599E  8056               	bsf	___flmul@prod^0,0,c
 20253  0059A0                     l2902:
 20254  0059A0  90D8               	bcf	status,0,c
 20255  0059A2  3652               	rlcf	___flmul@grs^0,f,c
 20256  0059A4  3653               	rlcf	(___flmul@grs+1)^0,f,c
 20257  0059A6  3654               	rlcf	(___flmul@grs+2)^0,f,c
 20258  0059A8  3655               	rlcf	(___flmul@grs+3)^0,f,c
 20259  0059AA  065A               	decf	___flmul@temp^0,f,c
 20260  0059AC  A0D8               	btfss	status,0,c
 20261  0059AE  065B               	decf	(___flmul@temp+1)^0,f,c
 20262  0059B0                     l17881:
 20263  0059B0  AE58               	btfss	(___flmul@prod+2)^0,7,c
 20264  0059B2  EFDD  F02C         	goto	u19531
 20265  0059B6  EFDF  F02C         	goto	u19530
 20266  0059BA                     u19531:
 20267  0059BA  EFC3  F02C         	goto	l17875
 20268  0059BE                     u19530:
 20269  0059BE  0E00               	movlw	0
 20270  0059C0  6E50               	movwf	___flmul@aexp^0,c
 20271  0059C2  AE55               	btfss	(___flmul@grs+3)^0,7,c
 20272  0059C4  EFE6  F02C         	goto	u19541
 20273  0059C8  EFE8  F02C         	goto	u19540
 20274  0059CC                     u19541:
 20275  0059CC  EF0C  F02D         	goto	l2904
 20276  0059D0                     u19540:
 20277  0059D0  0EFF               	movlw	255
 20278  0059D2  1452               	andwf	___flmul@grs^0,w,c
 20279  0059D4  6E4B               	movwf	??___flmul^0,c
 20280  0059D6  0EFF               	movlw	255
 20281  0059D8  1453               	andwf	(___flmul@grs+1)^0,w,c
 20282  0059DA  6E4C               	movwf	(??___flmul+1)^0,c
 20283  0059DC  0EFF               	movlw	255
 20284  0059DE  1454               	andwf	(___flmul@grs+2)^0,w,c
 20285  0059E0  6E4D               	movwf	(??___flmul+2)^0,c
 20286  0059E2  0E7F               	movlw	127
 20287  0059E4  1455               	andwf	(___flmul@grs+3)^0,w,c
 20288  0059E6  6E4E               	movwf	(??___flmul+3)^0,c
 20289  0059E8  504B               	movf	??___flmul^0,w,c
 20290  0059EA  104C               	iorwf	(??___flmul+1)^0,w,c
 20291  0059EC  104D               	iorwf	(??___flmul+2)^0,w,c
 20292  0059EE  104E               	iorwf	(??___flmul+3)^0,w,c
 20293  0059F0  B4D8               	btfsc	status,2,c
 20294  0059F2  EFFD  F02C         	goto	u19551
 20295  0059F6  EFFF  F02C         	goto	u19550
 20296  0059FA                     u19551:
 20297  0059FA  EF03  F02D         	goto	l2905
 20298  0059FE                     u19550:
 20299  0059FE                     l17889:
 20300  0059FE  0E01               	movlw	1
 20301  005A00  6E50               	movwf	___flmul@aexp^0,c
 20302  005A02  EF0C  F02D         	goto	l2904
 20303  005A06                     l2905:
 20304  005A06  A056               	btfss	___flmul@prod^0,0,c
 20305  005A08  EF08  F02D         	goto	u19561
 20306  005A0C  EF0A  F02D         	goto	u19560
 20307  005A10                     u19561:
 20308  005A10  EF0C  F02D         	goto	l2904
 20309  005A14                     u19560:
 20310  005A14  EFFF  F02C         	goto	l17889
 20311  005A18                     l2904:
 20312  005A18  5050               	movf	___flmul@aexp^0,w,c
 20313  005A1A  B4D8               	btfsc	status,2,c
 20314  005A1C  EF12  F02D         	goto	u19571
 20315  005A20  EF14  F02D         	goto	u19570
 20316  005A24                     u19571:
 20317  005A24  EF38  F02D         	goto	l17901
 20318  005A28                     u19570:
 20319  005A28  0E01               	movlw	1
 20320  005A2A  2656               	addwf	___flmul@prod^0,f,c
 20321  005A2C  0E00               	movlw	0
 20322  005A2E  2257               	addwfc	(___flmul@prod+1)^0,f,c
 20323  005A30  2258               	addwfc	(___flmul@prod+2)^0,f,c
 20324  005A32  2259               	addwfc	(___flmul@prod+3)^0,f,c
 20325  005A34  A059               	btfss	(___flmul@prod+3)^0,0,c
 20326  005A36  EF1F  F02D         	goto	u19581
 20327  005A3A  EF21  F02D         	goto	u19580
 20328  005A3E                     u19581:
 20329  005A3E  EF38  F02D         	goto	l17901
 20330  005A42                     u19580:
 20331  005A42  C056  F04B         	movff	___flmul@prod,??___flmul
 20332  005A46  C057  F04C         	movff	___flmul@prod+1,??___flmul+1
 20333  005A4A  C058  F04D         	movff	___flmul@prod+2,??___flmul+2
 20334  005A4E  C059  F04E         	movff	___flmul@prod+3,??___flmul+3
 20335  005A52  344E               	rlcf	(??___flmul+3)^0,w,c
 20336  005A54  324E               	rrcf	(??___flmul+3)^0,f,c
 20337  005A56  324D               	rrcf	(??___flmul+2)^0,f,c
 20338  005A58  324C               	rrcf	(??___flmul+1)^0,f,c
 20339  005A5A  324B               	rrcf	??___flmul^0,f,c
 20340  005A5C  C04B  F056         	movff	??___flmul,___flmul@prod
 20341  005A60  C04C  F057         	movff	??___flmul+1,___flmul@prod+1
 20342  005A64  C04D  F058         	movff	??___flmul+2,___flmul@prod+2
 20343  005A68  C04E  F059         	movff	??___flmul+3,___flmul@prod+3
 20344  005A6C  4A5A               	infsnz	___flmul@temp^0,f,c
 20345  005A6E  2A5B               	incf	(___flmul@temp+1)^0,f,c
 20346  005A70                     l17901:
 20347  005A70  BE5B               	btfsc	(___flmul@temp+1)^0,7,c
 20348  005A72  EF43  F02D         	goto	u19591
 20349  005A76  505B               	movf	(___flmul@temp+1)^0,w,c
 20350  005A78  E108               	bnz	u19590
 20351  005A7A  285A               	incf	___flmul@temp^0,w,c
 20352  005A7C  A0D8               	btfss	status,0,c
 20353  005A7E  EF43  F02D         	goto	u19591
 20354  005A82  EF45  F02D         	goto	u19590
 20355  005A86                     u19591:
 20356  005A86  EF4F  F02D         	goto	l17905
 20357  005A8A                     u19590:
 20358  005A8A  0E00               	movlw	0
 20359  005A8C  6E56               	movwf	___flmul@prod^0,c
 20360  005A8E  0E00               	movlw	0
 20361  005A90  6E57               	movwf	(___flmul@prod+1)^0,c
 20362  005A92  0E80               	movlw	128
 20363  005A94  6E58               	movwf	(___flmul@prod+2)^0,c
 20364  005A96  0E7F               	movlw	127
 20365  005A98  6E59               	movwf	(___flmul@prod+3)^0,c
 20366  005A9A  EF7D  F02D         	goto	l17917
 20367  005A9E                     l17905:
 20368  005A9E  BE5B               	btfsc	(___flmul@temp+1)^0,7,c
 20369  005AA0  EF5C  F02D         	goto	u19600
 20370  005AA4  505B               	movf	(___flmul@temp+1)^0,w,c
 20371  005AA6  E106               	bnz	u19601
 20372  005AA8  045A               	decf	___flmul@temp^0,w,c
 20373  005AAA  B0D8               	btfsc	status,0,c
 20374  005AAC  EF5A  F02D         	goto	u19601
 20375  005AB0  EF5C  F02D         	goto	u19600
 20376  005AB4                     u19601:
 20377  005AB4  EF68  F02D         	goto	l2912
 20378  005AB8                     u19600:
 20379  005AB8  0E00               	movlw	0
 20380  005ABA  6E56               	movwf	___flmul@prod^0,c
 20381  005ABC  0E00               	movlw	0
 20382  005ABE  6E57               	movwf	(___flmul@prod+1)^0,c
 20383  005AC0  0E00               	movlw	0
 20384  005AC2  6E58               	movwf	(___flmul@prod+2)^0,c
 20385  005AC4  0E00               	movlw	0
 20386  005AC6  6E59               	movwf	(___flmul@prod+3)^0,c
 20387  005AC8  0E00               	movlw	0
 20388  005ACA  6E4F               	movwf	___flmul@sign^0,c
 20389  005ACC  EF7D  F02D         	goto	l17917
 20390  005AD0                     l2912:
 20391  005AD0  C05A  F051         	movff	___flmul@temp,___flmul@bexp
 20392  005AD4  0EFF               	movlw	255
 20393  005AD6  1656               	andwf	___flmul@prod^0,f,c
 20394  005AD8  0EFF               	movlw	255
 20395  005ADA  1657               	andwf	(___flmul@prod+1)^0,f,c
 20396  005ADC  0E7F               	movlw	127
 20397  005ADE  1658               	andwf	(___flmul@prod+2)^0,f,c
 20398  005AE0  0E00               	movlw	0
 20399  005AE2  1659               	andwf	(___flmul@prod+3)^0,f,c
 20400  005AE4  A051               	btfss	___flmul@bexp^0,0,c
 20401  005AE6  EF77  F02D         	goto	u19611
 20402  005AEA  EF79  F02D         	goto	u19610
 20403  005AEE                     u19611:
 20404  005AEE  EF7A  F02D         	goto	l17915
 20405  005AF2                     u19610:
 20406  005AF2  8E58               	bsf	(___flmul@prod+2)^0,7,c
 20407  005AF4                     l17915:
 20408  005AF4  90D8               	bcf	status,0,c
 20409  005AF6  3051               	rrcf	___flmul@bexp^0,w,c
 20410  005AF8  6E59               	movwf	(___flmul@prod+3)^0,c
 20411  005AFA                     l17917:
 20412  005AFA  504F               	movf	___flmul@sign^0,w,c
 20413  005AFC  1259               	iorwf	(___flmul@prod+3)^0,f,c
 20414  005AFE  C056  F043         	movff	___flmul@prod,?___flmul
 20415  005B02  C057  F044         	movff	___flmul@prod+1,?___flmul+1
 20416  005B06  C058  F045         	movff	___flmul@prod+2,?___flmul+2
 20417  005B0A  C059  F046         	movff	___flmul@prod+3,?___flmul+3
 20418  005B0E                     l2899:
 20419  005B0E  0012               	return		;funcret
 20420  005B10                     __end_of___flmul:
 20421                           	callstack 0
 20422                           
 20423 ;; *************** function __tdiv_to_l_ *****************
 20424 ;; Defined at:
 20425 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
 20426 ;; Parameters:    Size  Location     Type
 20427 ;;  f1              4    0[COMRAM] float 
 20428 ;;  f2              4    4[COMRAM] float 
 20429 ;; Auto vars:     Size  Location     Type
 20430 ;;  quot            4   11[COMRAM] unsigned long 
 20431 ;;  exp1            1   16[COMRAM] unsigned char 
 20432 ;;  cntr            1   15[COMRAM] unsigned char 
 20433 ;; Return value:  Size  Location     Type
 20434 ;;                  4    0[COMRAM] unsigned long 
 20435 ;; Registers used:
 20436 ;;		wreg, status,2, status,0
 20437 ;; Tracked objects:
 20438 ;;		On entry : 0/0
 20439 ;;		On exit  : 0/0
 20440 ;;		Unchanged: 0/0
 20441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20442 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20443 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20444 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20445 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20446 ;;Total ram usage:       17 bytes
 20447 ;; Hardware stack levels used: 1
 20448 ;; Hardware stack levels required when called: 1
 20449 ;; This function calls:
 20450 ;;		Nothing
 20451 ;; This function is called by:
 20452 ;;		_sprintf
 20453 ;; This function uses a non-reentrant model
 20454 ;;
 20455                           
 20456                           	psect	text93
 20457  008DC0                     __ptext93:
 20458                           	callstack 0
 20459  008DC0                     __tdiv_to_l_:
 20460                           	callstack 25
 20461  008DC0  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 20462  008DC4  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
 20463  008DC6  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
 20464  008DC8  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
 20465  008DCA  3609               	rlcf	??__tdiv_to_l_^0,f,c
 20466  008DCC  E301               	bnc	u10101
 20467  008DCE  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
 20468  008DD0                     u10101:
 20469  008DD0  5009               	movf	??__tdiv_to_l_^0,w,c
 20470  008DD2  6E11               	movwf	__tdiv_to_l_@exp1^0,c
 20471  008DD4  5011               	movf	__tdiv_to_l_@exp1^0,w,c
 20472  008DD6  A4D8               	btfss	status,2,c
 20473  008DD8  EFF0  F046         	goto	u10111
 20474  008DDC  EFF2  F046         	goto	u10110
 20475  008DE0                     u10111:
 20476  008DE0  EFFC  F046         	goto	l10459
 20477  008DE4                     u10110:
 20478  008DE4                     l10455:
 20479  008DE4  0E00               	movlw	0
 20480  008DE6  6E01               	movwf	?__tdiv_to_l_^0,c
 20481  008DE8  0E00               	movlw	0
 20482  008DEA  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
 20483  008DEC  0E00               	movlw	0
 20484  008DEE  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
 20485  008DF0  0E00               	movlw	0
 20486  008DF2  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
 20487  008DF4  EF8A  F047         	goto	l2622
 20488  008DF8                     l10459:
 20489  008DF8  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 20490  008DFC  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
 20491  008DFE  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
 20492  008E00  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
 20493  008E02  3609               	rlcf	??__tdiv_to_l_^0,f,c
 20494  008E04  E301               	bnc	u10121
 20495  008E06  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
 20496  008E08                     u10121:
 20497  008E08  5009               	movf	??__tdiv_to_l_^0,w,c
 20498  008E0A  6E10               	movwf	__tdiv_to_l_@cntr^0,c
 20499  008E0C  5010               	movf	__tdiv_to_l_@cntr^0,w,c
 20500  008E0E  A4D8               	btfss	status,2,c
 20501  008E10  EF0C  F047         	goto	u10131
 20502  008E14  EF0E  F047         	goto	u10130
 20503  008E18                     u10131:
 20504  008E18  EF10  F047         	goto	l10465
 20505  008E1C                     u10130:
 20506  008E1C  EFF2  F046         	goto	l10455
 20507  008E20                     l10465:
 20508  008E20  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
 20509  008E22  0EFF               	movlw	255
 20510  008E24  1601               	andwf	__tdiv_to_l_@f1^0,f,c
 20511  008E26  0EFF               	movlw	255
 20512  008E28  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
 20513  008E2A  0E00               	movlw	0
 20514  008E2C  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
 20515  008E2E  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
 20516  008E30  0EFF               	movlw	255
 20517  008E32  1605               	andwf	__tdiv_to_l_@f2^0,f,c
 20518  008E34  0EFF               	movlw	255
 20519  008E36  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
 20520  008E38  0E00               	movlw	0
 20521  008E3A  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
 20522  008E3C  0E00               	movlw	0
 20523  008E3E  6E0C               	movwf	__tdiv_to_l_@quot^0,c
 20524  008E40  0E00               	movlw	0
 20525  008E42  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
 20526  008E44  0E00               	movlw	0
 20527  008E46  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
 20528  008E48  0E00               	movlw	0
 20529  008E4A  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
 20530  008E4C  0E7F               	movlw	127
 20531  008E4E  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
 20532  008E50  5010               	movf	__tdiv_to_l_@cntr^0,w,c
 20533  008E52  0F98               	addlw	152
 20534  008E54  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
 20535  008E56  0E18               	movlw	24
 20536  008E58  6E10               	movwf	__tdiv_to_l_@cntr^0,c
 20537  008E5A                     l2624:
 20538  008E5A  90D8               	bcf	status,0,c
 20539  008E5C  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
 20540  008E5E  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 20541  008E60  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 20542  008E62  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 20543  008E64  5005               	movf	__tdiv_to_l_@f2^0,w,c
 20544  008E66  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
 20545  008E68  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 20546  008E6A  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
 20547  008E6C  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 20548  008E6E  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
 20549  008E70  A0D8               	btfss	status,0,c
 20550  008E72  EF3D  F047         	goto	u10141
 20551  008E76  EF3F  F047         	goto	u10140
 20552  008E7A                     u10141:
 20553  008E7A  EF46  F047         	goto	l2625
 20554  008E7E                     u10140:
 20555  008E7E  5005               	movf	__tdiv_to_l_@f2^0,w,c
 20556  008E80  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
 20557  008E82  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 20558  008E84  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
 20559  008E86  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 20560  008E88  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
 20561  008E8A  800C               	bsf	__tdiv_to_l_@quot^0,0,c
 20562  008E8C                     l2625:
 20563  008E8C  90D8               	bcf	status,0,c
 20564  008E8E  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
 20565  008E90  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
 20566  008E92  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
 20567  008E94  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
 20568  008E96  EF2D  F047         	goto	l2624
 20569  008E9A  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
 20570  008E9C  EF54  F047         	goto	u10150
 20571  008EA0  EF52  F047         	goto	u10151
 20572  008EA4                     u10151:
 20573  008EA4  EF6A  F047         	goto	l10499
 20574  008EA8                     u10150:
 20575  008EA8  5011               	movf	__tdiv_to_l_@exp1^0,w,c
 20576  008EAA  0A80               	xorlw	128
 20577  008EAC  0F97               	addlw	151
 20578  008EAE  B0D8               	btfsc	status,0,c
 20579  008EB0  EF5C  F047         	goto	u10161
 20580  008EB4  EF5E  F047         	goto	u10160
 20581  008EB8                     u10161:
 20582  008EB8  EF60  F047         	goto	l10495
 20583  008EBC                     u10160:
 20584  008EBC  EFF2  F046         	goto	l10455
 20585  008EC0                     l10495:
 20586  008EC0  90D8               	bcf	status,0,c
 20587  008EC2  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
 20588  008EC4  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
 20589  008EC6  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
 20590  008EC8  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
 20591  008ECA  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
 20592  008ECC  EF60  F047         	goto	l10495
 20593  008ED0  EF82  F047         	goto	l2631
 20594  008ED4                     l10499:
 20595  008ED4  0E17               	movlw	23
 20596  008ED6  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
 20597  008ED8  EF70  F047         	goto	u10171
 20598  008EDC  EF72  F047         	goto	u10170
 20599  008EE0                     u10171:
 20600  008EE0  EF7A  F047         	goto	l10507
 20601  008EE4                     u10170:
 20602  008EE4  EFF2  F046         	goto	l10455
 20603  008EE8                     l10505:
 20604  008EE8  90D8               	bcf	status,0,c
 20605  008EEA  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
 20606  008EEC  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 20607  008EEE  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 20608  008EF0  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 20609  008EF2  0611               	decf	__tdiv_to_l_@exp1^0,f,c
 20610  008EF4                     l10507:
 20611  008EF4  5011               	movf	__tdiv_to_l_@exp1^0,w,c
 20612  008EF6  A4D8               	btfss	status,2,c
 20613  008EF8  EF80  F047         	goto	u10181
 20614  008EFC  EF82  F047         	goto	u10180
 20615  008F00                     u10181:
 20616  008F00  EF74  F047         	goto	l10505
 20617  008F04                     u10180:
 20618  008F04                     l2631:
 20619  008F04  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 20620  008F08  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 20621  008F0C  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 20622  008F10  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 20623  008F14                     l2622:
 20624  008F14  0012               	return		;funcret
 20625  008F16                     __end_of__tdiv_to_l_:
 20626                           	callstack 0
 20627                           
 20628 ;; *************** function __div_to_l_ *****************
 20629 ;; Defined at:
 20630 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
 20631 ;; Parameters:    Size  Location     Type
 20632 ;;  f1              4    0[COMRAM] unsigned long 
 20633 ;;  f2              4    4[COMRAM] unsigned long 
 20634 ;; Auto vars:     Size  Location     Type
 20635 ;;  quot            4    8[COMRAM] unsigned long 
 20636 ;;  exp1            1   13[COMRAM] unsigned char 
 20637 ;;  cntr            1   12[COMRAM] unsigned char 
 20638 ;; Return value:  Size  Location     Type
 20639 ;;                  4    0[COMRAM] unsigned long 
 20640 ;; Registers used:
 20641 ;;		wreg, status,2, status,0
 20642 ;; Tracked objects:
 20643 ;;		On entry : 0/0
 20644 ;;		On exit  : 0/0
 20645 ;;		Unchanged: 0/0
 20646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20647 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20648 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20650 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20651 ;;Total ram usage:       14 bytes
 20652 ;; Hardware stack levels used: 1
 20653 ;; Hardware stack levels required when called: 1
 20654 ;; This function calls:
 20655 ;;		Nothing
 20656 ;; This function is called by:
 20657 ;;		_sprintf
 20658 ;; This function uses a non-reentrant model
 20659 ;;
 20660                           
 20661                           	psect	text94
 20662  0091B4                     __ptext94:
 20663                           	callstack 0
 20664  0091B4                     __div_to_l_:
 20665                           	callstack 25
 20666  0091B4  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
 20667  0091B6  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
 20668  0091B8  6E0E               	movwf	__div_to_l_@exp1^0,c
 20669  0091BA  500E               	movf	__div_to_l_@exp1^0,w,c
 20670  0091BC  A4D8               	btfss	status,2,c
 20671  0091BE  EFE3  F048         	goto	u10191
 20672  0091C2  EFE5  F048         	goto	u10190
 20673  0091C6                     u10191:
 20674  0091C6  EFEF  F048         	goto	l10515
 20675  0091CA                     u10190:
 20676  0091CA                     l10511:
 20677  0091CA  0E00               	movlw	0
 20678  0091CC  6E01               	movwf	?__div_to_l_^0,c
 20679  0091CE  0E00               	movlw	0
 20680  0091D0  6E02               	movwf	(?__div_to_l_+1)^0,c
 20681  0091D2  0E00               	movlw	0
 20682  0091D4  6E03               	movwf	(?__div_to_l_+2)^0,c
 20683  0091D6  0E00               	movlw	0
 20684  0091D8  6E04               	movwf	(?__div_to_l_+3)^0,c
 20685  0091DA  EF7F  F049         	goto	l2513
 20686  0091DE                     l10515:
 20687  0091DE  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
 20688  0091E0  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
 20689  0091E2  6E0D               	movwf	__div_to_l_@cntr^0,c
 20690  0091E4  500D               	movf	__div_to_l_@cntr^0,w,c
 20691  0091E6  A4D8               	btfss	status,2,c
 20692  0091E8  EFF8  F048         	goto	u10201
 20693  0091EC  EFFA  F048         	goto	u10200
 20694  0091F0                     u10201:
 20695  0091F0  EFFC  F048         	goto	l10521
 20696  0091F4                     u10200:
 20697  0091F4  EFE5  F048         	goto	l10511
 20698  0091F8                     l10521:
 20699  0091F8  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
 20700  0091FA  0EFF               	movlw	255
 20701  0091FC  1601               	andwf	__div_to_l_@f1^0,f,c
 20702  0091FE  0EFF               	movlw	255
 20703  009200  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
 20704  009202  0EFF               	movlw	255
 20705  009204  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
 20706  009206  0E00               	movlw	0
 20707  009208  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
 20708  00920A  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
 20709  00920C  0EFF               	movlw	255
 20710  00920E  1605               	andwf	__div_to_l_@f2^0,f,c
 20711  009210  0EFF               	movlw	255
 20712  009212  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
 20713  009214  0EFF               	movlw	255
 20714  009216  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
 20715  009218  0E00               	movlw	0
 20716  00921A  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
 20717  00921C  0E00               	movlw	0
 20718  00921E  6E09               	movwf	__div_to_l_@quot^0,c
 20719  009220  0E00               	movlw	0
 20720  009222  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
 20721  009224  0E00               	movlw	0
 20722  009226  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
 20723  009228  0E00               	movlw	0
 20724  00922A  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
 20725  00922C  0E7F               	movlw	127
 20726  00922E  5E0E               	subwf	__div_to_l_@exp1^0,f,c
 20727  009230  500D               	movf	__div_to_l_@cntr^0,w,c
 20728  009232  0FA0               	addlw	160
 20729  009234  5E0E               	subwf	__div_to_l_@exp1^0,f,c
 20730  009236  0E20               	movlw	32
 20731  009238  6E0D               	movwf	__div_to_l_@cntr^0,c
 20732  00923A                     l10535:
 20733  00923A  90D8               	bcf	status,0,c
 20734  00923C  3609               	rlcf	__div_to_l_@quot^0,f,c
 20735  00923E  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
 20736  009240  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
 20737  009242  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
 20738  009244  5005               	movf	__div_to_l_@f2^0,w,c
 20739  009246  5C01               	subwf	__div_to_l_@f1^0,w,c
 20740  009248  5006               	movf	(__div_to_l_@f2+1)^0,w,c
 20741  00924A  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
 20742  00924C  5007               	movf	(__div_to_l_@f2+2)^0,w,c
 20743  00924E  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
 20744  009250  5008               	movf	(__div_to_l_@f2+3)^0,w,c
 20745  009252  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
 20746  009254  A0D8               	btfss	status,0,c
 20747  009256  EF2F  F049         	goto	u10211
 20748  00925A  EF31  F049         	goto	u10210
 20749  00925E                     u10211:
 20750  00925E  EF3A  F049         	goto	l10543
 20751  009262                     u10210:
 20752  009262  5005               	movf	__div_to_l_@f2^0,w,c
 20753  009264  5E01               	subwf	__div_to_l_@f1^0,f,c
 20754  009266  5006               	movf	(__div_to_l_@f2+1)^0,w,c
 20755  009268  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
 20756  00926A  5007               	movf	(__div_to_l_@f2+2)^0,w,c
 20757  00926C  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
 20758  00926E  5008               	movf	(__div_to_l_@f2+3)^0,w,c
 20759  009270  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
 20760  009272  8009               	bsf	__div_to_l_@quot^0,0,c
 20761  009274                     l10543:
 20762  009274  90D8               	bcf	status,0,c
 20763  009276  3601               	rlcf	__div_to_l_@f1^0,f,c
 20764  009278  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
 20765  00927A  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
 20766  00927C  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
 20767  00927E  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
 20768  009280  EF1D  F049         	goto	l10535
 20769  009284  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
 20770  009286  EF49  F049         	goto	u10220
 20771  00928A  EF47  F049         	goto	u10221
 20772  00928E                     u10221:
 20773  00928E  EF5F  F049         	goto	l10559
 20774  009292                     u10220:
 20775  009292  500E               	movf	__div_to_l_@exp1^0,w,c
 20776  009294  0A80               	xorlw	128
 20777  009296  0F9F               	addlw	159
 20778  009298  B0D8               	btfsc	status,0,c
 20779  00929A  EF51  F049         	goto	u10231
 20780  00929E  EF53  F049         	goto	u10230
 20781  0092A2                     u10231:
 20782  0092A2  EF55  F049         	goto	l10555
 20783  0092A6                     u10230:
 20784  0092A6  EFE5  F048         	goto	l10511
 20785  0092AA                     l10555:
 20786  0092AA  90D8               	bcf	status,0,c
 20787  0092AC  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
 20788  0092AE  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
 20789  0092B0  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
 20790  0092B2  3209               	rrcf	__div_to_l_@quot^0,f,c
 20791  0092B4  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
 20792  0092B6  EF55  F049         	goto	l10555
 20793  0092BA  EF77  F049         	goto	l2522
 20794  0092BE                     l10559:
 20795  0092BE  0E1F               	movlw	31
 20796  0092C0  640E               	cpfsgt	__div_to_l_@exp1^0,c
 20797  0092C2  EF65  F049         	goto	u10241
 20798  0092C6  EF67  F049         	goto	u10240
 20799  0092CA                     u10241:
 20800  0092CA  EF6F  F049         	goto	l10567
 20801  0092CE                     u10240:
 20802  0092CE  EFE5  F048         	goto	l10511
 20803  0092D2                     l10565:
 20804  0092D2  90D8               	bcf	status,0,c
 20805  0092D4  3609               	rlcf	__div_to_l_@quot^0,f,c
 20806  0092D6  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
 20807  0092D8  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
 20808  0092DA  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
 20809  0092DC  060E               	decf	__div_to_l_@exp1^0,f,c
 20810  0092DE                     l10567:
 20811  0092DE  500E               	movf	__div_to_l_@exp1^0,w,c
 20812  0092E0  A4D8               	btfss	status,2,c
 20813  0092E2  EF75  F049         	goto	u10251
 20814  0092E6  EF77  F049         	goto	u10250
 20815  0092EA                     u10251:
 20816  0092EA  EF69  F049         	goto	l10565
 20817  0092EE                     u10250:
 20818  0092EE                     l2522:
 20819  0092EE  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
 20820  0092F2  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 20821  0092F6  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 20822  0092FA  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 20823  0092FE                     l2513:
 20824  0092FE  0012               	return		;funcret
 20825  009300                     __end_of__div_to_l_:
 20826                           	callstack 0
 20827                           
 20828 ;; *************** function ___xxtofl *****************
 20829 ;; Defined at:
 20830 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
 20831 ;; Parameters:    Size  Location     Type
 20832 ;;  sign            1    wreg     unsigned char 
 20833 ;;  val             4   24[COMRAM] long 
 20834 ;; Auto vars:     Size  Location     Type
 20835 ;;  sign            1   32[COMRAM] unsigned char 
 20836 ;;  arg             4   34[COMRAM] unsigned long 
 20837 ;;  exp             1   33[COMRAM] unsigned char 
 20838 ;; Return value:  Size  Location     Type
 20839 ;;                  4   24[COMRAM] unsigned char 
 20840 ;; Registers used:
 20841 ;;		wreg, status,2, status,0
 20842 ;; Tracked objects:
 20843 ;;		On entry : 0/0
 20844 ;;		On exit  : 0/0
 20845 ;;		Unchanged: 0/0
 20846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20848 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20850 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20851 ;;Total ram usage:       14 bytes
 20852 ;; Hardware stack levels used: 1
 20853 ;; Hardware stack levels required when called: 1
 20854 ;; This function calls:
 20855 ;;		Nothing
 20856 ;; This function is called by:
 20857 ;;		__atof
 20858 ;;		_sht3x_measure_read
 20859 ;;		_auto_calib_apply
 20860 ;;		_ADCto_uVoltage
 20861 ;;		_sprintf
 20862 ;;		_trunc
 20863 ;;		_window_moving_average_recursion
 20864 ;; This function uses a non-reentrant model
 20865 ;;
 20866                           
 20867                           	psect	text95
 20868  008182                     __ptext95:
 20869                           	callstack 0
 20870  008182                     ___xxtofl:
 20871                           	callstack 27
 20872                           
 20873                           ;incstack = 0
 20874                           ;___xxtofl@sign stored from wreg
 20875  008182  6E21               	movwf	___xxtofl@sign^0,c
 20876  008184  5021               	movf	___xxtofl@sign^0,w,c
 20877  008186  B4D8               	btfsc	status,2,c
 20878  008188  EFC8  F040         	goto	u19741
 20879  00818C  EFCA  F040         	goto	u19740
 20880  008190                     u19741:
 20881  008190  EFEC  F040         	goto	l2936
 20882  008194                     u19740:
 20883  008194  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
 20884  008196  EFD1  F040         	goto	u19750
 20885  00819A  EFCF  F040         	goto	u19751
 20886  00819E                     u19751:
 20887  00819E  EFEC  F040         	goto	l2936
 20888  0081A2                     u19750:
 20889  0081A2  C019  F01D         	movff	___xxtofl@val,??___xxtofl
 20890  0081A6  C01A  F01E         	movff	___xxtofl@val+1,??___xxtofl+1
 20891  0081AA  C01B  F01F         	movff	___xxtofl@val+2,??___xxtofl+2
 20892  0081AE  C01C  F020         	movff	___xxtofl@val+3,??___xxtofl+3
 20893  0081B2  1E1D               	comf	??___xxtofl^0,f,c
 20894  0081B4  1E1E               	comf	(??___xxtofl+1)^0,f,c
 20895  0081B6  1E1F               	comf	(??___xxtofl+2)^0,f,c
 20896  0081B8  1E20               	comf	(??___xxtofl+3)^0,f,c
 20897  0081BA  2A1D               	incf	??___xxtofl^0,f,c
 20898  0081BC  0E00               	movlw	0
 20899  0081BE  221E               	addwfc	(??___xxtofl+1)^0,f,c
 20900  0081C0  221F               	addwfc	(??___xxtofl+2)^0,f,c
 20901  0081C2  2220               	addwfc	(??___xxtofl+3)^0,f,c
 20902  0081C4  C01D  F023         	movff	??___xxtofl,___xxtofl@arg
 20903  0081C8  C01E  F024         	movff	??___xxtofl+1,___xxtofl@arg+1
 20904  0081CC  C01F  F025         	movff	??___xxtofl+2,___xxtofl@arg+2
 20905  0081D0  C020  F026         	movff	??___xxtofl+3,___xxtofl@arg+3
 20906  0081D4  EFF4  F040         	goto	l18009
 20907  0081D8                     l2936:
 20908  0081D8  C019  F023         	movff	___xxtofl@val,___xxtofl@arg
 20909  0081DC  C01A  F024         	movff	___xxtofl@val+1,___xxtofl@arg+1
 20910  0081E0  C01B  F025         	movff	___xxtofl@val+2,___xxtofl@arg+2
 20911  0081E4  C01C  F026         	movff	___xxtofl@val+3,___xxtofl@arg+3
 20912  0081E8                     l18009:
 20913  0081E8  5019               	movf	___xxtofl@val^0,w,c
 20914  0081EA  101A               	iorwf	(___xxtofl@val+1)^0,w,c
 20915  0081EC  101B               	iorwf	(___xxtofl@val+2)^0,w,c
 20916  0081EE  101C               	iorwf	(___xxtofl@val+3)^0,w,c
 20917  0081F0  A4D8               	btfss	status,2,c
 20918  0081F2  EFFD  F040         	goto	u19761
 20919  0081F6  EFFF  F040         	goto	u19760
 20920  0081FA                     u19761:
 20921  0081FA  EF09  F041         	goto	l18015
 20922  0081FE                     u19760:
 20923  0081FE  0E00               	movlw	0
 20924  008200  6E19               	movwf	?___xxtofl^0,c
 20925  008202  0E00               	movlw	0
 20926  008204  6E1A               	movwf	(?___xxtofl+1)^0,c
 20927  008206  0E00               	movlw	0
 20928  008208  6E1B               	movwf	(?___xxtofl+2)^0,c
 20929  00820A  0E00               	movlw	0
 20930  00820C  6E1C               	movwf	(?___xxtofl+3)^0,c
 20931  00820E  EF9A  F041         	goto	l2939
 20932  008212                     l18015:
 20933  008212  0E96               	movlw	150
 20934  008214  6E22               	movwf	___xxtofl@exp^0,c
 20935  008216  EF13  F041         	goto	l18019
 20936  00821A                     l18017:
 20937  00821A  2A22               	incf	___xxtofl@exp^0,f,c
 20938  00821C  90D8               	bcf	status,0,c
 20939  00821E  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
 20940  008220  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
 20941  008222  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
 20942  008224  3223               	rrcf	___xxtofl@arg^0,f,c
 20943  008226                     l18019:
 20944  008226  0E00               	movlw	0
 20945  008228  1423               	andwf	___xxtofl@arg^0,w,c
 20946  00822A  6E1D               	movwf	??___xxtofl^0,c
 20947  00822C  0E00               	movlw	0
 20948  00822E  1424               	andwf	(___xxtofl@arg+1)^0,w,c
 20949  008230  6E1E               	movwf	(??___xxtofl+1)^0,c
 20950  008232  0E00               	movlw	0
 20951  008234  1425               	andwf	(___xxtofl@arg+2)^0,w,c
 20952  008236  6E1F               	movwf	(??___xxtofl+2)^0,c
 20953  008238  0EFE               	movlw	254
 20954  00823A  1426               	andwf	(___xxtofl@arg+3)^0,w,c
 20955  00823C  6E20               	movwf	(??___xxtofl+3)^0,c
 20956  00823E  501D               	movf	??___xxtofl^0,w,c
 20957  008240  101E               	iorwf	(??___xxtofl+1)^0,w,c
 20958  008242  101F               	iorwf	(??___xxtofl+2)^0,w,c
 20959  008244  1020               	iorwf	(??___xxtofl+3)^0,w,c
 20960  008246  A4D8               	btfss	status,2,c
 20961  008248  EF28  F041         	goto	u19771
 20962  00824C  EF2A  F041         	goto	u19770
 20963  008250                     u19771:
 20964  008250  EF0D  F041         	goto	l18017
 20965  008254                     u19770:
 20966  008254  EF38  F041         	goto	l2943
 20967  008258                     l18021:
 20968  008258  2A22               	incf	___xxtofl@exp^0,f,c
 20969  00825A  0E01               	movlw	1
 20970  00825C  2623               	addwf	___xxtofl@arg^0,f,c
 20971  00825E  0E00               	movlw	0
 20972  008260  2224               	addwfc	(___xxtofl@arg+1)^0,f,c
 20973  008262  2225               	addwfc	(___xxtofl@arg+2)^0,f,c
 20974  008264  2226               	addwfc	(___xxtofl@arg+3)^0,f,c
 20975  008266  90D8               	bcf	status,0,c
 20976  008268  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
 20977  00826A  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
 20978  00826C  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
 20979  00826E  3223               	rrcf	___xxtofl@arg^0,f,c
 20980  008270                     l2943:
 20981  008270  0E00               	movlw	0
 20982  008272  1423               	andwf	___xxtofl@arg^0,w,c
 20983  008274  6E1D               	movwf	??___xxtofl^0,c
 20984  008276  0E00               	movlw	0
 20985  008278  1424               	andwf	(___xxtofl@arg+1)^0,w,c
 20986  00827A  6E1E               	movwf	(??___xxtofl+1)^0,c
 20987  00827C  0E00               	movlw	0
 20988  00827E  1425               	andwf	(___xxtofl@arg+2)^0,w,c
 20989  008280  6E1F               	movwf	(??___xxtofl+2)^0,c
 20990  008282  0EFF               	movlw	255
 20991  008284  1426               	andwf	(___xxtofl@arg+3)^0,w,c
 20992  008286  6E20               	movwf	(??___xxtofl+3)^0,c
 20993  008288  501D               	movf	??___xxtofl^0,w,c
 20994  00828A  101E               	iorwf	(??___xxtofl+1)^0,w,c
 20995  00828C  101F               	iorwf	(??___xxtofl+2)^0,w,c
 20996  00828E  1020               	iorwf	(??___xxtofl+3)^0,w,c
 20997  008290  A4D8               	btfss	status,2,c
 20998  008292  EF4D  F041         	goto	u19781
 20999  008296  EF4F  F041         	goto	u19780
 21000  00829A                     u19781:
 21001  00829A  EF2C  F041         	goto	l18021
 21002  00829E                     u19780:
 21003  00829E  EF57  F041         	goto	l18029
 21004  0082A2                     l18027:
 21005  0082A2  0622               	decf	___xxtofl@exp^0,f,c
 21006  0082A4  90D8               	bcf	status,0,c
 21007  0082A6  3623               	rlcf	___xxtofl@arg^0,f,c
 21008  0082A8  3624               	rlcf	(___xxtofl@arg+1)^0,f,c
 21009  0082AA  3625               	rlcf	(___xxtofl@arg+2)^0,f,c
 21010  0082AC  3626               	rlcf	(___xxtofl@arg+3)^0,f,c
 21011  0082AE                     l18029:
 21012  0082AE  BE25               	btfsc	(___xxtofl@arg+2)^0,7,c
 21013  0082B0  EF5C  F041         	goto	u19791
 21014  0082B4  EF5E  F041         	goto	u19790
 21015  0082B8                     u19791:
 21016  0082B8  EF66  F041         	goto	l2950
 21017  0082BC                     u19790:
 21018  0082BC  0E02               	movlw	2
 21019  0082BE  6022               	cpfslt	___xxtofl@exp^0,c
 21020  0082C0  EF64  F041         	goto	u19801
 21021  0082C4  EF66  F041         	goto	u19800
 21022  0082C8                     u19801:
 21023  0082C8  EF51  F041         	goto	l18027
 21024  0082CC                     u19800:
 21025  0082CC                     l2950:
 21026  0082CC  B022               	btfsc	___xxtofl@exp^0,0,c
 21027  0082CE  EF6B  F041         	goto	u19811
 21028  0082D2  EF6D  F041         	goto	u19810
 21029  0082D6                     u19811:
 21030  0082D6  EF6E  F041         	goto	l18035
 21031  0082DA                     u19810:
 21032  0082DA  9E25               	bcf	(___xxtofl@arg+2)^0,7,c
 21033  0082DC                     l18035:
 21034  0082DC  90D8               	bcf	status,0,c
 21035  0082DE  3222               	rrcf	___xxtofl@exp^0,f,c
 21036  0082E0  C022  F01D         	movff	___xxtofl@exp,??___xxtofl
 21037  0082E4  6A1E               	clrf	(??___xxtofl+1)^0,c
 21038  0082E6  6A1F               	clrf	(??___xxtofl+2)^0,c
 21039  0082E8  6A20               	clrf	(??___xxtofl+3)^0,c
 21040  0082EA  C01D  F020         	movff	??___xxtofl,??___xxtofl+3
 21041  0082EE  6A1F               	clrf	(??___xxtofl+2)^0,c
 21042  0082F0  6A1E               	clrf	(??___xxtofl+1)^0,c
 21043  0082F2  6A1D               	clrf	??___xxtofl^0,c
 21044  0082F4  501D               	movf	??___xxtofl^0,w,c
 21045  0082F6  1223               	iorwf	___xxtofl@arg^0,f,c
 21046  0082F8  501E               	movf	(??___xxtofl+1)^0,w,c
 21047  0082FA  1224               	iorwf	(___xxtofl@arg+1)^0,f,c
 21048  0082FC  501F               	movf	(??___xxtofl+2)^0,w,c
 21049  0082FE  1225               	iorwf	(___xxtofl@arg+2)^0,f,c
 21050  008300  5020               	movf	(??___xxtofl+3)^0,w,c
 21051  008302  1226               	iorwf	(___xxtofl@arg+3)^0,f,c
 21052  008304  5021               	movf	___xxtofl@sign^0,w,c
 21053  008306  B4D8               	btfsc	status,2,c
 21054  008308  EF88  F041         	goto	u19821
 21055  00830C  EF8A  F041         	goto	u19820
 21056  008310                     u19821:
 21057  008310  EF92  F041         	goto	l18045
 21058  008314                     u19820:
 21059  008314  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
 21060  008316  EF91  F041         	goto	u19830
 21061  00831A  EF8F  F041         	goto	u19831
 21062  00831E                     u19831:
 21063  00831E  EF92  F041         	goto	l18045
 21064  008322                     u19830:
 21065  008322  8E26               	bsf	(___xxtofl@arg+3)^0,7,c
 21066  008324                     l18045:
 21067  008324  C023  F019         	movff	___xxtofl@arg,?___xxtofl
 21068  008328  C024  F01A         	movff	___xxtofl@arg+1,?___xxtofl+1
 21069  00832C  C025  F01B         	movff	___xxtofl@arg+2,?___xxtofl+2
 21070  008330  C026  F01C         	movff	___xxtofl@arg+3,?___xxtofl+3
 21071  008334                     l2939:
 21072  008334  0012               	return		;funcret
 21073  008336                     __end_of___xxtofl:
 21074                           	callstack 0
 21075                           
 21076 ;; *************** function ___llmod *****************
 21077 ;; Defined at:
 21078 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
 21079 ;; Parameters:    Size  Location     Type
 21080 ;;  dividend        4    0[COMRAM] unsigned long 
 21081 ;;  divisor         4    4[COMRAM] unsigned long 
 21082 ;; Auto vars:     Size  Location     Type
 21083 ;;  counter         1    8[COMRAM] unsigned char 
 21084 ;; Return value:  Size  Location     Type
 21085 ;;                  4    0[COMRAM] unsigned long 
 21086 ;; Registers used:
 21087 ;;		wreg, status,2, status,0
 21088 ;; Tracked objects:
 21089 ;;		On entry : 0/0
 21090 ;;		On exit  : 0/0
 21091 ;;		Unchanged: 0/0
 21092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21093 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21096 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21097 ;;Total ram usage:        9 bytes
 21098 ;; Hardware stack levels used: 1
 21099 ;; Hardware stack levels required when called: 1
 21100 ;; This function calls:
 21101 ;;		Nothing
 21102 ;; This function is called by:
 21103 ;;		_sprintf
 21104 ;; This function uses a non-reentrant model
 21105 ;;
 21106                           
 21107                           	psect	text96
 21108  00BE40                     __ptext96:
 21109                           	callstack 0
 21110  00BE40                     ___llmod:
 21111                           	callstack 25
 21112  00BE40  5005               	movf	___llmod@divisor^0,w,c
 21113  00BE42  1006               	iorwf	(___llmod@divisor+1)^0,w,c
 21114  00BE44  1007               	iorwf	(___llmod@divisor+2)^0,w,c
 21115  00BE46  1008               	iorwf	(___llmod@divisor+3)^0,w,c
 21116  00BE48  B4D8               	btfsc	status,2,c
 21117  00BE4A  EF29  F05F         	goto	u10421
 21118  00BE4E  EF2B  F05F         	goto	u10420
 21119  00BE52                     u10421:
 21120  00BE52  EF5B  F05F         	goto	l2701
 21121  00BE56                     u10420:
 21122  00BE56  0E01               	movlw	1
 21123  00BE58  6E09               	movwf	___llmod@counter^0,c
 21124  00BE5A  EF35  F05F         	goto	l10677
 21125  00BE5E                     l10675:
 21126  00BE5E  90D8               	bcf	status,0,c
 21127  00BE60  3605               	rlcf	___llmod@divisor^0,f,c
 21128  00BE62  3606               	rlcf	(___llmod@divisor+1)^0,f,c
 21129  00BE64  3607               	rlcf	(___llmod@divisor+2)^0,f,c
 21130  00BE66  3608               	rlcf	(___llmod@divisor+3)^0,f,c
 21131  00BE68  2A09               	incf	___llmod@counter^0,f,c
 21132  00BE6A                     l10677:
 21133  00BE6A  AE08               	btfss	(___llmod@divisor+3)^0,7,c
 21134  00BE6C  EF3A  F05F         	goto	u10431
 21135  00BE70  EF3C  F05F         	goto	u10430
 21136  00BE74                     u10431:
 21137  00BE74  EF2F  F05F         	goto	l10675
 21138  00BE78                     u10430:
 21139  00BE78                     l10679:
 21140  00BE78  5005               	movf	___llmod@divisor^0,w,c
 21141  00BE7A  5C01               	subwf	___llmod@dividend^0,w,c
 21142  00BE7C  5006               	movf	(___llmod@divisor+1)^0,w,c
 21143  00BE7E  5802               	subwfb	(___llmod@dividend+1)^0,w,c
 21144  00BE80  5007               	movf	(___llmod@divisor+2)^0,w,c
 21145  00BE82  5803               	subwfb	(___llmod@dividend+2)^0,w,c
 21146  00BE84  5008               	movf	(___llmod@divisor+3)^0,w,c
 21147  00BE86  5804               	subwfb	(___llmod@dividend+3)^0,w,c
 21148  00BE88  A0D8               	btfss	status,0,c
 21149  00BE8A  EF49  F05F         	goto	u10441
 21150  00BE8E  EF4B  F05F         	goto	u10440
 21151  00BE92                     u10441:
 21152  00BE92  EF53  F05F         	goto	l10683
 21153  00BE96                     u10440:
 21154  00BE96  5005               	movf	___llmod@divisor^0,w,c
 21155  00BE98  5E01               	subwf	___llmod@dividend^0,f,c
 21156  00BE9A  5006               	movf	(___llmod@divisor+1)^0,w,c
 21157  00BE9C  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
 21158  00BE9E  5007               	movf	(___llmod@divisor+2)^0,w,c
 21159  00BEA0  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
 21160  00BEA2  5008               	movf	(___llmod@divisor+3)^0,w,c
 21161  00BEA4  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
 21162  00BEA6                     l10683:
 21163  00BEA6  90D8               	bcf	status,0,c
 21164  00BEA8  3208               	rrcf	(___llmod@divisor+3)^0,f,c
 21165  00BEAA  3207               	rrcf	(___llmod@divisor+2)^0,f,c
 21166  00BEAC  3206               	rrcf	(___llmod@divisor+1)^0,f,c
 21167  00BEAE  3205               	rrcf	___llmod@divisor^0,f,c
 21168  00BEB0  2E09               	decfsz	___llmod@counter^0,f,c
 21169  00BEB2  EF3C  F05F         	goto	l10679
 21170  00BEB6                     l2701:
 21171  00BEB6  C001  F001         	movff	___llmod@dividend,?___llmod
 21172  00BEBA  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 21173  00BEBE  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 21174  00BEC2  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 21175  00BEC6  0012               	return		;funcret
 21176  00BEC8                     __end_of___llmod:
 21177                           	callstack 0
 21178                           
 21179 ;; *************** function ___lldiv *****************
 21180 ;; Defined at:
 21181 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
 21182 ;; Parameters:    Size  Location     Type
 21183 ;;  dividend        4    0[COMRAM] unsigned long 
 21184 ;;  divisor         4    4[COMRAM] unsigned long 
 21185 ;; Auto vars:     Size  Location     Type
 21186 ;;  quotient        4    8[COMRAM] unsigned long 
 21187 ;;  counter         1   12[COMRAM] unsigned char 
 21188 ;; Return value:  Size  Location     Type
 21189 ;;                  4    0[COMRAM] unsigned long 
 21190 ;; Registers used:
 21191 ;;		wreg, status,2, status,0
 21192 ;; Tracked objects:
 21193 ;;		On entry : 0/0
 21194 ;;		On exit  : 0/0
 21195 ;;		Unchanged: 0/0
 21196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21197 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21198 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21200 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21201 ;;Total ram usage:       13 bytes
 21202 ;; Hardware stack levels used: 1
 21203 ;; Hardware stack levels required when called: 1
 21204 ;; This function calls:
 21205 ;;		Nothing
 21206 ;; This function is called by:
 21207 ;;		_sprintf
 21208 ;; This function uses a non-reentrant model
 21209 ;;
 21210                           
 21211                           	psect	text97
 21212  00B74A                     __ptext97:
 21213                           	callstack 0
 21214  00B74A                     ___lldiv:
 21215                           	callstack 25
 21216  00B74A  0E00               	movlw	0
 21217  00B74C  6E09               	movwf	___lldiv@quotient^0,c
 21218  00B74E  0E00               	movlw	0
 21219  00B750  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 21220  00B752  0E00               	movlw	0
 21221  00B754  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 21222  00B756  0E00               	movlw	0
 21223  00B758  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 21224  00B75A  5005               	movf	___lldiv@divisor^0,w,c
 21225  00B75C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 21226  00B75E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 21227  00B760  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 21228  00B762  B4D8               	btfsc	status,2,c
 21229  00B764  EFB6  F05B         	goto	u10261
 21230  00B768  EFB8  F05B         	goto	u10260
 21231  00B76C                     u10261:
 21232  00B76C  EFEE  F05B         	goto	l2286
 21233  00B770                     u10260:
 21234  00B770  0E01               	movlw	1
 21235  00B772  6E0D               	movwf	___lldiv@counter^0,c
 21236  00B774  EFC2  F05B         	goto	l10577
 21237  00B778                     l10575:
 21238  00B778  90D8               	bcf	status,0,c
 21239  00B77A  3605               	rlcf	___lldiv@divisor^0,f,c
 21240  00B77C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 21241  00B77E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 21242  00B780  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 21243  00B782  2A0D               	incf	___lldiv@counter^0,f,c
 21244  00B784                     l10577:
 21245  00B784  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 21246  00B786  EFC7  F05B         	goto	u10271
 21247  00B78A  EFC9  F05B         	goto	u10270
 21248  00B78E                     u10271:
 21249  00B78E  EFBC  F05B         	goto	l10575
 21250  00B792                     u10270:
 21251  00B792                     l10579:
 21252  00B792  90D8               	bcf	status,0,c
 21253  00B794  3609               	rlcf	___lldiv@quotient^0,f,c
 21254  00B796  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 21255  00B798  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 21256  00B79A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 21257  00B79C  5005               	movf	___lldiv@divisor^0,w,c
 21258  00B79E  5C01               	subwf	___lldiv@dividend^0,w,c
 21259  00B7A0  5006               	movf	(___lldiv@divisor+1)^0,w,c
 21260  00B7A2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 21261  00B7A4  5007               	movf	(___lldiv@divisor+2)^0,w,c
 21262  00B7A6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 21263  00B7A8  5008               	movf	(___lldiv@divisor+3)^0,w,c
 21264  00B7AA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 21265  00B7AC  A0D8               	btfss	status,0,c
 21266  00B7AE  EFDB  F05B         	goto	u10281
 21267  00B7B2  EFDD  F05B         	goto	u10280
 21268  00B7B6                     u10281:
 21269  00B7B6  EFE6  F05B         	goto	l10587
 21270  00B7BA                     u10280:
 21271  00B7BA  5005               	movf	___lldiv@divisor^0,w,c
 21272  00B7BC  5E01               	subwf	___lldiv@dividend^0,f,c
 21273  00B7BE  5006               	movf	(___lldiv@divisor+1)^0,w,c
 21274  00B7C0  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 21275  00B7C2  5007               	movf	(___lldiv@divisor+2)^0,w,c
 21276  00B7C4  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 21277  00B7C6  5008               	movf	(___lldiv@divisor+3)^0,w,c
 21278  00B7C8  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 21279  00B7CA  8009               	bsf	___lldiv@quotient^0,0,c
 21280  00B7CC                     l10587:
 21281  00B7CC  90D8               	bcf	status,0,c
 21282  00B7CE  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 21283  00B7D0  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 21284  00B7D2  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 21285  00B7D4  3205               	rrcf	___lldiv@divisor^0,f,c
 21286  00B7D6  2E0D               	decfsz	___lldiv@counter^0,f,c
 21287  00B7D8  EFC9  F05B         	goto	l10579
 21288  00B7DC                     l2286:
 21289  00B7DC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 21290  00B7E0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 21291  00B7E4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 21292  00B7E8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 21293  00B7EC  0012               	return		;funcret
 21294  00B7EE                     __end_of___lldiv:
 21295                           	callstack 0
 21296                           
 21297 ;; *************** function ___fltol *****************
 21298 ;; Defined at:
 21299 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
 21300 ;; Parameters:    Size  Location     Type
 21301 ;;  f1              4   14[COMRAM] unsigned long 
 21302 ;; Auto vars:     Size  Location     Type
 21303 ;;  exp1            1   23[COMRAM] unsigned char 
 21304 ;;  sign1           1   22[COMRAM] unsigned char 
 21305 ;; Return value:  Size  Location     Type
 21306 ;;                  4   14[COMRAM] long 
 21307 ;; Registers used:
 21308 ;;		wreg, status,2, status,0
 21309 ;; Tracked objects:
 21310 ;;		On entry : 0/0
 21311 ;;		On exit  : 0/0
 21312 ;;		Unchanged: 0/0
 21313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21316 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21317 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21318 ;;Total ram usage:       10 bytes
 21319 ;; Hardware stack levels used: 1
 21320 ;; Hardware stack levels required when called: 1
 21321 ;; This function calls:
 21322 ;;		Nothing
 21323 ;; This function is called by:
 21324 ;;		_sprintf
 21325 ;;		_trunc
 21326 ;;		_calc_raw_temperature
 21327 ;;		_calc_raw_humidity
 21328 ;; This function uses a non-reentrant model
 21329 ;;
 21330                           
 21331                           	psect	text98
 21332  00A1D2                     __ptext98:
 21333                           	callstack 0
 21334  00A1D2                     ___fltol:
 21335                           	callstack 25
 21336  00A1D2  3411               	rlcf	(___fltol@f1+2)^0,w,c
 21337  00A1D4  3412               	rlcf	(___fltol@f1+3)^0,w,c
 21338  00A1D6  6E18               	movwf	___fltol@exp1^0,c
 21339  00A1D8  5018               	movf	___fltol@exp1^0,w,c
 21340  00A1DA  A4D8               	btfss	status,2,c
 21341  00A1DC  EFF2  F050         	goto	u10351
 21342  00A1E0  EFF4  F050         	goto	u10350
 21343  00A1E4                     u10351:
 21344  00A1E4  EFFE  F050         	goto	l10633
 21345  00A1E8                     u10350:
 21346  00A1E8                     l10629:
 21347  00A1E8  0E00               	movlw	0
 21348  00A1EA  6E0F               	movwf	?___fltol^0,c
 21349  00A1EC  0E00               	movlw	0
 21350  00A1EE  6E10               	movwf	(?___fltol+1)^0,c
 21351  00A1F0  0E00               	movlw	0
 21352  00A1F2  6E11               	movwf	(?___fltol+2)^0,c
 21353  00A1F4  0E00               	movlw	0
 21354  00A1F6  6E12               	movwf	(?___fltol+3)^0,c
 21355  00A1F8  EF6B  F051         	goto	l2565
 21356  00A1FC                     l10633:
 21357  00A1FC  C00F  F013         	movff	___fltol@f1,??___fltol
 21358  00A200  C010  F014         	movff	___fltol@f1+1,??___fltol+1
 21359  00A204  C011  F015         	movff	___fltol@f1+2,??___fltol+2
 21360  00A208  C012  F016         	movff	___fltol@f1+3,??___fltol+3
 21361  00A20C  0E20               	movlw	32
 21362  00A20E  EF0E  F051         	goto	u10360
 21363  00A212                     u10365:
 21364  00A212  90D8               	bcf	status,0,c
 21365  00A214  3216               	rrcf	(??___fltol+3)^0,f,c
 21366  00A216  3215               	rrcf	(??___fltol+2)^0,f,c
 21367  00A218  3214               	rrcf	(??___fltol+1)^0,f,c
 21368  00A21A  3213               	rrcf	??___fltol^0,f,c
 21369  00A21C                     u10360:
 21370  00A21C  2EE8               	decfsz	wreg,f,c
 21371  00A21E  EF09  F051         	goto	u10365
 21372  00A222  5013               	movf	??___fltol^0,w,c
 21373  00A224  6E17               	movwf	___fltol@sign1^0,c
 21374  00A226  8E11               	bsf	(___fltol@f1+2)^0,7,c
 21375  00A228  0EFF               	movlw	255
 21376  00A22A  160F               	andwf	___fltol@f1^0,f,c
 21377  00A22C  0EFF               	movlw	255
 21378  00A22E  1610               	andwf	(___fltol@f1+1)^0,f,c
 21379  00A230  0EFF               	movlw	255
 21380  00A232  1611               	andwf	(___fltol@f1+2)^0,f,c
 21381  00A234  0E00               	movlw	0
 21382  00A236  1612               	andwf	(___fltol@f1+3)^0,f,c
 21383  00A238  0E96               	movlw	150
 21384  00A23A  5E18               	subwf	___fltol@exp1^0,f,c
 21385  00A23C  BE18               	btfsc	___fltol@exp1^0,7,c
 21386  00A23E  EF25  F051         	goto	u10370
 21387  00A242  EF23  F051         	goto	u10371
 21388  00A246                     u10371:
 21389  00A246  EF3B  F051         	goto	l10653
 21390  00A24A                     u10370:
 21391  00A24A  5018               	movf	___fltol@exp1^0,w,c
 21392  00A24C  0A80               	xorlw	128
 21393  00A24E  0F97               	addlw	151
 21394  00A250  B0D8               	btfsc	status,0,c
 21395  00A252  EF2D  F051         	goto	u10381
 21396  00A256  EF2F  F051         	goto	u10380
 21397  00A25A                     u10381:
 21398  00A25A  EF31  F051         	goto	l10649
 21399  00A25E                     u10380:
 21400  00A25E  EFF4  F050         	goto	l10629
 21401  00A262                     l10649:
 21402  00A262  90D8               	bcf	status,0,c
 21403  00A264  3212               	rrcf	(___fltol@f1+3)^0,f,c
 21404  00A266  3211               	rrcf	(___fltol@f1+2)^0,f,c
 21405  00A268  3210               	rrcf	(___fltol@f1+1)^0,f,c
 21406  00A26A  320F               	rrcf	___fltol@f1^0,f,c
 21407  00A26C  3E18               	incfsz	___fltol@exp1^0,f,c
 21408  00A26E  EF31  F051         	goto	l10649
 21409  00A272  EF53  F051         	goto	l10663
 21410  00A276                     l10653:
 21411  00A276  0E1F               	movlw	31
 21412  00A278  6418               	cpfsgt	___fltol@exp1^0,c
 21413  00A27A  EF41  F051         	goto	u10391
 21414  00A27E  EF43  F051         	goto	u10390
 21415  00A282                     u10391:
 21416  00A282  EF4B  F051         	goto	l10661
 21417  00A286                     u10390:
 21418  00A286  EFF4  F050         	goto	l10629
 21419  00A28A                     l10659:
 21420  00A28A  90D8               	bcf	status,0,c
 21421  00A28C  360F               	rlcf	___fltol@f1^0,f,c
 21422  00A28E  3610               	rlcf	(___fltol@f1+1)^0,f,c
 21423  00A290  3611               	rlcf	(___fltol@f1+2)^0,f,c
 21424  00A292  3612               	rlcf	(___fltol@f1+3)^0,f,c
 21425  00A294  0618               	decf	___fltol@exp1^0,f,c
 21426  00A296                     l10661:
 21427  00A296  5018               	movf	___fltol@exp1^0,w,c
 21428  00A298  A4D8               	btfss	status,2,c
 21429  00A29A  EF51  F051         	goto	u10401
 21430  00A29E  EF53  F051         	goto	u10400
 21431  00A2A2                     u10401:
 21432  00A2A2  EF45  F051         	goto	l10659
 21433  00A2A6                     u10400:
 21434  00A2A6                     l10663:
 21435  00A2A6  5017               	movf	___fltol@sign1^0,w,c
 21436  00A2A8  B4D8               	btfsc	status,2,c
 21437  00A2AA  EF59  F051         	goto	u10411
 21438  00A2AE  EF5B  F051         	goto	u10410
 21439  00A2B2                     u10411:
 21440  00A2B2  EF63  F051         	goto	l10667
 21441  00A2B6                     u10410:
 21442  00A2B6  1E12               	comf	(___fltol@f1+3)^0,f,c
 21443  00A2B8  1E11               	comf	(___fltol@f1+2)^0,f,c
 21444  00A2BA  1E10               	comf	(___fltol@f1+1)^0,f,c
 21445  00A2BC  6C0F               	negf	___fltol@f1^0,c
 21446  00A2BE  0E00               	movlw	0
 21447  00A2C0  2210               	addwfc	(___fltol@f1+1)^0,f,c
 21448  00A2C2  2211               	addwfc	(___fltol@f1+2)^0,f,c
 21449  00A2C4  2212               	addwfc	(___fltol@f1+3)^0,f,c
 21450  00A2C6                     l10667:
 21451  00A2C6  C00F  F00F         	movff	___fltol@f1,?___fltol
 21452  00A2CA  C010  F010         	movff	___fltol@f1+1,?___fltol+1
 21453  00A2CE  C011  F011         	movff	___fltol@f1+2,?___fltol+2
 21454  00A2D2  C012  F012         	movff	___fltol@f1+3,?___fltol+3
 21455  00A2D6                     l2565:
 21456  00A2D6  0012               	return		;funcret
 21457  00A2D8                     __end_of___fltol:
 21458                           	callstack 0
 21459                           
 21460 ;; *************** function ___flsub *****************
 21461 ;; Defined at:
 21462 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 21463 ;; Parameters:    Size  Location     Type
 21464 ;;  b               4   54[COMRAM] long 
 21465 ;;  a               4   58[COMRAM] long 
 21466 ;; Auto vars:     Size  Location     Type
 21467 ;;		None
 21468 ;; Return value:  Size  Location     Type
 21469 ;;                  4   54[COMRAM] long 
 21470 ;; Registers used:
 21471 ;;		wreg, status,2, status,0, cstack
 21472 ;; Tracked objects:
 21473 ;;		On entry : 0/0
 21474 ;;		On exit  : 0/0
 21475 ;;		Unchanged: 0/0
 21476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21477 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21481 ;;Total ram usage:        8 bytes
 21482 ;; Hardware stack levels used: 1
 21483 ;; Hardware stack levels required when called: 2
 21484 ;; This function calls:
 21485 ;;		___fladd
 21486 ;; This function is called by:
 21487 ;;		_Linear_regression
 21488 ;;		_auto_calib_apply
 21489 ;;		_Kalman_updateEstimate
 21490 ;;		_gasSensor_calib
 21491 ;;		_sprintf
 21492 ;;		_fmod
 21493 ;;		_window_moving_average_recursion
 21494 ;; This function uses a non-reentrant model
 21495 ;;
 21496                           
 21497                           	psect	text99
 21498  00CE10                     __ptext99:
 21499                           	callstack 0
 21500  00CE10                     ___flsub:
 21501                           	callstack 26
 21502  00CE10  0E00               	movlw	0
 21503  00CE12  1A3B               	xorwf	___flsub@a^0,f,c
 21504  00CE14  0E00               	movlw	0
 21505  00CE16  1A3C               	xorwf	(___flsub@a+1)^0,f,c
 21506  00CE18  0E00               	movlw	0
 21507  00CE1A  1A3D               	xorwf	(___flsub@a+2)^0,f,c
 21508  00CE1C  0E80               	movlw	128
 21509  00CE1E  1A3E               	xorwf	(___flsub@a+3)^0,f,c
 21510  00CE20  C037  F027         	movff	___flsub@b,___fladd@b
 21511  00CE24  C038  F028         	movff	___flsub@b+1,___fladd@b+1
 21512  00CE28  C039  F029         	movff	___flsub@b+2,___fladd@b+2
 21513  00CE2C  C03A  F02A         	movff	___flsub@b+3,___fladd@b+3
 21514  00CE30  C03B  F02B         	movff	___flsub@a,___fladd@a
 21515  00CE34  C03C  F02C         	movff	___flsub@a+1,___fladd@a+1
 21516  00CE38  C03D  F02D         	movff	___flsub@a+2,___fladd@a+2
 21517  00CE3C  C03E  F02E         	movff	___flsub@a+3,___fladd@a+3
 21518  00CE40  EC13  F029         	call	___fladd	;wreg free
 21519  00CE44  C027  F037         	movff	?___fladd,?___flsub
 21520  00CE48  C028  F038         	movff	?___fladd+1,?___flsub+1
 21521  00CE4C  C029  F039         	movff	?___fladd+2,?___flsub+2
 21522  00CE50  C02A  F03A         	movff	?___fladd+3,?___flsub+3
 21523  00CE54  0012               	return		;funcret
 21524  00CE56                     __end_of___flsub:
 21525                           	callstack 0
 21526                           
 21527 ;; *************** function ___fladd *****************
 21528 ;; Defined at:
 21529 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 21530 ;; Parameters:    Size  Location     Type
 21531 ;;  b               4   38[COMRAM] long 
 21532 ;;  a               4   42[COMRAM] long 
 21533 ;; Auto vars:     Size  Location     Type
 21534 ;;  grs             1   53[COMRAM] unsigned char 
 21535 ;;  bexp            1   52[COMRAM] unsigned char 
 21536 ;;  aexp            1   51[COMRAM] unsigned char 
 21537 ;;  signs           1   50[COMRAM] unsigned char 
 21538 ;; Return value:  Size  Location     Type
 21539 ;;                  4   38[COMRAM] unsigned char 
 21540 ;; Registers used:
 21541 ;;		wreg, status,2, status,0
 21542 ;; Tracked objects:
 21543 ;;		On entry : 0/0
 21544 ;;		On exit  : 0/0
 21545 ;;		Unchanged: 0/0
 21546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21547 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21548 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21549 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21550 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21551 ;;Total ram usage:       16 bytes
 21552 ;; Hardware stack levels used: 1
 21553 ;; Hardware stack levels required when called: 1
 21554 ;; This function calls:
 21555 ;;		Nothing
 21556 ;; This function is called by:
 21557 ;;		__atof
 21558 ;;		_Linear_regression
 21559 ;;		_sensMeasure_temp_read
 21560 ;;		_sensMeasure_task
 21561 ;;		_Kalman_updateEstimate
 21562 ;;		_sensor_temp_fahrenheit
 21563 ;;		_gasSensor_calib
 21564 ;;		_sprintf
 21565 ;;		___asfladd
 21566 ;;		___flsub
 21567 ;;		_calc_raw_temperature
 21568 ;;		_sensMeasure_SNR
 21569 ;;		_window_moving_average_recursion
 21570 ;;		_sens_autoCalib_task
 21571 ;; This function uses a non-reentrant model
 21572 ;;
 21573                           
 21574                           	psect	text100
 21575  005226                     __ptext100:
 21576                           	callstack 0
 21577  005226                     ___fladd:
 21578                           	callstack 26
 21579  005226  502A               	movf	(___fladd@b+3)^0,w,c
 21580  005228  0B80               	andlw	128
 21581  00522A  6E33               	movwf	___fladd@signs^0,c
 21582  00522C  502A               	movf	(___fladd@b+3)^0,w,c
 21583  00522E  242A               	addwf	(___fladd@b+3)^0,w,c
 21584  005230  6E35               	movwf	___fladd@bexp^0,c
 21585  005232  AE29               	btfss	(___fladd@b+2)^0,7,c
 21586  005234  EF1E  F029         	goto	u8491
 21587  005238  EF20  F029         	goto	u8490
 21588  00523C                     u8491:
 21589  00523C  EF21  F029         	goto	l9473
 21590  005240                     u8490:
 21591  005240  8035               	bsf	___fladd@bexp^0,0,c
 21592  005242                     l9473:
 21593  005242  5035               	movf	___fladd@bexp^0,w,c
 21594  005244  B4D8               	btfsc	status,2,c
 21595  005246  EF27  F029         	goto	u8501
 21596  00524A  EF29  F029         	goto	u8500
 21597  00524E                     u8501:
 21598  00524E  EF3E  F029         	goto	l9483
 21599  005252                     u8500:
 21600  005252  2835               	incf	___fladd@bexp^0,w,c
 21601  005254  A4D8               	btfss	status,2,c
 21602  005256  EF2F  F029         	goto	u8511
 21603  00525A  EF31  F029         	goto	u8510
 21604  00525E                     u8511:
 21605  00525E  EF39  F029         	goto	l9479
 21606  005262                     u8510:
 21607  005262  0E00               	movlw	0
 21608  005264  6E27               	movwf	___fladd@b^0,c
 21609  005266  0E00               	movlw	0
 21610  005268  6E28               	movwf	(___fladd@b+1)^0,c
 21611  00526A  0E00               	movlw	0
 21612  00526C  6E29               	movwf	(___fladd@b+2)^0,c
 21613  00526E  0E00               	movlw	0
 21614  005270  6E2A               	movwf	(___fladd@b+3)^0,c
 21615  005272                     l9479:
 21616  005272  8E29               	bsf	(___fladd@b+2)^0,7,c
 21617  005274  0E00               	movlw	0
 21618  005276  6E2A               	movwf	(___fladd@b+3)^0,c
 21619  005278  EF46  F029         	goto	l9485
 21620  00527C                     l9483:
 21621  00527C  0E00               	movlw	0
 21622  00527E  6E27               	movwf	___fladd@b^0,c
 21623  005280  0E00               	movlw	0
 21624  005282  6E28               	movwf	(___fladd@b+1)^0,c
 21625  005284  0E00               	movlw	0
 21626  005286  6E29               	movwf	(___fladd@b+2)^0,c
 21627  005288  0E00               	movlw	0
 21628  00528A  6E2A               	movwf	(___fladd@b+3)^0,c
 21629  00528C                     l9485:
 21630  00528C  502E               	movf	(___fladd@a+3)^0,w,c
 21631  00528E  0B80               	andlw	128
 21632  005290  6E34               	movwf	___fladd@aexp^0,c
 21633  005292  5033               	movf	___fladd@signs^0,w,c
 21634  005294  1834               	xorwf	___fladd@aexp^0,w,c
 21635  005296  B4D8               	btfsc	status,2,c
 21636  005298  EF50  F029         	goto	u8521
 21637  00529C  EF52  F029         	goto	u8520
 21638  0052A0                     u8521:
 21639  0052A0  EF53  F029         	goto	l9491
 21640  0052A4                     u8520:
 21641  0052A4  8C33               	bsf	___fladd@signs^0,6,c
 21642  0052A6                     l9491:
 21643  0052A6  502E               	movf	(___fladd@a+3)^0,w,c
 21644  0052A8  242E               	addwf	(___fladd@a+3)^0,w,c
 21645  0052AA  6E34               	movwf	___fladd@aexp^0,c
 21646  0052AC  AE2D               	btfss	(___fladd@a+2)^0,7,c
 21647  0052AE  EF5B  F029         	goto	u8531
 21648  0052B2  EF5D  F029         	goto	u8530
 21649  0052B6                     u8531:
 21650  0052B6  EF5E  F029         	goto	l9497
 21651  0052BA                     u8530:
 21652  0052BA  8034               	bsf	___fladd@aexp^0,0,c
 21653  0052BC                     l9497:
 21654  0052BC  5034               	movf	___fladd@aexp^0,w,c
 21655  0052BE  B4D8               	btfsc	status,2,c
 21656  0052C0  EF64  F029         	goto	u8541
 21657  0052C4  EF66  F029         	goto	u8540
 21658  0052C8                     u8541:
 21659  0052C8  EF7B  F029         	goto	l9507
 21660  0052CC                     u8540:
 21661  0052CC  2834               	incf	___fladd@aexp^0,w,c
 21662  0052CE  A4D8               	btfss	status,2,c
 21663  0052D0  EF6C  F029         	goto	u8551
 21664  0052D4  EF6E  F029         	goto	u8550
 21665  0052D8                     u8551:
 21666  0052D8  EF76  F029         	goto	l9503
 21667  0052DC                     u8550:
 21668  0052DC  0E00               	movlw	0
 21669  0052DE  6E2B               	movwf	___fladd@a^0,c
 21670  0052E0  0E00               	movlw	0
 21671  0052E2  6E2C               	movwf	(___fladd@a+1)^0,c
 21672  0052E4  0E00               	movlw	0
 21673  0052E6  6E2D               	movwf	(___fladd@a+2)^0,c
 21674  0052E8  0E00               	movlw	0
 21675  0052EA  6E2E               	movwf	(___fladd@a+3)^0,c
 21676  0052EC                     l9503:
 21677  0052EC  8E2D               	bsf	(___fladd@a+2)^0,7,c
 21678  0052EE  0E00               	movlw	0
 21679  0052F0  6E2E               	movwf	(___fladd@a+3)^0,c
 21680  0052F2  EF83  F029         	goto	l9509
 21681  0052F6                     l9507:
 21682  0052F6  0E00               	movlw	0
 21683  0052F8  6E2B               	movwf	___fladd@a^0,c
 21684  0052FA  0E00               	movlw	0
 21685  0052FC  6E2C               	movwf	(___fladd@a+1)^0,c
 21686  0052FE  0E00               	movlw	0
 21687  005300  6E2D               	movwf	(___fladd@a+2)^0,c
 21688  005302  0E00               	movlw	0
 21689  005304  6E2E               	movwf	(___fladd@a+3)^0,c
 21690  005306                     l9509:
 21691  005306  5035               	movf	___fladd@bexp^0,w,c
 21692  005308  5C34               	subwf	___fladd@aexp^0,w,c
 21693  00530A  B0D8               	btfsc	status,0,c
 21694  00530C  EF8A  F029         	goto	u8561
 21695  005310  EF8C  F029         	goto	u8560
 21696  005314                     u8561:
 21697  005314  EFB3  F029         	goto	l9545
 21698  005318                     u8560:
 21699  005318  AC33               	btfss	___fladd@signs^0,6,c
 21700  00531A  EF91  F029         	goto	u8571
 21701  00531E  EF93  F029         	goto	u8570
 21702  005322                     u8571:
 21703  005322  EF95  F029         	goto	l9515
 21704  005326                     u8570:
 21705  005326  0E80               	movlw	128
 21706  005328  1A33               	xorwf	___fladd@signs^0,f,c
 21707  00532A                     l9515:
 21708  00532A  C035  F036         	movff	___fladd@bexp,___fladd@grs
 21709  00532E  C034  F035         	movff	___fladd@aexp,___fladd@bexp
 21710  005332  C036  F034         	movff	___fladd@grs,___fladd@aexp
 21711  005336  C027  F036         	movff	___fladd@b,___fladd@grs
 21712  00533A  C02B  F027         	movff	___fladd@a,___fladd@b
 21713  00533E  C036  F02B         	movff	___fladd@grs,___fladd@a
 21714  005342  C028  F036         	movff	___fladd@b+1,___fladd@grs
 21715  005346  C02C  F028         	movff	___fladd@a+1,___fladd@b+1
 21716  00534A  C036  F02C         	movff	___fladd@grs,___fladd@a+1
 21717  00534E  C029  F036         	movff	___fladd@b+2,___fladd@grs
 21718  005352  C02D  F029         	movff	___fladd@a+2,___fladd@b+2
 21719  005356  C036  F02D         	movff	___fladd@grs,___fladd@a+2
 21720  00535A  C02A  F036         	movff	___fladd@b+3,___fladd@grs
 21721  00535E  C02E  F02A         	movff	___fladd@a+3,___fladd@b+3
 21722  005362  C036  F02E         	movff	___fladd@grs,___fladd@a+3
 21723  005366                     l9545:
 21724  005366  0E00               	movlw	0
 21725  005368  6E36               	movwf	___fladd@grs^0,c
 21726  00536A  5035               	movf	___fladd@bexp^0,w,c
 21727  00536C  C034  F02F         	movff	___fladd@aexp,??___fladd
 21728  005370  6A30               	clrf	(??___fladd+1)^0,c
 21729  005372  5E2F               	subwf	??___fladd^0,f,c
 21730  005374  0E00               	movlw	0
 21731  005376  5A30               	subwfb	(??___fladd+1)^0,f,c
 21732  005378  BE30               	btfsc	(??___fladd+1)^0,7,c
 21733  00537A  EFC8  F029         	goto	u8581
 21734  00537E  5030               	movf	(??___fladd+1)^0,w,c
 21735  005380  E109               	bnz	u8580
 21736  005382  0E1A               	movlw	26
 21737  005384  5C2F               	subwf	??___fladd^0,w,c
 21738  005386  A0D8               	btfss	status,0,c
 21739  005388  EFC8  F029         	goto	u8581
 21740  00538C  EFCA  F029         	goto	u8580
 21741  005390                     u8581:
 21742  005390  EF01  F02A         	goto	l2810
 21743  005394                     u8580:
 21744  005394  5027               	movf	___fladd@b^0,w,c
 21745  005396  1028               	iorwf	(___fladd@b+1)^0,w,c
 21746  005398  1029               	iorwf	(___fladd@b+2)^0,w,c
 21747  00539A  102A               	iorwf	(___fladd@b+3)^0,w,c
 21748  00539C  A4D8               	btfss	status,2,c
 21749  00539E  EFD3  F029         	goto	u8591
 21750  0053A2  EFD6  F029         	goto	u8590
 21751  0053A6                     u8591:
 21752  0053A6  0E01               	movlw	1
 21753  0053A8  EFD7  F029         	goto	u8600
 21754  0053AC                     u8590:
 21755  0053AC  0E00               	movlw	0
 21756  0053AE                     u8600:
 21757  0053AE  6E36               	movwf	___fladd@grs^0,c
 21758  0053B0  0E00               	movlw	0
 21759  0053B2  6E27               	movwf	___fladd@b^0,c
 21760  0053B4  0E00               	movlw	0
 21761  0053B6  6E28               	movwf	(___fladd@b+1)^0,c
 21762  0053B8  0E00               	movlw	0
 21763  0053BA  6E29               	movwf	(___fladd@b+2)^0,c
 21764  0053BC  0E00               	movlw	0
 21765  0053BE  6E2A               	movwf	(___fladd@b+3)^0,c
 21766  0053C0  C034  F035         	movff	___fladd@aexp,___fladd@bexp
 21767  0053C4  EF0A  F02A         	goto	l2809
 21768  0053C8                     l2811:
 21769  0053C8  A036               	btfss	___fladd@grs^0,0,c
 21770  0053CA  EFE9  F029         	goto	u8611
 21771  0053CE  EFEB  F029         	goto	u8610
 21772  0053D2                     u8611:
 21773  0053D2  EFF1  F029         	goto	l9557
 21774  0053D6                     u8610:
 21775  0053D6  90D8               	bcf	status,0,c
 21776  0053D8  3036               	rrcf	___fladd@grs^0,w,c
 21777  0053DA  0901               	iorlw	1
 21778  0053DC  6E36               	movwf	___fladd@grs^0,c
 21779  0053DE  EFF3  F029         	goto	l9559
 21780  0053E2                     l9557:
 21781  0053E2  90D8               	bcf	status,0,c
 21782  0053E4  3236               	rrcf	___fladd@grs^0,f,c
 21783  0053E6                     l9559:
 21784  0053E6  A027               	btfss	___fladd@b^0,0,c
 21785  0053E8  EFF8  F029         	goto	u8621
 21786  0053EC  EFFA  F029         	goto	u8620
 21787  0053F0                     u8621:
 21788  0053F0  EFFB  F029         	goto	l9563
 21789  0053F4                     u8620:
 21790  0053F4  8E36               	bsf	___fladd@grs^0,7,c
 21791  0053F6                     l9563:
 21792  0053F6  342A               	rlcf	(___fladd@b+3)^0,w,c
 21793  0053F8  322A               	rrcf	(___fladd@b+3)^0,f,c
 21794  0053FA  3229               	rrcf	(___fladd@b+2)^0,f,c
 21795  0053FC  3228               	rrcf	(___fladd@b+1)^0,f,c
 21796  0053FE  3227               	rrcf	___fladd@b^0,f,c
 21797  005400  2A35               	incf	___fladd@bexp^0,f,c
 21798  005402                     l2810:
 21799  005402  5034               	movf	___fladd@aexp^0,w,c
 21800  005404  5C35               	subwf	___fladd@bexp^0,w,c
 21801  005406  A0D8               	btfss	status,0,c
 21802  005408  EF08  F02A         	goto	u8631
 21803  00540C  EF0A  F02A         	goto	u8630
 21804  005410                     u8631:
 21805  005410  EFE4  F029         	goto	l2811
 21806  005414                     u8630:
 21807  005414                     l2809:
 21808  005414  BC33               	btfsc	___fladd@signs^0,6,c
 21809  005416  EF0F  F02A         	goto	u8641
 21810  00541A  EF11  F02A         	goto	u8640
 21811  00541E                     u8641:
 21812  00541E  EF51  F02A         	goto	l9591
 21813  005422                     u8640:
 21814  005422  5035               	movf	___fladd@bexp^0,w,c
 21815  005424  A4D8               	btfss	status,2,c
 21816  005426  EF17  F02A         	goto	u8651
 21817  00542A  EF19  F02A         	goto	u8650
 21818  00542E                     u8651:
 21819  00542E  EF23  F02A         	goto	l9573
 21820  005432                     u8650:
 21821  005432  0E00               	movlw	0
 21822  005434  6E27               	movwf	?___fladd^0,c
 21823  005436  0E00               	movlw	0
 21824  005438  6E28               	movwf	(?___fladd+1)^0,c
 21825  00543A  0E00               	movlw	0
 21826  00543C  6E29               	movwf	(?___fladd+2)^0,c
 21827  00543E  0E00               	movlw	0
 21828  005440  6E2A               	movwf	(?___fladd+3)^0,c
 21829  005442  EF72  F02B         	goto	l2818
 21830  005446                     l9573:
 21831  005446  502B               	movf	___fladd@a^0,w,c
 21832  005448  2627               	addwf	___fladd@b^0,f,c
 21833  00544A  502C               	movf	(___fladd@a+1)^0,w,c
 21834  00544C  2228               	addwfc	(___fladd@b+1)^0,f,c
 21835  00544E  502D               	movf	(___fladd@a+2)^0,w,c
 21836  005450  2229               	addwfc	(___fladd@b+2)^0,f,c
 21837  005452  502E               	movf	(___fladd@a+3)^0,w,c
 21838  005454  222A               	addwfc	(___fladd@b+3)^0,f,c
 21839  005456  A02A               	btfss	(___fladd@b+3)^0,0,c
 21840  005458  EF30  F02A         	goto	u8661
 21841  00545C  EF32  F02A         	goto	u8660
 21842  005460                     u8661:
 21843  005460  EFDE  F02A         	goto	l9627
 21844  005464                     u8660:
 21845  005464  A036               	btfss	___fladd@grs^0,0,c
 21846  005466  EF37  F02A         	goto	u8671
 21847  00546A  EF39  F02A         	goto	u8670
 21848  00546E                     u8671:
 21849  00546E  EF3F  F02A         	goto	l9581
 21850  005472                     u8670:
 21851  005472  90D8               	bcf	status,0,c
 21852  005474  3036               	rrcf	___fladd@grs^0,w,c
 21853  005476  0901               	iorlw	1
 21854  005478  6E36               	movwf	___fladd@grs^0,c
 21855  00547A  EF41  F02A         	goto	l9583
 21856  00547E                     l9581:
 21857  00547E  90D8               	bcf	status,0,c
 21858  005480  3236               	rrcf	___fladd@grs^0,f,c
 21859  005482                     l9583:
 21860  005482  A027               	btfss	___fladd@b^0,0,c
 21861  005484  EF46  F02A         	goto	u8681
 21862  005488  EF48  F02A         	goto	u8680
 21863  00548C                     u8681:
 21864  00548C  EF49  F02A         	goto	l9587
 21865  005490                     u8680:
 21866  005490  8E36               	bsf	___fladd@grs^0,7,c
 21867  005492                     l9587:
 21868  005492  342A               	rlcf	(___fladd@b+3)^0,w,c
 21869  005494  322A               	rrcf	(___fladd@b+3)^0,f,c
 21870  005496  3229               	rrcf	(___fladd@b+2)^0,f,c
 21871  005498  3228               	rrcf	(___fladd@b+1)^0,f,c
 21872  00549A  3227               	rrcf	___fladd@b^0,f,c
 21873  00549C  2A35               	incf	___fladd@bexp^0,f,c
 21874  00549E  EFDE  F02A         	goto	l9627
 21875  0054A2                     l9591:
 21876  0054A2  502B               	movf	___fladd@a^0,w,c
 21877  0054A4  5C27               	subwf	___fladd@b^0,w,c
 21878  0054A6  502C               	movf	(___fladd@a+1)^0,w,c
 21879  0054A8  5828               	subwfb	(___fladd@b+1)^0,w,c
 21880  0054AA  502D               	movf	(___fladd@a+2)^0,w,c
 21881  0054AC  5829               	subwfb	(___fladd@b+2)^0,w,c
 21882  0054AE  502A               	movf	(___fladd@b+3)^0,w,c
 21883  0054B0  0A80               	xorlw	128
 21884  0054B2  6E2F               	movwf	??___fladd^0,c
 21885  0054B4  502E               	movf	(___fladd@a+3)^0,w,c
 21886  0054B6  0A80               	xorlw	128
 21887  0054B8  582F               	subwfb	??___fladd^0,w,c
 21888  0054BA  B0D8               	btfsc	status,0,c
 21889  0054BC  EF62  F02A         	goto	u8691
 21890  0054C0  EF64  F02A         	goto	u8690
 21891  0054C4                     u8691:
 21892  0054C4  EF8F  F02A         	goto	l9601
 21893  0054C8                     u8690:
 21894  0054C8  5027               	movf	___fladd@b^0,w,c
 21895  0054CA  5C2B               	subwf	___fladd@a^0,w,c
 21896  0054CC  6E2F               	movwf	??___fladd^0,c
 21897  0054CE  5028               	movf	(___fladd@b+1)^0,w,c
 21898  0054D0  582C               	subwfb	(___fladd@a+1)^0,w,c
 21899  0054D2  6E30               	movwf	(??___fladd+1)^0,c
 21900  0054D4  5029               	movf	(___fladd@b+2)^0,w,c
 21901  0054D6  582D               	subwfb	(___fladd@a+2)^0,w,c
 21902  0054D8  6E31               	movwf	(??___fladd+2)^0,c
 21903  0054DA  502A               	movf	(___fladd@b+3)^0,w,c
 21904  0054DC  582E               	subwfb	(___fladd@a+3)^0,w,c
 21905  0054DE  6E32               	movwf	(??___fladd+3)^0,c
 21906  0054E0  0EFF               	movlw	255
 21907  0054E2  242F               	addwf	??___fladd^0,w,c
 21908  0054E4  6E27               	movwf	___fladd@b^0,c
 21909  0054E6  0EFF               	movlw	255
 21910  0054E8  2030               	addwfc	(??___fladd+1)^0,w,c
 21911  0054EA  6E28               	movwf	(___fladd@b+1)^0,c
 21912  0054EC  0EFF               	movlw	255
 21913  0054EE  2031               	addwfc	(??___fladd+2)^0,w,c
 21914  0054F0  6E29               	movwf	(___fladd@b+2)^0,c
 21915  0054F2  0EFF               	movlw	255
 21916  0054F4  2032               	addwfc	(??___fladd+3)^0,w,c
 21917  0054F6  6E2A               	movwf	(___fladd@b+3)^0,c
 21918  0054F8  0E80               	movlw	128
 21919  0054FA  1A33               	xorwf	___fladd@signs^0,f,c
 21920  0054FC  6C36               	negf	___fladd@grs^0,c
 21921  0054FE  5036               	movf	___fladd@grs^0,w,c
 21922  005500  A4D8               	btfss	status,2,c
 21923  005502  EF85  F02A         	goto	u8701
 21924  005506  EF87  F02A         	goto	u8700
 21925  00550A                     u8701:
 21926  00550A  EF97  F02A         	goto	l2826
 21927  00550E                     u8700:
 21928  00550E  0E01               	movlw	1
 21929  005510  2627               	addwf	___fladd@b^0,f,c
 21930  005512  0E00               	movlw	0
 21931  005514  2228               	addwfc	(___fladd@b+1)^0,f,c
 21932  005516  2229               	addwfc	(___fladd@b+2)^0,f,c
 21933  005518  222A               	addwfc	(___fladd@b+3)^0,f,c
 21934  00551A  EF97  F02A         	goto	l2826
 21935  00551E                     l9601:
 21936  00551E  502B               	movf	___fladd@a^0,w,c
 21937  005520  5E27               	subwf	___fladd@b^0,f,c
 21938  005522  502C               	movf	(___fladd@a+1)^0,w,c
 21939  005524  5A28               	subwfb	(___fladd@b+1)^0,f,c
 21940  005526  502D               	movf	(___fladd@a+2)^0,w,c
 21941  005528  5A29               	subwfb	(___fladd@b+2)^0,f,c
 21942  00552A  502E               	movf	(___fladd@a+3)^0,w,c
 21943  00552C  5A2A               	subwfb	(___fladd@b+3)^0,f,c
 21944  00552E                     l2826:
 21945  00552E  5027               	movf	___fladd@b^0,w,c
 21946  005530  1028               	iorwf	(___fladd@b+1)^0,w,c
 21947  005532  1029               	iorwf	(___fladd@b+2)^0,w,c
 21948  005534  102A               	iorwf	(___fladd@b+3)^0,w,c
 21949  005536  A4D8               	btfss	status,2,c
 21950  005538  EFA0  F02A         	goto	u8711
 21951  00553C  EFA2  F02A         	goto	u8710
 21952  005540                     u8711:
 21953  005540  EFD7  F02A         	goto	l9625
 21954  005544                     u8710:
 21955  005544  5036               	movf	___fladd@grs^0,w,c
 21956  005546  A4D8               	btfss	status,2,c
 21957  005548  EFA8  F02A         	goto	u8721
 21958  00554C  EFAA  F02A         	goto	u8720
 21959  005550                     u8721:
 21960  005550  EFD7  F02A         	goto	l9625
 21961  005554                     u8720:
 21962  005554  0E00               	movlw	0
 21963  005556  6E27               	movwf	?___fladd^0,c
 21964  005558  0E00               	movlw	0
 21965  00555A  6E28               	movwf	(?___fladd+1)^0,c
 21966  00555C  0E00               	movlw	0
 21967  00555E  6E29               	movwf	(?___fladd+2)^0,c
 21968  005560  0E00               	movlw	0
 21969  005562  6E2A               	movwf	(?___fladd+3)^0,c
 21970  005564  EF72  F02B         	goto	l2818
 21971  005568                     l9609:
 21972  005568  90D8               	bcf	status,0,c
 21973  00556A  3627               	rlcf	___fladd@b^0,f,c
 21974  00556C  3628               	rlcf	(___fladd@b+1)^0,f,c
 21975  00556E  3629               	rlcf	(___fladd@b+2)^0,f,c
 21976  005570  362A               	rlcf	(___fladd@b+3)^0,f,c
 21977  005572  AE36               	btfss	___fladd@grs^0,7,c
 21978  005574  EFBE  F02A         	goto	u8731
 21979  005578  EFC0  F02A         	goto	u8730
 21980  00557C                     u8731:
 21981  00557C  EFC1  F02A         	goto	l9615
 21982  005580                     u8730:
 21983  005580  8027               	bsf	___fladd@b^0,0,c
 21984  005582                     l9615:
 21985  005582  A036               	btfss	___fladd@grs^0,0,c
 21986  005584  EFC6  F02A         	goto	u8741
 21987  005588  EFC8  F02A         	goto	u8740
 21988  00558C                     u8741:
 21989  00558C  EFCC  F02A         	goto	l9619
 21990  005590                     u8740:
 21991  005590  80D8               	bsf	status,0,c
 21992  005592  3636               	rlcf	___fladd@grs^0,f,c
 21993  005594  EFCE  F02A         	goto	l9621
 21994  005598                     l9619:
 21995  005598  90D8               	bcf	status,0,c
 21996  00559A  3636               	rlcf	___fladd@grs^0,f,c
 21997  00559C                     l9621:
 21998  00559C  5035               	movf	___fladd@bexp^0,w,c
 21999  00559E  B4D8               	btfsc	status,2,c
 22000  0055A0  EFD4  F02A         	goto	u8751
 22001  0055A4  EFD6  F02A         	goto	u8750
 22002  0055A8                     u8751:
 22003  0055A8  EFD7  F02A         	goto	l9625
 22004  0055AC                     u8750:
 22005  0055AC  0635               	decf	___fladd@bexp^0,f,c
 22006  0055AE                     l9625:
 22007  0055AE  AE29               	btfss	(___fladd@b+2)^0,7,c
 22008  0055B0  EFDC  F02A         	goto	u8761
 22009  0055B4  EFDE  F02A         	goto	u8760
 22010  0055B8                     u8761:
 22011  0055B8  EFB4  F02A         	goto	l9609
 22012  0055BC                     u8760:
 22013  0055BC                     l9627:
 22014  0055BC  0E00               	movlw	0
 22015  0055BE  6E34               	movwf	___fladd@aexp^0,c
 22016  0055C0  AE36               	btfss	___fladd@grs^0,7,c
 22017  0055C2  EFE5  F02A         	goto	u8771
 22018  0055C6  EFE7  F02A         	goto	u8770
 22019  0055CA                     u8771:
 22020  0055CA  EFFF  F02A         	goto	l2835
 22021  0055CE                     u8770:
 22022  0055CE  C036  F02F         	movff	___fladd@grs,??___fladd
 22023  0055D2  0E7F               	movlw	127
 22024  0055D4  162F               	andwf	??___fladd^0,f,c
 22025  0055D6  B4D8               	btfsc	status,2,c
 22026  0055D8  EFF0  F02A         	goto	u8781
 22027  0055DC  EFF2  F02A         	goto	u8780
 22028  0055E0                     u8781:
 22029  0055E0  EFF6  F02A         	goto	l2836
 22030  0055E4                     u8780:
 22031  0055E4                     l9633:
 22032  0055E4  0E01               	movlw	1
 22033  0055E6  6E34               	movwf	___fladd@aexp^0,c
 22034  0055E8  EFFF  F02A         	goto	l2835
 22035  0055EC                     l2836:
 22036  0055EC  A027               	btfss	___fladd@b^0,0,c
 22037  0055EE  EFFB  F02A         	goto	u8791
 22038  0055F2  EFFD  F02A         	goto	u8790
 22039  0055F6                     u8791:
 22040  0055F6  EFFF  F02A         	goto	l2835
 22041  0055FA                     u8790:
 22042  0055FA  EFF2  F02A         	goto	l9633
 22043  0055FE                     l2835:
 22044  0055FE  5034               	movf	___fladd@aexp^0,w,c
 22045  005600  B4D8               	btfsc	status,2,c
 22046  005602  EF05  F02B         	goto	u8801
 22047  005606  EF07  F02B         	goto	u8800
 22048  00560A                     u8801:
 22049  00560A  EF32  F02B         	goto	l9645
 22050  00560E                     u8800:
 22051  00560E  0E01               	movlw	1
 22052  005610  2627               	addwf	___fladd@b^0,f,c
 22053  005612  0E00               	movlw	0
 22054  005614  2228               	addwfc	(___fladd@b+1)^0,f,c
 22055  005616  2229               	addwfc	(___fladd@b+2)^0,f,c
 22056  005618  222A               	addwfc	(___fladd@b+3)^0,f,c
 22057  00561A  A02A               	btfss	(___fladd@b+3)^0,0,c
 22058  00561C  EF12  F02B         	goto	u8811
 22059  005620  EF14  F02B         	goto	u8810
 22060  005624                     u8811:
 22061  005624  EF32  F02B         	goto	l9645
 22062  005628                     u8810:
 22063  005628  C027  F02F         	movff	___fladd@b,??___fladd
 22064  00562C  C028  F030         	movff	___fladd@b+1,??___fladd+1
 22065  005630  C029  F031         	movff	___fladd@b+2,??___fladd+2
 22066  005634  C02A  F032         	movff	___fladd@b+3,??___fladd+3
 22067  005638  3432               	rlcf	(??___fladd+3)^0,w,c
 22068  00563A  3232               	rrcf	(??___fladd+3)^0,f,c
 22069  00563C  3231               	rrcf	(??___fladd+2)^0,f,c
 22070  00563E  3230               	rrcf	(??___fladd+1)^0,f,c
 22071  005640  322F               	rrcf	??___fladd^0,f,c
 22072  005642  C02F  F027         	movff	??___fladd,___fladd@b
 22073  005646  C030  F028         	movff	??___fladd+1,___fladd@b+1
 22074  00564A  C031  F029         	movff	??___fladd+2,___fladd@b+2
 22075  00564E  C032  F02A         	movff	??___fladd+3,___fladd@b+3
 22076  005652  2835               	incf	___fladd@bexp^0,w,c
 22077  005654  B4D8               	btfsc	status,2,c
 22078  005656  EF2F  F02B         	goto	u8821
 22079  00565A  EF31  F02B         	goto	u8820
 22080  00565E                     u8821:
 22081  00565E  EF32  F02B         	goto	l9645
 22082  005662                     u8820:
 22083  005662  2A35               	incf	___fladd@bexp^0,f,c
 22084  005664                     l9645:
 22085  005664  2835               	incf	___fladd@bexp^0,w,c
 22086  005666  B4D8               	btfsc	status,2,c
 22087  005668  EF38  F02B         	goto	u8831
 22088  00566C  EF3A  F02B         	goto	u8830
 22089  005670                     u8831:
 22090  005670  EF42  F02B         	goto	l9649
 22091  005674                     u8830:
 22092  005674  5035               	movf	___fladd@bexp^0,w,c
 22093  005676  A4D8               	btfss	status,2,c
 22094  005678  EF40  F02B         	goto	u8841
 22095  00567C  EF42  F02B         	goto	u8840
 22096  005680                     u8841:
 22097  005680  EF54  F02B         	goto	l9653
 22098  005684                     u8840:
 22099  005684                     l9649:
 22100  005684  0E00               	movlw	0
 22101  005686  6E27               	movwf	___fladd@b^0,c
 22102  005688  0E00               	movlw	0
 22103  00568A  6E28               	movwf	(___fladd@b+1)^0,c
 22104  00568C  0E00               	movlw	0
 22105  00568E  6E29               	movwf	(___fladd@b+2)^0,c
 22106  005690  0E00               	movlw	0
 22107  005692  6E2A               	movwf	(___fladd@b+3)^0,c
 22108  005694  5035               	movf	___fladd@bexp^0,w,c
 22109  005696  A4D8               	btfss	status,2,c
 22110  005698  EF50  F02B         	goto	u8851
 22111  00569C  EF52  F02B         	goto	u8850
 22112  0056A0                     u8851:
 22113  0056A0  EF54  F02B         	goto	l9653
 22114  0056A4                     u8850:
 22115  0056A4  0E00               	movlw	0
 22116  0056A6  6E33               	movwf	___fladd@signs^0,c
 22117  0056A8                     l9653:
 22118  0056A8  A035               	btfss	___fladd@bexp^0,0,c
 22119  0056AA  EF59  F02B         	goto	u8861
 22120  0056AE  EF5B  F02B         	goto	u8860
 22121  0056B2                     u8861:
 22122  0056B2  EF5E  F02B         	goto	l9657
 22123  0056B6                     u8860:
 22124  0056B6  8E29               	bsf	(___fladd@b+2)^0,7,c
 22125  0056B8  EF5F  F02B         	goto	l9659
 22126  0056BC                     l9657:
 22127  0056BC  9E29               	bcf	(___fladd@b+2)^0,7,c
 22128  0056BE                     l9659:
 22129  0056BE  90D8               	bcf	status,0,c
 22130  0056C0  3035               	rrcf	___fladd@bexp^0,w,c
 22131  0056C2  6E2A               	movwf	(___fladd@b+3)^0,c
 22132  0056C4  AE33               	btfss	___fladd@signs^0,7,c
 22133  0056C6  EF67  F02B         	goto	u8871
 22134  0056CA  EF69  F02B         	goto	u8870
 22135  0056CE                     u8871:
 22136  0056CE  EF6A  F02B         	goto	l9665
 22137  0056D2                     u8870:
 22138  0056D2  8E2A               	bsf	(___fladd@b+3)^0,7,c
 22139  0056D4                     l9665:
 22140  0056D4  C027  F027         	movff	___fladd@b,?___fladd
 22141  0056D8  C028  F028         	movff	___fladd@b+1,?___fladd+1
 22142  0056DC  C029  F029         	movff	___fladd@b+2,?___fladd+2
 22143  0056E0  C02A  F02A         	movff	___fladd@b+3,?___fladd+3
 22144  0056E4                     l2818:
 22145  0056E4  0012               	return		;funcret
 22146  0056E6                     __end_of___fladd:
 22147                           	callstack 0
 22148                           
 22149 ;; *************** function ___flneg *****************
 22150 ;; Defined at:
 22151 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
 22152 ;; Parameters:    Size  Location     Type
 22153 ;;  f1              4    0[COMRAM] unsigned char 
 22154 ;; Auto vars:     Size  Location     Type
 22155 ;;		None
 22156 ;; Return value:  Size  Location     Type
 22157 ;;                  4    0[COMRAM] unsigned char 
 22158 ;; Registers used:
 22159 ;;		wreg, status,2, status,0
 22160 ;; Tracked objects:
 22161 ;;		On entry : 0/0
 22162 ;;		On exit  : 0/0
 22163 ;;		Unchanged: 0/0
 22164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22169 ;;Total ram usage:        4 bytes
 22170 ;; Hardware stack levels used: 1
 22171 ;; Hardware stack levels required when called: 1
 22172 ;; This function calls:
 22173 ;;		Nothing
 22174 ;; This function is called by:
 22175 ;;		_sprintf
 22176 ;;		_fabs
 22177 ;; This function uses a non-reentrant model
 22178 ;;
 22179                           
 22180                           	psect	text101
 22181  00D006                     __ptext101:
 22182                           	callstack 0
 22183  00D006                     ___flneg:
 22184                           	callstack 25
 22185  00D006  5001               	movf	___flneg@f1^0,w,c
 22186  00D008  1002               	iorwf	(___flneg@f1+1)^0,w,c
 22187  00D00A  1003               	iorwf	(___flneg@f1+2)^0,w,c
 22188  00D00C  1004               	iorwf	(___flneg@f1+3)^0,w,c
 22189  00D00E  B4D8               	btfsc	status,2,c
 22190  00D010  EF0C  F068         	goto	u10341
 22191  00D014  EF0E  F068         	goto	u10340
 22192  00D018                     u10341:
 22193  00D018  EF16  F068         	goto	l10623
 22194  00D01C                     u10340:
 22195  00D01C  0E00               	movlw	0
 22196  00D01E  1A01               	xorwf	___flneg@f1^0,f,c
 22197  00D020  0E00               	movlw	0
 22198  00D022  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 22199  00D024  0E00               	movlw	0
 22200  00D026  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 22201  00D028  0E80               	movlw	128
 22202  00D02A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 22203  00D02C                     l10623:
 22204  00D02C  C001  F001         	movff	___flneg@f1,?___flneg
 22205  00D030  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 22206  00D034  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 22207  00D038  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 22208  00D03C  0012               	return		;funcret
 22209  00D03E                     __end_of___flneg:
 22210                           	callstack 0
 22211                           
 22212 ;; *************** function ___flge *****************
 22213 ;; Defined at:
 22214 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 22215 ;; Parameters:    Size  Location     Type
 22216 ;;  ff1             4    0[COMRAM] unsigned char 
 22217 ;;  ff2             4    4[COMRAM] unsigned char 
 22218 ;; Auto vars:     Size  Location     Type
 22219 ;;		None
 22220 ;; Return value:  Size  Location     Type
 22221 ;;		None               void
 22222 ;; Registers used:
 22223 ;;		wreg, status,2, status,0
 22224 ;; Tracked objects:
 22225 ;;		On entry : 0/0
 22226 ;;		On exit  : 0/0
 22227 ;;		Unchanged: 0/0
 22228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22232 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22233 ;;Total ram usage:       12 bytes
 22234 ;; Hardware stack levels used: 1
 22235 ;; Hardware stack levels required when called: 1
 22236 ;; This function calls:
 22237 ;;		Nothing
 22238 ;; This function is called by:
 22239 ;;		_sens_autoCalib_task
 22240 ;;		_sort_uV_slope
 22241 ;;		_gasSensor_lowfilter
 22242 ;;		_sprintf
 22243 ;;		_sht3x_write_alert_limits
 22244 ;; This function uses a non-reentrant model
 22245 ;;
 22246                           
 22247                           	psect	text102
 22248  00A2D8                     __ptext102:
 22249                           	callstack 0
 22250  00A2D8                     ___flge:
 22251                           	callstack 28
 22252  00A2D8  0E00               	movlw	0
 22253  00A2DA  1401               	andwf	___flge@ff1^0,w,c
 22254  00A2DC  6E09               	movwf	??___flge^0,c
 22255  00A2DE  0E00               	movlw	0
 22256  00A2E0  1402               	andwf	(___flge@ff1+1)^0,w,c
 22257  00A2E2  6E0A               	movwf	(??___flge+1)^0,c
 22258  00A2E4  0E80               	movlw	128
 22259  00A2E6  1403               	andwf	(___flge@ff1+2)^0,w,c
 22260  00A2E8  6E0B               	movwf	(??___flge+2)^0,c
 22261  00A2EA  0E7F               	movlw	127
 22262  00A2EC  1404               	andwf	(___flge@ff1+3)^0,w,c
 22263  00A2EE  6E0C               	movwf	(??___flge+3)^0,c
 22264  00A2F0  5009               	movf	??___flge^0,w,c
 22265  00A2F2  100A               	iorwf	(??___flge+1)^0,w,c
 22266  00A2F4  100B               	iorwf	(??___flge+2)^0,w,c
 22267  00A2F6  100C               	iorwf	(??___flge+3)^0,w,c
 22268  00A2F8  A4D8               	btfss	status,2,c
 22269  00A2FA  EF81  F051         	goto	u10291
 22270  00A2FE  EF83  F051         	goto	u10290
 22271  00A302                     u10291:
 22272  00A302  EF8B  F051         	goto	l10601
 22273  00A306                     u10290:
 22274  00A306  0E00               	movlw	0
 22275  00A308  6E01               	movwf	___flge@ff1^0,c
 22276  00A30A  0E00               	movlw	0
 22277  00A30C  6E02               	movwf	(___flge@ff1+1)^0,c
 22278  00A30E  0E00               	movlw	0
 22279  00A310  6E03               	movwf	(___flge@ff1+2)^0,c
 22280  00A312  0E00               	movlw	0
 22281  00A314  6E04               	movwf	(___flge@ff1+3)^0,c
 22282  00A316                     l10601:
 22283  00A316  0E00               	movlw	0
 22284  00A318  1405               	andwf	___flge@ff2^0,w,c
 22285  00A31A  6E09               	movwf	??___flge^0,c
 22286  00A31C  0E00               	movlw	0
 22287  00A31E  1406               	andwf	(___flge@ff2+1)^0,w,c
 22288  00A320  6E0A               	movwf	(??___flge+1)^0,c
 22289  00A322  0E80               	movlw	128
 22290  00A324  1407               	andwf	(___flge@ff2+2)^0,w,c
 22291  00A326  6E0B               	movwf	(??___flge+2)^0,c
 22292  00A328  0E7F               	movlw	127
 22293  00A32A  1408               	andwf	(___flge@ff2+3)^0,w,c
 22294  00A32C  6E0C               	movwf	(??___flge+3)^0,c
 22295  00A32E  5009               	movf	??___flge^0,w,c
 22296  00A330  100A               	iorwf	(??___flge+1)^0,w,c
 22297  00A332  100B               	iorwf	(??___flge+2)^0,w,c
 22298  00A334  100C               	iorwf	(??___flge+3)^0,w,c
 22299  00A336  A4D8               	btfss	status,2,c
 22300  00A338  EFA0  F051         	goto	u10301
 22301  00A33C  EFA2  F051         	goto	u10300
 22302  00A340                     u10301:
 22303  00A340  EFAA  F051         	goto	l10605
 22304  00A344                     u10300:
 22305  00A344  0E00               	movlw	0
 22306  00A346  6E05               	movwf	___flge@ff2^0,c
 22307  00A348  0E00               	movlw	0
 22308  00A34A  6E06               	movwf	(___flge@ff2+1)^0,c
 22309  00A34C  0E00               	movlw	0
 22310  00A34E  6E07               	movwf	(___flge@ff2+2)^0,c
 22311  00A350  0E00               	movlw	0
 22312  00A352  6E08               	movwf	(___flge@ff2+3)^0,c
 22313  00A354                     l10605:
 22314  00A354  AE04               	btfss	(___flge@ff1+3)^0,7,c
 22315  00A356  EFAF  F051         	goto	u10311
 22316  00A35A  EFB1  F051         	goto	u10310
 22317  00A35E                     u10311:
 22318  00A35E  EFBA  F051         	goto	l10609
 22319  00A362                     u10310:
 22320  00A362  6C01               	negf	___flge@ff1^0,c
 22321  00A364  1E02               	comf	(___flge@ff1+1)^0,f,c
 22322  00A366  B0D8               	btfsc	status,0,c
 22323  00A368  2A02               	incf	(___flge@ff1+1)^0,f,c
 22324  00A36A  1E03               	comf	(___flge@ff1+2)^0,f,c
 22325  00A36C  B0D8               	btfsc	status,0,c
 22326  00A36E  2A03               	incf	(___flge@ff1+2)^0,f,c
 22327  00A370  0E80               	movlw	128
 22328  00A372  5604               	subfwb	(___flge@ff1+3)^0,f,c
 22329  00A374                     l10609:
 22330  00A374  AE08               	btfss	(___flge@ff2+3)^0,7,c
 22331  00A376  EFBF  F051         	goto	u10321
 22332  00A37A  EFC1  F051         	goto	u10320
 22333  00A37E                     u10321:
 22334  00A37E  EFCA  F051         	goto	l2537
 22335  00A382                     u10320:
 22336  00A382  6C05               	negf	___flge@ff2^0,c
 22337  00A384  1E06               	comf	(___flge@ff2+1)^0,f,c
 22338  00A386  B0D8               	btfsc	status,0,c
 22339  00A388  2A06               	incf	(___flge@ff2+1)^0,f,c
 22340  00A38A  1E07               	comf	(___flge@ff2+2)^0,f,c
 22341  00A38C  B0D8               	btfsc	status,0,c
 22342  00A38E  2A07               	incf	(___flge@ff2+2)^0,f,c
 22343  00A390  0E80               	movlw	128
 22344  00A392  5608               	subfwb	(___flge@ff2+3)^0,f,c
 22345  00A394                     l2537:
 22346  00A394  0E00               	movlw	0
 22347  00A396  1A01               	xorwf	___flge@ff1^0,f,c
 22348  00A398  0E00               	movlw	0
 22349  00A39A  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 22350  00A39C  0E00               	movlw	0
 22351  00A39E  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 22352  00A3A0  0E80               	movlw	128
 22353  00A3A2  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 22354  00A3A4  0E00               	movlw	0
 22355  00A3A6  1A05               	xorwf	___flge@ff2^0,f,c
 22356  00A3A8  0E00               	movlw	0
 22357  00A3AA  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 22358  00A3AC  0E00               	movlw	0
 22359  00A3AE  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 22360  00A3B0  0E80               	movlw	128
 22361  00A3B2  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 22362  00A3B4  5005               	movf	___flge@ff2^0,w,c
 22363  00A3B6  5C01               	subwf	___flge@ff1^0,w,c
 22364  00A3B8  5006               	movf	(___flge@ff2+1)^0,w,c
 22365  00A3BA  5802               	subwfb	(___flge@ff1+1)^0,w,c
 22366  00A3BC  5007               	movf	(___flge@ff2+2)^0,w,c
 22367  00A3BE  5803               	subwfb	(___flge@ff1+2)^0,w,c
 22368  00A3C0  5008               	movf	(___flge@ff2+3)^0,w,c
 22369  00A3C2  5804               	subwfb	(___flge@ff1+3)^0,w,c
 22370  00A3C4  B0D8               	btfsc	status,0,c
 22371  00A3C6  EFE7  F051         	goto	u10331
 22372  00A3CA  EFE9  F051         	goto	u10330
 22373  00A3CE                     u10331:
 22374  00A3CE  EFEC  F051         	goto	l10615
 22375  00A3D2                     u10330:
 22376  00A3D2  90D8               	bcf	status,0,c
 22377  00A3D4  EFED  F051         	goto	l2538
 22378  00A3D8                     l10615:
 22379  00A3D8  80D8               	bsf	status,0,c
 22380  00A3DA                     l2538:
 22381  00A3DA  0012               	return		;funcret
 22382  00A3DC                     __end_of___flge:
 22383                           	callstack 0
 22384                           
 22385 ;; *************** function ___fleq *****************
 22386 ;; Defined at:
 22387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 22388 ;; Parameters:    Size  Location     Type
 22389 ;;  ff1             4    0[COMRAM] unsigned char 
 22390 ;;  ff2             4    4[COMRAM] unsigned char 
 22391 ;; Auto vars:     Size  Location     Type
 22392 ;;		None
 22393 ;; Return value:  Size  Location     Type
 22394 ;;		None               void
 22395 ;; Registers used:
 22396 ;;		wreg, status,2, status,0
 22397 ;; Tracked objects:
 22398 ;;		On entry : 0/0
 22399 ;;		On exit  : 0/0
 22400 ;;		Unchanged: 0/0
 22401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22404 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22405 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22406 ;;Total ram usage:       12 bytes
 22407 ;; Hardware stack levels used: 1
 22408 ;; Hardware stack levels required when called: 1
 22409 ;; This function calls:
 22410 ;;		Nothing
 22411 ;; This function is called by:
 22412 ;;		_build_response
 22413 ;;		_Linear_regression
 22414 ;;		_gasSensor_calib
 22415 ;;		_sprintf
 22416 ;;		_frexp
 22417 ;; This function uses a non-reentrant model
 22418 ;;
 22419                           
 22420                           	psect	text103
 22421  00B5FA                     __ptext103:
 22422                           	callstack 0
 22423  00B5FA                     ___fleq:
 22424                           	callstack 26
 22425  00B5FA  0E00               	movlw	0
 22426  00B5FC  1401               	andwf	___fleq@ff1^0,w,c
 22427  00B5FE  6E09               	movwf	??___fleq^0,c
 22428  00B600  0E00               	movlw	0
 22429  00B602  1402               	andwf	(___fleq@ff1+1)^0,w,c
 22430  00B604  6E0A               	movwf	(??___fleq+1)^0,c
 22431  00B606  0E80               	movlw	128
 22432  00B608  1403               	andwf	(___fleq@ff1+2)^0,w,c
 22433  00B60A  6E0B               	movwf	(??___fleq+2)^0,c
 22434  00B60C  0E7F               	movlw	127
 22435  00B60E  1404               	andwf	(___fleq@ff1+3)^0,w,c
 22436  00B610  6E0C               	movwf	(??___fleq+3)^0,c
 22437  00B612  5009               	movf	??___fleq^0,w,c
 22438  00B614  100A               	iorwf	(??___fleq+1)^0,w,c
 22439  00B616  100B               	iorwf	(??___fleq+2)^0,w,c
 22440  00B618  100C               	iorwf	(??___fleq+3)^0,w,c
 22441  00B61A  A4D8               	btfss	status,2,c
 22442  00B61C  EF12  F05B         	goto	u9421
 22443  00B620  EF14  F05B         	goto	u9420
 22444  00B624                     u9421:
 22445  00B624  EF1C  F05B         	goto	l10021
 22446  00B628                     u9420:
 22447  00B628  0E00               	movlw	0
 22448  00B62A  6E01               	movwf	___fleq@ff1^0,c
 22449  00B62C  0E00               	movlw	0
 22450  00B62E  6E02               	movwf	(___fleq@ff1+1)^0,c
 22451  00B630  0E00               	movlw	0
 22452  00B632  6E03               	movwf	(___fleq@ff1+2)^0,c
 22453  00B634  0E00               	movlw	0
 22454  00B636  6E04               	movwf	(___fleq@ff1+3)^0,c
 22455  00B638                     l10021:
 22456  00B638  0E00               	movlw	0
 22457  00B63A  1405               	andwf	___fleq@ff2^0,w,c
 22458  00B63C  6E09               	movwf	??___fleq^0,c
 22459  00B63E  0E00               	movlw	0
 22460  00B640  1406               	andwf	(___fleq@ff2+1)^0,w,c
 22461  00B642  6E0A               	movwf	(??___fleq+1)^0,c
 22462  00B644  0E80               	movlw	128
 22463  00B646  1407               	andwf	(___fleq@ff2+2)^0,w,c
 22464  00B648  6E0B               	movwf	(??___fleq+2)^0,c
 22465  00B64A  0E7F               	movlw	127
 22466  00B64C  1408               	andwf	(___fleq@ff2+3)^0,w,c
 22467  00B64E  6E0C               	movwf	(??___fleq+3)^0,c
 22468  00B650  5009               	movf	??___fleq^0,w,c
 22469  00B652  100A               	iorwf	(??___fleq+1)^0,w,c
 22470  00B654  100B               	iorwf	(??___fleq+2)^0,w,c
 22471  00B656  100C               	iorwf	(??___fleq+3)^0,w,c
 22472  00B658  A4D8               	btfss	status,2,c
 22473  00B65A  EF31  F05B         	goto	u9431
 22474  00B65E  EF33  F05B         	goto	u9430
 22475  00B662                     u9431:
 22476  00B662  EF3B  F05B         	goto	l10025
 22477  00B666                     u9430:
 22478  00B666  0E00               	movlw	0
 22479  00B668  6E05               	movwf	___fleq@ff2^0,c
 22480  00B66A  0E00               	movlw	0
 22481  00B66C  6E06               	movwf	(___fleq@ff2+1)^0,c
 22482  00B66E  0E00               	movlw	0
 22483  00B670  6E07               	movwf	(___fleq@ff2+2)^0,c
 22484  00B672  0E00               	movlw	0
 22485  00B674  6E08               	movwf	(___fleq@ff2+3)^0,c
 22486  00B676                     l10025:
 22487  00B676  5005               	movf	___fleq@ff2^0,w,c
 22488  00B678  1801               	xorwf	___fleq@ff1^0,w,c
 22489  00B67A  E10F               	bnz	u9440
 22490  00B67C  5006               	movf	(___fleq@ff2+1)^0,w,c
 22491  00B67E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 22492  00B680  E10C               	bnz	u9440
 22493  00B682  5007               	movf	(___fleq@ff2+2)^0,w,c
 22494  00B684  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 22495  00B686  E109               	bnz	u9440
 22496  00B688  5008               	movf	(___fleq@ff2+3)^0,w,c
 22497  00B68A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 22498  00B68C  B4D8               	btfsc	status,2,c
 22499  00B68E  EF4B  F05B         	goto	u9441
 22500  00B692  EF4D  F05B         	goto	u9440
 22501  00B696                     u9441:
 22502  00B696  EF50  F05B         	goto	l10029
 22503  00B69A                     u9440:
 22504  00B69A  90D8               	bcf	status,0,c
 22505  00B69C  EF51  F05B         	goto	l2531
 22506  00B6A0                     l10029:
 22507  00B6A0  80D8               	bsf	status,0,c
 22508  00B6A2                     l2531:
 22509  00B6A2  0012               	return		;funcret
 22510  00B6A4                     __end_of___fleq:
 22511                           	callstack 0
 22512                           
 22513 ;; *************** function ___fldiv *****************
 22514 ;; Defined at:
 22515 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
 22516 ;; Parameters:    Size  Location     Type
 22517 ;;  b               4    0[BANK0 ] unsigned char 
 22518 ;;  a               4    4[BANK0 ] unsigned char 
 22519 ;; Auto vars:     Size  Location     Type
 22520 ;;  grs             4   19[BANK0 ] unsigned long 
 22521 ;;  rem             4   12[BANK0 ] unsigned long 
 22522 ;;  new_exp         2   17[BANK0 ] int 
 22523 ;;  aexp            1   24[BANK0 ] unsigned char 
 22524 ;;  bexp            1   23[BANK0 ] unsigned char 
 22525 ;;  sign            1   16[BANK0 ] unsigned char 
 22526 ;; Return value:  Size  Location     Type
 22527 ;;                  4    0[BANK0 ] unsigned char 
 22528 ;; Registers used:
 22529 ;;		wreg, status,2, status,0
 22530 ;; Tracked objects:
 22531 ;;		On entry : 0/0
 22532 ;;		On exit  : 0/0
 22533 ;;		Unchanged: 0/0
 22534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22535 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22536 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22537 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22538 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22539 ;;Total ram usage:       25 bytes
 22540 ;; Hardware stack levels used: 1
 22541 ;; Hardware stack levels required when called: 1
 22542 ;; This function calls:
 22543 ;;		Nothing
 22544 ;; This function is called by:
 22545 ;;		__atof
 22546 ;;		_sht3x_measure_read
 22547 ;;		_build_response
 22548 ;;		_Linear_regression
 22549 ;;		_auto_calib_apply
 22550 ;;		_Kalman_updateEstimate
 22551 ;;		_gasSensor_calib
 22552 ;;		_fmod
 22553 ;;		_calc_raw_temperature
 22554 ;;		_calc_raw_humidity
 22555 ;;		_sensMeasure_SNR
 22556 ;;		_window_moving_average_recursion
 22557 ;; This function uses a non-reentrant model
 22558 ;;
 22559                           
 22560                           	psect	text104
 22561  005F2C                     __ptext104:
 22562                           	callstack 0
 22563  005F2C                     ___fldiv:
 22564                           	callstack 27
 22565  005F2C  0100               	movlb	0	; () banked
 22566  005F2E  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 22567  005F30  0B80               	andlw	128
 22568  005F32  6F70               	movwf	___fldiv@sign& (0+255),b
 22569  005F34  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 22570  005F36  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
 22571  005F38  6F77               	movwf	___fldiv@bexp& (0+255),b
 22572  005F3A                     
 22573                           ; BSR set to: 0
 22574  005F3A  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
 22575  005F3C  EFA2  F02F         	goto	u19201
 22576  005F40  EFA4  F02F         	goto	u19200
 22577  005F44                     u19201:
 22578  005F44  EFA5  F02F         	goto	l17661
 22579  005F48                     u19200:
 22580  005F48                     
 22581                           ; BSR set to: 0
 22582  005F48  8177               	bsf	___fldiv@bexp& (0+255),0,b
 22583  005F4A                     l17661:
 22584                           
 22585                           ; BSR set to: 0
 22586  005F4A  5177               	movf	___fldiv@bexp& (0+255),w,b
 22587  005F4C  B4D8               	btfsc	status,2,c
 22588  005F4E  EFAB  F02F         	goto	u19211
 22589  005F52  EFAD  F02F         	goto	u19210
 22590  005F56                     u19211:
 22591  005F56  EFC2  F02F         	goto	l17671
 22592  005F5A                     u19210:
 22593  005F5A                     
 22594                           ; BSR set to: 0
 22595  005F5A  2977               	incf	___fldiv@bexp& (0+255),w,b
 22596  005F5C  A4D8               	btfss	status,2,c
 22597  005F5E  EFB3  F02F         	goto	u19221
 22598  005F62  EFB5  F02F         	goto	u19220
 22599  005F66                     u19221:
 22600  005F66  EFBD  F02F         	goto	l17667
 22601  005F6A                     u19220:
 22602  005F6A                     
 22603                           ; BSR set to: 0
 22604  005F6A  0E00               	movlw	0
 22605  005F6C  6F60               	movwf	___fldiv@b& (0+255),b
 22606  005F6E  0E00               	movlw	0
 22607  005F70  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 22608  005F72  0E00               	movlw	0
 22609  005F74  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 22610  005F76  0E00               	movlw	0
 22611  005F78  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 22612  005F7A                     l17667:
 22613                           
 22614                           ; BSR set to: 0
 22615  005F7A  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 22616  005F7C                     
 22617                           ; BSR set to: 0
 22618  005F7C  0E00               	movlw	0
 22619  005F7E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 22620  005F80  EFCA  F02F         	goto	l17673
 22621  005F84                     l17671:
 22622                           
 22623                           ; BSR set to: 0
 22624  005F84  0E00               	movlw	0
 22625  005F86  6F60               	movwf	___fldiv@b& (0+255),b
 22626  005F88  0E00               	movlw	0
 22627  005F8A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 22628  005F8C  0E00               	movlw	0
 22629  005F8E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 22630  005F90  0E00               	movlw	0
 22631  005F92  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 22632  005F94                     l17673:
 22633                           
 22634                           ; BSR set to: 0
 22635  005F94  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 22636  005F96  0B80               	andlw	128
 22637  005F98  1B70               	xorwf	___fldiv@sign& (0+255),f,b
 22638  005F9A                     
 22639                           ; BSR set to: 0
 22640  005F9A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 22641  005F9C  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
 22642  005F9E  6F78               	movwf	___fldiv@aexp& (0+255),b
 22643  005FA0                     
 22644                           ; BSR set to: 0
 22645  005FA0  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
 22646  005FA2  EFD5  F02F         	goto	u19231
 22647  005FA6  EFD7  F02F         	goto	u19230
 22648  005FAA                     u19231:
 22649  005FAA  EFD8  F02F         	goto	l17681
 22650  005FAE                     u19230:
 22651  005FAE                     
 22652                           ; BSR set to: 0
 22653  005FAE  8178               	bsf	___fldiv@aexp& (0+255),0,b
 22654  005FB0                     l17681:
 22655                           
 22656                           ; BSR set to: 0
 22657  005FB0  5178               	movf	___fldiv@aexp& (0+255),w,b
 22658  005FB2  B4D8               	btfsc	status,2,c
 22659  005FB4  EFDE  F02F         	goto	u19241
 22660  005FB8  EFE0  F02F         	goto	u19240
 22661  005FBC                     u19241:
 22662  005FBC  EFF5  F02F         	goto	l17691
 22663  005FC0                     u19240:
 22664  005FC0                     
 22665                           ; BSR set to: 0
 22666  005FC0  2978               	incf	___fldiv@aexp& (0+255),w,b
 22667  005FC2  A4D8               	btfss	status,2,c
 22668  005FC4  EFE6  F02F         	goto	u19251
 22669  005FC8  EFE8  F02F         	goto	u19250
 22670  005FCC                     u19251:
 22671  005FCC  EFF0  F02F         	goto	l17687
 22672  005FD0                     u19250:
 22673  005FD0                     
 22674                           ; BSR set to: 0
 22675  005FD0  0E00               	movlw	0
 22676  005FD2  6F64               	movwf	___fldiv@a& (0+255),b
 22677  005FD4  0E00               	movlw	0
 22678  005FD6  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 22679  005FD8  0E00               	movlw	0
 22680  005FDA  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 22681  005FDC  0E00               	movlw	0
 22682  005FDE  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 22683  005FE0                     l17687:
 22684                           
 22685                           ; BSR set to: 0
 22686  005FE0  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
 22687  005FE2                     
 22688                           ; BSR set to: 0
 22689  005FE2  0E00               	movlw	0
 22690  005FE4  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 22691  005FE6  EFFD  F02F         	goto	l17693
 22692  005FEA                     l17691:
 22693                           
 22694                           ; BSR set to: 0
 22695  005FEA  0E00               	movlw	0
 22696  005FEC  6F64               	movwf	___fldiv@a& (0+255),b
 22697  005FEE  0E00               	movlw	0
 22698  005FF0  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 22699  005FF2  0E00               	movlw	0
 22700  005FF4  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 22701  005FF6  0E00               	movlw	0
 22702  005FF8  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 22703  005FFA                     l17693:
 22704                           
 22705                           ; BSR set to: 0
 22706  005FFA  5164               	movf	___fldiv@a& (0+255),w,b
 22707  005FFC  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
 22708  005FFE  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
 22709  006000  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
 22710  006002  A4D8               	btfss	status,2,c
 22711  006004  EF06  F030         	goto	u19261
 22712  006008  EF08  F030         	goto	u19260
 22713  00600C                     u19261:
 22714  00600C  EF20  F030         	goto	l17705
 22715  006010                     u19260:
 22716  006010                     
 22717                           ; BSR set to: 0
 22718  006010  0E00               	movlw	0
 22719  006012  6F60               	movwf	___fldiv@b& (0+255),b
 22720  006014  0E00               	movlw	0
 22721  006016  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 22722  006018  0E00               	movlw	0
 22723  00601A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 22724  00601C  0E00               	movlw	0
 22725  00601E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 22726  006020                     
 22727                           ; BSR set to: 0
 22728  006020  0E80               	movlw	128
 22729  006022  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
 22730  006024  0E7F               	movlw	127
 22731  006026  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22732  006028                     l17699:
 22733                           
 22734                           ; BSR set to: 0
 22735  006028  5170               	movf	___fldiv@sign& (0+255),w,b
 22736  00602A  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22737  00602C                     
 22738                           ; BSR set to: 0
 22739  00602C  C060  F060         	movff	___fldiv@b,?___fldiv
 22740  006030  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
 22741  006034  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
 22742  006038  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
 22743  00603C  EF63  F031         	goto	l2863
 22744  006040                     l17705:
 22745                           
 22746                           ; BSR set to: 0
 22747  006040  5177               	movf	___fldiv@bexp& (0+255),w,b
 22748  006042  A4D8               	btfss	status,2,c
 22749  006044  EF26  F030         	goto	u19271
 22750  006048  EF28  F030         	goto	u19270
 22751  00604C                     u19271:
 22752  00604C  EF32  F030         	goto	l17713
 22753  006050                     u19270:
 22754  006050                     
 22755                           ; BSR set to: 0
 22756  006050  0E00               	movlw	0
 22757  006052  6F60               	movwf	?___fldiv& (0+255),b
 22758  006054  0E00               	movlw	0
 22759  006056  6F61               	movwf	(?___fldiv+1)& (0+255),b
 22760  006058  0E00               	movlw	0
 22761  00605A  6F62               	movwf	(?___fldiv+2)& (0+255),b
 22762  00605C  0E00               	movlw	0
 22763  00605E  6F63               	movwf	(?___fldiv+3)& (0+255),b
 22764  006060  EF63  F031         	goto	l2863
 22765  006064                     l17713:
 22766                           
 22767                           ; BSR set to: 0
 22768  006064  5178               	movf	___fldiv@aexp& (0+255),w,b
 22769  006066  C077  F068         	movff	___fldiv@bexp,??___fldiv
 22770  00606A  6B69               	clrf	(??___fldiv+1)& (0+255),b
 22771  00606C  5F68               	subwf	??___fldiv& (0+255),f,b
 22772  00606E  0E00               	movlw	0
 22773  006070  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
 22774  006072  0E7F               	movlw	127
 22775  006074  2568               	addwf	??___fldiv& (0+255),w,b
 22776  006076  6F71               	movwf	___fldiv@new_exp& (0+255),b
 22777  006078  0E00               	movlw	0
 22778  00607A  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
 22779  00607C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22780  00607E                     
 22781                           ; BSR set to: 0
 22782  00607E  C060  F06C         	movff	___fldiv@b,___fldiv@rem
 22783  006082  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
 22784  006086  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
 22785  00608A  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
 22786  00608E                     
 22787                           ; BSR set to: 0
 22788  00608E  0E00               	movlw	0
 22789  006090  6F60               	movwf	___fldiv@b& (0+255),b
 22790  006092  0E00               	movlw	0
 22791  006094  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 22792  006096  0E00               	movlw	0
 22793  006098  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 22794  00609A  0E00               	movlw	0
 22795  00609C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 22796  00609E                     
 22797                           ; BSR set to: 0
 22798  00609E  0E00               	movlw	0
 22799  0060A0  6F73               	movwf	___fldiv@grs& (0+255),b
 22800  0060A2  0E00               	movlw	0
 22801  0060A4  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
 22802  0060A6  0E00               	movlw	0
 22803  0060A8  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
 22804  0060AA  0E00               	movlw	0
 22805  0060AC  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
 22806  0060AE                     
 22807                           ; BSR set to: 0
 22808  0060AE  0E00               	movlw	0
 22809  0060B0  6F78               	movwf	___fldiv@aexp& (0+255),b
 22810  0060B2  EF93  F030         	goto	l2865
 22811  0060B6                     l17723:
 22812                           
 22813                           ; BSR set to: 0
 22814  0060B6  5178               	movf	___fldiv@aexp& (0+255),w,b
 22815  0060B8  B4D8               	btfsc	status,2,c
 22816  0060BA  EF61  F030         	goto	u19281
 22817  0060BE  EF63  F030         	goto	u19280
 22818  0060C2                     u19281:
 22819  0060C2  EF7A  F030         	goto	l17731
 22820  0060C6                     u19280:
 22821  0060C6                     
 22822                           ; BSR set to: 0
 22823  0060C6  90D8               	bcf	status,0,c
 22824  0060C8  376C               	rlcf	___fldiv@rem& (0+255),f,b
 22825  0060CA  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 22826  0060CC  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 22827  0060CE  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 22828  0060D0  90D8               	bcf	status,0,c
 22829  0060D2  3760               	rlcf	___fldiv@b& (0+255),f,b
 22830  0060D4  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22831  0060D6  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22832  0060D8  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22833  0060DA                     
 22834                           ; BSR set to: 0
 22835  0060DA  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22836  0060DC  EF72  F030         	goto	u19291
 22837  0060E0  EF74  F030         	goto	u19290
 22838  0060E4                     u19291:
 22839  0060E4  EF75  F030         	goto	l2868
 22840  0060E8                     u19290:
 22841  0060E8                     
 22842                           ; BSR set to: 0
 22843  0060E8  8160               	bsf	___fldiv@b& (0+255),0,b
 22844  0060EA                     l2868:
 22845                           
 22846                           ; BSR set to: 0
 22847  0060EA  90D8               	bcf	status,0,c
 22848  0060EC  3773               	rlcf	___fldiv@grs& (0+255),f,b
 22849  0060EE  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22850  0060F0  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22851  0060F2  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22852  0060F4                     l17731:
 22853                           
 22854                           ; BSR set to: 0
 22855  0060F4  5164               	movf	___fldiv@a& (0+255),w,b
 22856  0060F6  5D6C               	subwf	___fldiv@rem& (0+255),w,b
 22857  0060F8  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 22858  0060FA  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 22859  0060FC  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 22860  0060FE  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 22861  006100  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 22862  006102  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 22863  006104  A0D8               	btfss	status,0,c
 22864  006106  EF87  F030         	goto	u19301
 22865  00610A  EF89  F030         	goto	u19300
 22866  00610E                     u19301:
 22867  00610E  EF92  F030         	goto	l17737
 22868  006112                     u19300:
 22869  006112                     
 22870                           ; BSR set to: 0
 22871  006112  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
 22872  006114                     
 22873                           ; BSR set to: 0
 22874  006114  5164               	movf	___fldiv@a& (0+255),w,b
 22875  006116  5F6C               	subwf	___fldiv@rem& (0+255),f,b
 22876  006118  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 22877  00611A  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 22878  00611C  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 22879  00611E  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 22880  006120  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 22881  006122  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 22882  006124                     l17737:
 22883                           
 22884                           ; BSR set to: 0
 22885  006124  2B78               	incf	___fldiv@aexp& (0+255),f,b
 22886  006126                     l2865:
 22887                           
 22888                           ; BSR set to: 0
 22889  006126  0E19               	movlw	25
 22890  006128  6578               	cpfsgt	___fldiv@aexp& (0+255),b
 22891  00612A  EF99  F030         	goto	u19311
 22892  00612E  EF9B  F030         	goto	u19310
 22893  006132                     u19311:
 22894  006132  EF5B  F030         	goto	l17723
 22895  006136                     u19310:
 22896  006136                     
 22897                           ; BSR set to: 0
 22898  006136  516C               	movf	___fldiv@rem& (0+255),w,b
 22899  006138  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 22900  00613A  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 22901  00613C  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 22902  00613E  B4D8               	btfsc	status,2,c
 22903  006140  EFA4  F030         	goto	u19321
 22904  006144  EFA6  F030         	goto	u19320
 22905  006148                     u19321:
 22906  006148  EFBE  F030         	goto	l17749
 22907  00614C                     u19320:
 22908  00614C                     
 22909                           ; BSR set to: 0
 22910  00614C  8173               	bsf	___fldiv@grs& (0+255),0,b
 22911  00614E  EFBE  F030         	goto	l17749
 22912  006152                     l17743:
 22913                           
 22914                           ; BSR set to: 0
 22915  006152  90D8               	bcf	status,0,c
 22916  006154  3760               	rlcf	___fldiv@b& (0+255),f,b
 22917  006156  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22918  006158  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22919  00615A  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22920  00615C                     
 22921                           ; BSR set to: 0
 22922  00615C  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22923  00615E  EFB3  F030         	goto	u19331
 22924  006162  EFB5  F030         	goto	u19330
 22925  006166                     u19331:
 22926  006166  EFB6  F030         	goto	l2874
 22927  00616A                     u19330:
 22928  00616A                     
 22929                           ; BSR set to: 0
 22930  00616A  8160               	bsf	___fldiv@b& (0+255),0,b
 22931  00616C                     l2874:
 22932                           
 22933                           ; BSR set to: 0
 22934  00616C  90D8               	bcf	status,0,c
 22935  00616E  3773               	rlcf	___fldiv@grs& (0+255),f,b
 22936  006170  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22937  006172  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22938  006174  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22939  006176  0771               	decf	___fldiv@new_exp& (0+255),f,b
 22940  006178  A0D8               	btfss	status,0,c
 22941  00617A  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 22942  00617C                     l17749:
 22943                           
 22944                           ; BSR set to: 0
 22945  00617C  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
 22946  00617E  EFC3  F030         	goto	u19341
 22947  006182  EFC5  F030         	goto	u19340
 22948  006186                     u19341:
 22949  006186  EFA9  F030         	goto	l17743
 22950  00618A                     u19340:
 22951  00618A                     
 22952                           ; BSR set to: 0
 22953  00618A  0E00               	movlw	0
 22954  00618C  6F78               	movwf	___fldiv@aexp& (0+255),b
 22955  00618E                     
 22956                           ; BSR set to: 0
 22957  00618E  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22958  006190  EFCC  F030         	goto	u19351
 22959  006194  EFCE  F030         	goto	u19350
 22960  006198                     u19351:
 22961  006198  EFF2  F030         	goto	l2876
 22962  00619C                     u19350:
 22963  00619C                     
 22964                           ; BSR set to: 0
 22965  00619C  0EFF               	movlw	255
 22966  00619E  1573               	andwf	___fldiv@grs& (0+255),w,b
 22967  0061A0  6F68               	movwf	??___fldiv& (0+255),b
 22968  0061A2  0EFF               	movlw	255
 22969  0061A4  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
 22970  0061A6  6F69               	movwf	(??___fldiv+1)& (0+255),b
 22971  0061A8  0EFF               	movlw	255
 22972  0061AA  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
 22973  0061AC  6F6A               	movwf	(??___fldiv+2)& (0+255),b
 22974  0061AE  0E7F               	movlw	127
 22975  0061B0  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
 22976  0061B2  6F6B               	movwf	(??___fldiv+3)& (0+255),b
 22977  0061B4  5168               	movf	??___fldiv& (0+255),w,b
 22978  0061B6  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
 22979  0061B8  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
 22980  0061BA  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
 22981  0061BC  B4D8               	btfsc	status,2,c
 22982  0061BE  EFE3  F030         	goto	u19361
 22983  0061C2  EFE5  F030         	goto	u19360
 22984  0061C6                     u19361:
 22985  0061C6  EFE9  F030         	goto	l2877
 22986  0061CA                     u19360:
 22987  0061CA                     l17757:
 22988                           
 22989                           ; BSR set to: 0
 22990  0061CA  0E01               	movlw	1
 22991  0061CC  6F78               	movwf	___fldiv@aexp& (0+255),b
 22992  0061CE  EFF2  F030         	goto	l2876
 22993  0061D2                     l2877:
 22994                           
 22995                           ; BSR set to: 0
 22996  0061D2  A160               	btfss	___fldiv@b& (0+255),0,b
 22997  0061D4  EFEE  F030         	goto	u19371
 22998  0061D8  EFF0  F030         	goto	u19370
 22999  0061DC                     u19371:
 23000  0061DC  EFF2  F030         	goto	l2876
 23001  0061E0                     u19370:
 23002  0061E0  EFE5  F030         	goto	l17757
 23003  0061E4                     l2876:
 23004                           
 23005                           ; BSR set to: 0
 23006  0061E4  5178               	movf	___fldiv@aexp& (0+255),w,b
 23007  0061E6  B4D8               	btfsc	status,2,c
 23008  0061E8  EFF8  F030         	goto	u19381
 23009  0061EC  EFFA  F030         	goto	u19380
 23010  0061F0                     u19381:
 23011  0061F0  EF1E  F031         	goto	l17769
 23012  0061F4                     u19380:
 23013  0061F4                     
 23014                           ; BSR set to: 0
 23015  0061F4  0E01               	movlw	1
 23016  0061F6  2760               	addwf	___fldiv@b& (0+255),f,b
 23017  0061F8  0E00               	movlw	0
 23018  0061FA  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
 23019  0061FC  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
 23020  0061FE  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
 23021  006200                     
 23022                           ; BSR set to: 0
 23023  006200  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
 23024  006202  EF05  F031         	goto	u19391
 23025  006206  EF07  F031         	goto	u19390
 23026  00620A                     u19391:
 23027  00620A  EF1E  F031         	goto	l17769
 23028  00620E                     u19390:
 23029  00620E                     
 23030                           ; BSR set to: 0
 23031  00620E  C060  F068         	movff	___fldiv@b,??___fldiv
 23032  006212  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
 23033  006216  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
 23034  00621A  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
 23035  00621E  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
 23036  006220  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
 23037  006222  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
 23038  006224  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
 23039  006226  3368               	rrcf	??___fldiv& (0+255),f,b
 23040  006228  C068  F060         	movff	??___fldiv,___fldiv@b
 23041  00622C  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
 23042  006230  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
 23043  006234  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
 23044  006238                     
 23045                           ; BSR set to: 0
 23046  006238  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
 23047  00623A  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 23048  00623C                     l17769:
 23049                           
 23050                           ; BSR set to: 0
 23051  00623C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 23052  00623E  EF29  F031         	goto	u19401
 23053  006242  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 23054  006244  E108               	bnz	u19400
 23055  006246  2971               	incf	___fldiv@new_exp& (0+255),w,b
 23056  006248  A0D8               	btfss	status,0,c
 23057  00624A  EF29  F031         	goto	u19401
 23058  00624E  EF2B  F031         	goto	u19400
 23059  006252                     u19401:
 23060  006252  EF36  F031         	goto	l17773
 23061  006256                     u19400:
 23062  006256                     
 23063                           ; BSR set to: 0
 23064  006256  0E00               	movlw	0
 23065  006258  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 23066  00625A  6971               	setf	___fldiv@new_exp& (0+255),b
 23067  00625C  0E00               	movlw	0
 23068  00625E  6F60               	movwf	___fldiv@b& (0+255),b
 23069  006260  0E00               	movlw	0
 23070  006262  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 23071  006264  0E00               	movlw	0
 23072  006266  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 23073  006268  0E00               	movlw	0
 23074  00626A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 23075  00626C                     l17773:
 23076                           
 23077                           ; BSR set to: 0
 23078  00626C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 23079  00626E  EF43  F031         	goto	u19410
 23080  006272  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 23081  006274  E106               	bnz	u19411
 23082  006276  0571               	decf	___fldiv@new_exp& (0+255),w,b
 23083  006278  B0D8               	btfsc	status,0,c
 23084  00627A  EF41  F031         	goto	u19411
 23085  00627E  EF43  F031         	goto	u19410
 23086  006282                     u19411:
 23087  006282  EF51  F031         	goto	l17777
 23088  006286                     u19410:
 23089  006286                     
 23090                           ; BSR set to: 0
 23091  006286  0E00               	movlw	0
 23092  006288  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 23093  00628A  0E00               	movlw	0
 23094  00628C  6F71               	movwf	___fldiv@new_exp& (0+255),b
 23095  00628E  0E00               	movlw	0
 23096  006290  6F60               	movwf	___fldiv@b& (0+255),b
 23097  006292  0E00               	movlw	0
 23098  006294  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 23099  006296  0E00               	movlw	0
 23100  006298  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 23101  00629A  0E00               	movlw	0
 23102  00629C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 23103  00629E  0E00               	movlw	0
 23104  0062A0  6F70               	movwf	___fldiv@sign& (0+255),b
 23105  0062A2                     l17777:
 23106                           
 23107                           ; BSR set to: 0
 23108  0062A2  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
 23109  0062A6                     
 23110                           ; BSR set to: 0
 23111  0062A6  A177               	btfss	___fldiv@bexp& (0+255),0,b
 23112  0062A8  EF58  F031         	goto	u19421
 23113  0062AC  EF5A  F031         	goto	u19420
 23114  0062B0                     u19421:
 23115  0062B0  EF5D  F031         	goto	l17783
 23116  0062B4                     u19420:
 23117  0062B4                     
 23118                           ; BSR set to: 0
 23119  0062B4  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 23120  0062B6  EF5E  F031         	goto	l17785
 23121  0062BA                     l17783:
 23122                           
 23123                           ; BSR set to: 0
 23124  0062BA  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
 23125  0062BC                     l17785:
 23126                           
 23127                           ; BSR set to: 0
 23128  0062BC  90D8               	bcf	status,0,c
 23129  0062BE  3177               	rrcf	___fldiv@bexp& (0+255),w,b
 23130  0062C0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 23131  0062C2  EF14  F030         	goto	l17699
 23132  0062C6                     l2863:
 23133                           
 23134                           ; BSR set to: 0
 23135  0062C6  0012               	return		;funcret
 23136  0062C8                     __end_of___fldiv:
 23137                           	callstack 0
 23138                           
 23139 ;; *************** function _buffer_de_queue *****************
 23140 ;; Defined at:
 23141 ;;		line 22 in file "util/buffer.c"
 23142 ;; Parameters:    Size  Location     Type
 23143 ;;  queue           2    0[COMRAM] PTR struct buff_queue
 23144 ;;		 -> g_usb_queue(67), 
 23145 ;; Auto vars:     Size  Location     Type
 23146 ;;  ch              1    5[COMRAM] unsigned char 
 23147 ;; Return value:  Size  Location     Type
 23148 ;;                  1    wreg      unsigned char 
 23149 ;; Registers used:
 23150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23151 ;; Tracked objects:
 23152 ;;		On entry : 0/0
 23153 ;;		On exit  : 0/0
 23154 ;;		Unchanged: 0/0
 23155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23158 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23159 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23160 ;;Total ram usage:        6 bytes
 23161 ;; Hardware stack levels used: 1
 23162 ;; Hardware stack levels required when called: 1
 23163 ;; This function calls:
 23164 ;;		Nothing
 23165 ;; This function is called by:
 23166 ;;		_atcommand_task
 23167 ;; This function uses a non-reentrant model
 23168 ;;
 23169                           
 23170                           	psect	text105
 23171  00BEC8                     __ptext105:
 23172                           	callstack 0
 23173  00BEC8                     _buffer_de_queue:
 23174                           	callstack 28
 23175  00BEC8                     
 23176                           ;buffer.c: 25: if (queue->read_pos == queue->write_pos)
 23177  00BEC8  EE20 F002          	lfsr	2,2
 23178  00BECC  5001               	movf	buffer_de_queue@queue^0,w,c
 23179  00BECE  26D9               	addwf	fsr2l,f,c
 23180  00BED0  5002               	movf	(buffer_de_queue@queue+1)^0,w,c
 23181  00BED2  22DA               	addwfc	fsr2h,f,c
 23182  00BED4  EE10 F001          	lfsr	1,1
 23183  00BED8  5001               	movf	buffer_de_queue@queue^0,w,c
 23184  00BEDA  26E1               	addwf	fsr1l,f,c
 23185  00BEDC  5002               	movf	(buffer_de_queue@queue+1)^0,w,c
 23186  00BEDE  22E2               	addwfc	fsr1h,f,c
 23187  00BEE0  50DE               	movf	postinc2,w,c
 23188  00BEE2  18E6               	xorwf	postinc1,w,c
 23189  00BEE4  A4D8               	btfss	status,2,c
 23190  00BEE6  EF77  F05F         	goto	u12261
 23191  00BEEA  EF79  F05F         	goto	u12260
 23192  00BEEE                     u12261:
 23193  00BEEE  EF7C  F05F         	goto	l12211
 23194  00BEF2                     u12260:
 23195  00BEF2                     
 23196                           ;buffer.c: 26: return ch;
 23197  00BEF2  0E00               	movlw	0
 23198  00BEF4  EFA3  F05F         	goto	l114
 23199  00BEF8                     l12211:
 23200                           
 23201                           ;buffer.c: 27: else {;buffer.c: 28: ch = queue->buffer[queue->read_pos];
 23202  00BEF8  EE20 F001          	lfsr	2,1
 23203  00BEFC  5001               	movf	buffer_de_queue@queue^0,w,c
 23204  00BEFE  26D9               	addwf	fsr2l,f,c
 23205  00BF00  5002               	movf	(buffer_de_queue@queue+1)^0,w,c
 23206  00BF02  22DA               	addwfc	fsr2h,f,c
 23207  00BF04  50DF               	movf	indf2,w,c
 23208  00BF06  6E03               	movwf	??_buffer_de_queue^0,c
 23209  00BF08  5003               	movf	??_buffer_de_queue^0,w,c
 23210  00BF0A  2401               	addwf	buffer_de_queue@queue^0,w,c
 23211  00BF0C  6E04               	movwf	(??_buffer_de_queue+1)^0,c
 23212  00BF0E  0E00               	movlw	0
 23213  00BF10  2002               	addwfc	(buffer_de_queue@queue+1)^0,w,c
 23214  00BF12  6E05               	movwf	(??_buffer_de_queue+2)^0,c
 23215  00BF14  0E03               	movlw	3
 23216  00BF16  2404               	addwf	(??_buffer_de_queue+1)^0,w,c
 23217  00BF18  6ED9               	movwf	fsr2l,c
 23218  00BF1A  0E00               	movlw	0
 23219  00BF1C  2005               	addwfc	(??_buffer_de_queue+2)^0,w,c
 23220  00BF1E  6EDA               	movwf	fsr2h,c
 23221  00BF20  50DF               	movf	indf2,w,c
 23222  00BF22  6E06               	movwf	buffer_de_queue@ch^0,c
 23223  00BF24                     
 23224                           ;buffer.c: 29: queue->read_pos = (++queue->read_pos)%64;
 23225  00BF24  EE20 F001          	lfsr	2,1
 23226  00BF28  5001               	movf	buffer_de_queue@queue^0,w,c
 23227  00BF2A  26D9               	addwf	fsr2l,f,c
 23228  00BF2C  5002               	movf	(buffer_de_queue@queue+1)^0,w,c
 23229  00BF2E  22DA               	addwfc	fsr2h,f,c
 23230  00BF30  EE10 F001          	lfsr	1,1
 23231  00BF34  5001               	movf	buffer_de_queue@queue^0,w,c
 23232  00BF36  26E1               	addwf	fsr1l,f,c
 23233  00BF38  5002               	movf	(buffer_de_queue@queue+1)^0,w,c
 23234  00BF3A  22E2               	addwfc	fsr1h,f,c
 23235  00BF3C  2AE7               	incf	indf1,f,c
 23236  00BF3E  50E7               	movf	indf1,w,c
 23237  00BF40  0B3F               	andlw	63
 23238  00BF42  6EDF               	movwf	indf2,c
 23239  00BF44                     
 23240                           ;buffer.c: 30: };buffer.c: 31: return ch;
 23241  00BF44  5006               	movf	buffer_de_queue@ch^0,w,c
 23242  00BF46                     l114:
 23243  00BF46  0012               	return		;funcret
 23244  00BF48                     __end_of_buffer_de_queue:
 23245                           	callstack 0
 23246                           
 23247 ;; *************** function _app_usb_task *****************
 23248 ;; Defined at:
 23249 ;;		line 72 in file "app_usb_cdc.c"
 23250 ;; Parameters:    Size  Location     Type
 23251 ;;		None
 23252 ;; Auto vars:     Size  Location     Type
 23253 ;;  i               1   16[COMRAM] unsigned char 
 23254 ;;  numBytesRead    1   15[COMRAM] unsigned char 
 23255 ;; Return value:  Size  Location     Type
 23256 ;;                  1    wreg      void 
 23257 ;; Registers used:
 23258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23259 ;; Tracked objects:
 23260 ;;		On entry : 0/0
 23261 ;;		On exit  : 0/0
 23262 ;;		Unchanged: 0/0
 23263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23268 ;;Total ram usage:        2 bytes
 23269 ;; Hardware stack levels used: 1
 23270 ;; Hardware stack levels required when called: 3
 23271 ;; This function calls:
 23272 ;;		_CDCTxService
 23273 ;;		_buffer_en_queue
 23274 ;;		_getsUSBUSART
 23275 ;; This function is called by:
 23276 ;;		_main
 23277 ;; This function uses a non-reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text106
 23281  00B92C                     __ptext106:
 23282                           	callstack 0
 23283  00B92C                     _app_usb_task:
 23284                           	callstack 27
 23285  00B92C                     
 23286                           ;app_usb_cdc.c: 77: if( USBDeviceState < CONFIGURED_STATE )
 23287  00B92C  0E20               	movlw	32
 23288  00B92E  0100               	movlb	0	; () banked
 23289  00B930  61E2               	cpfslt	_USBDeviceState& (0+255),b
 23290  00B932  EF9D  F05C         	goto	u14281
 23291  00B936  EF9F  F05C         	goto	u14280
 23292  00B93A                     u14281:
 23293  00B93A  EFA1  F05C         	goto	l1723
 23294  00B93E                     u14280:
 23295  00B93E  EFE1  F05C         	goto	l1724
 23296  00B942                     l1723:
 23297                           
 23298                           ; BSR set to: 0
 23299                           ;app_usb_cdc.c: 80: };app_usb_cdc.c: 86: if( UCONbits.SUSPND== 1 )
 23300  00B942  A265               	btfss	101,1,c	;volatile
 23301  00B944  EFA6  F05C         	goto	u14291
 23302  00B948  EFA8  F05C         	goto	u14290
 23303  00B94C                     u14291:
 23304  00B94C  EFAA  F05C         	goto	l13771
 23305  00B950                     u14290:
 23306  00B950  EFE1  F05C         	goto	l1724
 23307  00B954                     l13771:
 23308                           
 23309                           ; BSR set to: 0
 23310                           ;app_usb_cdc.c: 89: };app_usb_cdc.c: 94: if( (cdc_trf_state == 0) == 1)
 23311  00B954  51D4               	movf	_cdc_trf_state& (0+255),w,b
 23312  00B956  A4D8               	btfss	status,2,c
 23313  00B958  EFB0  F05C         	goto	u14301
 23314  00B95C  EFB2  F05C         	goto	u14300
 23315  00B960                     u14301:
 23316  00B960  EFDF  F05C         	goto	l13785
 23317  00B964                     u14300:
 23318  00B964                     
 23319                           ; BSR set to: 0
 23320                           ;app_usb_cdc.c: 95: {;app_usb_cdc.c: 96: uint8_t i;;app_usb_cdc.c: 97: uint8_t numBytesR
      +                          ead;;app_usb_cdc.c: 99: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
 23321  00B964  0E83               	movlw	low _readBuffer
 23322  00B966  6E0C               	movwf	getsUSBUSART@buffer^0,c
 23323  00B968  0E04               	movlw	high _readBuffer
 23324  00B96A  6E0D               	movwf	(getsUSBUSART@buffer+1)^0,c
 23325  00B96C  0E40               	movlw	64
 23326  00B96E  6E0E               	movwf	getsUSBUSART@len^0,c
 23327  00B970  ECDE  F057         	call	_getsUSBUSART	;wreg free
 23328  00B974  6E10               	movwf	app_usb_task@numBytesRead^0,c
 23329  00B976                     
 23330                           ;app_usb_cdc.c: 101: if(numBytesRead > 0)
 23331  00B976  5010               	movf	app_usb_task@numBytesRead^0,w,c
 23332  00B978  B4D8               	btfsc	status,2,c
 23333  00B97A  EFC1  F05C         	goto	u14311
 23334  00B97E  EFC3  F05C         	goto	u14310
 23335  00B982                     u14311:
 23336  00B982  EFDF  F05C         	goto	l13785
 23337  00B986                     u14310:
 23338  00B986                     
 23339                           ;app_usb_cdc.c: 102: {;app_usb_cdc.c: 103: for (i = 0 ; i < numBytesRead ; i++) {
 23340  00B986  0E00               	movlw	0
 23341  00B988  6E11               	movwf	app_usb_task@i^0,c
 23342  00B98A  EFD6  F05C         	goto	l13783
 23343  00B98E                     l13779:
 23344                           
 23345                           ;app_usb_cdc.c: 104: buffer_en_queue(&g_usb_queue, readBuffer[i]);
 23346  00B98E  0E40               	movlw	low _g_usb_queue
 23347  00B990  6E01               	movwf	buffer_en_queue@queue^0,c
 23348  00B992  0E04               	movlw	high _g_usb_queue
 23349  00B994  6E02               	movwf	(buffer_en_queue@queue+1)^0,c
 23350  00B996  0E83               	movlw	low _readBuffer
 23351  00B998  2411               	addwf	app_usb_task@i^0,w,c
 23352  00B99A  6ED9               	movwf	fsr2l,c
 23353  00B99C  6ADA               	clrf	fsr2h,c
 23354  00B99E  0E04               	movlw	high _readBuffer
 23355  00B9A0  22DA               	addwfc	fsr2h,f,c
 23356  00B9A2  50DF               	movf	indf2,w,c
 23357  00B9A4  6E03               	movwf	buffer_en_queue@ch^0,c
 23358  00B9A6  EC4D  F066         	call	_buffer_en_queue	;wreg free
 23359  00B9AA  2A11               	incf	app_usb_task@i^0,f,c
 23360  00B9AC                     l13783:
 23361  00B9AC  5010               	movf	app_usb_task@numBytesRead^0,w,c
 23362  00B9AE  5C11               	subwf	app_usb_task@i^0,w,c
 23363  00B9B0  A0D8               	btfss	status,0,c
 23364  00B9B2  EFDD  F05C         	goto	u14321
 23365  00B9B6  EFDF  F05C         	goto	u14320
 23366  00B9BA                     u14321:
 23367  00B9BA  EFC7  F05C         	goto	l13779
 23368  00B9BE                     u14320:
 23369  00B9BE                     l13785:
 23370                           
 23371                           ;app_usb_cdc.c: 105: };app_usb_cdc.c: 106: };app_usb_cdc.c: 107: };app_usb_cdc.c: 109: C
      +                          DCTxService();
 23372  00B9BE  ECDD  F03F         	call	_CDCTxService	;wreg free
 23373  00B9C2                     l1724:
 23374  00B9C2  0012               	return		;funcret
 23375  00B9C4                     __end_of_app_usb_task:
 23376                           	callstack 0
 23377                           
 23378 ;; *************** function _getsUSBUSART *****************
 23379 ;; Defined at:
 23380 ;;		line 486 in file "usb/usb_device_cdc.c"
 23381 ;; Parameters:    Size  Location     Type
 23382 ;;  buffer          2   11[COMRAM] PTR unsigned char 
 23383 ;;		 -> readBuffer(64), 
 23384 ;;  len             1   13[COMRAM] unsigned char 
 23385 ;; Auto vars:     Size  Location     Type
 23386 ;;		None
 23387 ;; Return value:  Size  Location     Type
 23388 ;;                  1    wreg      unsigned char 
 23389 ;; Registers used:
 23390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23391 ;; Tracked objects:
 23392 ;;		On entry : 0/0
 23393 ;;		On exit  : 0/0
 23394 ;;		Unchanged: 0/0
 23395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23396 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23399 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23400 ;;Total ram usage:        4 bytes
 23401 ;; Hardware stack levels used: 1
 23402 ;; Hardware stack levels required when called: 2
 23403 ;; This function calls:
 23404 ;;		_USBTransferOnePacket
 23405 ;; This function is called by:
 23406 ;;		_app_usb_task
 23407 ;; This function uses a non-reentrant model
 23408 ;;
 23409                           
 23410                           	psect	text107
 23411  00AFBC                     __ptext107:
 23412                           	callstack 0
 23413  00AFBC                     _getsUSBUSART:
 23414                           	callstack 27
 23415  00AFBC                     
 23416                           ;usb_device_cdc.c: 488: cdc_rx_len = 0;
 23417  00AFBC  0E00               	movlw	0
 23418  00AFBE  0100               	movlb	0	; () banked
 23419  00AFC0  6FD5               	movwf	_cdc_rx_len& (0+255),b
 23420  00AFC2                     
 23421                           ; BSR set to: 0
 23422                           ;usb_device_cdc.c: 490: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 23423  00AFC2  51C9               	movf	_CDCDataOutHandle& (0+255),w,b
 23424  00AFC4  11CA               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 23425  00AFC6  B4D8               	btfsc	status,2,c
 23426  00AFC8  EFE8  F057         	goto	u12391
 23427  00AFCC  EFEA  F057         	goto	u12390
 23428  00AFD0                     u12391:
 23429  00AFD0  EFF5  F057         	goto	l12371
 23430  00AFD4                     u12390:
 23431  00AFD4                     
 23432                           ; BSR set to: 0
 23433  00AFD4  C0C9  FFD9         	movff	_CDCDataOutHandle,fsr2l
 23434  00AFD8  C0CA  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 23435  00AFDC  BEDF               	btfsc	indf2,7,c
 23436  00AFDE  EFF3  F057         	goto	u12401
 23437  00AFE2  EFF5  F057         	goto	u12400
 23438  00AFE6                     u12401:
 23439  00AFE6  EF37  F058         	goto	l12385
 23440  00AFEA                     u12400:
 23441  00AFEA                     l12371:
 23442                           
 23443                           ; BSR set to: 0
 23444                           ;usb_device_cdc.c: 491: {;usb_device_cdc.c: 496: if(len > (((volatile BDT_ENTRY*)CDCData
      +                          OutHandle)->CNT))
 23445  00AFEA  EE20 F001          	lfsr	2,1
 23446  00AFEE  51C9               	movf	_CDCDataOutHandle& (0+255),w,b
 23447  00AFF0  26D9               	addwf	fsr2l,f,c
 23448  00AFF2  51CA               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23449  00AFF4  22DA               	addwfc	fsr2h,f,c
 23450  00AFF6  500E               	movf	getsUSBUSART@len^0,w,c
 23451  00AFF8  5CDE               	subwf	postinc2,w,c
 23452  00AFFA  B0D8               	btfsc	status,0,c
 23453  00AFFC  EF02  F058         	goto	u12411
 23454  00B000  EF04  F058         	goto	u12410
 23455  00B004                     u12411:
 23456  00B004  EF0C  F058         	goto	l12375
 23457  00B008                     u12410:
 23458  00B008                     
 23459                           ; BSR set to: 0
 23460                           ;usb_device_cdc.c: 497: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 23461  00B008  EE20 F001          	lfsr	2,1
 23462  00B00C  51C9               	movf	_CDCDataOutHandle& (0+255),w,b
 23463  00B00E  26D9               	addwf	fsr2l,f,c
 23464  00B010  51CA               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23465  00B012  22DA               	addwfc	fsr2h,f,c
 23466  00B014  50DF               	movf	indf2,w,c
 23467  00B016  6E0E               	movwf	getsUSBUSART@len^0,c
 23468  00B018                     l12375:
 23469                           
 23470                           ; BSR set to: 0
 23471                           ;usb_device_cdc.c: 502: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 23472  00B018  0E00               	movlw	0
 23473  00B01A  6FD5               	movwf	_cdc_rx_len& (0+255),b
 23474  00B01C  EF1F  F058         	goto	l12381
 23475  00B020                     l12377:
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;usb_device_cdc.c: 503: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 23479  00B020  0EB7               	movlw	low _cdc_data_rx
 23480  00B022  25D5               	addwf	_cdc_rx_len& (0+255),w,b
 23481  00B024  6ED9               	movwf	fsr2l,c
 23482  00B026  6ADA               	clrf	fsr2h,c
 23483  00B028  0E02               	movlw	high _cdc_data_rx
 23484  00B02A  22DA               	addwfc	fsr2h,f,c
 23485  00B02C  51D5               	movf	_cdc_rx_len& (0+255),w,b
 23486  00B02E  240C               	addwf	getsUSBUSART@buffer^0,w,c
 23487  00B030  6EE1               	movwf	fsr1l,c
 23488  00B032  0E00               	movlw	0
 23489  00B034  200D               	addwfc	(getsUSBUSART@buffer+1)^0,w,c
 23490  00B036  6EE2               	movwf	fsr1h,c
 23491  00B038  CFDF FFE7          	movff	indf2,indf1
 23492  00B03C                     
 23493                           ; BSR set to: 0
 23494  00B03C  2BD5               	incf	_cdc_rx_len& (0+255),f,b
 23495  00B03E                     l12381:
 23496                           
 23497                           ; BSR set to: 0
 23498  00B03E  500E               	movf	getsUSBUSART@len^0,w,c
 23499  00B040  5DD5               	subwf	_cdc_rx_len& (0+255),w,b
 23500  00B042  A0D8               	btfss	status,0,c
 23501  00B044  EF26  F058         	goto	u12421
 23502  00B048  EF28  F058         	goto	u12420
 23503  00B04C                     u12421:
 23504  00B04C  EF10  F058         	goto	l12377
 23505  00B050                     u12420:
 23506  00B050                     
 23507                           ; BSR set to: 0
 23508                           ;usb_device_cdc.c: 509: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 23509  00B050  0E00               	movlw	0
 23510  00B052  6E01               	movwf	USBTransferOnePacket@dir^0,c
 23511  00B054  0EB7               	movlw	low _cdc_data_rx
 23512  00B056  6E02               	movwf	USBTransferOnePacket@data^0,c
 23513  00B058  0E02               	movlw	high _cdc_data_rx
 23514  00B05A  6E03               	movwf	(USBTransferOnePacket@data+1)^0,c
 23515  00B05C  0E40               	movlw	64
 23516  00B05E  6E04               	movwf	USBTransferOnePacket@len^0,c
 23517  00B060  0E02               	movlw	2
 23518  00B062  EC6A  F04B         	call	_USBTransferOnePacket
 23519  00B066  C001  F0C9         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 23520  00B06A  C002  F0CA         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 23521  00B06E                     l12385:
 23522                           
 23523                           ;usb_device_cdc.c: 511: };usb_device_cdc.c: 513: return cdc_rx_len;
 23524  00B06E  0100               	movlb	0	; () banked
 23525  00B070  51D5               	movf	_cdc_rx_len& (0+255),w,b
 23526  00B072                     
 23527                           ; BSR set to: 0
 23528  00B072  0012               	return		;funcret
 23529  00B074                     __end_of_getsUSBUSART:
 23530                           	callstack 0
 23531                           
 23532 ;; *************** function _buffer_en_queue *****************
 23533 ;; Defined at:
 23534 ;;		line 15 in file "util/buffer.c"
 23535 ;; Parameters:    Size  Location     Type
 23536 ;;  queue           2    0[COMRAM] PTR struct buff_queue
 23537 ;;		 -> g_usb_queue(67), 
 23538 ;;  ch              1    2[COMRAM] unsigned char 
 23539 ;; Auto vars:     Size  Location     Type
 23540 ;;		None
 23541 ;; Return value:  Size  Location     Type
 23542 ;;                  1    wreg      void 
 23543 ;; Registers used:
 23544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23545 ;; Tracked objects:
 23546 ;;		On entry : 0/0
 23547 ;;		On exit  : 0/0
 23548 ;;		Unchanged: 0/0
 23549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23552 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23554 ;;Total ram usage:        6 bytes
 23555 ;; Hardware stack levels used: 1
 23556 ;; Hardware stack levels required when called: 1
 23557 ;; This function calls:
 23558 ;;		Nothing
 23559 ;; This function is called by:
 23560 ;;		_app_usb_task
 23561 ;; This function uses a non-reentrant model
 23562 ;;
 23563                           
 23564                           	psect	text108
 23565  00CC9A                     __ptext108:
 23566                           	callstack 0
 23567  00CC9A                     _buffer_en_queue:
 23568                           	callstack 28
 23569  00CC9A                     
 23570                           ;buffer.c: 17: queue->buffer[queue->write_pos] = ch;
 23571  00CC9A  EE20 F002          	lfsr	2,2
 23572  00CC9E  5001               	movf	buffer_en_queue@queue^0,w,c
 23573  00CCA0  26D9               	addwf	fsr2l,f,c
 23574  00CCA2  5002               	movf	(buffer_en_queue@queue+1)^0,w,c
 23575  00CCA4  22DA               	addwfc	fsr2h,f,c
 23576  00CCA6  50DF               	movf	indf2,w,c
 23577  00CCA8  6E04               	movwf	??_buffer_en_queue^0,c
 23578  00CCAA  5004               	movf	??_buffer_en_queue^0,w,c
 23579  00CCAC  2401               	addwf	buffer_en_queue@queue^0,w,c
 23580  00CCAE  6E05               	movwf	(??_buffer_en_queue+1)^0,c
 23581  00CCB0  0E00               	movlw	0
 23582  00CCB2  2002               	addwfc	(buffer_en_queue@queue+1)^0,w,c
 23583  00CCB4  6E06               	movwf	(??_buffer_en_queue+2)^0,c
 23584  00CCB6  0E03               	movlw	3
 23585  00CCB8  2405               	addwf	(??_buffer_en_queue+1)^0,w,c
 23586  00CCBA  6ED9               	movwf	fsr2l,c
 23587  00CCBC  0E00               	movlw	0
 23588  00CCBE  2006               	addwfc	(??_buffer_en_queue+2)^0,w,c
 23589  00CCC0  6EDA               	movwf	fsr2h,c
 23590  00CCC2  C003  FFDF         	movff	buffer_en_queue@ch,indf2
 23591  00CCC6                     
 23592                           ;buffer.c: 18: queue->write_pos = (++queue->write_pos)%64;
 23593  00CCC6  EE20 F002          	lfsr	2,2
 23594  00CCCA  5001               	movf	buffer_en_queue@queue^0,w,c
 23595  00CCCC  26D9               	addwf	fsr2l,f,c
 23596  00CCCE  5002               	movf	(buffer_en_queue@queue+1)^0,w,c
 23597  00CCD0  22DA               	addwfc	fsr2h,f,c
 23598  00CCD2  EE10 F002          	lfsr	1,2
 23599  00CCD6  5001               	movf	buffer_en_queue@queue^0,w,c
 23600  00CCD8  26E1               	addwf	fsr1l,f,c
 23601  00CCDA  5002               	movf	(buffer_en_queue@queue+1)^0,w,c
 23602  00CCDC  22E2               	addwfc	fsr1h,f,c
 23603  00CCDE  2AE7               	incf	indf1,f,c
 23604  00CCE0  50E7               	movf	indf1,w,c
 23605  00CCE2  0B3F               	andlw	63
 23606  00CCE4  6EDF               	movwf	indf2,c
 23607  00CCE6  0012               	return		;funcret
 23608  00CCE8                     __end_of_buffer_en_queue:
 23609                           	callstack 0
 23610                           
 23611 ;; *************** function _CDCTxService *****************
 23612 ;; Defined at:
 23613 ;;		line 837 in file "usb/usb_device_cdc.c"
 23614 ;; Parameters:    Size  Location     Type
 23615 ;;		None
 23616 ;; Auto vars:     Size  Location     Type
 23617 ;;  byte_to_send    1   12[COMRAM] unsigned char 
 23618 ;;  i               1   11[COMRAM] unsigned char 
 23619 ;; Return value:  Size  Location     Type
 23620 ;;                  1    wreg      void 
 23621 ;; Registers used:
 23622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23623 ;; Tracked objects:
 23624 ;;		On entry : 0/0
 23625 ;;		On exit  : 0/0
 23626 ;;		Unchanged: 0/0
 23627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23632 ;;Total ram usage:        2 bytes
 23633 ;; Hardware stack levels used: 1
 23634 ;; Hardware stack levels required when called: 2
 23635 ;; This function calls:
 23636 ;;		_USBTransferOnePacket
 23637 ;; This function is called by:
 23638 ;;		_app_usb_task
 23639 ;; This function uses a non-reentrant model
 23640 ;;
 23641                           
 23642                           	psect	text109
 23643  007FBA                     __ptext109:
 23644                           	callstack 0
 23645  007FBA                     _CDCTxService:
 23646                           	callstack 27
 23647  007FBA                     
 23648                           ;usb_device_cdc.c: 839: uint8_t byte_to_send;;usb_device_cdc.c: 840: uint8_t i;;usb_devi
      +                          ce_cdc.c: 842: ;;usb_device_cdc.c: 844: {};;usb_device_cdc.c: 846: if(((CDCDataInHandle 
      +                          != 0x0000) && ((*(volatile uint8_t*)CDCDataInHandle & 0x80) != 0x00)))
 23649  007FBA  0101               	movlb	1	; () banked
 23650  007FBC  5188               	movf	_CDCDataInHandle& (0+255),w,b
 23651  007FBE  1189               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 23652  007FC0  B4D8               	btfsc	status,2,c
 23653  007FC2  EFE5  F03F         	goto	u12431
 23654  007FC6  EFE7  F03F         	goto	u12430
 23655  007FCA                     u12431:
 23656  007FCA  EFF4  F03F         	goto	l12395
 23657  007FCE                     u12430:
 23658  007FCE                     
 23659                           ; BSR set to: 1
 23660  007FCE  C188  FFD9         	movff	_CDCDataInHandle,fsr2l
 23661  007FD2  C189  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 23662  007FD6  AEDF               	btfss	indf2,7,c
 23663  007FD8  EFF0  F03F         	goto	u12441
 23664  007FDC  EFF2  F03F         	goto	u12440
 23665  007FE0                     u12441:
 23666  007FE0  EFF4  F03F         	goto	l12395
 23667  007FE4                     u12440:
 23668  007FE4  EFC0  F040         	goto	l700
 23669  007FE8                     l12395:
 23670                           
 23671                           ; BSR set to: 1
 23672                           ;usb_device_cdc.c: 850: };usb_device_cdc.c: 857: if(cdc_trf_state == 3)
 23673  007FE8  0E03               	movlw	3
 23674  007FEA  0100               	movlb	0	; () banked
 23675  007FEC  19D4               	xorwf	_cdc_trf_state& (0+255),w,b
 23676  007FEE  A4D8               	btfss	status,2,c
 23677  007FF0  EFFC  F03F         	goto	u12451
 23678  007FF4  EFFE  F03F         	goto	u12450
 23679  007FF8                     u12451:
 23680  007FF8  EF00  F040         	goto	l701
 23681  007FFC                     u12450:
 23682  007FFC                     
 23683                           ; BSR set to: 0
 23684                           ;usb_device_cdc.c: 858: cdc_trf_state = 0;
 23685  007FFC  0E00               	movlw	0
 23686  007FFE  6FD4               	movwf	_cdc_trf_state& (0+255),b
 23687  008000                     l701:
 23688                           
 23689                           ; BSR set to: 0
 23690                           ;usb_device_cdc.c: 863: if(cdc_trf_state == 0)
 23691  008000  51D4               	movf	_cdc_trf_state& (0+255),w,b
 23692  008002  A4D8               	btfss	status,2,c
 23693  008004  EF06  F040         	goto	u12461
 23694  008008  EF08  F040         	goto	u12460
 23695  00800C                     u12461:
 23696  00800C  EF0A  F040         	goto	l12401
 23697  008010                     u12460:
 23698  008010  EFC0  F040         	goto	l700
 23699  008014                     l12401:
 23700                           
 23701                           ; BSR set to: 0
 23702                           ;usb_device_cdc.c: 867: };usb_device_cdc.c: 872: if(cdc_trf_state == 2)
 23703  008014  0E02               	movlw	2
 23704  008016  19D4               	xorwf	_cdc_trf_state& (0+255),w,b
 23705  008018  A4D8               	btfss	status,2,c
 23706  00801A  EF11  F040         	goto	u12471
 23707  00801E  EF13  F040         	goto	u12470
 23708  008022                     u12471:
 23709  008022  EF27  F040         	goto	l12407
 23710  008026                     u12470:
 23711  008026                     
 23712                           ; BSR set to: 0
 23713                           ;usb_device_cdc.c: 873: {;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(0),0);
 23714  008026  0E01               	movlw	1
 23715  008028  6E01               	movwf	USBTransferOnePacket@dir^0,c
 23716  00802A  0E00               	movlw	0
 23717  00802C  6E02               	movwf	USBTransferOnePacket@data^0,c
 23718  00802E  0E00               	movlw	0
 23719  008030  6E03               	movwf	(USBTransferOnePacket@data+1)^0,c
 23720  008032  0E00               	movlw	0
 23721  008034  6E04               	movwf	USBTransferOnePacket@len^0,c
 23722  008036  0E02               	movlw	2
 23723  008038  EC6A  F04B         	call	_USBTransferOnePacket
 23724  00803C  C001  F188         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23725  008040  C002  F189         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23726  008044                     
 23727                           ;usb_device_cdc.c: 876: cdc_trf_state = 3;
 23728  008044  0E03               	movlw	3
 23729  008046  0100               	movlb	0	; () banked
 23730  008048  6FD4               	movwf	_cdc_trf_state& (0+255),b
 23731                           
 23732                           ;usb_device_cdc.c: 877: }
 23733  00804A  EFC0  F040         	goto	l700
 23734  00804E                     l12407:
 23735                           
 23736                           ; BSR set to: 0
 23737                           ;usb_device_cdc.c: 878: else if(cdc_trf_state == 1)
 23738  00804E  05D4               	decf	_cdc_trf_state& (0+255),w,b
 23739  008050  A4D8               	btfss	status,2,c
 23740  008052  EF2D  F040         	goto	u12481
 23741  008056  EF2F  F040         	goto	u12480
 23742  00805A                     u12481:
 23743  00805A  EFC0  F040         	goto	l700
 23744  00805E                     u12480:
 23745  00805E                     
 23746                           ; BSR set to: 0
 23747                           ;usb_device_cdc.c: 879: {;usb_device_cdc.c: 883: if(cdc_tx_len > sizeof(cdc_data_tx))
 23748  00805E  0E40               	movlw	64
 23749  008060  65D3               	cpfsgt	_cdc_tx_len& (0+255),b
 23750  008062  EF35  F040         	goto	u12491
 23751  008066  EF37  F040         	goto	u12490
 23752  00806A                     u12491:
 23753  00806A  EF3B  F040         	goto	l706
 23754  00806E                     u12490:
 23755  00806E                     
 23756                           ; BSR set to: 0
 23757                           ;usb_device_cdc.c: 884: byte_to_send = sizeof(cdc_data_tx);
 23758  00806E  0E40               	movlw	64
 23759  008070  6E0D               	movwf	CDCTxService@byte_to_send^0,c
 23760  008072  EF3D  F040         	goto	l12413
 23761  008076                     l706:
 23762                           
 23763                           ; BSR set to: 0
 23764                           ;usb_device_cdc.c: 885: else;usb_device_cdc.c: 886: byte_to_send = cdc_tx_len;
 23765  008076  C0D3  F00D         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 23766  00807A                     l12413:
 23767                           
 23768                           ; BSR set to: 0
 23769                           ;usb_device_cdc.c: 891: cdc_tx_len = cdc_tx_len - byte_to_send;
 23770  00807A  500D               	movf	CDCTxService@byte_to_send^0,w,c
 23771  00807C  5DD3               	subwf	_cdc_tx_len& (0+255),w,b
 23772  00807E  6FD3               	movwf	_cdc_tx_len& (0+255),b
 23773                           
 23774                           ;usb_device_cdc.c: 893: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 23775  008080  0EB5               	movlw	low _cdc_data_tx
 23776  008082  0101               	movlb	1	; () banked
 23777  008084  6F74               	movwf	_pCDCDst& (0+255),b
 23778  008086  0E03               	movlw	high _cdc_data_tx
 23779  008088  6F75               	movwf	(_pCDCDst+1)& (0+255),b
 23780  00808A                     
 23781                           ; BSR set to: 1
 23782                           ;usb_device_cdc.c: 895: i = byte_to_send;
 23783  00808A  C00D  F00C         	movff	CDCTxService@byte_to_send,CDCTxService@i
 23784  00808E                     
 23785                           ; BSR set to: 1
 23786                           ;usb_device_cdc.c: 896: if(cdc_mem_type == 0x00)
 23787  00808E  518E               	movf	_cdc_mem_type& (0+255),w,b
 23788  008090  A4D8               	btfss	status,2,c
 23789  008092  EF4D  F040         	goto	u12501
 23790  008096  EF4F  F040         	goto	u12500
 23791  00809A                     u12501:
 23792  00809A  EF91  F040         	goto	l12439
 23793  00809E                     u12500:
 23794  00809E  EF6C  F040         	goto	l12429
 23795  0080A2                     l12421:
 23796                           
 23797                           ; BSR set to: 1
 23798                           ;usb_device_cdc.c: 899: {;usb_device_cdc.c: 900: *pCDCDst.bRam = *pCDCSrc.bRom;
 23799  0080A2  C177  FFF6         	movff	_pCDCSrc,tblptrl
 23800  0080A6  C178  FFF7         	movff	_pCDCSrc+1,tblptrh
 23801  0080AA  6AF8               	clrf	tblptru,c
 23802  0080AC  C174  FFD9         	movff	_pCDCDst,fsr2l
 23803  0080B0  C175  FFDA         	movff	_pCDCDst+1,fsr2h
 23804  0080B4  0E0E               	movlw	(high __ramtop+-1)
 23805  0080B6  64F7               	cpfsgt	tblptrh,c
 23806  0080B8  D003               	bra	u12517
 23807  0080BA  0008               	tblrd		*
 23808  0080BC  50F5               	movf	tablat,w,c
 23809  0080BE  D005               	bra	u12510
 23810  0080C0                     u12517:
 23811  0080C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 23812  0080C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 23813  0080C8  50EF               	movf	indf0,w,c
 23814  0080CA                     u12510:
 23815  0080CA  6EDF               	movwf	indf2,c
 23816  0080CC                     
 23817                           ;usb_device_cdc.c: 901: pCDCDst.bRam++;
 23818  0080CC  0101               	movlb	1	; () banked
 23819  0080CE  4B74               	infsnz	_pCDCDst& (0+255),f,b
 23820  0080D0  2B75               	incf	(_pCDCDst+1)& (0+255),f,b
 23821  0080D2                     
 23822                           ; BSR set to: 1
 23823                           ;usb_device_cdc.c: 902: pCDCSrc.bRom++;
 23824  0080D2  4B77               	infsnz	_pCDCSrc& (0+255),f,b
 23825  0080D4  2B78               	incf	(_pCDCSrc+1)& (0+255),f,b
 23826  0080D6                     
 23827                           ; BSR set to: 1
 23828                           ;usb_device_cdc.c: 903: i--;
 23829  0080D6  060C               	decf	CDCTxService@i^0,f,c
 23830  0080D8                     l12429:
 23831                           
 23832                           ; BSR set to: 1
 23833  0080D8  500C               	movf	CDCTxService@i^0,w,c
 23834  0080DA  A4D8               	btfss	status,2,c
 23835  0080DC  EF72  F040         	goto	u12521
 23836  0080E0  EF74  F040         	goto	u12520
 23837  0080E4                     u12521:
 23838  0080E4  EF51  F040         	goto	l12421
 23839  0080E8                     u12520:
 23840  0080E8  EF99  F040         	goto	l12441
 23841  0080EC                     l12431:
 23842                           
 23843                           ; BSR set to: 1
 23844                           ;usb_device_cdc.c: 909: {;usb_device_cdc.c: 910: *pCDCDst.bRam = *pCDCSrc.bRam;
 23845  0080EC  C177  FFF6         	movff	_pCDCSrc,tblptrl
 23846  0080F0  C178  FFF7         	movff	_pCDCSrc+1,tblptrh
 23847  0080F4  6AF8               	clrf	tblptru,c
 23848  0080F6  C174  FFD9         	movff	_pCDCDst,fsr2l
 23849  0080FA  C175  FFDA         	movff	_pCDCDst+1,fsr2h
 23850  0080FE  0E0E               	movlw	(high __ramtop+-1)
 23851  008100  64F7               	cpfsgt	tblptrh,c
 23852  008102  D003               	bra	u12537
 23853  008104  0008               	tblrd		*
 23854  008106  50F5               	movf	tablat,w,c
 23855  008108  D005               	bra	u12530
 23856  00810A                     u12537:
 23857  00810A  CFF6 FFE9          	movff	tblptrl,fsr0l
 23858  00810E  CFF7 FFEA          	movff	tblptrh,fsr0h
 23859  008112  50EF               	movf	indf0,w,c
 23860  008114                     u12530:
 23861  008114  6EDF               	movwf	indf2,c
 23862  008116                     
 23863                           ;usb_device_cdc.c: 911: pCDCDst.bRam++;
 23864  008116  0101               	movlb	1	; () banked
 23865  008118  4B74               	infsnz	_pCDCDst& (0+255),f,b
 23866  00811A  2B75               	incf	(_pCDCDst+1)& (0+255),f,b
 23867  00811C                     
 23868                           ; BSR set to: 1
 23869                           ;usb_device_cdc.c: 912: pCDCSrc.bRam++;
 23870  00811C  4B77               	infsnz	_pCDCSrc& (0+255),f,b
 23871  00811E  2B78               	incf	(_pCDCSrc+1)& (0+255),f,b
 23872  008120                     
 23873                           ; BSR set to: 1
 23874                           ;usb_device_cdc.c: 913: i--;
 23875  008120  060C               	decf	CDCTxService@i^0,f,c
 23876  008122                     l12439:
 23877                           
 23878                           ; BSR set to: 1
 23879  008122  500C               	movf	CDCTxService@i^0,w,c
 23880  008124  A4D8               	btfss	status,2,c
 23881  008126  EF97  F040         	goto	u12541
 23882  00812A  EF99  F040         	goto	u12540
 23883  00812E                     u12541:
 23884  00812E  EF76  F040         	goto	l12431
 23885  008132                     u12540:
 23886  008132                     l12441:
 23887                           
 23888                           ; BSR set to: 1
 23889                           ;usb_device_cdc.c: 914: };usb_device_cdc.c: 915: };usb_device_cdc.c: 921: if(cdc_tx_len 
      +                          == 0)
 23890  008132  0100               	movlb	0	; () banked
 23891  008134  51D3               	movf	_cdc_tx_len& (0+255),w,b
 23892  008136  A4D8               	btfss	status,2,c
 23893  008138  EFA0  F040         	goto	u12551
 23894  00813C  EFA2  F040         	goto	u12550
 23895  008140                     u12551:
 23896  008140  EFB1  F040         	goto	l12449
 23897  008144                     u12550:
 23898  008144                     
 23899                           ; BSR set to: 0
 23900                           ;usb_device_cdc.c: 922: {;usb_device_cdc.c: 923: if(byte_to_send == 64)
 23901  008144  0E40               	movlw	64
 23902  008146  180D               	xorwf	CDCTxService@byte_to_send^0,w,c
 23903  008148  A4D8               	btfss	status,2,c
 23904  00814A  EFA9  F040         	goto	u12561
 23905  00814E  EFAB  F040         	goto	u12560
 23906  008152                     u12561:
 23907  008152  EFAF  F040         	goto	l12447
 23908  008156                     u12560:
 23909  008156                     
 23910                           ; BSR set to: 0
 23911                           ;usb_device_cdc.c: 924: cdc_trf_state = 2;
 23912  008156  0E02               	movlw	2
 23913  008158  6FD4               	movwf	_cdc_trf_state& (0+255),b
 23914  00815A  EFB1  F040         	goto	l12449
 23915  00815E                     l12447:
 23916                           
 23917                           ; BSR set to: 0
 23918                           ;usb_device_cdc.c: 925: else;usb_device_cdc.c: 926: cdc_trf_state = 3;
 23919  00815E  0E03               	movlw	3
 23920  008160  6FD4               	movwf	_cdc_trf_state& (0+255),b
 23921  008162                     l12449:
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;usb_device_cdc.c: 927: };usb_device_cdc.c: 928: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(uint8_t*)&cdc_data_tx,byte_to_send);
 23925  008162  0E01               	movlw	1
 23926  008164  6E01               	movwf	USBTransferOnePacket@dir^0,c
 23927  008166  0EB5               	movlw	low _cdc_data_tx
 23928  008168  6E02               	movwf	USBTransferOnePacket@data^0,c
 23929  00816A  0E03               	movlw	high _cdc_data_tx
 23930  00816C  6E03               	movwf	(USBTransferOnePacket@data+1)^0,c
 23931  00816E  C00D  F004         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 23932  008172  0E02               	movlw	2
 23933  008174  EC6A  F04B         	call	_USBTransferOnePacket
 23934  008178  C001  F188         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23935  00817C  C002  F189         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23936  008180                     l700:
 23937  008180  0012               	return		;funcret
 23938  008182                     __end_of_CDCTxService:
 23939                           	callstack 0
 23940                           
 23941 ;; *************** function _WDT_initialize *****************
 23942 ;; Defined at:
 23943 ;;		line 56 in file "main.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;		None
 23946 ;; Auto vars:     Size  Location     Type
 23947 ;;		None
 23948 ;; Return value:  Size  Location     Type
 23949 ;;                  1    wreg      void 
 23950 ;; Registers used:
 23951 ;;		None
 23952 ;; Tracked objects:
 23953 ;;		On entry : 0/0
 23954 ;;		On exit  : 0/0
 23955 ;;		Unchanged: 0/0
 23956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23961 ;;Total ram usage:        0 bytes
 23962 ;; Hardware stack levels used: 1
 23963 ;; Hardware stack levels required when called: 1
 23964 ;; This function calls:
 23965 ;;		Nothing
 23966 ;; This function is called by:
 23967 ;;		_main
 23968 ;; This function uses a non-reentrant model
 23969 ;;
 23970                           
 23971                           	psect	text110
 23972  00D670                     __ptext110:
 23973                           	callstack 0
 23974  00D670                     _WDT_initialize:
 23975                           	callstack 29
 23976  00D670                     
 23977                           ;main.c: 58: WDTCONbits.SWDTEN = 1;
 23978  00D670  80C0               	bsf	192,0,c	;volatile
 23979  00D672  0012               	return		;funcret
 23980  00D674                     __end_of_WDT_initialize:
 23981                           	callstack 0
 23982                           
 23983 ;; *************** function _USBDeviceTasks *****************
 23984 ;; Defined at:
 23985 ;;		line 481 in file "usb/usb_device.c"
 23986 ;; Parameters:    Size  Location     Type
 23987 ;;		None
 23988 ;; Auto vars:     Size  Location     Type
 23989 ;;  i               1   28[COMRAM] unsigned char 
 23990 ;; Return value:  Size  Location     Type
 23991 ;;                  1    wreg      void 
 23992 ;; Registers used:
 23993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23994 ;; Tracked objects:
 23995 ;;		On entry : 0/0
 23996 ;;		On exit  : 0/0
 23997 ;;		Unchanged: 0/0
 23998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24003 ;;Total ram usage:        1 bytes
 24004 ;; Hardware stack levels used: 1
 24005 ;; Hardware stack levels required when called: 9
 24006 ;; This function calls:
 24007 ;;		_USBCtrlEPAllowStatusStage
 24008 ;;		_USBCtrlEPService
 24009 ;;		_USBDeviceInit
 24010 ;;		_USBIncrement1msInternalTimers
 24011 ;;		_USBStallHandler
 24012 ;;		_USBSuspend
 24013 ;;		_USBWakeFromSuspend
 24014 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24015 ;; This function is called by:
 24016 ;;		_main
 24017 ;; This function uses a non-reentrant model
 24018 ;;
 24019                           
 24020                           	psect	text111
 24021  006E92                     __ptext111:
 24022                           	callstack 0
 24023  006E92                     _USBDeviceTasks:
 24024                           	callstack 21
 24025  006E92                     
 24026                           ;usb_device.c: 548: };usb_device.c: 570: if(USBDeviceState == DETACHED_STATE)
 24027  006E92  0100               	movlb	0	; () banked
 24028  006E94  51E2               	movf	_USBDeviceState& (0+255),w,b
 24029  006E96  A4D8               	btfss	status,2,c
 24030  006E98  EF50  F037         	goto	u13641
 24031  006E9C  EF52  F037         	goto	u13640
 24032  006EA0                     u13641:
 24033  006EA0  EF6A  F037         	goto	l13315
 24034  006EA4                     u13640:
 24035  006EA4                     
 24036                           ; BSR set to: 0
 24037                           ;usb_device.c: 571: {;usb_device.c: 573: UCON = 0;
 24038  006EA4  0E00               	movlw	0
 24039  006EA6  6E65               	movwf	101,c	;volatile
 24040                           
 24041                           ;usb_device.c: 576: UIE = 0;
 24042  006EA8  0E00               	movlw	0
 24043  006EAA  010F               	movlb	15	; () banked
 24044  006EAC  6F36               	movwf	54,b	;volatile
 24045                           
 24046                           ;usb_device.c: 580: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24047  006EAE  0E16               	movlw	22
 24048  006EB0  6F39               	movwf	57,b	;volatile
 24049  006EB2  0E9F               	movlw	159
 24050  006EB4  6F37               	movwf	55,b	;volatile
 24051  006EB6  0E7B               	movlw	123
 24052  006EB8  6F36               	movwf	54,b	;volatile
 24053                           
 24054                           ;usb_device.c: 583: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 24055  006EBA  EF60  F037         	goto	l362
 24056  006EBE                     l363:
 24057  006EBE  8665               	bsf	101,3,c	;volatile
 24058  006EC0                     l362:
 24059  006EC0  A665               	btfss	101,3,c	;volatile
 24060  006EC2  EF65  F037         	goto	u13651
 24061  006EC6  EF67  F037         	goto	u13650
 24062  006ECA                     u13651:
 24063  006ECA  EF5F  F037         	goto	l363
 24064  006ECE                     u13650:
 24065  006ECE                     
 24066                           ;usb_device.c: 586: USBDeviceState = ATTACHED_STATE;
 24067  006ECE  0E01               	movlw	1
 24068  006ED0  0100               	movlb	0	; () banked
 24069  006ED2  6FE2               	movwf	_USBDeviceState& (0+255),b
 24070  006ED4                     l13315:
 24071                           
 24072                           ; BSR set to: 0
 24073                           ;usb_device.c: 591: };usb_device.c: 594: if(USBDeviceState == ATTACHED_STATE)
 24074  006ED4  05E2               	decf	_USBDeviceState& (0+255),w,b
 24075  006ED6  A4D8               	btfss	status,2,c
 24076  006ED8  EF70  F037         	goto	u13661
 24077  006EDC  EF72  F037         	goto	u13660
 24078  006EE0                     u13661:
 24079  006EE0  EF83  F037         	goto	l13325
 24080  006EE4                     u13660:
 24081  006EE4                     
 24082                           ; BSR set to: 0
 24083                           ;usb_device.c: 595: {;usb_device.c: 605: if(!UCONbits.SE0)
 24084  006EE4  BA65               	btfsc	101,5,c	;volatile
 24085  006EE6  EF77  F037         	goto	u13671
 24086  006EEA  EF79  F037         	goto	u13670
 24087  006EEE                     u13671:
 24088  006EEE  EF83  F037         	goto	l13325
 24089  006EF2                     u13670:
 24090  006EF2                     
 24091                           ; BSR set to: 0
 24092                           ;usb_device.c: 606: {;usb_device.c: 612: {UIR = 0;};
 24093  006EF2  0E00               	movlw	0
 24094  006EF4  6E62               	movwf	98,c	;volatile
 24095                           
 24096                           ;usb_device.c: 616: UIE=0;
 24097  006EF6  0E00               	movlw	0
 24098  006EF8  010F               	movlb	15	; () banked
 24099  006EFA  6F36               	movwf	54,b	;volatile
 24100  006EFC                     
 24101                           ; BSR set to: 15
 24102                           ;usb_device.c: 618: UIEbits.URSTIE = 1;
 24103  006EFC  8136               	bsf	54,0,b	;volatile
 24104  006EFE                     
 24105                           ; BSR set to: 15
 24106                           ;usb_device.c: 619: UIEbits.IDLEIE = 1;
 24107  006EFE  8936               	bsf	54,4,b	;volatile
 24108                           
 24109                           ;usb_device.c: 620: USBDeviceState = POWERED_STATE;
 24110  006F00  0E02               	movlw	2
 24111  006F02  0100               	movlb	0	; () banked
 24112  006F04  6FE2               	movwf	_USBDeviceState& (0+255),b
 24113  006F06                     l13325:
 24114                           
 24115                           ; BSR set to: 0
 24116                           ;usb_device.c: 621: };usb_device.c: 622: };usb_device.c: 638: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 24117  006F06  A462               	btfss	98,2,c	;volatile
 24118  006F08  EF88  F037         	goto	u13681
 24119  006F0C  EF8A  F037         	goto	u13680
 24120  006F10                     u13681:
 24121  006F10  EF95  F037         	goto	l13333
 24122  006F14                     u13680:
 24123  006F14                     
 24124                           ; BSR set to: 0
 24125  006F14  010F               	movlb	15	; () banked
 24126  006F16  A536               	btfss	54,2,b	;volatile
 24127  006F18  EF90  F037         	goto	u13691
 24128  006F1C  EF92  F037         	goto	u13690
 24129  006F20                     u13691:
 24130  006F20  EF95  F037         	goto	l13333
 24131  006F24                     u13690:
 24132  006F24                     
 24133                           ; BSR set to: 15
 24134                           ;usb_device.c: 639: {;usb_device.c: 640: (UIR &= 0xFB);
 24135  006F24  9462               	bcf	98,2,c	;volatile
 24136  006F26                     
 24137                           ; BSR set to: 15
 24138                           ;usb_device.c: 644: USBWakeFromSuspend();
 24139  006F26  EC2B  F067         	call	_USBWakeFromSuspend	;wreg free
 24140  006F2A                     l13333:
 24141                           
 24142                           ;usb_device.c: 646: };usb_device.c: 651: if(UCONbits.SUSPND==1)
 24143  006F2A  A265               	btfss	101,1,c	;volatile
 24144  006F2C  EF9A  F037         	goto	u13701
 24145  006F30  EF9C  F037         	goto	u13700
 24146  006F34                     u13701:
 24147  006F34  EF9F  F037         	goto	l368
 24148  006F38                     u13700:
 24149  006F38                     
 24150                           ;usb_device.c: 652: {;usb_device.c: 653: {PIR2bits.USBIF = 0;};
 24151  006F38  98A1               	bcf	161,4,c	;volatile
 24152                           
 24153                           ;usb_device.c: 654: return;
 24154  006F3A  EF8C  F038         	goto	l360
 24155  006F3E                     l368:
 24156                           
 24157                           ;usb_device.c: 655: };usb_device.c: 667: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24158  006F3E  A062               	btfss	98,0,c	;volatile
 24159  006F40  EFA4  F037         	goto	u13711
 24160  006F44  EFA6  F037         	goto	u13710
 24161  006F48                     u13711:
 24162  006F48  EFB4  F037         	goto	l13345
 24163  006F4C                     u13710:
 24164  006F4C  010F               	movlb	15	; () banked
 24165  006F4E  A136               	btfss	54,0,b	;volatile
 24166  006F50  EFAC  F037         	goto	u13721
 24167  006F54  EFAE  F037         	goto	u13720
 24168  006F58                     u13721:
 24169  006F58  EFB4  F037         	goto	l13345
 24170  006F5C                     u13720:
 24171  006F5C                     
 24172                           ; BSR set to: 15
 24173                           ;usb_device.c: 668: {;usb_device.c: 669: USBDeviceInit();
 24174  006F5C  EC32  F046         	call	_USBDeviceInit	;wreg free
 24175  006F60                     
 24176                           ;usb_device.c: 673: ;;usb_device.c: 675: USBDeviceState = DEFAULT_STATE;
 24177  006F60  0E04               	movlw	4
 24178  006F62  0100               	movlb	0	; () banked
 24179  006F64  6FE2               	movwf	_USBDeviceState& (0+255),b
 24180  006F66                     
 24181                           ; BSR set to: 0
 24182                           ;usb_device.c: 685: (UIR &= 0xFE);
 24183  006F66  9062               	bcf	98,0,c	;volatile
 24184  006F68                     l13345:
 24185                           
 24186                           ;usb_device.c: 686: };usb_device.c: 691: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24187  006F68  A862               	btfss	98,4,c	;volatile
 24188  006F6A  EFB9  F037         	goto	u13731
 24189  006F6E  EFBB  F037         	goto	u13730
 24190  006F72                     u13731:
 24191  006F72  EFC5  F037         	goto	l13351
 24192  006F76                     u13730:
 24193  006F76  010F               	movlb	15	; () banked
 24194  006F78  A936               	btfss	54,4,b	;volatile
 24195  006F7A  EFC1  F037         	goto	u13741
 24196  006F7E  EFC3  F037         	goto	u13740
 24197  006F82                     u13741:
 24198  006F82  EFC5  F037         	goto	l13351
 24199  006F86                     u13740:
 24200  006F86                     
 24201                           ; BSR set to: 15
 24202                           ;usb_device.c: 692: {;usb_device.c: 698: USBSuspend();
 24203  006F86  ECDA  F068         	call	_USBSuspend	;wreg free
 24204  006F8A                     l13351:
 24205                           
 24206                           ;usb_device.c: 700: };usb_device.c: 712: if(UIRbits.SOFIF)
 24207  006F8A  AC62               	btfss	98,6,c	;volatile
 24208  006F8C  EFCA  F037         	goto	u13751
 24209  006F90  EFCC  F037         	goto	u13750
 24210  006F94                     u13751:
 24211  006F94  EFF9  F037         	goto	l13369
 24212  006F98                     u13750:
 24213  006F98                     
 24214                           ;usb_device.c: 713: {;usb_device.c: 715: if(UIEbits.SOFIE)
 24215  006F98  010F               	movlb	15	; () banked
 24216  006F9A  AD36               	btfss	54,6,b	;volatile
 24217  006F9C  EFD2  F037         	goto	u13761
 24218  006FA0  EFD4  F037         	goto	u13760
 24219  006FA4                     u13761:
 24220  006FA4  EFE2  F037         	goto	l13357
 24221  006FA8                     u13760:
 24222  006FA8                     
 24223                           ; BSR set to: 15
 24224                           ;usb_device.c: 716: {;usb_device.c: 717: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVEN
      +                          T_SOF,0,1);
 24225  006FA8  0E00               	movlw	0
 24226  006FAA  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24227  006FAC  0E73               	movlw	115
 24228  006FAE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24229  006FB0  0E00               	movlw	0
 24230  006FB2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24231  006FB4  0E00               	movlw	0
 24232  006FB6  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24233  006FB8  0E00               	movlw	0
 24234  006FBA  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24235  006FBC  0E01               	movlw	1
 24236  006FBE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24237  006FC0  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24238  006FC4                     l13357:
 24239                           
 24240                           ;usb_device.c: 718: };usb_device.c: 719: (UIR &= 0xBF);
 24241  006FC4  9C62               	bcf	98,6,c	;volatile
 24242  006FC6                     
 24243                           ;usb_device.c: 722: USBIncrement1msInternalTimers();
 24244  006FC6  EC1F  F068         	call	_USBIncrement1msInternalTimers	;wreg free
 24245  006FCA                     
 24246                           ;usb_device.c: 739: if(USBStatusStageTimeoutCounter != 0u)
 24247  006FCA  0100               	movlb	0	; () banked
 24248  006FCC  51DB               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 24249  006FCE  B4D8               	btfsc	status,2,c
 24250  006FD0  EFEC  F037         	goto	u13771
 24251  006FD4  EFEE  F037         	goto	u13770
 24252  006FD8                     u13771:
 24253  006FD8  EFEF  F037         	goto	l13365
 24254  006FDC                     u13770:
 24255  006FDC                     
 24256                           ; BSR set to: 0
 24257                           ;usb_device.c: 740: {;usb_device.c: 741: USBStatusStageTimeoutCounter--;
 24258  006FDC  07DB               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 24259  006FDE                     l13365:
 24260                           
 24261                           ; BSR set to: 0
 24262                           ;usb_device.c: 742: };usb_device.c: 748: if(USBStatusStageTimeoutCounter == 0)
 24263  006FDE  51DB               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 24264  006FE0  A4D8               	btfss	status,2,c
 24265  006FE2  EFF5  F037         	goto	u13781
 24266  006FE6  EFF7  F037         	goto	u13780
 24267  006FEA                     u13781:
 24268  006FEA  EFF9  F037         	goto	l13369
 24269  006FEE                     u13780:
 24270  006FEE                     
 24271                           ; BSR set to: 0
 24272                           ;usb_device.c: 749: {;usb_device.c: 750: USBCtrlEPAllowStatusStage();
 24273  006FEE  EC62  F053         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24274  006FF2                     l13369:
 24275                           
 24276                           ;usb_device.c: 751: };usb_device.c: 753: };usb_device.c: 755: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 24277  006FF2  AA62               	btfss	98,5,c	;volatile
 24278  006FF4  EFFE  F037         	goto	u13791
 24279  006FF8  EF00  F038         	goto	u13790
 24280  006FFC                     u13791:
 24281  006FFC  EF0A  F038         	goto	l13375
 24282  007000                     u13790:
 24283  007000  010F               	movlb	15	; () banked
 24284  007002  AB36               	btfss	54,5,b	;volatile
 24285  007004  EF06  F038         	goto	u13801
 24286  007008  EF08  F038         	goto	u13800
 24287  00700C                     u13801:
 24288  00700C  EF0A  F038         	goto	l13375
 24289  007010                     u13800:
 24290  007010                     
 24291                           ; BSR set to: 15
 24292                           ;usb_device.c: 756: {;usb_device.c: 757: USBStallHandler();
 24293  007010  ECEB  F063         	call	_USBStallHandler	;wreg free
 24294  007014                     l13375:
 24295                           
 24296                           ;usb_device.c: 758: };usb_device.c: 760: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24297  007014  A262               	btfss	98,1,c	;volatile
 24298  007016  EF0F  F038         	goto	u13811
 24299  00701A  EF11  F038         	goto	u13810
 24300  00701E                     u13811:
 24301  00701E  EF28  F038         	goto	l13383
 24302  007022                     u13810:
 24303  007022  010F               	movlb	15	; () banked
 24304  007024  A336               	btfss	54,1,b	;volatile
 24305  007026  EF17  F038         	goto	u13821
 24306  00702A  EF19  F038         	goto	u13820
 24307  00702E                     u13821:
 24308  00702E  EF28  F038         	goto	l13383
 24309  007032                     u13820:
 24310  007032                     
 24311                           ; BSR set to: 15
 24312                           ;usb_device.c: 761: {;usb_device.c: 762: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVEN
      +                          T_BUS_ERROR,0,1);
 24313  007032  0E7F               	movlw	127
 24314  007034  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24315  007036  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24316  007038  0E00               	movlw	0
 24317  00703A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24318  00703C  0E00               	movlw	0
 24319  00703E  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24320  007040  0E00               	movlw	0
 24321  007042  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24322  007044  0E01               	movlw	1
 24323  007046  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24324  007048  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24325  00704C                     
 24326                           ;usb_device.c: 763: {UEIR = 0;};
 24327  00704C  0E00               	movlw	0
 24328  00704E  6E63               	movwf	99,c	;volatile
 24329  007050                     l13383:
 24330                           
 24331                           ;usb_device.c: 771: };usb_device.c: 778: if(USBDeviceState < DEFAULT_STATE)
 24332  007050  0E04               	movlw	4
 24333  007052  0100               	movlb	0	; () banked
 24334  007054  61E2               	cpfslt	_USBDeviceState& (0+255),b
 24335  007056  EF2F  F038         	goto	u13831
 24336  00705A  EF31  F038         	goto	u13830
 24337  00705E                     u13831:
 24338  00705E  EF34  F038         	goto	l377
 24339  007062                     u13830:
 24340  007062                     
 24341                           ; BSR set to: 0
 24342                           ;usb_device.c: 779: {;usb_device.c: 780: {PIR2bits.USBIF = 0;};
 24343  007062  98A1               	bcf	161,4,c	;volatile
 24344                           
 24345                           ;usb_device.c: 781: return;
 24346  007064  EF8C  F038         	goto	l360
 24347  007068                     l377:
 24348                           
 24349                           ; BSR set to: 0
 24350                           ;usb_device.c: 782: };usb_device.c: 787: if(UIEbits.TRNIE)
 24351  007068  010F               	movlb	15	; () banked
 24352  00706A  A736               	btfss	54,3,b	;volatile
 24353  00706C  EF3A  F038         	goto	u13841
 24354  007070  EF3C  F038         	goto	u13840
 24355  007074                     u13841:
 24356  007074  EF8B  F038         	goto	l378
 24357  007078                     u13840:
 24358  007078                     
 24359                           ; BSR set to: 15
 24360                           ;usb_device.c: 788: {;usb_device.c: 789: for(i = 0; i < 4u; i++)
 24361  007078  0E00               	movlw	0
 24362  00707A  6E1D               	movwf	USBDeviceTasks@i^0,c
 24363  00707C                     l379:
 24364                           
 24365                           ;usb_device.c: 790: {;usb_device.c: 791: if(UIRbits.TRNIF)
 24366  00707C  A662               	btfss	98,3,c	;volatile
 24367  00707E  EF43  F038         	goto	u13851
 24368  007082  EF45  F038         	goto	u13850
 24369  007086                     u13851:
 24370  007086  EF8B  F038         	goto	l378
 24371  00708A                     u13850:
 24372  00708A                     
 24373                           ;usb_device.c: 792: {;usb_device.c: 794: USTATcopy.Val = USTAT;
 24374  00708A  CF64 F0FC          	movff	3940,_USTATcopy	;volatile
 24375  00708E                     
 24376                           ;usb_device.c: 795: endpoint_number = USTATcopy.endpoint_number;
 24377  00708E  0100               	movlb	0	; () banked
 24378  007090  31FC               	rrcf	_USTATcopy& (0+255),w,b
 24379  007092  32E8               	rrcf	wreg,f,c
 24380  007094  32E8               	rrcf	wreg,f,c
 24381  007096  0B0F               	andlw	15
 24382  007098  6FDD               	movwf	_endpoint_number& (0+255),b
 24383  00709A                     
 24384                           ; BSR set to: 0
 24385                           ;usb_device.c: 797: (UIR &= 0xF7);
 24386  00709A  9662               	bcf	98,3,c	;volatile
 24387  00709C                     
 24388                           ; BSR set to: 0
 24389                           ;usb_device.c: 802: if(USTATcopy.direction == 0)
 24390  00709C  B5FC               	btfsc	_USTATcopy& (0+255),2,b
 24391  00709E  EF53  F038         	goto	u13861
 24392  0070A2  EF55  F038         	goto	u13860
 24393  0070A6                     u13861:
 24394  0070A6  EF5F  F038         	goto	l13403
 24395  0070AA                     u13860:
 24396  0070AA                     
 24397                           ; BSR set to: 0
 24398                           ;usb_device.c: 803: {;usb_device.c: 804: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 24399  0070AA  0E7A               	movlw	low _ep_data_out
 24400  0070AC  25DD               	addwf	_endpoint_number& (0+255),w,b
 24401  0070AE  6ED9               	movwf	fsr2l,c
 24402  0070B0  6ADA               	clrf	fsr2h,c
 24403  0070B2  0E01               	movlw	high _ep_data_out
 24404  0070B4  22DA               	addwfc	fsr2h,f,c
 24405  0070B6  0101               	movlb	1	; () banked
 24406  0070B8  70DF               	btg	indf2,0,c
 24407                           
 24408                           ;usb_device.c: 805: }
 24409  0070BA  EF67  F038         	goto	l13405
 24410  0070BE                     l13403:
 24411                           
 24412                           ; BSR set to: 0
 24413                           ;usb_device.c: 806: else;usb_device.c: 807: {;usb_device.c: 808: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 24414  0070BE  0E7D               	movlw	low _ep_data_in
 24415  0070C0  25DD               	addwf	_endpoint_number& (0+255),w,b
 24416  0070C2  6ED9               	movwf	fsr2l,c
 24417  0070C4  6ADA               	clrf	fsr2h,c
 24418  0070C6  0E01               	movlw	high _ep_data_in
 24419  0070C8  22DA               	addwfc	fsr2h,f,c
 24420  0070CA  0101               	movlb	1	; () banked
 24421  0070CC  70DF               	btg	indf2,0,c
 24422  0070CE                     l13405:
 24423                           
 24424                           ; BSR set to: 1
 24425                           ;usb_device.c: 809: };usb_device.c: 814: if(endpoint_number == 0)
 24426  0070CE  0100               	movlb	0	; () banked
 24427  0070D0  51DD               	movf	_endpoint_number& (0+255),w,b
 24428  0070D2  A4D8               	btfss	status,2,c
 24429  0070D4  EF6E  F038         	goto	u13871
 24430  0070D8  EF70  F038         	goto	u13870
 24431  0070DC                     u13871:
 24432  0070DC  EF74  F038         	goto	l13409
 24433  0070E0                     u13870:
 24434  0070E0                     
 24435                           ; BSR set to: 0
 24436                           ;usb_device.c: 815: {;usb_device.c: 816: USBCtrlEPService();
 24437  0070E0  EC81  F057         	call	_USBCtrlEPService	;wreg free
 24438                           
 24439                           ;usb_device.c: 817: }
 24440  0070E4  EF82  F038         	goto	l13411
 24441  0070E8                     l13409:
 24442                           
 24443                           ; BSR set to: 0
 24444                           ;usb_device.c: 818: else;usb_device.c: 819: {;usb_device.c: 820: USER_USB_CALLBACK_EVENT
      +                          _HANDLER((USB_EVENT)EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 24445  0070E8  0E00               	movlw	0
 24446  0070EA  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24447  0070EC  0E72               	movlw	114
 24448  0070EE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24449  0070F0  0EFC               	movlw	low _USTATcopy
 24450  0070F2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24451  0070F4  0E00               	movlw	high _USTATcopy
 24452  0070F6  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24453  0070F8  0E00               	movlw	0
 24454  0070FA  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24455  0070FC  0E00               	movlw	0
 24456  0070FE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24457  007100  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24458  007104                     l13411:
 24459  007104  2A1D               	incf	USBDeviceTasks@i^0,f,c
 24460  007106  0E03               	movlw	3
 24461  007108  641D               	cpfsgt	USBDeviceTasks@i^0,c
 24462  00710A  EF89  F038         	goto	u13881
 24463  00710E  EF8B  F038         	goto	u13880
 24464  007112                     u13881:
 24465  007112  EF3E  F038         	goto	l379
 24466  007116                     u13880:
 24467  007116                     l378:
 24468                           
 24469                           ;usb_device.c: 826: };usb_device.c: 827: };usb_device.c: 828: };usb_device.c: 830: {PIR2
      +                          bits.USBIF = 0;};
 24470  007116  98A1               	bcf	161,4,c	;volatile
 24471  007118                     l360:
 24472  007118  0012               	return		;funcret
 24473  00711A                     __end_of_USBDeviceTasks:
 24474                           	callstack 0
 24475                           
 24476 ;; *************** function _USBWakeFromSuspend *****************
 24477 ;; Defined at:
 24478 ;;		line 2310 in file "usb/usb_device.c"
 24479 ;; Parameters:    Size  Location     Type
 24480 ;;		None
 24481 ;; Auto vars:     Size  Location     Type
 24482 ;;		None
 24483 ;; Return value:  Size  Location     Type
 24484 ;;                  1    wreg      void 
 24485 ;; Registers used:
 24486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24487 ;; Tracked objects:
 24488 ;;		On entry : 0/0
 24489 ;;		On exit  : 0/0
 24490 ;;		Unchanged: 0/0
 24491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24496 ;;Total ram usage:        0 bytes
 24497 ;; Hardware stack levels used: 1
 24498 ;; Hardware stack levels required when called: 5
 24499 ;; This function calls:
 24500 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24501 ;; This function is called by:
 24502 ;;		_USBDeviceTasks
 24503 ;; This function uses a non-reentrant model
 24504 ;;
 24505                           
 24506                           	psect	text112
 24507  00CE56                     __ptext112:
 24508                           	callstack 0
 24509  00CE56                     _USBWakeFromSuspend:
 24510                           	callstack 24
 24511  00CE56                     
 24512                           ;usb_device.c: 2312: USBBusIsSuspended = 0;
 24513  00CE56  0E00               	movlw	0
 24514  00CE58  0100               	movlb	0	; () banked
 24515  00CE5A  6FDE               	movwf	_USBBusIsSuspended& (0+255),b
 24516  00CE5C                     
 24517                           ; BSR set to: 0
 24518                           ;usb_device.c: 2318: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_RESUME,0,0);
 24519  00CE5C  0E00               	movlw	0
 24520  00CE5E  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24521  00CE60  0E74               	movlw	116
 24522  00CE62  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24523  00CE64  0E00               	movlw	0
 24524  00CE66  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24525  00CE68  0E00               	movlw	0
 24526  00CE6A  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24527  00CE6C  0E00               	movlw	0
 24528  00CE6E  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24529  00CE70  0E00               	movlw	0
 24530  00CE72  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24531  00CE74  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24532  00CE78                     
 24533                           ;usb_device.c: 2325: UCONbits.SUSPND = 0;
 24534  00CE78  9265               	bcf	101,1,c	;volatile
 24535  00CE7A                     
 24536                           ;usb_device.c: 2330: UIEbits.ACTVIE = 0;
 24537  00CE7A  010F               	movlb	15	; () banked
 24538  00CE7C  9536               	bcf	54,2,b	;volatile
 24539                           
 24540                           ;usb_device.c: 2348: while(UIRbits.ACTVIF)
 24541  00CE7E  EF42  F067         	goto	l12305
 24542  00CE82                     l12303:
 24543                           
 24544                           ;usb_device.c: 2350: {;usb_device.c: 2351: (UIR &= 0xFB);
 24545  00CE82  9462               	bcf	98,2,c	;volatile
 24546  00CE84                     l12305:
 24547  00CE84  B462               	btfsc	98,2,c	;volatile
 24548  00CE86  EF47  F067         	goto	u12301
 24549  00CE8A  EF49  F067         	goto	u12300
 24550  00CE8E                     u12301:
 24551  00CE8E  EF41  F067         	goto	l12303
 24552  00CE92                     u12300:
 24553  00CE92                     
 24554                           ;usb_device.c: 2352: };usb_device.c: 2354: USBTicksSinceSuspendEnd = 0;
 24555  00CE92  0E00               	movlw	0
 24556  00CE94  0101               	movlb	1	; () banked
 24557  00CE96  6F8F               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 24558  00CE98                     
 24559                           ; BSR set to: 1
 24560  00CE98  0012               	return		;funcret
 24561  00CE9A                     __end_of_USBWakeFromSuspend:
 24562                           	callstack 0
 24563                           
 24564 ;; *************** function _USBSuspend *****************
 24565 ;; Defined at:
 24566 ;;		line 2252 in file "usb/usb_device.c"
 24567 ;; Parameters:    Size  Location     Type
 24568 ;;		None
 24569 ;; Auto vars:     Size  Location     Type
 24570 ;;		None
 24571 ;; Return value:  Size  Location     Type
 24572 ;;                  1    wreg      void 
 24573 ;; Registers used:
 24574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24575 ;; Tracked objects:
 24576 ;;		On entry : 0/0
 24577 ;;		On exit  : 0/0
 24578 ;;		Unchanged: 0/0
 24579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24584 ;;Total ram usage:        0 bytes
 24585 ;; Hardware stack levels used: 1
 24586 ;; Hardware stack levels required when called: 5
 24587 ;; This function calls:
 24588 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24589 ;; This function is called by:
 24590 ;;		_USBDeviceTasks
 24591 ;; This function uses a non-reentrant model
 24592 ;;
 24593                           
 24594                           	psect	text113
 24595  00D1B4                     __ptext113:
 24596                           	callstack 0
 24597  00D1B4                     _USBSuspend:
 24598                           	callstack 24
 24599  00D1B4                     
 24600                           ;usb_device.c: 2277: UIEbits.ACTVIE = 1;
 24601  00D1B4  010F               	movlb	15	; () banked
 24602  00D1B6  8536               	bsf	54,2,b	;volatile
 24603  00D1B8                     
 24604                           ; BSR set to: 15
 24605                           ;usb_device.c: 2278: (UIR &= 0xEF);
 24606  00D1B8  9862               	bcf	98,4,c	;volatile
 24607  00D1BA                     
 24608                           ; BSR set to: 15
 24609                           ;usb_device.c: 2281: UCONbits.SUSPND = 1;
 24610  00D1BA  8265               	bsf	101,1,c	;volatile
 24611  00D1BC                     
 24612                           ; BSR set to: 15
 24613                           ;usb_device.c: 2284: USBBusIsSuspended = 1;
 24614  00D1BC  0E01               	movlw	1
 24615  00D1BE  0100               	movlb	0	; () banked
 24616  00D1C0  6FDE               	movwf	_USBBusIsSuspended& (0+255),b
 24617  00D1C2                     
 24618                           ; BSR set to: 0
 24619                           ;usb_device.c: 2285: USBTicksSinceSuspendEnd = 0;
 24620  00D1C2  0E00               	movlw	0
 24621  00D1C4  0101               	movlb	1	; () banked
 24622  00D1C6  6F8F               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 24623  00D1C8                     
 24624                           ; BSR set to: 1
 24625                           ;usb_device.c: 2292: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SUSPEND,0,0);
 24626  00D1C8  0E00               	movlw	0
 24627  00D1CA  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24628  00D1CC  0E75               	movlw	117
 24629  00D1CE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24630  00D1D0  0E00               	movlw	0
 24631  00D1D2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24632  00D1D4  0E00               	movlw	0
 24633  00D1D6  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24634  00D1D8  0E00               	movlw	0
 24635  00D1DA  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24636  00D1DC  0E00               	movlw	0
 24637  00D1DE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24638  00D1E0  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24639  00D1E4  0012               	return		;funcret
 24640  00D1E6                     __end_of_USBSuspend:
 24641                           	callstack 0
 24642                           
 24643 ;; *************** function _USBStallHandler *****************
 24644 ;; Defined at:
 24645 ;;		line 2209 in file "usb/usb_device.c"
 24646 ;; Parameters:    Size  Location     Type
 24647 ;;		None
 24648 ;; Auto vars:     Size  Location     Type
 24649 ;;		None
 24650 ;; Return value:  Size  Location     Type
 24651 ;;                  1    wreg      void 
 24652 ;; Registers used:
 24653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24654 ;; Tracked objects:
 24655 ;;		On entry : 0/0
 24656 ;;		On exit  : 0/0
 24657 ;;		Unchanged: 0/0
 24658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24663 ;;Total ram usage:        1 bytes
 24664 ;; Hardware stack levels used: 1
 24665 ;; Hardware stack levels required when called: 1
 24666 ;; This function calls:
 24667 ;;		Nothing
 24668 ;; This function is called by:
 24669 ;;		_USBDeviceTasks
 24670 ;; This function uses a non-reentrant model
 24671 ;;
 24672                           
 24673                           	psect	text114
 24674  00C7D6                     __ptext114:
 24675                           	callstack 0
 24676  00C7D6                     _USBStallHandler:
 24677                           	callstack 28
 24678  00C7D6                     
 24679                           ;usb_device.c: 2221: if(UEP0bits.EPSTALL == 1)
 24680  00C7D6  010F               	movlb	15	; () banked
 24681  00C7D8  A126               	btfss	38,0,b	;volatile
 24682  00C7DA  EFF1  F063         	goto	u12331
 24683  00C7DE  EFF3  F063         	goto	u12330
 24684  00C7E2                     u12331:
 24685  00C7E2  EF1A  F064         	goto	l507
 24686  00C7E6                     u12330:
 24687  00C7E6                     
 24688                           ; BSR set to: 15
 24689                           ;usb_device.c: 2222: {;usb_device.c: 2224: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 24690  00C7E6  C0CD  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24691  00C7EA  C0CE  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24692  00C7EE  0E80               	movlw	128
 24693  00C7F0  18DE               	xorwf	postinc2,w,c
 24694  00C7F2  A4D8               	btfss	status,2,c
 24695  00C7F4  EFFE  F063         	goto	u12341
 24696  00C7F8  EF00  F064         	goto	u12340
 24697  00C7FC                     u12341:
 24698  00C7FC  EF19  F064         	goto	l12341
 24699  00C800                     u12340:
 24700  00C800                     
 24701                           ; BSR set to: 15
 24702  00C800  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 24703  00C804  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24704  00C808  0E84               	movlw	132
 24705  00C80A  18DE               	xorwf	postinc2,w,c
 24706  00C80C  A4D8               	btfss	status,2,c
 24707  00C80E  EF0B  F064         	goto	u12351
 24708  00C812  EF0D  F064         	goto	u12350
 24709  00C816                     u12351:
 24710  00C816  EF19  F064         	goto	l12341
 24711  00C81A                     u12350:
 24712  00C81A                     
 24713                           ; BSR set to: 15
 24714                           ;usb_device.c: 2225: {;usb_device.c: 2227: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 24715  00C81A  C0CD  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24716  00C81E  C0CE  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24717  00C822  0E0C               	movlw	12
 24718  00C824  6EDF               	movwf	indf2,c
 24719  00C826                     
 24720                           ; BSR set to: 15
 24721                           ;usb_device.c: 2228: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24722  00C826  C0CD  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24723  00C82A  C0CE  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24724  00C82E  0E00               	movlw	0
 24725  00C830  8EDB               	bsf	plusw2,7,c
 24726  00C832                     l12341:
 24727                           
 24728                           ; BSR set to: 15
 24729                           ;usb_device.c: 2229: };usb_device.c: 2230: UEP0bits.EPSTALL = 0;
 24730  00C832  9126               	bcf	38,0,b	;volatile
 24731  00C834                     l507:
 24732                           
 24733                           ; BSR set to: 15
 24734                           ;usb_device.c: 2231: };usb_device.c: 2233: (UIR &= 0xDF);
 24735  00C834  9A62               	bcf	98,5,c	;volatile
 24736  00C836                     
 24737                           ; BSR set to: 15
 24738  00C836  0012               	return		;funcret
 24739  00C838                     __end_of_USBStallHandler:
 24740                           	callstack 0
 24741                           
 24742 ;; *************** function _USBIncrement1msInternalTimers *****************
 24743 ;; Defined at:
 24744 ;;		line 2998 in file "usb/usb_device.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;		None
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;		None
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  1    wreg      void 
 24751 ;; Registers used:
 24752 ;;		wreg, status,2, status,0
 24753 ;; Tracked objects:
 24754 ;;		On entry : 0/0
 24755 ;;		On exit  : 0/0
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24762 ;;Total ram usage:        0 bytes
 24763 ;; Hardware stack levels used: 1
 24764 ;; Hardware stack levels required when called: 1
 24765 ;; This function calls:
 24766 ;;		Nothing
 24767 ;; This function is called by:
 24768 ;;		_USBDeviceTasks
 24769 ;; This function uses a non-reentrant model
 24770 ;;
 24771                           
 24772                           	psect	text115
 24773  00D03E                     __ptext115:
 24774                           	callstack 0
 24775  00D03E                     _USBIncrement1msInternalTimers:
 24776                           	callstack 28
 24777  00D03E                     
 24778                           ;usb_device.c: 3006: USB1msTickCount++;
 24779  00D03E  0E01               	movlw	1
 24780  00D040  0101               	movlb	1	; () banked
 24781  00D042  2770               	addwf	_USB1msTickCount& (0+255),f,b
 24782  00D044  0E00               	movlw	0
 24783  00D046  2371               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 24784  00D048  2372               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 24785  00D04A  2373               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 24786  00D04C                     
 24787                           ; BSR set to: 1
 24788                           ;usb_device.c: 3007: if(USBBusIsSuspended == 0)
 24789  00D04C  0100               	movlb	0	; () banked
 24790  00D04E  51DE               	movf	_USBBusIsSuspended& (0+255),w,b
 24791  00D050  A4D8               	btfss	status,2,c
 24792  00D052  EF2D  F068         	goto	u12311
 24793  00D056  EF2F  F068         	goto	u12310
 24794  00D05A                     u12311:
 24795  00D05A  EF3A  F068         	goto	l599
 24796  00D05E                     u12310:
 24797  00D05E                     
 24798                           ; BSR set to: 0
 24799                           ;usb_device.c: 3008: {;usb_device.c: 3009: USBTicksSinceSuspendEnd++;
 24800  00D05E  0101               	movlb	1	; () banked
 24801  00D060  2B8F               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 24802  00D062                     
 24803                           ; BSR set to: 1
 24804                           ;usb_device.c: 3011: if(USBTicksSinceSuspendEnd == 0)
 24805  00D062  518F               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 24806  00D064  A4D8               	btfss	status,2,c
 24807  00D066  EF37  F068         	goto	u12321
 24808  00D06A  EF39  F068         	goto	u12320
 24809  00D06E                     u12321:
 24810  00D06E  EF3A  F068         	goto	l599
 24811  00D072                     u12320:
 24812  00D072                     
 24813                           ; BSR set to: 1
 24814                           ;usb_device.c: 3012: {;usb_device.c: 3013: USBTicksSinceSuspendEnd = 255;
 24815  00D072  698F               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 24816  00D074                     l599:
 24817  00D074  0012               	return		;funcret
 24818  00D076                     __end_of_USBIncrement1msInternalTimers:
 24819                           	callstack 0
 24820                           
 24821 ;; *************** function _USBDeviceInit *****************
 24822 ;; Defined at:
 24823 ;;		line 281 in file "usb/usb_device.c"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;		None
 24826 ;; Auto vars:     Size  Location     Type
 24827 ;;  i               1    8[COMRAM] unsigned char 
 24828 ;; Return value:  Size  Location     Type
 24829 ;;                  1    wreg      void 
 24830 ;; Registers used:
 24831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24832 ;; Tracked objects:
 24833 ;;		On entry : 0/0
 24834 ;;		On exit  : 0/0
 24835 ;;		Unchanged: 0/0
 24836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24841 ;;Total ram usage:        1 bytes
 24842 ;; Hardware stack levels used: 1
 24843 ;; Hardware stack levels required when called: 2
 24844 ;; This function calls:
 24845 ;;		_memset
 24846 ;; This function is called by:
 24847 ;;		_USBDeviceTasks
 24848 ;;		_main
 24849 ;; This function uses a non-reentrant model
 24850 ;;
 24851                           
 24852                           	psect	text116
 24853  008C64                     __ptext116:
 24854                           	callstack 0
 24855  008C64                     _USBDeviceInit:
 24856                           	callstack 27
 24857  008C64                     
 24858                           ;usb_device.c: 283: uint8_t i;;usb_device.c: 285: {PIE2bits.USBIE = 0;};
 24859  008C64  98A0               	bcf	160,4,c	;volatile
 24860  008C66                     
 24861                           ;usb_device.c: 289: ;;usb_device.c: 292: {UEIR = 0;};
 24862  008C66  0E00               	movlw	0
 24863  008C68  6E63               	movwf	99,c	;volatile
 24864                           
 24865                           ;usb_device.c: 295: {UIR = 0;};
 24866  008C6A  0E00               	movlw	0
 24867  008C6C  6E62               	movwf	98,c	;volatile
 24868                           
 24869                           ;usb_device.c: 298: UEP0 = 0;
 24870  008C6E  0E00               	movlw	0
 24871  008C70  010F               	movlb	15	; () banked
 24872  008C72  6F26               	movwf	38,b	;volatile
 24873  008C74                     
 24874                           ; BSR set to: 15
 24875                           ;usb_device.c: 300: memset((void*)&UEP1,0x00,(2));;
 24876  008C74  0E27               	movlw	39
 24877  008C76  6E01               	movwf	memset@p1^0,c
 24878  008C78  0E0F               	movlw	15
 24879  008C7A  6E02               	movwf	(memset@p1+1)^0,c
 24880  008C7C  0E00               	movlw	0
 24881  008C7E  6E04               	movwf	(memset@c+1)^0,c
 24882  008C80  0E00               	movlw	0
 24883  008C82  6E03               	movwf	memset@c^0,c
 24884  008C84  0E00               	movlw	0
 24885  008C86  6E06               	movwf	(memset@n+1)^0,c
 24886  008C88  0E02               	movlw	2
 24887  008C8A  6E05               	movwf	memset@n^0,c
 24888  008C8C  EC3B  F068         	call	_memset	;wreg free
 24889  008C90                     
 24890                           ;usb_device.c: 302: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24891  008C90  0E16               	movlw	22
 24892  008C92  010F               	movlb	15	; () banked
 24893  008C94  6F39               	movwf	57,b	;volatile
 24894  008C96                     
 24895                           ; BSR set to: 15
 24896  008C96  0E9F               	movlw	159
 24897  008C98  6F37               	movwf	55,b	;volatile
 24898  008C9A                     
 24899                           ; BSR set to: 15
 24900  008C9A  0E7B               	movlw	123
 24901  008C9C  6F36               	movwf	54,b	;volatile
 24902  008C9E                     
 24903                           ; BSR set to: 15
 24904                           ;usb_device.c: 305: ;;usb_device.c: 308: ;;usb_device.c: 311: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 24905  008C9E  0E00               	movlw	0
 24906  008CA0  6E09               	movwf	USBDeviceInit@i^0,c
 24907  008CA2                     l12237:
 24908                           
 24909                           ;usb_device.c: 312: {;usb_device.c: 313: BDT[i].Val = 0x00;
 24910  008CA2  5009               	movf	USBDeviceInit@i^0,w,c
 24911  008CA4  0D04               	mullw	4
 24912  008CA6  0E00               	movlw	0
 24913  008CA8  24F3               	addwf	243,w,c
 24914  008CAA  6ED9               	movwf	fsr2l,c
 24915  008CAC  0E04               	movlw	4
 24916  008CAE  20F4               	addwfc	prodh,w,c
 24917  008CB0  6EDA               	movwf	fsr2h,c
 24918  008CB2  6ADE               	clrf	postinc2,c
 24919  008CB4  6ADE               	clrf	postinc2,c
 24920  008CB6  6ADE               	clrf	postinc2,c
 24921  008CB8  6ADD               	clrf	postdec2,c
 24922  008CBA  2A09               	incf	USBDeviceInit@i^0,f,c
 24923  008CBC  0E0B               	movlw	11
 24924  008CBE  6409               	cpfsgt	USBDeviceInit@i^0,c
 24925  008CC0  EF64  F046         	goto	u12271
 24926  008CC4  EF66  F046         	goto	u12270
 24927  008CC8                     u12271:
 24928  008CC8  EF51  F046         	goto	l12237
 24929  008CCC                     u12270:
 24930  008CCC                     
 24931                           ;usb_device.c: 314: };usb_device.c: 317: UCONbits.PPBRST = 1;
 24932  008CCC  8C65               	bsf	101,6,c	;volatile
 24933  008CCE                     
 24934                           ;usb_device.c: 320: UADDR = 0x00;
 24935  008CCE  0E00               	movlw	0
 24936  008CD0  010F               	movlb	15	; () banked
 24937  008CD2  6F38               	movwf	56,b	;volatile
 24938  008CD4                     
 24939                           ; BSR set to: 15
 24940                           ;usb_device.c: 323: UCONbits.PKTDIS = 0;
 24941  008CD4  9865               	bcf	101,4,c	;volatile
 24942  008CD6                     
 24943                           ; BSR set to: 15
 24944                           ;usb_device.c: 326: UCONbits.PPBRST = 0;
 24945  008CD6  9C65               	bcf	101,6,c	;volatile
 24946  008CD8                     l12249:
 24947                           
 24948                           ;usb_device.c: 330: {;usb_device.c: 331: (UIR &= 0xF7);
 24949  008CD8  9662               	bcf	98,3,c	;volatile
 24950  008CDA                     
 24951                           ;usb_device.c: 333: inPipes[0].info.Val = 0;
 24952  008CDA  0E00               	movlw	0
 24953  008CDC  0100               	movlb	0	; () banked
 24954  008CDE  6FB7               	movwf	(_inPipes+3)& (0+255),b
 24955  008CE0                     
 24956                           ; BSR set to: 0
 24957                           ;usb_device.c: 334: outPipes[0].info.Val = 0;
 24958  008CE0  0E00               	movlw	0
 24959  008CE2  0101               	movlb	1	; () banked
 24960  008CE4  6F3B               	movwf	(_outPipes+3)& (0+255),b
 24961  008CE6                     
 24962                           ; BSR set to: 1
 24963                           ;usb_device.c: 335: outPipes[0].wCount.Val = 0;
 24964  008CE6  0E00               	movlw	0
 24965  008CE8  6F3D               	movwf	(_outPipes+5)& (0+255),b
 24966  008CEA  0E00               	movlw	0
 24967  008CEC  6F3C               	movwf	(_outPipes+4)& (0+255),b
 24968  008CEE                     
 24969                           ; BSR set to: 1
 24970                           ;usb_device.c: 336: }while(UIRbits.TRNIF == 1);
 24971  008CEE  B662               	btfsc	98,3,c	;volatile
 24972  008CF0  EF7C  F046         	goto	u12281
 24973  008CF4  EF7E  F046         	goto	u12280
 24974  008CF8                     u12281:
 24975  008CF8  EF6C  F046         	goto	l12249
 24976  008CFC                     u12280:
 24977  008CFC                     
 24978                           ; BSR set to: 1
 24979                           ;usb_device.c: 340: USBStatusStageEnabledFlag1 = 1;
 24980  008CFC  0E01               	movlw	1
 24981  008CFE  0100               	movlb	0	; () banked
 24982  008D00  6FD9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 24983                           
 24984                           ;usb_device.c: 341: USBStatusStageEnabledFlag2 = 1;
 24985  008D02  0E01               	movlw	1
 24986  008D04  6FD8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 24987                           
 24988                           ;usb_device.c: 343: USBDeferINDataStagePackets = 0;
 24989  008D06  0E00               	movlw	0
 24990  008D08  6FD7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 24991                           
 24992                           ;usb_device.c: 344: USBDeferOUTDataStagePackets = 0;
 24993  008D0A  0E00               	movlw	0
 24994  008D0C  6FD6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 24995                           
 24996                           ;usb_device.c: 345: USBBusIsSuspended = 0;
 24997  008D0E  0E00               	movlw	0
 24998  008D10  6FDE               	movwf	_USBBusIsSuspended& (0+255),b
 24999                           
 25000                           ;usb_device.c: 349: for(i = 0; i < (uint8_t)(2+1u); i++)
 25001  008D12  0E00               	movlw	0
 25002  008D14  6E09               	movwf	USBDeviceInit@i^0,c
 25003  008D16                     l12265:
 25004                           
 25005                           ;usb_device.c: 350: {;usb_device.c: 351: pBDTEntryIn[i] = 0u;
 25006  008D16  5009               	movf	USBDeviceInit@i^0,w,c
 25007  008D18  0D02               	mullw	2
 25008  008D1A  0EBA               	movlw	low _pBDTEntryIn
 25009  008D1C  24F3               	addwf	243,w,c
 25010  008D1E  6ED9               	movwf	fsr2l,c
 25011  008D20  0E00               	movlw	high _pBDTEntryIn
 25012  008D22  20F4               	addwfc	prodh,w,c
 25013  008D24  6EDA               	movwf	fsr2h,c
 25014  008D26  0E00               	movlw	0
 25015  008D28  6EDE               	movwf	postinc2,c
 25016  008D2A  0E00               	movlw	0
 25017  008D2C  6EDD               	movwf	postdec2,c
 25018                           
 25019                           ;usb_device.c: 352: pBDTEntryOut[i] = 0u;
 25020  008D2E  5009               	movf	USBDeviceInit@i^0,w,c
 25021  008D30  0D02               	mullw	2
 25022  008D32  0E46               	movlw	low _pBDTEntryOut
 25023  008D34  24F3               	addwf	243,w,c
 25024  008D36  6ED9               	movwf	fsr2l,c
 25025  008D38  0E01               	movlw	high _pBDTEntryOut
 25026  008D3A  20F4               	addwfc	prodh,w,c
 25027  008D3C  6EDA               	movwf	fsr2h,c
 25028  008D3E  0E00               	movlw	0
 25029  008D40  6EDE               	movwf	postinc2,c
 25030  008D42  0E00               	movlw	0
 25031  008D44  6EDD               	movwf	postdec2,c
 25032  008D46                     
 25033                           ;usb_device.c: 353: ep_data_in[i].Val = 0u;
 25034  008D46  0E7D               	movlw	low _ep_data_in
 25035  008D48  2409               	addwf	USBDeviceInit@i^0,w,c
 25036  008D4A  6ED9               	movwf	fsr2l,c
 25037  008D4C  6ADA               	clrf	fsr2h,c
 25038  008D4E  0E01               	movlw	high _ep_data_in
 25039  008D50  22DA               	addwfc	fsr2h,f,c
 25040  008D52  0E00               	movlw	0
 25041  008D54  6EDF               	movwf	indf2,c
 25042  008D56                     
 25043                           ;usb_device.c: 354: ep_data_out[i].Val = 0u;
 25044  008D56  0E7A               	movlw	low _ep_data_out
 25045  008D58  2409               	addwf	USBDeviceInit@i^0,w,c
 25046  008D5A  6ED9               	movwf	fsr2l,c
 25047  008D5C  6ADA               	clrf	fsr2h,c
 25048  008D5E  0E01               	movlw	high _ep_data_out
 25049  008D60  22DA               	addwfc	fsr2h,f,c
 25050  008D62  0E00               	movlw	0
 25051  008D64  6EDF               	movwf	indf2,c
 25052  008D66  2A09               	incf	USBDeviceInit@i^0,f,c
 25053  008D68  0E02               	movlw	2
 25054  008D6A  6409               	cpfsgt	USBDeviceInit@i^0,c
 25055  008D6C  EFBA  F046         	goto	u12291
 25056  008D70  EFBC  F046         	goto	u12290
 25057  008D74                     u12291:
 25058  008D74  EF8B  F046         	goto	l12265
 25059  008D78                     u12290:
 25060  008D78                     
 25061                           ;usb_device.c: 355: };usb_device.c: 358: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25062  008D78  0E08               	movlw	8
 25063  008D7A  0100               	movlb	0	; () banked
 25064  008D7C  6FBA               	movwf	_pBDTEntryIn& (0+255),b
 25065  008D7E  0E04               	movlw	4
 25066  008D80  6FBB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25067  008D82                     
 25068                           ; BSR set to: 0
 25069                           ;usb_device.c: 360: UEP0 = 0x06|0x10;
 25070  008D82  0E16               	movlw	22
 25071  008D84  010F               	movlb	15	; () banked
 25072  008D86  6F26               	movwf	38,b	;volatile
 25073  008D88                     
 25074                           ; BSR set to: 15
 25075                           ;usb_device.c: 362: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25076  008D88  0E04               	movlw	4
 25077  008D8A  0104               	movlb	4	; () banked
 25078  008D8C  6F03               	movwf	3,b	;volatile
 25079  008D8E  0E30               	movlw	48
 25080  008D90  6F02               	movwf	2,b	;volatile
 25081  008D92                     
 25082                           ; BSR set to: 4
 25083                           ;usb_device.c: 363: BDT[0].CNT = 8;
 25084  008D92  0E08               	movlw	8
 25085  008D94  6F01               	movwf	1,b	;volatile
 25086  008D96                     
 25087                           ; BSR set to: 4
 25088                           ;usb_device.c: 364: BDT[0].STAT.Val = 0x00|0x04;
 25089  008D96  0E04               	movlw	4
 25090  008D98  6F00               	movwf	0,b	;volatile
 25091  008D9A                     
 25092                           ; BSR set to: 4
 25093                           ;usb_device.c: 365: BDT[0].STAT.Val |= 0x80;
 25094  008D9A  8F00               	bsf	0,7,b	;volatile
 25095  008D9C                     
 25096                           ; BSR set to: 4
 25097                           ;usb_device.c: 368: USBActiveConfiguration = 0;
 25098  008D9C  0E00               	movlw	0
 25099  008D9E  0100               	movlb	0	; () banked
 25100  008DA0  6FFD               	movwf	_USBActiveConfiguration& (0+255),b
 25101  008DA2                     
 25102                           ; BSR set to: 0
 25103                           ;usb_device.c: 370: USB1msTickCount = 0;
 25104  008DA2  0E00               	movlw	0
 25105  008DA4  0101               	movlb	1	; () banked
 25106  008DA6  6F70               	movwf	_USB1msTickCount& (0+255),b
 25107  008DA8  0E00               	movlw	0
 25108  008DAA  6F71               	movwf	(_USB1msTickCount+1)& (0+255),b
 25109  008DAC  0E00               	movlw	0
 25110  008DAE  6F72               	movwf	(_USB1msTickCount+2)& (0+255),b
 25111  008DB0  0E00               	movlw	0
 25112  008DB2  6F73               	movwf	(_USB1msTickCount+3)& (0+255),b
 25113  008DB4                     
 25114                           ; BSR set to: 1
 25115                           ;usb_device.c: 371: USBTicksSinceSuspendEnd = 0;
 25116  008DB4  0E00               	movlw	0
 25117  008DB6  6F8F               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 25118  008DB8                     
 25119                           ; BSR set to: 1
 25120                           ;usb_device.c: 374: USBDeviceState = DETACHED_STATE;
 25121  008DB8  0E00               	movlw	0
 25122  008DBA  0100               	movlb	0	; () banked
 25123  008DBC  6FE2               	movwf	_USBDeviceState& (0+255),b
 25124  008DBE                     
 25125                           ; BSR set to: 0
 25126  008DBE  0012               	return		;funcret
 25127  008DC0                     __end_of_USBDeviceInit:
 25128                           	callstack 0
 25129                           
 25130 ;; *************** function _USBCtrlEPService *****************
 25131 ;; Defined at:
 25132 ;;		line 2379 in file "usb/usb_device.c"
 25133 ;; Parameters:    Size  Location     Type
 25134 ;;		None
 25135 ;; Auto vars:     Size  Location     Type
 25136 ;;		None
 25137 ;; Return value:  Size  Location     Type
 25138 ;;                  1    wreg      void 
 25139 ;; Registers used:
 25140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25141 ;; Tracked objects:
 25142 ;;		On entry : 0/0
 25143 ;;		On exit  : 0/0
 25144 ;;		Unchanged: 0/0
 25145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25150 ;;Total ram usage:        1 bytes
 25151 ;; Hardware stack levels used: 1
 25152 ;; Hardware stack levels required when called: 8
 25153 ;; This function calls:
 25154 ;;		_USBCtrlTrfInHandler
 25155 ;;		_USBCtrlTrfOutHandler
 25156 ;;		_USBCtrlTrfSetupHandler
 25157 ;;		_memcpy
 25158 ;; This function is called by:
 25159 ;;		_USBDeviceTasks
 25160 ;; This function uses a non-reentrant model
 25161 ;;
 25162                           
 25163                           	psect	text117
 25164  00AF02                     __ptext117:
 25165                           	callstack 0
 25166  00AF02                     _USBCtrlEPService:
 25167                           	callstack 21
 25168  00AF02                     
 25169                           ;usb_device.c: 2385: USBStatusStageTimeoutCounter = (uint8_t)45;
 25170  00AF02  0E2D               	movlw	45
 25171  00AF04  0100               	movlb	0	; () banked
 25172  00AF06  6FDB               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 25173  00AF08                     
 25174                           ; BSR set to: 0
 25175                           ;usb_device.c: 2389: if((USTATcopy.Val & ~0x02) == 0x00)
 25176  00AF08  C0FC  F01C         	movff	_USTATcopy,??_USBCtrlEPService
 25177  00AF0C  0EFD               	movlw	253
 25178  00AF0E  161C               	andwf	??_USBCtrlEPService^0,f,c
 25179  00AF10  A4D8               	btfss	status,2,c
 25180  00AF12  EF8D  F057         	goto	u12361
 25181  00AF16  EF8F  F057         	goto	u12360
 25182  00AF1A                     u12361:
 25183  00AF1A  EFD1  F057         	goto	l12361
 25184  00AF1E                     u12360:
 25185  00AF1E                     
 25186                           ; BSR set to: 0
 25187                           ;usb_device.c: 2390: {;usb_device.c: 2393: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 25188  00AF1E  C0FC  F01C         	movff	_USTATcopy,??_USBCtrlEPService
 25189  00AF22  90D8               	bcf	status,0,c
 25190  00AF24  321C               	rrcf	??_USBCtrlEPService^0,f,c
 25191  00AF26  0E3F               	movlw	63
 25192  00AF28  161C               	andwf	??_USBCtrlEPService^0,f,c
 25193  00AF2A  501C               	movf	??_USBCtrlEPService^0,w,c
 25194  00AF2C  0D04               	mullw	4
 25195  00AF2E  0E00               	movlw	0
 25196  00AF30  24F3               	addwf	243,w,c
 25197  00AF32  6FCD               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 25198  00AF34  0E04               	movlw	4
 25199  00AF36  20F4               	addwfc	prodh,w,c
 25200  00AF38  6FCE               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 25201  00AF3A                     
 25202                           ; BSR set to: 0
 25203                           ;usb_device.c: 2401: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25204  00AF3A  C0CD  F0CB         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25205  00AF3E  C0CE  F0CC         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25206  00AF42                     
 25207                           ; BSR set to: 0
 25208                           ;usb_device.c: 2403: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 25209  00AF42  0E04               	movlw	4
 25210  00AF44  19CB               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 25211  00AF46  6FCB               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 25212  00AF48  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 25213  00AF4A  6FCC               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 25214  00AF4C                     
 25215                           ; BSR set to: 0
 25216                           ;usb_device.c: 2406: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25217  00AF4C  C0CD  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25218  00AF50  C0CE  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25219  00AF54  30DF               	rrcf	223,w,c
 25220  00AF56  32E8               	rrcf	wreg,f,c
 25221  00AF58  0B0F               	andlw	15
 25222  00AF5A  0A0D               	xorlw	13
 25223  00AF5C  A4D8               	btfss	status,2,c
 25224  00AF5E  EFB3  F057         	goto	u12371
 25225  00AF62  EFB5  F057         	goto	u12370
 25226  00AF66                     u12371:
 25227  00AF66  EFCD  F057         	goto	l12359
 25228  00AF6A                     u12370:
 25229  00AF6A                     
 25230                           ; BSR set to: 0
 25231                           ;usb_device.c: 2407: {;usb_device.c: 2412: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 25232  00AF6A  0E30               	movlw	48
 25233  00AF6C  6E01               	movwf	memcpy@d1^0,c
 25234  00AF6E  0E04               	movlw	4
 25235  00AF70  6E02               	movwf	(memcpy@d1+1)^0,c
 25236  00AF72  EE20 F002          	lfsr	2,2
 25237  00AF76  51CD               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 25238  00AF78  26D9               	addwf	fsr2l,f,c
 25239  00AF7A  51CE               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 25240  00AF7C  22DA               	addwfc	fsr2h,f,c
 25241  00AF7E  CFDE F003          	movff	postinc2,memcpy@s1
 25242  00AF82  CFDD F004          	movff	postdec2,memcpy@s1+1
 25243  00AF86  0E00               	movlw	0
 25244  00AF88  6E06               	movwf	(memcpy@n+1)^0,c
 25245  00AF8A  0E08               	movlw	8
 25246  00AF8C  6E05               	movwf	memcpy@n^0,c
 25247  00AF8E  ECB0  F065         	call	_memcpy	;wreg free
 25248  00AF92                     
 25249                           ;usb_device.c: 2415: USBCtrlTrfSetupHandler();
 25250  00AF92  EC2D  F05D         	call	_USBCtrlTrfSetupHandler	;wreg free
 25251                           
 25252                           ;usb_device.c: 2416: }
 25253  00AF96  EFDD  F057         	goto	l526
 25254  00AF9A                     l12359:
 25255                           
 25256                           ; BSR set to: 0
 25257                           ;usb_device.c: 2417: else;usb_device.c: 2418: {;usb_device.c: 2420: USBCtrlTrfOutHandler
      +                          ();
 25258  00AF9A  ECD2  F060         	call	_USBCtrlTrfOutHandler	;wreg free
 25259  00AF9E  EFDD  F057         	goto	l526
 25260  00AFA2                     l12361:
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;usb_device.c: 2423: else if((USTATcopy.Val & ~0x02) == 0x04)
 25264  00AFA2  51FC               	movf	_USTATcopy& (0+255),w,b
 25265  00AFA4  0BFD               	andlw	253
 25266  00AFA6  0A04               	xorlw	4
 25267  00AFA8  A4D8               	btfss	status,2,c
 25268  00AFAA  EFD9  F057         	goto	u12381
 25269  00AFAE  EFDB  F057         	goto	u12380
 25270  00AFB2                     u12381:
 25271  00AFB2  EFDD  F057         	goto	l526
 25272  00AFB6                     u12380:
 25273  00AFB6                     
 25274                           ; BSR set to: 0
 25275                           ;usb_device.c: 2424: {;usb_device.c: 2427: USBCtrlTrfInHandler();
 25276  00AFB6  EC4A  F04E         	call	_USBCtrlTrfInHandler	;wreg free
 25277  00AFBA                     l526:
 25278  00AFBA  0012               	return		;funcret
 25279  00AFBC                     __end_of_USBCtrlEPService:
 25280                           	callstack 0
 25281                           
 25282 ;; *************** function _memcpy *****************
 25283 ;; Defined at:
 25284 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
 25285 ;; Parameters:    Size  Location     Type
 25286 ;;  d1              2    0[COMRAM] PTR void 
 25287 ;;		 -> g_flash_temp(72), g_nvm.flash(72), g_nvm(73), SetupPkt(8), 
 25288 ;;  s1              2    2[COMRAM] PTR const void 
 25289 ;;		 -> g_flash_temp(72), g_nvm.flash(72), g_nvm(73), CtrlTrfData(8), 
 25290 ;;		 -> RAM(3775), SetupPkt(8), 
 25291 ;;  n               2    4[COMRAM] unsigned int 
 25292 ;; Auto vars:     Size  Location     Type
 25293 ;;  s               2    8[COMRAM] PTR const unsigned char 
 25294 ;;		 -> g_flash_temp(72), g_nvm.flash(72), g_nvm(73), CtrlTrfData(8), 
 25295 ;;		 -> RAM(3775), SetupPkt(8), 
 25296 ;;  d               2    6[COMRAM] PTR unsigned char 
 25297 ;;		 -> g_flash_temp(72), g_nvm.flash(72), g_nvm(73), SetupPkt(8), 
 25298 ;;  tmp             1   10[COMRAM] unsigned char 
 25299 ;; Return value:  Size  Location     Type
 25300 ;;                  2    0[COMRAM] PTR void 
 25301 ;; Registers used:
 25302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25303 ;; Tracked objects:
 25304 ;;		On entry : 0/0
 25305 ;;		On exit  : 0/0
 25306 ;;		Unchanged: 0/0
 25307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25308 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25309 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25311 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25312 ;;Total ram usage:       11 bytes
 25313 ;; Hardware stack levels used: 1
 25314 ;; Hardware stack levels required when called: 1
 25315 ;; This function calls:
 25316 ;;		Nothing
 25317 ;; This function is called by:
 25318 ;;		_USBCtrlEPService
 25319 ;;		_usedtime_task
 25320 ;; This function uses a non-reentrant model
 25321 ;;
 25322                           
 25323                           	psect	text118
 25324  00CB60                     __ptext118:
 25325                           	callstack 0
 25326  00CB60                     _memcpy:
 25327                           	callstack 28
 25328  00CB60  C003  F009         	movff	memcpy@s1,memcpy@s
 25329  00CB64  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 25330  00CB68  C001  F007         	movff	memcpy@d1,memcpy@d
 25331  00CB6C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 25332  00CB70  EFCA  F065         	goto	l11701
 25333  00CB74                     l11693:
 25334  00CB74  C009  FFD9         	movff	memcpy@s,fsr2l
 25335  00CB78  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 25336  00CB7C  50DF               	movf	indf2,w,c
 25337  00CB7E  6E0B               	movwf	memcpy@tmp^0,c
 25338  00CB80  4A09               	infsnz	memcpy@s^0,f,c
 25339  00CB82  2A0A               	incf	(memcpy@s+1)^0,f,c
 25340  00CB84  C007  FFD9         	movff	memcpy@d,fsr2l
 25341  00CB88  C008  FFDA         	movff	memcpy@d+1,fsr2h
 25342  00CB8C  C00B  FFDF         	movff	memcpy@tmp,indf2
 25343  00CB90  4A07               	infsnz	memcpy@d^0,f,c
 25344  00CB92  2A08               	incf	(memcpy@d+1)^0,f,c
 25345  00CB94                     l11701:
 25346  00CB94  0605               	decf	memcpy@n^0,f,c
 25347  00CB96  A0D8               	btfss	status,0,c
 25348  00CB98  0606               	decf	(memcpy@n+1)^0,f,c
 25349  00CB9A  2805               	incf	memcpy@n^0,w,c
 25350  00CB9C  E106               	bnz	u11761
 25351  00CB9E  2806               	incf	(memcpy@n+1)^0,w,c
 25352  00CBA0  A4D8               	btfss	status,2,c
 25353  00CBA2  EFD5  F065         	goto	u11761
 25354  00CBA6  EFD7  F065         	goto	u11760
 25355  00CBAA                     u11761:
 25356  00CBAA  EFBA  F065         	goto	l11693
 25357  00CBAE                     u11760:
 25358  00CBAE  0012               	return		;funcret
 25359  00CBB0                     __end_of_memcpy:
 25360                           	callstack 0
 25361                           
 25362 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25363 ;; Defined at:
 25364 ;;		line 2472 in file "usb/usb_device.c"
 25365 ;; Parameters:    Size  Location     Type
 25366 ;;		None
 25367 ;; Auto vars:     Size  Location     Type
 25368 ;;		None
 25369 ;; Return value:  Size  Location     Type
 25370 ;;                  1    wreg      void 
 25371 ;; Registers used:
 25372 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25373 ;; Tracked objects:
 25374 ;;		On entry : 0/0
 25375 ;;		On exit  : 0/0
 25376 ;;		Unchanged: 0/0
 25377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25382 ;;Total ram usage:        0 bytes
 25383 ;; Hardware stack levels used: 1
 25384 ;; Hardware stack levels required when called: 7
 25385 ;; This function calls:
 25386 ;;		_USBCheckStdRequest
 25387 ;;		_USBCtrlEPServiceComplete
 25388 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25389 ;; This function is called by:
 25390 ;;		_USBCtrlEPService
 25391 ;; This function uses a non-reentrant model
 25392 ;;
 25393                           
 25394                           	psect	text119
 25395  00BA5A                     __ptext119:
 25396                           	callstack 0
 25397  00BA5A                     _USBCtrlTrfSetupHandler:
 25398                           	callstack 21
 25399  00BA5A                     
 25400                           ;usb_device.c: 2477: shortPacketStatus = 0;
 25401  00BA5A  0E00               	movlw	0
 25402  00BA5C  0100               	movlb	0	; () banked
 25403  00BA5E  6FE1               	movwf	_shortPacketStatus& (0+255),b
 25404                           
 25405                           ;usb_device.c: 2478: USBDeferStatusStagePacket = 0;
 25406  00BA60  0E00               	movlw	0
 25407  00BA62  6FDA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 25408                           
 25409                           ;usb_device.c: 2479: USBDeferINDataStagePackets = 0;
 25410  00BA64  0E00               	movlw	0
 25411  00BA66  6FD7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25412                           
 25413                           ;usb_device.c: 2480: USBDeferOUTDataStagePackets = 0;
 25414  00BA68  0E00               	movlw	0
 25415  00BA6A  6FD6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25416                           
 25417                           ;usb_device.c: 2481: BothEP0OutUOWNsSet = 0;
 25418  00BA6C  0E00               	movlw	0
 25419  00BA6E  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 25420                           
 25421                           ;usb_device.c: 2482: controlTransferState = 0;
 25422  00BA70  0E00               	movlw	0
 25423  00BA72  6FE0               	movwf	_controlTransferState& (0+255),b
 25424  00BA74                     
 25425                           ; BSR set to: 0
 25426                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25427  00BA74  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25428  00BA78  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25429  00BA7C  0E7F               	movlw	127
 25430  00BA7E  16DF               	andwf	indf2,f,c
 25431  00BA80                     
 25432                           ; BSR set to: 0
 25433                           ;usb_device.c: 2493: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 25434  00BA80  0E04               	movlw	4
 25435  00BA82  19BA               	xorwf	_pBDTEntryIn& (0+255),w,b
 25436  00BA84  6FBA               	movwf	_pBDTEntryIn& (0+255),b
 25437  00BA86  51BB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25438  00BA88  6FBB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25439  00BA8A                     
 25440                           ; BSR set to: 0
 25441                           ;usb_device.c: 2494: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25442  00BA8A  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25443  00BA8E  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25444  00BA92  0E7F               	movlw	127
 25445  00BA94  16DF               	andwf	indf2,f,c
 25446  00BA96                     
 25447                           ; BSR set to: 0
 25448                           ;usb_device.c: 2495: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 25449  00BA96  0E04               	movlw	4
 25450  00BA98  19BA               	xorwf	_pBDTEntryIn& (0+255),w,b
 25451  00BA9A  6FBA               	movwf	_pBDTEntryIn& (0+255),b
 25452  00BA9C  51BB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25453  00BA9E  6FBB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25454  00BAA0                     
 25455                           ; BSR set to: 0
 25456                           ;usb_device.c: 2496: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25457  00BAA0  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25458  00BAA4  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25459  00BAA8  0E7F               	movlw	127
 25460  00BAAA  16DF               	andwf	indf2,f,c
 25461  00BAAC                     
 25462                           ; BSR set to: 0
 25463                           ;usb_device.c: 2498: inPipes[0].info.Val = 0;
 25464  00BAAC  0E00               	movlw	0
 25465  00BAAE  6FB7               	movwf	(_inPipes+3)& (0+255),b
 25466  00BAB0                     
 25467                           ; BSR set to: 0
 25468                           ;usb_device.c: 2499: inPipes[0].wCount.Val = 0;
 25469  00BAB0  0E00               	movlw	0
 25470  00BAB2  6FB9               	movwf	(_inPipes+5)& (0+255),b
 25471  00BAB4  0E00               	movlw	0
 25472  00BAB6  6FB8               	movwf	(_inPipes+4)& (0+255),b
 25473  00BAB8                     
 25474                           ; BSR set to: 0
 25475                           ;usb_device.c: 2500: outPipes[0].info.Val = 0;
 25476  00BAB8  0E00               	movlw	0
 25477  00BABA  0101               	movlb	1	; () banked
 25478  00BABC  6F3B               	movwf	(_outPipes+3)& (0+255),b
 25479  00BABE                     
 25480                           ; BSR set to: 1
 25481                           ;usb_device.c: 2501: outPipes[0].wCount.Val = 0;
 25482  00BABE  0E00               	movlw	0
 25483  00BAC0  6F3D               	movwf	(_outPipes+5)& (0+255),b
 25484  00BAC2  0E00               	movlw	0
 25485  00BAC4  6F3C               	movwf	(_outPipes+4)& (0+255),b
 25486  00BAC6                     
 25487                           ; BSR set to: 1
 25488                           ;usb_device.c: 2507: USBCheckStdRequest();
 25489  00BAC6  ECE0  F04F         	call	_USBCheckStdRequest	;wreg free
 25490  00BACA                     
 25491                           ;usb_device.c: 2508: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_EP0_REQUEST,0,0);
 25492  00BACA  0E00               	movlw	0
 25493  00BACC  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 25494  00BACE  0E03               	movlw	3
 25495  00BAD0  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 25496  00BAD2  0E00               	movlw	0
 25497  00BAD4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 25498  00BAD6  0E00               	movlw	0
 25499  00BAD8  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 25500  00BADA  0E00               	movlw	0
 25501  00BADC  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 25502  00BADE  0E00               	movlw	0
 25503  00BAE0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 25504  00BAE2  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25505  00BAE6                     
 25506                           ;usb_device.c: 2521: USBCtrlEPServiceComplete();
 25507  00BAE6  EC8B  F047         	call	_USBCtrlEPServiceComplete	;wreg free
 25508  00BAEA  0012               	return		;funcret
 25509  00BAEC                     __end_of_USBCtrlTrfSetupHandler:
 25510                           	callstack 0
 25511                           
 25512 ;; *************** function _USBCtrlEPServiceComplete *****************
 25513 ;; Defined at:
 25514 ;;		line 1620 in file "usb/usb_device.c"
 25515 ;; Parameters:    Size  Location     Type
 25516 ;;		None
 25517 ;; Auto vars:     Size  Location     Type
 25518 ;;		None
 25519 ;; Return value:  Size  Location     Type
 25520 ;;                  1    wreg      void 
 25521 ;; Registers used:
 25522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25523 ;; Tracked objects:
 25524 ;;		On entry : 0/0
 25525 ;;		On exit  : 0/0
 25526 ;;		Unchanged: 0/0
 25527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25532 ;;Total ram usage:        0 bytes
 25533 ;; Hardware stack levels used: 1
 25534 ;; Hardware stack levels required when called: 3
 25535 ;; This function calls:
 25536 ;;		_USBCtrlEPAllowDataStage
 25537 ;;		_USBCtrlEPAllowStatusStage
 25538 ;; This function is called by:
 25539 ;;		_USBCtrlTrfSetupHandler
 25540 ;; This function uses a non-reentrant model
 25541 ;;
 25542                           
 25543                           	psect	text120
 25544  008F16                     __ptext120:
 25545                           	callstack 0
 25546  008F16                     _USBCtrlEPServiceComplete:
 25547                           	callstack 24
 25548  008F16                     
 25549                           ;usb_device.c: 1626: UCONbits.PKTDIS = 0;
 25550  008F16  9865               	bcf	101,4,c	;volatile
 25551                           
 25552                           ;usb_device.c: 1632: if(inPipes[0].info.bits.busy == 0)
 25553  008F18  0100               	movlb	0	; () banked
 25554  008F1A  BFB7               	btfsc	(_inPipes+3)& (0+255),7,b
 25555  008F1C  EF92  F047         	goto	u10841
 25556  008F20  EF94  F047         	goto	u10840
 25557  008F24                     u10841:
 25558  008F24  EFDD  F047         	goto	l430
 25559  008F28                     u10840:
 25560  008F28                     
 25561                           ; BSR set to: 0
 25562                           ;usb_device.c: 1633: {;usb_device.c: 1634: if(outPipes[0].info.bits.busy == 1)
 25563  008F28  0101               	movlb	1	; () banked
 25564  008F2A  AF3B               	btfss	(_outPipes+3)& (0+255),7,b
 25565  008F2C  EF9A  F047         	goto	u10851
 25566  008F30  EF9C  F047         	goto	u10850
 25567  008F34                     u10851:
 25568  008F34  EFB0  F047         	goto	l10969
 25569  008F38                     u10850:
 25570  008F38                     
 25571                           ; BSR set to: 1
 25572                           ;usb_device.c: 1635: {;usb_device.c: 1636: controlTransferState = 2;
 25573  008F38  0E02               	movlw	2
 25574  008F3A  0100               	movlb	0	; () banked
 25575  008F3C  6FE0               	movwf	_controlTransferState& (0+255),b
 25576                           
 25577                           ;usb_device.c: 1647: if(USBDeferOUTDataStagePackets == 0)
 25578  008F3E  51D6               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 25579  008F40  A4D8               	btfss	status,2,c
 25580  008F42  EFA5  F047         	goto	u10861
 25581  008F46  EFA7  F047         	goto	u10860
 25582  008F4A                     u10861:
 25583  008F4A  EFA9  F047         	goto	l10965
 25584  008F4E                     u10860:
 25585  008F4E                     
 25586                           ; BSR set to: 0
 25587                           ;usb_device.c: 1648: {;usb_device.c: 1649: USBCtrlEPAllowDataStage();
 25588  008F4E  ECEE  F058         	call	_USBCtrlEPAllowDataStage	;wreg free
 25589  008F52                     l10965:
 25590                           
 25591                           ;usb_device.c: 1650: };usb_device.c: 1654: USBStatusStageEnabledFlag2 = 0;
 25592  008F52  0E00               	movlw	0
 25593  008F54  0100               	movlb	0	; () banked
 25594  008F56  6FD8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25595  008F58                     
 25596                           ; BSR set to: 0
 25597                           ;usb_device.c: 1655: USBStatusStageEnabledFlag1 = 0;
 25598  008F58  0E00               	movlw	0
 25599  008F5A  6FD9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25600                           
 25601                           ;usb_device.c: 1656: }
 25602  008F5C  EF32  F048         	goto	l440
 25603  008F60                     l10969:
 25604                           
 25605                           ; BSR set to: 1
 25606                           ;usb_device.c: 1657: else;usb_device.c: 1658: {;usb_device.c: 1663: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 25607  008F60  0100               	movlb	0	; () banked
 25608  008F62  EE20 F001          	lfsr	2,1
 25609  008F66  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 25610  008F68  26D9               	addwf	fsr2l,f,c
 25611  008F6A  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 25612  008F6C  22DA               	addwfc	fsr2h,f,c
 25613  008F6E  0E08               	movlw	8
 25614  008F70  6EDF               	movwf	indf2,c
 25615                           
 25616                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25617  008F72  EE20 F002          	lfsr	2,2
 25618  008F76  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 25619  008F78  26D9               	addwf	fsr2l,f,c
 25620  008F7A  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 25621  008F7C  22DA               	addwfc	fsr2h,f,c
 25622  008F7E  0E30               	movlw	48
 25623  008F80  6EDE               	movwf	postinc2,c
 25624  008F82  0E04               	movlw	4
 25625  008F84  6EDD               	movwf	postdec2,c
 25626  008F86                     
 25627                           ; BSR set to: 0
 25628                           ;usb_device.c: 1665: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25629  008F86  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25630  008F8A  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25631  008F8E  0E0C               	movlw	12
 25632  008F90  6EDF               	movwf	indf2,c
 25633  008F92                     
 25634                           ; BSR set to: 0
 25635                           ;usb_device.c: 1666: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25636  008F92  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25637  008F96  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25638  008F9A  0E00               	movlw	0
 25639  008F9C  8EDB               	bsf	plusw2,7,c
 25640                           
 25641                           ;usb_device.c: 1667: pBDTEntryIn[0]->STAT.Val = 0x04;
 25642  008F9E  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25643  008FA2  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25644  008FA6  0E04               	movlw	4
 25645  008FA8  6EDF               	movwf	indf2,c
 25646  008FAA                     
 25647                           ; BSR set to: 0
 25648                           ;usb_device.c: 1668: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25649  008FAA  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25650  008FAE  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25651  008FB2  0E00               	movlw	0
 25652  008FB4  8EDB               	bsf	plusw2,7,c
 25653  008FB6  EF32  F048         	goto	l440
 25654  008FBA                     l430:
 25655                           
 25656                           ; BSR set to: 0
 25657                           ;usb_device.c: 1671: else;usb_device.c: 1672: {;usb_device.c: 1673: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 25658  008FBA  0104               	movlb	4	; () banked
 25659  008FBC  AF30               	btfss	48,7,b	;volatile
 25660  008FBE  EFE3  F047         	goto	u10871
 25661  008FC2  EFE5  F047         	goto	u10870
 25662  008FC6                     u10871:
 25663  008FC6  EF03  F048         	goto	l10989
 25664  008FCA                     u10870:
 25665  008FCA                     
 25666                           ; BSR set to: 4
 25667                           ;usb_device.c: 1674: {;usb_device.c: 1675: controlTransferState = 1;
 25668  008FCA  0E01               	movlw	1
 25669  008FCC  0100               	movlb	0	; () banked
 25670  008FCE  6FE0               	movwf	_controlTransferState& (0+255),b
 25671                           
 25672                           ;usb_device.c: 1689: if(USBDeferINDataStagePackets == 0)
 25673  008FD0  51D7               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 25674  008FD2  A4D8               	btfss	status,2,c
 25675  008FD4  EFEE  F047         	goto	u10881
 25676  008FD8  EFF0  F047         	goto	u10880
 25677  008FDC                     u10881:
 25678  008FDC  EFF2  F047         	goto	l10981
 25679  008FE0                     u10880:
 25680  008FE0                     
 25681                           ; BSR set to: 0
 25682                           ;usb_device.c: 1690: {;usb_device.c: 1691: USBCtrlEPAllowDataStage();
 25683  008FE0  ECEE  F058         	call	_USBCtrlEPAllowDataStage	;wreg free
 25684  008FE4                     l10981:
 25685                           
 25686                           ;usb_device.c: 1692: };usb_device.c: 1714: USBStatusStageEnabledFlag2 = 0;
 25687  008FE4  0E00               	movlw	0
 25688  008FE6  0100               	movlb	0	; () banked
 25689  008FE8  6FD8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25690  008FEA                     
 25691                           ; BSR set to: 0
 25692                           ;usb_device.c: 1715: USBStatusStageEnabledFlag1 = 0;
 25693  008FEA  0E00               	movlw	0
 25694  008FEC  6FD9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25695  008FEE                     
 25696                           ; BSR set to: 0
 25697                           ;usb_device.c: 1716: if(USBDeferStatusStagePacket == 0)
 25698  008FEE  51DA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 25699  008FF0  A4D8               	btfss	status,2,c
 25700  008FF2  EFFD  F047         	goto	u10891
 25701  008FF6  EFFF  F047         	goto	u10890
 25702  008FFA                     u10891:
 25703  008FFA  EF32  F048         	goto	l440
 25704  008FFE                     u10890:
 25705  008FFE                     l10987:
 25706                           
 25707                           ; BSR set to: 0
 25708                           ;usb_device.c: 1717: {;usb_device.c: 1718: USBCtrlEPAllowStatusStage();
 25709  008FFE  EC62  F053         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25710  009002  EF32  F048         	goto	l440
 25711  009006                     l10989:
 25712                           
 25713                           ; BSR set to: 4
 25714                           ;usb_device.c: 1721: else;usb_device.c: 1722: {;usb_device.c: 1733: controlTransferState
      +                           = 2;
 25715  009006  0E02               	movlw	2
 25716  009008  0100               	movlb	0	; () banked
 25717  00900A  6FE0               	movwf	_controlTransferState& (0+255),b
 25718  00900C                     
 25719                           ; BSR set to: 0
 25720                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->CNT = 8;
 25721  00900C  EE20 F001          	lfsr	2,1
 25722  009010  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 25723  009012  26D9               	addwf	fsr2l,f,c
 25724  009014  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 25725  009016  22DA               	addwfc	fsr2h,f,c
 25726  009018  0E08               	movlw	8
 25727  00901A  6EDF               	movwf	indf2,c
 25728  00901C                     
 25729                           ; BSR set to: 0
 25730                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25731  00901C  EE20 F002          	lfsr	2,2
 25732  009020  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 25733  009022  26D9               	addwf	fsr2l,f,c
 25734  009024  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 25735  009026  22DA               	addwfc	fsr2h,f,c
 25736  009028  0E30               	movlw	48
 25737  00902A  6EDE               	movwf	postinc2,c
 25738  00902C  0E04               	movlw	4
 25739  00902E  6EDD               	movwf	postdec2,c
 25740  009030                     
 25741                           ; BSR set to: 0
 25742                           ;usb_device.c: 1738: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25743  009030  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25744  009034  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25745  009038  0E04               	movlw	4
 25746  00903A  6EDF               	movwf	indf2,c
 25747  00903C                     
 25748                           ; BSR set to: 0
 25749                           ;usb_device.c: 1739: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25750  00903C  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25751  009040  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25752  009044  0E00               	movlw	0
 25753  009046  8EDB               	bsf	plusw2,7,c
 25754  009048                     
 25755                           ; BSR set to: 0
 25756                           ;usb_device.c: 1742: USBStatusStageEnabledFlag2 = 0;
 25757  009048  0E00               	movlw	0
 25758  00904A  6FD8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25759  00904C                     
 25760                           ; BSR set to: 0
 25761                           ;usb_device.c: 1743: USBStatusStageEnabledFlag1 = 0;
 25762  00904C  0E00               	movlw	0
 25763  00904E  6FD9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25764  009050                     
 25765                           ; BSR set to: 0
 25766                           ;usb_device.c: 1744: if(USBDeferStatusStagePacket == 0)
 25767  009050  51DA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 25768  009052  A4D8               	btfss	status,2,c
 25769  009054  EF2E  F048         	goto	u10901
 25770  009058  EF30  F048         	goto	u10900
 25771  00905C                     u10901:
 25772  00905C  EF32  F048         	goto	l440
 25773  009060                     u10900:
 25774  009060  EFFF  F047         	goto	l10987
 25775  009064                     l440:
 25776  009064  0012               	return		;funcret
 25777  009066                     __end_of_USBCtrlEPServiceComplete:
 25778                           	callstack 0
 25779                           
 25780 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25781 ;; Defined at:
 25782 ;;		line 1492 in file "usb/usb_device.c"
 25783 ;; Parameters:    Size  Location     Type
 25784 ;;		None
 25785 ;; Auto vars:     Size  Location     Type
 25786 ;;		None
 25787 ;; Return value:  Size  Location     Type
 25788 ;;                  1    wreg      void 
 25789 ;; Registers used:
 25790 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25791 ;; Tracked objects:
 25792 ;;		On entry : 0/0
 25793 ;;		On exit  : 0/0
 25794 ;;		Unchanged: 0/0
 25795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25800 ;;Total ram usage:        0 bytes
 25801 ;; Hardware stack levels used: 1
 25802 ;; Hardware stack levels required when called: 2
 25803 ;; This function calls:
 25804 ;;		_USBCtrlTrfTxService
 25805 ;; This function is called by:
 25806 ;;		_USBCtrlEPServiceComplete
 25807 ;; This function uses a non-reentrant model
 25808 ;;
 25809                           
 25810                           	psect	text121
 25811  00B1DC                     __ptext121:
 25812                           	callstack 0
 25813  00B1DC                     _USBCtrlEPAllowDataStage:
 25814                           	callstack 24
 25815  00B1DC                     
 25816                           ;usb_device.c: 1494: USBDeferINDataStagePackets = 0;
 25817  00B1DC  0E00               	movlw	0
 25818  00B1DE  0100               	movlb	0	; () banked
 25819  00B1E0  6FD7               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25820                           
 25821                           ;usb_device.c: 1495: USBDeferOUTDataStagePackets = 0;
 25822  00B1E2  0E00               	movlw	0
 25823  00B1E4  6FD6               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25824  00B1E6                     
 25825                           ; BSR set to: 0
 25826                           ;usb_device.c: 1497: if(controlTransferState == 2)
 25827  00B1E6  0E02               	movlw	2
 25828  00B1E8  19E0               	xorwf	_controlTransferState& (0+255),w,b
 25829  00B1EA  A4D8               	btfss	status,2,c
 25830  00B1EC  EFFA  F058         	goto	u9591
 25831  00B1F0  EFFC  F058         	goto	u9590
 25832  00B1F4                     u9591:
 25833  00B1F4  EF1C  F059         	goto	l10123
 25834  00B1F8                     u9590:
 25835  00B1F8                     
 25836                           ; BSR set to: 0
 25837                           ;usb_device.c: 1498: {;usb_device.c: 1500: pBDTEntryEP0OutNext->CNT = 8;
 25838  00B1F8  EE20 F001          	lfsr	2,1
 25839  00B1FC  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 25840  00B1FE  26D9               	addwf	fsr2l,f,c
 25841  00B200  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 25842  00B202  22DA               	addwfc	fsr2h,f,c
 25843  00B204  0E08               	movlw	8
 25844  00B206  6EDF               	movwf	indf2,c
 25845                           
 25846                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25847  00B208  EE20 F002          	lfsr	2,2
 25848  00B20C  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 25849  00B20E  26D9               	addwf	fsr2l,f,c
 25850  00B210  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 25851  00B212  22DA               	addwfc	fsr2h,f,c
 25852  00B214  0E38               	movlw	56
 25853  00B216  6EDE               	movwf	postinc2,c
 25854  00B218  0E04               	movlw	4
 25855  00B21A  6EDD               	movwf	postdec2,c
 25856  00B21C                     
 25857                           ; BSR set to: 0
 25858                           ;usb_device.c: 1502: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25859  00B21C  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25860  00B220  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25861  00B224  0E48               	movlw	72
 25862  00B226  6EDF               	movwf	indf2,c
 25863  00B228                     
 25864                           ; BSR set to: 0
 25865                           ;usb_device.c: 1503: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25866  00B228  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25867  00B22C  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25868  00B230  0E00               	movlw	0
 25869  00B232  8EDB               	bsf	plusw2,7,c
 25870                           
 25871                           ;usb_device.c: 1504: }
 25872  00B234  EF47  F059         	goto	l422
 25873  00B238                     l10123:
 25874                           
 25875                           ; BSR set to: 0
 25876                           ;usb_device.c: 1505: else;usb_device.c: 1506: {;usb_device.c: 1509: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 25877  00B238  51B8               	movf	(_inPipes+4)& (0+255),w,b
 25878  00B23A  0104               	movlb	4	; () banked
 25879  00B23C  5D36               	subwf	54,w,b	;volatile
 25880  00B23E  0100               	movlb	0	; () banked
 25881  00B240  51B9               	movf	(_inPipes+5)& (0+255),w,b
 25882  00B242  0104               	movlb	4	; () banked
 25883  00B244  5937               	subwfb	55,w,b	;volatile
 25884  00B246  B0D8               	btfsc	status,0,c
 25885  00B248  EF28  F059         	goto	u9601
 25886  00B24C  EF2A  F059         	goto	u9600
 25887  00B250                     u9601:
 25888  00B250  EF2E  F059         	goto	l10127
 25889  00B254                     u9600:
 25890  00B254                     
 25891                           ; BSR set to: 4
 25892                           ;usb_device.c: 1510: {;usb_device.c: 1511: inPipes[0].wCount.Val = SetupPkt.wLength;
 25893  00B254  C436 F0B8          	movff	1078,_inPipes+4	;volatile
 25894  00B258  C437 F0B9          	movff	1079,_inPipes+5	;volatile
 25895  00B25C                     l10127:
 25896                           
 25897                           ; BSR set to: 4
 25898                           ;usb_device.c: 1512: };usb_device.c: 1513: USBCtrlTrfTxService();
 25899  00B25C  ECBE  F04D         	call	_USBCtrlTrfTxService	;wreg free
 25900  00B260                     
 25901                           ;usb_device.c: 1518: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25902  00B260  0100               	movlb	0	; () banked
 25903  00B262  EE20 F002          	lfsr	2,2
 25904  00B266  51BA               	movf	_pBDTEntryIn& (0+255),w,b
 25905  00B268  26D9               	addwf	fsr2l,f,c
 25906  00B26A  51BB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25907  00B26C  22DA               	addwfc	fsr2h,f,c
 25908  00B26E  0E38               	movlw	56
 25909  00B270  6EDE               	movwf	postinc2,c
 25910  00B272  0E04               	movlw	4
 25911  00B274  6EDD               	movwf	postdec2,c
 25912  00B276                     
 25913                           ; BSR set to: 0
 25914                           ;usb_device.c: 1519: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25915  00B276  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25916  00B27A  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25917  00B27E  0E48               	movlw	72
 25918  00B280  6EDF               	movwf	indf2,c
 25919  00B282                     
 25920                           ; BSR set to: 0
 25921                           ;usb_device.c: 1520: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25922  00B282  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25923  00B286  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25924  00B28A  0E00               	movlw	0
 25925  00B28C  8EDB               	bsf	plusw2,7,c
 25926  00B28E                     l422:
 25927                           
 25928                           ; BSR set to: 0
 25929  00B28E  0012               	return		;funcret
 25930  00B290                     __end_of_USBCtrlEPAllowDataStage:
 25931                           	callstack 0
 25932                           
 25933 ;; *************** function _USBCheckStdRequest *****************
 25934 ;; Defined at:
 25935 ;;		line 2693 in file "usb/usb_device.c"
 25936 ;; Parameters:    Size  Location     Type
 25937 ;;		None
 25938 ;; Auto vars:     Size  Location     Type
 25939 ;;		None
 25940 ;; Return value:  Size  Location     Type
 25941 ;;                  1    wreg      void 
 25942 ;; Registers used:
 25943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25944 ;; Tracked objects:
 25945 ;;		On entry : 0/0
 25946 ;;		On exit  : 0/0
 25947 ;;		Unchanged: 0/0
 25948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25953 ;;Total ram usage:        0 bytes
 25954 ;; Hardware stack levels used: 1
 25955 ;; Hardware stack levels required when called: 6
 25956 ;; This function calls:
 25957 ;;		_USBStdFeatureReqHandler
 25958 ;;		_USBStdGetDscHandler
 25959 ;;		_USBStdGetStatusHandler
 25960 ;;		_USBStdSetCfgHandler
 25961 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25962 ;; This function is called by:
 25963 ;;		_USBCtrlTrfSetupHandler
 25964 ;; This function uses a non-reentrant model
 25965 ;;
 25966                           
 25967                           	psect	text122
 25968  009FC0                     __ptext122:
 25969                           	callstack 0
 25970  009FC0                     _USBCheckStdRequest:
 25971                           	callstack 21
 25972  009FC0                     
 25973                           ;usb_device.c: 2695: if(SetupPkt.RequestType != (0x00>>5)) return;
 25974  009FC0  0104               	movlb	4	; () banked
 25975  009FC2  3930               	swapf	48,w,b	;volatile
 25976  009FC4  32E8               	rrcf	wreg,f,c
 25977  009FC6  0B03               	andlw	3
 25978  009FC8  0900               	iorlw	0
 25979  009FCA  B4D8               	btfsc	status,2,c
 25980  009FCC  EFEA  F04F         	goto	u10961
 25981  009FD0  EFEC  F04F         	goto	u10960
 25982  009FD4                     u10961:
 25983  009FD4  EF35  F050         	goto	l11087
 25984  009FD8                     u10960:
 25985  009FD8  EF64  F050         	goto	l554
 25986  009FDC                     l556:
 25987                           
 25988                           ; BSR set to: 4
 25989                           ;usb_device.c: 2700: inPipes[0].info.bits.busy = 1;
 25990  009FDC  0100               	movlb	0	; () banked
 25991  009FDE  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 25992  009FE0                     
 25993                           ; BSR set to: 0
 25994                           ;usb_device.c: 2701: USBDeviceState = ADR_PENDING_STATE;
 25995  009FE0  0E08               	movlw	8
 25996  009FE2  6FE2               	movwf	_USBDeviceState& (0+255),b
 25997                           
 25998                           ;usb_device.c: 2703: break;
 25999  009FE4  EF64  F050         	goto	l554
 26000  009FE8                     l11057:
 26001                           
 26002                           ; BSR set to: 4
 26003                           ;usb_device.c: 2705: USBStdGetDscHandler();
 26004  009FE8  EC80  F049         	call	_USBStdGetDscHandler	;wreg free
 26005                           
 26006                           ;usb_device.c: 2706: break;
 26007  009FEC  EF64  F050         	goto	l554
 26008  009FF0                     l11059:
 26009                           
 26010                           ; BSR set to: 4
 26011                           ;usb_device.c: 2708: USBStdSetCfgHandler();
 26012  009FF0  EC51  F054         	call	_USBStdSetCfgHandler	;wreg free
 26013                           
 26014                           ;usb_device.c: 2709: break;
 26015  009FF4  EF64  F050         	goto	l554
 26016  009FF8                     l11061:
 26017                           
 26018                           ; BSR set to: 4
 26019                           ;usb_device.c: 2711: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26020  009FF8  0EFD               	movlw	low _USBActiveConfiguration
 26021  009FFA  0100               	movlb	0	; () banked
 26022  009FFC  6FB4               	movwf	_inPipes& (0+255),b
 26023  009FFE  0E00               	movlw	high _USBActiveConfiguration
 26024  00A000  6FB5               	movwf	(_inPipes+1)& (0+255),b
 26025  00A002                     l11063:
 26026                           
 26027                           ; BSR set to: 0
 26028                           ;usb_device.c: 2712: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26029  00A002  81B7               	bsf	(_inPipes+3)& (0+255),0,b
 26030  00A004                     
 26031                           ; BSR set to: 0
 26032                           ;usb_device.c: 2713: inPipes[0].wCount.v[0] = 1;
 26033  00A004  0E01               	movlw	1
 26034  00A006  6FB8               	movwf	(_inPipes+4)& (0+255),b
 26035  00A008                     
 26036                           ; BSR set to: 0
 26037                           ;usb_device.c: 2714: inPipes[0].info.bits.busy = 1;
 26038  00A008  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 26039                           
 26040                           ;usb_device.c: 2715: break;
 26041  00A00A  EF64  F050         	goto	l554
 26042  00A00E                     l11069:
 26043                           
 26044                           ; BSR set to: 4
 26045                           ;usb_device.c: 2717: USBStdGetStatusHandler();
 26046  00A00E  ECD3  F04E         	call	_USBStdGetStatusHandler	;wreg free
 26047                           
 26048                           ;usb_device.c: 2718: break;
 26049  00A012  EF64  F050         	goto	l554
 26050  00A016                     l11071:
 26051                           
 26052                           ; BSR set to: 4
 26053                           ;usb_device.c: 2720: case 3:;usb_device.c: 2721: USBStdFeatureReqHandler();
 26054  00A016  EC64  F031         	call	_USBStdFeatureReqHandler	;wreg free
 26055                           
 26056                           ;usb_device.c: 2722: break;
 26057  00A01A  EF64  F050         	goto	l554
 26058  00A01E                     l11073:
 26059                           
 26060                           ; BSR set to: 4
 26061                           ;usb_device.c: 2724: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26062  00A01E  0EF8               	movlw	low _USBAlternateInterface
 26063  00A020  2534               	addwf	52,w,b	;volatile
 26064  00A022  0100               	movlb	0	; () banked
 26065  00A024  6FB4               	movwf	_inPipes& (0+255),b
 26066  00A026  6BB5               	clrf	(_inPipes+1)& (0+255),b
 26067  00A028  0E01               	movlw	high _USBAlternateInterface
 26068  00A02A  23B5               	addwfc	(_inPipes+1)& (0+255),f,b
 26069  00A02C  EF01  F050         	goto	l11063
 26070  00A030                     l565:
 26071                           
 26072                           ; BSR set to: 4
 26073                           ;usb_device.c: 2730: inPipes[0].info.bits.busy = 1;
 26074  00A030  0100               	movlb	0	; () banked
 26075  00A032  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 26076  00A034                     
 26077                           ; BSR set to: 0
 26078                           ;usb_device.c: 2731: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26079  00A034  0EF8               	movlw	low _USBAlternateInterface
 26080  00A036  0104               	movlb	4	; () banked
 26081  00A038  2534               	addwf	52,w,b	;volatile
 26082  00A03A  6ED9               	movwf	fsr2l,c
 26083  00A03C  6ADA               	clrf	fsr2h,c
 26084  00A03E  0E01               	movlw	high _USBAlternateInterface
 26085  00A040  22DA               	addwfc	fsr2h,f,c
 26086  00A042  C432 FFDF          	movff	1074,indf2	;volatile
 26087                           
 26088                           ;usb_device.c: 2732: break;
 26089  00A046  EF64  F050         	goto	l554
 26090  00A04A                     l11083:
 26091                           
 26092                           ; BSR set to: 4
 26093                           ;usb_device.c: 2734: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SET_DESCRIPTOR,0,0
      +                          );
 26094  00A04A  0E00               	movlw	0
 26095  00A04C  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 26096  00A04E  0E02               	movlw	2
 26097  00A050  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 26098  00A052  0E00               	movlw	0
 26099  00A054  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 26100  00A056  0E00               	movlw	0
 26101  00A058  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 26102  00A05A  0E00               	movlw	0
 26103  00A05C  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 26104  00A05E  0E00               	movlw	0
 26105  00A060  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 26106  00A062  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26107                           
 26108                           ;usb_device.c: 2735: break;
 26109  00A066  EF64  F050         	goto	l554
 26110  00A06A                     l11087:
 26111                           
 26112                           ; BSR set to: 4
 26113  00A06A  5131               	movf	49,w,b	;volatile
 26114                           
 26115                           ; Switch size 1, requested type "simple"
 26116                           ; Number of cases is 11, Range of values is 0 to 12
 26117                           ; switch strategies available:
 26118                           ; Name         Instructions Cycles
 26119                           ; simple_byte           34    18 (average)
 26120                           ;	Chosen strategy is simple_byte
 26121  00A06C  0A00               	xorlw	0	; case 0
 26122  00A06E  B4D8               	btfsc	status,2,c
 26123  00A070  EF07  F050         	goto	l11069
 26124  00A074  0A01               	xorlw	1	; case 1
 26125  00A076  B4D8               	btfsc	status,2,c
 26126  00A078  EF0B  F050         	goto	l11071
 26127  00A07C  0A02               	xorlw	2	; case 3
 26128  00A07E  B4D8               	btfsc	status,2,c
 26129  00A080  EF0B  F050         	goto	l11071
 26130  00A084  0A06               	xorlw	6	; case 5
 26131  00A086  B4D8               	btfsc	status,2,c
 26132  00A088  EFEE  F04F         	goto	l556
 26133  00A08C  0A03               	xorlw	3	; case 6
 26134  00A08E  B4D8               	btfsc	status,2,c
 26135  00A090  EFF4  F04F         	goto	l11057
 26136  00A094  0A01               	xorlw	1	; case 7
 26137  00A096  B4D8               	btfsc	status,2,c
 26138  00A098  EF25  F050         	goto	l11083
 26139  00A09C  0A0F               	xorlw	15	; case 8
 26140  00A09E  B4D8               	btfsc	status,2,c
 26141  00A0A0  EFFC  F04F         	goto	l11061
 26142  00A0A4  0A01               	xorlw	1	; case 9
 26143  00A0A6  B4D8               	btfsc	status,2,c
 26144  00A0A8  EFF8  F04F         	goto	l11059
 26145  00A0AC  0A03               	xorlw	3	; case 10
 26146  00A0AE  B4D8               	btfsc	status,2,c
 26147  00A0B0  EF0F  F050         	goto	l11073
 26148  00A0B4  0A01               	xorlw	1	; case 11
 26149  00A0B6  B4D8               	btfsc	status,2,c
 26150  00A0B8  EF18  F050         	goto	l565
 26151  00A0BC  0A07               	xorlw	7	; case 12
 26152  00A0BE  B4D8               	btfsc	status,2,c
 26153  00A0C0  EF64  F050         	goto	l554
 26154  00A0C4  EF64  F050         	goto	l554
 26155  00A0C8                     l554:
 26156  00A0C8  0012               	return		;funcret
 26157  00A0CA                     __end_of_USBCheckStdRequest:
 26158                           	callstack 0
 26159                           
 26160 ;; *************** function _USBStdSetCfgHandler *****************
 26161 ;; Defined at:
 26162 ;;		line 1972 in file "usb/usb_device.c"
 26163 ;; Parameters:    Size  Location     Type
 26164 ;;		None
 26165 ;; Auto vars:     Size  Location     Type
 26166 ;;  i               1   20[COMRAM] unsigned char 
 26167 ;; Return value:  Size  Location     Type
 26168 ;;                  1    wreg      void 
 26169 ;; Registers used:
 26170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26171 ;; Tracked objects:
 26172 ;;		On entry : 0/0
 26173 ;;		On exit  : 0/0
 26174 ;;		Unchanged: 0/0
 26175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26180 ;;Total ram usage:        1 bytes
 26181 ;; Hardware stack levels used: 1
 26182 ;; Hardware stack levels required when called: 5
 26183 ;; This function calls:
 26184 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26185 ;;		_memset
 26186 ;; This function is called by:
 26187 ;;		_USBCheckStdRequest
 26188 ;; This function uses a non-reentrant model
 26189 ;;
 26190                           
 26191                           	psect	text123
 26192  00A8A2                     __ptext123:
 26193                           	callstack 0
 26194  00A8A2                     _USBStdSetCfgHandler:
 26195                           	callstack 21
 26196  00A8A2                     
 26197                           ;usb_device.c: 1974: uint8_t i;;usb_device.c: 1977: inPipes[0].info.bits.busy = 1;
 26198  00A8A2  0100               	movlb	0	; () banked
 26199  00A8A4  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 26200  00A8A6                     
 26201                           ; BSR set to: 0
 26202                           ;usb_device.c: 1980: memset((void*)&UEP1,0x00,(2));;
 26203  00A8A6  0E27               	movlw	39
 26204  00A8A8  6E01               	movwf	memset@p1^0,c
 26205  00A8AA  0E0F               	movlw	15
 26206  00A8AC  6E02               	movwf	(memset@p1+1)^0,c
 26207  00A8AE  0E00               	movlw	0
 26208  00A8B0  6E04               	movwf	(memset@c+1)^0,c
 26209  00A8B2  0E00               	movlw	0
 26210  00A8B4  6E03               	movwf	memset@c^0,c
 26211  00A8B6  0E00               	movlw	0
 26212  00A8B8  6E06               	movwf	(memset@n+1)^0,c
 26213  00A8BA  0E02               	movlw	2
 26214  00A8BC  6E05               	movwf	memset@n^0,c
 26215  00A8BE  EC3B  F068         	call	_memset	;wreg free
 26216                           
 26217                           ;usb_device.c: 1983: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26218  00A8C2  0E00               	movlw	0
 26219  00A8C4  6E01               	movwf	memset@p1^0,c
 26220  00A8C6  0E04               	movlw	4
 26221  00A8C8  6E02               	movwf	(memset@p1+1)^0,c
 26222  00A8CA  0E00               	movlw	0
 26223  00A8CC  6E04               	movwf	(memset@c+1)^0,c
 26224  00A8CE  0E00               	movlw	0
 26225  00A8D0  6E03               	movwf	memset@c^0,c
 26226  00A8D2  0E00               	movlw	0
 26227  00A8D4  6E06               	movwf	(memset@n+1)^0,c
 26228  00A8D6  0E30               	movlw	48
 26229  00A8D8  6E05               	movwf	memset@n^0,c
 26230  00A8DA  EC3B  F068         	call	_memset	;wreg free
 26231  00A8DE                     
 26232                           ;usb_device.c: 1986: UCONbits.PPBRST = 1;
 26233  00A8DE  8C65               	bsf	101,6,c	;volatile
 26234  00A8E0                     
 26235                           ;usb_device.c: 1991: for(i = 0; i < (uint8_t)(2+1u); i++)
 26236  00A8E0  0E00               	movlw	0
 26237  00A8E2  6E15               	movwf	USBStdSetCfgHandler@i^0,c
 26238  00A8E4                     l10147:
 26239                           
 26240                           ;usb_device.c: 1992: {;usb_device.c: 1993: ep_data_in[i].Val = 0u;
 26241  00A8E4  0E7D               	movlw	low _ep_data_in
 26242  00A8E6  2415               	addwf	USBStdSetCfgHandler@i^0,w,c
 26243  00A8E8  6ED9               	movwf	fsr2l,c
 26244  00A8EA  6ADA               	clrf	fsr2h,c
 26245  00A8EC  0E01               	movlw	high _ep_data_in
 26246  00A8EE  22DA               	addwfc	fsr2h,f,c
 26247  00A8F0  0E00               	movlw	0
 26248  00A8F2  6EDF               	movwf	indf2,c
 26249                           
 26250                           ;usb_device.c: 1994: ep_data_out[i].Val = 0u;
 26251  00A8F4  0E7A               	movlw	low _ep_data_out
 26252  00A8F6  2415               	addwf	USBStdSetCfgHandler@i^0,w,c
 26253  00A8F8  6ED9               	movwf	fsr2l,c
 26254  00A8FA  6ADA               	clrf	fsr2h,c
 26255  00A8FC  0E01               	movlw	high _ep_data_out
 26256  00A8FE  22DA               	addwfc	fsr2h,f,c
 26257  00A900  0E00               	movlw	0
 26258  00A902  6EDF               	movwf	indf2,c
 26259  00A904  2A15               	incf	USBStdSetCfgHandler@i^0,f,c
 26260  00A906  0E02               	movlw	2
 26261  00A908  6415               	cpfsgt	USBStdSetCfgHandler@i^0,c
 26262  00A90A  EF89  F054         	goto	u9611
 26263  00A90E  EF8B  F054         	goto	u9610
 26264  00A912                     u9611:
 26265  00A912  EF72  F054         	goto	l10147
 26266  00A916                     u9610:
 26267  00A916                     
 26268                           ;usb_device.c: 1995: };usb_device.c: 1998: memset((void*)&USBAlternateInterface,0x00,2);
 26269  00A916  0EF8               	movlw	low _USBAlternateInterface
 26270  00A918  6E01               	movwf	memset@p1^0,c
 26271  00A91A  0E01               	movlw	high _USBAlternateInterface
 26272  00A91C  6E02               	movwf	(memset@p1+1)^0,c
 26273  00A91E  0E00               	movlw	0
 26274  00A920  6E04               	movwf	(memset@c+1)^0,c
 26275  00A922  0E00               	movlw	0
 26276  00A924  6E03               	movwf	memset@c^0,c
 26277  00A926  0E00               	movlw	0
 26278  00A928  6E06               	movwf	(memset@n+1)^0,c
 26279  00A92A  0E02               	movlw	2
 26280  00A92C  6E05               	movwf	memset@n^0,c
 26281  00A92E  EC3B  F068         	call	_memset	;wreg free
 26282  00A932                     
 26283                           ;usb_device.c: 2001: UCONbits.PPBRST = 0;
 26284  00A932  9C65               	bcf	101,6,c	;volatile
 26285  00A934                     
 26286                           ;usb_device.c: 2003: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26287  00A934  0E08               	movlw	8
 26288  00A936  0100               	movlb	0	; () banked
 26289  00A938  6FBA               	movwf	_pBDTEntryIn& (0+255),b
 26290  00A93A  0E04               	movlw	4
 26291  00A93C  6FBB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26292  00A93E                     
 26293                           ; BSR set to: 0
 26294                           ;usb_device.c: 2006: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26295  00A93E  0E00               	movlw	0
 26296  00A940  6FCD               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 26297  00A942  0E04               	movlw	4
 26298  00A944  6FCE               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 26299  00A946                     
 26300                           ; BSR set to: 0
 26301                           ;usb_device.c: 2007: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26302  00A946  C0CD  F0CB         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26303  00A94A  C0CE  F0CC         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26304  00A94E                     
 26305                           ; BSR set to: 0
 26306                           ;usb_device.c: 2010: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26307  00A94E  C432 F0FD          	movff	1074,_USBActiveConfiguration	;volatile
 26308  00A952                     
 26309                           ; BSR set to: 0
 26310                           ;usb_device.c: 2013: if(USBActiveConfiguration == 0)
 26311  00A952  51FD               	movf	_USBActiveConfiguration& (0+255),w,b
 26312  00A954  A4D8               	btfss	status,2,c
 26313  00A956  EFAF  F054         	goto	u9621
 26314  00A95A  EFB1  F054         	goto	u9620
 26315  00A95E                     u9621:
 26316  00A95E  EFB5  F054         	goto	l10169
 26317  00A962                     u9620:
 26318  00A962                     
 26319                           ; BSR set to: 0
 26320                           ;usb_device.c: 2014: {;usb_device.c: 2016: USBDeviceState = ADDRESS_STATE;
 26321  00A962  0E10               	movlw	16
 26322  00A964  6FE2               	movwf	_USBDeviceState& (0+255),b
 26323                           
 26324                           ;usb_device.c: 2017: }
 26325  00A966  EFC6  F054         	goto	l475
 26326  00A96A                     l10169:
 26327                           
 26328                           ; BSR set to: 0
 26329                           ;usb_device.c: 2018: else;usb_device.c: 2019: {;usb_device.c: 2021: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER((USB_EVENT)EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 26330  00A96A  0E00               	movlw	0
 26331  00A96C  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 26332  00A96E  0E01               	movlw	1
 26333  00A970  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 26334  00A972  0EFD               	movlw	low _USBActiveConfiguration
 26335  00A974  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 26336  00A976  0E00               	movlw	high _USBActiveConfiguration
 26337  00A978  6E10               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 26338  00A97A  0E00               	movlw	0
 26339  00A97C  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 26340  00A97E  0E01               	movlw	1
 26341  00A980  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 26342  00A982  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26343  00A986                     
 26344                           ;usb_device.c: 2026: USBDeviceState = CONFIGURED_STATE;
 26345  00A986  0E20               	movlw	32
 26346  00A988  0100               	movlb	0	; () banked
 26347  00A98A  6FE2               	movwf	_USBDeviceState& (0+255),b
 26348  00A98C                     l475:
 26349                           
 26350                           ; BSR set to: 0
 26351  00A98C  0012               	return		;funcret
 26352  00A98E                     __end_of_USBStdSetCfgHandler:
 26353                           	callstack 0
 26354                           
 26355 ;; *************** function _memset *****************
 26356 ;; Defined at:
 26357 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memset.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;  p1              2    0[COMRAM] PTR void 
 26360 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26361 ;;  c               2    2[COMRAM] int 
 26362 ;;  n               2    4[COMRAM] unsigned int 
 26363 ;; Auto vars:     Size  Location     Type
 26364 ;;  p               2    6[COMRAM] PTR unsigned char 
 26365 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26366 ;; Return value:  Size  Location     Type
 26367 ;;                  2    0[COMRAM] PTR void 
 26368 ;; Registers used:
 26369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26370 ;; Tracked objects:
 26371 ;;		On entry : 0/0
 26372 ;;		On exit  : 0/0
 26373 ;;		Unchanged: 0/0
 26374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26375 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26378 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26379 ;;Total ram usage:        8 bytes
 26380 ;; Hardware stack levels used: 1
 26381 ;; Hardware stack levels required when called: 1
 26382 ;; This function calls:
 26383 ;;		Nothing
 26384 ;; This function is called by:
 26385 ;;		_USBDeviceInit
 26386 ;;		_USBStdSetCfgHandler
 26387 ;; This function uses a non-reentrant model
 26388 ;;
 26389                           
 26390                           	psect	text124
 26391  00D076                     __ptext124:
 26392                           	callstack 0
 26393  00D076                     _memset:
 26394                           	callstack 27
 26395  00D076  C001  F007         	movff	memset@p1,memset@p
 26396  00D07A  C002  F008         	movff	memset@p1+1,memset@p+1
 26397  00D07E  EF49  F068         	goto	l9353
 26398  00D082                     l9349:
 26399  00D082  C007  FFD9         	movff	memset@p,fsr2l
 26400  00D086  C008  FFDA         	movff	memset@p+1,fsr2h
 26401  00D08A  C003  FFDF         	movff	memset@c,indf2
 26402  00D08E  4A07               	infsnz	memset@p^0,f,c
 26403  00D090  2A08               	incf	(memset@p+1)^0,f,c
 26404  00D092                     l9353:
 26405  00D092  0605               	decf	memset@n^0,f,c
 26406  00D094  A0D8               	btfss	status,0,c
 26407  00D096  0606               	decf	(memset@n+1)^0,f,c
 26408  00D098  2805               	incf	memset@n^0,w,c
 26409  00D09A  E106               	bnz	u8351
 26410  00D09C  2806               	incf	(memset@n+1)^0,w,c
 26411  00D09E  A4D8               	btfss	status,2,c
 26412  00D0A0  EF54  F068         	goto	u8351
 26413  00D0A4  EF56  F068         	goto	u8350
 26414  00D0A8                     u8351:
 26415  00D0A8  EF41  F068         	goto	l9349
 26416  00D0AC                     u8350:
 26417  00D0AC  0012               	return		;funcret
 26418  00D0AE                     __end_of_memset:
 26419                           	callstack 0
 26420                           
 26421 ;; *************** function _USBStdGetStatusHandler *****************
 26422 ;; Defined at:
 26423 ;;		line 2133 in file "usb/usb_device.c"
 26424 ;; Parameters:    Size  Location     Type
 26425 ;;		None
 26426 ;; Auto vars:     Size  Location     Type
 26427 ;;  p               2    1[COMRAM] PTR struct __BDT
 26428 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 26429 ;; Return value:  Size  Location     Type
 26430 ;;                  1    wreg      void 
 26431 ;; Registers used:
 26432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26433 ;; Tracked objects:
 26434 ;;		On entry : 0/0
 26435 ;;		On exit  : 0/0
 26436 ;;		Unchanged: 0/0
 26437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26441 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26442 ;;Total ram usage:        3 bytes
 26443 ;; Hardware stack levels used: 1
 26444 ;; Hardware stack levels required when called: 1
 26445 ;; This function calls:
 26446 ;;		Nothing
 26447 ;; This function is called by:
 26448 ;;		_USBCheckStdRequest
 26449 ;; This function uses a non-reentrant model
 26450 ;;
 26451                           
 26452                           	psect	text125
 26453  009DA6                     __ptext125:
 26454                           	callstack 0
 26455  009DA6                     _USBStdGetStatusHandler:
 26456                           	callstack 25
 26457  009DA6                     
 26458                           ;usb_device.c: 2135: CtrlTrfData[0] = 0;
 26459  009DA6  0E00               	movlw	0
 26460  009DA8  0104               	movlb	4	; () banked
 26461  009DAA  6F38               	movwf	56,b	;volatile
 26462                           
 26463                           ;usb_device.c: 2136: CtrlTrfData[1] = 0;
 26464  009DAC  0E00               	movlw	0
 26465  009DAE  6F39               	movwf	57,b	;volatile
 26466                           
 26467                           ;usb_device.c: 2138: switch(SetupPkt.Recipient)
 26468  009DB0  EF3A  F04F         	goto	l10229
 26469  009DB4                     l493:
 26470                           
 26471                           ; BSR set to: 4
 26472                           ;usb_device.c: 2141: inPipes[0].info.bits.busy = 1;
 26473  009DB4  0100               	movlb	0	; () banked
 26474  009DB6  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 26475  009DB8                     
 26476                           ; BSR set to: 0
 26477                           ;usb_device.c: 2149: };usb_device.c: 2151: if(RemoteWakeup == 1)
 26478  009DB8  05DF               	decf	_RemoteWakeup& (0+255),w,b
 26479  009DBA  A4D8               	btfss	status,2,c
 26480  009DBC  EFE2  F04E         	goto	u9691
 26481  009DC0  EFE4  F04E         	goto	u9690
 26482  009DC4                     u9691:
 26483  009DC4  EF4A  F04F         	goto	l496
 26484  009DC8                     u9690:
 26485  009DC8                     
 26486                           ; BSR set to: 0
 26487                           ;usb_device.c: 2152: {;usb_device.c: 2153: CtrlTrfData[0]|=0x02;
 26488  009DC8  0104               	movlb	4	; () banked
 26489  009DCA  8338               	bsf	56,1,b	;volatile
 26490  009DCC  EF4A  F04F         	goto	l496
 26491  009DD0                     l497:
 26492                           
 26493                           ; BSR set to: 4
 26494                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 26495  009DD0  0100               	movlb	0	; () banked
 26496  009DD2  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 26497                           
 26498                           ;usb_device.c: 2158: break;
 26499  009DD4  EF4A  F04F         	goto	l496
 26500  009DD8                     l498:
 26501                           
 26502                           ; BSR set to: 4
 26503                           ;usb_device.c: 2160: inPipes[0].info.bits.busy = 1;
 26504  009DD8  0100               	movlb	0	; () banked
 26505  009DDA  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 26506  009DDC                     
 26507                           ; BSR set to: 0
 26508                           ;usb_device.c: 2164: if(SetupPkt.EPNum != 0)
 26509  009DDC  0104               	movlb	4	; () banked
 26510  009DDE  5134               	movf	52,w,b	;volatile
 26511  009DE0  0B0F               	andlw	15
 26512  009DE2  0900               	iorlw	0
 26513  009DE4  B4D8               	btfsc	status,2,c
 26514  009DE6  EFF7  F04E         	goto	u9701
 26515  009DEA  EFF9  F04E         	goto	u9700
 26516  009DEE                     u9701:
 26517  009DEE  EF4A  F04F         	goto	l496
 26518  009DF2                     u9700:
 26519  009DF2                     
 26520                           ; BSR set to: 4
 26521                           ;usb_device.c: 2165: {;usb_device.c: 2166: BDT_ENTRY *p;;usb_device.c: 2168: if(SetupPkt
      +                          .EPDir == 0)
 26522  009DF2  BF34               	btfsc	52,7,b	;volatile
 26523  009DF4  EFFE  F04E         	goto	u9711
 26524  009DF8  EF00  F04F         	goto	u9710
 26525  009DFC                     u9711:
 26526  009DFC  EF11  F04F         	goto	l10219
 26527  009E00                     u9710:
 26528  009E00                     
 26529                           ; BSR set to: 4
 26530                           ;usb_device.c: 2169: {;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26531  009E00  5134               	movf	52,w,b	;volatile
 26532  009E02  0B0F               	andlw	15
 26533  009E04  6E01               	movwf	??_USBStdGetStatusHandler^0,c
 26534  009E06  5001               	movf	??_USBStdGetStatusHandler^0,w,c
 26535  009E08  0D02               	mullw	2
 26536  009E0A  0E46               	movlw	low _pBDTEntryOut
 26537  009E0C  24F3               	addwf	243,w,c
 26538  009E0E  6ED9               	movwf	fsr2l,c
 26539  009E10  0E01               	movlw	high _pBDTEntryOut
 26540  009E12  20F4               	addwfc	prodh,w,c
 26541  009E14  6EDA               	movwf	fsr2h,c
 26542  009E16  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 26543  009E1A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 26544                           
 26545                           ;usb_device.c: 2171: }
 26546  009E1E  EF20  F04F         	goto	l10221
 26547  009E22                     l10219:
 26548                           
 26549                           ; BSR set to: 4
 26550                           ;usb_device.c: 2172: else;usb_device.c: 2173: {;usb_device.c: 2174: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 26551  009E22  5134               	movf	52,w,b	;volatile
 26552  009E24  0B0F               	andlw	15
 26553  009E26  6E01               	movwf	??_USBStdGetStatusHandler^0,c
 26554  009E28  5001               	movf	??_USBStdGetStatusHandler^0,w,c
 26555  009E2A  0D02               	mullw	2
 26556  009E2C  0EBA               	movlw	low _pBDTEntryIn
 26557  009E2E  24F3               	addwf	243,w,c
 26558  009E30  6ED9               	movwf	fsr2l,c
 26559  009E32  0E00               	movlw	high _pBDTEntryIn
 26560  009E34  20F4               	addwfc	prodh,w,c
 26561  009E36  6EDA               	movwf	fsr2h,c
 26562  009E38  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 26563  009E3C  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 26564  009E40                     l10221:
 26565                           
 26566                           ; BSR set to: 4
 26567                           ;usb_device.c: 2175: };usb_device.c: 2177: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 26568  009E40  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26569  009E44  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26570  009E48  AEDF               	btfss	indf2,7,c
 26571  009E4A  EF29  F04F         	goto	u9721
 26572  009E4E  EF2B  F04F         	goto	u9720
 26573  009E52                     u9721:
 26574  009E52  EF4A  F04F         	goto	l496
 26575  009E56                     u9720:
 26576  009E56                     
 26577                           ; BSR set to: 4
 26578  009E56  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26579  009E5A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26580  009E5E  A4DF               	btfss	indf2,2,c
 26581  009E60  EF34  F04F         	goto	u9731
 26582  009E64  EF36  F04F         	goto	u9730
 26583  009E68                     u9731:
 26584  009E68  EF4A  F04F         	goto	l496
 26585  009E6C                     u9730:
 26586  009E6C                     
 26587                           ; BSR set to: 4
 26588                           ;usb_device.c: 2178: {;usb_device.c: 2179: CtrlTrfData[0]=0x01;
 26589  009E6C  0E01               	movlw	1
 26590  009E6E  6F38               	movwf	56,b	;volatile
 26591  009E70  EF4A  F04F         	goto	l496
 26592  009E74                     l10229:
 26593                           
 26594                           ; BSR set to: 4
 26595  009E74  5130               	movf	48,w,b	;volatile
 26596  009E76  0B1F               	andlw	31
 26597                           
 26598                           ; Switch size 1, requested type "simple"
 26599                           ; Number of cases is 3, Range of values is 0 to 2
 26600                           ; switch strategies available:
 26601                           ; Name         Instructions Cycles
 26602                           ; simple_byte           10     6 (average)
 26603                           ;	Chosen strategy is simple_byte
 26604  009E78  0A00               	xorlw	0	; case 0
 26605  009E7A  B4D8               	btfsc	status,2,c
 26606  009E7C  EFDA  F04E         	goto	l493
 26607  009E80  0A01               	xorlw	1	; case 1
 26608  009E82  B4D8               	btfsc	status,2,c
 26609  009E84  EFE8  F04E         	goto	l497
 26610  009E88  0A03               	xorlw	3	; case 2
 26611  009E8A  B4D8               	btfsc	status,2,c
 26612  009E8C  EFEC  F04E         	goto	l498
 26613  009E90  EF4A  F04F         	goto	l496
 26614  009E94                     l496:
 26615                           
 26616                           ;usb_device.c: 2185: if(inPipes[0].info.bits.busy == 1)
 26617  009E94  0100               	movlb	0	; () banked
 26618  009E96  AFB7               	btfss	(_inPipes+3)& (0+255),7,b
 26619  009E98  EF50  F04F         	goto	u9741
 26620  009E9C  EF52  F04F         	goto	u9740
 26621  009EA0                     u9741:
 26622  009EA0  EF59  F04F         	goto	l504
 26623  009EA4                     u9740:
 26624  009EA4                     
 26625                           ; BSR set to: 0
 26626                           ;usb_device.c: 2186: {;usb_device.c: 2187: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 26627  009EA4  0E38               	movlw	56
 26628  009EA6  6FB4               	movwf	_inPipes& (0+255),b
 26629  009EA8  0E04               	movlw	4
 26630  009EAA  6FB5               	movwf	(_inPipes+1)& (0+255),b
 26631  009EAC                     
 26632                           ; BSR set to: 0
 26633                           ;usb_device.c: 2188: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26634  009EAC  81B7               	bsf	(_inPipes+3)& (0+255),0,b
 26635  009EAE                     
 26636                           ; BSR set to: 0
 26637                           ;usb_device.c: 2189: inPipes[0].wCount.v[0] = 2;
 26638  009EAE  0E02               	movlw	2
 26639  009EB0  6FB8               	movwf	(_inPipes+4)& (0+255),b
 26640  009EB2                     l504:
 26641                           
 26642                           ; BSR set to: 0
 26643  009EB2  0012               	return		;funcret
 26644  009EB4                     __end_of_USBStdGetStatusHandler:
 26645                           	callstack 0
 26646                           
 26647 ;; *************** function _USBStdGetDscHandler *****************
 26648 ;; Defined at:
 26649 ;;		line 2047 in file "usb/usb_device.c"
 26650 ;; Parameters:    Size  Location     Type
 26651 ;;		None
 26652 ;; Auto vars:     Size  Location     Type
 26653 ;;		None
 26654 ;; Return value:  Size  Location     Type
 26655 ;;                  1    wreg      void 
 26656 ;; Registers used:
 26657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26658 ;; Tracked objects:
 26659 ;;		On entry : 0/0
 26660 ;;		On exit  : 0/0
 26661 ;;		Unchanged: 0/0
 26662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26667 ;;Total ram usage:        2 bytes
 26668 ;; Hardware stack levels used: 1
 26669 ;; Hardware stack levels required when called: 1
 26670 ;; This function calls:
 26671 ;;		Nothing
 26672 ;; This function is called by:
 26673 ;;		_USBCheckStdRequest
 26674 ;; This function uses a non-reentrant model
 26675 ;;
 26676                           
 26677                           	psect	text126
 26678  009300                     __ptext126:
 26679                           	callstack 0
 26680  009300                     _USBStdGetDscHandler:
 26681                           	callstack 25
 26682  009300                     
 26683                           ;usb_device.c: 2049: if(SetupPkt.bmRequestType == 0x80)
 26684  009300  0E80               	movlw	128
 26685  009302  0104               	movlb	4	; () banked
 26686  009304  1930               	xorwf	48,w,b	;volatile
 26687  009306  A4D8               	btfss	status,2,c
 26688  009308  EF88  F049         	goto	u9631
 26689  00930C  EF8A  F049         	goto	u9630
 26690  009310                     u9631:
 26691  009310  EF25  F04A         	goto	l489
 26692  009314                     u9630:
 26693  009314                     
 26694                           ; BSR set to: 4
 26695                           ;usb_device.c: 2050: {;usb_device.c: 2051: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26696  009314  0EC0               	movlw	192
 26697  009316  0100               	movlb	0	; () banked
 26698  009318  6FB7               	movwf	(_inPipes+3)& (0+255),b
 26699                           
 26700                           ;usb_device.c: 2053: switch(SetupPkt.bDescriptorType)
 26701  00931A  EF15  F04A         	goto	l10203
 26702  00931E                     l10177:
 26703                           
 26704                           ; BSR set to: 4
 26705                           ;usb_device.c: 2059: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26706  00931E  0E51               	movlw	low _device_dsc
 26707  009320  0100               	movlb	0	; () banked
 26708  009322  6FB4               	movwf	_inPipes& (0+255),b
 26709  009324  0E23               	movlw	high _device_dsc
 26710  009326  6FB5               	movwf	(_inPipes+1)& (0+255),b
 26711  009328                     
 26712                           ; BSR set to: 0
 26713                           ;usb_device.c: 2061: inPipes[0].wCount.Val = sizeof(device_dsc);
 26714  009328  0E00               	movlw	0
 26715  00932A  6FB9               	movwf	(_inPipes+5)& (0+255),b
 26716  00932C  0E12               	movlw	18
 26717  00932E  6FB8               	movwf	(_inPipes+4)& (0+255),b
 26718                           
 26719                           ;usb_device.c: 2062: break;
 26720  009330  EF25  F04A         	goto	l489
 26721  009334                     l10181:
 26722                           
 26723                           ; BSR set to: 4
 26724                           ;usb_device.c: 2067: if(SetupPkt.bDscIndex < 1)
 26725  009334  5132               	movf	50,w,b	;volatile
 26726  009336  A4D8               	btfss	status,2,c
 26727  009338  EFA0  F049         	goto	u9641
 26728  00933C  EFA2  F049         	goto	u9640
 26729  009340                     u9641:
 26730  009340  EFE3  F049         	goto	l10189
 26731  009344                     u9640:
 26732  009344                     
 26733                           ; BSR set to: 4
 26734                           ;usb_device.c: 2068: {;usb_device.c: 2072: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 26735  009344  5132               	movf	50,w,b	;volatile
 26736  009346  0D02               	mullw	2
 26737  009348  0EF9               	movlw	low _USB_CD_Ptr
 26738  00934A  24F3               	addwf	243,w,c
 26739  00934C  6EF6               	movwf	tblptrl,c
 26740  00934E  0E20               	movlw	high _USB_CD_Ptr
 26741  009350  20F4               	addwfc	244,w,c
 26742  009352  6EF7               	movwf	tblptrh,c
 26743  009354                     	if	0	;There are less than 3 active tblptr bytes
 26744  009354                     	endif
 26745  009354  0009               	tblrd		*+
 26746  009356  CFF5 F0B4          	movff	tablat,_inPipes
 26747  00935A  000A               	tblrd		*-
 26748  00935C  CFF5 F0B5          	movff	tablat,_inPipes+1
 26749  009360                     
 26750                           ; BSR set to: 4
 26751                           ;usb_device.c: 2078: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26752  009360  0E02               	movlw	2
 26753  009362  0100               	movlb	0	; () banked
 26754  009364  25B4               	addwf	_inPipes& (0+255),w,b
 26755  009366  6E01               	movwf	??_USBStdGetDscHandler^0,c
 26756  009368  0E00               	movlw	0
 26757  00936A  21B5               	addwfc	(_inPipes+1)& (0+255),w,b
 26758  00936C  6E02               	movwf	(??_USBStdGetDscHandler+1)^0,c
 26759  00936E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26760  009372  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26761  009376  6AF8               	clrf	tblptru,c
 26762  009378  0E0E               	movlw	(high __ramtop+-1)
 26763  00937A  64F7               	cpfsgt	tblptrh,c
 26764  00937C  D003               	bra	u9657
 26765  00937E  0008               	tblrd		*
 26766  009380  50F5               	movf	tablat,w,c
 26767  009382  D005               	bra	u9650
 26768  009384                     u9657:
 26769  009384  CFF6 FFE9          	movff	tblptrl,fsr0l
 26770  009388  CFF7 FFEA          	movff	tblptrh,fsr0h
 26771  00938C  50EF               	movf	indf0,w,c
 26772  00938E                     u9650:
 26773  00938E  0100               	movlb	0	; () banked
 26774  009390  6FB8               	movwf	(_inPipes+4)& (0+255),b
 26775  009392                     
 26776                           ; BSR set to: 0
 26777                           ;usb_device.c: 2079: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26778  009392  0E03               	movlw	3
 26779  009394  25B4               	addwf	_inPipes& (0+255),w,b
 26780  009396  6E01               	movwf	??_USBStdGetDscHandler^0,c
 26781  009398  0E00               	movlw	0
 26782  00939A  21B5               	addwfc	(_inPipes+1)& (0+255),w,b
 26783  00939C  6E02               	movwf	(??_USBStdGetDscHandler+1)^0,c
 26784  00939E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26785  0093A2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26786  0093A6  6AF8               	clrf	tblptru,c
 26787  0093A8  0E0E               	movlw	(high __ramtop+-1)
 26788  0093AA  64F7               	cpfsgt	tblptrh,c
 26789  0093AC  D003               	bra	u9667
 26790  0093AE  0008               	tblrd		*
 26791  0093B0  50F5               	movf	tablat,w,c
 26792  0093B2  D005               	bra	u9660
 26793  0093B4                     u9667:
 26794  0093B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 26795  0093B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 26796  0093BC  50EF               	movf	indf0,w,c
 26797  0093BE                     u9660:
 26798  0093BE  0100               	movlb	0	; () banked
 26799  0093C0  6FB9               	movwf	(_inPipes+5)& (0+255),b
 26800                           
 26801                           ;usb_device.c: 2080: }
 26802  0093C2  EF25  F04A         	goto	l489
 26803  0093C6                     l10189:
 26804                           
 26805                           ; BSR set to: 4
 26806                           ;usb_device.c: 2081: else;usb_device.c: 2082: {;usb_device.c: 2083: inPipes[0].info.Val 
      +                          = 0;
 26807  0093C6  0E00               	movlw	0
 26808  0093C8  0100               	movlb	0	; () banked
 26809  0093CA  6FB7               	movwf	(_inPipes+3)& (0+255),b
 26810  0093CC  EF25  F04A         	goto	l489
 26811  0093D0                     l10191:
 26812                           
 26813                           ; BSR set to: 4
 26814                           ;usb_device.c: 2090: if(SetupPkt.bDscIndex<3)
 26815  0093D0  0E03               	movlw	3
 26816  0093D2  6132               	cpfslt	50,b	;volatile
 26817  0093D4  EFEE  F049         	goto	u9671
 26818  0093D8  EFF0  F049         	goto	u9670
 26819  0093DC                     u9671:
 26820  0093DC  EFE3  F049         	goto	l10189
 26821  0093E0                     u9670:
 26822  0093E0                     
 26823                           ; BSR set to: 4
 26824                           ;usb_device.c: 2091: {;usb_device.c: 2093: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 26825  0093E0  5132               	movf	50,w,b	;volatile
 26826  0093E2  0D02               	mullw	2
 26827  0093E4  0EF3               	movlw	low _USB_SD_Ptr
 26828  0093E6  24F3               	addwf	243,w,c
 26829  0093E8  6EF6               	movwf	tblptrl,c
 26830  0093EA  0E20               	movlw	high _USB_SD_Ptr
 26831  0093EC  20F4               	addwfc	244,w,c
 26832  0093EE  6EF7               	movwf	tblptrh,c
 26833  0093F0                     	if	0	;There are less than 3 active tblptr bytes
 26834  0093F0                     	endif
 26835  0093F0  0009               	tblrd		*+
 26836  0093F2  CFF5 F0B4          	movff	tablat,_inPipes
 26837  0093F6  000A               	tblrd		*-
 26838  0093F8  CFF5 F0B5          	movff	tablat,_inPipes+1
 26839  0093FC                     
 26840                           ; BSR set to: 4
 26841                           ;usb_device.c: 2095: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26842  0093FC  C0B4  FFF6         	movff	_inPipes,tblptrl
 26843  009400  C0B5  FFF7         	movff	_inPipes+1,tblptrh
 26844  009404  6AF8               	clrf	tblptru,c
 26845  009406  0E0E               	movlw	(high __ramtop+-1)
 26846  009408  64F7               	cpfsgt	tblptrh,c
 26847  00940A  D003               	bra	u9687
 26848  00940C  0008               	tblrd		*
 26849  00940E  50F5               	movf	tablat,w,c
 26850  009410  D005               	bra	u9680
 26851  009412                     u9687:
 26852  009412  CFF6 FFE9          	movff	tblptrl,fsr0l
 26853  009416  CFF7 FFEA          	movff	tblptrh,fsr0h
 26854  00941A  50EF               	movf	indf0,w,c
 26855  00941C                     u9680:
 26856  00941C  6E01               	movwf	??_USBStdGetDscHandler^0,c
 26857  00941E  5001               	movf	??_USBStdGetDscHandler^0,w,c
 26858  009420  0100               	movlb	0	; () banked
 26859  009422  6FB8               	movwf	(_inPipes+4)& (0+255),b
 26860  009424  6BB9               	clrf	(_inPipes+5)& (0+255),b
 26861                           
 26862                           ;usb_device.c: 2096: }
 26863  009426  EF25  F04A         	goto	l489
 26864  00942A                     l10203:
 26865                           
 26866                           ; BSR set to: 0
 26867  00942A  0104               	movlb	4	; () banked
 26868  00942C  5133               	movf	51,w,b	;volatile
 26869                           
 26870                           ; Switch size 1, requested type "simple"
 26871                           ; Number of cases is 3, Range of values is 1 to 3
 26872                           ; switch strategies available:
 26873                           ; Name         Instructions Cycles
 26874                           ; simple_byte           10     6 (average)
 26875                           ;	Chosen strategy is simple_byte
 26876  00942E  0A01               	xorlw	1	; case 1
 26877  009430  B4D8               	btfsc	status,2,c
 26878  009432  EF8F  F049         	goto	l10177
 26879  009436  0A03               	xorlw	3	; case 2
 26880  009438  B4D8               	btfsc	status,2,c
 26881  00943A  EF9A  F049         	goto	l10181
 26882  00943E  0A01               	xorlw	1	; case 3
 26883  009440  B4D8               	btfsc	status,2,c
 26884  009442  EFE8  F049         	goto	l10191
 26885  009446  EFE3  F049         	goto	l10189
 26886  00944A                     l489:
 26887  00944A  0012               	return		;funcret
 26888  00944C                     __end_of_USBStdGetDscHandler:
 26889                           	callstack 0
 26890                           
 26891 ;; *************** function _USBStdFeatureReqHandler *****************
 26892 ;; Defined at:
 26893 ;;		line 2761 in file "usb/usb_device.c"
 26894 ;; Parameters:    Size  Location     Type
 26895 ;;		None
 26896 ;; Auto vars:     Size  Location     Type
 26897 ;;  p               2   25[COMRAM] PTR struct __BDT
 26898 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 26899 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 26900 ;;		 -> UEP0(1), 
 26901 ;;  current_ep_d    1   24[COMRAM] struct .
 26902 ;; Return value:  Size  Location     Type
 26903 ;;                  1    wreg      void 
 26904 ;; Registers used:
 26905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26906 ;; Tracked objects:
 26907 ;;		On entry : 0/0
 26908 ;;		On exit  : 0/0
 26909 ;;		Unchanged: 0/0
 26910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26912 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26914 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26915 ;;Total ram usage:        7 bytes
 26916 ;; Hardware stack levels used: 1
 26917 ;; Hardware stack levels required when called: 5
 26918 ;; This function calls:
 26919 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26920 ;; This function is called by:
 26921 ;;		_USBCheckStdRequest
 26922 ;; This function uses a non-reentrant model
 26923 ;;
 26924                           
 26925                           	psect	text127
 26926  0062C8                     __ptext127:
 26927                           	callstack 0
 26928  0062C8                     _USBStdFeatureReqHandler:
 26929                           	callstack 21
 26930  0062C8                     
 26931                           ;usb_device.c: 2763: BDT_ENTRY *p;;usb_device.c: 2764: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2768: unsigned char* pUEP;;usb_device.c: 2772: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2773: (SetupPkt.Recipient == (0x00)))
 26932  0062C8  0104               	movlb	4	; () banked
 26933  0062CA  0532               	decf	50,w,b	;volatile
 26934  0062CC  A4D8               	btfss	status,2,c
 26935  0062CE  EF6B  F031         	goto	u9751
 26936  0062D2  EF6D  F031         	goto	u9750
 26937  0062D6                     u9751:
 26938  0062D6  EF8B  F031         	goto	l571
 26939  0062DA                     u9750:
 26940  0062DA                     
 26941                           ; BSR set to: 4
 26942  0062DA  5130               	movf	48,w,b	;volatile
 26943  0062DC  0B1F               	andlw	31
 26944  0062DE  0900               	iorlw	0
 26945  0062E0  A4D8               	btfss	status,2,c
 26946  0062E2  EF75  F031         	goto	u9761
 26947  0062E6  EF77  F031         	goto	u9760
 26948  0062EA                     u9761:
 26949  0062EA  EF8B  F031         	goto	l571
 26950  0062EE                     u9760:
 26951  0062EE                     
 26952                           ; BSR set to: 4
 26953                           ;usb_device.c: 2774: {;usb_device.c: 2775: inPipes[0].info.bits.busy = 1;
 26954  0062EE  0100               	movlb	0	; () banked
 26955  0062F0  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 26956  0062F2                     
 26957                           ; BSR set to: 0
 26958                           ;usb_device.c: 2776: if(SetupPkt.bRequest == 3)
 26959  0062F2  0E03               	movlw	3
 26960  0062F4  0104               	movlb	4	; () banked
 26961  0062F6  1931               	xorwf	49,w,b	;volatile
 26962  0062F8  A4D8               	btfss	status,2,c
 26963  0062FA  EF81  F031         	goto	u9771
 26964  0062FE  EF83  F031         	goto	u9770
 26965  006302                     u9771:
 26966  006302  EF88  F031         	goto	l10247
 26967  006306                     u9770:
 26968  006306                     
 26969                           ; BSR set to: 4
 26970                           ;usb_device.c: 2777: RemoteWakeup = 1;
 26971  006306  0E01               	movlw	1
 26972  006308  0100               	movlb	0	; () banked
 26973  00630A  6FDF               	movwf	_RemoteWakeup& (0+255),b
 26974  00630C  EF8B  F031         	goto	l571
 26975  006310                     l10247:
 26976                           
 26977                           ; BSR set to: 4
 26978                           ;usb_device.c: 2778: else;usb_device.c: 2779: RemoteWakeup = 0;
 26979  006310  0E00               	movlw	0
 26980  006312  0100               	movlb	0	; () banked
 26981  006314  6FDF               	movwf	_RemoteWakeup& (0+255),b
 26982  006316                     l571:
 26983                           
 26984                           ;usb_device.c: 2780: };usb_device.c: 2783: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          784: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2785: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2786: (USBDeviceState == CONFIGURED_STATE))
 26985  006316  0104               	movlb	4	; () banked
 26986  006318  5132               	movf	50,w,b	;volatile
 26987  00631A  A4D8               	btfss	status,2,c
 26988  00631C  EF92  F031         	goto	u9781
 26989  006320  EF94  F031         	goto	u9780
 26990  006324                     u9781:
 26991  006324  EF14  F033         	goto	l594
 26992  006328                     u9780:
 26993  006328                     
 26994                           ; BSR set to: 4
 26995  006328  5130               	movf	48,w,b	;volatile
 26996  00632A  0B1F               	andlw	31
 26997  00632C  0A02               	xorlw	2
 26998  00632E  A4D8               	btfss	status,2,c
 26999  006330  EF9C  F031         	goto	u9791
 27000  006334  EF9E  F031         	goto	u9790
 27001  006338                     u9791:
 27002  006338  EF14  F033         	goto	l594
 27003  00633C                     u9790:
 27004  00633C                     
 27005                           ; BSR set to: 4
 27006  00633C  5134               	movf	52,w,b	;volatile
 27007  00633E  0B0F               	andlw	15
 27008  006340  0900               	iorlw	0
 27009  006342  B4D8               	btfsc	status,2,c
 27010  006344  EFA6  F031         	goto	u9801
 27011  006348  EFA8  F031         	goto	u9800
 27012  00634C                     u9801:
 27013  00634C  EF14  F033         	goto	l594
 27014  006350                     u9800:
 27015  006350                     
 27016                           ; BSR set to: 4
 27017  006350  5134               	movf	52,w,b	;volatile
 27018  006352  0B0F               	andlw	15
 27019  006354  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27020  006356  0E03               	movlw	3
 27021  006358  6015               	cpfslt	??_USBStdFeatureReqHandler^0,c
 27022  00635A  EFB1  F031         	goto	u9811
 27023  00635E  EFB3  F031         	goto	u9810
 27024  006362                     u9811:
 27025  006362  EF14  F033         	goto	l594
 27026  006366                     u9810:
 27027  006366                     
 27028                           ; BSR set to: 4
 27029  006366  0E20               	movlw	32
 27030  006368  0100               	movlb	0	; () banked
 27031  00636A  19E2               	xorwf	_USBDeviceState& (0+255),w,b
 27032  00636C  A4D8               	btfss	status,2,c
 27033  00636E  EFBB  F031         	goto	u9821
 27034  006372  EFBD  F031         	goto	u9820
 27035  006376                     u9821:
 27036  006376  EF14  F033         	goto	l594
 27037  00637A                     u9820:
 27038  00637A                     
 27039                           ; BSR set to: 0
 27040                           ;usb_device.c: 2787: {;usb_device.c: 2790: inPipes[0].info.bits.busy = 1;
 27041  00637A  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 27042                           
 27043                           ;usb_device.c: 2793: if(SetupPkt.EPDir == 0)
 27044  00637C  0104               	movlb	4	; () banked
 27045  00637E  BF34               	btfsc	52,7,b	;volatile
 27046  006380  EFC4  F031         	goto	u9831
 27047  006384  EFC6  F031         	goto	u9830
 27048  006388                     u9831:
 27049  006388  EFE3  F031         	goto	l10263
 27050  00638C                     u9830:
 27051  00638C                     
 27052                           ; BSR set to: 4
 27053                           ;usb_device.c: 2794: {;usb_device.c: 2795: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27054  00638C  5134               	movf	52,w,b	;volatile
 27055  00638E  0B0F               	andlw	15
 27056  006390  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27057  006392  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 27058  006394  0D02               	mullw	2
 27059  006396  0E46               	movlw	low _pBDTEntryOut
 27060  006398  24F3               	addwf	243,w,c
 27061  00639A  6ED9               	movwf	fsr2l,c
 27062  00639C  0E01               	movlw	high _pBDTEntryOut
 27063  00639E  20F4               	addwfc	prodh,w,c
 27064  0063A0  6EDA               	movwf	fsr2h,c
 27065  0063A2  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27066  0063A6  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27067  0063AA                     
 27068                           ; BSR set to: 4
 27069                           ;usb_device.c: 2796: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27070  0063AA  5134               	movf	52,w,b	;volatile
 27071  0063AC  0B0F               	andlw	15
 27072  0063AE  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27073  0063B0  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27074  0063B2  0E7A               	movlw	low _ep_data_out
 27075  0063B4  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27076  0063B6  6ED9               	movwf	fsr2l,c
 27077  0063B8  0E01               	movlw	high _ep_data_out
 27078  0063BA  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27079  0063BC  6EDA               	movwf	fsr2h,c
 27080  0063BE  50DF               	movf	indf2,w,c
 27081  0063C0  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data^0,c
 27082                           
 27083                           ;usb_device.c: 2797: }
 27084  0063C2  EFFE  F031         	goto	l10267
 27085  0063C6                     l10263:
 27086                           
 27087                           ; BSR set to: 4
 27088                           ;usb_device.c: 2798: else;usb_device.c: 2799: {;usb_device.c: 2800: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 27089  0063C6  5134               	movf	52,w,b	;volatile
 27090  0063C8  0B0F               	andlw	15
 27091  0063CA  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27092  0063CC  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 27093  0063CE  0D02               	mullw	2
 27094  0063D0  0EBA               	movlw	low _pBDTEntryIn
 27095  0063D2  24F3               	addwf	243,w,c
 27096  0063D4  6ED9               	movwf	fsr2l,c
 27097  0063D6  0E00               	movlw	high _pBDTEntryIn
 27098  0063D8  20F4               	addwfc	prodh,w,c
 27099  0063DA  6EDA               	movwf	fsr2h,c
 27100  0063DC  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27101  0063E0  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27102  0063E4                     
 27103                           ; BSR set to: 4
 27104                           ;usb_device.c: 2801: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27105  0063E4  5134               	movf	52,w,b	;volatile
 27106  0063E6  0B0F               	andlw	15
 27107  0063E8  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27108  0063EA  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27109  0063EC  0E7D               	movlw	low _ep_data_in
 27110  0063EE  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27111  0063F0  6ED9               	movwf	fsr2l,c
 27112  0063F2  0E01               	movlw	high _ep_data_in
 27113  0063F4  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27114  0063F6  6EDA               	movwf	fsr2h,c
 27115  0063F8  50DF               	movf	indf2,w,c
 27116  0063FA  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data^0,c
 27117  0063FC                     l10267:
 27118                           
 27119                           ; BSR set to: 4
 27120                           ;usb_device.c: 2802: };usb_device.c: 2808: if(current_ep_data.bits.ping_pong_state == 0)
 27121  0063FC  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,0,c
 27122  0063FE  EF03  F032         	goto	u9841
 27123  006402  EF05  F032         	goto	u9840
 27124  006406                     u9841:
 27125  006406  EF0D  F032         	goto	l10271
 27126  00640A                     u9840:
 27127  00640A                     
 27128                           ; BSR set to: 4
 27129                           ;usb_device.c: 2809: {;usb_device.c: 2810: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 27130  00640A  0EFB               	movlw	251
 27131  00640C  141A               	andwf	USBStdFeatureReqHandler@p^0,w,c
 27132  00640E  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 27133  006410  0EFF               	movlw	255
 27134  006412  141B               	andwf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27135  006414  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27136                           
 27137                           ;usb_device.c: 2811: }
 27138  006416  EF12  F032         	goto	l10273
 27139  00641A                     l10271:
 27140                           
 27141                           ; BSR set to: 4
 27142                           ;usb_device.c: 2812: else;usb_device.c: 2813: {;usb_device.c: 2814: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 27143  00641A  0E04               	movlw	4
 27144  00641C  101A               	iorwf	USBStdFeatureReqHandler@p^0,w,c
 27145  00641E  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 27146  006420  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27147  006422  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27148  006424                     l10273:
 27149                           
 27150                           ; BSR set to: 4
 27151                           ;usb_device.c: 2815: };usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 27152  006424  BF34               	btfsc	52,7,b	;volatile
 27153  006426  EF17  F032         	goto	u9851
 27154  00642A  EF19  F032         	goto	u9850
 27155  00642E                     u9851:
 27156  00642E  EF2A  F032         	goto	l10277
 27157  006432                     u9850:
 27158  006432                     
 27159                           ; BSR set to: 4
 27160                           ;usb_device.c: 2821: {;usb_device.c: 2822: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 27161  006432  5134               	movf	52,w,b	;volatile
 27162  006434  0B0F               	andlw	15
 27163  006436  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27164  006438  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 27165  00643A  0D02               	mullw	2
 27166  00643C  0E46               	movlw	low _pBDTEntryOut
 27167  00643E  24F3               	addwf	243,w,c
 27168  006440  6ED9               	movwf	fsr2l,c
 27169  006442  0E01               	movlw	high _pBDTEntryOut
 27170  006444  20F4               	addwfc	prodh,w,c
 27171  006446  6EDA               	movwf	fsr2h,c
 27172  006448  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27173  00644C  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27174                           
 27175                           ;usb_device.c: 2823: }
 27176  006450  EF39  F032         	goto	l10279
 27177  006454                     l10277:
 27178                           
 27179                           ; BSR set to: 4
 27180                           ;usb_device.c: 2824: else;usb_device.c: 2825: {;usb_device.c: 2826: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 27181  006454  5134               	movf	52,w,b	;volatile
 27182  006456  0B0F               	andlw	15
 27183  006458  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27184  00645A  5015               	movf	??_USBStdFeatureReqHandler^0,w,c
 27185  00645C  0D02               	mullw	2
 27186  00645E  0EBA               	movlw	low _pBDTEntryIn
 27187  006460  24F3               	addwf	243,w,c
 27188  006462  6ED9               	movwf	fsr2l,c
 27189  006464  0E00               	movlw	high _pBDTEntryIn
 27190  006466  20F4               	addwfc	prodh,w,c
 27191  006468  6EDA               	movwf	fsr2h,c
 27192  00646A  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27193  00646E  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27194  006472                     l10279:
 27195                           
 27196                           ; BSR set to: 4
 27197                           ;usb_device.c: 2827: };usb_device.c: 2830: if(SetupPkt.bRequest == 3)
 27198  006472  0E03               	movlw	3
 27199  006474  1931               	xorwf	49,w,b	;volatile
 27200  006476  A4D8               	btfss	status,2,c
 27201  006478  EF40  F032         	goto	u9861
 27202  00647C  EF42  F032         	goto	u9860
 27203  006480                     u9861:
 27204  006480  EF7C  F032         	goto	l10289
 27205  006484                     u9860:
 27206  006484                     
 27207                           ; BSR set to: 4
 27208                           ;usb_device.c: 2831: {;usb_device.c: 2832: if(p->STAT.UOWN == 1)
 27209  006484  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27210  006488  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27211  00648C  AEDF               	btfss	indf2,7,c
 27212  00648E  EF4B  F032         	goto	u9871
 27213  006492  EF4D  F032         	goto	u9870
 27214  006496                     u9871:
 27215  006496  EF6E  F032         	goto	l582
 27216  00649A                     u9870:
 27217  00649A                     
 27218                           ; BSR set to: 4
 27219                           ;usb_device.c: 2833: {;usb_device.c: 2836: if(SetupPkt.EPDir == 0)
 27220  00649A  BF34               	btfsc	52,7,b	;volatile
 27221  00649C  EF52  F032         	goto	u9881
 27222  0064A0  EF54  F032         	goto	u9880
 27223  0064A4                     u9881:
 27224  0064A4  EF62  F032         	goto	l10287
 27225  0064A8                     u9880:
 27226  0064A8                     
 27227                           ; BSR set to: 4
 27228                           ;usb_device.c: 2837: {;usb_device.c: 2838: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 27229  0064A8  5134               	movf	52,w,b	;volatile
 27230  0064AA  0B0F               	andlw	15
 27231  0064AC  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27232  0064AE  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27233  0064B0  0E7A               	movlw	low _ep_data_out
 27234  0064B2  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27235  0064B4  6ED9               	movwf	fsr2l,c
 27236  0064B6  0E01               	movlw	high _ep_data_out
 27237  0064B8  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27238  0064BA  6EDA               	movwf	fsr2h,c
 27239  0064BC  0101               	movlb	1	; () banked
 27240  0064BE  82DF               	bsf	indf2,1,c
 27241                           
 27242                           ;usb_device.c: 2839: }
 27243  0064C0  EF6E  F032         	goto	l582
 27244  0064C4                     l10287:
 27245                           
 27246                           ; BSR set to: 4
 27247                           ;usb_device.c: 2840: else;usb_device.c: 2841: {;usb_device.c: 2842: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 27248  0064C4  5134               	movf	52,w,b	;volatile
 27249  0064C6  0B0F               	andlw	15
 27250  0064C8  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27251  0064CA  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27252  0064CC  0E7D               	movlw	low _ep_data_in
 27253  0064CE  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27254  0064D0  6ED9               	movwf	fsr2l,c
 27255  0064D2  0E01               	movlw	high _ep_data_in
 27256  0064D4  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27257  0064D6  6EDA               	movwf	fsr2h,c
 27258  0064D8  0101               	movlb	1	; () banked
 27259  0064DA  82DF               	bsf	indf2,1,c
 27260  0064DC                     l582:
 27261                           
 27262                           ;usb_device.c: 2843: };usb_device.c: 2844: };usb_device.c: 2847: p->STAT.Val |= 0x04;
 27263  0064DC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27264  0064E0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27265  0064E4  0E00               	movlw	0
 27266  0064E6  84DB               	bsf	plusw2,2,c
 27267                           
 27268                           ;usb_device.c: 2848: p->STAT.Val |= 0x80;
 27269  0064E8  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27270  0064EC  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27271  0064F0  0E00               	movlw	0
 27272  0064F2  8EDB               	bsf	plusw2,7,c
 27273                           
 27274                           ;usb_device.c: 2849: }
 27275  0064F4  EF14  F033         	goto	l594
 27276  0064F8                     l10289:
 27277                           
 27278                           ; BSR set to: 4
 27279                           ;usb_device.c: 2850: else;usb_device.c: 2851: {;usb_device.c: 2855: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 27280  0064F8  0E04               	movlw	4
 27281  0064FA  181A               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 27282  0064FC  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 27283  0064FE  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27284  006500  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27285  006502                     
 27286                           ; BSR set to: 4
 27287                           ;usb_device.c: 2857: if(p->STAT.UOWN == 1)
 27288  006502  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27289  006506  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27290  00650A  AEDF               	btfss	indf2,7,c
 27291  00650C  EF8A  F032         	goto	u9891
 27292  006510  EF8C  F032         	goto	u9890
 27293  006514                     u9891:
 27294  006514  EFA8  F032         	goto	l10299
 27295  006518                     u9890:
 27296  006518                     
 27297                           ; BSR set to: 4
 27298                           ;usb_device.c: 2858: {;usb_device.c: 2861: p->STAT.Val &= (~0x80);
 27299  006518  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27300  00651C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27301  006520  0E7F               	movlw	127
 27302  006522  16DF               	andwf	indf2,f,c
 27303  006524                     
 27304                           ; BSR set to: 4
 27305                           ;usb_device.c: 2862: p->STAT.Val |= 0x40;
 27306  006524  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27307  006528  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27308  00652C  0E00               	movlw	0
 27309  00652E  8CDB               	bsf	plusw2,6,c
 27310  006530                     
 27311                           ; BSR set to: 4
 27312                           ;usb_device.c: 2863: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATE
      +                          D,p,sizeof(p));
 27313  006530  0E00               	movlw	0
 27314  006532  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 27315  006534  0E05               	movlw	5
 27316  006536  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 27317  006538  C01A  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27318  00653C  C01B  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27319  006540  0E00               	movlw	0
 27320  006542  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 27321  006544  0E02               	movlw	2
 27322  006546  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 27323  006548  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27324                           
 27325                           ;usb_device.c: 2864: }
 27326  00654C  EFAE  F032         	goto	l10301
 27327  006550                     l10299:
 27328                           
 27329                           ; BSR set to: 4
 27330                           ;usb_device.c: 2865: else;usb_device.c: 2866: {;usb_device.c: 2868: p->STAT.Val |= 0x40;
 27331  006550  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27332  006554  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27333  006558  0E00               	movlw	0
 27334  00655A  8CDB               	bsf	plusw2,6,c
 27335  00655C                     l10301:
 27336                           
 27337                           ;usb_device.c: 2869: };usb_device.c: 2873: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 27338  00655C  0E04               	movlw	4
 27339  00655E  181A               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 27340  006560  6E1A               	movwf	USBStdFeatureReqHandler@p^0,c
 27341  006562  501B               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27342  006564  6E1B               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27343  006566                     
 27344                           ;usb_device.c: 2879: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27345  006566  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,1,c
 27346  006568  EFB8  F032         	goto	u9901
 27347  00656C  EFBA  F032         	goto	u9900
 27348  006570                     u9901:
 27349  006570  EFC5  F032         	goto	l590
 27350  006574                     u9900:
 27351  006574  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27352  006578  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27353  00657C  AEDF               	btfss	indf2,7,c
 27354  00657E  EFC3  F032         	goto	u9911
 27355  006582  EFC5  F032         	goto	u9910
 27356  006586                     u9911:
 27357  006586  EFFD  F032         	goto	l10315
 27358  00658A                     u9910:
 27359  00658A                     l590:
 27360                           
 27361                           ;usb_device.c: 2880: {;usb_device.c: 2881: if(SetupPkt.EPDir == 0)
 27362  00658A  0104               	movlb	4	; () banked
 27363  00658C  BF34               	btfsc	52,7,b	;volatile
 27364  00658E  EFCB  F032         	goto	u9921
 27365  006592  EFCD  F032         	goto	u9920
 27366  006596                     u9921:
 27367  006596  EFDB  F032         	goto	l10309
 27368  00659A                     u9920:
 27369  00659A                     
 27370                           ; BSR set to: 4
 27371                           ;usb_device.c: 2882: {;usb_device.c: 2883: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 27372  00659A  5134               	movf	52,w,b	;volatile
 27373  00659C  0B0F               	andlw	15
 27374  00659E  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27375  0065A0  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27376  0065A2  0E7A               	movlw	low _ep_data_out
 27377  0065A4  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27378  0065A6  6ED9               	movwf	fsr2l,c
 27379  0065A8  0E01               	movlw	high _ep_data_out
 27380  0065AA  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27381  0065AC  6EDA               	movwf	fsr2h,c
 27382  0065AE  0101               	movlb	1	; () banked
 27383  0065B0  92DF               	bcf	indf2,1,c
 27384                           
 27385                           ;usb_device.c: 2884: }
 27386  0065B2  EFE7  F032         	goto	l10311
 27387  0065B6                     l10309:
 27388                           
 27389                           ; BSR set to: 4
 27390                           ;usb_device.c: 2885: else;usb_device.c: 2886: {;usb_device.c: 2887: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 27391  0065B6  5134               	movf	52,w,b	;volatile
 27392  0065B8  0B0F               	andlw	15
 27393  0065BA  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27394  0065BC  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27395  0065BE  0E7D               	movlw	low _ep_data_in
 27396  0065C0  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27397  0065C2  6ED9               	movwf	fsr2l,c
 27398  0065C4  0E01               	movlw	high _ep_data_in
 27399  0065C6  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27400  0065C8  6EDA               	movwf	fsr2h,c
 27401  0065CA  0101               	movlb	1	; () banked
 27402  0065CC  92DF               	bcf	indf2,1,c
 27403  0065CE                     l10311:
 27404                           
 27405                           ; BSR set to: 1
 27406                           ;usb_device.c: 2888: };usb_device.c: 2890: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27407  0065CE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27408  0065D2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27409  0065D6  0E3B               	movlw	59
 27410  0065D8  16DF               	andwf	indf2,f,c
 27411  0065DA                     
 27412                           ; BSR set to: 1
 27413                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATE
      +                          D,p,sizeof(p));
 27414  0065DA  0E00               	movlw	0
 27415  0065DC  6E0E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 27416  0065DE  0E05               	movlw	5
 27417  0065E0  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 27418  0065E2  C01A  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27419  0065E6  C01B  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27420  0065EA  0E00               	movlw	0
 27421  0065EC  6E12               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 27422  0065EE  0E02               	movlw	2
 27423  0065F0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 27424  0065F2  ECF7  F05B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27425                           
 27426                           ;usb_device.c: 2894: }
 27427  0065F6  EF03  F033         	goto	l10317
 27428  0065FA                     l10315:
 27429                           
 27430                           ;usb_device.c: 2895: else;usb_device.c: 2896: {;usb_device.c: 2898: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 27431  0065FA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27432  0065FE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27433  006602  0E3B               	movlw	59
 27434  006604  16DF               	andwf	indf2,f,c
 27435  006606                     l10317:
 27436                           
 27437                           ;usb_device.c: 2899: };usb_device.c: 2946: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 27438  006606  0104               	movlb	4	; () banked
 27439  006608  5134               	movf	52,w,b	;volatile
 27440  00660A  0B0F               	andlw	15
 27441  00660C  6E15               	movwf	??_USBStdFeatureReqHandler^0,c
 27442  00660E  6A16               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27443  006610  0E26               	movlw	38
 27444  006612  2415               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27445  006614  6E17               	movwf	USBStdFeatureReqHandler@pUEP^0,c
 27446  006616  0E0F               	movlw	15
 27447  006618  2016               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27448  00661A  6E18               	movwf	(USBStdFeatureReqHandler@pUEP+1)^0,c
 27449  00661C                     
 27450                           ; BSR set to: 4
 27451                           ;usb_device.c: 2950: *pUEP &= ~0x0001;
 27452  00661C  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27453  006620  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27454  006624  0EFE               	movlw	254
 27455  006626  16DF               	andwf	indf2,f,c
 27456  006628                     l594:
 27457  006628  0012               	return		;funcret
 27458  00662A                     __end_of_USBStdFeatureReqHandler:
 27459                           	callstack 0
 27460                           
 27461 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27462 ;; Defined at:
 27463 ;;		line 50 in file "usb_events.c"
 27464 ;; Parameters:    Size  Location     Type
 27465 ;;  event           2   12[COMRAM] enum E5233
 27466 ;;  pdata           2   14[COMRAM] PTR void 
 27467 ;;		 -> RAM(3775), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 27468 ;;		 -> NULL(0), 
 27469 ;;  size            2   16[COMRAM] unsigned int 
 27470 ;; Auto vars:     Size  Location     Type
 27471 ;;		None
 27472 ;; Return value:  Size  Location     Type
 27473 ;;                  1    wreg      unsigned char 
 27474 ;; Registers used:
 27475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27476 ;; Tracked objects:
 27477 ;;		On entry : 0/0
 27478 ;;		On exit  : 0/0
 27479 ;;		Unchanged: 0/0
 27480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27481 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27484 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27485 ;;Total ram usage:        8 bytes
 27486 ;; Hardware stack levels used: 1
 27487 ;; Hardware stack levels required when called: 4
 27488 ;; This function calls:
 27489 ;;		_CDCInitEP
 27490 ;;		_SYSTEM_Initialize
 27491 ;;		_USBCheckCDCRequest
 27492 ;;		_app_usb_init
 27493 ;; This function is called by:
 27494 ;;		_USBDeviceTasks
 27495 ;;		_USBStdSetCfgHandler
 27496 ;;		_USBSuspend
 27497 ;;		_USBWakeFromSuspend
 27498 ;;		_USBCtrlTrfSetupHandler
 27499 ;;		_USBCheckStdRequest
 27500 ;;		_USBStdFeatureReqHandler
 27501 ;; This function uses a non-reentrant model
 27502 ;;
 27503                           
 27504                           	psect	text128
 27505  00B7EE                     __ptext128:
 27506                           	callstack 0
 27507  00B7EE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27508                           	callstack 25
 27509  00B7EE                     
 27510                           ;usb_events.c: 52: switch( (int) event )
 27511  00B7EE  EF0D  F05C         	goto	l9369
 27512  00B7F2                     l9357:
 27513                           
 27514                           ;usb_events.c: 71: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 27515  00B7F2  0E01               	movlw	1
 27516  00B7F4  EC20  F060         	call	_SYSTEM_Initialize
 27517                           
 27518                           ;usb_events.c: 72: break;
 27519  00B7F8  EF46  F05C         	goto	l2153
 27520  00B7FC                     l9359:
 27521                           
 27522                           ;usb_events.c: 81: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 27523  00B7FC  0E02               	movlw	2
 27524  00B7FE  EC20  F060         	call	_SYSTEM_Initialize
 27525                           
 27526                           ;usb_events.c: 82: break;
 27527  00B802  EF46  F05C         	goto	l2153
 27528  00B806                     l9361:
 27529                           
 27530                           ;usb_events.c: 87: CDCInitEP();
 27531  00B806  EC89  F062         	call	_CDCInitEP	;wreg free
 27532  00B80A                     
 27533                           ;usb_events.c: 88: app_usb_init();
 27534  00B80A  ECA3  F06A         	call	_app_usb_init	;wreg free
 27535                           
 27536                           ;usb_events.c: 89: break;
 27537  00B80E  EF46  F05C         	goto	l2153
 27538  00B812                     l9365:
 27539                           
 27540                           ;usb_events.c: 97: USBCheckCDCRequest();
 27541  00B812  EC6E  F052         	call	_USBCheckCDCRequest	;wreg free
 27542                           
 27543                           ;usb_events.c: 98: break;
 27544  00B816  EF46  F05C         	goto	l2153
 27545  00B81A                     l9369:
 27546  00B81A  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27547  00B81E  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27548                           
 27549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 27550                           ; Switch size 1, requested type "simple"
 27551                           ; Number of cases is 2, Range of values is 0 to 127
 27552                           ; switch strategies available:
 27553                           ; Name         Instructions Cycles
 27554                           ; simple_byte            7     4 (average)
 27555                           ;	Chosen strategy is simple_byte
 27556  00B822  5014               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)^0,w,c
 27557  00B824  0A00               	xorlw	0	; case 0
 27558  00B826  B4D8               	btfsc	status,2,c
 27559  00B828  EF1C  F05C         	goto	l20009
 27560  00B82C  0A7F               	xorlw	127	; case 127
 27561  00B82E  B4D8               	btfsc	status,2,c
 27562  00B830  EF3F  F05C         	goto	l20011
 27563  00B834  EF46  F05C         	goto	l2153
 27564  00B838                     l20009:
 27565                           
 27566                           ; Switch size 1, requested type "simple"
 27567                           ; Number of cases is 8, Range of values is 1 to 117
 27568                           ; switch strategies available:
 27569                           ; Name         Instructions Cycles
 27570                           ; simple_byte           25    13 (average)
 27571                           ;	Chosen strategy is simple_byte
 27572  00B838  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 27573  00B83A  0A01               	xorlw	1	; case 1
 27574  00B83C  B4D8               	btfsc	status,2,c
 27575  00B83E  EF03  F05C         	goto	l9361
 27576  00B842  0A03               	xorlw	3	; case 2
 27577  00B844  B4D8               	btfsc	status,2,c
 27578  00B846  EF46  F05C         	goto	l2153
 27579  00B84A  0A01               	xorlw	1	; case 3
 27580  00B84C  B4D8               	btfsc	status,2,c
 27581  00B84E  EF09  F05C         	goto	l9365
 27582  00B852  0A06               	xorlw	6	; case 5
 27583  00B854  B4D8               	btfsc	status,2,c
 27584  00B856  EF46  F05C         	goto	l2153
 27585  00B85A  0A77               	xorlw	119	; case 114
 27586  00B85C  B4D8               	btfsc	status,2,c
 27587  00B85E  EF46  F05C         	goto	l2153
 27588  00B862  0A01               	xorlw	1	; case 115
 27589  00B864  B4D8               	btfsc	status,2,c
 27590  00B866  EF46  F05C         	goto	l2153
 27591  00B86A  0A07               	xorlw	7	; case 116
 27592  00B86C  B4D8               	btfsc	status,2,c
 27593  00B86E  EFFE  F05B         	goto	l9359
 27594  00B872  0A01               	xorlw	1	; case 117
 27595  00B874  B4D8               	btfsc	status,2,c
 27596  00B876  EFF9  F05B         	goto	l9357
 27597  00B87A  EF46  F05C         	goto	l2153
 27598  00B87E                     l20011:
 27599                           
 27600                           ; Switch size 1, requested type "simple"
 27601                           ; Number of cases is 1, Range of values is 255 to 255
 27602                           ; switch strategies available:
 27603                           ; Name         Instructions Cycles
 27604                           ; simple_byte            4     3 (average)
 27605                           ;	Chosen strategy is simple_byte
 27606  00B87E  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 27607  00B880  0AFF               	xorlw	255	; case 255
 27608  00B882  B4D8               	btfsc	status,2,c
 27609  00B884  EF46  F05C         	goto	l2153
 27610  00B888  EF46  F05C         	goto	l2153
 27611  00B88C                     l2153:
 27612  00B88C  0012               	return		;funcret
 27613  00B88E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27614                           	callstack 0
 27615                           
 27616 ;; *************** function _app_usb_init *****************
 27617 ;; Defined at:
 27618 ;;		line 50 in file "app_usb_cdc.c"
 27619 ;; Parameters:    Size  Location     Type
 27620 ;;		None
 27621 ;; Auto vars:     Size  Location     Type
 27622 ;;		None
 27623 ;; Return value:  Size  Location     Type
 27624 ;;                  1    wreg      void 
 27625 ;; Registers used:
 27626 ;;		wreg, status,2
 27627 ;; Tracked objects:
 27628 ;;		On entry : 0/0
 27629 ;;		On exit  : 0/0
 27630 ;;		Unchanged: 0/0
 27631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27636 ;;Total ram usage:        0 bytes
 27637 ;; Hardware stack levels used: 1
 27638 ;; Hardware stack levels required when called: 1
 27639 ;; This function calls:
 27640 ;;		Nothing
 27641 ;; This function is called by:
 27642 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27643 ;; This function uses a non-reentrant model
 27644 ;;
 27645                           
 27646                           	psect	text129
 27647  00D546                     __ptext129:
 27648                           	callstack 0
 27649  00D546                     _app_usb_init:
 27650                           	callstack 27
 27651  00D546                     
 27652                           ;app_usb_cdc.c: 52: line_coding.bCharFormat = 0;
 27653  00D546  0E00               	movlw	0
 27654  00D548  0101               	movlb	1	; () banked
 27655  00D54A  6FF5               	movwf	(_line_coding+4)& (0+255),b
 27656                           
 27657                           ;app_usb_cdc.c: 53: line_coding.bDataBits = 8;
 27658  00D54C  0E08               	movlw	8
 27659  00D54E  6FF7               	movwf	(_line_coding+6)& (0+255),b
 27660                           
 27661                           ;app_usb_cdc.c: 54: line_coding.bParityType = 0;
 27662  00D550  0E00               	movlw	0
 27663  00D552  6FF6               	movwf	(_line_coding+5)& (0+255),b
 27664                           
 27665                           ;app_usb_cdc.c: 55: line_coding.dwDTERate = 19200;
 27666  00D554  0E00               	movlw	0
 27667  00D556  6FF1               	movwf	_line_coding& (0+255),b
 27668  00D558  0E4B               	movlw	75
 27669  00D55A  6FF2               	movwf	(_line_coding+1)& (0+255),b
 27670  00D55C  0E00               	movlw	0
 27671  00D55E  6FF3               	movwf	(_line_coding+2)& (0+255),b
 27672  00D560  0E00               	movlw	0
 27673  00D562  6FF4               	movwf	(_line_coding+3)& (0+255),b
 27674  00D564                     
 27675                           ; BSR set to: 1
 27676  00D564  0012               	return		;funcret
 27677  00D566                     __end_of_app_usb_init:
 27678                           	callstack 0
 27679                           
 27680 ;; *************** function _USBCheckCDCRequest *****************
 27681 ;; Defined at:
 27682 ;;		line 148 in file "usb/usb_device_cdc.c"
 27683 ;; Parameters:    Size  Location     Type
 27684 ;;		None
 27685 ;; Auto vars:     Size  Location     Type
 27686 ;;		None
 27687 ;; Return value:  Size  Location     Type
 27688 ;;                  1    wreg      void 
 27689 ;; Registers used:
 27690 ;;		wreg, status,2, status,0
 27691 ;; Tracked objects:
 27692 ;;		On entry : 0/0
 27693 ;;		On exit  : 0/0
 27694 ;;		Unchanged: 0/0
 27695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27700 ;;Total ram usage:        0 bytes
 27701 ;; Hardware stack levels used: 1
 27702 ;; Hardware stack levels required when called: 1
 27703 ;; This function calls:
 27704 ;;		Nothing
 27705 ;; This function is called by:
 27706 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27707 ;; This function uses a non-reentrant model
 27708 ;;
 27709                           
 27710                           	psect	text130
 27711  00A4DC                     __ptext130:
 27712                           	callstack 0
 27713  00A4DC                     _USBCheckCDCRequest:
 27714                           	callstack 27
 27715  00A4DC                     
 27716                           ;usb_device_cdc.c: 153: if(SetupPkt.Recipient != (0x01)) return;
 27717  00A4DC  0104               	movlb	4	; () banked
 27718  00A4DE  5130               	movf	48,w,b	;volatile
 27719  00A4E0  0B1F               	andlw	31
 27720  00A4E2  06E8               	decf	wreg,f,c
 27721  00A4E4  B4D8               	btfsc	status,2,c
 27722  00A4E6  EF77  F052         	goto	u7881
 27723  00A4EA  EF79  F052         	goto	u7880
 27724  00A4EE                     u7881:
 27725  00A4EE  EF7B  F052         	goto	l9053
 27726  00A4F2                     u7880:
 27727  00A4F2  EFE8  F052         	goto	l646
 27728  00A4F6                     l9053:
 27729                           
 27730                           ; BSR set to: 4
 27731                           ;usb_device_cdc.c: 158: if(SetupPkt.RequestType != (0x20>>5)) return;
 27732  00A4F6  3930               	swapf	48,w,b	;volatile
 27733  00A4F8  32E8               	rrcf	wreg,f,c
 27734  00A4FA  0B03               	andlw	3
 27735  00A4FC  06E8               	decf	wreg,f,c
 27736  00A4FE  B4D8               	btfsc	status,2,c
 27737  00A500  EF84  F052         	goto	u7891
 27738  00A504  EF86  F052         	goto	u7890
 27739  00A508                     u7891:
 27740  00A508  EF88  F052         	goto	l9057
 27741  00A50C                     u7890:
 27742  00A50C  EFE8  F052         	goto	l646
 27743  00A510                     l9057:
 27744                           
 27745                           ; BSR set to: 4
 27746                           ;usb_device_cdc.c: 164: if((SetupPkt.bIntfID != 0x0)&&;usb_device_cdc.c: 165: (SetupPkt.
      +                          bIntfID != 0x01)) return;
 27747  00A510  5134               	movf	52,w,b	;volatile
 27748  00A512  B4D8               	btfsc	status,2,c
 27749  00A514  EF8E  F052         	goto	u7901
 27750  00A518  EF90  F052         	goto	u7900
 27751  00A51C                     u7901:
 27752  00A51C  EFD1  F052         	goto	l9087
 27753  00A520                     u7900:
 27754  00A520                     
 27755                           ; BSR set to: 4
 27756  00A520  0534               	decf	52,w,b	;volatile
 27757  00A522  B4D8               	btfsc	status,2,c
 27758  00A524  EF96  F052         	goto	u7911
 27759  00A528  EF98  F052         	goto	u7910
 27760  00A52C                     u7911:
 27761  00A52C  EFD1  F052         	goto	l9087
 27762  00A530                     u7910:
 27763  00A530  EFE8  F052         	goto	l646
 27764  00A534                     l9063:
 27765                           
 27766                           ; BSR set to: 4
 27767                           ;usb_device_cdc.c: 172: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27768  00A534  0EF7               	movlw	low _dummy_encapsulated_cmd_response
 27769  00A536  0100               	movlb	0	; () banked
 27770  00A538  6FB4               	movwf	_inPipes& (0+255),b
 27771  00A53A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27772  00A53C  6FB5               	movwf	(_inPipes+1)& (0+255),b
 27773  00A53E                     
 27774                           ; BSR set to: 0
 27775                           ;usb_device_cdc.c: 173: inPipes[0].wCount.Val = 0x08;
 27776  00A53E  0E00               	movlw	0
 27777  00A540  6FB9               	movwf	(_inPipes+5)& (0+255),b
 27778  00A542  0E08               	movlw	8
 27779  00A544  6FB8               	movwf	(_inPipes+4)& (0+255),b
 27780  00A546                     
 27781                           ; BSR set to: 0
 27782                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27783  00A546  81B7               	bsf	(_inPipes+3)& (0+255),0,b
 27784  00A548                     l9069:
 27785                           
 27786                           ; BSR set to: 0
 27787                           ;usb_device_cdc.c: 175: inPipes[0].info.bits.busy = 1;
 27788  00A548  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 27789                           
 27790                           ;usb_device_cdc.c: 176: break;
 27791  00A54A  EFE8  F052         	goto	l646
 27792  00A54E                     l9071:
 27793                           
 27794                           ; BSR set to: 4
 27795                           ;usb_device_cdc.c: 179: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27796  00A54E  0EF7               	movlw	low _dummy_encapsulated_cmd_response
 27797  00A550  0100               	movlb	0	; () banked
 27798  00A552  6FB4               	movwf	_inPipes& (0+255),b
 27799  00A554  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27800  00A556  6FB5               	movwf	(_inPipes+1)& (0+255),b
 27801  00A558  EFA4  F052         	goto	l9069
 27802  00A55C                     l653:
 27803                           
 27804                           ; BSR set to: 4
 27805                           ;usb_device_cdc.c: 186: outPipes[0].wCount.Val = SetupPkt.wLength;
 27806  00A55C  C436 F13C          	movff	1078,_outPipes+4	;volatile
 27807  00A560  C437 F13D          	movff	1079,_outPipes+5	;volatile
 27808  00A564                     
 27809                           ; BSR set to: 4
 27810                           ;usb_device_cdc.c: 187: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27811  00A564  0EF1               	movlw	low _line_coding
 27812  00A566  0101               	movlb	1	; () banked
 27813  00A568  6F38               	movwf	_outPipes& (0+255),b
 27814  00A56A  0E01               	movlw	high _line_coding
 27815  00A56C  6F39               	movwf	(_outPipes+1)& (0+255),b
 27816                           
 27817                           ;usb_device_cdc.c: 188: outPipes[0].pFunc = (0);
 27818  00A56E  0E00               	movlw	0
 27819  00A570  6F3E               	movwf	(_outPipes+6)& (0+255),b
 27820  00A572  0E00               	movlw	0
 27821  00A574  6F3F               	movwf	(_outPipes+7)& (0+255),b
 27822  00A576                     
 27823                           ; BSR set to: 1
 27824                           ;usb_device_cdc.c: 189: outPipes[0].info.bits.busy = 1;
 27825  00A576  8F3B               	bsf	(_outPipes+3)& (0+255),7,b
 27826                           
 27827                           ;usb_device_cdc.c: 190: break;
 27828  00A578  EFE8  F052         	goto	l646
 27829  00A57C                     l9079:
 27830                           
 27831                           ; BSR set to: 4
 27832                           ;usb_device_cdc.c: 193: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27833  00A57C  0EF1               	movlw	low _line_coding
 27834  00A57E  0100               	movlb	0	; () banked
 27835  00A580  6FB4               	movwf	_inPipes& (0+255),b
 27836  00A582  0E01               	movlw	high _line_coding
 27837  00A584  6FB5               	movwf	(_inPipes+1)& (0+255),b
 27838  00A586                     
 27839                           ; BSR set to: 0
 27840  00A586  0E00               	movlw	0
 27841  00A588  6FB9               	movwf	(_inPipes+5)& (0+255),b
 27842  00A58A  0E07               	movlw	7
 27843  00A58C  6FB8               	movwf	(_inPipes+4)& (0+255),b
 27844  00A58E                     
 27845                           ; BSR set to: 0
 27846  00A58E  0EC1               	movlw	193
 27847  00A590  6FB7               	movwf	(_inPipes+3)& (0+255),b
 27848                           
 27849                           ;usb_device_cdc.c: 197: break;
 27850  00A592  EFE8  F052         	goto	l646
 27851  00A596                     l655:
 27852                           
 27853                           ; BSR set to: 4
 27854                           ;usb_device_cdc.c: 200: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27855  00A596  C432 F18D          	movff	1074,_control_signal_bitmap	;volatile
 27856                           
 27857                           ;usb_device_cdc.c: 232: inPipes[0].info.bits.busy = 1;
 27858  00A59A  0100               	movlb	0	; () banked
 27859  00A59C  8FB7               	bsf	(_inPipes+3)& (0+255),7,b
 27860                           
 27861                           ;usb_device_cdc.c: 233: break;
 27862  00A59E  EFE8  F052         	goto	l646
 27863  00A5A2                     l9087:
 27864                           
 27865                           ; BSR set to: 4
 27866  00A5A2  5131               	movf	49,w,b	;volatile
 27867                           
 27868                           ; Switch size 1, requested type "simple"
 27869                           ; Number of cases is 5, Range of values is 0 to 34
 27870                           ; switch strategies available:
 27871                           ; Name         Instructions Cycles
 27872                           ; simple_byte           16     9 (average)
 27873                           ;	Chosen strategy is simple_byte
 27874  00A5A4  0A00               	xorlw	0	; case 0
 27875  00A5A6  B4D8               	btfsc	status,2,c
 27876  00A5A8  EF9A  F052         	goto	l9063
 27877  00A5AC  0A01               	xorlw	1	; case 1
 27878  00A5AE  B4D8               	btfsc	status,2,c
 27879  00A5B0  EFA7  F052         	goto	l9071
 27880  00A5B4  0A21               	xorlw	33	; case 32
 27881  00A5B6  B4D8               	btfsc	status,2,c
 27882  00A5B8  EFAE  F052         	goto	l653
 27883  00A5BC  0A01               	xorlw	1	; case 33
 27884  00A5BE  B4D8               	btfsc	status,2,c
 27885  00A5C0  EFBE  F052         	goto	l9079
 27886  00A5C4  0A03               	xorlw	3	; case 34
 27887  00A5C6  B4D8               	btfsc	status,2,c
 27888  00A5C8  EFCB  F052         	goto	l655
 27889  00A5CC  EFE8  F052         	goto	l646
 27890  00A5D0                     l646:
 27891  00A5D0  0012               	return		;funcret
 27892  00A5D2                     __end_of_USBCheckCDCRequest:
 27893                           	callstack 0
 27894                           
 27895 ;; *************** function _SYSTEM_Initialize *****************
 27896 ;; Defined at:
 27897 ;;		line 72 in file "system.c"
 27898 ;; Parameters:    Size  Location     Type
 27899 ;;  state           1    wreg     enum E5194
 27900 ;; Auto vars:     Size  Location     Type
 27901 ;;  state           1    4[COMRAM] enum E5194
 27902 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 27903 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 27904 ;; Return value:  Size  Location     Type
 27905 ;;                  1    wreg      void 
 27906 ;; Registers used:
 27907 ;;		wreg, status,2, status,0
 27908 ;; Tracked objects:
 27909 ;;		On entry : 0/0
 27910 ;;		On exit  : 0/0
 27911 ;;		Unchanged: 0/0
 27912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27914 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27916 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27917 ;;Total ram usage:        5 bytes
 27918 ;; Hardware stack levels used: 1
 27919 ;; Hardware stack levels required when called: 1
 27920 ;; This function calls:
 27921 ;;		Nothing
 27922 ;; This function is called by:
 27923 ;;		_main
 27924 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27925 ;; This function uses a non-reentrant model
 27926 ;;
 27927                           
 27928                           	psect	text131
 27929  00C040                     __ptext131:
 27930                           	callstack 0
 27931  00C040                     _SYSTEM_Initialize:
 27932                           	callstack 27
 27933                           
 27934                           ;incstack = 0
 27935                           ;SYSTEM_Initialize@state stored from wreg
 27936  00C040  6E05               	movwf	SYSTEM_Initialize@state^0,c
 27937  00C042                     
 27938                           ;system.c: 74: switch(state)
 27939  00C042  EF4C  F060         	goto	l9187
 27940  00C046                     l9175:
 27941                           
 27942                           ;system.c: 83: {;system.c: 84: unsigned int pll_startup_counter = 600;
 27943  00C046  0E02               	movlw	2
 27944  00C048  6E02               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)^0,c
 27945  00C04A  0E58               	movlw	88
 27946  00C04C  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter^0,c
 27947  00C04E                     
 27948                           ;system.c: 85: OSCTUNEbits.PLLEN = 1;
 27949  00C04E  8C9B               	bsf	155,6,c	;volatile
 27950  00C050                     l9179:
 27951  00C050  0601               	decf	SYSTEM_Initialize@pll_startup_counter^0,f,c
 27952  00C052  A0D8               	btfss	status,0,c
 27953  00C054  0602               	decf	(SYSTEM_Initialize@pll_startup_counter+1)^0,f,c
 27954  00C056  2801               	incf	SYSTEM_Initialize@pll_startup_counter^0,w,c
 27955  00C058  E106               	bnz	u8011
 27956  00C05A  2802               	incf	(SYSTEM_Initialize@pll_startup_counter+1)^0,w,c
 27957  00C05C  A4D8               	btfss	status,2,c
 27958  00C05E  EF33  F060         	goto	u8011
 27959  00C062  EF35  F060         	goto	u8010
 27960  00C066                     u8011:
 27961  00C066  EF28  F060         	goto	l9179
 27962  00C06A                     u8010:
 27963  00C06A  EF5B  F060         	goto	l2089
 27964  00C06E                     l9181:
 27965                           
 27966                           ;system.c: 108: OSCCON = 0x70;
 27967  00C06E  0E70               	movlw	112
 27968  00C070  6ED3               	movwf	211,c	;volatile
 27969                           
 27970                           ;system.c: 114: {;system.c: 115: unsigned int pll_startup_counter = 800;
 27971  00C072  0E03               	movlw	3
 27972  00C074  6E04               	movwf	(SYSTEM_Initialize@pll_startup_counter_5257+1)^0,c
 27973  00C076  0E20               	movlw	32
 27974  00C078  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_5257^0,c
 27975  00C07A                     l9183:
 27976  00C07A  0603               	decf	SYSTEM_Initialize@pll_startup_counter_5257^0,f,c
 27977  00C07C  A0D8               	btfss	status,0,c
 27978  00C07E  0604               	decf	(SYSTEM_Initialize@pll_startup_counter_5257+1)^0,f,c
 27979  00C080  2803               	incf	SYSTEM_Initialize@pll_startup_counter_5257^0,w,c
 27980  00C082  E106               	bnz	u8021
 27981  00C084  2804               	incf	(SYSTEM_Initialize@pll_startup_counter_5257+1)^0,w,c
 27982  00C086  A4D8               	btfss	status,2,c
 27983  00C088  EF48  F060         	goto	u8021
 27984  00C08C  EF4A  F060         	goto	u8020
 27985  00C090                     u8021:
 27986  00C090  EF3D  F060         	goto	l9183
 27987  00C094                     u8020:
 27988  00C094  EF5B  F060         	goto	l2089
 27989  00C098                     l9187:
 27990  00C098  5005               	movf	SYSTEM_Initialize@state^0,w,c
 27991                           
 27992                           ; Switch size 1, requested type "simple"
 27993                           ; Number of cases is 3, Range of values is 0 to 2
 27994                           ; switch strategies available:
 27995                           ; Name         Instructions Cycles
 27996                           ; simple_byte           10     6 (average)
 27997                           ;	Chosen strategy is simple_byte
 27998  00C09A  0A00               	xorlw	0	; case 0
 27999  00C09C  B4D8               	btfsc	status,2,c
 28000  00C09E  EF23  F060         	goto	l9175
 28001  00C0A2  0A01               	xorlw	1	; case 1
 28002  00C0A4  B4D8               	btfsc	status,2,c
 28003  00C0A6  EF5B  F060         	goto	l2089
 28004  00C0AA  0A03               	xorlw	3	; case 2
 28005  00C0AC  B4D8               	btfsc	status,2,c
 28006  00C0AE  EF37  F060         	goto	l9181
 28007  00C0B2  EF5B  F060         	goto	l2089
 28008  00C0B6                     l2089:
 28009  00C0B6  0012               	return		;funcret
 28010  00C0B8                     __end_of_SYSTEM_Initialize:
 28011                           	callstack 0
 28012                           
 28013 ;; *************** function _CDCInitEP *****************
 28014 ;; Defined at:
 28015 ;;		line 295 in file "usb/usb_device_cdc.c"
 28016 ;; Parameters:    Size  Location     Type
 28017 ;;		None
 28018 ;; Auto vars:     Size  Location     Type
 28019 ;;		None
 28020 ;; Return value:  Size  Location     Type
 28021 ;;                  1    wreg      void 
 28022 ;; Registers used:
 28023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28024 ;; Tracked objects:
 28025 ;;		On entry : 0/0
 28026 ;;		On exit  : 0/0
 28027 ;;		Unchanged: 0/0
 28028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28033 ;;Total ram usage:        0 bytes
 28034 ;; Hardware stack levels used: 1
 28035 ;; Hardware stack levels required when called: 3
 28036 ;; This function calls:
 28037 ;;		_USBEnableEndpoint
 28038 ;;		_USBTransferOnePacket
 28039 ;; This function is called by:
 28040 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28041 ;; This function uses a non-reentrant model
 28042 ;;
 28043                           
 28044                           	psect	text132
 28045  00C512                     __ptext132:
 28046                           	callstack 0
 28047  00C512                     _CDCInitEP:
 28048                           	callstack 25
 28049  00C512                     
 28050                           ;usb_device_cdc.c: 298: line_coding.dwDTERate = 19200;
 28051  00C512  0E00               	movlw	0
 28052  00C514  0101               	movlb	1	; () banked
 28053  00C516  6FF1               	movwf	_line_coding& (0+255),b
 28054  00C518  0E4B               	movlw	75
 28055  00C51A  6FF2               	movwf	(_line_coding+1)& (0+255),b
 28056  00C51C  0E00               	movlw	0
 28057  00C51E  6FF3               	movwf	(_line_coding+2)& (0+255),b
 28058  00C520  0E00               	movlw	0
 28059  00C522  6FF4               	movwf	(_line_coding+3)& (0+255),b
 28060                           
 28061                           ;usb_device_cdc.c: 299: line_coding.bCharFormat = 0x00;
 28062  00C524  0E00               	movlw	0
 28063  00C526  6FF5               	movwf	(_line_coding+4)& (0+255),b
 28064                           
 28065                           ;usb_device_cdc.c: 300: line_coding.bParityType = 0x00;
 28066  00C528  0E00               	movlw	0
 28067  00C52A  6FF6               	movwf	(_line_coding+5)& (0+255),b
 28068                           
 28069                           ;usb_device_cdc.c: 301: line_coding.bDataBits = 0x08;
 28070  00C52C  0E08               	movlw	8
 28071  00C52E  6FF7               	movwf	(_line_coding+6)& (0+255),b
 28072                           
 28073                           ;usb_device_cdc.c: 303: cdc_rx_len = 0;
 28074  00C530  0E00               	movlw	0
 28075  00C532  0100               	movlb	0	; () banked
 28076  00C534  6FD5               	movwf	_cdc_rx_len& (0+255),b
 28077  00C536                     
 28078                           ; BSR set to: 0
 28079                           ;usb_device_cdc.c: 316: USBEnableEndpoint(1,0x02|0x10|0x08);
 28080  00C536  0E1A               	movlw	26
 28081  00C538  6E09               	movwf	USBEnableEndpoint@options^0,c
 28082  00C53A  0E01               	movlw	1
 28083  00C53C  EC74  F066         	call	_USBEnableEndpoint
 28084  00C540                     
 28085                           ;usb_device_cdc.c: 317: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28086  00C540  0E1E               	movlw	30
 28087  00C542  6E09               	movwf	USBEnableEndpoint@options^0,c
 28088  00C544  0E02               	movlw	2
 28089  00C546  EC74  F066         	call	_USBEnableEndpoint
 28090  00C54A                     
 28091                           ;usb_device_cdc.c: 319: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28092  00C54A  0E00               	movlw	0
 28093  00C54C  6E01               	movwf	USBTransferOnePacket@dir^0,c
 28094  00C54E  0EB7               	movlw	low _cdc_data_rx
 28095  00C550  6E02               	movwf	USBTransferOnePacket@data^0,c
 28096  00C552  0E02               	movlw	high _cdc_data_rx
 28097  00C554  6E03               	movwf	(USBTransferOnePacket@data+1)^0,c
 28098  00C556  0E40               	movlw	64
 28099  00C558  6E04               	movwf	USBTransferOnePacket@len^0,c
 28100  00C55A  0E02               	movlw	2
 28101  00C55C  EC6A  F04B         	call	_USBTransferOnePacket
 28102  00C560  C001  F0C9         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 28103  00C564  C002  F0CA         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28104  00C568                     
 28105                           ;usb_device_cdc.c: 320: CDCDataInHandle = (0);
 28106  00C568  0E00               	movlw	0
 28107  00C56A  0101               	movlb	1	; () banked
 28108  00C56C  6F88               	movwf	_CDCDataInHandle& (0+255),b
 28109  00C56E  0E00               	movlw	0
 28110  00C570  6F89               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28111  00C572                     
 28112                           ; BSR set to: 1
 28113                           ;usb_device_cdc.c: 347: cdc_trf_state = 0;
 28114  00C572  0E00               	movlw	0
 28115  00C574  0100               	movlb	0	; () banked
 28116  00C576  6FD4               	movwf	_cdc_trf_state& (0+255),b
 28117  00C578                     
 28118                           ; BSR set to: 0
 28119  00C578  0012               	return		;funcret
 28120  00C57A                     __end_of_CDCInitEP:
 28121                           	callstack 0
 28122                           
 28123 ;; *************** function _USBTransferOnePacket *****************
 28124 ;; Defined at:
 28125 ;;		line 999 in file "usb/usb_device.c"
 28126 ;; Parameters:    Size  Location     Type
 28127 ;;  ep              1    wreg     unsigned char 
 28128 ;;  dir             1    0[COMRAM] unsigned char 
 28129 ;;  data            2    1[COMRAM] PTR unsigned char 
 28130 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28131 ;;  len             1    3[COMRAM] unsigned char 
 28132 ;; Auto vars:     Size  Location     Type
 28133 ;;  ep              1    8[COMRAM] unsigned char 
 28134 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 28135 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 28136 ;; Return value:  Size  Location     Type
 28137 ;;                  2    0[COMRAM] PTR void 
 28138 ;; Registers used:
 28139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28140 ;; Tracked objects:
 28141 ;;		On entry : 0/0
 28142 ;;		On exit  : 0/0
 28143 ;;		Unchanged: 0/0
 28144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28146 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28148 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28149 ;;Total ram usage:       11 bytes
 28150 ;; Hardware stack levels used: 1
 28151 ;; Hardware stack levels required when called: 1
 28152 ;; This function calls:
 28153 ;;		Nothing
 28154 ;; This function is called by:
 28155 ;;		_CDCInitEP
 28156 ;;		_getsUSBUSART
 28157 ;;		_CDCTxService
 28158 ;;		_USBCDCEventHandler
 28159 ;; This function uses a non-reentrant model
 28160 ;;
 28161                           
 28162                           	psect	text133
 28163  0096D4                     __ptext133:
 28164                           	callstack 0
 28165  0096D4                     _USBTransferOnePacket:
 28166                           	callstack 27
 28167                           
 28168                           ; BSR set to: 0
 28169                           ;incstack = 0
 28170                           ;USBTransferOnePacket@ep stored from wreg
 28171  0096D4  6E09               	movwf	USBTransferOnePacket@ep^0,c
 28172  0096D6                     
 28173                           ;usb_device.c: 1001: volatile BDT_ENTRY* handle;;usb_device.c: 1004: if(dir != 0)
 28174  0096D6  5001               	movf	USBTransferOnePacket@dir^0,w,c
 28175  0096D8  B4D8               	btfsc	status,2,c
 28176  0096DA  EF71  F04B         	goto	u7671
 28177  0096DE  EF73  F04B         	goto	u7670
 28178  0096E2                     u7671:
 28179  0096E2  EF81  F04B         	goto	l8943
 28180  0096E6                     u7670:
 28181  0096E6                     
 28182                           ;usb_device.c: 1005: {;usb_device.c: 1007: handle = pBDTEntryIn[ep];
 28183  0096E6  5009               	movf	USBTransferOnePacket@ep^0,w,c
 28184  0096E8  0D02               	mullw	2
 28185  0096EA  0EBA               	movlw	low _pBDTEntryIn
 28186  0096EC  24F3               	addwf	243,w,c
 28187  0096EE  6ED9               	movwf	fsr2l,c
 28188  0096F0  0E00               	movlw	high _pBDTEntryIn
 28189  0096F2  20F4               	addwfc	prodh,w,c
 28190  0096F4  6EDA               	movwf	fsr2h,c
 28191  0096F6  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 28192  0096FA  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 28193                           
 28194                           ;usb_device.c: 1008: }
 28195  0096FE  EF8D  F04B         	goto	l8945
 28196  009702                     l8943:
 28197                           
 28198                           ;usb_device.c: 1009: else;usb_device.c: 1010: {;usb_device.c: 1012: handle = pBDTEntryOu
      +                          t[ep];
 28199  009702  5009               	movf	USBTransferOnePacket@ep^0,w,c
 28200  009704  0D02               	mullw	2
 28201  009706  0E46               	movlw	low _pBDTEntryOut
 28202  009708  24F3               	addwf	243,w,c
 28203  00970A  6ED9               	movwf	fsr2l,c
 28204  00970C  0E01               	movlw	high _pBDTEntryOut
 28205  00970E  20F4               	addwfc	prodh,w,c
 28206  009710  6EDA               	movwf	fsr2h,c
 28207  009712  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 28208  009716  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 28209  00971A                     l8945:
 28210                           
 28211                           ;usb_device.c: 1013: };usb_device.c: 1017: if(handle == 0)
 28212  00971A  500A               	movf	USBTransferOnePacket@handle^0,w,c
 28213  00971C  100B               	iorwf	(USBTransferOnePacket@handle+1)^0,w,c
 28214  00971E  A4D8               	btfss	status,2,c
 28215  009720  EF94  F04B         	goto	u7681
 28216  009724  EF96  F04B         	goto	u7680
 28217  009728                     u7681:
 28218  009728  EF9C  F04B         	goto	l8951
 28219  00972C                     u7680:
 28220  00972C                     
 28221                           ;usb_device.c: 1018: {;usb_device.c: 1019: return 0;
 28222  00972C  0E00               	movlw	0
 28223  00972E  6E01               	movwf	?_USBTransferOnePacket^0,c
 28224  009730  0E00               	movlw	0
 28225  009732  6E02               	movwf	(?_USBTransferOnePacket+1)^0,c
 28226  009734  EF08  F04C         	goto	l397
 28227  009738                     l8951:
 28228                           
 28229                           ;usb_device.c: 1020: };usb_device.c: 1033: handle->ADR = ((uint16_t)(data));
 28230  009738  EE20 F002          	lfsr	2,2
 28231  00973C  500A               	movf	USBTransferOnePacket@handle^0,w,c
 28232  00973E  26D9               	addwf	fsr2l,f,c
 28233  009740  500B               	movf	(USBTransferOnePacket@handle+1)^0,w,c
 28234  009742  22DA               	addwfc	fsr2h,f,c
 28235  009744  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 28236  009748  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 28237                           
 28238                           ;usb_device.c: 1034: handle->CNT = len;
 28239  00974C  EE20 F001          	lfsr	2,1
 28240  009750  500A               	movf	USBTransferOnePacket@handle^0,w,c
 28241  009752  26D9               	addwf	fsr2l,f,c
 28242  009754  500B               	movf	(USBTransferOnePacket@handle+1)^0,w,c
 28243  009756  22DA               	addwfc	fsr2h,f,c
 28244  009758  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 28245  00975C                     
 28246                           ;usb_device.c: 1035: handle->STAT.Val &= 0x40;
 28247  00975C  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 28248  009760  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 28249  009764  0E40               	movlw	64
 28250  009766  16DF               	andwf	indf2,f,c
 28251  009768                     
 28252                           ;usb_device.c: 1036: handle->STAT.Val |= (0x08 & 0x08);
 28253  009768  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 28254  00976C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 28255  009770  0E00               	movlw	0
 28256  009772  86DB               	bsf	plusw2,3,c
 28257  009774                     
 28258                           ;usb_device.c: 1037: handle->STAT.Val |= 0x80;
 28259  009774  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 28260  009778  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 28261  00977C  0E00               	movlw	0
 28262  00977E  8EDB               	bsf	plusw2,7,c
 28263  009780                     
 28264                           ;usb_device.c: 1040: if(dir != 0)
 28265  009780  5001               	movf	USBTransferOnePacket@dir^0,w,c
 28266  009782  B4D8               	btfsc	status,2,c
 28267  009784  EFC6  F04B         	goto	u7691
 28268  009788  EFC8  F04B         	goto	u7690
 28269  00978C                     u7691:
 28270  00978C  EFE7  F04B         	goto	l8963
 28271  009790                     u7690:
 28272  009790                     
 28273                           ;usb_device.c: 1041: {;usb_device.c: 1043: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 28274  009790  5009               	movf	USBTransferOnePacket@ep^0,w,c
 28275  009792  0D02               	mullw	2
 28276  009794  0EBA               	movlw	low _pBDTEntryIn
 28277  009796  24F3               	addwf	243,w,c
 28278  009798  6ED9               	movwf	fsr2l,c
 28279  00979A  0E00               	movlw	high _pBDTEntryIn
 28280  00979C  20F4               	addwfc	prodh,w,c
 28281  00979E  6EDA               	movwf	fsr2h,c
 28282  0097A0  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 28283  0097A4  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 28284  0097A8  0E04               	movlw	4
 28285  0097AA  1805               	xorwf	??_USBTransferOnePacket^0,w,c
 28286  0097AC  6E07               	movwf	(??_USBTransferOnePacket+2)^0,c
 28287  0097AE  5006               	movf	(??_USBTransferOnePacket+1)^0,w,c
 28288  0097B0  6E08               	movwf	(??_USBTransferOnePacket+3)^0,c
 28289  0097B2  5009               	movf	USBTransferOnePacket@ep^0,w,c
 28290  0097B4  0D02               	mullw	2
 28291  0097B6  0EBA               	movlw	low _pBDTEntryIn
 28292  0097B8  24F3               	addwf	243,w,c
 28293  0097BA  6ED9               	movwf	fsr2l,c
 28294  0097BC  0E00               	movlw	high _pBDTEntryIn
 28295  0097BE  20F4               	addwfc	prodh,w,c
 28296  0097C0  6EDA               	movwf	fsr2h,c
 28297  0097C2  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 28298  0097C6  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 28299                           
 28300                           ;usb_device.c: 1044: }
 28301  0097CA  EF04  F04C         	goto	l8965
 28302  0097CE                     l8963:
 28303                           
 28304                           ;usb_device.c: 1045: else;usb_device.c: 1046: {;usb_device.c: 1048: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 28305  0097CE  5009               	movf	USBTransferOnePacket@ep^0,w,c
 28306  0097D0  0D02               	mullw	2
 28307  0097D2  0E46               	movlw	low _pBDTEntryOut
 28308  0097D4  24F3               	addwf	243,w,c
 28309  0097D6  6ED9               	movwf	fsr2l,c
 28310  0097D8  0E01               	movlw	high _pBDTEntryOut
 28311  0097DA  20F4               	addwfc	prodh,w,c
 28312  0097DC  6EDA               	movwf	fsr2h,c
 28313  0097DE  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 28314  0097E2  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 28315  0097E6  0E04               	movlw	4
 28316  0097E8  1805               	xorwf	??_USBTransferOnePacket^0,w,c
 28317  0097EA  6E07               	movwf	(??_USBTransferOnePacket+2)^0,c
 28318  0097EC  5006               	movf	(??_USBTransferOnePacket+1)^0,w,c
 28319  0097EE  6E08               	movwf	(??_USBTransferOnePacket+3)^0,c
 28320  0097F0  5009               	movf	USBTransferOnePacket@ep^0,w,c
 28321  0097F2  0D02               	mullw	2
 28322  0097F4  0E46               	movlw	low _pBDTEntryOut
 28323  0097F6  24F3               	addwf	243,w,c
 28324  0097F8  6ED9               	movwf	fsr2l,c
 28325  0097FA  0E01               	movlw	high _pBDTEntryOut
 28326  0097FC  20F4               	addwfc	prodh,w,c
 28327  0097FE  6EDA               	movwf	fsr2h,c
 28328  009800  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 28329  009804  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 28330  009808                     l8965:
 28331                           
 28332                           ;usb_device.c: 1049: };usb_device.c: 1050: return (void*)handle;
 28333  009808  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 28334  00980C  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 28335  009810                     l397:
 28336  009810  0012               	return		;funcret
 28337  009812                     __end_of_USBTransferOnePacket:
 28338                           	callstack 0
 28339                           
 28340 ;; *************** function _USBEnableEndpoint *****************
 28341 ;; Defined at:
 28342 ;;		line 882 in file "usb/usb_device.c"
 28343 ;; Parameters:    Size  Location     Type
 28344 ;;  ep              1    wreg     unsigned char 
 28345 ;;  options         1    8[COMRAM] unsigned char 
 28346 ;; Auto vars:     Size  Location     Type
 28347 ;;  ep              1   11[COMRAM] unsigned char 
 28348 ;;  p               2    9[COMRAM] PTR unsigned char 
 28349 ;;		 -> UEP0(1), 
 28350 ;; Return value:  Size  Location     Type
 28351 ;;                  1    wreg      void 
 28352 ;; Registers used:
 28353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28354 ;; Tracked objects:
 28355 ;;		On entry : 0/0
 28356 ;;		On exit  : 0/0
 28357 ;;		Unchanged: 0/0
 28358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28359 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28360 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28363 ;;Total ram usage:        4 bytes
 28364 ;; Hardware stack levels used: 1
 28365 ;; Hardware stack levels required when called: 2
 28366 ;; This function calls:
 28367 ;;		_USBConfigureEndpoint
 28368 ;; This function is called by:
 28369 ;;		_CDCInitEP
 28370 ;; This function uses a non-reentrant model
 28371 ;;
 28372                           
 28373                           	psect	text134
 28374  00CCE8                     __ptext134:
 28375                           	callstack 0
 28376  00CCE8                     _USBEnableEndpoint:
 28377                           	callstack 25
 28378                           
 28379                           ;incstack = 0
 28380                           ;USBEnableEndpoint@ep stored from wreg
 28381  00CCE8  6E0C               	movwf	USBEnableEndpoint@ep^0,c
 28382  00CCEA                     
 28383                           ;usb_device.c: 884: unsigned char* p;;usb_device.c: 888: if(options & 0x04)
 28384  00CCEA  A409               	btfss	USBEnableEndpoint@options^0,2,c
 28385  00CCEC  EF7A  F066         	goto	u7651
 28386  00CCF0  EF7C  F066         	goto	u7650
 28387  00CCF4                     u7651:
 28388  00CCF4  EF81  F066         	goto	l8931
 28389  00CCF8                     u7650:
 28390  00CCF8                     
 28391                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 0);
 28392  00CCF8  0E00               	movlw	0
 28393  00CCFA  6E01               	movwf	USBConfigureEndpoint@direction^0,c
 28394  00CCFC  500C               	movf	USBEnableEndpoint@ep^0,w,c
 28395  00CCFE  ECA7  F05A         	call	_USBConfigureEndpoint
 28396  00CD02                     l8931:
 28397                           
 28398                           ;usb_device.c: 891: };usb_device.c: 892: if(options & 0x02)
 28399  00CD02  A209               	btfss	USBEnableEndpoint@options^0,1,c
 28400  00CD04  EF86  F066         	goto	u7661
 28401  00CD08  EF88  F066         	goto	u7660
 28402  00CD0C                     u7661:
 28403  00CD0C  EF8D  F066         	goto	l8935
 28404  00CD10                     u7660:
 28405  00CD10                     
 28406                           ;usb_device.c: 893: {;usb_device.c: 894: USBConfigureEndpoint(ep, 1);
 28407  00CD10  0E01               	movlw	1
 28408  00CD12  6E01               	movwf	USBConfigureEndpoint@direction^0,c
 28409  00CD14  500C               	movf	USBEnableEndpoint@ep^0,w,c
 28410  00CD16  ECA7  F05A         	call	_USBConfigureEndpoint
 28411  00CD1A                     l8935:
 28412                           
 28413                           ;usb_device.c: 895: };usb_device.c: 903: p = (unsigned char*)(&UEP0+ep);
 28414  00CD1A  0E26               	movlw	38
 28415  00CD1C  240C               	addwf	USBEnableEndpoint@ep^0,w,c
 28416  00CD1E  6E0A               	movwf	USBEnableEndpoint@p^0,c
 28417  00CD20  6A0B               	clrf	(USBEnableEndpoint@p+1)^0,c
 28418  00CD22  0E0F               	movlw	15
 28419  00CD24  220B               	addwfc	(USBEnableEndpoint@p+1)^0,f,c
 28420  00CD26                     
 28421                           ;usb_device.c: 905: *p = options;
 28422  00CD26  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28423  00CD2A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28424  00CD2E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28425  00CD32  0012               	return		;funcret
 28426  00CD34                     __end_of_USBEnableEndpoint:
 28427                           	callstack 0
 28428                           
 28429 ;; *************** function _USBConfigureEndpoint *****************
 28430 ;; Defined at:
 28431 ;;		line 1547 in file "usb/usb_device.c"
 28432 ;; Parameters:    Size  Location     Type
 28433 ;;  EPNum           1    wreg     unsigned char 
 28434 ;;  direction       1    0[COMRAM] unsigned char 
 28435 ;; Auto vars:     Size  Location     Type
 28436 ;;  EPNum           1    5[COMRAM] unsigned char 
 28437 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28438 ;;		 -> BDT(48), 
 28439 ;; Return value:  Size  Location     Type
 28440 ;;                  1    wreg      void 
 28441 ;; Registers used:
 28442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28443 ;; Tracked objects:
 28444 ;;		On entry : 0/0
 28445 ;;		On exit  : 0/0
 28446 ;;		Unchanged: 0/0
 28447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28448 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28449 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28450 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28451 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28452 ;;Total ram usage:        8 bytes
 28453 ;; Hardware stack levels used: 1
 28454 ;; Hardware stack levels required when called: 1
 28455 ;; This function calls:
 28456 ;;		Nothing
 28457 ;; This function is called by:
 28458 ;;		_USBEnableEndpoint
 28459 ;; This function uses a non-reentrant model
 28460 ;;
 28461                           
 28462                           	psect	text135
 28463  00B54E                     __ptext135:
 28464                           	callstack 0
 28465  00B54E                     _USBConfigureEndpoint:
 28466                           	callstack 25
 28467                           
 28468                           ;incstack = 0
 28469                           ;USBConfigureEndpoint@EPNum stored from wreg
 28470  00B54E  6E06               	movwf	USBConfigureEndpoint@EPNum^0,c
 28471  00B550                     
 28472                           ;usb_device.c: 1549: volatile BDT_ENTRY* handle;;usb_device.c: 1553: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 28473  00B550  0E00               	movlw	0
 28474  00B552  6E07               	movwf	USBConfigureEndpoint@handle^0,c
 28475  00B554  0E04               	movlw	4
 28476  00B556  6E08               	movwf	(USBConfigureEndpoint@handle+1)^0,c
 28477  00B558                     
 28478                           ;usb_device.c: 1554: handle += (4*EPNum+2*direction+0u);
 28479  00B558  5001               	movf	USBConfigureEndpoint@direction^0,w,c
 28480  00B55A  6E02               	movwf	??_USBConfigureEndpoint^0,c
 28481  00B55C  6A03               	clrf	(??_USBConfigureEndpoint+1)^0,c
 28482  00B55E  90D8               	bcf	status,0,c
 28483  00B560  3602               	rlcf	??_USBConfigureEndpoint^0,f,c
 28484  00B562  3603               	rlcf	(??_USBConfigureEndpoint+1)^0,f,c
 28485  00B564  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 28486  00B566  6E04               	movwf	(??_USBConfigureEndpoint+2)^0,c
 28487  00B568  6A05               	clrf	(??_USBConfigureEndpoint+3)^0,c
 28488  00B56A  90D8               	bcf	status,0,c
 28489  00B56C  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28490  00B56E  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28491  00B570  90D8               	bcf	status,0,c
 28492  00B572  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28493  00B574  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28494  00B576  5002               	movf	??_USBConfigureEndpoint^0,w,c
 28495  00B578  2604               	addwf	(??_USBConfigureEndpoint+2)^0,f,c
 28496  00B57A  5003               	movf	(??_USBConfigureEndpoint+1)^0,w,c
 28497  00B57C  2205               	addwfc	(??_USBConfigureEndpoint+3)^0,f,c
 28498  00B57E  90D8               	bcf	status,0,c
 28499  00B580  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28500  00B582  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28501  00B584  90D8               	bcf	status,0,c
 28502  00B586  3604               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28503  00B588  3605               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28504  00B58A  5004               	movf	(??_USBConfigureEndpoint+2)^0,w,c
 28505  00B58C  2607               	addwf	USBConfigureEndpoint@handle^0,f,c
 28506  00B58E  5005               	movf	(??_USBConfigureEndpoint+3)^0,w,c
 28507  00B590  2208               	addwfc	(USBConfigureEndpoint@handle+1)^0,f,c
 28508  00B592                     
 28509                           ;usb_device.c: 1556: handle->STAT.UOWN = 0;
 28510  00B592  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28511  00B596  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28512  00B59A  9EDF               	bcf	indf2,7,c
 28513  00B59C                     
 28514                           ;usb_device.c: 1561: if(direction == 0)
 28515  00B59C  5001               	movf	USBConfigureEndpoint@direction^0,w,c
 28516  00B59E  A4D8               	btfss	status,2,c
 28517  00B5A0  EFD4  F05A         	goto	u7611
 28518  00B5A4  EFD6  F05A         	goto	u7610
 28519  00B5A8                     u7611:
 28520  00B5A8  EFE4  F05A         	goto	l8897
 28521  00B5AC                     u7610:
 28522  00B5AC                     
 28523                           ;usb_device.c: 1562: {;usb_device.c: 1563: pBDTEntryOut[EPNum] = handle;
 28524  00B5AC  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 28525  00B5AE  0D02               	mullw	2
 28526  00B5B0  0E46               	movlw	low _pBDTEntryOut
 28527  00B5B2  24F3               	addwf	243,w,c
 28528  00B5B4  6ED9               	movwf	fsr2l,c
 28529  00B5B6  0E01               	movlw	high _pBDTEntryOut
 28530  00B5B8  20F4               	addwfc	prodh,w,c
 28531  00B5BA  6EDA               	movwf	fsr2h,c
 28532  00B5BC  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28533  00B5C0  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28534                           
 28535                           ;usb_device.c: 1564: }
 28536  00B5C4  EFF0  F05A         	goto	l8899
 28537  00B5C8                     l8897:
 28538                           
 28539                           ;usb_device.c: 1565: else;usb_device.c: 1566: {;usb_device.c: 1567: pBDTEntryIn[EPNum] =
      +                           handle;
 28540  00B5C8  5006               	movf	USBConfigureEndpoint@EPNum^0,w,c
 28541  00B5CA  0D02               	mullw	2
 28542  00B5CC  0EBA               	movlw	low _pBDTEntryIn
 28543  00B5CE  24F3               	addwf	243,w,c
 28544  00B5D0  6ED9               	movwf	fsr2l,c
 28545  00B5D2  0E00               	movlw	high _pBDTEntryIn
 28546  00B5D4  20F4               	addwfc	prodh,w,c
 28547  00B5D6  6EDA               	movwf	fsr2h,c
 28548  00B5D8  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28549  00B5DC  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28550  00B5E0                     l8899:
 28551                           
 28552                           ;usb_device.c: 1568: };usb_device.c: 1571: handle->STAT.DTS = 0;
 28553  00B5E0  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28554  00B5E4  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28555  00B5E8  9CDF               	bcf	indf2,6,c
 28556  00B5EA                     
 28557                           ;usb_device.c: 1572: (handle+1)->STAT.DTS = 1;
 28558  00B5EA  EE20 F004          	lfsr	2,4
 28559  00B5EE  5007               	movf	USBConfigureEndpoint@handle^0,w,c
 28560  00B5F0  26D9               	addwf	fsr2l,f,c
 28561  00B5F2  5008               	movf	(USBConfigureEndpoint@handle+1)^0,w,c
 28562  00B5F4  22DA               	addwfc	fsr2h,f,c
 28563  00B5F6  8CDF               	bsf	indf2,6,c
 28564  00B5F8  0012               	return		;funcret
 28565  00B5FA                     __end_of_USBConfigureEndpoint:
 28566                           	callstack 0
 28567                           
 28568 ;; *************** function _USBCtrlTrfOutHandler *****************
 28569 ;; Defined at:
 28570 ;;		line 2545 in file "usb/usb_device.c"
 28571 ;; Parameters:    Size  Location     Type
 28572 ;;		None
 28573 ;; Auto vars:     Size  Location     Type
 28574 ;;		None
 28575 ;; Return value:  Size  Location     Type
 28576 ;;                  1    wreg      void 
 28577 ;; Registers used:
 28578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28579 ;; Tracked objects:
 28580 ;;		On entry : 0/0
 28581 ;;		On exit  : 0/0
 28582 ;;		Unchanged: 0/0
 28583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28588 ;;Total ram usage:        0 bytes
 28589 ;; Hardware stack levels used: 1
 28590 ;; Hardware stack levels required when called: 3
 28591 ;; This function calls:
 28592 ;;		_USBCtrlTrfRxService
 28593 ;; This function is called by:
 28594 ;;		_USBCtrlEPService
 28595 ;; This function uses a non-reentrant model
 28596 ;;
 28597                           
 28598                           	psect	text136
 28599  00C1A4                     __ptext136:
 28600                           	callstack 0
 28601  00C1A4                     _USBCtrlTrfOutHandler:
 28602                           	callstack 25
 28603  00C1A4                     
 28604                           ;usb_device.c: 2547: if(controlTransferState == 2)
 28605  00C1A4  0E02               	movlw	2
 28606  00C1A6  0100               	movlb	0	; () banked
 28607  00C1A8  19E0               	xorwf	_controlTransferState& (0+255),w,b
 28608  00C1AA  A4D8               	btfss	status,2,c
 28609  00C1AC  EFDA  F060         	goto	u11771
 28610  00C1B0  EFDC  F060         	goto	u11770
 28611  00C1B4                     u11771:
 28612  00C1B4  EFE0  F060         	goto	l11733
 28613  00C1B8                     u11770:
 28614  00C1B8                     
 28615                           ; BSR set to: 0
 28616                           ;usb_device.c: 2548: {;usb_device.c: 2549: USBCtrlTrfRxService();
 28617  00C1B8  EC33  F048         	call	_USBCtrlTrfRxService	;wreg free
 28618                           
 28619                           ;usb_device.c: 2550: }
 28620  00C1BC  EF0C  F061         	goto	l536
 28621  00C1C0                     l11733:
 28622                           
 28623                           ; BSR set to: 0
 28624                           ;usb_device.c: 2551: else;usb_device.c: 2552: {;usb_device.c: 2555: controlTransferState
      +                           = 0;
 28625  00C1C0  0E00               	movlw	0
 28626  00C1C2  6FE0               	movwf	_controlTransferState& (0+255),b
 28627                           
 28628                           ;usb_device.c: 2562: if(BothEP0OutUOWNsSet == 0)
 28629  00C1C4  51DC               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 28630  00C1C6  A4D8               	btfss	status,2,c
 28631  00C1C8  EFE8  F060         	goto	u11781
 28632  00C1CC  EFEA  F060         	goto	u11780
 28633  00C1D0                     u11781:
 28634  00C1D0  EF0A  F061         	goto	l11741
 28635  00C1D4                     u11780:
 28636  00C1D4                     
 28637                           ; BSR set to: 0
 28638                           ;usb_device.c: 2563: {;usb_device.c: 2564: pBDTEntryEP0OutNext->CNT = 8;
 28639  00C1D4  EE20 F001          	lfsr	2,1
 28640  00C1D8  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 28641  00C1DA  26D9               	addwf	fsr2l,f,c
 28642  00C1DC  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 28643  00C1DE  22DA               	addwfc	fsr2h,f,c
 28644  00C1E0  0E08               	movlw	8
 28645  00C1E2  6EDF               	movwf	indf2,c
 28646                           
 28647                           ;usb_device.c: 2565: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28648  00C1E4  EE20 F002          	lfsr	2,2
 28649  00C1E8  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 28650  00C1EA  26D9               	addwf	fsr2l,f,c
 28651  00C1EC  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 28652  00C1EE  22DA               	addwfc	fsr2h,f,c
 28653  00C1F0  0E30               	movlw	48
 28654  00C1F2  6EDE               	movwf	postinc2,c
 28655  00C1F4  0E04               	movlw	4
 28656  00C1F6  6EDD               	movwf	postdec2,c
 28657  00C1F8                     
 28658                           ; BSR set to: 0
 28659                           ;usb_device.c: 2566: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28660  00C1F8  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28661  00C1FC  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28662  00C200  0E0C               	movlw	12
 28663  00C202  6EDF               	movwf	indf2,c
 28664  00C204                     
 28665                           ; BSR set to: 0
 28666                           ;usb_device.c: 2567: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28667  00C204  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28668  00C208  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28669  00C20C  0E00               	movlw	0
 28670  00C20E  8EDB               	bsf	plusw2,7,c
 28671                           
 28672                           ;usb_device.c: 2568: }
 28673  00C210  EF0C  F061         	goto	l536
 28674  00C214                     l11741:
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;usb_device.c: 2569: else;usb_device.c: 2570: {;usb_device.c: 2571: BothEP0OutUOWNsSet =
      +                           0;
 28678  00C214  0E00               	movlw	0
 28679  00C216  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 28680  00C218                     l536:
 28681  00C218  0012               	return		;funcret
 28682  00C21A                     __end_of_USBCtrlTrfOutHandler:
 28683                           	callstack 0
 28684                           
 28685 ;; *************** function _USBCtrlTrfRxService *****************
 28686 ;; Defined at:
 28687 ;;		line 1856 in file "usb/usb_device.c"
 28688 ;; Parameters:    Size  Location     Type
 28689 ;;		None
 28690 ;; Auto vars:     Size  Location     Type
 28691 ;;  byteToRead      1    1[COMRAM] unsigned char 
 28692 ;;  i               1    0[COMRAM] unsigned char 
 28693 ;; Return value:  Size  Location     Type
 28694 ;;                  1    wreg      void 
 28695 ;; Registers used:
 28696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28697 ;; Tracked objects:
 28698 ;;		On entry : 0/0
 28699 ;;		On exit  : 0/0
 28700 ;;		Unchanged: 0/0
 28701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28706 ;;Total ram usage:        2 bytes
 28707 ;; Hardware stack levels used: 1
 28708 ;; Hardware stack levels required when called: 2
 28709 ;; This function calls:
 28710 ;;		_USBCtrlEPAllowStatusStage
 28711 ;; This function is called by:
 28712 ;;		_USBCtrlTrfOutHandler
 28713 ;; This function uses a non-reentrant model
 28714 ;;
 28715                           
 28716                           	psect	text137
 28717  009066                     __ptext137:
 28718                           	callstack 0
 28719  009066                     _USBCtrlTrfRxService:
 28720                           	callstack 25
 28721  009066                     
 28722                           ;usb_device.c: 1858: uint8_t byteToRead;;usb_device.c: 1859: uint8_t i;;usb_device.c: 18
      +                          63: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28723  009066  0100               	movlb	0	; () banked
 28724  009068  EE20 F001          	lfsr	2,1
 28725  00906C  51CD               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 28726  00906E  26D9               	addwf	fsr2l,f,c
 28727  009070  51CE               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 28728  009072  22DA               	addwfc	fsr2h,f,c
 28729  009074  50DF               	movf	indf2,w,c
 28730  009076  6E02               	movwf	USBCtrlTrfRxService@byteToRead^0,c
 28731  009078                     
 28732                           ; BSR set to: 0
 28733                           ;usb_device.c: 1869: if(byteToRead > outPipes[0].wCount.Val)
 28734  009078  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 28735  00907A  0101               	movlb	1	; () banked
 28736  00907C  5D3C               	subwf	(_outPipes+4)& (0+255),w,b
 28737  00907E  0E00               	movlw	0
 28738  009080  593D               	subwfb	(_outPipes+5)& (0+255),w,b
 28739  009082  B0D8               	btfsc	status,0,c
 28740  009084  EF46  F048         	goto	u10911
 28741  009088  EF48  F048         	goto	u10910
 28742  00908C                     u10911:
 28743  00908C  EF4A  F048         	goto	l11013
 28744  009090                     u10910:
 28745  009090                     
 28746                           ; BSR set to: 1
 28747                           ;usb_device.c: 1870: {;usb_device.c: 1871: byteToRead = outPipes[0].wCount.Val;
 28748  009090  C13C  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 28749  009094                     l11013:
 28750                           
 28751                           ; BSR set to: 1
 28752                           ;usb_device.c: 1872: };usb_device.c: 1874: outPipes[0].wCount.Val -= byteToRead;
 28753  009094  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 28754  009096  5F3C               	subwf	(_outPipes+4)& (0+255),f,b
 28755  009098  0E00               	movlw	0
 28756  00909A  5B3D               	subwfb	(_outPipes+5)& (0+255),f,b
 28757  00909C                     
 28758                           ; BSR set to: 1
 28759                           ;usb_device.c: 1878: for(i=0;i<byteToRead;i++)
 28760  00909C  0E00               	movlw	0
 28761  00909E  6E01               	movwf	USBCtrlTrfRxService@i^0,c
 28762  0090A0  EF61  F048         	goto	l11023
 28763  0090A4                     l11017:
 28764                           
 28765                           ; BSR set to: 1
 28766                           ;usb_device.c: 1879: {;usb_device.c: 1880: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28767  0090A4  0E38               	movlw	56
 28768  0090A6  2401               	addwf	USBCtrlTrfRxService@i^0,w,c
 28769  0090A8  6ED9               	movwf	fsr2l,c
 28770  0090AA  6ADA               	clrf	fsr2h,c
 28771  0090AC  0E04               	movlw	4
 28772  0090AE  22DA               	addwfc	fsr2h,f,c
 28773  0090B0  C138  FFE1         	movff	_outPipes,fsr1l
 28774  0090B4  C139  FFE2         	movff	_outPipes+1,fsr1h
 28775  0090B8  CFDF FFE7          	movff	indf2,indf1
 28776  0090BC                     
 28777                           ; BSR set to: 1
 28778  0090BC  4B38               	infsnz	_outPipes& (0+255),f,b
 28779  0090BE  2B39               	incf	(_outPipes+1)& (0+255),f,b
 28780  0090C0                     
 28781                           ; BSR set to: 1
 28782  0090C0  2A01               	incf	USBCtrlTrfRxService@i^0,f,c
 28783  0090C2                     l11023:
 28784                           
 28785                           ; BSR set to: 1
 28786  0090C2  5002               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 28787  0090C4  5C01               	subwf	USBCtrlTrfRxService@i^0,w,c
 28788  0090C6  A0D8               	btfss	status,0,c
 28789  0090C8  EF68  F048         	goto	u10921
 28790  0090CC  EF6A  F048         	goto	u10920
 28791  0090D0                     u10921:
 28792  0090D0  EF52  F048         	goto	l11017
 28793  0090D4                     u10920:
 28794  0090D4                     
 28795                           ; BSR set to: 1
 28796                           ;usb_device.c: 1881: };usb_device.c: 1885: if(outPipes[0].wCount.Val > 0)
 28797  0090D4  513C               	movf	(_outPipes+4)& (0+255),w,b
 28798  0090D6  113D               	iorwf	(_outPipes+5)& (0+255),w,b
 28799  0090D8  B4D8               	btfsc	status,2,c
 28800  0090DA  EF71  F048         	goto	u10931
 28801  0090DE  EF73  F048         	goto	u10930
 28802  0090E2                     u10931:
 28803  0090E2  EFAD  F048         	goto	l11039
 28804  0090E6                     u10930:
 28805  0090E6                     
 28806                           ; BSR set to: 1
 28807                           ;usb_device.c: 1886: {;usb_device.c: 1887: pBDTEntryEP0OutNext->CNT = 8;
 28808  0090E6  0100               	movlb	0	; () banked
 28809  0090E8  EE20 F001          	lfsr	2,1
 28810  0090EC  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 28811  0090EE  26D9               	addwf	fsr2l,f,c
 28812  0090F0  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 28813  0090F2  22DA               	addwfc	fsr2h,f,c
 28814  0090F4  0E08               	movlw	8
 28815  0090F6  6EDF               	movwf	indf2,c
 28816                           
 28817                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28818  0090F8  EE20 F002          	lfsr	2,2
 28819  0090FC  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 28820  0090FE  26D9               	addwf	fsr2l,f,c
 28821  009100  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 28822  009102  22DA               	addwfc	fsr2h,f,c
 28823  009104  0E38               	movlw	56
 28824  009106  6EDE               	movwf	postinc2,c
 28825  009108  0E04               	movlw	4
 28826  00910A  6EDD               	movwf	postdec2,c
 28827  00910C                     
 28828                           ; BSR set to: 0
 28829                           ;usb_device.c: 1889: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28830  00910C  C0CD  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28831  009110  C0CE  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28832  009114  BCDF               	btfsc	indf2,6,c
 28833  009116  EF8F  F048         	goto	u10941
 28834  00911A  EF91  F048         	goto	u10940
 28835  00911E                     u10941:
 28836  00911E  EF9F  F048         	goto	l11035
 28837  009122                     u10940:
 28838  009122                     
 28839                           ; BSR set to: 0
 28840                           ;usb_device.c: 1890: {;usb_device.c: 1891: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 28841  009122  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28842  009126  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28843  00912A  0E48               	movlw	72
 28844  00912C  6EDF               	movwf	indf2,c
 28845  00912E                     
 28846                           ; BSR set to: 0
 28847                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28848  00912E  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28849  009132  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28850  009136  0E00               	movlw	0
 28851  009138  8EDB               	bsf	plusw2,7,c
 28852                           
 28853                           ;usb_device.c: 1893: }
 28854  00913A  EFD9  F048         	goto	l468
 28855  00913E                     l11035:
 28856                           
 28857                           ; BSR set to: 0
 28858                           ;usb_device.c: 1894: else;usb_device.c: 1895: {;usb_device.c: 1896: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 28859  00913E  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28860  009142  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28861  009146  0E08               	movlw	8
 28862  009148  6EDF               	movwf	indf2,c
 28863  00914A                     
 28864                           ; BSR set to: 0
 28865                           ;usb_device.c: 1897: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28866  00914A  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28867  00914E  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28868  009152  0E00               	movlw	0
 28869  009154  8EDB               	bsf	plusw2,7,c
 28870  009156  EFD9  F048         	goto	l468
 28871  00915A                     l11039:
 28872                           
 28873                           ; BSR set to: 1
 28874                           ;usb_device.c: 1900: else;usb_device.c: 1901: {;usb_device.c: 1905: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 28875  00915A  0100               	movlb	0	; () banked
 28876  00915C  EE20 F001          	lfsr	2,1
 28877  009160  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 28878  009162  26D9               	addwf	fsr2l,f,c
 28879  009164  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 28880  009166  22DA               	addwfc	fsr2h,f,c
 28881  009168  0E08               	movlw	8
 28882  00916A  6EDF               	movwf	indf2,c
 28883                           
 28884                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28885  00916C  EE20 F002          	lfsr	2,2
 28886  009170  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 28887  009172  26D9               	addwf	fsr2l,f,c
 28888  009174  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 28889  009176  22DA               	addwfc	fsr2h,f,c
 28890  009178  0E30               	movlw	48
 28891  00917A  6EDE               	movwf	postinc2,c
 28892  00917C  0E04               	movlw	4
 28893  00917E  6EDD               	movwf	postdec2,c
 28894  009180                     
 28895                           ; BSR set to: 0
 28896                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28897  009180  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28898  009184  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28899  009188  0E04               	movlw	4
 28900  00918A  6EDF               	movwf	indf2,c
 28901  00918C                     
 28902                           ; BSR set to: 0
 28903                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28904  00918C  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28905  009190  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28906  009194  0E00               	movlw	0
 28907  009196  8EDB               	bsf	plusw2,7,c
 28908  009198                     
 28909                           ; BSR set to: 0
 28910                           ;usb_device.c: 1930: };usb_device.c: 1931: outPipes[0].info.bits.busy = 0;
 28911  009198  0101               	movlb	1	; () banked
 28912  00919A  9F3B               	bcf	(_outPipes+3)& (0+255),7,b
 28913  00919C                     
 28914                           ; BSR set to: 1
 28915                           ;usb_device.c: 1945: if(USBDeferStatusStagePacket == 0)
 28916  00919C  0100               	movlb	0	; () banked
 28917  00919E  51DA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 28918  0091A0  A4D8               	btfss	status,2,c
 28919  0091A2  EFD5  F048         	goto	u10951
 28920  0091A6  EFD7  F048         	goto	u10950
 28921  0091AA                     u10951:
 28922  0091AA  EFD9  F048         	goto	l468
 28923  0091AE                     u10950:
 28924  0091AE                     
 28925                           ; BSR set to: 0
 28926                           ;usb_device.c: 1946: {;usb_device.c: 1947: USBCtrlEPAllowStatusStage();
 28927  0091AE  EC62  F053         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28928  0091B2                     l468:
 28929  0091B2  0012               	return		;funcret
 28930  0091B4                     __end_of_USBCtrlTrfRxService:
 28931                           	callstack 0
 28932                           
 28933 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28934 ;; Defined at:
 28935 ;;		line 1420 in file "usb/usb_device.c"
 28936 ;; Parameters:    Size  Location     Type
 28937 ;;		None
 28938 ;; Auto vars:     Size  Location     Type
 28939 ;;		None
 28940 ;; Return value:  Size  Location     Type
 28941 ;;                  1    wreg      void 
 28942 ;; Registers used:
 28943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28944 ;; Tracked objects:
 28945 ;;		On entry : 0/0
 28946 ;;		On exit  : 0/0
 28947 ;;		Unchanged: 0/0
 28948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28953 ;;Total ram usage:        0 bytes
 28954 ;; Hardware stack levels used: 1
 28955 ;; Hardware stack levels required when called: 1
 28956 ;; This function calls:
 28957 ;;		Nothing
 28958 ;; This function is called by:
 28959 ;;		_USBDeviceTasks
 28960 ;;		_USBCtrlEPServiceComplete
 28961 ;;		_USBCtrlTrfRxService
 28962 ;; This function uses a non-reentrant model
 28963 ;;
 28964                           
 28965                           	psect	text138
 28966  00A6C4                     __ptext138:
 28967                           	callstack 0
 28968  00A6C4                     _USBCtrlEPAllowStatusStage:
 28969                           	callstack 25
 28970  00A6C4                     
 28971                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag1 == 0)
 28972  00A6C4  0100               	movlb	0	; () banked
 28973  00A6C6  51D9               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 28974  00A6C8  A4D8               	btfss	status,2,c
 28975  00A6CA  EF69  F053         	goto	u9551
 28976  00A6CE  EF6B  F053         	goto	u9550
 28977  00A6D2                     u9551:
 28978  00A6D2  EFDA  F053         	goto	l416
 28979  00A6D6                     u9550:
 28980  00A6D6                     
 28981                           ; BSR set to: 0
 28982                           ;usb_device.c: 1428: {;usb_device.c: 1429: USBStatusStageEnabledFlag1 = 1;
 28983  00A6D6  0E01               	movlw	1
 28984  00A6D8  6FD9               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 28985                           
 28986                           ;usb_device.c: 1430: if(USBStatusStageEnabledFlag2 == 0)
 28987  00A6DA  51D8               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 28988  00A6DC  A4D8               	btfss	status,2,c
 28989  00A6DE  EF73  F053         	goto	u9561
 28990  00A6E2  EF75  F053         	goto	u9560
 28991  00A6E6                     u9561:
 28992  00A6E6  EFDA  F053         	goto	l416
 28993  00A6EA                     u9560:
 28994  00A6EA                     
 28995                           ; BSR set to: 0
 28996                           ;usb_device.c: 1431: {;usb_device.c: 1432: USBStatusStageEnabledFlag2 = 1;
 28997  00A6EA  0E01               	movlw	1
 28998  00A6EC  6FD8               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 28999  00A6EE                     
 29000                           ; BSR set to: 0
 29001                           ;usb_device.c: 1436: if(controlTransferState == 2)
 29002  00A6EE  0E02               	movlw	2
 29003  00A6F0  19E0               	xorwf	_controlTransferState& (0+255),w,b
 29004  00A6F2  A4D8               	btfss	status,2,c
 29005  00A6F4  EF7E  F053         	goto	u9571
 29006  00A6F8  EF80  F053         	goto	u9570
 29007  00A6FC                     u9571:
 29008  00A6FC  EF96  F053         	goto	l10093
 29009  00A700                     u9570:
 29010  00A700                     
 29011                           ; BSR set to: 0
 29012                           ;usb_device.c: 1437: {;usb_device.c: 1438: pBDTEntryIn[0]->CNT = 0;
 29013  00A700  EE20 F001          	lfsr	2,1
 29014  00A704  51BA               	movf	_pBDTEntryIn& (0+255),w,b
 29015  00A706  26D9               	addwf	fsr2l,f,c
 29016  00A708  51BB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29017  00A70A  22DA               	addwfc	fsr2h,f,c
 29018  00A70C  0E00               	movlw	0
 29019  00A70E  6EDF               	movwf	indf2,c
 29020  00A710                     
 29021                           ; BSR set to: 0
 29022                           ;usb_device.c: 1439: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29023  00A710  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29024  00A714  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29025  00A718  0E48               	movlw	72
 29026  00A71A  6EDF               	movwf	indf2,c
 29027  00A71C                     
 29028                           ; BSR set to: 0
 29029                           ;usb_device.c: 1440: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29030  00A71C  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29031  00A720  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29032  00A724  0E00               	movlw	0
 29033  00A726  8EDB               	bsf	plusw2,7,c
 29034                           
 29035                           ;usb_device.c: 1441: }
 29036  00A728  EFDA  F053         	goto	l416
 29037  00A72C                     l10093:
 29038                           
 29039                           ; BSR set to: 0
 29040                           ;usb_device.c: 1442: else if(controlTransferState == 1)
 29041  00A72C  05E0               	decf	_controlTransferState& (0+255),w,b
 29042  00A72E  A4D8               	btfss	status,2,c
 29043  00A730  EF9C  F053         	goto	u9581
 29044  00A734  EF9E  F053         	goto	u9580
 29045  00A738                     u9581:
 29046  00A738  EFDA  F053         	goto	l412
 29047  00A73C                     u9580:
 29048  00A73C                     
 29049                           ; BSR set to: 0
 29050                           ;usb_device.c: 1443: {;usb_device.c: 1444: BothEP0OutUOWNsSet = 0;
 29051  00A73C  0E00               	movlw	0
 29052  00A73E  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 29053  00A740                     
 29054                           ; BSR set to: 0
 29055                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->CNT = 8;
 29056  00A740  EE20 F001          	lfsr	2,1
 29057  00A744  51CD               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 29058  00A746  26D9               	addwf	fsr2l,f,c
 29059  00A748  51CE               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 29060  00A74A  22DA               	addwfc	fsr2h,f,c
 29061  00A74C  0E08               	movlw	8
 29062  00A74E  6EDF               	movwf	indf2,c
 29063  00A750                     
 29064                           ; BSR set to: 0
 29065                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29066  00A750  EE20 F002          	lfsr	2,2
 29067  00A754  51CD               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 29068  00A756  26D9               	addwf	fsr2l,f,c
 29069  00A758  51CE               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 29070  00A75A  22DA               	addwfc	fsr2h,f,c
 29071  00A75C  0E30               	movlw	48
 29072  00A75E  6EDE               	movwf	postinc2,c
 29073  00A760  0E04               	movlw	4
 29074  00A762  6EDD               	movwf	postdec2,c
 29075  00A764                     
 29076                           ; BSR set to: 0
 29077                           ;usb_device.c: 1451: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29078  00A764  C0CD  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29079  00A768  C0CE  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29080  00A76C  0E04               	movlw	4
 29081  00A76E  6EDF               	movwf	indf2,c
 29082  00A770                     
 29083                           ; BSR set to: 0
 29084                           ;usb_device.c: 1452: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29085  00A770  C0CD  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29086  00A774  C0CE  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29087  00A778  0E00               	movlw	0
 29088  00A77A  8EDB               	bsf	plusw2,7,c
 29089  00A77C                     
 29090                           ; BSR set to: 0
 29091                           ;usb_device.c: 1453: BothEP0OutUOWNsSet = 1;
 29092  00A77C  0E01               	movlw	1
 29093  00A77E  6FDC               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 29094  00A780                     
 29095                           ; BSR set to: 0
 29096                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->CNT = 8;
 29097  00A780  EE20 F001          	lfsr	2,1
 29098  00A784  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 29099  00A786  26D9               	addwf	fsr2l,f,c
 29100  00A788  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 29101  00A78A  22DA               	addwfc	fsr2h,f,c
 29102  00A78C  0E08               	movlw	8
 29103  00A78E  6EDF               	movwf	indf2,c
 29104  00A790                     
 29105                           ; BSR set to: 0
 29106                           ;usb_device.c: 1458: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29107  00A790  EE20 F002          	lfsr	2,2
 29108  00A794  51CB               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 29109  00A796  26D9               	addwf	fsr2l,f,c
 29110  00A798  51CC               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 29111  00A79A  22DA               	addwfc	fsr2h,f,c
 29112  00A79C  0E30               	movlw	48
 29113  00A79E  6EDE               	movwf	postinc2,c
 29114  00A7A0  0E04               	movlw	4
 29115  00A7A2  6EDD               	movwf	postdec2,c
 29116  00A7A4                     
 29117                           ; BSR set to: 0
 29118                           ;usb_device.c: 1459: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29119  00A7A4  C0CB  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29120  00A7A8  C0CC  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29121  00A7AC  0E80               	movlw	128
 29122  00A7AE  6EDF               	movwf	indf2,c
 29123  00A7B0  EFDA  F053         	goto	l416
 29124  00A7B4                     l412:
 29125  00A7B4                     l416:
 29126                           
 29127                           ; BSR set to: 0
 29128  00A7B4  0012               	return		;funcret
 29129  00A7B6                     __end_of_USBCtrlEPAllowStatusStage:
 29130                           	callstack 0
 29131                           
 29132 ;; *************** function _USBCtrlTrfInHandler *****************
 29133 ;; Defined at:
 29134 ;;		line 2599 in file "usb/usb_device.c"
 29135 ;; Parameters:    Size  Location     Type
 29136 ;;		None
 29137 ;; Auto vars:     Size  Location     Type
 29138 ;;  lastDTS         1    1[COMRAM] unsigned char 
 29139 ;; Return value:  Size  Location     Type
 29140 ;;                  1    wreg      void 
 29141 ;; Registers used:
 29142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29143 ;; Tracked objects:
 29144 ;;		On entry : 0/0
 29145 ;;		On exit  : 0/0
 29146 ;;		Unchanged: 0/0
 29147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29152 ;;Total ram usage:        1 bytes
 29153 ;; Hardware stack levels used: 1
 29154 ;; Hardware stack levels required when called: 2
 29155 ;; This function calls:
 29156 ;;		_USBCtrlTrfTxService
 29157 ;; This function is called by:
 29158 ;;		_USBCtrlEPService
 29159 ;; This function uses a non-reentrant model
 29160 ;;
 29161                           
 29162                           	psect	text139
 29163  009C94                     __ptext139:
 29164                           	callstack 0
 29165  009C94                     _USBCtrlTrfInHandler:
 29166                           	callstack 26
 29167  009C94                     
 29168                           ;usb_device.c: 2601: uint8_t lastDTS;;usb_device.c: 2603: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 29169  009C94  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29170  009C98  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29171  009C9C  0100               	movlb	0	; () banked
 29172  009C9E  0E00               	movlw	0
 29173  009CA0  BCDF               	btfsc	indf2,6,c
 29174  009CA2  0E01               	movlw	1
 29175  009CA4  6E02               	movwf	USBCtrlTrfInHandler@lastDTS^0,c
 29176  009CA6                     
 29177                           ; BSR set to: 0
 29178                           ;usb_device.c: 2606: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 29179  009CA6  0E04               	movlw	4
 29180  009CA8  19BA               	xorwf	_pBDTEntryIn& (0+255),w,b
 29181  009CAA  6FBA               	movwf	_pBDTEntryIn& (0+255),b
 29182  009CAC  51BB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29183  009CAE  6FBB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 29184  009CB0                     
 29185                           ; BSR set to: 0
 29186                           ;usb_device.c: 2611: if(USBDeviceState == ADR_PENDING_STATE)
 29187  009CB0  0E08               	movlw	8
 29188  009CB2  19E2               	xorwf	_USBDeviceState& (0+255),w,b
 29189  009CB4  A4D8               	btfss	status,2,c
 29190  009CB6  EF5F  F04E         	goto	u11791
 29191  009CBA  EF61  F04E         	goto	u11790
 29192  009CBE                     u11791:
 29193  009CBE  EF76  F04E         	goto	l11757
 29194  009CC2                     u11790:
 29195  009CC2                     
 29196                           ; BSR set to: 0
 29197                           ;usb_device.c: 2612: {;usb_device.c: 2613: UADDR = (SetupPkt.bDevADR & 0x7F);
 29198  009CC2  0104               	movlb	4	; () banked
 29199  009CC4  5132               	movf	50,w,b	;volatile
 29200  009CC6  0B7F               	andlw	127
 29201  009CC8  010F               	movlb	15	; () banked
 29202  009CCA  6F38               	movwf	56,b	;volatile
 29203  009CCC                     
 29204                           ; BSR set to: 15
 29205                           ;usb_device.c: 2614: if(UADDR != 0u)
 29206  009CCC  5138               	movf	56,w,b	;volatile
 29207  009CCE  B4D8               	btfsc	status,2,c
 29208  009CD0  EF6C  F04E         	goto	u11801
 29209  009CD4  EF6E  F04E         	goto	u11800
 29210  009CD8                     u11801:
 29211  009CD8  EF73  F04E         	goto	l11755
 29212  009CDC                     u11800:
 29213  009CDC                     
 29214                           ; BSR set to: 15
 29215                           ;usb_device.c: 2615: {;usb_device.c: 2616: USBDeviceState=ADDRESS_STATE;
 29216  009CDC  0E10               	movlw	16
 29217  009CDE  0100               	movlb	0	; () banked
 29218  009CE0  6FE2               	movwf	_USBDeviceState& (0+255),b
 29219                           
 29220                           ;usb_device.c: 2617: }
 29221  009CE2  EF76  F04E         	goto	l11757
 29222  009CE6                     l11755:
 29223                           
 29224                           ; BSR set to: 15
 29225                           ;usb_device.c: 2618: else;usb_device.c: 2619: {;usb_device.c: 2620: USBDeviceState=DEFAU
      +                          LT_STATE;
 29226  009CE6  0E04               	movlw	4
 29227  009CE8  0100               	movlb	0	; () banked
 29228  009CEA  6FE2               	movwf	_USBDeviceState& (0+255),b
 29229  009CEC                     l11757:
 29230                           
 29231                           ; BSR set to: 0
 29232                           ;usb_device.c: 2621: };usb_device.c: 2622: };usb_device.c: 2625: if(controlTransferState
      +                           == 1)
 29233  009CEC  05E0               	decf	_controlTransferState& (0+255),w,b
 29234  009CEE  A4D8               	btfss	status,2,c
 29235  009CF0  EF7C  F04E         	goto	u11811
 29236  009CF4  EF7E  F04E         	goto	u11810
 29237  009CF8                     u11811:
 29238  009CF8  EFC6  F04E         	goto	l542
 29239  009CFC                     u11810:
 29240  009CFC                     
 29241                           ; BSR set to: 0
 29242                           ;usb_device.c: 2626: {;usb_device.c: 2627: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 29243  009CFC  EE20 F002          	lfsr	2,2
 29244  009D00  51BA               	movf	_pBDTEntryIn& (0+255),w,b
 29245  009D02  26D9               	addwf	fsr2l,f,c
 29246  009D04  51BB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29247  009D06  22DA               	addwfc	fsr2h,f,c
 29248  009D08  0E38               	movlw	56
 29249  009D0A  6EDE               	movwf	postinc2,c
 29250  009D0C  0E04               	movlw	4
 29251  009D0E  6EDD               	movwf	postdec2,c
 29252  009D10                     
 29253                           ; BSR set to: 0
 29254                           ;usb_device.c: 2628: USBCtrlTrfTxService();
 29255  009D10  ECBE  F04D         	call	_USBCtrlTrfTxService	;wreg free
 29256  009D14                     
 29257                           ;usb_device.c: 2634: if(shortPacketStatus == 2)
 29258  009D14  0E02               	movlw	2
 29259  009D16  0100               	movlb	0	; () banked
 29260  009D18  19E1               	xorwf	_shortPacketStatus& (0+255),w,b
 29261  009D1A  A4D8               	btfss	status,2,c
 29262  009D1C  EF92  F04E         	goto	u11821
 29263  009D20  EF94  F04E         	goto	u11820
 29264  009D24                     u11821:
 29265  009D24  EFA2  F04E         	goto	l11769
 29266  009D28                     u11820:
 29267  009D28                     
 29268                           ; BSR set to: 0
 29269                           ;usb_device.c: 2635: {;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x04;
 29270  009D28  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29271  009D2C  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29272  009D30  0E04               	movlw	4
 29273  009D32  6EDF               	movwf	indf2,c
 29274  009D34                     
 29275                           ; BSR set to: 0
 29276                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29277  009D34  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29278  009D38  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29279  009D3C  0E00               	movlw	0
 29280  009D3E  8EDB               	bsf	plusw2,7,c
 29281                           
 29282                           ;usb_device.c: 2640: }
 29283  009D40  EFD2  F04E         	goto	l550
 29284  009D44                     l11769:
 29285                           
 29286                           ; BSR set to: 0
 29287                           ;usb_device.c: 2641: else;usb_device.c: 2642: {;usb_device.c: 2643: if(lastDTS == 0)
 29288  009D44  5002               	movf	USBCtrlTrfInHandler@lastDTS^0,w,c
 29289  009D46  A4D8               	btfss	status,2,c
 29290  009D48  EFA8  F04E         	goto	u11831
 29291  009D4C  EFAA  F04E         	goto	u11830
 29292  009D50                     u11831:
 29293  009D50  EFB8  F04E         	goto	l11775
 29294  009D54                     u11830:
 29295  009D54                     
 29296                           ; BSR set to: 0
 29297                           ;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 29298  009D54  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29299  009D58  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29300  009D5C  0E48               	movlw	72
 29301  009D5E  6EDF               	movwf	indf2,c
 29302  009D60                     
 29303                           ; BSR set to: 0
 29304                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29305  009D60  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29306  009D64  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29307  009D68  0E00               	movlw	0
 29308  009D6A  8EDB               	bsf	plusw2,7,c
 29309                           
 29310                           ;usb_device.c: 2647: }
 29311  009D6C  EFD2  F04E         	goto	l550
 29312  009D70                     l11775:
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;usb_device.c: 2648: else;usb_device.c: 2649: {;usb_device.c: 2650: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 29316  009D70  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29317  009D74  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29318  009D78  0E08               	movlw	8
 29319  009D7A  6EDF               	movwf	indf2,c
 29320  009D7C                     
 29321                           ; BSR set to: 0
 29322                           ;usb_device.c: 2651: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29323  009D7C  C0BA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29324  009D80  C0BB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29325  009D84  0E00               	movlw	0
 29326  009D86  8EDB               	bsf	plusw2,7,c
 29327  009D88  EFD2  F04E         	goto	l550
 29328  009D8C                     l542:
 29329                           
 29330                           ; BSR set to: 0
 29331                           ;usb_device.c: 2655: else;usb_device.c: 2656: {;usb_device.c: 2660: if(outPipes[0].info.
      +                          bits.busy == 1)
 29332  009D8C  0101               	movlb	1	; () banked
 29333  009D8E  AF3B               	btfss	(_outPipes+3)& (0+255),7,b
 29334  009D90  EFCC  F04E         	goto	u11841
 29335  009D94  EFCE  F04E         	goto	u11840
 29336  009D98                     u11841:
 29337  009D98  EFCF  F04E         	goto	l11781
 29338  009D9C                     u11840:
 29339  009D9C                     
 29340                           ; BSR set to: 1
 29341                           ;usb_device.c: 2665: };usb_device.c: 2666: outPipes[0].info.bits.busy = 0;
 29342  009D9C  9F3B               	bcf	(_outPipes+3)& (0+255),7,b
 29343  009D9E                     l11781:
 29344                           
 29345                           ; BSR set to: 1
 29346                           ;usb_device.c: 2667: };usb_device.c: 2669: controlTransferState = 0;
 29347  009D9E  0E00               	movlw	0
 29348  009DA0  0100               	movlb	0	; () banked
 29349  009DA2  6FE0               	movwf	_controlTransferState& (0+255),b
 29350  009DA4                     l550:
 29351                           
 29352                           ; BSR set to: 0
 29353  009DA4  0012               	return		;funcret
 29354  009DA6                     __end_of_USBCtrlTrfInHandler:
 29355                           	callstack 0
 29356                           
 29357 ;; *************** function _USBCtrlTrfTxService *****************
 29358 ;; Defined at:
 29359 ;;		line 1775 in file "usb/usb_device.c"
 29360 ;; Parameters:    Size  Location     Type
 29361 ;;		None
 29362 ;; Auto vars:     Size  Location     Type
 29363 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29364 ;; Return value:  Size  Location     Type
 29365 ;;                  1    wreg      void 
 29366 ;; Registers used:
 29367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29368 ;; Tracked objects:
 29369 ;;		On entry : 0/0
 29370 ;;		On exit  : 0/0
 29371 ;;		Unchanged: 0/0
 29372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29377 ;;Total ram usage:        1 bytes
 29378 ;; Hardware stack levels used: 1
 29379 ;; Hardware stack levels required when called: 1
 29380 ;; This function calls:
 29381 ;;		Nothing
 29382 ;; This function is called by:
 29383 ;;		_USBCtrlEPAllowDataStage
 29384 ;;		_USBCtrlTrfInHandler
 29385 ;; This function uses a non-reentrant model
 29386 ;;
 29387                           
 29388                           	psect	text140
 29389  009B7C                     __ptext140:
 29390                           	callstack 0
 29391  009B7C                     _USBCtrlTrfTxService:
 29392                           	callstack 24
 29393  009B7C                     
 29394                           ;usb_device.c: 1777: uint8_t byteToSend;;usb_device.c: 1781: byteToSend = 8;
 29395  009B7C  0E08               	movlw	8
 29396  009B7E  6E01               	movwf	USBCtrlTrfTxService@byteToSend^0,c
 29397  009B80                     
 29398                           ;usb_device.c: 1782: if(inPipes[0].wCount.Val < (uint8_t)8)
 29399  009B80  0100               	movlb	0	; () banked
 29400  009B82  51B9               	movf	(_inPipes+5)& (0+255),w,b
 29401  009B84  E107               	bnz	u8361
 29402  009B86  0E08               	movlw	8
 29403  009B88  5DB8               	subwf	(_inPipes+4)& (0+255),w,b
 29404  009B8A  B0D8               	btfsc	status,0,c
 29405  009B8C  EFCA  F04D         	goto	u8361
 29406  009B90  EFCC  F04D         	goto	u8360
 29407  009B94                     u8361:
 29408  009B94  EFE4  F04D         	goto	l9393
 29409  009B98                     u8360:
 29410  009B98                     
 29411                           ; BSR set to: 0
 29412                           ;usb_device.c: 1783: {;usb_device.c: 1784: byteToSend = inPipes[0].wCount.Val;
 29413  009B98  C0B8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 29414  009B9C                     
 29415                           ; BSR set to: 0
 29416                           ;usb_device.c: 1791: if(shortPacketStatus == 0)
 29417  009B9C  51E1               	movf	_shortPacketStatus& (0+255),w,b
 29418  009B9E  A4D8               	btfss	status,2,c
 29419  009BA0  EFD4  F04D         	goto	u8371
 29420  009BA4  EFD6  F04D         	goto	u8370
 29421  009BA8                     u8371:
 29422  009BA8  EFDA  F04D         	goto	l9389
 29423  009BAC                     u8370:
 29424  009BAC                     
 29425                           ; BSR set to: 0
 29426                           ;usb_device.c: 1792: {;usb_device.c: 1793: shortPacketStatus = 1;
 29427  009BAC  0E01               	movlw	1
 29428  009BAE  6FE1               	movwf	_shortPacketStatus& (0+255),b
 29429                           
 29430                           ;usb_device.c: 1794: }
 29431  009BB0  EFE4  F04D         	goto	l9393
 29432  009BB4                     l9389:
 29433                           
 29434                           ; BSR set to: 0
 29435                           ;usb_device.c: 1795: else if(shortPacketStatus == 1)
 29436  009BB4  05E1               	decf	_shortPacketStatus& (0+255),w,b
 29437  009BB6  A4D8               	btfss	status,2,c
 29438  009BB8  EFE0  F04D         	goto	u8381
 29439  009BBC  EFE2  F04D         	goto	u8380
 29440  009BC0                     u8381:
 29441  009BC0  EFE4  F04D         	goto	l9393
 29442  009BC4                     u8380:
 29443  009BC4                     
 29444                           ; BSR set to: 0
 29445                           ;usb_device.c: 1796: {;usb_device.c: 1797: shortPacketStatus = 2;
 29446  009BC4  0E02               	movlw	2
 29447  009BC6  6FE1               	movwf	_shortPacketStatus& (0+255),b
 29448  009BC8                     l9393:
 29449                           
 29450                           ; BSR set to: 0
 29451                           ;usb_device.c: 1798: };usb_device.c: 1799: };usb_device.c: 1803: inPipes[0].wCount.Val -
      +                          = byteToSend;
 29452  009BC8  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 29453  009BCA  5FB8               	subwf	(_inPipes+4)& (0+255),f,b
 29454  009BCC  0E00               	movlw	0
 29455  009BCE  5BB9               	subwfb	(_inPipes+5)& (0+255),f,b
 29456  009BD0                     
 29457                           ; BSR set to: 0
 29458                           ;usb_device.c: 1808: pBDTEntryIn[0]->CNT = byteToSend;
 29459  009BD0  EE20 F001          	lfsr	2,1
 29460  009BD4  51BA               	movf	_pBDTEntryIn& (0+255),w,b
 29461  009BD6  26D9               	addwf	fsr2l,f,c
 29462  009BD8  51BB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29463  009BDA  22DA               	addwfc	fsr2h,f,c
 29464  009BDC  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29465  009BE0                     
 29466                           ; BSR set to: 0
 29467                           ;usb_device.c: 1812: pDst = ( uint8_t*)CtrlTrfData;
 29468  009BE0  0E38               	movlw	56
 29469  009BE2  0101               	movlb	1	; () banked
 29470  009BE4  6F8A               	movwf	_pDst& (0+255),b
 29471  009BE6  0E04               	movlw	4
 29472  009BE8  6F8B               	movwf	(_pDst+1)& (0+255),b
 29473  009BEA                     
 29474                           ; BSR set to: 1
 29475                           ;usb_device.c: 1813: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29476  009BEA  0100               	movlb	0	; () banked
 29477  009BEC  B1B7               	btfsc	(_inPipes+3)& (0+255),0,b
 29478  009BEE  EFFB  F04D         	goto	u8391
 29479  009BF2  EFFD  F04D         	goto	u8390
 29480  009BF6                     u8391:
 29481  009BF6  EF41  F04E         	goto	l9421
 29482  009BFA                     u8390:
 29483  009BFA  EF1B  F04E         	goto	l9411
 29484  009BFE                     l9403:
 29485                           
 29486                           ;usb_device.c: 1816: {;usb_device.c: 1817: *pDst++ = *inPipes[0].pSrc.bRom++;
 29487  009BFE  C0B4  FFF6         	movff	_inPipes,tblptrl
 29488  009C02  C0B5  FFF7         	movff	_inPipes+1,tblptrh
 29489  009C06  6AF8               	clrf	tblptru,c
 29490  009C08  C18A  FFD9         	movff	_pDst,fsr2l
 29491  009C0C  C18B  FFDA         	movff	_pDst+1,fsr2h
 29492  009C10  0E0E               	movlw	(high __ramtop+-1)
 29493  009C12  64F7               	cpfsgt	tblptrh,c
 29494  009C14  D003               	bra	u8407
 29495  009C16  0008               	tblrd		*
 29496  009C18  50F5               	movf	tablat,w,c
 29497  009C1A  D005               	bra	u8400
 29498  009C1C                     u8407:
 29499  009C1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 29500  009C20  CFF7 FFEA          	movff	tblptrh,fsr0h
 29501  009C24  50EF               	movf	indf0,w,c
 29502  009C26                     u8400:
 29503  009C26  6EDF               	movwf	indf2,c
 29504  009C28  0100               	movlb	0	; () banked
 29505  009C2A  4BB4               	infsnz	_inPipes& (0+255),f,b
 29506  009C2C  2BB5               	incf	(_inPipes+1)& (0+255),f,b
 29507  009C2E                     
 29508                           ; BSR set to: 0
 29509  009C2E  0101               	movlb	1	; () banked
 29510  009C30  4B8A               	infsnz	_pDst& (0+255),f,b
 29511  009C32  2B8B               	incf	(_pDst+1)& (0+255),f,b
 29512  009C34                     
 29513                           ; BSR set to: 1
 29514                           ;usb_device.c: 1818: byteToSend--;
 29515  009C34  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 29516  009C36                     l9411:
 29517  009C36  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 29518  009C38  A4D8               	btfss	status,2,c
 29519  009C3A  EF21  F04E         	goto	u8411
 29520  009C3E  EF23  F04E         	goto	u8410
 29521  009C42                     u8411:
 29522  009C42  EFFF  F04D         	goto	l9403
 29523  009C46                     u8410:
 29524  009C46  EF49  F04E         	goto	l455
 29525  009C4A                     l9413:
 29526                           
 29527                           ;usb_device.c: 1824: {;usb_device.c: 1825: *pDst++ = *inPipes[0].pSrc.bRam++;
 29528  009C4A  C0B4  FFF6         	movff	_inPipes,tblptrl
 29529  009C4E  C0B5  FFF7         	movff	_inPipes+1,tblptrh
 29530  009C52  6AF8               	clrf	tblptru,c
 29531  009C54  C18A  FFD9         	movff	_pDst,fsr2l
 29532  009C58  C18B  FFDA         	movff	_pDst+1,fsr2h
 29533  009C5C  0E0E               	movlw	(high __ramtop+-1)
 29534  009C5E  64F7               	cpfsgt	tblptrh,c
 29535  009C60  D003               	bra	u8427
 29536  009C62  0008               	tblrd		*
 29537  009C64  50F5               	movf	tablat,w,c
 29538  009C66  D005               	bra	u8420
 29539  009C68                     u8427:
 29540  009C68  CFF6 FFE9          	movff	tblptrl,fsr0l
 29541  009C6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 29542  009C70  50EF               	movf	indf0,w,c
 29543  009C72                     u8420:
 29544  009C72  6EDF               	movwf	indf2,c
 29545  009C74  0100               	movlb	0	; () banked
 29546  009C76  4BB4               	infsnz	_inPipes& (0+255),f,b
 29547  009C78  2BB5               	incf	(_inPipes+1)& (0+255),f,b
 29548  009C7A                     
 29549                           ; BSR set to: 0
 29550  009C7A  0101               	movlb	1	; () banked
 29551  009C7C  4B8A               	infsnz	_pDst& (0+255),f,b
 29552  009C7E  2B8B               	incf	(_pDst+1)& (0+255),f,b
 29553  009C80                     
 29554                           ; BSR set to: 1
 29555                           ;usb_device.c: 1826: byteToSend--;
 29556  009C80  0601               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 29557  009C82                     l9421:
 29558  009C82  5001               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 29559  009C84  A4D8               	btfss	status,2,c
 29560  009C86  EF47  F04E         	goto	u8431
 29561  009C8A  EF49  F04E         	goto	u8430
 29562  009C8E                     u8431:
 29563  009C8E  EF25  F04E         	goto	l9413
 29564  009C92                     u8430:
 29565  009C92                     l455:
 29566  009C92  0012               	return		;funcret
 29567  009C94                     __end_of_USBCtrlTrfTxService:
 29568                           	callstack 0
 29569                           
 29570 ;; *************** function _InitTimer *****************
 29571 ;; Defined at:
 29572 ;;		line 90 in file "main.c"
 29573 ;; Parameters:    Size  Location     Type
 29574 ;;		None
 29575 ;; Auto vars:     Size  Location     Type
 29576 ;;		None
 29577 ;; Return value:  Size  Location     Type
 29578 ;;                  1    wreg      void 
 29579 ;; Registers used:
 29580 ;;		wreg, status,2
 29581 ;; Tracked objects:
 29582 ;;		On entry : 0/0
 29583 ;;		On exit  : 0/0
 29584 ;;		Unchanged: 0/0
 29585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29590 ;;Total ram usage:        0 bytes
 29591 ;; Hardware stack levels used: 1
 29592 ;; Hardware stack levels required when called: 1
 29593 ;; This function calls:
 29594 ;;		Nothing
 29595 ;; This function is called by:
 29596 ;;		_main
 29597 ;; This function uses a non-reentrant model
 29598 ;;
 29599                           
 29600                           	psect	text141
 29601  00D566                     __ptext141:
 29602                           	callstack 0
 29603  00D566                     _InitTimer:
 29604                           	callstack 29
 29605  00D566                     
 29606                           ;main.c: 93: T0CONbits.T08BIT = 1;
 29607  00D566  8CD5               	bsf	213,6,c	;volatile
 29608                           
 29609                           ;main.c: 94: T0CONbits.T0CS = 0;
 29610  00D568  9AD5               	bcf	213,5,c	;volatile
 29611                           
 29612                           ;main.c: 95: T0CONbits.T0PS0 = 1;
 29613  00D56A  80D5               	bsf	213,0,c	;volatile
 29614                           
 29615                           ;main.c: 96: T0CONbits.T0PS1 = 0;
 29616  00D56C  92D5               	bcf	213,1,c	;volatile
 29617                           
 29618                           ;main.c: 97: T0CONbits.T0PS2 = 1;
 29619  00D56E  84D5               	bsf	213,2,c	;volatile
 29620                           
 29621                           ;main.c: 98: T0CONbits.PSA = 0;
 29622  00D570  96D5               	bcf	213,3,c	;volatile
 29623  00D572                     
 29624                           ;main.c: 100: TMR0L = 0;
 29625  00D572  0E00               	movlw	0
 29626  00D574  6ED6               	movwf	214,c	;volatile
 29627  00D576                     
 29628                           ;main.c: 101: T0CONbits.TMR0ON = 1;
 29629  00D576  8ED5               	bsf	213,7,c	;volatile
 29630  00D578                     
 29631                           ;main.c: 104: RCONbits.IPEN = 1;
 29632  00D578  8ED0               	bsf	208,7,c	;volatile
 29633  00D57A                     
 29634                           ;main.c: 105: INTCONbits.GIE = 1;
 29635  00D57A  8EF2               	bsf	242,7,c	;volatile
 29636  00D57C                     
 29637                           ;main.c: 106: INTCONbits.PEIE = 1;
 29638  00D57C  8CF2               	bsf	242,6,c	;volatile
 29639  00D57E                     
 29640                           ;main.c: 109: INTCONbits.TMR0IE = 1;
 29641  00D57E  8AF2               	bsf	242,5,c	;volatile
 29642  00D580                     
 29643                           ;main.c: 110: INTCON2bits.TMR0IP = 1;
 29644  00D580  84F1               	bsf	241,2,c	;volatile
 29645  00D582  0012               	return		;funcret
 29646  00D584                     __end_of_InitTimer:
 29647                           	callstack 0
 29648                           
 29649 ;; *************** function _Board_initialize *****************
 29650 ;; Defined at:
 29651 ;;		line 63 in file "main.c"
 29652 ;; Parameters:    Size  Location     Type
 29653 ;;		None
 29654 ;; Auto vars:     Size  Location     Type
 29655 ;;		None
 29656 ;; Return value:  Size  Location     Type
 29657 ;;                  1    wreg      void 
 29658 ;; Registers used:
 29659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29660 ;; Tracked objects:
 29661 ;;		On entry : 0/0
 29662 ;;		On exit  : 0/0
 29663 ;;		Unchanged: 0/0
 29664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29669 ;;Total ram usage:        0 bytes
 29670 ;; Hardware stack levels used: 1
 29671 ;; Hardware stack levels required when called: 9
 29672 ;; This function calls:
 29673 ;;		_LED_Enable
 29674 ;;		_Linear_regression_init
 29675 ;;		_atcommand_init
 29676 ;;		_buffer_init
 29677 ;;		_i2c_init
 29678 ;;		_led_init
 29679 ;;		_nvm_init
 29680 ;;		_sensMeasure_init
 29681 ;;		_sens_ZeroCalib_init
 29682 ;;		_sens_autoCalib_init
 29683 ;; This function is called by:
 29684 ;;		_main
 29685 ;; This function uses a non-reentrant model
 29686 ;;
 29687                           
 29688                           	psect	text142
 29689  00C5E0                     __ptext142:
 29690                           	callstack 0
 29691  00C5E0                     _Board_initialize:
 29692                           	callstack 21
 29693  00C5E0                     
 29694                           ;main.c: 65: ANCON0 = 0xFF;
 29695  00C5E0  010F               	movlb	15	; () banked
 29696  00C5E2  6948               	setf	72,b	;volatile
 29697                           
 29698                           ;main.c: 66: ANCON1 = 0xFF;
 29699  00C5E4  6949               	setf	73,b	;volatile
 29700  00C5E6                     
 29701                           ; BSR set to: 15
 29702                           ;main.c: 68: LED_Enable(LED_RED);
 29703  00C5E6  0E01               	movlw	1
 29704  00C5E8  EC0C  F069         	call	_LED_Enable
 29705                           
 29706                           ;main.c: 69: LED_Enable(LED_GREEN);
 29707  00C5EC  0E02               	movlw	2
 29708  00C5EE  EC0C  F069         	call	_LED_Enable
 29709  00C5F2                     
 29710                           ;main.c: 71: g_led_status.seq = LED_INIT;
 29711  00C5F2  0E00               	movlw	0
 29712  00C5F4  0100               	movlb	0	; () banked
 29713  00C5F6  6FC0               	movwf	_g_led_status& (0+255),b
 29714  00C5F8                     
 29715                           ; BSR set to: 0
 29716                           ;main.c: 72: g_atcommand.seq = AT_INIT;
 29717  00C5F8  0E00               	movlw	0
 29718  00C5FA  0105               	movlb	5	; () banked
 29719  00C5FC  6F00               	movwf	_g_atcommand& (0+255),b
 29720  00C5FE                     
 29721                           ; BSR set to: 5
 29722                           ;main.c: 73: g_sens_measure.seq = SENS_INIT;
 29723  00C5FE  0E00               	movlw	0
 29724  00C600  0101               	movlb	1	; () banked
 29725  00C602  6F40               	movwf	_g_sens_measure& (0+255),b
 29726  00C604                     
 29727                           ; BSR set to: 1
 29728                           ;main.c: 74: g_nvm.status = NVM_INIT_NONE;
 29729  00C604  0E00               	movlw	0
 29730  00C606  6F90               	movwf	_g_nvm& (0+255),b
 29731                           
 29732                           ;main.c: 76: led_init();
 29733  00C608  EC30  F065         	call	_led_init	;wreg free
 29734  00C60C                     
 29735                           ;main.c: 77: i2c_init(I2C_100kHz);
 29736  00C60C  0E00               	movlw	0
 29737  00C60E  ECCA  F067         	call	_i2c_init
 29738  00C612                     
 29739                           ;main.c: 78: buffer_init(&g_usb_queue);
 29740  00C612  0E40               	movlw	low _g_usb_queue
 29741  00C614  6E01               	movwf	buffer_init@queue^0,c
 29742  00C616  0E04               	movlw	high _g_usb_queue
 29743  00C618  6E02               	movwf	(buffer_init@queue+1)^0,c
 29744  00C61A  EC6C  F069         	call	_buffer_init	;wreg free
 29745  00C61E                     
 29746                           ;main.c: 80: nvm_init();
 29747  00C61E  ECC1  F056         	call	_nvm_init	;wreg free
 29748  00C622                     
 29749                           ;main.c: 81: sens_ZeroCalib_init();
 29750  00C622  ECE0  F06A         	call	_sens_ZeroCalib_init	;wreg free
 29751  00C626                     
 29752                           ;main.c: 82: sensMeasure_init();
 29753  00C626  EC5F  F056         	call	_sensMeasure_init	;wreg free
 29754  00C62A                     
 29755                           ;main.c: 84: atcommand_init();
 29756  00C62A  EC27  F06B         	call	_atcommand_init	;wreg free
 29757  00C62E                     
 29758                           ;main.c: 85: Linear_regression_init(&g_linear_reg);
 29759  00C62E  0E00               	movlw	low _g_linear_reg
 29760  00C630  6E01               	movwf	Linear_regression_init@p^0,c
 29761  00C632  0E03               	movlw	high _g_linear_reg
 29762  00C634  6E02               	movwf	(Linear_regression_init@p+1)^0,c
 29763  00C636  ECC8  F04A         	call	_Linear_regression_init	;wreg free
 29764  00C63A                     
 29765                           ;main.c: 86: sens_autoCalib_init();
 29766  00C63A  ECDA  F05E         	call	_sens_autoCalib_init	;wreg free
 29767  00C63E                     
 29768                           ;main.c: 87: g_usb_state = USB_NONE;
 29769  00C63E  0E00               	movlw	0
 29770  00C640  0100               	movlb	0	; () banked
 29771  00C642  6FD2               	movwf	_g_usb_state& (0+255),b
 29772  00C644                     
 29773                           ; BSR set to: 0
 29774  00C644  0012               	return		;funcret
 29775  00C646                     __end_of_Board_initialize:
 29776                           	callstack 0
 29777                           
 29778 ;; *************** function _sens_autoCalib_init *****************
 29779 ;; Defined at:
 29780 ;;		line 45 in file "app_sens_autoCalibration.c"
 29781 ;; Parameters:    Size  Location     Type
 29782 ;;		None
 29783 ;; Auto vars:     Size  Location     Type
 29784 ;;		None
 29785 ;; Return value:  Size  Location     Type
 29786 ;;                  1    wreg      void 
 29787 ;; Registers used:
 29788 ;;		wreg, status,2
 29789 ;; Tracked objects:
 29790 ;;		On entry : 0/0
 29791 ;;		On exit  : 0/0
 29792 ;;		Unchanged: 0/0
 29793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29798 ;;Total ram usage:        0 bytes
 29799 ;; Hardware stack levels used: 1
 29800 ;; Hardware stack levels required when called: 1
 29801 ;; This function calls:
 29802 ;;		Nothing
 29803 ;; This function is called by:
 29804 ;;		_Board_initialize
 29805 ;; This function uses a non-reentrant model
 29806 ;;
 29807                           
 29808                           	psect	text143
 29809  00BDB4                     __ptext143:
 29810                           	callstack 0
 29811  00BDB4                     _sens_autoCalib_init:
 29812                           	callstack 28
 29813  00BDB4                     
 29814                           ;app_sens_autoCalibration.c: 47: g_sens_autoCalib.Seq_autoCal = AUTO_CALIB_INIT;
 29815  00BDB4  0E00               	movlw	0
 29816  00BDB6  0100               	movlb	0	; () banked
 29817  00BDB8  6FE3               	movwf	_g_sens_autoCalib& (0+255),b	;volatile
 29818                           
 29819                           ;app_sens_autoCalibration.c: 48: g_sens_autoCalib.Seq_slpSet = SLOPE_SET_INIT;
 29820  00BDBA  0E00               	movlw	0
 29821  00BDBC  6FE4               	movwf	(_g_sens_autoCalib+1)& (0+255),b	;volatile
 29822                           
 29823                           ;app_sens_autoCalibration.c: 49: g_autoCal_cnt = 0;
 29824  00BDBE  0E00               	movlw	0
 29825  00BDC0  0101               	movlb	1	; () banked
 29826  00BDC2  6F64               	movwf	_g_autoCal_cnt& (0+255),b	;volatile
 29827  00BDC4  0E00               	movlw	0
 29828  00BDC6  6F65               	movwf	(_g_autoCal_cnt+1)& (0+255),b	;volatile
 29829  00BDC8  0E00               	movlw	0
 29830  00BDCA  6F66               	movwf	(_g_autoCal_cnt+2)& (0+255),b	;volatile
 29831  00BDCC  0E00               	movlw	0
 29832  00BDCE  6F67               	movwf	(_g_autoCal_cnt+3)& (0+255),b	;volatile
 29833                           
 29834                           ;app_sens_autoCalibration.c: 50: g_slpSet_cnt = 0;
 29835  00BDD0  0E00               	movlw	0
 29836  00BDD2  6F60               	movwf	_g_slpSet_cnt& (0+255),b	;volatile
 29837  00BDD4  0E00               	movlw	0
 29838  00BDD6  6F61               	movwf	(_g_slpSet_cnt+1)& (0+255),b	;volatile
 29839  00BDD8  0E00               	movlw	0
 29840  00BDDA  6F62               	movwf	(_g_slpSet_cnt+2)& (0+255),b	;volatile
 29841  00BDDC  0E00               	movlw	0
 29842  00BDDE  6F63               	movwf	(_g_slpSet_cnt+3)& (0+255),b	;volatile
 29843                           
 29844                           ;app_sens_autoCalibration.c: 52: g_sens_autoCalib.slpSet_en = OFF;
 29845  00BDE0  0E00               	movlw	0
 29846  00BDE2  0100               	movlb	0	; () banked
 29847  00BDE4  6FE5               	movwf	(_g_sens_autoCalib+2)& (0+255),b	;volatile
 29848                           
 29849                           ;app_sens_autoCalibration.c: 53: g_sens_autoCalib.led_slpSet = OFF;
 29850  00BDE6  0E00               	movlw	0
 29851  00BDE8  6FE6               	movwf	(_g_sens_autoCalib+3)& (0+255),b	;volatile
 29852                           
 29853                           ;app_sens_autoCalibration.c: 55: g_sens_autoCalib.slope_min = 0.0f;
 29854  00BDEA  0E00               	movlw	0
 29855  00BDEC  6FE7               	movwf	(_g_sens_autoCalib+4)& (0+255),b	;volatile
 29856  00BDEE  0E00               	movlw	0
 29857  00BDF0  6FE8               	movwf	(_g_sens_autoCalib+5)& (0+255),b	;volatile
 29858  00BDF2  0E00               	movlw	0
 29859  00BDF4  6FE9               	movwf	(_g_sens_autoCalib+6)& (0+255),b	;volatile
 29860  00BDF6  0E00               	movlw	0
 29861  00BDF8  6FEA               	movwf	(_g_sens_autoCalib+7)& (0+255),b	;volatile
 29862                           
 29863                           ;app_sens_autoCalibration.c: 56: g_sens_autoCalib.slope_max = 0.0f;
 29864  00BDFA  0E00               	movlw	0
 29865  00BDFC  6FEB               	movwf	(_g_sens_autoCalib+8)& (0+255),b	;volatile
 29866  00BDFE  0E00               	movlw	0
 29867  00BE00  6FEC               	movwf	(_g_sens_autoCalib+9)& (0+255),b	;volatile
 29868  00BE02  0E00               	movlw	0
 29869  00BE04  6FED               	movwf	(_g_sens_autoCalib+10)& (0+255),b	;volatile
 29870  00BE06  0E00               	movlw	0
 29871  00BE08  6FEE               	movwf	(_g_sens_autoCalib+11)& (0+255),b	;volatile
 29872                           
 29873                           ;app_sens_autoCalibration.c: 58: g_sens_autoCalib.sumZero_uV = 0.0f;
 29874  00BE0A  0E00               	movlw	0
 29875  00BE0C  6FF0               	movwf	(_g_sens_autoCalib+13)& (0+255),b	;volatile
 29876  00BE0E  0E00               	movlw	0
 29877  00BE10  6FF1               	movwf	(_g_sens_autoCalib+14)& (0+255),b	;volatile
 29878  00BE12  0E00               	movlw	0
 29879  00BE14  6FF2               	movwf	(_g_sens_autoCalib+15)& (0+255),b	;volatile
 29880  00BE16  0E00               	movlw	0
 29881  00BE18  6FF3               	movwf	(_g_sens_autoCalib+16)& (0+255),b	;volatile
 29882                           
 29883                           ;app_sens_autoCalibration.c: 59: g_sens_autoCalib.avgZero_uV = 0.0f;
 29884  00BE1A  0E00               	movlw	0
 29885  00BE1C  6FF4               	movwf	(_g_sens_autoCalib+17)& (0+255),b	;volatile
 29886  00BE1E  0E00               	movlw	0
 29887  00BE20  6FF5               	movwf	(_g_sens_autoCalib+18)& (0+255),b	;volatile
 29888  00BE22  0E00               	movlw	0
 29889  00BE24  6FF6               	movwf	(_g_sens_autoCalib+19)& (0+255),b	;volatile
 29890  00BE26  0E00               	movlw	0
 29891  00BE28  6FF7               	movwf	(_g_sens_autoCalib+20)& (0+255),b	;volatile
 29892                           
 29893                           ;app_sens_autoCalibration.c: 61: g_sens_autoCalib.chk_cnt = 0;
 29894  00BE2A  0E00               	movlw	0
 29895  00BE2C  6FEF               	movwf	(_g_sens_autoCalib+12)& (0+255),b	;volatile
 29896                           
 29897                           ;app_sens_autoCalibration.c: 62: g_sens_autoCalib.sft_ppm = 0.0f;
 29898  00BE2E  0E00               	movlw	0
 29899  00BE30  6FF8               	movwf	(_g_sens_autoCalib+21)& (0+255),b	;volatile
 29900  00BE32  0E00               	movlw	0
 29901  00BE34  6FF9               	movwf	(_g_sens_autoCalib+22)& (0+255),b	;volatile
 29902  00BE36  0E00               	movlw	0
 29903  00BE38  6FFA               	movwf	(_g_sens_autoCalib+23)& (0+255),b	;volatile
 29904  00BE3A  0E00               	movlw	0
 29905  00BE3C  6FFB               	movwf	(_g_sens_autoCalib+24)& (0+255),b	;volatile
 29906  00BE3E                     
 29907                           ; BSR set to: 0
 29908  00BE3E  0012               	return		;funcret
 29909  00BE40                     __end_of_sens_autoCalib_init:
 29910                           	callstack 0
 29911                           
 29912 ;; *************** function _sens_ZeroCalib_init *****************
 29913 ;; Defined at:
 29914 ;;		line 33 in file "app_sens_calibration.c"
 29915 ;; Parameters:    Size  Location     Type
 29916 ;;		None
 29917 ;; Auto vars:     Size  Location     Type
 29918 ;;		None
 29919 ;; Return value:  Size  Location     Type
 29920 ;;                  1    wreg      void 
 29921 ;; Registers used:
 29922 ;;		wreg, status,2
 29923 ;; Tracked objects:
 29924 ;;		On entry : 0/0
 29925 ;;		On exit  : 0/0
 29926 ;;		Unchanged: 0/0
 29927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29932 ;;Total ram usage:        0 bytes
 29933 ;; Hardware stack levels used: 1
 29934 ;; Hardware stack levels required when called: 1
 29935 ;; This function calls:
 29936 ;;		Nothing
 29937 ;; This function is called by:
 29938 ;;		_Board_initialize
 29939 ;; This function uses a non-reentrant model
 29940 ;;
 29941                           
 29942                           	psect	text144
 29943  00D5C0                     __ptext144:
 29944                           	callstack 0
 29945  00D5C0                     _sens_ZeroCalib_init:
 29946                           	callstack 28
 29947  00D5C0                     
 29948                           ;app_sens_calibration.c: 35: g_sens_calib.seq = CALIB_INIT;
 29949  00D5C0  0E00               	movlw	0
 29950  00D5C2  0101               	movlb	1	; () banked
 29951  00D5C4  6F84               	movwf	_g_sens_calib& (0+255),b
 29952                           
 29953                           ;app_sens_calibration.c: 36: g_sens_calib.zero_cal = 0;
 29954  00D5C6  0E00               	movlw	0
 29955  00D5C8  6F85               	movwf	(_g_sens_calib+1)& (0+255),b
 29956                           
 29957                           ;app_sens_calibration.c: 37: g_calib_count = 0;
 29958  00D5CA  0E00               	movlw	0
 29959  00D5CC  6F5C               	movwf	_g_calib_count& (0+255),b	;volatile
 29960  00D5CE  0E00               	movlw	0
 29961  00D5D0  6F5D               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
 29962  00D5D2  0E00               	movlw	0
 29963  00D5D4  6F5E               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
 29964  00D5D6  0E00               	movlw	0
 29965  00D5D8  6F5F               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
 29966  00D5DA                     
 29967                           ; BSR set to: 1
 29968  00D5DA  0012               	return		;funcret
 29969  00D5DC                     __end_of_sens_ZeroCalib_init:
 29970                           	callstack 0
 29971                           
 29972 ;; *************** function _sensMeasure_init *****************
 29973 ;; Defined at:
 29974 ;;		line 45 in file "app_sens_measure.c"
 29975 ;; Parameters:    Size  Location     Type
 29976 ;;		None
 29977 ;; Auto vars:     Size  Location     Type
 29978 ;;		None
 29979 ;; Return value:  Size  Location     Type
 29980 ;;                  1    wreg      void 
 29981 ;; Registers used:
 29982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29983 ;; Tracked objects:
 29984 ;;		On entry : 0/0
 29985 ;;		On exit  : 0/0
 29986 ;;		Unchanged: 0/0
 29987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29992 ;;Total ram usage:        0 bytes
 29993 ;; Hardware stack levels used: 1
 29994 ;; Hardware stack levels required when called: 3
 29995 ;; This function calls:
 29996 ;;		_Kalman_setEstimateError
 29997 ;;		_Kalman_setMeasurementError
 29998 ;;		_Set_KamanFilter_Sensitivity
 29999 ;; This function is called by:
 30000 ;;		_Board_initialize
 30001 ;; This function uses a non-reentrant model
 30002 ;;
 30003                           
 30004                           	psect	text145
 30005  00ACBE                     __ptext145:
 30006                           	callstack 0
 30007  00ACBE                     _sensMeasure_init:
 30008                           	callstack 26
 30009  00ACBE                     
 30010                           ;app_sens_measure.c: 47: g_large_counter = 0;
 30011  00ACBE  0E00               	movlw	0
 30012  00ACC0  0101               	movlb	1	; () banked
 30013  00ACC2  6F58               	movwf	_g_large_counter& (0+255),b	;volatile
 30014  00ACC4  0E00               	movlw	0
 30015  00ACC6  6F59               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
 30016  00ACC8  0E00               	movlw	0
 30017  00ACCA  6F5A               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
 30018  00ACCC  0E00               	movlw	0
 30019  00ACCE  6F5B               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
 30020                           
 30021                           ;app_sens_measure.c: 48: g_sens_measure.seq = SENS_INIT;
 30022  00ACD0  0E00               	movlw	0
 30023  00ACD2  6F40               	movwf	_g_sens_measure& (0+255),b
 30024                           
 30025                           ;app_sens_measure.c: 49: g_sens_measure.isInitDone = 0;
 30026  00ACD4  0E00               	movlw	0
 30027  00ACD6  6F43               	movwf	(_g_sens_measure+3)& (0+255),b
 30028                           
 30029                           ;app_sens_measure.c: 50: g_sens_measure.isGasSensor_Success = 0;
 30030  00ACD8  0E00               	movlw	0
 30031  00ACDA  6F44               	movwf	(_g_sens_measure+4)& (0+255),b
 30032                           
 30033                           ;app_sens_measure.c: 51: g_sens_measure.isTemp_Success = 0;
 30034  00ACDC  0E00               	movlw	0
 30035  00ACDE  6F45               	movwf	(_g_sens_measure+5)& (0+255),b
 30036                           
 30037                           ;app_sens_measure.c: 54: kalmanFilter._current_estimate = 0.0f;
 30038  00ACE0  0E00               	movlw	0
 30039  00ACE2  6FE5               	movwf	(_kalmanFilter+12)& (0+255),b
 30040  00ACE4  0E00               	movlw	0
 30041  00ACE6  6FE6               	movwf	(_kalmanFilter+13)& (0+255),b
 30042  00ACE8  0E00               	movlw	0
 30043  00ACEA  6FE7               	movwf	(_kalmanFilter+14)& (0+255),b
 30044  00ACEC  0E00               	movlw	0
 30045  00ACEE  6FE8               	movwf	(_kalmanFilter+15)& (0+255),b
 30046                           
 30047                           ;app_sens_measure.c: 55: kalmanFilter._err_estimate = 0.0f;
 30048  00ACF0  0E00               	movlw	0
 30049  00ACF2  6FDD               	movwf	(_kalmanFilter+4)& (0+255),b
 30050  00ACF4  0E00               	movlw	0
 30051  00ACF6  6FDE               	movwf	(_kalmanFilter+5)& (0+255),b
 30052  00ACF8  0E00               	movlw	0
 30053  00ACFA  6FDF               	movwf	(_kalmanFilter+6)& (0+255),b
 30054  00ACFC  0E00               	movlw	0
 30055  00ACFE  6FE0               	movwf	(_kalmanFilter+7)& (0+255),b
 30056                           
 30057                           ;app_sens_measure.c: 56: kalmanFilter._err_measure = 0.0f;
 30058  00AD00  0E00               	movlw	0
 30059  00AD02  6FD9               	movwf	_kalmanFilter& (0+255),b
 30060  00AD04  0E00               	movlw	0
 30061  00AD06  6FDA               	movwf	(_kalmanFilter+1)& (0+255),b
 30062  00AD08  0E00               	movlw	0
 30063  00AD0A  6FDB               	movwf	(_kalmanFilter+2)& (0+255),b
 30064  00AD0C  0E00               	movlw	0
 30065  00AD0E  6FDC               	movwf	(_kalmanFilter+3)& (0+255),b
 30066                           
 30067                           ;app_sens_measure.c: 57: kalmanFilter._kalman_gain = 0.0f;
 30068  00AD10  0E00               	movlw	0
 30069  00AD12  6FED               	movwf	(_kalmanFilter+20)& (0+255),b
 30070  00AD14  0E00               	movlw	0
 30071  00AD16  6FEE               	movwf	(_kalmanFilter+21)& (0+255),b
 30072  00AD18  0E00               	movlw	0
 30073  00AD1A  6FEF               	movwf	(_kalmanFilter+22)& (0+255),b
 30074  00AD1C  0E00               	movlw	0
 30075  00AD1E  6FF0               	movwf	(_kalmanFilter+23)& (0+255),b
 30076                           
 30077                           ;app_sens_measure.c: 58: kalmanFilter._last_estimate = 0.0f;
 30078  00AD20  0E00               	movlw	0
 30079  00AD22  6FE9               	movwf	(_kalmanFilter+16)& (0+255),b
 30080  00AD24  0E00               	movlw	0
 30081  00AD26  6FEA               	movwf	(_kalmanFilter+17)& (0+255),b
 30082  00AD28  0E00               	movlw	0
 30083  00AD2A  6FEB               	movwf	(_kalmanFilter+18)& (0+255),b
 30084  00AD2C  0E00               	movlw	0
 30085  00AD2E  6FEC               	movwf	(_kalmanFilter+19)& (0+255),b
 30086                           
 30087                           ;app_sens_measure.c: 59: kalmanFilter._q_process = 0.0f;
 30088  00AD30  0E00               	movlw	0
 30089  00AD32  6FE1               	movwf	(_kalmanFilter+8)& (0+255),b
 30090  00AD34  0E00               	movlw	0
 30091  00AD36  6FE2               	movwf	(_kalmanFilter+9)& (0+255),b
 30092  00AD38  0E00               	movlw	0
 30093  00AD3A  6FE3               	movwf	(_kalmanFilter+10)& (0+255),b
 30094  00AD3C  0E00               	movlw	0
 30095  00AD3E  6FE4               	movwf	(_kalmanFilter+11)& (0+255),b
 30096  00AD40                     
 30097                           ; BSR set to: 1
 30098                           ;app_sens_measure.c: 60: Kalman_setMeasurementError(&kalmanFilter, g_nvm.flash.KMf_e_mea
      +                          sure);
 30099  00AD40  0ED9               	movlw	low _kalmanFilter
 30100  00AD42  6E01               	movwf	Kalman_setMeasurementError@pObj^0,c
 30101  00AD44  0E01               	movlw	high _kalmanFilter
 30102  00AD46  6E02               	movwf	(Kalman_setMeasurementError@pObj+1)^0,c
 30103  00AD48  C1A9  F003         	movff	_g_nvm+25,Kalman_setMeasurementError@mea_e
 30104  00AD4C  C1AA  F004         	movff	_g_nvm+26,Kalman_setMeasurementError@mea_e+1
 30105  00AD50  C1AB  F005         	movff	_g_nvm+27,Kalman_setMeasurementError@mea_e+2
 30106  00AD54  C1AC  F006         	movff	_g_nvm+28,Kalman_setMeasurementError@mea_e+3
 30107  00AD58  ECEE  F06A         	call	_Kalman_setMeasurementError	;wreg free
 30108  00AD5C                     
 30109                           ;app_sens_measure.c: 61: Kalman_setEstimateError(&kalmanFilter, g_nvm.flash.KMF_e_estima
      +                          te);
 30110  00AD5C  0ED9               	movlw	low _kalmanFilter
 30111  00AD5E  6E01               	movwf	Kalman_setEstimateError@pObj^0,c
 30112  00AD60  0E01               	movlw	high _kalmanFilter
 30113  00AD62  6E02               	movwf	(Kalman_setEstimateError@pObj+1)^0,c
 30114  00AD64  C1AD  F003         	movff	_g_nvm+29,Kalman_setEstimateError@est_e
 30115  00AD68  C1AE  F004         	movff	_g_nvm+30,Kalman_setEstimateError@est_e+1
 30116  00AD6C  C1AF  F005         	movff	_g_nvm+31,Kalman_setEstimateError@est_e+2
 30117  00AD70  C1B0  F006         	movff	_g_nvm+32,Kalman_setEstimateError@est_e+3
 30118  00AD74  ECD1  F06A         	call	_Kalman_setEstimateError	;wreg free
 30119  00AD78                     
 30120                           ;app_sens_measure.c: 62: Set_KamanFilter_Sensitivity(g_nvm.flash.window_size);
 30121  00AD78  0101               	movlb	1	; () banked
 30122  00AD7A  5192               	movf	(_g_nvm+2)& (0+255),w,b
 30123  00AD7C  EC0F  F03C         	call	_Set_KamanFilter_Sensitivity
 30124  00AD80  0012               	return		;funcret
 30125  00AD82                     __end_of_sensMeasure_init:
 30126                           	callstack 0
 30127                           
 30128 ;; *************** function _Set_KamanFilter_Sensitivity *****************
 30129 ;; Defined at:
 30130 ;;		line 61 in file "filter.c"
 30131 ;; Parameters:    Size  Location     Type
 30132 ;;  e_level         1    wreg     enum E117
 30133 ;; Auto vars:     Size  Location     Type
 30134 ;;  e_level         1    6[COMRAM] enum E117
 30135 ;; Return value:  Size  Location     Type
 30136 ;;                  1    wreg      void 
 30137 ;; Registers used:
 30138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30139 ;; Tracked objects:
 30140 ;;		On entry : 0/0
 30141 ;;		On exit  : 0/0
 30142 ;;		Unchanged: 0/0
 30143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30148 ;;Total ram usage:        1 bytes
 30149 ;; Hardware stack levels used: 1
 30150 ;; Hardware stack levels required when called: 2
 30151 ;; This function calls:
 30152 ;;		_Kalman_setProcessNoise
 30153 ;; This function is called by:
 30154 ;;		_update_command
 30155 ;;		_sensMeasure_init
 30156 ;; This function uses a non-reentrant model
 30157 ;;
 30158                           
 30159                           	psect	text146
 30160  00781E                     __ptext146:
 30161                           	callstack 0
 30162  00781E                     _Set_KamanFilter_Sensitivity:
 30163                           	callstack 26
 30164                           
 30165                           ;incstack = 0
 30166                           ;Set_KamanFilter_Sensitivity@e_level stored from wreg
 30167  00781E  6E07               	movwf	Set_KamanFilter_Sensitivity@e_level^0,c
 30168  007820                     
 30169                           ;filter.c: 63: switch (e_level)
 30170  007820  EFC2  F03C         	goto	l11967
 30171  007824                     l11933:
 30172  007824  0E00               	movlw	0
 30173  007826  0101               	movlb	1	; () banked
 30174  007828  6F54               	movwf	_g_sensitivity& (0+255),b
 30175  00782A  0E00               	movlw	0
 30176  00782C  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30177  00782E  0E80               	movlw	128
 30178  007830  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30179  007832  0E3F               	movlw	63
 30180  007834  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30181  007836  EF01  F03D         	goto	l11969
 30182  00783A                     l11935:
 30183  00783A  0E66               	movlw	102
 30184  00783C  0101               	movlb	1	; () banked
 30185  00783E  6F54               	movwf	_g_sensitivity& (0+255),b
 30186  007840  0E66               	movlw	102
 30187  007842  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30188  007844  0E66               	movlw	102
 30189  007846  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30190  007848  0E3F               	movlw	63
 30191  00784A  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30192  00784C  EF01  F03D         	goto	l11969
 30193  007850                     l11937:
 30194  007850  0ECD               	movlw	205
 30195  007852  0101               	movlb	1	; () banked
 30196  007854  6F54               	movwf	_g_sensitivity& (0+255),b
 30197  007856  0ECC               	movlw	204
 30198  007858  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30199  00785A  0E4C               	movlw	76
 30200  00785C  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30201  00785E  0E3F               	movlw	63
 30202  007860  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30203  007862  EF01  F03D         	goto	l11969
 30204  007866                     l11939:
 30205  007866  0E33               	movlw	51
 30206  007868  0101               	movlb	1	; () banked
 30207  00786A  6F54               	movwf	_g_sensitivity& (0+255),b
 30208  00786C  0E33               	movlw	51
 30209  00786E  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30210  007870  0E33               	movlw	51
 30211  007872  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30212  007874  0E3F               	movlw	63
 30213  007876  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30214  007878  EF01  F03D         	goto	l11969
 30215  00787C                     l11941:
 30216  00787C  0E9A               	movlw	154
 30217  00787E  0101               	movlb	1	; () banked
 30218  007880  6F54               	movwf	_g_sensitivity& (0+255),b
 30219  007882  0E99               	movlw	153
 30220  007884  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30221  007886  0E19               	movlw	25
 30222  007888  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30223  00788A  0E3F               	movlw	63
 30224  00788C  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30225  00788E  EF01  F03D         	goto	l11969
 30226  007892                     l11943:
 30227  007892  0E00               	movlw	0
 30228  007894  0101               	movlb	1	; () banked
 30229  007896  6F54               	movwf	_g_sensitivity& (0+255),b
 30230  007898  0E00               	movlw	0
 30231  00789A  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30232  00789C  0E00               	movlw	0
 30233  00789E  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30234  0078A0  0E3F               	movlw	63
 30235  0078A2  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30236  0078A4  EF01  F03D         	goto	l11969
 30237  0078A8                     l11945:
 30238  0078A8  0ECD               	movlw	205
 30239  0078AA  0101               	movlb	1	; () banked
 30240  0078AC  6F54               	movwf	_g_sensitivity& (0+255),b
 30241  0078AE  0ECC               	movlw	204
 30242  0078B0  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30243  0078B2  0ECC               	movlw	204
 30244  0078B4  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30245  0078B6  0E3E               	movlw	62
 30246  0078B8  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30247  0078BA  EF01  F03D         	goto	l11969
 30248  0078BE                     l11947:
 30249  0078BE  0E33               	movlw	51
 30250  0078C0  0101               	movlb	1	; () banked
 30251  0078C2  6F54               	movwf	_g_sensitivity& (0+255),b
 30252  0078C4  0E33               	movlw	51
 30253  0078C6  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30254  0078C8  0EB3               	movlw	179
 30255  0078CA  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30256  0078CC  0E3E               	movlw	62
 30257  0078CE  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30258  0078D0  EF01  F03D         	goto	l11969
 30259  0078D4                     l11949:
 30260  0078D4  0E9A               	movlw	154
 30261  0078D6  0101               	movlb	1	; () banked
 30262  0078D8  6F54               	movwf	_g_sensitivity& (0+255),b
 30263  0078DA  0E99               	movlw	153
 30264  0078DC  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30265  0078DE  0E99               	movlw	153
 30266  0078E0  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30267  0078E2  0E3E               	movlw	62
 30268  0078E4  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30269  0078E6  EF01  F03D         	goto	l11969
 30270  0078EA                     l11951:
 30271  0078EA  0E00               	movlw	0
 30272  0078EC  0101               	movlb	1	; () banked
 30273  0078EE  6F54               	movwf	_g_sensitivity& (0+255),b
 30274  0078F0  0E00               	movlw	0
 30275  0078F2  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30276  0078F4  0E80               	movlw	128
 30277  0078F6  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30278  0078F8  0E3E               	movlw	62
 30279  0078FA  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30280  0078FC  EF01  F03D         	goto	l11969
 30281  007900                     l11953:
 30282  007900  0ECD               	movlw	205
 30283  007902  0101               	movlb	1	; () banked
 30284  007904  6F54               	movwf	_g_sensitivity& (0+255),b
 30285  007906  0ECC               	movlw	204
 30286  007908  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30287  00790A  0E4C               	movlw	76
 30288  00790C  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30289  00790E  0E3E               	movlw	62
 30290  007910  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30291  007912  EF01  F03D         	goto	l11969
 30292  007916                     l11955:
 30293  007916  0ECD               	movlw	205
 30294  007918  0101               	movlb	1	; () banked
 30295  00791A  6F54               	movwf	_g_sensitivity& (0+255),b
 30296  00791C  0ECC               	movlw	204
 30297  00791E  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30298  007920  0ECC               	movlw	204
 30299  007922  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30300  007924  0E3D               	movlw	61
 30301  007926  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30302  007928  EF01  F03D         	goto	l11969
 30303  00792C                     l11957:
 30304  00792C  0E0A               	movlw	10
 30305  00792E  0101               	movlb	1	; () banked
 30306  007930  6F54               	movwf	_g_sensitivity& (0+255),b
 30307  007932  0ED7               	movlw	215
 30308  007934  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30309  007936  0E23               	movlw	35
 30310  007938  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30311  00793A  0E3C               	movlw	60
 30312  00793C  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30313  00793E  EF01  F03D         	goto	l11969
 30314  007942                     l11959:
 30315  007942  0E6F               	movlw	111
 30316  007944  0101               	movlb	1	; () banked
 30317  007946  6F54               	movwf	_g_sensitivity& (0+255),b
 30318  007948  0E12               	movlw	18
 30319  00794A  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30320  00794C  0E83               	movlw	131
 30321  00794E  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30322  007950  0E3A               	movlw	58
 30323  007952  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30324  007954  EF01  F03D         	goto	l11969
 30325  007958                     l11961:
 30326  007958  0E17               	movlw	23
 30327  00795A  0101               	movlb	1	; () banked
 30328  00795C  6F54               	movwf	_g_sensitivity& (0+255),b
 30329  00795E  0EB7               	movlw	183
 30330  007960  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30331  007962  0ED1               	movlw	209
 30332  007964  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30333  007966  0E38               	movlw	56
 30334  007968  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30335  00796A  EF01  F03D         	goto	l11969
 30336  00796E                     l11963:
 30337  00796E  0ECD               	movlw	205
 30338  007970  0101               	movlb	1	; () banked
 30339  007972  6F54               	movwf	_g_sensitivity& (0+255),b
 30340  007974  0ECC               	movlw	204
 30341  007976  6F55               	movwf	(_g_sensitivity+1)& (0+255),b
 30342  007978  0ECC               	movlw	204
 30343  00797A  6F56               	movwf	(_g_sensitivity+2)& (0+255),b
 30344  00797C  0E3D               	movlw	61
 30345  00797E  6F57               	movwf	(_g_sensitivity+3)& (0+255),b
 30346  007980  EF01  F03D         	goto	l11969
 30347  007984                     l11967:
 30348  007984  5007               	movf	Set_KamanFilter_Sensitivity@e_level^0,w,c
 30349                           
 30350                           ; Switch size 1, requested type "simple"
 30351                           ; Number of cases is 15, Range of values is 1 to 15
 30352                           ; switch strategies available:
 30353                           ; Name         Instructions Cycles
 30354                           ; simple_byte           46    24 (average)
 30355                           ;	Chosen strategy is simple_byte
 30356  007986  0A01               	xorlw	1	; case 1
 30357  007988  B4D8               	btfsc	status,2,c
 30358  00798A  EF12  F03C         	goto	l11933
 30359  00798E  0A03               	xorlw	3	; case 2
 30360  007990  B4D8               	btfsc	status,2,c
 30361  007992  EF1D  F03C         	goto	l11935
 30362  007996  0A01               	xorlw	1	; case 3
 30363  007998  B4D8               	btfsc	status,2,c
 30364  00799A  EF28  F03C         	goto	l11937
 30365  00799E  0A07               	xorlw	7	; case 4
 30366  0079A0  B4D8               	btfsc	status,2,c
 30367  0079A2  EF33  F03C         	goto	l11939
 30368  0079A6  0A01               	xorlw	1	; case 5
 30369  0079A8  B4D8               	btfsc	status,2,c
 30370  0079AA  EF3E  F03C         	goto	l11941
 30371  0079AE  0A03               	xorlw	3	; case 6
 30372  0079B0  B4D8               	btfsc	status,2,c
 30373  0079B2  EF49  F03C         	goto	l11943
 30374  0079B6  0A01               	xorlw	1	; case 7
 30375  0079B8  B4D8               	btfsc	status,2,c
 30376  0079BA  EF54  F03C         	goto	l11945
 30377  0079BE  0A0F               	xorlw	15	; case 8
 30378  0079C0  B4D8               	btfsc	status,2,c
 30379  0079C2  EF5F  F03C         	goto	l11947
 30380  0079C6  0A01               	xorlw	1	; case 9
 30381  0079C8  B4D8               	btfsc	status,2,c
 30382  0079CA  EF6A  F03C         	goto	l11949
 30383  0079CE  0A03               	xorlw	3	; case 10
 30384  0079D0  B4D8               	btfsc	status,2,c
 30385  0079D2  EF75  F03C         	goto	l11951
 30386  0079D6  0A01               	xorlw	1	; case 11
 30387  0079D8  B4D8               	btfsc	status,2,c
 30388  0079DA  EF80  F03C         	goto	l11953
 30389  0079DE  0A07               	xorlw	7	; case 12
 30390  0079E0  B4D8               	btfsc	status,2,c
 30391  0079E2  EF8B  F03C         	goto	l11955
 30392  0079E6  0A01               	xorlw	1	; case 13
 30393  0079E8  B4D8               	btfsc	status,2,c
 30394  0079EA  EF96  F03C         	goto	l11957
 30395  0079EE  0A03               	xorlw	3	; case 14
 30396  0079F0  B4D8               	btfsc	status,2,c
 30397  0079F2  EFA1  F03C         	goto	l11959
 30398  0079F6  0A01               	xorlw	1	; case 15
 30399  0079F8  B4D8               	btfsc	status,2,c
 30400  0079FA  EFAC  F03C         	goto	l11961
 30401  0079FE  EFB7  F03C         	goto	l11963
 30402  007A02                     l11969:
 30403                           
 30404                           ; BSR set to: 1
 30405                           ;filter.c: 82: Kalman_setProcessNoise(&kalmanFilter,g_sensitivity);
 30406  007A02  0ED9               	movlw	low _kalmanFilter
 30407  007A04  6E01               	movwf	Kalman_setProcessNoise@pObj^0,c
 30408  007A06  0E01               	movlw	high _kalmanFilter
 30409  007A08  6E02               	movwf	(Kalman_setProcessNoise@pObj+1)^0,c
 30410  007A0A  C154  F003         	movff	_g_sensitivity,Kalman_setProcessNoise@q
 30411  007A0E  C155  F004         	movff	_g_sensitivity+1,Kalman_setProcessNoise@q+1
 30412  007A12  C156  F005         	movff	_g_sensitivity+2,Kalman_setProcessNoise@q+2
 30413  007A16  C157  F006         	movff	_g_sensitivity+3,Kalman_setProcessNoise@q+3
 30414  007A1A  ECC2  F06A         	call	_Kalman_setProcessNoise	;wreg free
 30415  007A1E  0012               	return		;funcret
 30416  007A20                     __end_of_Set_KamanFilter_Sensitivity:
 30417                           	callstack 0
 30418                           
 30419 ;; *************** function _Kalman_setProcessNoise *****************
 30420 ;; Defined at:
 30421 ;;		line 46 in file "filter.c"
 30422 ;; Parameters:    Size  Location     Type
 30423 ;;  pObj            2    0[COMRAM] PTR struct .
 30424 ;;		 -> kalmanFilter(24), 
 30425 ;;  q               4    2[COMRAM] float 
 30426 ;; Auto vars:     Size  Location     Type
 30427 ;;		None
 30428 ;; Return value:  Size  Location     Type
 30429 ;;                  1    wreg      void 
 30430 ;; Registers used:
 30431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30432 ;; Tracked objects:
 30433 ;;		On entry : 0/0
 30434 ;;		On exit  : 0/0
 30435 ;;		Unchanged: 0/0
 30436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30437 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30440 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30441 ;;Total ram usage:        6 bytes
 30442 ;; Hardware stack levels used: 1
 30443 ;; Hardware stack levels required when called: 1
 30444 ;; This function calls:
 30445 ;;		Nothing
 30446 ;; This function is called by:
 30447 ;;		_Set_KamanFilter_Sensitivity
 30448 ;; This function uses a non-reentrant model
 30449 ;;
 30450                           
 30451                           	psect	text147
 30452  00D584                     __ptext147:
 30453                           	callstack 0
 30454  00D584                     _Kalman_setProcessNoise:
 30455                           	callstack 26
 30456  00D584                     
 30457                           ;filter.c: 48: pObj->_q_process=q;
 30458  00D584  EE20 F008          	lfsr	2,8
 30459  00D588  5001               	movf	Kalman_setProcessNoise@pObj^0,w,c
 30460  00D58A  26D9               	addwf	fsr2l,f,c
 30461  00D58C  5002               	movf	(Kalman_setProcessNoise@pObj+1)^0,w,c
 30462  00D58E  22DA               	addwfc	fsr2h,f,c
 30463  00D590  C003  FFDE         	movff	Kalman_setProcessNoise@q,postinc2
 30464  00D594  C004  FFDE         	movff	Kalman_setProcessNoise@q+1,postinc2
 30465  00D598  C005  FFDE         	movff	Kalman_setProcessNoise@q+2,postinc2
 30466  00D59C  C006  FFDE         	movff	Kalman_setProcessNoise@q+3,postinc2
 30467  00D5A0  0012               	return		;funcret
 30468  00D5A2                     __end_of_Kalman_setProcessNoise:
 30469                           	callstack 0
 30470                           
 30471 ;; *************** function _Kalman_setMeasurementError *****************
 30472 ;; Defined at:
 30473 ;;		line 37 in file "filter.c"
 30474 ;; Parameters:    Size  Location     Type
 30475 ;;  pObj            2    0[COMRAM] PTR struct .
 30476 ;;		 -> kalmanFilter(24), 
 30477 ;;  mea_e           4    2[COMRAM] float 
 30478 ;; Auto vars:     Size  Location     Type
 30479 ;;		None
 30480 ;; Return value:  Size  Location     Type
 30481 ;;                  1    wreg      void 
 30482 ;; Registers used:
 30483 ;;		fsr2l, fsr2h
 30484 ;; Tracked objects:
 30485 ;;		On entry : 0/0
 30486 ;;		On exit  : 0/0
 30487 ;;		Unchanged: 0/0
 30488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30489 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30493 ;;Total ram usage:        6 bytes
 30494 ;; Hardware stack levels used: 1
 30495 ;; Hardware stack levels required when called: 1
 30496 ;; This function calls:
 30497 ;;		Nothing
 30498 ;; This function is called by:
 30499 ;;		_update_command
 30500 ;;		_sensMeasure_init
 30501 ;; This function uses a non-reentrant model
 30502 ;;
 30503                           
 30504                           	psect	text148
 30505  00D5DC                     __ptext148:
 30506                           	callstack 0
 30507  00D5DC                     _Kalman_setMeasurementError:
 30508                           	callstack 27
 30509  00D5DC                     
 30510                           ;filter.c: 39: pObj->_err_measure=mea_e;
 30511  00D5DC  C001  FFD9         	movff	Kalman_setMeasurementError@pObj,fsr2l
 30512  00D5E0  C002  FFDA         	movff	Kalman_setMeasurementError@pObj+1,fsr2h
 30513  00D5E4  C003  FFDE         	movff	Kalman_setMeasurementError@mea_e,postinc2
 30514  00D5E8  C004  FFDE         	movff	Kalman_setMeasurementError@mea_e+1,postinc2
 30515  00D5EC  C005  FFDE         	movff	Kalman_setMeasurementError@mea_e+2,postinc2
 30516  00D5F0  C006  FFDE         	movff	Kalman_setMeasurementError@mea_e+3,postinc2
 30517  00D5F4  0012               	return		;funcret
 30518  00D5F6                     __end_of_Kalman_setMeasurementError:
 30519                           	callstack 0
 30520                           
 30521 ;; *************** function _Kalman_setEstimateError *****************
 30522 ;; Defined at:
 30523 ;;		line 41 in file "filter.c"
 30524 ;; Parameters:    Size  Location     Type
 30525 ;;  pObj            2    0[COMRAM] PTR struct .
 30526 ;;		 -> kalmanFilter(24), 
 30527 ;;  est_e           4    2[COMRAM] float 
 30528 ;; Auto vars:     Size  Location     Type
 30529 ;;		None
 30530 ;; Return value:  Size  Location     Type
 30531 ;;                  1    wreg      void 
 30532 ;; Registers used:
 30533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30534 ;; Tracked objects:
 30535 ;;		On entry : 0/0
 30536 ;;		On exit  : 0/0
 30537 ;;		Unchanged: 0/0
 30538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30539 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30543 ;;Total ram usage:        6 bytes
 30544 ;; Hardware stack levels used: 1
 30545 ;; Hardware stack levels required when called: 1
 30546 ;; This function calls:
 30547 ;;		Nothing
 30548 ;; This function is called by:
 30549 ;;		_update_command
 30550 ;;		_sensMeasure_init
 30551 ;; This function uses a non-reentrant model
 30552 ;;
 30553                           
 30554                           	psect	text149
 30555  00D5A2                     __ptext149:
 30556                           	callstack 0
 30557  00D5A2                     _Kalman_setEstimateError:
 30558                           	callstack 27
 30559  00D5A2                     
 30560                           ;filter.c: 43: pObj->_err_estimate=est_e;
 30561  00D5A2  EE20 F004          	lfsr	2,4
 30562  00D5A6  5001               	movf	Kalman_setEstimateError@pObj^0,w,c
 30563  00D5A8  26D9               	addwf	fsr2l,f,c
 30564  00D5AA  5002               	movf	(Kalman_setEstimateError@pObj+1)^0,w,c
 30565  00D5AC  22DA               	addwfc	fsr2h,f,c
 30566  00D5AE  C003  FFDE         	movff	Kalman_setEstimateError@est_e,postinc2
 30567  00D5B2  C004  FFDE         	movff	Kalman_setEstimateError@est_e+1,postinc2
 30568  00D5B6  C005  FFDE         	movff	Kalman_setEstimateError@est_e+2,postinc2
 30569  00D5BA  C006  FFDE         	movff	Kalman_setEstimateError@est_e+3,postinc2
 30570  00D5BE  0012               	return		;funcret
 30571  00D5C0                     __end_of_Kalman_setEstimateError:
 30572                           	callstack 0
 30573                           
 30574 ;; *************** function _nvm_init *****************
 30575 ;; Defined at:
 30576 ;;		line 71 in file "nvm.c"
 30577 ;; Parameters:    Size  Location     Type
 30578 ;;		None
 30579 ;; Auto vars:     Size  Location     Type
 30580 ;;  pdesc           2   65[COMRAM] PTR unsigned int 
 30581 ;;		 -> sd002.string(50), sd002(52), 
 30582 ;;  i               1   67[COMRAM] unsigned char 
 30583 ;; Return value:  Size  Location     Type
 30584 ;;                  1    wreg      void 
 30585 ;; Registers used:
 30586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30587 ;; Tracked objects:
 30588 ;;		On entry : 0/0
 30589 ;;		On exit  : 0/0
 30590 ;;		Unchanged: 0/0
 30591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30594 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30595 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30596 ;;Total ram usage:        9 bytes
 30597 ;; Hardware stack levels used: 1
 30598 ;; Hardware stack levels required when called: 8
 30599 ;; This function calls:
 30600 ;;		_get_product_desc
 30601 ;;		_nvm_clear
 30602 ;;		_nvm_read_flash_all
 30603 ;;		_nvm_serialno_check
 30604 ;;		_nvm_write_flash_all
 30605 ;; This function is called by:
 30606 ;;		_Board_initialize
 30607 ;; This function uses a non-reentrant model
 30608 ;;
 30609                           
 30610                           	psect	text150
 30611  00AD82                     __ptext150:
 30612                           	callstack 0
 30613  00AD82                     _nvm_init:
 30614                           	callstack 21
 30615  00AD82                     
 30616                           ;nvm.c: 73: uint8_t i;;nvm.c: 75: nvm_read_flash_all(&g_nvm.flash);
 30617  00AD82  0E91               	movlw	low (_g_nvm+1)
 30618  00AD84  6E11               	movwf	nvm_read_flash_all@flash^0,c
 30619  00AD86  0E01               	movlw	high (_g_nvm+1)
 30620  00AD88  6E12               	movwf	(nvm_read_flash_all@flash+1)^0,c
 30621  00AD8A  ECD7  F069         	call	_nvm_read_flash_all	;wreg free
 30622  00AD8E                     
 30623                           ;nvm.c: 76: g_nvm.status = NVM_INIT_FLASH;
 30624  00AD8E  0E01               	movlw	1
 30625  00AD90  0101               	movlb	1	; () banked
 30626  00AD92  6F90               	movwf	_g_nvm& (0+255),b
 30627  00AD94                     
 30628                           ; BSR set to: 1
 30629                           ;nvm.c: 78: if (nvm_serialno_check(g_nvm.flash.serialNum))
 30630  00AD94  0ED1               	movlw	low (_g_nvm+65)
 30631  00AD96  6E01               	movwf	nvm_serialno_check@sno^0,c
 30632  00AD98  0E01               	movlw	high (_g_nvm+65)
 30633  00AD9A  6E02               	movwf	(nvm_serialno_check@sno+1)^0,c
 30634  00AD9C  EC04  F065         	call	_nvm_serialno_check	;wreg free
 30635  00ADA0  0900               	iorlw	0
 30636  00ADA2  B4D8               	btfsc	status,2,c
 30637  00ADA4  EFD6  F056         	goto	u21191
 30638  00ADA8  EFD8  F056         	goto	u21190
 30639  00ADAC                     u21191:
 30640  00ADAC  EF0C  F057         	goto	l19427
 30641  00ADB0                     u21190:
 30642  00ADB0                     
 30643                           ;nvm.c: 79: {;nvm.c: 80: uint16_t* pdesc = get_product_desc();
 30644  00ADB0  EC2D  F06B         	call	_get_product_desc	;wreg free
 30645  00ADB4  C001  F042         	movff	?_get_product_desc,nvm_init@pdesc
 30646  00ADB8  C002  F043         	movff	?_get_product_desc+1,nvm_init@pdesc+1
 30647  00ADBC                     
 30648                           ;nvm.c: 81: for (i = 0 ; i < 8 ; i++) {
 30649  00ADBC  0E00               	movlw	0
 30650  00ADBE  6E44               	movwf	nvm_init@i^0,c
 30651  00ADC0                     l19421:
 30652                           
 30653                           ;nvm.c: 82: pdesc[i + 11] = g_nvm.flash.serialNum[i];
 30654  00ADC0  0ED1               	movlw	low (_g_nvm+65)
 30655  00ADC2  2444               	addwf	nvm_init@i^0,w,c
 30656  00ADC4  6ED9               	movwf	fsr2l,c
 30657  00ADC6  6ADA               	clrf	fsr2h,c
 30658  00ADC8  0E01               	movlw	high (_g_nvm+65)
 30659  00ADCA  22DA               	addwfc	fsr2h,f,c
 30660  00ADCC  50DF               	movf	indf2,w,c
 30661  00ADCE  6E3C               	movwf	??_nvm_init^0,c
 30662  00ADD0  6A3D               	clrf	(??_nvm_init+1)^0,c
 30663  00ADD2  5044               	movf	nvm_init@i^0,w,c
 30664  00ADD4  6E3E               	movwf	(??_nvm_init+2)^0,c
 30665  00ADD6  6A3F               	clrf	(??_nvm_init+3)^0,c
 30666  00ADD8  90D8               	bcf	status,0,c
 30667  00ADDA  363E               	rlcf	(??_nvm_init+2)^0,f,c
 30668  00ADDC  363F               	rlcf	(??_nvm_init+3)^0,f,c
 30669  00ADDE  C042  F040         	movff	nvm_init@pdesc,??_nvm_init+4
 30670  00ADE2  C043  F041         	movff	nvm_init@pdesc+1,??_nvm_init+5
 30671  00ADE6  503E               	movf	(??_nvm_init+2)^0,w,c
 30672  00ADE8  2640               	addwf	(??_nvm_init+4)^0,f,c
 30673  00ADEA  503F               	movf	(??_nvm_init+3)^0,w,c
 30674  00ADEC  2241               	addwfc	(??_nvm_init+5)^0,f,c
 30675  00ADEE  0E16               	movlw	22
 30676  00ADF0  2440               	addwf	(??_nvm_init+4)^0,w,c
 30677  00ADF2  6ED9               	movwf	fsr2l,c
 30678  00ADF4  0E00               	movlw	0
 30679  00ADF6  2041               	addwfc	(??_nvm_init+5)^0,w,c
 30680  00ADF8  6EDA               	movwf	fsr2h,c
 30681  00ADFA  C03C  FFDE         	movff	??_nvm_init,postinc2
 30682  00ADFE  C03D  FFDD         	movff	??_nvm_init+1,postdec2
 30683  00AE02  2A44               	incf	nvm_init@i^0,f,c
 30684  00AE04  0E07               	movlw	7
 30685  00AE06  6444               	cpfsgt	nvm_init@i^0,c
 30686  00AE08  EF08  F057         	goto	u21201
 30687  00AE0C  EF0A  F057         	goto	u21200
 30688  00AE10                     u21201:
 30689  00AE10  EFE0  F056         	goto	l19421
 30690  00AE14                     u21200:
 30691  00AE14  EF21  F057         	goto	l1939
 30692  00AE18                     l19427:
 30693                           
 30694                           ;nvm.c: 85: else;nvm.c: 86: {;nvm.c: 87: nvm_clear();
 30695  00AE18  EC32  F06B         	call	_nvm_clear	;wreg free
 30696  00AE1C                     
 30697                           ;nvm.c: 89: if (nvm_write_flash_all(&g_nvm.flash) == 0)
 30698  00AE1C  0E91               	movlw	low (_g_nvm+1)
 30699  00AE1E  6E11               	movwf	nvm_write_flash_all@flash^0,c
 30700  00AE20  0E01               	movlw	high (_g_nvm+1)
 30701  00AE22  6E12               	movwf	(nvm_write_flash_all@flash+1)^0,c
 30702  00AE24  ECBF  F066         	call	_nvm_write_flash_all	;wreg free
 30703  00AE28  0900               	iorlw	0
 30704  00AE2A  A4D8               	btfss	status,2,c
 30705  00AE2C  EF1A  F057         	goto	u21211
 30706  00AE30  EF1C  F057         	goto	u21210
 30707  00AE34                     u21211:
 30708  00AE34  EF1E  F057         	goto	l19433
 30709  00AE38                     u21210:
 30710  00AE38  EF21  F057         	goto	l1939
 30711  00AE3C                     l19433:
 30712                           
 30713                           ;nvm.c: 91: g_nvm.status = NVM_INIT_FLASH;
 30714  00AE3C  0E01               	movlw	1
 30715  00AE3E  0101               	movlb	1	; () banked
 30716  00AE40  6F90               	movwf	_g_nvm& (0+255),b
 30717  00AE42                     l1939:
 30718  00AE42  0012               	return		;funcret
 30719  00AE44                     __end_of_nvm_init:
 30720                           	callstack 0
 30721                           
 30722 ;; *************** function _nvm_write_flash_all *****************
 30723 ;; Defined at:
 30724 ;;		line 96 in file "nvm.c"
 30725 ;; Parameters:    Size  Location     Type
 30726 ;;  flash           2   16[COMRAM] PTR struct .
 30727 ;;		 -> g_nvm(73), 
 30728 ;; Auto vars:     Size  Location     Type
 30729 ;;		None
 30730 ;; Return value:  Size  Location     Type
 30731 ;;                  1    wreg      unsigned char 
 30732 ;; Registers used:
 30733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30734 ;; Tracked objects:
 30735 ;;		On entry : 0/0
 30736 ;;		On exit  : 0/0
 30737 ;;		Unchanged: 0/0
 30738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30743 ;;Total ram usage:        2 bytes
 30744 ;; Hardware stack levels used: 1
 30745 ;; Hardware stack levels required when called: 2
 30746 ;; This function calls:
 30747 ;;		_flash_clear
 30748 ;;		_flash_writeBytes
 30749 ;; This function is called by:
 30750 ;;		_update_command
 30751 ;;		_auto_calib_apply
 30752 ;;		_sens_autoCalib_slp_set_task
 30753 ;;		_sens_ZeroCalibration
 30754 ;;		_usedtime_task
 30755 ;;		_nvm_init
 30756 ;; This function uses a non-reentrant model
 30757 ;;
 30758                           
 30759                           	psect	text151
 30760  00CD7E                     __ptext151:
 30761                           	callstack 0
 30762  00CD7E                     _nvm_write_flash_all:
 30763                           	callstack 27
 30764  00CD7E                     
 30765                           ;nvm.c: 98: flash_clear(0xf400, (0xf400 + 72));
 30766  00CD7E  0E00               	movlw	0
 30767  00CD80  6E01               	movwf	flash_clear@startaddr^0,c
 30768  00CD82  0EF4               	movlw	244
 30769  00CD84  6E02               	movwf	(flash_clear@startaddr+1)^0,c
 30770  00CD86  0E00               	movlw	0
 30771  00CD88  6E03               	movwf	(flash_clear@startaddr+2)^0,c
 30772  00CD8A  0E00               	movlw	0
 30773  00CD8C  6E04               	movwf	(flash_clear@startaddr+3)^0,c
 30774  00CD8E  0E48               	movlw	72
 30775  00CD90  6E05               	movwf	flash_clear@endaddr^0,c
 30776  00CD92  0EF4               	movlw	244
 30777  00CD94  6E06               	movwf	(flash_clear@endaddr+1)^0,c
 30778  00CD96  0E00               	movlw	0
 30779  00CD98  6E07               	movwf	(flash_clear@endaddr+2)^0,c
 30780  00CD9A  0E00               	movlw	0
 30781  00CD9C  6E08               	movwf	(flash_clear@endaddr+3)^0,c
 30782  00CD9E  ECBE  F05D         	call	_flash_clear	;wreg free
 30783  00CDA2                     
 30784                           ;nvm.c: 99: return flash_writeBytes(0xf400, flash->byte, 72);
 30785  00CDA2  0E00               	movlw	0
 30786  00CDA4  6E01               	movwf	flash_writeBytes@startaddr^0,c
 30787  00CDA6  0EF4               	movlw	244
 30788  00CDA8  6E02               	movwf	(flash_writeBytes@startaddr+1)^0,c
 30789  00CDAA  0E00               	movlw	0
 30790  00CDAC  6E03               	movwf	(flash_writeBytes@startaddr+2)^0,c
 30791  00CDAE  0E00               	movlw	0
 30792  00CDB0  6E04               	movwf	(flash_writeBytes@startaddr+3)^0,c
 30793  00CDB2  C011  F005         	movff	nvm_write_flash_all@flash,flash_writeBytes@flash_array
 30794  00CDB6  C012  F006         	movff	nvm_write_flash_all@flash+1,flash_writeBytes@flash_array+1
 30795  00CDBA  0E00               	movlw	0
 30796  00CDBC  6E08               	movwf	(flash_writeBytes@num_bytes+1)^0,c
 30797  00CDBE  0E48               	movlw	72
 30798  00CDC0  6E07               	movwf	flash_writeBytes@num_bytes^0,c
 30799  00CDC2  EC09  F04C         	call	_flash_writeBytes	;wreg free
 30800  00CDC6  0012               	return		;funcret
 30801  00CDC8                     __end_of_nvm_write_flash_all:
 30802                           	callstack 0
 30803                           
 30804 ;; *************** function _flash_writeBytes *****************
 30805 ;; Defined at:
 30806 ;;		line 36 in file "bsp/flash.c"
 30807 ;; Parameters:    Size  Location     Type
 30808 ;;  startaddr       4    0[COMRAM] unsigned long 
 30809 ;;  flash_array     2    4[COMRAM] PTR unsigned char 
 30810 ;;		 -> nvm_write_flash_all@flash(2), g_nvm(73), 
 30811 ;;  num_bytes       2    6[COMRAM] unsigned int 
 30812 ;; Auto vars:     Size  Location     Type
 30813 ;;  flash_addr      4   12[COMRAM] struct .
 30814 ;;  flag            1   11[COMRAM] unsigned char 
 30815 ;;  write_byte      1   10[COMRAM] unsigned char 
 30816 ;;  retval          1    9[COMRAM] unsigned char 
 30817 ;; Return value:  Size  Location     Type
 30818 ;;                  1    wreg      unsigned char 
 30819 ;; Registers used:
 30820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30821 ;; Tracked objects:
 30822 ;;		On entry : 0/0
 30823 ;;		On exit  : 0/0
 30824 ;;		Unchanged: 0/0
 30825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30826 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30827 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30829 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30830 ;;Total ram usage:       16 bytes
 30831 ;; Hardware stack levels used: 1
 30832 ;; Hardware stack levels required when called: 1
 30833 ;; This function calls:
 30834 ;;		Nothing
 30835 ;; This function is called by:
 30836 ;;		_nvm_write_flash_all
 30837 ;; This function uses a non-reentrant model
 30838 ;;
 30839                           
 30840                           	psect	text152
 30841  009812                     __ptext152:
 30842                           	callstack 0
 30843  009812                     _flash_writeBytes:
 30844                           	callstack 27
 30845  009812                     
 30846                           ;flash.c: 38: bool retval = 1;
 30847  009812  0E01               	movlw	1
 30848  009814  6E0A               	movwf	flash_writeBytes@retval^0,c
 30849  009816  0E00               	movlw	0
 30850  009818  6E0C               	movwf	flash_writeBytes@flag^0,c
 30851  00981A                     
 30852                           ;flash.c: 40: DWORD_VAL flash_addr;;flash.c: 42: flash_addr.Val = startaddr;
 30853  00981A  C001  F00D         	movff	flash_writeBytes@startaddr,flash_writeBytes@flash_addr
 30854  00981E  C002  F00E         	movff	flash_writeBytes@startaddr+1,flash_writeBytes@flash_addr+1
 30855  009822  C003  F00F         	movff	flash_writeBytes@startaddr+2,flash_writeBytes@flash_addr+2
 30856  009826  C004  F010         	movff	flash_writeBytes@startaddr+3,flash_writeBytes@flash_addr+3
 30857  00982A                     
 30858                           ;flash.c: 44: startaddr /= 64 ;
 30859  00982A  0E06               	movlw	6
 30860  00982C  6E09               	movwf	??_flash_writeBytes^0,c
 30861  00982E                     u11045:
 30862  00982E  90D8               	bcf	status,0,c
 30863  009830  3204               	rrcf	(flash_writeBytes@startaddr+3)^0,f,c
 30864  009832  3203               	rrcf	(flash_writeBytes@startaddr+2)^0,f,c
 30865  009834  3202               	rrcf	(flash_writeBytes@startaddr+1)^0,f,c
 30866  009836  3201               	rrcf	flash_writeBytes@startaddr^0,f,c
 30867  009838  2E09               	decfsz	??_flash_writeBytes^0,f,c
 30868  00983A  EF17  F04C         	goto	u11045
 30869  00983E                     
 30870                           ;flash.c: 45: startaddr *= 64 ;
 30871  00983E  0E06               	movlw	6
 30872  009840                     u11055:
 30873  009840  90D8               	bcf	status,0,c
 30874  009842  3601               	rlcf	flash_writeBytes@startaddr^0,f,c
 30875  009844  3602               	rlcf	(flash_writeBytes@startaddr+1)^0,f,c
 30876  009846  3603               	rlcf	(flash_writeBytes@startaddr+2)^0,f,c
 30877  009848  3604               	rlcf	(flash_writeBytes@startaddr+3)^0,f,c
 30878  00984A  2EE8               	decfsz	wreg,f,c
 30879  00984C  EF20  F04C         	goto	u11055
 30880  009850                     
 30881                           ;flash.c: 46: startaddr += 64 ;
 30882  009850  0E40               	movlw	64
 30883  009852  2601               	addwf	flash_writeBytes@startaddr^0,f,c
 30884  009854  0E00               	movlw	0
 30885  009856  2202               	addwfc	(flash_writeBytes@startaddr+1)^0,f,c
 30886  009858  2203               	addwfc	(flash_writeBytes@startaddr+2)^0,f,c
 30887  00985A  2204               	addwfc	(flash_writeBytes@startaddr+3)^0,f,c
 30888  00985C                     
 30889                           ;flash.c: 48: write_byte = startaddr - flash_addr.Val;
 30890  00985C  500D               	movf	flash_writeBytes@flash_addr^0,w,c
 30891  00985E  5C01               	subwf	flash_writeBytes@startaddr^0,w,c
 30892  009860  6E0B               	movwf	flash_writeBytes@write_byte^0,c
 30893                           
 30894                           ;flash.c: 50: while(num_bytes)
 30895  009862  EF94  F04C         	goto	l11199
 30896  009866                     l767:
 30897                           
 30898                           ;flash.c: 51: {;flash.c: 52: TBLPTRU = flash_addr.byte.UB;
 30899  009866  C00F  FFF8         	movff	flash_writeBytes@flash_addr+2,tblptru	;volatile
 30900                           
 30901                           ;flash.c: 53: TBLPTRH = flash_addr.byte.HB;
 30902  00986A  C00E  FFF7         	movff	flash_writeBytes@flash_addr+1,tblptrh	;volatile
 30903                           
 30904                           ;flash.c: 54: TBLPTRL = flash_addr.byte.LB;
 30905  00986E  C00D  FFF6         	movff	flash_writeBytes@flash_addr,tblptrl	;volatile
 30906                           
 30907                           ;flash.c: 56: while(write_byte--)
 30908  009872  EF52  F04C         	goto	l11179
 30909  009876                     l11171:
 30910                           
 30911                           ;flash.c: 57: {;flash.c: 58: TABLAT = *flash_array++;
 30912  009876  C005  FFD9         	movff	flash_writeBytes@flash_array,fsr2l
 30913  00987A  C006  FFDA         	movff	flash_writeBytes@flash_array+1,fsr2h
 30914  00987E  50DF               	movf	indf2,w,c
 30915  009880  6EF5               	movwf	245,c	;volatile
 30916  009882  4A05               	infsnz	flash_writeBytes@flash_array^0,f,c
 30917  009884  2A06               	incf	(flash_writeBytes@flash_array+1)^0,f,c
 30918  009886  000D               	tblwt		*+	;# 
 30919  009888                     
 30920                           ;flash.c: 60: if(--num_bytes==0) break;
 30921  009888  0607               	decf	flash_writeBytes@num_bytes^0,f,c
 30922  00988A  A0D8               	btfss	status,0,c
 30923  00988C  0608               	decf	(flash_writeBytes@num_bytes+1)^0,f,c
 30924  00988E  5007               	movf	flash_writeBytes@num_bytes^0,w,c
 30925  009890  1008               	iorwf	(flash_writeBytes@num_bytes+1)^0,w,c
 30926  009892  A4D8               	btfss	status,2,c
 30927  009894  EF4E  F04C         	goto	u11061
 30928  009898  EF50  F04C         	goto	u11060
 30929  00989C                     u11061:
 30930  00989C  EF52  F04C         	goto	l11179
 30931  0098A0                     u11060:
 30932  0098A0  EF5B  F04C         	goto	l771
 30933  0098A4                     l11179:
 30934  0098A4  060B               	decf	flash_writeBytes@write_byte^0,f,c
 30935  0098A6  280B               	incf	flash_writeBytes@write_byte^0,w,c
 30936  0098A8  A4D8               	btfss	status,2,c
 30937  0098AA  EF59  F04C         	goto	u11071
 30938  0098AE  EF5B  F04C         	goto	u11070
 30939  0098B2                     u11071:
 30940  0098B2  EF3B  F04C         	goto	l11171
 30941  0098B6                     u11070:
 30942  0098B6                     l771:
 30943                           
 30944                           ;flash.c: 61: };flash.c: 63: TBLPTRU = flash_addr.byte.UB;
 30945  0098B6  C00F  FFF8         	movff	flash_writeBytes@flash_addr+2,tblptru	;volatile
 30946                           
 30947                           ;flash.c: 64: TBLPTRH = flash_addr.byte.HB;
 30948  0098BA  C00E  FFF7         	movff	flash_writeBytes@flash_addr+1,tblptrh	;volatile
 30949                           
 30950                           ;flash.c: 65: TBLPTRL = flash_addr.byte.LB;
 30951  0098BE  C00D  FFF6         	movff	flash_writeBytes@flash_addr,tblptrl	;volatile
 30952                           
 30953                           ;flash.c: 67: EECON1bits.WREN = 1;
 30954  0098C2  84A6               	bsf	166,2,c	;volsfr
 30955                           
 30956                           ;flash.c: 68: if(INTCONbits.GIE)
 30957  0098C4  AEF2               	btfss	242,7,c	;volatile
 30958  0098C6  EF67  F04C         	goto	u11081
 30959  0098CA  EF69  F04C         	goto	u11080
 30960  0098CE                     u11081:
 30961  0098CE  EF6C  F04C         	goto	l772
 30962  0098D2                     u11080:
 30963  0098D2                     
 30964                           ;flash.c: 69: {;flash.c: 70: INTCONbits.GIE = 0;
 30965  0098D2  9EF2               	bcf	242,7,c	;volatile
 30966  0098D4                     
 30967                           ;flash.c: 71: flag=1;
 30968  0098D4  0E01               	movlw	1
 30969  0098D6  6E0C               	movwf	flash_writeBytes@flag^0,c
 30970  0098D8                     l772:
 30971                           
 30972                           ;flash.c: 72: };flash.c: 73: EECON2 = 0x55;
 30973  0098D8  0E55               	movlw	85
 30974  0098DA  6EA7               	movwf	167,c	;volsfr
 30975                           
 30976                           ;flash.c: 74: EECON2 = 0xAA;
 30977  0098DC  0EAA               	movlw	170
 30978  0098DE  6EA7               	movwf	167,c	;volsfr
 30979  0098E0                     
 30980                           ;flash.c: 75: EECON1bits.WR =1;
 30981  0098E0  82A6               	bsf	166,1,c	;volsfr
 30982  0098E2                     
 30983                           ;flash.c: 76: EECON1bits.WREN = 0 ;
 30984  0098E2  94A6               	bcf	166,2,c	;volsfr
 30985                           
 30986                           ;flash.c: 77: if(flag)
 30987  0098E4  500C               	movf	flash_writeBytes@flag^0,w,c
 30988  0098E6  B4D8               	btfsc	status,2,c
 30989  0098E8  EF78  F04C         	goto	u11091
 30990  0098EC  EF7A  F04C         	goto	u11090
 30991  0098F0                     u11091:
 30992  0098F0  EF7D  F04C         	goto	l773
 30993  0098F4                     u11090:
 30994  0098F4                     
 30995                           ;flash.c: 78: {;flash.c: 79: INTCONbits.GIE = 1;
 30996  0098F4  8EF2               	bsf	242,7,c	;volatile
 30997  0098F6                     
 30998                           ;flash.c: 80: flag=0;
 30999  0098F6  0E00               	movlw	0
 31000  0098F8  6E0C               	movwf	flash_writeBytes@flag^0,c
 31001  0098FA                     l773:
 31002                           
 31003                           ;flash.c: 81: };flash.c: 82: write_byte = 64;
 31004  0098FA  0E40               	movlw	64
 31005  0098FC  6E0B               	movwf	flash_writeBytes@write_byte^0,c
 31006  0098FE                     
 31007                           ;flash.c: 83: flash_addr.Val = flash_addr.Val + 64;
 31008  0098FE  0E40               	movlw	64
 31009  009900  240D               	addwf	flash_writeBytes@flash_addr^0,w,c
 31010  009902  6E0D               	movwf	flash_writeBytes@flash_addr^0,c
 31011  009904  0E00               	movlw	0
 31012  009906  200E               	addwfc	(flash_writeBytes@flash_addr+1)^0,w,c
 31013  009908  6E0E               	movwf	(flash_writeBytes@flash_addr+1)^0,c
 31014  00990A  0E00               	movlw	0
 31015  00990C  200F               	addwfc	(flash_writeBytes@flash_addr+2)^0,w,c
 31016  00990E  6E0F               	movwf	(flash_writeBytes@flash_addr+2)^0,c
 31017  009910  0E00               	movlw	0
 31018  009912  2010               	addwfc	(flash_writeBytes@flash_addr+3)^0,w,c
 31019  009914  6E10               	movwf	(flash_writeBytes@flash_addr+3)^0,c
 31020  009916                     
 31021                           ;flash.c: 85: if (EECON1bits.WRERR == 1)
 31022  009916  A6A6               	btfss	166,3,c	;volsfr
 31023  009918  EF90  F04C         	goto	u11101
 31024  00991C  EF92  F04C         	goto	u11100
 31025  009920                     u11101:
 31026  009920  EF94  F04C         	goto	l11199
 31027  009924                     u11100:
 31028  009924                     
 31029                           ;flash.c: 86: retval = 0;
 31030  009924  0E00               	movlw	0
 31031  009926  6E0A               	movwf	flash_writeBytes@retval^0,c
 31032  009928                     l11199:
 31033  009928  5007               	movf	flash_writeBytes@num_bytes^0,w,c
 31034  00992A  1008               	iorwf	(flash_writeBytes@num_bytes+1)^0,w,c
 31035  00992C  A4D8               	btfss	status,2,c
 31036  00992E  EF9B  F04C         	goto	u11111
 31037  009932  EF9D  F04C         	goto	u11110
 31038  009936                     u11111:
 31039  009936  EF33  F04C         	goto	l767
 31040  00993A                     u11110:
 31041  00993A                     
 31042                           ;flash.c: 87: };flash.c: 88: return retval;
 31043  00993A  500A               	movf	flash_writeBytes@retval^0,w,c
 31044  00993C  0012               	return		;funcret
 31045  00993E                     __end_of_flash_writeBytes:
 31046                           	callstack 0
 31047                           
 31048 ;; *************** function _flash_clear *****************
 31049 ;; Defined at:
 31050 ;;		line 91 in file "bsp/flash.c"
 31051 ;; Parameters:    Size  Location     Type
 31052 ;;  startaddr       4    0[COMRAM] unsigned long 
 31053 ;;  endaddr         4    4[COMRAM] unsigned long 
 31054 ;; Auto vars:     Size  Location     Type
 31055 ;;  flash_addr      4    9[COMRAM] struct .
 31056 ;;  flag            1    8[COMRAM] unsigned char 
 31057 ;; Return value:  Size  Location     Type
 31058 ;;                  1    wreg      void 
 31059 ;; Registers used:
 31060 ;;		wreg, status,2, status,0
 31061 ;; Tracked objects:
 31062 ;;		On entry : 0/0
 31063 ;;		On exit  : 0/0
 31064 ;;		Unchanged: 0/0
 31065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31066 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31067 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31069 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31070 ;;Total ram usage:       13 bytes
 31071 ;; Hardware stack levels used: 1
 31072 ;; Hardware stack levels required when called: 1
 31073 ;; This function calls:
 31074 ;;		Nothing
 31075 ;; This function is called by:
 31076 ;;		_nvm_write_flash_all
 31077 ;; This function uses a non-reentrant model
 31078 ;;
 31079                           
 31080                           	psect	text153
 31081  00BB7C                     __ptext153:
 31082                           	callstack 0
 31083  00BB7C                     _flash_clear:
 31084                           	callstack 27
 31085  00BB7C                     
 31086                           ;flash.c: 93: unsigned char flag=0;
 31087  00BB7C  0E00               	movlw	0
 31088  00BB7E  6E09               	movwf	flash_clear@flag^0,c
 31089  00BB80                     
 31090                           ;flash.c: 94: DWORD_VAL flash_addr;;flash.c: 96: flash_addr.Val = startaddr;
 31091  00BB80  C001  F00A         	movff	flash_clear@startaddr,flash_clear@flash_addr
 31092  00BB84  C002  F00B         	movff	flash_clear@startaddr+1,flash_clear@flash_addr+1
 31093  00BB88  C003  F00C         	movff	flash_clear@startaddr+2,flash_clear@flash_addr+2
 31094  00BB8C  C004  F00D         	movff	flash_clear@startaddr+3,flash_clear@flash_addr+3
 31095                           
 31096                           ;flash.c: 98: while(flash_addr.Val<endaddr)
 31097  00BB90  EFF6  F05D         	goto	l779
 31098  00BB94                     l780:
 31099                           
 31100                           ;flash.c: 99: {;flash.c: 100: TBLPTRU = flash_addr.byte.UB;
 31101  00BB94  C00C  FFF8         	movff	flash_clear@flash_addr+2,tblptru	;volatile
 31102                           
 31103                           ;flash.c: 101: TBLPTRH = flash_addr.byte.HB;
 31104  00BB98  C00B  FFF7         	movff	flash_clear@flash_addr+1,tblptrh	;volatile
 31105                           
 31106                           ;flash.c: 102: TBLPTRL = flash_addr.byte.LB;
 31107  00BB9C  C00A  FFF6         	movff	flash_clear@flash_addr,tblptrl	;volatile
 31108                           
 31109                           ;flash.c: 104: EECON1bits.WREN = 1;
 31110  00BBA0  84A6               	bsf	166,2,c	;volsfr
 31111                           
 31112                           ;flash.c: 105: EECON1bits.FREE = 1;
 31113  00BBA2  88A6               	bsf	166,4,c	;volsfr
 31114                           
 31115                           ;flash.c: 106: if(INTCONbits.GIE)
 31116  00BBA4  AEF2               	btfss	242,7,c	;volatile
 31117  00BBA6  EFD7  F05D         	goto	u11121
 31118  00BBAA  EFD9  F05D         	goto	u11120
 31119  00BBAE                     u11121:
 31120  00BBAE  EFDC  F05D         	goto	l781
 31121  00BBB2                     u11120:
 31122  00BBB2                     
 31123                           ;flash.c: 107: {;flash.c: 108: INTCONbits.GIE = 0;
 31124  00BBB2  9EF2               	bcf	242,7,c	;volatile
 31125  00BBB4                     
 31126                           ;flash.c: 109: flag=1;
 31127  00BBB4  0E01               	movlw	1
 31128  00BBB6  6E09               	movwf	flash_clear@flag^0,c
 31129  00BBB8                     l781:
 31130                           
 31131                           ;flash.c: 110: };flash.c: 111: EECON2 = 0x55;
 31132  00BBB8  0E55               	movlw	85
 31133  00BBBA  6EA7               	movwf	167,c	;volsfr
 31134                           
 31135                           ;flash.c: 112: EECON2 = 0xAA;
 31136  00BBBC  0EAA               	movlw	170
 31137  00BBBE  6EA7               	movwf	167,c	;volsfr
 31138  00BBC0                     
 31139                           ;flash.c: 113: EECON1bits.WR = 1;
 31140  00BBC0  82A6               	bsf	166,1,c	;volsfr
 31141                           
 31142                           ;flash.c: 114: if(flag)
 31143  00BBC2  5009               	movf	flash_clear@flag^0,w,c
 31144  00BBC4  B4D8               	btfsc	status,2,c
 31145  00BBC6  EFE7  F05D         	goto	u11131
 31146  00BBCA  EFE9  F05D         	goto	u11130
 31147  00BBCE                     u11131:
 31148  00BBCE  EFEA  F05D         	goto	l11217
 31149  00BBD2                     u11130:
 31150  00BBD2                     
 31151                           ;flash.c: 115: INTCONbits.GIE = 1;
 31152  00BBD2  8EF2               	bsf	242,7,c	;volatile
 31153  00BBD4                     l11217:
 31154                           
 31155                           ;flash.c: 117: flash_addr.Val = flash_addr.Val + 1024;
 31156  00BBD4  0E00               	movlw	0
 31157  00BBD6  240A               	addwf	flash_clear@flash_addr^0,w,c
 31158  00BBD8  6E0A               	movwf	flash_clear@flash_addr^0,c
 31159  00BBDA  0E04               	movlw	4
 31160  00BBDC  200B               	addwfc	(flash_clear@flash_addr+1)^0,w,c
 31161  00BBDE  6E0B               	movwf	(flash_clear@flash_addr+1)^0,c
 31162  00BBE0  0E00               	movlw	0
 31163  00BBE2  200C               	addwfc	(flash_clear@flash_addr+2)^0,w,c
 31164  00BBE4  6E0C               	movwf	(flash_clear@flash_addr+2)^0,c
 31165  00BBE6  0E00               	movlw	0
 31166  00BBE8  200D               	addwfc	(flash_clear@flash_addr+3)^0,w,c
 31167  00BBEA  6E0D               	movwf	(flash_clear@flash_addr+3)^0,c
 31168  00BBEC                     l779:
 31169  00BBEC  5005               	movf	flash_clear@endaddr^0,w,c
 31170  00BBEE  5C0A               	subwf	flash_clear@flash_addr^0,w,c
 31171  00BBF0  5006               	movf	(flash_clear@endaddr+1)^0,w,c
 31172  00BBF2  580B               	subwfb	(flash_clear@flash_addr+1)^0,w,c
 31173  00BBF4  5007               	movf	(flash_clear@endaddr+2)^0,w,c
 31174  00BBF6  580C               	subwfb	(flash_clear@flash_addr+2)^0,w,c
 31175  00BBF8  5008               	movf	(flash_clear@endaddr+3)^0,w,c
 31176  00BBFA  580D               	subwfb	(flash_clear@flash_addr+3)^0,w,c
 31177  00BBFC  A0D8               	btfss	status,0,c
 31178  00BBFE  EF03  F05E         	goto	u11141
 31179  00BC02  EF05  F05E         	goto	u11140
 31180  00BC06                     u11141:
 31181  00BC06  EFCA  F05D         	goto	l780
 31182  00BC0A                     u11140:
 31183  00BC0A  0012               	return		;funcret
 31184  00BC0C                     __end_of_flash_clear:
 31185                           	callstack 0
 31186                           
 31187 ;; *************** function _nvm_serialno_check *****************
 31188 ;; Defined at:
 31189 ;;		line 61 in file "nvm.c"
 31190 ;; Parameters:    Size  Location     Type
 31191 ;;  sno             2    0[COMRAM] PTR const unsigned char 
 31192 ;;		 -> g_nvm.flash.serialNum(8), g_nvm.flash(72), 
 31193 ;; Auto vars:     Size  Location     Type
 31194 ;;  i               1    3[COMRAM] unsigned char 
 31195 ;; Return value:  Size  Location     Type
 31196 ;;                  1    wreg      unsigned char 
 31197 ;; Registers used:
 31198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31199 ;; Tracked objects:
 31200 ;;		On entry : 0/0
 31201 ;;		On exit  : 0/0
 31202 ;;		Unchanged: 0/0
 31203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31208 ;;Total ram usage:        4 bytes
 31209 ;; Hardware stack levels used: 1
 31210 ;; Hardware stack levels required when called: 1
 31211 ;; This function calls:
 31212 ;;		Nothing
 31213 ;; This function is called by:
 31214 ;;		_nvm_init
 31215 ;; This function uses a non-reentrant model
 31216 ;;
 31217                           
 31218                           	psect	text154
 31219  00CA08                     __ptext154:
 31220                           	callstack 0
 31221  00CA08                     _nvm_serialno_check:
 31222                           	callstack 27
 31223  00CA08                     
 31224                           ;nvm.c: 63: uint8_t i;;nvm.c: 64: for (i = 0 ; i < 8 ; i++) {
 31225  00CA08  0E00               	movlw	0
 31226  00CA0A  6E04               	movwf	nvm_serialno_check@i^0,c
 31227  00CA0C                     l12107:
 31228                           
 31229                           ;nvm.c: 65: if (sno[i] == 0xff || sno[i] == 0x00)
 31230  00CA0C  5004               	movf	nvm_serialno_check@i^0,w,c
 31231  00CA0E  2401               	addwf	nvm_serialno_check@sno^0,w,c
 31232  00CA10  6ED9               	movwf	fsr2l,c
 31233  00CA12  0E00               	movlw	0
 31234  00CA14  2002               	addwfc	(nvm_serialno_check@sno+1)^0,w,c
 31235  00CA16  6EDA               	movwf	fsr2h,c
 31236  00CA18  28DE               	incf	postinc2,w,c
 31237  00CA1A  B4D8               	btfsc	status,2,c
 31238  00CA1C  EF12  F065         	goto	u12151
 31239  00CA20  EF14  F065         	goto	u12150
 31240  00CA24                     u12151:
 31241  00CA24  EF22  F065         	goto	l12111
 31242  00CA28                     u12150:
 31243  00CA28  5004               	movf	nvm_serialno_check@i^0,w,c
 31244  00CA2A  2401               	addwf	nvm_serialno_check@sno^0,w,c
 31245  00CA2C  6ED9               	movwf	fsr2l,c
 31246  00CA2E  0E00               	movlw	0
 31247  00CA30  2002               	addwfc	(nvm_serialno_check@sno+1)^0,w,c
 31248  00CA32  6EDA               	movwf	fsr2h,c
 31249  00CA34  50DF               	movf	indf2,w,c
 31250  00CA36  A4D8               	btfss	status,2,c
 31251  00CA38  EF20  F065         	goto	u12161
 31252  00CA3C  EF22  F065         	goto	u12160
 31253  00CA40                     u12161:
 31254  00CA40  EF25  F065         	goto	l12115
 31255  00CA44                     u12160:
 31256  00CA44                     l12111:
 31257                           
 31258                           ;nvm.c: 66: return 0;
 31259  00CA44  0E00               	movlw	0
 31260  00CA46  EF2F  F065         	goto	l1931
 31261  00CA4A                     l12115:
 31262  00CA4A  2A04               	incf	nvm_serialno_check@i^0,f,c
 31263  00CA4C  0E07               	movlw	7
 31264  00CA4E  6404               	cpfsgt	nvm_serialno_check@i^0,c
 31265  00CA50  EF2C  F065         	goto	u12171
 31266  00CA54  EF2E  F065         	goto	u12170
 31267  00CA58                     u12171:
 31268  00CA58  EF06  F065         	goto	l12107
 31269  00CA5C                     u12170:
 31270  00CA5C                     
 31271                           ;nvm.c: 67: };nvm.c: 68: return 1;
 31272  00CA5C  0E01               	movlw	1
 31273  00CA5E                     l1931:
 31274  00CA5E  0012               	return		;funcret
 31275  00CA60                     __end_of_nvm_serialno_check:
 31276                           	callstack 0
 31277                           
 31278 ;; *************** function _nvm_read_flash_all *****************
 31279 ;; Defined at:
 31280 ;;		line 102 in file "nvm.c"
 31281 ;; Parameters:    Size  Location     Type
 31282 ;;  flash           2   16[COMRAM] PTR struct .
 31283 ;;		 -> g_nvm(73), 
 31284 ;; Auto vars:     Size  Location     Type
 31285 ;;		None
 31286 ;; Return value:  Size  Location     Type
 31287 ;;                  1    wreg      void 
 31288 ;; Registers used:
 31289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31290 ;; Tracked objects:
 31291 ;;		On entry : 0/0
 31292 ;;		On exit  : 0/0
 31293 ;;		Unchanged: 0/0
 31294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31299 ;;Total ram usage:        2 bytes
 31300 ;; Hardware stack levels used: 1
 31301 ;; Hardware stack levels required when called: 2
 31302 ;; This function calls:
 31303 ;;		_flash_readBytes
 31304 ;; This function is called by:
 31305 ;;		_build_response
 31306 ;;		_nvm_init
 31307 ;; This function uses a non-reentrant model
 31308 ;;
 31309                           
 31310                           	psect	text155
 31311  00D3AE                     __ptext155:
 31312                           	callstack 0
 31313  00D3AE                     _nvm_read_flash_all:
 31314                           	callstack 26
 31315  00D3AE                     
 31316                           ;nvm.c: 104: flash_readBytes(0xf400, flash->byte, 72);
 31317  00D3AE  0E00               	movlw	0
 31318  00D3B0  6E01               	movwf	flash_readBytes@startaddr^0,c
 31319  00D3B2  0EF4               	movlw	244
 31320  00D3B4  6E02               	movwf	(flash_readBytes@startaddr+1)^0,c
 31321  00D3B6  0E00               	movlw	0
 31322  00D3B8  6E03               	movwf	(flash_readBytes@startaddr+2)^0,c
 31323  00D3BA  0E00               	movlw	0
 31324  00D3BC  6E04               	movwf	(flash_readBytes@startaddr+3)^0,c
 31325  00D3BE  C011  F005         	movff	nvm_read_flash_all@flash,flash_readBytes@flash_array
 31326  00D3C2  C012  F006         	movff	nvm_read_flash_all@flash+1,flash_readBytes@flash_array+1
 31327  00D3C6  0E00               	movlw	0
 31328  00D3C8  6E08               	movwf	(flash_readBytes@num_bytes+1)^0,c
 31329  00D3CA  0E48               	movlw	72
 31330  00D3CC  6E07               	movwf	flash_readBytes@num_bytes^0,c
 31331  00D3CE  EC23  F063         	call	_flash_readBytes	;wreg free
 31332  00D3D2  0012               	return		;funcret
 31333  00D3D4                     __end_of_nvm_read_flash_all:
 31334                           	callstack 0
 31335                           
 31336 ;; *************** function _flash_readBytes *****************
 31337 ;; Defined at:
 31338 ;;		line 9 in file "bsp/flash.c"
 31339 ;; Parameters:    Size  Location     Type
 31340 ;;  startaddr       4    0[COMRAM] unsigned long 
 31341 ;;  flash_array     2    4[COMRAM] PTR unsigned char 
 31342 ;;		 -> nvm_read_flash_all@flash(2), g_nvm(73), 
 31343 ;;  num_bytes       2    6[COMRAM] unsigned int 
 31344 ;; Auto vars:     Size  Location     Type
 31345 ;;  tblptr_save     4   12[COMRAM] struct .
 31346 ;;  flash_addr      4    8[COMRAM] struct .
 31347 ;; Return value:  Size  Location     Type
 31348 ;;                  1    wreg      void 
 31349 ;; Registers used:
 31350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31351 ;; Tracked objects:
 31352 ;;		On entry : 0/0
 31353 ;;		On exit  : 0/0
 31354 ;;		Unchanged: 0/0
 31355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31356 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31357 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31359 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31360 ;;Total ram usage:       16 bytes
 31361 ;; Hardware stack levels used: 1
 31362 ;; Hardware stack levels required when called: 1
 31363 ;; This function calls:
 31364 ;;		Nothing
 31365 ;; This function is called by:
 31366 ;;		_nvm_read_flash_all
 31367 ;; This function uses a non-reentrant model
 31368 ;;
 31369                           
 31370                           	psect	text156
 31371  00C646                     __ptext156:
 31372                           	callstack 0
 31373  00C646                     _flash_readBytes:
 31374                           	callstack 26
 31375  00C646                     
 31376                           ;flash.c: 11: DWORD_VAL flash_addr;;flash.c: 12: DWORD_VAL tblptr_save;;flash.c: 14: fla
      +                          sh_addr.Val = startaddr;
 31377  00C646  C001  F009         	movff	flash_readBytes@startaddr,flash_readBytes@flash_addr
 31378  00C64A  C002  F00A         	movff	flash_readBytes@startaddr+1,flash_readBytes@flash_addr+1
 31379  00C64E  C003  F00B         	movff	flash_readBytes@startaddr+2,flash_readBytes@flash_addr+2
 31380  00C652  C004  F00C         	movff	flash_readBytes@startaddr+3,flash_readBytes@flash_addr+3
 31381                           
 31382                           ;flash.c: 16: tblptr_save.byte.UB = TBLPTRU;
 31383  00C656  CFF8 F00F          	movff	tblptru,flash_readBytes@tblptr_save+2	;volatile
 31384                           
 31385                           ;flash.c: 17: tblptr_save.byte.HB = TBLPTRH;
 31386  00C65A  CFF7 F00E          	movff	tblptrh,flash_readBytes@tblptr_save+1	;volatile
 31387                           
 31388                           ;flash.c: 18: tblptr_save.byte.LB = TBLPTRL;
 31389  00C65E  CFF6 F00D          	movff	tblptrl,flash_readBytes@tblptr_save	;volatile
 31390                           
 31391                           ;flash.c: 20: TBLPTRU = flash_addr.byte.UB;
 31392  00C662  C00B  FFF8         	movff	flash_readBytes@flash_addr+2,tblptru	;volatile
 31393                           
 31394                           ;flash.c: 21: TBLPTRH = flash_addr.byte.HB;
 31395  00C666  C00A  FFF7         	movff	flash_readBytes@flash_addr+1,tblptrh	;volatile
 31396                           
 31397                           ;flash.c: 22: TBLPTRL = flash_addr.byte.LB;
 31398  00C66A  C009  FFF6         	movff	flash_readBytes@flash_addr,tblptrl	;volatile
 31399                           
 31400                           ;flash.c: 24: while(num_bytes--)
 31401  00C66E  EF42  F063         	goto	l11157
 31402  00C672                     l761:
 31403  00C672  0009               	tblrd		*+	;# 
 31404  00C674                     
 31405                           ;flash.c: 28: *flash_array++ = TABLAT;
 31406  00C674  C005  FFD9         	movff	flash_readBytes@flash_array,fsr2l
 31407  00C678  C006  FFDA         	movff	flash_readBytes@flash_array+1,fsr2h
 31408  00C67C  CFF5 FFDF          	movff	tablat,indf2	;volatile
 31409  00C680  4A05               	infsnz	flash_readBytes@flash_array^0,f,c
 31410  00C682  2A06               	incf	(flash_readBytes@flash_array+1)^0,f,c
 31411  00C684                     l11157:
 31412  00C684  0607               	decf	flash_readBytes@num_bytes^0,f,c
 31413  00C686  A0D8               	btfss	status,0,c
 31414  00C688  0608               	decf	(flash_readBytes@num_bytes+1)^0,f,c
 31415  00C68A  2807               	incf	flash_readBytes@num_bytes^0,w,c
 31416  00C68C  E106               	bnz	u11031
 31417  00C68E  2808               	incf	(flash_readBytes@num_bytes+1)^0,w,c
 31418  00C690  A4D8               	btfss	status,2,c
 31419  00C692  EF4D  F063         	goto	u11031
 31420  00C696  EF4F  F063         	goto	u11030
 31421  00C69A                     u11031:
 31422  00C69A  EF39  F063         	goto	l761
 31423  00C69E                     u11030:
 31424  00C69E                     
 31425                           ;flash.c: 29: };flash.c: 31: TBLPTRU = tblptr_save.byte.UB;
 31426  00C69E  C00F  FFF8         	movff	flash_readBytes@tblptr_save+2,tblptru	;volatile
 31427                           
 31428                           ;flash.c: 32: TBLPTRH = tblptr_save.byte.HB;
 31429  00C6A2  C00E  FFF7         	movff	flash_readBytes@tblptr_save+1,tblptrh	;volatile
 31430                           
 31431                           ;flash.c: 33: TBLPTRL = tblptr_save.byte.LB;
 31432  00C6A6  C00D  FFF6         	movff	flash_readBytes@tblptr_save,tblptrl	;volatile
 31433  00C6AA  0012               	return		;funcret
 31434  00C6AC                     __end_of_flash_readBytes:
 31435                           	callstack 0
 31436                           
 31437 ;; *************** function _nvm_clear *****************
 31438 ;; Defined at:
 31439 ;;		line 49 in file "nvm.c"
 31440 ;; Parameters:    Size  Location     Type
 31441 ;;		None
 31442 ;; Auto vars:     Size  Location     Type
 31443 ;;		None
 31444 ;; Return value:  Size  Location     Type
 31445 ;;                  1    wreg      void 
 31446 ;; Registers used:
 31447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31448 ;; Tracked objects:
 31449 ;;		On entry : 0/0
 31450 ;;		On exit  : 0/0
 31451 ;;		Unchanged: 0/0
 31452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31457 ;;Total ram usage:        0 bytes
 31458 ;; Hardware stack levels used: 1
 31459 ;; Hardware stack levels required when called: 7
 31460 ;; This function calls:
 31461 ;;		_nvm_clear_flash
 31462 ;; This function is called by:
 31463 ;;		_nvm_clear_all
 31464 ;;		_nvm_init
 31465 ;; This function uses a non-reentrant model
 31466 ;;
 31467                           
 31468                           	psect	text157
 31469  00D664                     __ptext157:
 31470                           	callstack 0
 31471  00D664                     _nvm_clear:
 31472                           	callstack 20
 31473  00D664                     
 31474                           ;nvm.c: 51: nvm_clear_flash();
 31475  00D664  EC65  F050         	call	_nvm_clear_flash	;wreg free
 31476  00D668  0012               	return		;funcret
 31477  00D66A                     __end_of_nvm_clear:
 31478                           	callstack 0
 31479                           
 31480 ;; *************** function _nvm_clear_flash *****************
 31481 ;; Defined at:
 31482 ;;		line 20 in file "nvm.c"
 31483 ;; Parameters:    Size  Location     Type
 31484 ;;		None
 31485 ;; Auto vars:     Size  Location     Type
 31486 ;;		None
 31487 ;; Return value:  Size  Location     Type
 31488 ;;                  1    wreg      void 
 31489 ;; Registers used:
 31490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31491 ;; Tracked objects:
 31492 ;;		On entry : 0/0
 31493 ;;		On exit  : 0/0
 31494 ;;		Unchanged: 0/0
 31495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31500 ;;Total ram usage:        0 bytes
 31501 ;; Hardware stack levels used: 1
 31502 ;; Hardware stack levels required when called: 6
 31503 ;; This function calls:
 31504 ;;		_build_time
 31505 ;; This function is called by:
 31506 ;;		_nvm_clear
 31507 ;; This function uses a non-reentrant model
 31508 ;;
 31509                           
 31510                           	psect	text158
 31511  00A0CA                     __ptext158:
 31512                           	callstack 0
 31513  00A0CA                     _nvm_clear_flash:
 31514                           	callstack 20
 31515  00A0CA                     
 31516                           ;nvm.c: 22: g_nvm.flash.filter_mode = RAW_MODE;
 31517  00A0CA  0E00               	movlw	0
 31518  00A0CC  0101               	movlb	1	; () banked
 31519  00A0CE  6F91               	movwf	(_g_nvm+1)& (0+255),b
 31520                           
 31521                           ;nvm.c: 23: g_nvm.flash.window_size = LEVEL_14;
 31522  00A0D0  0E0E               	movlw	14
 31523  00A0D2  6F92               	movwf	(_g_nvm+2)& (0+255),b
 31524                           
 31525                           ;nvm.c: 24: g_nvm.flash.temp_corf = CELSIUS;
 31526  00A0D4  0E00               	movlw	0
 31527  00A0D6  6F93               	movwf	(_g_nvm+3)& (0+255),b
 31528                           
 31529                           ;nvm.c: 25: g_nvm.flash.temp_compensate = TEMP_NOT_COMPENSATION;
 31530  00A0D8  0E00               	movlw	0
 31531  00A0DA  6F94               	movwf	(_g_nvm+4)& (0+255),b
 31532                           
 31533                           ;nvm.c: 27: g_nvm.flash.baseLine_uV = 0.0f;
 31534  00A0DC  0E00               	movlw	0
 31535  00A0DE  6F95               	movwf	(_g_nvm+5)& (0+255),b
 31536  00A0E0  0E00               	movlw	0
 31537  00A0E2  6F96               	movwf	(_g_nvm+6)& (0+255),b
 31538  00A0E4  0E00               	movlw	0
 31539  00A0E6  6F97               	movwf	(_g_nvm+7)& (0+255),b
 31540  00A0E8  0E00               	movlw	0
 31541  00A0EA  6F98               	movwf	(_g_nvm+8)& (0+255),b
 31542                           
 31543                           ;nvm.c: 28: g_nvm.flash.nA_per_ppm = 0.0f;
 31544  00A0EC  0E00               	movlw	0
 31545  00A0EE  6F99               	movwf	(_g_nvm+9)& (0+255),b
 31546  00A0F0  0E00               	movlw	0
 31547  00A0F2  6F9A               	movwf	(_g_nvm+10)& (0+255),b
 31548  00A0F4  0E00               	movlw	0
 31549  00A0F6  6F9B               	movwf	(_g_nvm+11)& (0+255),b
 31550  00A0F8  0E00               	movlw	0
 31551  00A0FA  6F9C               	movwf	(_g_nvm+12)& (0+255),b
 31552                           
 31553                           ;nvm.c: 29: g_nvm.flash.gasOffset = 0.0f;
 31554  00A0FC  0E00               	movlw	0
 31555  00A0FE  6F9D               	movwf	(_g_nvm+13)& (0+255),b
 31556  00A100  0E00               	movlw	0
 31557  00A102  6F9E               	movwf	(_g_nvm+14)& (0+255),b
 31558  00A104  0E00               	movlw	0
 31559  00A106  6F9F               	movwf	(_g_nvm+15)& (0+255),b
 31560  00A108  0E00               	movlw	0
 31561  00A10A  6FA0               	movwf	(_g_nvm+16)& (0+255),b
 31562                           
 31563                           ;nvm.c: 30: g_nvm.flash.tempOffset= 0.0f;
 31564  00A10C  0E00               	movlw	0
 31565  00A10E  6FA1               	movwf	(_g_nvm+17)& (0+255),b
 31566  00A110  0E00               	movlw	0
 31567  00A112  6FA2               	movwf	(_g_nvm+18)& (0+255),b
 31568  00A114  0E00               	movlw	0
 31569  00A116  6FA3               	movwf	(_g_nvm+19)& (0+255),b
 31570  00A118  0E00               	movlw	0
 31571  00A11A  6FA4               	movwf	(_g_nvm+20)& (0+255),b
 31572                           
 31573                           ;nvm.c: 31: g_nvm.flash.calib_temp = 0.0f;
 31574  00A11C  0E00               	movlw	0
 31575  00A11E  6FA5               	movwf	(_g_nvm+21)& (0+255),b
 31576  00A120  0E00               	movlw	0
 31577  00A122  6FA6               	movwf	(_g_nvm+22)& (0+255),b
 31578  00A124  0E00               	movlw	0
 31579  00A126  6FA7               	movwf	(_g_nvm+23)& (0+255),b
 31580  00A128  0E00               	movlw	0
 31581  00A12A  6FA8               	movwf	(_g_nvm+24)& (0+255),b
 31582                           
 31583                           ;nvm.c: 33: g_nvm.flash.KMf_e_measure = 50.0f;
 31584  00A12C  0E00               	movlw	0
 31585  00A12E  6FA9               	movwf	(_g_nvm+25)& (0+255),b
 31586  00A130  0E00               	movlw	0
 31587  00A132  6FAA               	movwf	(_g_nvm+26)& (0+255),b
 31588  00A134  0E48               	movlw	72
 31589  00A136  6FAB               	movwf	(_g_nvm+27)& (0+255),b
 31590  00A138  0E42               	movlw	66
 31591  00A13A  6FAC               	movwf	(_g_nvm+28)& (0+255),b
 31592                           
 31593                           ;nvm.c: 34: g_nvm.flash.KMF_e_estimate = 1.0f;
 31594  00A13C  0E00               	movlw	0
 31595  00A13E  6FAD               	movwf	(_g_nvm+29)& (0+255),b
 31596  00A140  0E00               	movlw	0
 31597  00A142  6FAE               	movwf	(_g_nvm+30)& (0+255),b
 31598  00A144  0E80               	movlw	128
 31599  00A146  6FAF               	movwf	(_g_nvm+31)& (0+255),b
 31600  00A148  0E3F               	movlw	63
 31601  00A14A  6FB0               	movwf	(_g_nvm+32)& (0+255),b
 31602                           
 31603                           ;nvm.c: 36: g_nvm.flash.auto_Calib = OFF;
 31604  00A14C  0E00               	movlw	0
 31605  00A14E  6FB1               	movwf	(_g_nvm+33)& (0+255),b
 31606                           
 31607                           ;nvm.c: 37: g_nvm.flash.dummy = 0;
 31608  00A150  0E00               	movlw	0
 31609  00A152  6FB2               	movwf	(_g_nvm+34)& (0+255),b
 31610                           
 31611                           ;nvm.c: 38: g_nvm.flash.slope_min = 0.0f;
 31612  00A154  0E00               	movlw	0
 31613  00A156  6FB3               	movwf	(_g_nvm+35)& (0+255),b
 31614  00A158  0E00               	movlw	0
 31615  00A15A  6FB4               	movwf	(_g_nvm+36)& (0+255),b
 31616  00A15C  0E00               	movlw	0
 31617  00A15E  6FB5               	movwf	(_g_nvm+37)& (0+255),b
 31618  00A160  0E00               	movlw	0
 31619  00A162  6FB6               	movwf	(_g_nvm+38)& (0+255),b
 31620                           
 31621                           ;nvm.c: 39: g_nvm.flash.slope_max = 0.0f;
 31622  00A164  0E00               	movlw	0
 31623  00A166  6FB7               	movwf	(_g_nvm+39)& (0+255),b
 31624  00A168  0E00               	movlw	0
 31625  00A16A  6FB8               	movwf	(_g_nvm+40)& (0+255),b
 31626  00A16C  0E00               	movlw	0
 31627  00A16E  6FB9               	movwf	(_g_nvm+41)& (0+255),b
 31628  00A170  0E00               	movlw	0
 31629  00A172  6FBA               	movwf	(_g_nvm+42)& (0+255),b
 31630                           
 31631                           ;nvm.c: 40: g_nvm.flash.zeroShift_uV = 0.0f;
 31632  00A174  0E00               	movlw	0
 31633  00A176  6FBB               	movwf	(_g_nvm+43)& (0+255),b
 31634  00A178  0E00               	movlw	0
 31635  00A17A  6FBC               	movwf	(_g_nvm+44)& (0+255),b
 31636  00A17C  0E00               	movlw	0
 31637  00A17E  6FBD               	movwf	(_g_nvm+45)& (0+255),b
 31638  00A180  0E00               	movlw	0
 31639  00A182  6FBE               	movwf	(_g_nvm+46)& (0+255),b
 31640                           
 31641                           ;nvm.c: 41: g_nvm.flash.autoCalib_cnt = 0;
 31642  00A184  0E00               	movlw	0
 31643  00A186  6FC4               	movwf	(_g_nvm+52)& (0+255),b
 31644  00A188  0E00               	movlw	0
 31645  00A18A  6FC3               	movwf	(_g_nvm+51)& (0+255),b
 31646                           
 31647                           ;nvm.c: 42: g_nvm.flash.zeroRange_ppm = 1.0f;
 31648  00A18C  0E00               	movlw	0
 31649  00A18E  6FBF               	movwf	(_g_nvm+47)& (0+255),b
 31650  00A190  0E00               	movlw	0
 31651  00A192  6FC0               	movwf	(_g_nvm+48)& (0+255),b
 31652  00A194  0E80               	movlw	128
 31653  00A196  6FC1               	movwf	(_g_nvm+49)& (0+255),b
 31654  00A198  0E3F               	movlw	63
 31655  00A19A  6FC2               	movwf	(_g_nvm+50)& (0+255),b
 31656                           
 31657                           ;nvm.c: 44: g_nvm.flash.exectime = 0;
 31658  00A19C  0E00               	movlw	0
 31659  00A19E  6FC5               	movwf	(_g_nvm+53)& (0+255),b
 31660  00A1A0  0E00               	movlw	0
 31661  00A1A2  6FC6               	movwf	(_g_nvm+54)& (0+255),b
 31662  00A1A4  0E00               	movlw	0
 31663  00A1A6  6FC7               	movwf	(_g_nvm+55)& (0+255),b
 31664  00A1A8  0E00               	movlw	0
 31665  00A1AA  6FC8               	movwf	(_g_nvm+56)& (0+255),b
 31666                           
 31667                           ;nvm.c: 45: g_nvm.flash.usedtime = 0;
 31668  00A1AC  0E00               	movlw	0
 31669  00A1AE  6FC9               	movwf	(_g_nvm+57)& (0+255),b
 31670  00A1B0  0E00               	movlw	0
 31671  00A1B2  6FCA               	movwf	(_g_nvm+58)& (0+255),b
 31672  00A1B4  0E00               	movlw	0
 31673  00A1B6  6FCB               	movwf	(_g_nvm+59)& (0+255),b
 31674  00A1B8  0E00               	movlw	0
 31675  00A1BA  6FCC               	movwf	(_g_nvm+60)& (0+255),b
 31676  00A1BC                     
 31677                           ; BSR set to: 1
 31678                           ;nvm.c: 46: g_nvm.flash.buildtime = (uint32_t)build_time();
 31679  00A1BC  ECB5  F020         	call	_build_time	;wreg free
 31680  00A1C0  C036  F1CD         	movff	?_build_time,_g_nvm+61
 31681  00A1C4  C037  F1CE         	movff	?_build_time+1,_g_nvm+62
 31682  00A1C8  C038  F1CF         	movff	?_build_time+2,_g_nvm+63
 31683  00A1CC  C039  F1D0         	movff	?_build_time+3,_g_nvm+64
 31684  00A1D0  0012               	return		;funcret
 31685  00A1D2                     __end_of_nvm_clear_flash:
 31686                           	callstack 0
 31687                           
 31688 ;; *************** function _build_time *****************
 31689 ;; Defined at:
 31690 ;;		line 4 in file "util/build_time.c"
 31691 ;; Parameters:    Size  Location     Type
 31692 ;;		None
 31693 ;; Auto vars:     Size  Location     Type
 31694 ;;  tm             18   42[BANK0 ] struct tm
 31695 ;;  timestamp       4    0[BANK0 ] long 
 31696 ;; Return value:  Size  Location     Type
 31697 ;;                  4   53[COMRAM] long 
 31698 ;; Registers used:
 31699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31700 ;; Tracked objects:
 31701 ;;		On entry : 0/0
 31702 ;;		On exit  : 0/0
 31703 ;;		Unchanged: 0/0
 31704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31706 ;;      Locals:         0      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31708 ;;      Totals:         6      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31709 ;;Total ram usage:       66 bytes
 31710 ;; Hardware stack levels used: 1
 31711 ;; Hardware stack levels required when called: 5
 31712 ;; This function calls:
 31713 ;;		___wmul
 31714 ;;		_mktime
 31715 ;; This function is called by:
 31716 ;;		_nvm_clear_flash
 31717 ;; This function uses a non-reentrant model
 31718 ;;
 31719                           
 31720                           	psect	text159
 31721  00416A                     __ptext159:
 31722                           	callstack 0
 31723  00416A                     _build_time:
 31724                           	callstack 20
 31725  00416A                     
 31726                           ;build_time.c: 6: struct tm tm = { 0 };
 31727  00416A  EE22  F050         	lfsr	2,build_time@F37
 31728  00416E  EE10  F08A         	lfsr	1,build_time@tm
 31729  004172  0E11               	movlw	17
 31730  004174                     u18831:
 31731  004174  CFDB FFE3          	movff	plusw2,plusw1
 31732  004178  06E8               	decf	wreg,f,c
 31733  00417A  E2FC               	bc	u18831
 31734  00417C                     
 31735                           ;build_time.c: 7: time_t timestamp;;build_time.c: 9: tm.tm_year = ((("Dec 07 2022"[0] ==
      +                           '?')) ? 99 : ( ("Dec 07 2022"[ 7] - '0') * 1000 + ("Dec 07 2022"[ 8] - '0') * 100 + ("D
      +                          ec 07 2022"[ 9] - '0') * 10 + ("Dec 07 2022"[10] - '0') )) - 1900;
 31736  00417C  0E91               	movlw	low STR_2
 31737  00417E  6EF6               	movwf	tblptrl,c
 31738  004180                     	if	1	;There is more than 1 active tblptr byte
 31739  004180  0E23               	movlw	high STR_2
 31740  004182  6EF7               	movwf	tblptrh,c
 31741  004184                     	endif
 31742  004184                     	if	0	;There are less than 3 active tblptr bytes
 31743  004184                     	endif
 31744  004184  0008               	tblrd		*
 31745  004186  50F5               	movf	tablat,w,c
 31746  004188  0A3F               	xorlw	63
 31747  00418A  B4D8               	btfsc	status,2,c
 31748  00418C  EFCA  F020         	goto	u18841
 31749  004190  EFCC  F020         	goto	u18840
 31750  004194                     u18841:
 31751  004194  EF06  F021         	goto	l17459
 31752  004198                     u18840:
 31753  004198  0E98               	movlw	low (STR_2+7)
 31754  00419A  6EF6               	movwf	tblptrl,c
 31755  00419C  0E23               	movlw	high (STR_2+7)
 31756  00419E  6EF7               	movwf	tblptrh,c
 31757  0041A0                     	if	0	;tblptru may be non-zero
 31758  0041A0                     	endif
 31759  0041A0                     	if	0	;tblptru may be non-zero
 31760  0041A0                     	endif
 31761  0041A0  0008               	tblrd		*
 31762  0041A2  50F5               	movf	tablat,w,c
 31763  0041A4  6E01               	movwf	___wmul@multiplier^0,c
 31764  0041A6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 31765  0041A8  0E03               	movlw	3
 31766  0041AA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 31767  0041AC  0EE8               	movlw	232
 31768  0041AE  6E03               	movwf	___wmul@multiplicand^0,c
 31769  0041B0  ECEA  F069         	call	___wmul	;wreg free
 31770  0041B4  0E99               	movlw	low (STR_2+8)
 31771  0041B6  6EF6               	movwf	tblptrl,c
 31772  0041B8  0E23               	movlw	high (STR_2+8)
 31773  0041BA  6EF7               	movwf	tblptrh,c
 31774  0041BC                     	if	0	;tblptru may be non-zero
 31775  0041BC                     	endif
 31776  0041BC                     	if	0	;tblptru may be non-zero
 31777  0041BC                     	endif
 31778  0041BC  0008               	tblrd		*
 31779  0041BE  50F5               	movf	tablat,w,c
 31780  0041C0  0D64               	mullw	100
 31781  0041C2  CFF3 F03A          	movff	prodl,??_build_time
 31782  0041C6  CFF4 F03B          	movff	prodh,??_build_time+1
 31783  0041CA  0E9A               	movlw	low (STR_2+9)
 31784  0041CC  6EF6               	movwf	tblptrl,c
 31785  0041CE  0E23               	movlw	high (STR_2+9)
 31786  0041D0  6EF7               	movwf	tblptrh,c
 31787  0041D2                     	if	0	;tblptru may be non-zero
 31788  0041D2                     	endif
 31789  0041D2                     	if	0	;tblptru may be non-zero
 31790  0041D2                     	endif
 31791  0041D2  0008               	tblrd		*
 31792  0041D4  50F5               	movf	tablat,w,c
 31793  0041D6  0D0A               	mullw	10
 31794  0041D8  50F3               	movf	243,w,c
 31795  0041DA  263A               	addwf	??_build_time^0,f,c
 31796  0041DC  50F4               	movf	244,w,c
 31797  0041DE  223B               	addwfc	(??_build_time+1)^0,f,c
 31798  0041E0  5001               	movf	?___wmul^0,w,c
 31799  0041E2  263A               	addwf	??_build_time^0,f,c
 31800  0041E4  5002               	movf	(?___wmul+1)^0,w,c
 31801  0041E6  223B               	addwfc	(??_build_time+1)^0,f,c
 31802  0041E8  0E9B               	movlw	low (STR_2+10)
 31803  0041EA  6EF6               	movwf	tblptrl,c
 31804  0041EC  0E23               	movlw	high (STR_2+10)
 31805  0041EE  6EF7               	movwf	tblptrh,c
 31806  0041F0                     	if	0	;tblptru may be non-zero
 31807  0041F0                     	endif
 31808  0041F0                     	if	0	;tblptru may be non-zero
 31809  0041F0                     	endif
 31810  0041F0  0008               	tblrd		*
 31811  0041F2  50F5               	movf	tablat,w,c
 31812  0041F4  263A               	addwf	??_build_time^0,f,c
 31813  0041F6  0E00               	movlw	0
 31814  0041F8  223B               	addwfc	(??_build_time+1)^0,f,c
 31815  0041FA  0EB0               	movlw	176
 31816  0041FC  243A               	addwf	??_build_time^0,w,c
 31817  0041FE  0100               	movlb	0	; () banked
 31818  004200  6F64               	movwf	_build_time$156& (0+255),b
 31819  004202  0E2F               	movlw	47
 31820  004204  203B               	addwfc	(??_build_time+1)^0,w,c
 31821  004206  6F65               	movwf	(_build_time$156+1)& (0+255),b
 31822  004208  EF0B  F021         	goto	l17461
 31823  00420C                     l17459:
 31824  00420C  0E00               	movlw	0
 31825  00420E  0100               	movlb	0	; () banked
 31826  004210  6F65               	movwf	(_build_time$156+1)& (0+255),b
 31827  004212  0E63               	movlw	99
 31828  004214  6F64               	movwf	_build_time$156& (0+255),b
 31829  004216                     l17461:
 31830                           
 31831                           ; BSR set to: 0
 31832  004216  0E94               	movlw	148
 31833  004218  2564               	addwf	_build_time$156& (0+255),w,b
 31834  00421A  6F94               	movwf	(build_time@tm+10)& (0+255),b
 31835  00421C  0EF8               	movlw	248
 31836  00421E  2165               	addwfc	(_build_time$156+1)& (0+255),w,b
 31837  004220  6F95               	movwf	(build_time@tm+11)& (0+255),b
 31838  004222                     
 31839                           ; BSR set to: 0
 31840                           ;build_time.c: 10: tm.tm_mon = ((("Dec 07 2022"[0] == '?')) ? 99 : ( (("Dec 07 2022"[0] 
      +                          == 'J' && "Dec 07 2022"[1] == 'a' && "Dec 07 2022"[2] == 'n')) ? 1 : (("Dec 07 2022"[0] 
      +                          == 'F')) ? 2 : (("Dec 07 2022"[0] == 'M' && "Dec 07 2022"[1] == 'a' && "Dec 07 2022"[2] 
      +                          == 'r
 31841  004222  0E91               	movlw	low STR_2
 31842  004224  6EF6               	movwf	tblptrl,c
 31843  004226                     	if	1	;There is more than 1 active tblptr byte
 31844  004226  0E23               	movlw	high STR_2
 31845  004228  6EF7               	movwf	tblptrh,c
 31846  00422A                     	endif
 31847  00422A                     	if	0	;There are less than 3 active tblptr bytes
 31848  00422A                     	endif
 31849  00422A  0008               	tblrd		*
 31850  00422C  50F5               	movf	tablat,w,c
 31851  00422E  0A3F               	xorlw	63
 31852  004230  B4D8               	btfsc	status,2,c
 31853  004232  EF1D  F021         	goto	u18851
 31854  004236  EF1F  F021         	goto	u18850
 31855  00423A                     u18851:
 31856  00423A  EFED  F022         	goto	l17563
 31857  00423E                     u18850:
 31858  00423E                     
 31859                           ; BSR set to: 0
 31860  00423E  0E91               	movlw	low STR_2
 31861  004240  6EF6               	movwf	tblptrl,c
 31862  004242                     	if	1	;There is more than 1 active tblptr byte
 31863  004242  0E23               	movlw	high STR_2
 31864  004244  6EF7               	movwf	tblptrh,c
 31865  004246                     	endif
 31866  004246                     	if	0	;There are less than 3 active tblptr bytes
 31867  004246                     	endif
 31868  004246  0008               	tblrd		*
 31869  004248  50F5               	movf	tablat,w,c
 31870  00424A  0A4A               	xorlw	74
 31871  00424C  A4D8               	btfss	status,2,c
 31872  00424E  EF2B  F021         	goto	u18861
 31873  004252  EF2D  F021         	goto	u18860
 31874  004256                     u18861:
 31875  004256  EF49  F021         	goto	l17471
 31876  00425A                     u18860:
 31877  00425A                     
 31878                           ; BSR set to: 0
 31879  00425A  0E92               	movlw	low (STR_2+1)
 31880  00425C  6EF6               	movwf	tblptrl,c
 31881  00425E  0E23               	movlw	high (STR_2+1)
 31882  004260  6EF7               	movwf	tblptrh,c
 31883  004262                     	if	0	;tblptru may be non-zero
 31884  004262                     	endif
 31885  004262                     	if	0	;tblptru may be non-zero
 31886  004262                     	endif
 31887  004262  0008               	tblrd		*
 31888  004264  50F5               	movf	tablat,w,c
 31889  004266  0A61               	xorlw	97
 31890  004268  A4D8               	btfss	status,2,c
 31891  00426A  EF39  F021         	goto	u18871
 31892  00426E  EF3B  F021         	goto	u18870
 31893  004272                     u18871:
 31894  004272  EF49  F021         	goto	l17471
 31895  004276                     u18870:
 31896  004276                     
 31897                           ; BSR set to: 0
 31898  004276  0E93               	movlw	low (STR_2+2)
 31899  004278  6EF6               	movwf	tblptrl,c
 31900  00427A  0E23               	movlw	high (STR_2+2)
 31901  00427C  6EF7               	movwf	tblptrh,c
 31902  00427E                     	if	0	;tblptru may be non-zero
 31903  00427E                     	endif
 31904  00427E                     	if	0	;tblptru may be non-zero
 31905  00427E                     	endif
 31906  00427E  0008               	tblrd		*
 31907  004280  50F5               	movf	tablat,w,c
 31908  004282  0A6E               	xorlw	110
 31909  004284  B4D8               	btfsc	status,2,c
 31910  004286  EF47  F021         	goto	u18881
 31911  00428A  EF49  F021         	goto	u18880
 31912  00428E                     u18881:
 31913  00428E  EFE3  F022         	goto	l17559
 31914  004292                     u18880:
 31915  004292                     l17471:
 31916                           
 31917                           ; BSR set to: 0
 31918  004292  0E91               	movlw	low STR_2
 31919  004294  6EF6               	movwf	tblptrl,c
 31920  004296                     	if	1	;There is more than 1 active tblptr byte
 31921  004296  0E23               	movlw	high STR_2
 31922  004298  6EF7               	movwf	tblptrh,c
 31923  00429A                     	endif
 31924  00429A                     	if	0	;There are less than 3 active tblptr bytes
 31925  00429A                     	endif
 31926  00429A  0008               	tblrd		*
 31927  00429C  50F5               	movf	tablat,w,c
 31928  00429E  0A46               	xorlw	70
 31929  0042A0  B4D8               	btfsc	status,2,c
 31930  0042A2  EF55  F021         	goto	u18891
 31931  0042A6  EF57  F021         	goto	u18890
 31932  0042AA                     u18891:
 31933  0042AA  EFD9  F022         	goto	l17555
 31934  0042AE                     u18890:
 31935  0042AE                     
 31936                           ; BSR set to: 0
 31937  0042AE  0E91               	movlw	low STR_2
 31938  0042B0  6EF6               	movwf	tblptrl,c
 31939  0042B2                     	if	1	;There is more than 1 active tblptr byte
 31940  0042B2  0E23               	movlw	high STR_2
 31941  0042B4  6EF7               	movwf	tblptrh,c
 31942  0042B6                     	endif
 31943  0042B6                     	if	0	;There are less than 3 active tblptr bytes
 31944  0042B6                     	endif
 31945  0042B6  0008               	tblrd		*
 31946  0042B8  50F5               	movf	tablat,w,c
 31947  0042BA  0A4D               	xorlw	77
 31948  0042BC  A4D8               	btfss	status,2,c
 31949  0042BE  EF63  F021         	goto	u18901
 31950  0042C2  EF65  F021         	goto	u18900
 31951  0042C6                     u18901:
 31952  0042C6  EF81  F021         	goto	l17479
 31953  0042CA                     u18900:
 31954  0042CA                     
 31955                           ; BSR set to: 0
 31956  0042CA  0E92               	movlw	low (STR_2+1)
 31957  0042CC  6EF6               	movwf	tblptrl,c
 31958  0042CE  0E23               	movlw	high (STR_2+1)
 31959  0042D0  6EF7               	movwf	tblptrh,c
 31960  0042D2                     	if	0	;tblptru may be non-zero
 31961  0042D2                     	endif
 31962  0042D2                     	if	0	;tblptru may be non-zero
 31963  0042D2                     	endif
 31964  0042D2  0008               	tblrd		*
 31965  0042D4  50F5               	movf	tablat,w,c
 31966  0042D6  0A61               	xorlw	97
 31967  0042D8  A4D8               	btfss	status,2,c
 31968  0042DA  EF71  F021         	goto	u18911
 31969  0042DE  EF73  F021         	goto	u18910
 31970  0042E2                     u18911:
 31971  0042E2  EF81  F021         	goto	l17479
 31972  0042E6                     u18910:
 31973  0042E6                     
 31974                           ; BSR set to: 0
 31975  0042E6  0E93               	movlw	low (STR_2+2)
 31976  0042E8  6EF6               	movwf	tblptrl,c
 31977  0042EA  0E23               	movlw	high (STR_2+2)
 31978  0042EC  6EF7               	movwf	tblptrh,c
 31979  0042EE                     	if	0	;tblptru may be non-zero
 31980  0042EE                     	endif
 31981  0042EE                     	if	0	;tblptru may be non-zero
 31982  0042EE                     	endif
 31983  0042EE  0008               	tblrd		*
 31984  0042F0  50F5               	movf	tablat,w,c
 31985  0042F2  0A72               	xorlw	114
 31986  0042F4  B4D8               	btfsc	status,2,c
 31987  0042F6  EF7F  F021         	goto	u18921
 31988  0042FA  EF81  F021         	goto	u18920
 31989  0042FE                     u18921:
 31990  0042FE  EFCF  F022         	goto	l17551
 31991  004302                     u18920:
 31992  004302                     l17479:
 31993                           
 31994                           ; BSR set to: 0
 31995  004302  0E91               	movlw	low STR_2
 31996  004304  6EF6               	movwf	tblptrl,c
 31997  004306                     	if	1	;There is more than 1 active tblptr byte
 31998  004306  0E23               	movlw	high STR_2
 31999  004308  6EF7               	movwf	tblptrh,c
 32000  00430A                     	endif
 32001  00430A                     	if	0	;There are less than 3 active tblptr bytes
 32002  00430A                     	endif
 32003  00430A  0008               	tblrd		*
 32004  00430C  50F5               	movf	tablat,w,c
 32005  00430E  0A41               	xorlw	65
 32006  004310  A4D8               	btfss	status,2,c
 32007  004312  EF8D  F021         	goto	u18931
 32008  004316  EF8F  F021         	goto	u18930
 32009  00431A                     u18931:
 32010  00431A  EF9D  F021         	goto	l17483
 32011  00431E                     u18930:
 32012  00431E                     
 32013                           ; BSR set to: 0
 32014  00431E  0E92               	movlw	low (STR_2+1)
 32015  004320  6EF6               	movwf	tblptrl,c
 32016  004322  0E23               	movlw	high (STR_2+1)
 32017  004324  6EF7               	movwf	tblptrh,c
 32018  004326                     	if	0	;tblptru may be non-zero
 32019  004326                     	endif
 32020  004326                     	if	0	;tblptru may be non-zero
 32021  004326                     	endif
 32022  004326  0008               	tblrd		*
 32023  004328  50F5               	movf	tablat,w,c
 32024  00432A  0A70               	xorlw	112
 32025  00432C  B4D8               	btfsc	status,2,c
 32026  00432E  EF9B  F021         	goto	u18941
 32027  004332  EF9D  F021         	goto	u18940
 32028  004336                     u18941:
 32029  004336  EFC5  F022         	goto	l17547
 32030  00433A                     u18940:
 32031  00433A                     l17483:
 32032                           
 32033                           ; BSR set to: 0
 32034  00433A  0E91               	movlw	low STR_2
 32035  00433C  6EF6               	movwf	tblptrl,c
 32036  00433E                     	if	1	;There is more than 1 active tblptr byte
 32037  00433E  0E23               	movlw	high STR_2
 32038  004340  6EF7               	movwf	tblptrh,c
 32039  004342                     	endif
 32040  004342                     	if	0	;There are less than 3 active tblptr bytes
 32041  004342                     	endif
 32042  004342  0008               	tblrd		*
 32043  004344  50F5               	movf	tablat,w,c
 32044  004346  0A4D               	xorlw	77
 32045  004348  A4D8               	btfss	status,2,c
 32046  00434A  EFA9  F021         	goto	u18951
 32047  00434E  EFAB  F021         	goto	u18950
 32048  004352                     u18951:
 32049  004352  EFC7  F021         	goto	l17489
 32050  004356                     u18950:
 32051  004356                     
 32052                           ; BSR set to: 0
 32053  004356  0E92               	movlw	low (STR_2+1)
 32054  004358  6EF6               	movwf	tblptrl,c
 32055  00435A  0E23               	movlw	high (STR_2+1)
 32056  00435C  6EF7               	movwf	tblptrh,c
 32057  00435E                     	if	0	;tblptru may be non-zero
 32058  00435E                     	endif
 32059  00435E                     	if	0	;tblptru may be non-zero
 32060  00435E                     	endif
 32061  00435E  0008               	tblrd		*
 32062  004360  50F5               	movf	tablat,w,c
 32063  004362  0A61               	xorlw	97
 32064  004364  A4D8               	btfss	status,2,c
 32065  004366  EFB7  F021         	goto	u18961
 32066  00436A  EFB9  F021         	goto	u18960
 32067  00436E                     u18961:
 32068  00436E  EFC7  F021         	goto	l17489
 32069  004372                     u18960:
 32070  004372                     
 32071                           ; BSR set to: 0
 32072  004372  0E93               	movlw	low (STR_2+2)
 32073  004374  6EF6               	movwf	tblptrl,c
 32074  004376  0E23               	movlw	high (STR_2+2)
 32075  004378  6EF7               	movwf	tblptrh,c
 32076  00437A                     	if	0	;tblptru may be non-zero
 32077  00437A                     	endif
 32078  00437A                     	if	0	;tblptru may be non-zero
 32079  00437A                     	endif
 32080  00437A  0008               	tblrd		*
 32081  00437C  50F5               	movf	tablat,w,c
 32082  00437E  0A79               	xorlw	121
 32083  004380  B4D8               	btfsc	status,2,c
 32084  004382  EFC5  F021         	goto	u18971
 32085  004386  EFC7  F021         	goto	u18970
 32086  00438A                     u18971:
 32087  00438A  EFBB  F022         	goto	l17543
 32088  00438E                     u18970:
 32089  00438E                     l17489:
 32090                           
 32091                           ; BSR set to: 0
 32092  00438E  0E91               	movlw	low STR_2
 32093  004390  6EF6               	movwf	tblptrl,c
 32094  004392                     	if	1	;There is more than 1 active tblptr byte
 32095  004392  0E23               	movlw	high STR_2
 32096  004394  6EF7               	movwf	tblptrh,c
 32097  004396                     	endif
 32098  004396                     	if	0	;There are less than 3 active tblptr bytes
 32099  004396                     	endif
 32100  004396  0008               	tblrd		*
 32101  004398  50F5               	movf	tablat,w,c
 32102  00439A  0A4A               	xorlw	74
 32103  00439C  A4D8               	btfss	status,2,c
 32104  00439E  EFD3  F021         	goto	u18981
 32105  0043A2  EFD5  F021         	goto	u18980
 32106  0043A6                     u18981:
 32107  0043A6  EFF1  F021         	goto	l17495
 32108  0043AA                     u18980:
 32109  0043AA                     
 32110                           ; BSR set to: 0
 32111  0043AA  0E92               	movlw	low (STR_2+1)
 32112  0043AC  6EF6               	movwf	tblptrl,c
 32113  0043AE  0E23               	movlw	high (STR_2+1)
 32114  0043B0  6EF7               	movwf	tblptrh,c
 32115  0043B2                     	if	0	;tblptru may be non-zero
 32116  0043B2                     	endif
 32117  0043B2                     	if	0	;tblptru may be non-zero
 32118  0043B2                     	endif
 32119  0043B2  0008               	tblrd		*
 32120  0043B4  50F5               	movf	tablat,w,c
 32121  0043B6  0A75               	xorlw	117
 32122  0043B8  A4D8               	btfss	status,2,c
 32123  0043BA  EFE1  F021         	goto	u18991
 32124  0043BE  EFE3  F021         	goto	u18990
 32125  0043C2                     u18991:
 32126  0043C2  EFF1  F021         	goto	l17495
 32127  0043C6                     u18990:
 32128  0043C6                     
 32129                           ; BSR set to: 0
 32130  0043C6  0E93               	movlw	low (STR_2+2)
 32131  0043C8  6EF6               	movwf	tblptrl,c
 32132  0043CA  0E23               	movlw	high (STR_2+2)
 32133  0043CC  6EF7               	movwf	tblptrh,c
 32134  0043CE                     	if	0	;tblptru may be non-zero
 32135  0043CE                     	endif
 32136  0043CE                     	if	0	;tblptru may be non-zero
 32137  0043CE                     	endif
 32138  0043CE  0008               	tblrd		*
 32139  0043D0  50F5               	movf	tablat,w,c
 32140  0043D2  0A6E               	xorlw	110
 32141  0043D4  B4D8               	btfsc	status,2,c
 32142  0043D6  EFEF  F021         	goto	u19001
 32143  0043DA  EFF1  F021         	goto	u19000
 32144  0043DE                     u19001:
 32145  0043DE  EFB1  F022         	goto	l17539
 32146  0043E2                     u19000:
 32147  0043E2                     l17495:
 32148                           
 32149                           ; BSR set to: 0
 32150  0043E2  0E91               	movlw	low STR_2
 32151  0043E4  6EF6               	movwf	tblptrl,c
 32152  0043E6                     	if	1	;There is more than 1 active tblptr byte
 32153  0043E6  0E23               	movlw	high STR_2
 32154  0043E8  6EF7               	movwf	tblptrh,c
 32155  0043EA                     	endif
 32156  0043EA                     	if	0	;There are less than 3 active tblptr bytes
 32157  0043EA                     	endif
 32158  0043EA  0008               	tblrd		*
 32159  0043EC  50F5               	movf	tablat,w,c
 32160  0043EE  0A4A               	xorlw	74
 32161  0043F0  A4D8               	btfss	status,2,c
 32162  0043F2  EFFD  F021         	goto	u19011
 32163  0043F6  EFFF  F021         	goto	u19010
 32164  0043FA                     u19011:
 32165  0043FA  EF1B  F022         	goto	l17501
 32166  0043FE                     u19010:
 32167  0043FE                     
 32168                           ; BSR set to: 0
 32169  0043FE  0E92               	movlw	low (STR_2+1)
 32170  004400  6EF6               	movwf	tblptrl,c
 32171  004402  0E23               	movlw	high (STR_2+1)
 32172  004404  6EF7               	movwf	tblptrh,c
 32173  004406                     	if	0	;tblptru may be non-zero
 32174  004406                     	endif
 32175  004406                     	if	0	;tblptru may be non-zero
 32176  004406                     	endif
 32177  004406  0008               	tblrd		*
 32178  004408  50F5               	movf	tablat,w,c
 32179  00440A  0A75               	xorlw	117
 32180  00440C  A4D8               	btfss	status,2,c
 32181  00440E  EF0B  F022         	goto	u19021
 32182  004412  EF0D  F022         	goto	u19020
 32183  004416                     u19021:
 32184  004416  EF1B  F022         	goto	l17501
 32185  00441A                     u19020:
 32186  00441A                     
 32187                           ; BSR set to: 0
 32188  00441A  0E93               	movlw	low (STR_2+2)
 32189  00441C  6EF6               	movwf	tblptrl,c
 32190  00441E  0E23               	movlw	high (STR_2+2)
 32191  004420  6EF7               	movwf	tblptrh,c
 32192  004422                     	if	0	;tblptru may be non-zero
 32193  004422                     	endif
 32194  004422                     	if	0	;tblptru may be non-zero
 32195  004422                     	endif
 32196  004422  0008               	tblrd		*
 32197  004424  50F5               	movf	tablat,w,c
 32198  004426  0A6C               	xorlw	108
 32199  004428  B4D8               	btfsc	status,2,c
 32200  00442A  EF19  F022         	goto	u19031
 32201  00442E  EF1B  F022         	goto	u19030
 32202  004432                     u19031:
 32203  004432  EFA7  F022         	goto	l17535
 32204  004436                     u19030:
 32205  004436                     l17501:
 32206                           
 32207                           ; BSR set to: 0
 32208  004436  0E91               	movlw	low STR_2
 32209  004438  6EF6               	movwf	tblptrl,c
 32210  00443A                     	if	1	;There is more than 1 active tblptr byte
 32211  00443A  0E23               	movlw	high STR_2
 32212  00443C  6EF7               	movwf	tblptrh,c
 32213  00443E                     	endif
 32214  00443E                     	if	0	;There are less than 3 active tblptr bytes
 32215  00443E                     	endif
 32216  00443E  0008               	tblrd		*
 32217  004440  50F5               	movf	tablat,w,c
 32218  004442  0A41               	xorlw	65
 32219  004444  A4D8               	btfss	status,2,c
 32220  004446  EF27  F022         	goto	u19041
 32221  00444A  EF29  F022         	goto	u19040
 32222  00444E                     u19041:
 32223  00444E  EF37  F022         	goto	l17505
 32224  004452                     u19040:
 32225  004452                     
 32226                           ; BSR set to: 0
 32227  004452  0E92               	movlw	low (STR_2+1)
 32228  004454  6EF6               	movwf	tblptrl,c
 32229  004456  0E23               	movlw	high (STR_2+1)
 32230  004458  6EF7               	movwf	tblptrh,c
 32231  00445A                     	if	0	;tblptru may be non-zero
 32232  00445A                     	endif
 32233  00445A                     	if	0	;tblptru may be non-zero
 32234  00445A                     	endif
 32235  00445A  0008               	tblrd		*
 32236  00445C  50F5               	movf	tablat,w,c
 32237  00445E  0A75               	xorlw	117
 32238  004460  B4D8               	btfsc	status,2,c
 32239  004462  EF35  F022         	goto	u19051
 32240  004466  EF37  F022         	goto	u19050
 32241  00446A                     u19051:
 32242  00446A  EF9D  F022         	goto	l17531
 32243  00446E                     u19050:
 32244  00446E                     l17505:
 32245                           
 32246                           ; BSR set to: 0
 32247  00446E  0E91               	movlw	low STR_2
 32248  004470  6EF6               	movwf	tblptrl,c
 32249  004472                     	if	1	;There is more than 1 active tblptr byte
 32250  004472  0E23               	movlw	high STR_2
 32251  004474  6EF7               	movwf	tblptrh,c
 32252  004476                     	endif
 32253  004476                     	if	0	;There are less than 3 active tblptr bytes
 32254  004476                     	endif
 32255  004476  0008               	tblrd		*
 32256  004478  50F5               	movf	tablat,w,c
 32257  00447A  0A53               	xorlw	83
 32258  00447C  B4D8               	btfsc	status,2,c
 32259  00447E  EF43  F022         	goto	u19061
 32260  004482  EF45  F022         	goto	u19060
 32261  004486                     u19061:
 32262  004486  EF93  F022         	goto	l17527
 32263  00448A                     u19060:
 32264  00448A                     
 32265                           ; BSR set to: 0
 32266  00448A  0E91               	movlw	low STR_2
 32267  00448C  6EF6               	movwf	tblptrl,c
 32268  00448E                     	if	1	;There is more than 1 active tblptr byte
 32269  00448E  0E23               	movlw	high STR_2
 32270  004490  6EF7               	movwf	tblptrh,c
 32271  004492                     	endif
 32272  004492                     	if	0	;There are less than 3 active tblptr bytes
 32273  004492                     	endif
 32274  004492  0008               	tblrd		*
 32275  004494  50F5               	movf	tablat,w,c
 32276  004496  0A4F               	xorlw	79
 32277  004498  B4D8               	btfsc	status,2,c
 32278  00449A  EF51  F022         	goto	u19071
 32279  00449E  EF53  F022         	goto	u19070
 32280  0044A2                     u19071:
 32281  0044A2  EF89  F022         	goto	l17523
 32282  0044A6                     u19070:
 32283  0044A6                     
 32284                           ; BSR set to: 0
 32285  0044A6  0E91               	movlw	low STR_2
 32286  0044A8  6EF6               	movwf	tblptrl,c
 32287  0044AA                     	if	1	;There is more than 1 active tblptr byte
 32288  0044AA  0E23               	movlw	high STR_2
 32289  0044AC  6EF7               	movwf	tblptrh,c
 32290  0044AE                     	endif
 32291  0044AE                     	if	0	;There are less than 3 active tblptr bytes
 32292  0044AE                     	endif
 32293  0044AE  0008               	tblrd		*
 32294  0044B0  50F5               	movf	tablat,w,c
 32295  0044B2  0A4E               	xorlw	78
 32296  0044B4  B4D8               	btfsc	status,2,c
 32297  0044B6  EF5F  F022         	goto	u19081
 32298  0044BA  EF61  F022         	goto	u19080
 32299  0044BE                     u19081:
 32300  0044BE  EF7F  F022         	goto	l17519
 32301  0044C2                     u19080:
 32302  0044C2                     
 32303                           ; BSR set to: 0
 32304  0044C2  0E91               	movlw	low STR_2
 32305  0044C4  6EF6               	movwf	tblptrl,c
 32306  0044C6                     	if	1	;There is more than 1 active tblptr byte
 32307  0044C6  0E23               	movlw	high STR_2
 32308  0044C8  6EF7               	movwf	tblptrh,c
 32309  0044CA                     	endif
 32310  0044CA                     	if	0	;There are less than 3 active tblptr bytes
 32311  0044CA                     	endif
 32312  0044CA  0008               	tblrd		*
 32313  0044CC  50F5               	movf	tablat,w,c
 32314  0044CE  0A44               	xorlw	68
 32315  0044D0  B4D8               	btfsc	status,2,c
 32316  0044D2  EF6D  F022         	goto	u19091
 32317  0044D6  EF6F  F022         	goto	u19090
 32318  0044DA                     u19091:
 32319  0044DA  EF75  F022         	goto	l17515
 32320  0044DE                     u19090:
 32321  0044DE                     
 32322                           ; BSR set to: 0
 32323  0044DE  0E00               	movlw	0
 32324  0044E0  6F7F               	movwf	(_build_time$194+1)& (0+255),b
 32325  0044E2  0E63               	movlw	99
 32326  0044E4  6F7E               	movwf	_build_time$194& (0+255),b
 32327  0044E6  EF79  F022         	goto	l17517
 32328  0044EA                     l17515:
 32329                           
 32330                           ; BSR set to: 0
 32331  0044EA  0E00               	movlw	0
 32332  0044EC  6F7F               	movwf	(_build_time$194+1)& (0+255),b
 32333  0044EE  0E0C               	movlw	12
 32334  0044F0  6F7E               	movwf	_build_time$194& (0+255),b
 32335  0044F2                     l17517:
 32336                           
 32337                           ; BSR set to: 0
 32338  0044F2  C07E  F07C         	movff	_build_time$194,_build_time$193
 32339  0044F6  C07F  F07D         	movff	_build_time$194+1,_build_time$193+1
 32340  0044FA  EF83  F022         	goto	l17521
 32341  0044FE                     l17519:
 32342                           
 32343                           ; BSR set to: 0
 32344  0044FE  0E00               	movlw	0
 32345  004500  6F7D               	movwf	(_build_time$193+1)& (0+255),b
 32346  004502  0E0B               	movlw	11
 32347  004504  6F7C               	movwf	_build_time$193& (0+255),b
 32348  004506                     l17521:
 32349                           
 32350                           ; BSR set to: 0
 32351  004506  C07C  F07A         	movff	_build_time$193,_build_time$192
 32352  00450A  C07D  F07B         	movff	_build_time$193+1,_build_time$192+1
 32353  00450E  EF8D  F022         	goto	l17525
 32354  004512                     l17523:
 32355                           
 32356                           ; BSR set to: 0
 32357  004512  0E00               	movlw	0
 32358  004514  6F7B               	movwf	(_build_time$192+1)& (0+255),b
 32359  004516  0E0A               	movlw	10
 32360  004518  6F7A               	movwf	_build_time$192& (0+255),b
 32361  00451A                     l17525:
 32362                           
 32363                           ; BSR set to: 0
 32364  00451A  C07A  F078         	movff	_build_time$192,_build_time$191
 32365  00451E  C07B  F079         	movff	_build_time$192+1,_build_time$191+1
 32366  004522  EF97  F022         	goto	l17529
 32367  004526                     l17527:
 32368                           
 32369                           ; BSR set to: 0
 32370  004526  0E00               	movlw	0
 32371  004528  6F79               	movwf	(_build_time$191+1)& (0+255),b
 32372  00452A  0E09               	movlw	9
 32373  00452C  6F78               	movwf	_build_time$191& (0+255),b
 32374  00452E                     l17529:
 32375                           
 32376                           ; BSR set to: 0
 32377  00452E  C078  F076         	movff	_build_time$191,_build_time$190
 32378  004532  C079  F077         	movff	_build_time$191+1,_build_time$190+1
 32379  004536  EFA1  F022         	goto	l17533
 32380  00453A                     l17531:
 32381                           
 32382                           ; BSR set to: 0
 32383  00453A  0E00               	movlw	0
 32384  00453C  6F77               	movwf	(_build_time$190+1)& (0+255),b
 32385  00453E  0E08               	movlw	8
 32386  004540  6F76               	movwf	_build_time$190& (0+255),b
 32387  004542                     l17533:
 32388                           
 32389                           ; BSR set to: 0
 32390  004542  C076  F074         	movff	_build_time$190,_build_time$189
 32391  004546  C077  F075         	movff	_build_time$190+1,_build_time$189+1
 32392  00454A  EFAB  F022         	goto	l17537
 32393  00454E                     l17535:
 32394                           
 32395                           ; BSR set to: 0
 32396  00454E  0E00               	movlw	0
 32397  004550  6F75               	movwf	(_build_time$189+1)& (0+255),b
 32398  004552  0E07               	movlw	7
 32399  004554  6F74               	movwf	_build_time$189& (0+255),b
 32400  004556                     l17537:
 32401                           
 32402                           ; BSR set to: 0
 32403  004556  C074  F072         	movff	_build_time$189,_build_time$188
 32404  00455A  C075  F073         	movff	_build_time$189+1,_build_time$188+1
 32405  00455E  EFB5  F022         	goto	l17541
 32406  004562                     l17539:
 32407                           
 32408                           ; BSR set to: 0
 32409  004562  0E00               	movlw	0
 32410  004564  6F73               	movwf	(_build_time$188+1)& (0+255),b
 32411  004566  0E06               	movlw	6
 32412  004568  6F72               	movwf	_build_time$188& (0+255),b
 32413  00456A                     l17541:
 32414                           
 32415                           ; BSR set to: 0
 32416  00456A  C072  F070         	movff	_build_time$188,_build_time$187
 32417  00456E  C073  F071         	movff	_build_time$188+1,_build_time$187+1
 32418  004572  EFBF  F022         	goto	l17545
 32419  004576                     l17543:
 32420                           
 32421                           ; BSR set to: 0
 32422  004576  0E00               	movlw	0
 32423  004578  6F71               	movwf	(_build_time$187+1)& (0+255),b
 32424  00457A  0E05               	movlw	5
 32425  00457C  6F70               	movwf	_build_time$187& (0+255),b
 32426  00457E                     l17545:
 32427                           
 32428                           ; BSR set to: 0
 32429  00457E  C070  F06E         	movff	_build_time$187,_build_time$186
 32430  004582  C071  F06F         	movff	_build_time$187+1,_build_time$186+1
 32431  004586  EFC9  F022         	goto	l17549
 32432  00458A                     l17547:
 32433                           
 32434                           ; BSR set to: 0
 32435  00458A  0E00               	movlw	0
 32436  00458C  6F6F               	movwf	(_build_time$186+1)& (0+255),b
 32437  00458E  0E04               	movlw	4
 32438  004590  6F6E               	movwf	_build_time$186& (0+255),b
 32439  004592                     l17549:
 32440                           
 32441                           ; BSR set to: 0
 32442  004592  C06E  F06C         	movff	_build_time$186,_build_time$185
 32443  004596  C06F  F06D         	movff	_build_time$186+1,_build_time$185+1
 32444  00459A  EFD3  F022         	goto	l17553
 32445  00459E                     l17551:
 32446                           
 32447                           ; BSR set to: 0
 32448  00459E  0E00               	movlw	0
 32449  0045A0  6F6D               	movwf	(_build_time$185+1)& (0+255),b
 32450  0045A2  0E03               	movlw	3
 32451  0045A4  6F6C               	movwf	_build_time$185& (0+255),b
 32452  0045A6                     l17553:
 32453                           
 32454                           ; BSR set to: 0
 32455  0045A6  C06C  F06A         	movff	_build_time$185,_build_time$184
 32456  0045AA  C06D  F06B         	movff	_build_time$185+1,_build_time$184+1
 32457  0045AE  EFDD  F022         	goto	l17557
 32458  0045B2                     l17555:
 32459                           
 32460                           ; BSR set to: 0
 32461  0045B2  0E00               	movlw	0
 32462  0045B4  6F6B               	movwf	(_build_time$184+1)& (0+255),b
 32463  0045B6  0E02               	movlw	2
 32464  0045B8  6F6A               	movwf	_build_time$184& (0+255),b
 32465  0045BA                     l17557:
 32466                           
 32467                           ; BSR set to: 0
 32468  0045BA  C06A  F068         	movff	_build_time$184,_build_time$183
 32469  0045BE  C06B  F069         	movff	_build_time$184+1,_build_time$183+1
 32470  0045C2  EFE7  F022         	goto	l17561
 32471  0045C6                     l17559:
 32472                           
 32473                           ; BSR set to: 0
 32474  0045C6  0E00               	movlw	0
 32475  0045C8  6F69               	movwf	(_build_time$183+1)& (0+255),b
 32476  0045CA  0E01               	movlw	1
 32477  0045CC  6F68               	movwf	_build_time$183& (0+255),b
 32478  0045CE                     l17561:
 32479                           
 32480                           ; BSR set to: 0
 32481  0045CE  C068  F066         	movff	_build_time$183,_build_time$182
 32482  0045D2  C069  F067         	movff	_build_time$183+1,_build_time$182+1
 32483  0045D6  EFF1  F022         	goto	l17565
 32484  0045DA                     l17563:
 32485                           
 32486                           ; BSR set to: 0
 32487  0045DA  0E00               	movlw	0
 32488  0045DC  6F67               	movwf	(_build_time$182+1)& (0+255),b
 32489  0045DE  0E63               	movlw	99
 32490  0045E0  6F66               	movwf	_build_time$182& (0+255),b
 32491  0045E2                     l17565:
 32492                           
 32493                           ; BSR set to: 0
 32494  0045E2  0EFF               	movlw	255
 32495  0045E4  2566               	addwf	_build_time$182& (0+255),w,b
 32496  0045E6  6F92               	movwf	(build_time@tm+8)& (0+255),b
 32497  0045E8  0EFF               	movlw	255
 32498  0045EA  2167               	addwfc	(_build_time$182+1)& (0+255),w,b
 32499  0045EC  6F93               	movwf	(build_time@tm+9)& (0+255),b
 32500  0045EE                     
 32501                           ; BSR set to: 0
 32502                           ;build_time.c: 11: tm.tm_mday = ((("Dec 07 2022"[0] == '?')) ? 99 : ( (("Dec 07 2022"[4]
      +                           >= '0') ? ("Dec 07 2022"[4] - '0') * 10 : 0) + ("Dec 07 2022"[5] - '0') ));
 32503  0045EE  0E91               	movlw	low STR_2
 32504  0045F0  6EF6               	movwf	tblptrl,c
 32505  0045F2                     	if	1	;There is more than 1 active tblptr byte
 32506  0045F2  0E23               	movlw	high STR_2
 32507  0045F4  6EF7               	movwf	tblptrh,c
 32508  0045F6                     	endif
 32509  0045F6                     	if	0	;There are less than 3 active tblptr bytes
 32510  0045F6                     	endif
 32511  0045F6  0008               	tblrd		*
 32512  0045F8  50F5               	movf	tablat,w,c
 32513  0045FA  0A3F               	xorlw	63
 32514  0045FC  B4D8               	btfsc	status,2,c
 32515  0045FE  EF03  F023         	goto	u19101
 32516  004602  EF05  F023         	goto	u19100
 32517  004606                     u19101:
 32518  004606  EF43  F023         	goto	l17577
 32519  00460A                     u19100:
 32520  00460A                     
 32521                           ; BSR set to: 0
 32522  00460A  0E95               	movlw	low (STR_2+4)
 32523  00460C  6EF6               	movwf	tblptrl,c
 32524  00460E  0E23               	movlw	high (STR_2+4)
 32525  004610  6EF7               	movwf	tblptrh,c
 32526  004612                     	if	0	;tblptru may be non-zero
 32527  004612                     	endif
 32528  004612                     	if	0	;tblptru may be non-zero
 32529  004612                     	endif
 32530  004612  0E30               	movlw	48
 32531  004614  0008               	tblrd		*
 32532  004616  60F5               	cpfslt	tablat,c
 32533  004618  EF10  F023         	goto	u19111
 32534  00461C  EF12  F023         	goto	u19110
 32535  004620                     u19111:
 32536  004620  EF18  F023         	goto	l17573
 32537  004624                     u19110:
 32538  004624                     
 32539                           ; BSR set to: 0
 32540  004624  0E00               	movlw	0
 32541  004626  6F83               	movwf	(_build_time$200+1)& (0+255),b
 32542  004628  0E00               	movlw	0
 32543  00462A  6F82               	movwf	_build_time$200& (0+255),b
 32544  00462C  EF2F  F023         	goto	l17575
 32545  004630                     l17573:
 32546                           
 32547                           ; BSR set to: 0
 32548  004630  0E95               	movlw	low (STR_2+4)
 32549  004632  6EF6               	movwf	tblptrl,c
 32550  004634  0E23               	movlw	high (STR_2+4)
 32551  004636  6EF7               	movwf	tblptrh,c
 32552  004638                     	if	0	;tblptru may be non-zero
 32553  004638                     	endif
 32554  004638                     	if	0	;tblptru may be non-zero
 32555  004638                     	endif
 32556  004638  0008               	tblrd		*
 32557  00463A  CFF5 F03A          	movff	tablat,??_build_time
 32558  00463E  0ED0               	movlw	208
 32559  004640  243A               	addwf	??_build_time^0,w,c
 32560  004642  6E01               	movwf	___wmul@multiplier^0,c
 32561  004644  6A02               	clrf	(___wmul@multiplier+1)^0,c
 32562  004646  0EFF               	movlw	255
 32563  004648  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
 32564  00464A  0E00               	movlw	0
 32565  00464C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 32566  00464E  0E0A               	movlw	10
 32567  004650  6E03               	movwf	___wmul@multiplicand^0,c
 32568  004652  ECEA  F069         	call	___wmul	;wreg free
 32569  004656  C001  F082         	movff	?___wmul,_build_time$200
 32570  00465A  C002  F083         	movff	?___wmul+1,_build_time$200+1
 32571  00465E                     l17575:
 32572  00465E  0E96               	movlw	low (STR_2+5)
 32573  004660  6EF6               	movwf	tblptrl,c
 32574  004662  0E23               	movlw	high (STR_2+5)
 32575  004664  6EF7               	movwf	tblptrh,c
 32576  004666                     	if	0	;tblptru may be non-zero
 32577  004666                     	endif
 32578  004666                     	if	0	;tblptru may be non-zero
 32579  004666                     	endif
 32580  004666  0008               	tblrd		*
 32581  004668  50F5               	movf	tablat,w,c
 32582  00466A  0100               	movlb	0	; () banked
 32583  00466C  2582               	addwf	_build_time$200& (0+255),w,b
 32584  00466E  6E3A               	movwf	??_build_time^0,c
 32585  004670  0E00               	movlw	0
 32586  004672  2183               	addwfc	(_build_time$200+1)& (0+255),w,b
 32587  004674  6E3B               	movwf	(??_build_time+1)^0,c
 32588  004676  0ED0               	movlw	208
 32589  004678  243A               	addwf	??_build_time^0,w,c
 32590  00467A  6F80               	movwf	_build_time$199& (0+255),b
 32591  00467C  0EFF               	movlw	255
 32592  00467E  203B               	addwfc	(??_build_time+1)^0,w,c
 32593  004680  6F81               	movwf	(_build_time$199+1)& (0+255),b
 32594  004682  EF47  F023         	goto	l17579
 32595  004686                     l17577:
 32596                           
 32597                           ; BSR set to: 0
 32598  004686  0E00               	movlw	0
 32599  004688  6F81               	movwf	(_build_time$199+1)& (0+255),b
 32600  00468A  0E63               	movlw	99
 32601  00468C  6F80               	movwf	_build_time$199& (0+255),b
 32602  00468E                     l17579:
 32603                           
 32604                           ; BSR set to: 0
 32605  00468E  C080  F090         	movff	_build_time$199,build_time@tm+6
 32606  004692  C081  F091         	movff	_build_time$199+1,build_time@tm+7
 32607  004696                     
 32608                           ; BSR set to: 0
 32609                           ;build_time.c: 12: tm.tm_hour = ((("17:12:47"[0] == '?')) ? 99 : (("17:12:47"[0] - '0') 
      +                          * 10 + "17:12:47"[1] - '0')) - 9;
 32610  004696  0EA6               	movlw	low STR_36
 32611  004698  6EF6               	movwf	tblptrl,c
 32612  00469A                     	if	1	;There is more than 1 active tblptr byte
 32613  00469A  0E23               	movlw	high STR_36
 32614  00469C  6EF7               	movwf	tblptrh,c
 32615  00469E                     	endif
 32616  00469E                     	if	0	;There are less than 3 active tblptr bytes
 32617  00469E                     	endif
 32618  00469E  0008               	tblrd		*
 32619  0046A0  50F5               	movf	tablat,w,c
 32620  0046A2  0A3F               	xorlw	63
 32621  0046A4  B4D8               	btfsc	status,2,c
 32622  0046A6  EF57  F023         	goto	u19121
 32623  0046AA  EF59  F023         	goto	u19120
 32624  0046AE                     u19121:
 32625  0046AE  EF75  F023         	goto	l17585
 32626  0046B2                     u19120:
 32627  0046B2                     
 32628                           ; BSR set to: 0
 32629  0046B2  0EA6               	movlw	low STR_36
 32630  0046B4  6EF6               	movwf	tblptrl,c
 32631  0046B6                     	if	1	;There is more than 1 active tblptr byte
 32632  0046B6  0E23               	movlw	high STR_36
 32633  0046B8  6EF7               	movwf	tblptrh,c
 32634  0046BA                     	endif
 32635  0046BA                     	if	0	;There are less than 3 active tblptr bytes
 32636  0046BA                     	endif
 32637  0046BA  0008               	tblrd		*
 32638  0046BC  50F5               	movf	tablat,w,c
 32639  0046BE  0D0A               	mullw	10
 32640  0046C0  CFF3 F03A          	movff	prodl,??_build_time
 32641  0046C4  CFF4 F03B          	movff	prodh,??_build_time+1
 32642  0046C8  0EA7               	movlw	low (STR_36+1)
 32643  0046CA  6EF6               	movwf	tblptrl,c
 32644  0046CC  0E23               	movlw	high (STR_36+1)
 32645  0046CE  6EF7               	movwf	tblptrh,c
 32646  0046D0                     	if	0	;tblptru may be non-zero
 32647  0046D0                     	endif
 32648  0046D0                     	if	0	;tblptru may be non-zero
 32649  0046D0                     	endif
 32650  0046D0  0008               	tblrd		*
 32651  0046D2  50F5               	movf	tablat,w,c
 32652  0046D4  263A               	addwf	??_build_time^0,f,c
 32653  0046D6  0E00               	movlw	0
 32654  0046D8  223B               	addwfc	(??_build_time+1)^0,f,c
 32655  0046DA  0EF0               	movlw	240
 32656  0046DC  243A               	addwf	??_build_time^0,w,c
 32657  0046DE  6F84               	movwf	_build_time$204& (0+255),b
 32658  0046E0  0EFD               	movlw	253
 32659  0046E2  203B               	addwfc	(??_build_time+1)^0,w,c
 32660  0046E4  6F85               	movwf	(_build_time$204+1)& (0+255),b
 32661  0046E6  EF79  F023         	goto	l17587
 32662  0046EA                     l17585:
 32663                           
 32664                           ; BSR set to: 0
 32665  0046EA  0E00               	movlw	0
 32666  0046EC  6F85               	movwf	(_build_time$204+1)& (0+255),b
 32667  0046EE  0E63               	movlw	99
 32668  0046F0  6F84               	movwf	_build_time$204& (0+255),b
 32669  0046F2                     l17587:
 32670                           
 32671                           ; BSR set to: 0
 32672  0046F2  0EF7               	movlw	247
 32673  0046F4  2584               	addwf	_build_time$204& (0+255),w,b
 32674  0046F6  6F8E               	movwf	(build_time@tm+4)& (0+255),b
 32675  0046F8  0EFF               	movlw	255
 32676  0046FA  2185               	addwfc	(_build_time$204+1)& (0+255),w,b
 32677  0046FC  6F8F               	movwf	(build_time@tm+5)& (0+255),b
 32678  0046FE                     
 32679                           ; BSR set to: 0
 32680                           ;build_time.c: 13: tm.tm_min = ((("17:12:47"[0] == '?')) ? 99 : (("17:12:47"[3] - '0') *
      +                           10 + "17:12:47"[4] - '0'));
 32681  0046FE  0EA6               	movlw	low STR_36
 32682  004700  6EF6               	movwf	tblptrl,c
 32683  004702                     	if	1	;There is more than 1 active tblptr byte
 32684  004702  0E23               	movlw	high STR_36
 32685  004704  6EF7               	movwf	tblptrh,c
 32686  004706                     	endif
 32687  004706                     	if	0	;There are less than 3 active tblptr bytes
 32688  004706                     	endif
 32689  004706  0008               	tblrd		*
 32690  004708  50F5               	movf	tablat,w,c
 32691  00470A  0A3F               	xorlw	63
 32692  00470C  B4D8               	btfsc	status,2,c
 32693  00470E  EF8B  F023         	goto	u19131
 32694  004712  EF8D  F023         	goto	u19130
 32695  004716                     u19131:
 32696  004716  EFA9  F023         	goto	l17593
 32697  00471A                     u19130:
 32698  00471A                     
 32699                           ; BSR set to: 0
 32700  00471A  0EA9               	movlw	low (STR_36+3)
 32701  00471C  6EF6               	movwf	tblptrl,c
 32702  00471E  0E23               	movlw	high (STR_36+3)
 32703  004720  6EF7               	movwf	tblptrh,c
 32704  004722                     	if	0	;tblptru may be non-zero
 32705  004722                     	endif
 32706  004722                     	if	0	;tblptru may be non-zero
 32707  004722                     	endif
 32708  004722  0008               	tblrd		*
 32709  004724  50F5               	movf	tablat,w,c
 32710  004726  0D0A               	mullw	10
 32711  004728  CFF3 F03A          	movff	prodl,??_build_time
 32712  00472C  CFF4 F03B          	movff	prodh,??_build_time+1
 32713  004730  0EAA               	movlw	low (STR_36+4)
 32714  004732  6EF6               	movwf	tblptrl,c
 32715  004734  0E23               	movlw	high (STR_36+4)
 32716  004736  6EF7               	movwf	tblptrh,c
 32717  004738                     	if	0	;tblptru may be non-zero
 32718  004738                     	endif
 32719  004738                     	if	0	;tblptru may be non-zero
 32720  004738                     	endif
 32721  004738  0008               	tblrd		*
 32722  00473A  50F5               	movf	tablat,w,c
 32723  00473C  263A               	addwf	??_build_time^0,f,c
 32724  00473E  0E00               	movlw	0
 32725  004740  223B               	addwfc	(??_build_time+1)^0,f,c
 32726  004742  0EF0               	movlw	240
 32727  004744  243A               	addwf	??_build_time^0,w,c
 32728  004746  6F86               	movwf	_build_time$208& (0+255),b
 32729  004748  0EFD               	movlw	253
 32730  00474A  203B               	addwfc	(??_build_time+1)^0,w,c
 32731  00474C  6F87               	movwf	(_build_time$208+1)& (0+255),b
 32732  00474E  EFAD  F023         	goto	l17595
 32733  004752                     l17593:
 32734                           
 32735                           ; BSR set to: 0
 32736  004752  0E00               	movlw	0
 32737  004754  6F87               	movwf	(_build_time$208+1)& (0+255),b
 32738  004756  0E63               	movlw	99
 32739  004758  6F86               	movwf	_build_time$208& (0+255),b
 32740  00475A                     l17595:
 32741                           
 32742                           ; BSR set to: 0
 32743  00475A  C086  F08C         	movff	_build_time$208,build_time@tm+2
 32744  00475E  C087  F08D         	movff	_build_time$208+1,build_time@tm+3
 32745  004762                     
 32746                           ; BSR set to: 0
 32747                           ;build_time.c: 14: tm.tm_sec = ((("17:12:47"[0] == '?')) ? 99 : (("17:12:47"[6] - '0') *
      +                           10 + "17:12:47"[7] - '0'));
 32748  004762  0EA6               	movlw	low STR_36
 32749  004764  6EF6               	movwf	tblptrl,c
 32750  004766                     	if	1	;There is more than 1 active tblptr byte
 32751  004766  0E23               	movlw	high STR_36
 32752  004768  6EF7               	movwf	tblptrh,c
 32753  00476A                     	endif
 32754  00476A                     	if	0	;There are less than 3 active tblptr bytes
 32755  00476A                     	endif
 32756  00476A  0008               	tblrd		*
 32757  00476C  50F5               	movf	tablat,w,c
 32758  00476E  0A3F               	xorlw	63
 32759  004770  B4D8               	btfsc	status,2,c
 32760  004772  EFBD  F023         	goto	u19141
 32761  004776  EFBF  F023         	goto	u19140
 32762  00477A                     u19141:
 32763  00477A  EFDB  F023         	goto	l17601
 32764  00477E                     u19140:
 32765  00477E                     
 32766                           ; BSR set to: 0
 32767  00477E  0EAC               	movlw	low (STR_36+6)
 32768  004780  6EF6               	movwf	tblptrl,c
 32769  004782  0E23               	movlw	high (STR_36+6)
 32770  004784  6EF7               	movwf	tblptrh,c
 32771  004786                     	if	0	;tblptru may be non-zero
 32772  004786                     	endif
 32773  004786                     	if	0	;tblptru may be non-zero
 32774  004786                     	endif
 32775  004786  0008               	tblrd		*
 32776  004788  50F5               	movf	tablat,w,c
 32777  00478A  0D0A               	mullw	10
 32778  00478C  CFF3 F03A          	movff	prodl,??_build_time
 32779  004790  CFF4 F03B          	movff	prodh,??_build_time+1
 32780  004794  0EAD               	movlw	low (STR_36+7)
 32781  004796  6EF6               	movwf	tblptrl,c
 32782  004798  0E23               	movlw	high (STR_36+7)
 32783  00479A  6EF7               	movwf	tblptrh,c
 32784  00479C                     	if	0	;tblptru may be non-zero
 32785  00479C                     	endif
 32786  00479C                     	if	0	;tblptru may be non-zero
 32787  00479C                     	endif
 32788  00479C  0008               	tblrd		*
 32789  00479E  50F5               	movf	tablat,w,c
 32790  0047A0  263A               	addwf	??_build_time^0,f,c
 32791  0047A2  0E00               	movlw	0
 32792  0047A4  223B               	addwfc	(??_build_time+1)^0,f,c
 32793  0047A6  0EF0               	movlw	240
 32794  0047A8  243A               	addwf	??_build_time^0,w,c
 32795  0047AA  6F88               	movwf	_build_time$212& (0+255),b
 32796  0047AC  0EFD               	movlw	253
 32797  0047AE  203B               	addwfc	(??_build_time+1)^0,w,c
 32798  0047B0  6F89               	movwf	(_build_time$212+1)& (0+255),b
 32799  0047B2  EFDF  F023         	goto	l17603
 32800  0047B6                     l17601:
 32801                           
 32802                           ; BSR set to: 0
 32803  0047B6  0E00               	movlw	0
 32804  0047B8  6F89               	movwf	(_build_time$212+1)& (0+255),b
 32805  0047BA  0E63               	movlw	99
 32806  0047BC  6F88               	movwf	_build_time$212& (0+255),b
 32807  0047BE                     l17603:
 32808                           
 32809                           ; BSR set to: 0
 32810  0047BE  C088  F08A         	movff	_build_time$212,build_time@tm
 32811  0047C2  C089  F08B         	movff	_build_time$212+1,build_time@tm+1
 32812  0047C6                     
 32813                           ; BSR set to: 0
 32814                           ;build_time.c: 15: timestamp = mktime(&tm);
 32815  0047C6  0E8A               	movlw	low build_time@tm
 32816  0047C8  6E28               	movwf	mktime@timeptr^0,c
 32817  0047CA  0E00               	movlw	high build_time@tm
 32818  0047CC  6E29               	movwf	(mktime@timeptr+1)^0,c
 32819  0047CE  ECF9  F03A         	call	_mktime	;wreg free
 32820  0047D2  C028  F060         	movff	?_mktime,build_time@timestamp
 32821  0047D6  C029  F061         	movff	?_mktime+1,build_time@timestamp+1
 32822  0047DA  C02A  F062         	movff	?_mktime+2,build_time@timestamp+2
 32823  0047DE  C02B  F063         	movff	?_mktime+3,build_time@timestamp+3
 32824  0047E2                     
 32825                           ;build_time.c: 17: return timestamp;
 32826  0047E2  C060  F036         	movff	build_time@timestamp,?_build_time
 32827  0047E6  C061  F037         	movff	build_time@timestamp+1,?_build_time+1
 32828  0047EA  C062  F038         	movff	build_time@timestamp+2,?_build_time+2
 32829  0047EE  C063  F039         	movff	build_time@timestamp+3,?_build_time+3
 32830  0047F2  0012               	return		;funcret
 32831  0047F4                     __end_of_build_time:
 32832                           	callstack 0
 32833                           
 32834 ;; *************** function _mktime *****************
 32835 ;; Defined at:
 32836 ;;		line 52 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 32837 ;; Parameters:    Size  Location     Type
 32838 ;;  timeptr         2   39[COMRAM] PTR struct tm
 32839 ;;		 -> build_time@tm(18), 
 32840 ;; Auto vars:     Size  Location     Type
 32841 ;;  tt              4   49[COMRAM] long 
 32842 ;; Return value:  Size  Location     Type
 32843 ;;                  4   39[COMRAM] long 
 32844 ;; Registers used:
 32845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32846 ;; Tracked objects:
 32847 ;;		On entry : 0/0
 32848 ;;		On exit  : 0/0
 32849 ;;		Unchanged: 0/0
 32850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32852 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32853 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32854 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32855 ;;Total ram usage:       14 bytes
 32856 ;; Hardware stack levels used: 1
 32857 ;; Hardware stack levels required when called: 4
 32858 ;; This function calls:
 32859 ;;		___lmul
 32860 ;;		_ymd_to_scalar
 32861 ;; This function is called by:
 32862 ;;		_build_time
 32863 ;; This function uses a non-reentrant model
 32864 ;;
 32865                           
 32866                           	psect	text160
 32867  0075F2                     __ptext160:
 32868                           	callstack 0
 32869  0075F2                     _mktime:
 32870                           	callstack 20
 32871  0075F2  EE20 F00A          	lfsr	2,10
 32872  0075F6  5028               	movf	mktime@timeptr^0,w,c
 32873  0075F8  26D9               	addwf	fsr2l,f,c
 32874  0075FA  5029               	movf	(mktime@timeptr+1)^0,w,c
 32875  0075FC  22DA               	addwfc	fsr2h,f,c
 32876  0075FE  0E01               	movlw	1
 32877  007600  BEDB               	btfsc	plusw2,7,c
 32878  007602  EF0D  F03B         	goto	u18721
 32879  007606  0E01               	movlw	1
 32880  007608  50DB               	movf	plusw2,w,c
 32881  00760A  E109               	bnz	u18720
 32882  00760C  0E46               	movlw	70
 32883  00760E  5CDE               	subwf	postinc2,w,c
 32884  007610  A0D8               	btfss	status,0,c
 32885  007612  EF0D  F03B         	goto	u18721
 32886  007616  EF0F  F03B         	goto	u18720
 32887  00761A                     u18721:
 32888  00761A  EF25  F03B         	goto	l3042
 32889  00761E                     u18720:
 32890  00761E  EE20 F00A          	lfsr	2,10
 32891  007622  5028               	movf	mktime@timeptr^0,w,c
 32892  007624  26D9               	addwf	fsr2l,f,c
 32893  007626  5029               	movf	(mktime@timeptr+1)^0,w,c
 32894  007628  22DA               	addwfc	fsr2h,f,c
 32895  00762A  0E01               	movlw	1
 32896  00762C  BEDB               	btfsc	plusw2,7,c
 32897  00762E  EF23  F03B         	goto	u18731
 32898  007632  0E01               	movlw	1
 32899  007634  50DB               	movf	plusw2,w,c
 32900  007636  E109               	bnz	u18730
 32901  007638  0E8B               	movlw	139
 32902  00763A  5CDE               	subwf	postinc2,w,c
 32903  00763C  A0D8               	btfss	status,0,c
 32904  00763E  EF23  F03B         	goto	u18731
 32905  007642  EF25  F03B         	goto	u18730
 32906  007646                     u18731:
 32907  007646  EF2B  F03B         	goto	l17369
 32908  00764A                     u18730:
 32909  00764A                     l3042:
 32910  00764A  6832               	setf	mktime@tt^0,c
 32911  00764C  6833               	setf	(mktime@tt+1)^0,c
 32912  00764E  6834               	setf	(mktime@tt+2)^0,c
 32913  007650  6835               	setf	(mktime@tt+3)^0,c
 32914  007652  EF06  F03C         	goto	l17379
 32915  007656                     l17369:
 32916  007656  EE20 F00A          	lfsr	2,10
 32917  00765A  5028               	movf	mktime@timeptr^0,w,c
 32918  00765C  26D9               	addwf	fsr2l,f,c
 32919  00765E  5029               	movf	(mktime@timeptr+1)^0,w,c
 32920  007660  22DA               	addwfc	fsr2h,f,c
 32921  007662  CFDE F02C          	movff	postinc2,??_mktime
 32922  007666  CFDD F02D          	movff	postdec2,??_mktime+1
 32923  00766A  0E6C               	movlw	108
 32924  00766C  242C               	addwf	??_mktime^0,w,c
 32925  00766E  6E18               	movwf	ymd_to_scalar@yr^0,c
 32926  007670  0E07               	movlw	7
 32927  007672  202D               	addwfc	(??_mktime+1)^0,w,c
 32928  007674  6E19               	movwf	(ymd_to_scalar@yr+1)^0,c
 32929  007676  EE20 F008          	lfsr	2,8
 32930  00767A  5028               	movf	mktime@timeptr^0,w,c
 32931  00767C  26D9               	addwf	fsr2l,f,c
 32932  00767E  5029               	movf	(mktime@timeptr+1)^0,w,c
 32933  007680  22DA               	addwfc	fsr2h,f,c
 32934  007682  CFDE F02E          	movff	postinc2,??_mktime+2
 32935  007686  CFDD F02F          	movff	postdec2,??_mktime+3
 32936  00768A  0E01               	movlw	1
 32937  00768C  242E               	addwf	(??_mktime+2)^0,w,c
 32938  00768E  6E1A               	movwf	ymd_to_scalar@mo^0,c
 32939  007690  0E00               	movlw	0
 32940  007692  202F               	addwfc	(??_mktime+3)^0,w,c
 32941  007694  6E1B               	movwf	(ymd_to_scalar@mo+1)^0,c
 32942  007696  EE20 F006          	lfsr	2,6
 32943  00769A  5028               	movf	mktime@timeptr^0,w,c
 32944  00769C  26D9               	addwf	fsr2l,f,c
 32945  00769E  5029               	movf	(mktime@timeptr+1)^0,w,c
 32946  0076A0  22DA               	addwfc	fsr2h,f,c
 32947  0076A2  CFDE F01C          	movff	postinc2,ymd_to_scalar@day
 32948  0076A6  CFDD F01D          	movff	postdec2,ymd_to_scalar@day+1
 32949  0076AA  EC22  F057         	call	_ymd_to_scalar	;wreg free
 32950  0076AE  C018  F032         	movff	?_ymd_to_scalar,mktime@tt
 32951  0076B2  C019  F033         	movff	?_ymd_to_scalar+1,mktime@tt+1
 32952  0076B6  C01A  F034         	movff	?_ymd_to_scalar+2,mktime@tt+2
 32953  0076BA  C01B  F035         	movff	?_ymd_to_scalar+3,mktime@tt+3
 32954  0076BE  0E07               	movlw	7
 32955  0076C0  6E19               	movwf	(ymd_to_scalar@yr+1)^0,c
 32956  0076C2  0EB2               	movlw	178
 32957  0076C4  6E18               	movwf	ymd_to_scalar@yr^0,c
 32958  0076C6  0E00               	movlw	0
 32959  0076C8  6E1B               	movwf	(ymd_to_scalar@mo+1)^0,c
 32960  0076CA  0E01               	movlw	1
 32961  0076CC  6E1A               	movwf	ymd_to_scalar@mo^0,c
 32962  0076CE  0E00               	movlw	0
 32963  0076D0  6E1D               	movwf	(ymd_to_scalar@day+1)^0,c
 32964  0076D2  0E01               	movlw	1
 32965  0076D4  6E1C               	movwf	ymd_to_scalar@day^0,c
 32966  0076D6  EC22  F057         	call	_ymd_to_scalar	;wreg free
 32967  0076DA  5018               	movf	?_ymd_to_scalar^0,w,c
 32968  0076DC  5E32               	subwf	mktime@tt^0,f,c
 32969  0076DE  5019               	movf	(?_ymd_to_scalar+1)^0,w,c
 32970  0076E0  5A33               	subwfb	(mktime@tt+1)^0,f,c
 32971  0076E2  501A               	movf	(?_ymd_to_scalar+2)^0,w,c
 32972  0076E4  5A34               	subwfb	(mktime@tt+2)^0,f,c
 32973  0076E6  501B               	movf	(?_ymd_to_scalar+3)^0,w,c
 32974  0076E8  5A35               	subwfb	(mktime@tt+3)^0,f,c
 32975  0076EA  EE20 F004          	lfsr	2,4
 32976  0076EE  5028               	movf	mktime@timeptr^0,w,c
 32977  0076F0  26D9               	addwf	fsr2l,f,c
 32978  0076F2  5029               	movf	(mktime@timeptr+1)^0,w,c
 32979  0076F4  22DA               	addwfc	fsr2h,f,c
 32980  0076F6  CFDE F02C          	movff	postinc2,??_mktime
 32981  0076FA  CFDD F02D          	movff	postdec2,??_mktime+1
 32982  0076FE  C02C  F02E         	movff	??_mktime,??_mktime+2
 32983  007702  C02D  F02F         	movff	??_mktime+1,??_mktime+3
 32984  007706  0E00               	movlw	0
 32985  007708  BE2F               	btfsc	(??_mktime+3)^0,7,c
 32986  00770A  0EFF               	movlw	255
 32987  00770C  6E30               	movwf	(??_mktime+4)^0,c
 32988  00770E  6E31               	movwf	(??_mktime+5)^0,c
 32989  007710  C032  F001         	movff	mktime@tt,___lmul@multiplier
 32990  007714  C033  F002         	movff	mktime@tt+1,___lmul@multiplier+1
 32991  007718  C034  F003         	movff	mktime@tt+2,___lmul@multiplier+2
 32992  00771C  C035  F004         	movff	mktime@tt+3,___lmul@multiplier+3
 32993  007720  0E18               	movlw	24
 32994  007722  6E05               	movwf	___lmul@multiplicand^0,c
 32995  007724  0E00               	movlw	0
 32996  007726  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 32997  007728  0E00               	movlw	0
 32998  00772A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 32999  00772C  0E00               	movlw	0
 33000  00772E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 33001  007730  EC20  F062         	call	___lmul	;wreg free
 33002  007734  502E               	movf	(??_mktime+2)^0,w,c
 33003  007736  2401               	addwf	?___lmul^0,w,c
 33004  007738  6E32               	movwf	mktime@tt^0,c
 33005  00773A  502F               	movf	(??_mktime+3)^0,w,c
 33006  00773C  2002               	addwfc	(?___lmul+1)^0,w,c
 33007  00773E  6E33               	movwf	(mktime@tt+1)^0,c
 33008  007740  5030               	movf	(??_mktime+4)^0,w,c
 33009  007742  2003               	addwfc	(?___lmul+2)^0,w,c
 33010  007744  6E34               	movwf	(mktime@tt+2)^0,c
 33011  007746  5031               	movf	(??_mktime+5)^0,w,c
 33012  007748  2004               	addwfc	(?___lmul+3)^0,w,c
 33013  00774A  6E35               	movwf	(mktime@tt+3)^0,c
 33014  00774C  EE20 F002          	lfsr	2,2
 33015  007750  5028               	movf	mktime@timeptr^0,w,c
 33016  007752  26D9               	addwf	fsr2l,f,c
 33017  007754  5029               	movf	(mktime@timeptr+1)^0,w,c
 33018  007756  22DA               	addwfc	fsr2h,f,c
 33019  007758  CFDE F02C          	movff	postinc2,??_mktime
 33020  00775C  CFDD F02D          	movff	postdec2,??_mktime+1
 33021  007760  C02C  F02E         	movff	??_mktime,??_mktime+2
 33022  007764  C02D  F02F         	movff	??_mktime+1,??_mktime+3
 33023  007768  0E00               	movlw	0
 33024  00776A  BE2F               	btfsc	(??_mktime+3)^0,7,c
 33025  00776C  0EFF               	movlw	255
 33026  00776E  6E30               	movwf	(??_mktime+4)^0,c
 33027  007770  6E31               	movwf	(??_mktime+5)^0,c
 33028  007772  C032  F001         	movff	mktime@tt,___lmul@multiplier
 33029  007776  C033  F002         	movff	mktime@tt+1,___lmul@multiplier+1
 33030  00777A  C034  F003         	movff	mktime@tt+2,___lmul@multiplier+2
 33031  00777E  C035  F004         	movff	mktime@tt+3,___lmul@multiplier+3
 33032  007782  0E3C               	movlw	60
 33033  007784  6E05               	movwf	___lmul@multiplicand^0,c
 33034  007786  0E00               	movlw	0
 33035  007788  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 33036  00778A  0E00               	movlw	0
 33037  00778C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 33038  00778E  0E00               	movlw	0
 33039  007790  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 33040  007792  EC20  F062         	call	___lmul	;wreg free
 33041  007796  502E               	movf	(??_mktime+2)^0,w,c
 33042  007798  2401               	addwf	?___lmul^0,w,c
 33043  00779A  6E32               	movwf	mktime@tt^0,c
 33044  00779C  502F               	movf	(??_mktime+3)^0,w,c
 33045  00779E  2002               	addwfc	(?___lmul+1)^0,w,c
 33046  0077A0  6E33               	movwf	(mktime@tt+1)^0,c
 33047  0077A2  5030               	movf	(??_mktime+4)^0,w,c
 33048  0077A4  2003               	addwfc	(?___lmul+2)^0,w,c
 33049  0077A6  6E34               	movwf	(mktime@tt+2)^0,c
 33050  0077A8  5031               	movf	(??_mktime+5)^0,w,c
 33051  0077AA  2004               	addwfc	(?___lmul+3)^0,w,c
 33052  0077AC  6E35               	movwf	(mktime@tt+3)^0,c
 33053  0077AE  C028  FFD9         	movff	mktime@timeptr,fsr2l
 33054  0077B2  C029  FFDA         	movff	mktime@timeptr+1,fsr2h
 33055  0077B6  CFDE F02C          	movff	postinc2,??_mktime
 33056  0077BA  CFDD F02D          	movff	postdec2,??_mktime+1
 33057  0077BE  C02C  F02E         	movff	??_mktime,??_mktime+2
 33058  0077C2  C02D  F02F         	movff	??_mktime+1,??_mktime+3
 33059  0077C6  0E00               	movlw	0
 33060  0077C8  BE2F               	btfsc	(??_mktime+3)^0,7,c
 33061  0077CA  0EFF               	movlw	255
 33062  0077CC  6E30               	movwf	(??_mktime+4)^0,c
 33063  0077CE  6E31               	movwf	(??_mktime+5)^0,c
 33064  0077D0  C032  F001         	movff	mktime@tt,___lmul@multiplier
 33065  0077D4  C033  F002         	movff	mktime@tt+1,___lmul@multiplier+1
 33066  0077D8  C034  F003         	movff	mktime@tt+2,___lmul@multiplier+2
 33067  0077DC  C035  F004         	movff	mktime@tt+3,___lmul@multiplier+3
 33068  0077E0  0E3C               	movlw	60
 33069  0077E2  6E05               	movwf	___lmul@multiplicand^0,c
 33070  0077E4  0E00               	movlw	0
 33071  0077E6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 33072  0077E8  0E00               	movlw	0
 33073  0077EA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 33074  0077EC  0E00               	movlw	0
 33075  0077EE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 33076  0077F0  EC20  F062         	call	___lmul	;wreg free
 33077  0077F4  502E               	movf	(??_mktime+2)^0,w,c
 33078  0077F6  2401               	addwf	?___lmul^0,w,c
 33079  0077F8  6E32               	movwf	mktime@tt^0,c
 33080  0077FA  502F               	movf	(??_mktime+3)^0,w,c
 33081  0077FC  2002               	addwfc	(?___lmul+1)^0,w,c
 33082  0077FE  6E33               	movwf	(mktime@tt+1)^0,c
 33083  007800  5030               	movf	(??_mktime+4)^0,w,c
 33084  007802  2003               	addwfc	(?___lmul+2)^0,w,c
 33085  007804  6E34               	movwf	(mktime@tt+2)^0,c
 33086  007806  5031               	movf	(??_mktime+5)^0,w,c
 33087  007808  2004               	addwfc	(?___lmul+3)^0,w,c
 33088  00780A  6E35               	movwf	(mktime@tt+3)^0,c
 33089  00780C                     l17379:
 33090  00780C  C032  F028         	movff	mktime@tt,?_mktime
 33091  007810  C033  F029         	movff	mktime@tt+1,?_mktime+1
 33092  007814  C034  F02A         	movff	mktime@tt+2,?_mktime+2
 33093  007818  C035  F02B         	movff	mktime@tt+3,?_mktime+3
 33094  00781C  0012               	return		;funcret
 33095  00781E                     __end_of_mktime:
 33096                           	callstack 0
 33097                           
 33098 ;; *************** function _ymd_to_scalar *****************
 33099 ;; Defined at:
 33100 ;;		line 40 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 33101 ;; Parameters:    Size  Location     Type
 33102 ;;  yr              2   23[COMRAM] unsigned int 
 33103 ;;  mo              2   25[COMRAM] unsigned int 
 33104 ;;  day             2   27[COMRAM] unsigned int 
 33105 ;; Auto vars:     Size  Location     Type
 33106 ;;  scalar          4   35[COMRAM] long 
 33107 ;; Return value:  Size  Location     Type
 33108 ;;                  4   23[COMRAM] long 
 33109 ;; Registers used:
 33110 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 33111 ;; Tracked objects:
 33112 ;;		On entry : 0/0
 33113 ;;		On exit  : 0/0
 33114 ;;		Unchanged: 0/0
 33115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33116 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33117 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33119 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33120 ;;Total ram usage:       16 bytes
 33121 ;; Hardware stack levels used: 1
 33122 ;; Hardware stack levels required when called: 3
 33123 ;; This function calls:
 33124 ;;		_isleap
 33125 ;;		_months_to_days
 33126 ;;		_years_to_days
 33127 ;; This function is called by:
 33128 ;;		_mktime
 33129 ;; This function uses a non-reentrant model
 33130 ;;
 33131                           
 33132                           	psect	text161
 33133  00AE44                     __ptext161:
 33134                           	callstack 0
 33135  00AE44                     _ymd_to_scalar:
 33136                           	callstack 20
 33137  00AE44  C01A  F00E         	movff	ymd_to_scalar@mo,months_to_days@month
 33138  00AE48  C01B  F00F         	movff	ymd_to_scalar@mo+1,months_to_days@month+1
 33139  00AE4C  EC72  F068         	call	_months_to_days	;wreg free
 33140  00AE50  501C               	movf	ymd_to_scalar@day^0,w,c
 33141  00AE52  260E               	addwf	?_months_to_days^0,f,c
 33142  00AE54  501D               	movf	(ymd_to_scalar@day+1)^0,w,c
 33143  00AE56  220F               	addwfc	(?_months_to_days+1)^0,f,c
 33144  00AE58  C00E  F024         	movff	?_months_to_days,ymd_to_scalar@scalar
 33145  00AE5C  C00F  F025         	movff	?_months_to_days+1,ymd_to_scalar@scalar+1
 33146  00AE60  6A26               	clrf	(ymd_to_scalar@scalar+2)^0,c
 33147  00AE62  6A27               	clrf	(ymd_to_scalar@scalar+3)^0,c
 33148  00AE64  501B               	movf	(ymd_to_scalar@mo+1)^0,w,c
 33149  00AE66  E109               	bnz	u18700
 33150  00AE68  0E03               	movlw	3
 33151  00AE6A  5C1A               	subwf	ymd_to_scalar@mo^0,w,c
 33152  00AE6C  A0D8               	btfss	status,0,c
 33153  00AE6E  EF3B  F057         	goto	u18701
 33154  00AE72  EF3D  F057         	goto	u18700
 33155  00AE76                     u18701:
 33156  00AE76  EF67  F057         	goto	l17357
 33157  00AE7A                     u18700:
 33158  00AE7A  C018  F006         	movff	ymd_to_scalar@yr,isleap@yr
 33159  00AE7E  C019  F007         	movff	ymd_to_scalar@yr+1,isleap@yr+1
 33160  00AE82  ECE3  F05F         	call	_isleap	;wreg free
 33161  00AE86  5006               	movf	?_isleap^0,w,c
 33162  00AE88  1007               	iorwf	(?_isleap+1)^0,w,c
 33163  00AE8A  A4D8               	btfss	status,2,c
 33164  00AE8C  EF4A  F057         	goto	u18711
 33165  00AE90  EF4C  F057         	goto	u18710
 33166  00AE94                     u18711:
 33167  00AE94  EF52  F057         	goto	l17353
 33168  00AE98                     u18710:
 33169  00AE98  0E00               	movlw	0
 33170  00AE9A  6E23               	movwf	(_ymd_to_scalar$6016+1)^0,c
 33171  00AE9C  0E02               	movlw	2
 33172  00AE9E  6E22               	movwf	_ymd_to_scalar$6016^0,c
 33173  00AEA0  EF56  F057         	goto	l17355
 33174  00AEA4                     l17353:
 33175  00AEA4  0E00               	movlw	0
 33176  00AEA6  6E23               	movwf	(_ymd_to_scalar$6016+1)^0,c
 33177  00AEA8  0E01               	movlw	1
 33178  00AEAA  6E22               	movwf	_ymd_to_scalar$6016^0,c
 33179  00AEAC                     l17355:
 33180  00AEAC  C022  F01E         	movff	_ymd_to_scalar$6016,??_ymd_to_scalar
 33181  00AEB0  C023  F01F         	movff	_ymd_to_scalar$6016+1,??_ymd_to_scalar+1
 33182  00AEB4  0E00               	movlw	0
 33183  00AEB6  BE1F               	btfsc	(??_ymd_to_scalar+1)^0,7,c
 33184  00AEB8  0EFF               	movlw	255
 33185  00AEBA  6E20               	movwf	(??_ymd_to_scalar+2)^0,c
 33186  00AEBC  6E21               	movwf	(??_ymd_to_scalar+3)^0,c
 33187  00AEBE  501E               	movf	??_ymd_to_scalar^0,w,c
 33188  00AEC0  5E24               	subwf	ymd_to_scalar@scalar^0,f,c
 33189  00AEC2  501F               	movf	(??_ymd_to_scalar+1)^0,w,c
 33190  00AEC4  5A25               	subwfb	(ymd_to_scalar@scalar+1)^0,f,c
 33191  00AEC6  5020               	movf	(??_ymd_to_scalar+2)^0,w,c
 33192  00AEC8  5A26               	subwfb	(ymd_to_scalar@scalar+2)^0,f,c
 33193  00AECA  5021               	movf	(??_ymd_to_scalar+3)^0,w,c
 33194  00AECC  5A27               	subwfb	(ymd_to_scalar@scalar+3)^0,f,c
 33195  00AECE                     l17357:
 33196  00AECE  0618               	decf	ymd_to_scalar@yr^0,f,c
 33197  00AED0  A0D8               	btfss	status,0,c
 33198  00AED2  0619               	decf	(ymd_to_scalar@yr+1)^0,f,c
 33199  00AED4  C018  F00E         	movff	ymd_to_scalar@yr,years_to_days@yr
 33200  00AED8  C019  F00F         	movff	ymd_to_scalar@yr+1,years_to_days@yr+1
 33201  00AEDC  EC52  F05B         	call	_years_to_days	;wreg free
 33202  00AEE0  500E               	movf	?_years_to_days^0,w,c
 33203  00AEE2  2624               	addwf	ymd_to_scalar@scalar^0,f,c
 33204  00AEE4  500F               	movf	(?_years_to_days+1)^0,w,c
 33205  00AEE6  2225               	addwfc	(ymd_to_scalar@scalar+1)^0,f,c
 33206  00AEE8  5010               	movf	(?_years_to_days+2)^0,w,c
 33207  00AEEA  2226               	addwfc	(ymd_to_scalar@scalar+2)^0,f,c
 33208  00AEEC  5011               	movf	(?_years_to_days+3)^0,w,c
 33209  00AEEE  2227               	addwfc	(ymd_to_scalar@scalar+3)^0,f,c
 33210  00AEF0  C024  F018         	movff	ymd_to_scalar@scalar,?_ymd_to_scalar
 33211  00AEF4  C025  F019         	movff	ymd_to_scalar@scalar+1,?_ymd_to_scalar+1
 33212  00AEF8  C026  F01A         	movff	ymd_to_scalar@scalar+2,?_ymd_to_scalar+2
 33213  00AEFC  C027  F01B         	movff	ymd_to_scalar@scalar+3,?_ymd_to_scalar+3
 33214  00AF00  0012               	return		;funcret
 33215  00AF02                     __end_of_ymd_to_scalar:
 33216                           	callstack 0
 33217                           
 33218 ;; *************** function _years_to_days *****************
 33219 ;; Defined at:
 33220 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 33221 ;; Parameters:    Size  Location     Type
 33222 ;;  yr              2   13[COMRAM] unsigned int 
 33223 ;; Auto vars:     Size  Location     Type
 33224 ;;  ret             4   19[COMRAM] long 
 33225 ;; Return value:  Size  Location     Type
 33226 ;;                  4   13[COMRAM] long 
 33227 ;; Registers used:
 33228 ;;		wreg, status,2, status,0, cstack
 33229 ;; Tracked objects:
 33230 ;;		On entry : 0/0
 33231 ;;		On exit  : 0/0
 33232 ;;		Unchanged: 0/0
 33233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33237 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33238 ;;Total ram usage:       10 bytes
 33239 ;; Hardware stack levels used: 1
 33240 ;; Hardware stack levels required when called: 2
 33241 ;; This function calls:
 33242 ;;		___lmul
 33243 ;;		___lwdiv
 33244 ;; This function is called by:
 33245 ;;		_ymd_to_scalar
 33246 ;; This function uses a non-reentrant model
 33247 ;;
 33248                           
 33249                           	psect	text162
 33250  00B6A4                     __ptext162:
 33251                           	callstack 0
 33252  00B6A4                     _years_to_days:
 33253                           	callstack 20
 33254  00B6A4  C00E  F001         	movff	years_to_days@yr,___lmul@multiplier
 33255  00B6A8  C00F  F002         	movff	years_to_days@yr+1,___lmul@multiplier+1
 33256  00B6AC  6A03               	clrf	(___lmul@multiplier+2)^0,c
 33257  00B6AE  6A04               	clrf	(___lmul@multiplier+3)^0,c
 33258  00B6B0  0E6D               	movlw	109
 33259  00B6B2  6E05               	movwf	___lmul@multiplicand^0,c
 33260  00B6B4  0E01               	movlw	1
 33261  00B6B6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 33262  00B6B8  0E00               	movlw	0
 33263  00B6BA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 33264  00B6BC  0E00               	movlw	0
 33265  00B6BE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 33266  00B6C0  EC20  F062         	call	___lmul	;wreg free
 33267  00B6C4  C001  F014         	movff	?___lmul,years_to_days@ret
 33268  00B6C8  C002  F015         	movff	?___lmul+1,years_to_days@ret+1
 33269  00B6CC  C003  F016         	movff	?___lmul+2,years_to_days@ret+2
 33270  00B6D0  C004  F017         	movff	?___lmul+3,years_to_days@ret+3
 33271  00B6D4  C00E  F007         	movff	years_to_days@yr,___lwdiv@dividend
 33272  00B6D8  C00F  F008         	movff	years_to_days@yr+1,___lwdiv@dividend+1
 33273  00B6DC  0E00               	movlw	0
 33274  00B6DE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 33275  00B6E0  0E64               	movlw	100
 33276  00B6E2  6E09               	movwf	___lwdiv@divisor^0,c
 33277  00B6E4  EC0D  F061         	call	___lwdiv	;wreg free
 33278  00B6E8  C00E  F012         	movff	years_to_days@yr,??_years_to_days
 33279  00B6EC  C00F  F013         	movff	years_to_days@yr+1,??_years_to_days+1
 33280  00B6F0  90D8               	bcf	status,0,c
 33281  00B6F2  3213               	rrcf	(??_years_to_days+1)^0,f,c
 33282  00B6F4  3212               	rrcf	??_years_to_days^0,f,c
 33283  00B6F6  90D8               	bcf	status,0,c
 33284  00B6F8  3213               	rrcf	(??_years_to_days+1)^0,f,c
 33285  00B6FA  3212               	rrcf	??_years_to_days^0,f,c
 33286  00B6FC  5007               	movf	?___lwdiv^0,w,c
 33287  00B6FE  5E12               	subwf	??_years_to_days^0,f,c
 33288  00B700  5008               	movf	(?___lwdiv+1)^0,w,c
 33289  00B702  5A13               	subwfb	(??_years_to_days+1)^0,f,c
 33290  00B704  5012               	movf	??_years_to_days^0,w,c
 33291  00B706  2614               	addwf	years_to_days@ret^0,f,c
 33292  00B708  5013               	movf	(??_years_to_days+1)^0,w,c
 33293  00B70A  2215               	addwfc	(years_to_days@ret+1)^0,f,c
 33294  00B70C  0E00               	movlw	0
 33295  00B70E  2216               	addwfc	(years_to_days@ret+2)^0,f,c
 33296  00B710  0E00               	movlw	0
 33297  00B712  2217               	addwfc	(years_to_days@ret+3)^0,f,c
 33298  00B714  C00E  F007         	movff	years_to_days@yr,___lwdiv@dividend
 33299  00B718  C00F  F008         	movff	years_to_days@yr+1,___lwdiv@dividend+1
 33300  00B71C  0E01               	movlw	1
 33301  00B71E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 33302  00B720  0E90               	movlw	144
 33303  00B722  6E09               	movwf	___lwdiv@divisor^0,c
 33304  00B724  EC0D  F061         	call	___lwdiv	;wreg free
 33305  00B728  5007               	movf	?___lwdiv^0,w,c
 33306  00B72A  2614               	addwf	years_to_days@ret^0,f,c
 33307  00B72C  5008               	movf	(?___lwdiv+1)^0,w,c
 33308  00B72E  2215               	addwfc	(years_to_days@ret+1)^0,f,c
 33309  00B730  0E00               	movlw	0
 33310  00B732  2216               	addwfc	(years_to_days@ret+2)^0,f,c
 33311  00B734  0E00               	movlw	0
 33312  00B736  2217               	addwfc	(years_to_days@ret+3)^0,f,c
 33313  00B738  C014  F00E         	movff	years_to_days@ret,?_years_to_days
 33314  00B73C  C015  F00F         	movff	years_to_days@ret+1,?_years_to_days+1
 33315  00B740  C016  F010         	movff	years_to_days@ret+2,?_years_to_days+2
 33316  00B744  C017  F011         	movff	years_to_days@ret+3,?_years_to_days+3
 33317  00B748  0012               	return		;funcret
 33318  00B74A                     __end_of_years_to_days:
 33319                           	callstack 0
 33320                           
 33321 ;; *************** function ___lmul *****************
 33322 ;; Defined at:
 33323 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
 33324 ;; Parameters:    Size  Location     Type
 33325 ;;  multiplier      4    0[COMRAM] unsigned long 
 33326 ;;  multiplicand    4    4[COMRAM] unsigned long 
 33327 ;; Auto vars:     Size  Location     Type
 33328 ;;  product         4    8[COMRAM] unsigned long 
 33329 ;; Return value:  Size  Location     Type
 33330 ;;                  4    0[COMRAM] unsigned long 
 33331 ;; Registers used:
 33332 ;;		wreg, status,2, status,0
 33333 ;; Tracked objects:
 33334 ;;		On entry : 0/0
 33335 ;;		On exit  : 0/0
 33336 ;;		Unchanged: 0/0
 33337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33338 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33339 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33341 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33342 ;;Total ram usage:       12 bytes
 33343 ;; Hardware stack levels used: 1
 33344 ;; Hardware stack levels required when called: 1
 33345 ;; This function calls:
 33346 ;;		Nothing
 33347 ;; This function is called by:
 33348 ;;		__atoi
 33349 ;;		__itoa
 33350 ;;		_sht3x_measure_read
 33351 ;;		_years_to_days
 33352 ;;		_mktime
 33353 ;; This function uses a non-reentrant model
 33354 ;;
 33355                           
 33356                           	psect	text163
 33357  00C440                     __ptext163:
 33358                           	callstack 0
 33359  00C440                     ___lmul:
 33360                           	callstack 24
 33361  00C440  0E00               	movlw	0
 33362  00C442  6E09               	movwf	___lmul@product^0,c
 33363  00C444  0E00               	movlw	0
 33364  00C446  6E0A               	movwf	(___lmul@product+1)^0,c
 33365  00C448  0E00               	movlw	0
 33366  00C44A  6E0B               	movwf	(___lmul@product+2)^0,c
 33367  00C44C  0E00               	movlw	0
 33368  00C44E  6E0C               	movwf	(___lmul@product+3)^0,c
 33369  00C450                     l17233:
 33370  00C450  A001               	btfss	___lmul@multiplier^0,0,c
 33371  00C452  EF2D  F062         	goto	u18451
 33372  00C456  EF2F  F062         	goto	u18450
 33373  00C45A                     u18451:
 33374  00C45A  EF37  F062         	goto	l17237
 33375  00C45E                     u18450:
 33376  00C45E  5005               	movf	___lmul@multiplicand^0,w,c
 33377  00C460  2609               	addwf	___lmul@product^0,f,c
 33378  00C462  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 33379  00C464  220A               	addwfc	(___lmul@product+1)^0,f,c
 33380  00C466  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 33381  00C468  220B               	addwfc	(___lmul@product+2)^0,f,c
 33382  00C46A  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 33383  00C46C  220C               	addwfc	(___lmul@product+3)^0,f,c
 33384  00C46E                     l17237:
 33385  00C46E  90D8               	bcf	status,0,c
 33386  00C470  3605               	rlcf	___lmul@multiplicand^0,f,c
 33387  00C472  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 33388  00C474  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 33389  00C476  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 33390  00C478  90D8               	bcf	status,0,c
 33391  00C47A  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 33392  00C47C  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 33393  00C47E  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 33394  00C480  3201               	rrcf	___lmul@multiplier^0,f,c
 33395  00C482  5001               	movf	___lmul@multiplier^0,w,c
 33396  00C484  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 33397  00C486  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 33398  00C488  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 33399  00C48A  A4D8               	btfss	status,2,c
 33400  00C48C  EF4A  F062         	goto	u18461
 33401  00C490  EF4C  F062         	goto	u18460
 33402  00C494                     u18461:
 33403  00C494  EF28  F062         	goto	l17233
 33404  00C498                     u18460:
 33405  00C498  C009  F001         	movff	___lmul@product,?___lmul
 33406  00C49C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 33407  00C4A0  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 33408  00C4A4  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 33409  00C4A8  0012               	return		;funcret
 33410  00C4AA                     __end_of___lmul:
 33411                           	callstack 0
 33412                           
 33413 ;; *************** function _months_to_days *****************
 33414 ;; Defined at:
 33415 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 33416 ;; Parameters:    Size  Location     Type
 33417 ;;  month           2   13[COMRAM] unsigned int 
 33418 ;; Auto vars:     Size  Location     Type
 33419 ;;		None
 33420 ;; Return value:  Size  Location     Type
 33421 ;;                  2   13[COMRAM] unsigned int 
 33422 ;; Registers used:
 33423 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 33424 ;; Tracked objects:
 33425 ;;		On entry : 0/0
 33426 ;;		On exit  : 0/0
 33427 ;;		Unchanged: 0/0
 33428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33433 ;;Total ram usage:        2 bytes
 33434 ;; Hardware stack levels used: 1
 33435 ;; Hardware stack levels required when called: 2
 33436 ;; This function calls:
 33437 ;;		___lwdiv
 33438 ;;		___wmul
 33439 ;; This function is called by:
 33440 ;;		_ymd_to_scalar
 33441 ;; This function uses a non-reentrant model
 33442 ;;
 33443                           
 33444                           	psect	text164
 33445  00D0E4                     __ptext164:
 33446                           	callstack 0
 33447  00D0E4                     _months_to_days:
 33448                           	callstack 20
 33449  00D0E4  C00E  F001         	movff	months_to_days@month,___wmul@multiplier
 33450  00D0E8  C00F  F002         	movff	months_to_days@month+1,___wmul@multiplier+1
 33451  00D0EC  0E0B               	movlw	11
 33452  00D0EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 33453  00D0F0  0EF1               	movlw	241
 33454  00D0F2  6E03               	movwf	___wmul@multiplicand^0,c
 33455  00D0F4  ECEA  F069         	call	___wmul	;wreg free
 33456  00D0F8  0E41               	movlw	65
 33457  00D0FA  2401               	addwf	?___wmul^0,w,c
 33458  00D0FC  6E07               	movwf	___lwdiv@dividend^0,c
 33459  00D0FE  0EF4               	movlw	244
 33460  00D100  2002               	addwfc	(?___wmul+1)^0,w,c
 33461  00D102  6E08               	movwf	(___lwdiv@dividend+1)^0,c
 33462  00D104  0E00               	movlw	0
 33463  00D106  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 33464  00D108  0E64               	movlw	100
 33465  00D10A  6E09               	movwf	___lwdiv@divisor^0,c
 33466  00D10C  EC0D  F061         	call	___lwdiv	;wreg free
 33467  00D110  C007  F00E         	movff	?___lwdiv,?_months_to_days
 33468  00D114  C008  F00F         	movff	?___lwdiv+1,?_months_to_days+1
 33469  00D118  0012               	return		;funcret
 33470  00D11A                     __end_of_months_to_days:
 33471                           	callstack 0
 33472                           
 33473 ;; *************** function ___wmul *****************
 33474 ;; Defined at:
 33475 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
 33476 ;; Parameters:    Size  Location     Type
 33477 ;;  multiplier      2    0[COMRAM] unsigned int 
 33478 ;;  multiplicand    2    2[COMRAM] unsigned int 
 33479 ;; Auto vars:     Size  Location     Type
 33480 ;;  product         2    4[COMRAM] unsigned int 
 33481 ;; Return value:  Size  Location     Type
 33482 ;;                  2    0[COMRAM] unsigned int 
 33483 ;; Registers used:
 33484 ;;		wreg, status,2, status,0, prodl, prodh
 33485 ;; Tracked objects:
 33486 ;;		On entry : 0/0
 33487 ;;		On exit  : 0/0
 33488 ;;		Unchanged: 0/0
 33489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33491 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33493 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33494 ;;Total ram usage:        6 bytes
 33495 ;; Hardware stack levels used: 1
 33496 ;; Hardware stack levels required when called: 1
 33497 ;; This function calls:
 33498 ;;		Nothing
 33499 ;; This function is called by:
 33500 ;;		_build_time
 33501 ;;		_sprintf
 33502 ;;		_months_to_days
 33503 ;; This function uses a non-reentrant model
 33504 ;;
 33505                           
 33506                           	psect	text165
 33507  00D3D4                     __ptext165:
 33508                           	callstack 0
 33509  00D3D4                     ___wmul:
 33510                           	callstack 20
 33511  00D3D4  5001               	movf	___wmul@multiplier^0,w,c
 33512  00D3D6  0203               	mulwf	___wmul@multiplicand^0,c
 33513  00D3D8  CFF3 F005          	movff	prodl,___wmul@product
 33514  00D3DC  CFF4 F006          	movff	prodh,___wmul@product+1
 33515  00D3E0  5001               	movf	___wmul@multiplier^0,w,c
 33516  00D3E2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 33517  00D3E4  50F3               	movf	243,w,c
 33518  00D3E6  2606               	addwf	(___wmul@product+1)^0,f,c
 33519  00D3E8  5002               	movf	(___wmul@multiplier+1)^0,w,c
 33520  00D3EA  0203               	mulwf	___wmul@multiplicand^0,c
 33521  00D3EC  50F3               	movf	243,w,c
 33522  00D3EE  2606               	addwf	(___wmul@product+1)^0,f,c
 33523  00D3F0  C005  F001         	movff	___wmul@product,?___wmul
 33524  00D3F4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 33525  00D3F8  0012               	return		;funcret
 33526  00D3FA                     __end_of___wmul:
 33527                           	callstack 0
 33528                           
 33529 ;; *************** function ___lwdiv *****************
 33530 ;; Defined at:
 33531 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
 33532 ;; Parameters:    Size  Location     Type
 33533 ;;  dividend        2    6[COMRAM] unsigned int 
 33534 ;;  divisor         2    8[COMRAM] unsigned int 
 33535 ;; Auto vars:     Size  Location     Type
 33536 ;;  quotient        2   11[COMRAM] unsigned int 
 33537 ;;  counter         1   10[COMRAM] unsigned char 
 33538 ;; Return value:  Size  Location     Type
 33539 ;;                  2    6[COMRAM] unsigned int 
 33540 ;; Registers used:
 33541 ;;		wreg, status,2, status,0
 33542 ;; Tracked objects:
 33543 ;;		On entry : 0/0
 33544 ;;		On exit  : 0/0
 33545 ;;		Unchanged: 0/0
 33546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33548 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33550 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33551 ;;Total ram usage:        7 bytes
 33552 ;; Hardware stack levels used: 1
 33553 ;; Hardware stack levels required when called: 1
 33554 ;; This function calls:
 33555 ;;		Nothing
 33556 ;; This function is called by:
 33557 ;;		_fround
 33558 ;;		_months_to_days
 33559 ;;		_years_to_days
 33560 ;; This function uses a non-reentrant model
 33561 ;;
 33562                           
 33563                           	psect	text166
 33564  00C21A                     __ptext166:
 33565                           	callstack 0
 33566  00C21A                     ___lwdiv:
 33567                           	callstack 20
 33568  00C21A  0E00               	movlw	0
 33569  00C21C  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
 33570  00C21E  0E00               	movlw	0
 33571  00C220  6E0C               	movwf	___lwdiv@quotient^0,c
 33572  00C222  5009               	movf	___lwdiv@divisor^0,w,c
 33573  00C224  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 33574  00C226  B4D8               	btfsc	status,2,c
 33575  00C228  EF18  F061         	goto	u18471
 33576  00C22C  EF1A  F061         	goto	u18470
 33577  00C230                     u18471:
 33578  00C230  EF42  F061         	goto	l2772
 33579  00C234                     u18470:
 33580  00C234  0E01               	movlw	1
 33581  00C236  6E0B               	movwf	___lwdiv@counter^0,c
 33582  00C238  EF22  F061         	goto	l17249
 33583  00C23C                     l17247:
 33584  00C23C  90D8               	bcf	status,0,c
 33585  00C23E  3609               	rlcf	___lwdiv@divisor^0,f,c
 33586  00C240  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 33587  00C242  2A0B               	incf	___lwdiv@counter^0,f,c
 33588  00C244                     l17249:
 33589  00C244  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 33590  00C246  EF27  F061         	goto	u18481
 33591  00C24A  EF29  F061         	goto	u18480
 33592  00C24E                     u18481:
 33593  00C24E  EF1E  F061         	goto	l17247
 33594  00C252                     u18480:
 33595  00C252                     l17251:
 33596  00C252  90D8               	bcf	status,0,c
 33597  00C254  360C               	rlcf	___lwdiv@quotient^0,f,c
 33598  00C256  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
 33599  00C258  5009               	movf	___lwdiv@divisor^0,w,c
 33600  00C25A  5C07               	subwf	___lwdiv@dividend^0,w,c
 33601  00C25C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 33602  00C25E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 33603  00C260  A0D8               	btfss	status,0,c
 33604  00C262  EF35  F061         	goto	u18491
 33605  00C266  EF37  F061         	goto	u18490
 33606  00C26A                     u18491:
 33607  00C26A  EF3C  F061         	goto	l17259
 33608  00C26E                     u18490:
 33609  00C26E  5009               	movf	___lwdiv@divisor^0,w,c
 33610  00C270  5E07               	subwf	___lwdiv@dividend^0,f,c
 33611  00C272  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 33612  00C274  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 33613  00C276  800C               	bsf	___lwdiv@quotient^0,0,c
 33614  00C278                     l17259:
 33615  00C278  90D8               	bcf	status,0,c
 33616  00C27A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 33617  00C27C  3209               	rrcf	___lwdiv@divisor^0,f,c
 33618  00C27E  2E0B               	decfsz	___lwdiv@counter^0,f,c
 33619  00C280  EF29  F061         	goto	l17251
 33620  00C284                     l2772:
 33621  00C284  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
 33622  00C288  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 33623  00C28C  0012               	return		;funcret
 33624  00C28E                     __end_of___lwdiv:
 33625                           	callstack 0
 33626                           
 33627 ;; *************** function _isleap *****************
 33628 ;; Defined at:
 33629 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 33630 ;; Parameters:    Size  Location     Type
 33631 ;;  yr              2    5[COMRAM] unsigned int 
 33632 ;; Auto vars:     Size  Location     Type
 33633 ;;		None
 33634 ;; Return value:  Size  Location     Type
 33635 ;;                  2    5[COMRAM] int 
 33636 ;; Registers used:
 33637 ;;		wreg, status,2, status,0, cstack
 33638 ;; Tracked objects:
 33639 ;;		On entry : 0/0
 33640 ;;		On exit  : 0/0
 33641 ;;		Unchanged: 0/0
 33642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33646 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33647 ;;Total ram usage:        5 bytes
 33648 ;; Hardware stack levels used: 1
 33649 ;; Hardware stack levels required when called: 2
 33650 ;; This function calls:
 33651 ;;		___lwmod
 33652 ;; This function is called by:
 33653 ;;		_ymd_to_scalar
 33654 ;; This function uses a non-reentrant model
 33655 ;;
 33656                           
 33657                           	psect	text167
 33658  00BFC6                     __ptext167:
 33659                           	callstack 0
 33660  00BFC6                     _isleap:
 33661                           	callstack 20
 33662  00BFC6  0E01               	movlw	1
 33663  00BFC8  6E0A               	movwf	_isleap$6003^0,c
 33664  00BFCA  C006  F001         	movff	isleap@yr,___lwmod@dividend
 33665  00BFCE  C007  F002         	movff	isleap@yr+1,___lwmod@dividend+1
 33666  00BFD2  0E01               	movlw	1
 33667  00BFD4  6E04               	movwf	(___lwmod@divisor+1)^0,c
 33668  00BFD6  0E90               	movlw	144
 33669  00BFD8  6E03               	movwf	___lwmod@divisor^0,c
 33670  00BFDA  EC88  F063         	call	___lwmod	;wreg free
 33671  00BFDE  5001               	movf	?___lwmod^0,w,c
 33672  00BFE0  1002               	iorwf	(?___lwmod+1)^0,w,c
 33673  00BFE2  B4D8               	btfsc	status,2,c
 33674  00BFE4  EFF6  F05F         	goto	u18531
 33675  00BFE8  EFF8  F05F         	goto	u18530
 33676  00BFEC                     u18531:
 33677  00BFEC  EF1C  F060         	goto	l17289
 33678  00BFF0                     u18530:
 33679  00BFF0  0E03               	movlw	3
 33680  00BFF2  1406               	andwf	isleap@yr^0,w,c
 33681  00BFF4  6E08               	movwf	??_isleap^0,c
 33682  00BFF6  0E00               	movlw	0
 33683  00BFF8  1407               	andwf	(isleap@yr+1)^0,w,c
 33684  00BFFA  6E09               	movwf	(??_isleap+1)^0,c
 33685  00BFFC  5008               	movf	??_isleap^0,w,c
 33686  00BFFE  1009               	iorwf	(??_isleap+1)^0,w,c
 33687  00C000  A4D8               	btfss	status,2,c
 33688  00C002  EF05  F060         	goto	u18541
 33689  00C006  EF07  F060         	goto	u18540
 33690  00C00A                     u18541:
 33691  00C00A  EF1A  F060         	goto	l17287
 33692  00C00E                     u18540:
 33693  00C00E  C006  F001         	movff	isleap@yr,___lwmod@dividend
 33694  00C012  C007  F002         	movff	isleap@yr+1,___lwmod@dividend+1
 33695  00C016  0E00               	movlw	0
 33696  00C018  6E04               	movwf	(___lwmod@divisor+1)^0,c
 33697  00C01A  0E64               	movlw	100
 33698  00C01C  6E03               	movwf	___lwmod@divisor^0,c
 33699  00C01E  EC88  F063         	call	___lwmod	;wreg free
 33700  00C022  5001               	movf	?___lwmod^0,w,c
 33701  00C024  1002               	iorwf	(?___lwmod+1)^0,w,c
 33702  00C026  A4D8               	btfss	status,2,c
 33703  00C028  EF18  F060         	goto	u18551
 33704  00C02C  EF1A  F060         	goto	u18550
 33705  00C030                     u18551:
 33706  00C030  EF1C  F060         	goto	l17289
 33707  00C034                     u18550:
 33708  00C034                     l17287:
 33709  00C034  0E00               	movlw	0
 33710  00C036  6E0A               	movwf	_isleap$6003^0,c
 33711  00C038                     l17289:
 33712  00C038  C00A  F006         	movff	_isleap$6003,?_isleap
 33713  00C03C  6A07               	clrf	(?_isleap+1)^0,c
 33714  00C03E  0012               	return		;funcret
 33715  00C040                     __end_of_isleap:
 33716                           	callstack 0
 33717                           
 33718 ;; *************** function ___lwmod *****************
 33719 ;; Defined at:
 33720 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
 33721 ;; Parameters:    Size  Location     Type
 33722 ;;  dividend        2    0[COMRAM] unsigned int 
 33723 ;;  divisor         2    2[COMRAM] unsigned int 
 33724 ;; Auto vars:     Size  Location     Type
 33725 ;;  counter         1    4[COMRAM] unsigned char 
 33726 ;; Return value:  Size  Location     Type
 33727 ;;                  2    0[COMRAM] unsigned int 
 33728 ;; Registers used:
 33729 ;;		wreg, status,2, status,0
 33730 ;; Tracked objects:
 33731 ;;		On entry : 0/0
 33732 ;;		On exit  : 0/0
 33733 ;;		Unchanged: 0/0
 33734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33738 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33739 ;;Total ram usage:        5 bytes
 33740 ;; Hardware stack levels used: 1
 33741 ;; Hardware stack levels required when called: 1
 33742 ;; This function calls:
 33743 ;;		Nothing
 33744 ;; This function is called by:
 33745 ;;		_fround
 33746 ;;		_isleap
 33747 ;; This function uses a non-reentrant model
 33748 ;;
 33749                           
 33750                           	psect	text168
 33751  00C710                     __ptext168:
 33752                           	callstack 0
 33753  00C710                     ___lwmod:
 33754                           	callstack 20
 33755  00C710  5003               	movf	___lwmod@divisor^0,w,c
 33756  00C712  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
 33757  00C714  B4D8               	btfsc	status,2,c
 33758  00C716  EF8F  F063         	goto	u18501
 33759  00C71A  EF91  F063         	goto	u18500
 33760  00C71E                     u18501:
 33761  00C71E  EFB5  F063         	goto	l2782
 33762  00C722                     u18500:
 33763  00C722  0E01               	movlw	1
 33764  00C724  6E05               	movwf	___lwmod@counter^0,c
 33765  00C726  EF99  F063         	goto	l17269
 33766  00C72A                     l17267:
 33767  00C72A  90D8               	bcf	status,0,c
 33768  00C72C  3603               	rlcf	___lwmod@divisor^0,f,c
 33769  00C72E  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
 33770  00C730  2A05               	incf	___lwmod@counter^0,f,c
 33771  00C732                     l17269:
 33772  00C732  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
 33773  00C734  EF9E  F063         	goto	u18511
 33774  00C738  EFA0  F063         	goto	u18510
 33775  00C73C                     u18511:
 33776  00C73C  EF95  F063         	goto	l17267
 33777  00C740                     u18510:
 33778  00C740                     l17271:
 33779  00C740  5003               	movf	___lwmod@divisor^0,w,c
 33780  00C742  5C01               	subwf	___lwmod@dividend^0,w,c
 33781  00C744  5004               	movf	(___lwmod@divisor+1)^0,w,c
 33782  00C746  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
 33783  00C748  A0D8               	btfss	status,0,c
 33784  00C74A  EFA9  F063         	goto	u18521
 33785  00C74E  EFAB  F063         	goto	u18520
 33786  00C752                     u18521:
 33787  00C752  EFAF  F063         	goto	l17275
 33788  00C756                     u18520:
 33789  00C756  5003               	movf	___lwmod@divisor^0,w,c
 33790  00C758  5E01               	subwf	___lwmod@dividend^0,f,c
 33791  00C75A  5004               	movf	(___lwmod@divisor+1)^0,w,c
 33792  00C75C  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
 33793  00C75E                     l17275:
 33794  00C75E  90D8               	bcf	status,0,c
 33795  00C760  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
 33796  00C762  3203               	rrcf	___lwmod@divisor^0,f,c
 33797  00C764  2E05               	decfsz	___lwmod@counter^0,f,c
 33798  00C766  EFA0  F063         	goto	l17271
 33799  00C76A                     l2782:
 33800  00C76A  C001  F001         	movff	___lwmod@dividend,?___lwmod
 33801  00C76E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 33802  00C772  0012               	return		;funcret
 33803  00C774                     __end_of___lwmod:
 33804                           	callstack 0
 33805                           
 33806 ;; *************** function _get_product_desc *****************
 33807 ;; Defined at:
 33808 ;;		line 272 in file "usb_descriptors.c"
 33809 ;; Parameters:    Size  Location     Type
 33810 ;;		None
 33811 ;; Auto vars:     Size  Location     Type
 33812 ;;		None
 33813 ;; Return value:  Size  Location     Type
 33814 ;;                  2    0[COMRAM] PTR unsigned int 
 33815 ;; Registers used:
 33816 ;;		wreg, status,2, status,0
 33817 ;; Tracked objects:
 33818 ;;		On entry : 0/0
 33819 ;;		On exit  : 0/0
 33820 ;;		Unchanged: 0/0
 33821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33826 ;;Total ram usage:        2 bytes
 33827 ;; Hardware stack levels used: 1
 33828 ;; Hardware stack levels required when called: 1
 33829 ;; This function calls:
 33830 ;;		Nothing
 33831 ;; This function is called by:
 33832 ;;		_nvm_init
 33833 ;; This function uses a non-reentrant model
 33834 ;;
 33835                           
 33836                           	psect	text169
 33837  00D65A                     __ptext169:
 33838                           	callstack 0
 33839  00D65A                     _get_product_desc:
 33840                           	callstack 27
 33841  00D65A                     
 33842                           ;usb_descriptors.c: 274: return sd002.string;
 33843  00D65A  0EC5               	movlw	low (_sd002+2)
 33844  00D65C  6E01               	movwf	?_get_product_desc^0,c
 33845  00D65E  0E04               	movlw	high (_sd002+2)
 33846  00D660  6E02               	movwf	(?_get_product_desc+1)^0,c
 33847  00D662  0012               	return		;funcret
 33848  00D664                     __end_of_get_product_desc:
 33849                           	callstack 0
 33850                           
 33851 ;; *************** function _led_init *****************
 33852 ;; Defined at:
 33853 ;;		line 61 in file "app_led_task.c"
 33854 ;; Parameters:    Size  Location     Type
 33855 ;;		None
 33856 ;; Auto vars:     Size  Location     Type
 33857 ;;		None
 33858 ;; Return value:  Size  Location     Type
 33859 ;;                  1    wreg      void 
 33860 ;; Registers used:
 33861 ;;		wreg, status,2, status,0, cstack
 33862 ;; Tracked objects:
 33863 ;;		On entry : 0/0
 33864 ;;		On exit  : 0/0
 33865 ;;		Unchanged: 0/0
 33866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33871 ;;Total ram usage:        0 bytes
 33872 ;; Hardware stack levels used: 1
 33873 ;; Hardware stack levels required when called: 2
 33874 ;; This function calls:
 33875 ;;		_LED_Off
 33876 ;;		_LED_On
 33877 ;; This function is called by:
 33878 ;;		_Board_initialize
 33879 ;; This function uses a non-reentrant model
 33880 ;;
 33881                           
 33882                           	psect	text170
 33883  00CA60                     __ptext170:
 33884                           	callstack 0
 33885  00CA60                     _led_init:
 33886                           	callstack 27
 33887  00CA60                     
 33888                           ;app_led_task.c: 63: g_led_status.seq = LED_INIT;
 33889  00CA60  0E00               	movlw	0
 33890  00CA62  0100               	movlb	0	; () banked
 33891  00CA64  6FC0               	movwf	_g_led_status& (0+255),b
 33892                           
 33893                           ;app_led_task.c: 64: g_led_status.last_state = LED_INIT;
 33894  00CA66  0E00               	movlw	0
 33895  00CA68  6FC1               	movwf	(_g_led_status+1)& (0+255),b
 33896                           
 33897                           ;app_led_task.c: 65: g_led_status.isBlink = 0;
 33898  00CA6A  0E00               	movlw	0
 33899  00CA6C  6FC2               	movwf	(_g_led_status+2)& (0+255),b
 33900                           
 33901                           ;app_led_task.c: 66: g_led_status.toggle = 0;
 33902  00CA6E  0E00               	movlw	0
 33903  00CA70  6FC3               	movwf	(_g_led_status+3)& (0+255),b
 33904                           
 33905                           ;app_led_task.c: 67: g_led_status.twoYear = 0;
 33906  00CA72  0E00               	movlw	0
 33907  00CA74  6FC4               	movwf	(_g_led_status+4)& (0+255),b
 33908  00CA76                     
 33909                           ; BSR set to: 0
 33910                           ;app_led_task.c: 68: if (g_nvm.flash.usedtime >= 17520) {
 33911  00CA76  0101               	movlb	1	; () banked
 33912  00CA78  51CC               	movf	(_g_nvm+60)& (0+255),w,b
 33913  00CA7A  11CB               	iorwf	(_g_nvm+59)& (0+255),w,b
 33914  00CA7C  E10B               	bnz	u13420
 33915  00CA7E  0E70               	movlw	112
 33916  00CA80  5DC9               	subwf	(_g_nvm+57)& (0+255),w,b
 33917  00CA82  0E44               	movlw	68
 33918  00CA84  59CA               	subwfb	(_g_nvm+58)& (0+255),w,b
 33919  00CA86  A0D8               	btfss	status,0,c
 33920  00CA88  EF48  F065         	goto	u13421
 33921  00CA8C  EF4A  F065         	goto	u13420
 33922  00CA90                     u13421:
 33923  00CA90  EF4D  F065         	goto	l13083
 33924  00CA94                     u13420:
 33925  00CA94                     
 33926                           ; BSR set to: 1
 33927                           ;app_led_task.c: 69: g_led_status.twoYear = 1;
 33928  00CA94  0E01               	movlw	1
 33929  00CA96  0100               	movlb	0	; () banked
 33930  00CA98  6FC4               	movwf	(_g_led_status+4)& (0+255),b
 33931  00CA9A                     l13083:
 33932                           
 33933                           ;app_led_task.c: 70: };app_led_task.c: 72: LED_Off();
 33934  00CA9A  EC35  F06B         	call	_LED_Off	;wreg free
 33935  00CA9E                     
 33936                           ;app_led_task.c: 73: LED_On(LED_RED);
 33937  00CA9E  0E01               	movlw	1
 33938  00CAA0  ECF3  F068         	call	_LED_On
 33939  00CAA4                     
 33940                           ;app_led_task.c: 75: g_led_counter = 0;
 33941  00CAA4  0E00               	movlw	0
 33942  00CAA6  0100               	movlb	0	; () banked
 33943  00CAA8  6FC5               	movwf	_g_led_counter& (0+255),b	;volatile
 33944  00CAAA  0E00               	movlw	0
 33945  00CAAC  6FC6               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 33946  00CAAE  0E00               	movlw	0
 33947  00CAB0  6FC7               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 33948  00CAB2  0E00               	movlw	0
 33949  00CAB4  6FC8               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 33950  00CAB6                     
 33951                           ; BSR set to: 0
 33952  00CAB6  0012               	return		;funcret
 33953  00CAB8                     __end_of_led_init:
 33954                           	callstack 0
 33955                           
 33956 ;; *************** function _LED_On *****************
 33957 ;; Defined at:
 33958 ;;		line 53 in file "bsp/leds.c"
 33959 ;; Parameters:    Size  Location     Type
 33960 ;;  led             1    wreg     enum E5213
 33961 ;; Auto vars:     Size  Location     Type
 33962 ;;  led             1    0[COMRAM] enum E5213
 33963 ;; Return value:  Size  Location     Type
 33964 ;;                  1    wreg      void 
 33965 ;; Registers used:
 33966 ;;		wreg, status,2, status,0
 33967 ;; Tracked objects:
 33968 ;;		On entry : 0/0
 33969 ;;		On exit  : 0/0
 33970 ;;		Unchanged: 0/0
 33971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33976 ;;Total ram usage:        1 bytes
 33977 ;; Hardware stack levels used: 1
 33978 ;; Hardware stack levels required when called: 1
 33979 ;; This function calls:
 33980 ;;		Nothing
 33981 ;; This function is called by:
 33982 ;;		_led_warmup
 33983 ;;		_led_zerocal_end
 33984 ;;		_led_fail
 33985 ;;		_led_init
 33986 ;;		_led_task
 33987 ;;		_sens_ZeroCalib_task
 33988 ;; This function uses a non-reentrant model
 33989 ;;
 33990                           
 33991                           	psect	text171
 33992  00D1E6                     __ptext171:
 33993                           	callstack 0
 33994  00D1E6                     _LED_On:
 33995                           	callstack 28
 33996                           
 33997                           ; BSR set to: 0
 33998                           ;incstack = 0
 33999                           ;LED_On@led stored from wreg
 34000  00D1E6  6E01               	movwf	LED_On@led^0,c
 34001  00D1E8                     
 34002                           ;leds.c: 55: switch(led)
 34003  00D1E8  EFFC  F068         	goto	l11787
 34004  00D1EC                     l903:
 34005                           
 34006                           ;leds.c: 58: LATBbits.LATB0 = 0;
 34007  00D1EC  908A               	bcf	138,0,c	;volatile
 34008                           
 34009                           ;leds.c: 59: break;
 34010  00D1EE  EF0B  F069         	goto	l907
 34011  00D1F2                     l905:
 34012                           
 34013                           ;leds.c: 62: LATBbits.LATB1 = 0;
 34014  00D1F2  928A               	bcf	138,1,c	;volatile
 34015                           
 34016                           ;leds.c: 63: break;
 34017  00D1F4  EF0B  F069         	goto	l907
 34018  00D1F8                     l11787:
 34019  00D1F8  5001               	movf	LED_On@led^0,w,c
 34020                           
 34021                           ; Switch size 1, requested type "simple"
 34022                           ; Number of cases is 3, Range of values is 0 to 2
 34023                           ; switch strategies available:
 34024                           ; Name         Instructions Cycles
 34025                           ; simple_byte           10     6 (average)
 34026                           ;	Chosen strategy is simple_byte
 34027  00D1FA  0A00               	xorlw	0	; case 0
 34028  00D1FC  B4D8               	btfsc	status,2,c
 34029  00D1FE  EF0B  F069         	goto	l907
 34030  00D202  0A01               	xorlw	1	; case 1
 34031  00D204  B4D8               	btfsc	status,2,c
 34032  00D206  EFF6  F068         	goto	l903
 34033  00D20A  0A03               	xorlw	3	; case 2
 34034  00D20C  B4D8               	btfsc	status,2,c
 34035  00D20E  EFF9  F068         	goto	l905
 34036  00D212  EF0B  F069         	goto	l907
 34037  00D216                     l907:
 34038  00D216  0012               	return		;funcret
 34039  00D218                     __end_of_LED_On:
 34040                           	callstack 0
 34041                           
 34042 ;; *************** function _LED_Off *****************
 34043 ;; Defined at:
 34044 ;;		line 86 in file "bsp/leds.c"
 34045 ;; Parameters:    Size  Location     Type
 34046 ;;		None
 34047 ;; Auto vars:     Size  Location     Type
 34048 ;;		None
 34049 ;; Return value:  Size  Location     Type
 34050 ;;                  1    wreg      void 
 34051 ;; Registers used:
 34052 ;;		None
 34053 ;; Tracked objects:
 34054 ;;		On entry : 0/0
 34055 ;;		On exit  : 0/0
 34056 ;;		Unchanged: 0/0
 34057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34062 ;;Total ram usage:        0 bytes
 34063 ;; Hardware stack levels used: 1
 34064 ;; Hardware stack levels required when called: 1
 34065 ;; This function calls:
 34066 ;;		Nothing
 34067 ;; This function is called by:
 34068 ;;		_led_warmup
 34069 ;;		_led_zerocal_end
 34070 ;;		_led_fail
 34071 ;;		_led_init
 34072 ;;		_led_task
 34073 ;;		_sens_ZeroCalib_task
 34074 ;; This function uses a non-reentrant model
 34075 ;;
 34076                           
 34077                           	psect	text172
 34078  00D66A                     __ptext172:
 34079                           	callstack 0
 34080  00D66A                     _LED_Off:
 34081                           	callstack 28
 34082  00D66A                     
 34083                           ;leds.c: 88: LATBbits.LATB0 = 1;
 34084  00D66A  808A               	bsf	138,0,c	;volatile
 34085                           
 34086                           ;leds.c: 89: LATBbits.LATB1 = 1;
 34087  00D66C  828A               	bsf	138,1,c	;volatile
 34088  00D66E  0012               	return		;funcret
 34089  00D670                     __end_of_LED_Off:
 34090                           	callstack 0
 34091                           
 34092 ;; *************** function _i2c_init *****************
 34093 ;; Defined at:
 34094 ;;		line 16 in file "bsp/i2c.c"
 34095 ;; Parameters:    Size  Location     Type
 34096 ;;  speed           1    wreg     const enum E5213
 34097 ;; Auto vars:     Size  Location     Type
 34098 ;;  speed           1    0[COMRAM] const enum E5213
 34099 ;; Return value:  Size  Location     Type
 34100 ;;                  1    wreg      void 
 34101 ;; Registers used:
 34102 ;;		wreg, status,2
 34103 ;; Tracked objects:
 34104 ;;		On entry : 0/0
 34105 ;;		On exit  : 0/0
 34106 ;;		Unchanged: 0/0
 34107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34112 ;;Total ram usage:        1 bytes
 34113 ;; Hardware stack levels used: 1
 34114 ;; Hardware stack levels required when called: 1
 34115 ;; This function calls:
 34116 ;;		Nothing
 34117 ;; This function is called by:
 34118 ;;		_Board_initialize
 34119 ;; This function uses a non-reentrant model
 34120 ;;
 34121                           
 34122                           	psect	text173
 34123  00CF94                     __ptext173:
 34124                           	callstack 0
 34125  00CF94                     _i2c_init:
 34126                           	callstack 28
 34127                           
 34128                           ;incstack = 0
 34129                           ;i2c_init@speed stored from wreg
 34130  00CF94  6E01               	movwf	i2c_init@speed^0,c
 34131  00CF96                     
 34132                           ;i2c.c: 19: TRISBbits.TRISB4 = 1;
 34133  00CF96  8893               	bsf	147,4,c	;volatile
 34134                           
 34135                           ;i2c.c: 20: TRISBbits.TRISB5 = 1;
 34136  00CF98  8A93               	bsf	147,5,c	;volatile
 34137  00CF9A                     
 34138                           ;i2c.c: 23: SSP1CON1 = 0x28;
 34139  00CF9A  0E28               	movlw	40
 34140  00CF9C  6EC6               	movwf	198,c	;volatile
 34141                           
 34142                           ;i2c.c: 24: SSP1CON2 = 0x00;
 34143  00CF9E  0E00               	movlw	0
 34144  00CFA0  6EC5               	movwf	197,c	;volatile
 34145  00CFA2                     
 34146                           ;i2c.c: 26: if (speed == I2C_100kHz)
 34147  00CFA2  5001               	movf	i2c_init@speed^0,w,c
 34148  00CFA4  A4D8               	btfss	status,2,c
 34149  00CFA6  EFD7  F067         	goto	u12571
 34150  00CFAA  EFD9  F067         	goto	u12570
 34151  00CFAE                     u12571:
 34152  00CFAE  EFDF  F067         	goto	l12459
 34153  00CFB2                     u12570:
 34154  00CFB2                     
 34155                           ;i2c.c: 27: {;i2c.c: 28: SSP1STAT = 0x80;
 34156  00CFB2  0E80               	movlw	128
 34157  00CFB4  6EC7               	movwf	199,c	;volatile
 34158                           
 34159                           ;i2c.c: 29: SSP1ADD = 119;
 34160  00CFB6  0E77               	movlw	119
 34161  00CFB8  6EC8               	movwf	200,c	;volatile
 34162                           
 34163                           ;i2c.c: 30: }
 34164  00CFBA  EFE3  F067         	goto	l12461
 34165  00CFBE                     l12459:
 34166                           
 34167                           ;i2c.c: 31: else;i2c.c: 32: {;i2c.c: 33: SSP1STAT = 0x00;
 34168  00CFBE  0E00               	movlw	0
 34169  00CFC0  6EC7               	movwf	199,c	;volatile
 34170                           
 34171                           ;i2c.c: 34: SSP1ADD = 29;
 34172  00CFC2  0E1D               	movlw	29
 34173  00CFC4  6EC8               	movwf	200,c	;volatile
 34174  00CFC6                     l12461:
 34175                           
 34176                           ;i2c.c: 35: };i2c.c: 37: PIR1bits.SSP1IF = 0;
 34177  00CFC6  969E               	bcf	158,3,c	;volatile
 34178  00CFC8                     
 34179                           ;i2c.c: 38: PIR2bits.BCL1IF = 0;
 34180  00CFC8  96A1               	bcf	161,3,c	;volatile
 34181  00CFCA                     
 34182                           ;i2c.c: 39: SSP1CON2bits.SEN = 0;
 34183  00CFCA  90C5               	bcf	197,0,c	;volatile
 34184  00CFCC  0012               	return		;funcret
 34185  00CFCE                     __end_of_i2c_init:
 34186                           	callstack 0
 34187                           
 34188 ;; *************** function _buffer_init *****************
 34189 ;; Defined at:
 34190 ;;		line 8 in file "util/buffer.c"
 34191 ;; Parameters:    Size  Location     Type
 34192 ;;  queue           2    0[COMRAM] PTR struct buff_queue
 34193 ;;		 -> g_usb_queue(67), 
 34194 ;; Auto vars:     Size  Location     Type
 34195 ;;		None
 34196 ;; Return value:  Size  Location     Type
 34197 ;;                  1    wreg      void 
 34198 ;; Registers used:
 34199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34200 ;; Tracked objects:
 34201 ;;		On entry : 0/0
 34202 ;;		On exit  : 0/0
 34203 ;;		Unchanged: 0/0
 34204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34209 ;;Total ram usage:        2 bytes
 34210 ;; Hardware stack levels used: 1
 34211 ;; Hardware stack levels required when called: 1
 34212 ;; This function calls:
 34213 ;;		Nothing
 34214 ;; This function is called by:
 34215 ;;		_Board_initialize
 34216 ;; This function uses a non-reentrant model
 34217 ;;
 34218                           
 34219                           	psect	text174
 34220  00D2D8                     __ptext174:
 34221                           	callstack 0
 34222  00D2D8                     _buffer_init:
 34223                           	callstack 28
 34224  00D2D8                     
 34225                           ;buffer.c: 10: queue->size = 64;
 34226  00D2D8  C001  FFD9         	movff	buffer_init@queue,fsr2l
 34227  00D2DC  C002  FFDA         	movff	buffer_init@queue+1,fsr2h
 34228  00D2E0  0E40               	movlw	64
 34229  00D2E2  6EDF               	movwf	indf2,c
 34230  00D2E4                     
 34231                           ;buffer.c: 11: queue->read_pos = 0;
 34232  00D2E4  EE20 F001          	lfsr	2,1
 34233  00D2E8  5001               	movf	buffer_init@queue^0,w,c
 34234  00D2EA  26D9               	addwf	fsr2l,f,c
 34235  00D2EC  5002               	movf	(buffer_init@queue+1)^0,w,c
 34236  00D2EE  22DA               	addwfc	fsr2h,f,c
 34237  00D2F0  0E00               	movlw	0
 34238  00D2F2  6EDF               	movwf	indf2,c
 34239  00D2F4                     
 34240                           ;buffer.c: 12: queue->write_pos = 0;
 34241  00D2F4  EE20 F002          	lfsr	2,2
 34242  00D2F8  5001               	movf	buffer_init@queue^0,w,c
 34243  00D2FA  26D9               	addwf	fsr2l,f,c
 34244  00D2FC  5002               	movf	(buffer_init@queue+1)^0,w,c
 34245  00D2FE  22DA               	addwfc	fsr2h,f,c
 34246  00D300  0E00               	movlw	0
 34247  00D302  6EDF               	movwf	indf2,c
 34248  00D304  0012               	return		;funcret
 34249  00D306                     __end_of_buffer_init:
 34250                           	callstack 0
 34251                           
 34252 ;; *************** function _atcommand_init *****************
 34253 ;; Defined at:
 34254 ;;		line 117 in file "app_atcommand.c"
 34255 ;; Parameters:    Size  Location     Type
 34256 ;;		None
 34257 ;; Auto vars:     Size  Location     Type
 34258 ;;		None
 34259 ;; Return value:  Size  Location     Type
 34260 ;;                  1    wreg      void 
 34261 ;; Registers used:
 34262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34263 ;; Tracked objects:
 34264 ;;		On entry : 0/0
 34265 ;;		On exit  : 0/0
 34266 ;;		Unchanged: 0/0
 34267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34272 ;;Total ram usage:        0 bytes
 34273 ;; Hardware stack levels used: 1
 34274 ;; Hardware stack levels required when called: 3
 34275 ;; This function calls:
 34276 ;;		_clear_command
 34277 ;; This function is called by:
 34278 ;;		_Board_initialize
 34279 ;; This function uses a non-reentrant model
 34280 ;;
 34281                           
 34282                           	psect	text175
 34283  00D64E                     __ptext175:
 34284                           	callstack 0
 34285  00D64E                     _atcommand_init:
 34286                           	callstack 26
 34287  00D64E                     
 34288                           ;app_atcommand.c: 119: g_atcommand.seq = AT_INIT;
 34289  00D64E  0E00               	movlw	0
 34290  00D650  0105               	movlb	5	; () banked
 34291  00D652  6F00               	movwf	_g_atcommand& (0+255),b
 34292  00D654                     
 34293                           ; BSR set to: 5
 34294                           ;app_atcommand.c: 120: clear_command();
 34295  00D654  ECB5  F061         	call	_clear_command	;wreg free
 34296  00D658  0012               	return		;funcret
 34297  00D65A                     __end_of_atcommand_init:
 34298                           	callstack 0
 34299                           
 34300 ;; *************** function _clear_command *****************
 34301 ;; Defined at:
 34302 ;;		line 534 in file "app_atcommand.c"
 34303 ;; Parameters:    Size  Location     Type
 34304 ;;		None
 34305 ;; Auto vars:     Size  Location     Type
 34306 ;;		None
 34307 ;; Return value:  Size  Location     Type
 34308 ;;                  1    wreg      void 
 34309 ;; Registers used:
 34310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34311 ;; Tracked objects:
 34312 ;;		On entry : 0/0
 34313 ;;		On exit  : 0/0
 34314 ;;		Unchanged: 0/0
 34315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34320 ;;Total ram usage:        0 bytes
 34321 ;; Hardware stack levels used: 1
 34322 ;; Hardware stack levels required when called: 2
 34323 ;; This function calls:
 34324 ;;		__strclr
 34325 ;; This function is called by:
 34326 ;;		_atcommand_init
 34327 ;;		_atcommand_task
 34328 ;; This function uses a non-reentrant model
 34329 ;;
 34330                           
 34331                           	psect	text176
 34332  00C36A                     __ptext176:
 34333                           	callstack 0
 34334  00C36A                     _clear_command:
 34335                           	callstack 27
 34336  00C36A                     
 34337                           ;app_atcommand.c: 536: g_atcommand.readidx = 0;
 34338  00C36A  0E00               	movlw	0
 34339  00C36C  0105               	movlb	5	; () banked
 34340  00C36E  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 34341                           
 34342                           ;app_atcommand.c: 537: g_atcommand.status.channelno = 0;
 34343  00C370  0E00               	movlw	0
 34344  00C372  6F42               	movwf	(_g_atcommand+66)& (0+255),b
 34345                           
 34346                           ;app_atcommand.c: 538: g_atcommand.status.last_update = 0;
 34347  00C374  0E00               	movlw	0
 34348  00C376  6F43               	movwf	(_g_atcommand+67)& (0+255),b
 34349                           
 34350                           ;app_atcommand.c: 539: g_atcommand.status.atcommand = ATNONE;
 34351  00C378  0E00               	movlw	0
 34352  00C37A  6F45               	movwf	(_g_atcommand+69)& (0+255),b
 34353                           
 34354                           ;app_atcommand.c: 540: g_atcommand.status.isApply = 0;
 34355  00C37C  0E00               	movlw	0
 34356  00C37E  6F51               	movwf	(_g_atcommand+81)& (0+255),b
 34357                           
 34358                           ;app_atcommand.c: 541: g_atcommand.status.type = AT_READONLY;
 34359  00C380  0E00               	movlw	0
 34360  00C382  6FF2               	movwf	(_g_atcommand+242)& (0+255),b
 34361  00C384                     
 34362                           ; BSR set to: 5
 34363                           ;app_atcommand.c: 543: _strclr(g_atcommand.read_cmd, sizeof(g_atcommand.read_cmd));
 34364  00C384  0E01               	movlw	low (_g_atcommand+1)
 34365  00C386  6E01               	movwf	__strclr@dest^0,c
 34366  00C388  0E05               	movlw	high (_g_atcommand+1)
 34367  00C38A  6E02               	movwf	(__strclr@dest+1)^0,c
 34368  00C38C  0E00               	movlw	0
 34369  00C38E  6E04               	movwf	(__strclr@n+1)^0,c
 34370  00C390  0E40               	movlw	64
 34371  00C392  6E03               	movwf	__strclr@n^0,c
 34372  00C394  EC1C  F064         	call	__strclr	;wreg free
 34373  00C398                     
 34374                           ;app_atcommand.c: 544: _strclr(g_atcommand.status.szcommand, sizeof(g_atcommand.status.s
      +                          zcommand));
 34375  00C398  0E46               	movlw	low (_g_atcommand+70)
 34376  00C39A  6E01               	movwf	__strclr@dest^0,c
 34377  00C39C  0E05               	movlw	high (_g_atcommand+70)
 34378  00C39E  6E02               	movwf	(__strclr@dest+1)^0,c
 34379  00C3A0  0E00               	movlw	0
 34380  00C3A2  6E04               	movwf	(__strclr@n+1)^0,c
 34381  00C3A4  0E0B               	movlw	11
 34382  00C3A6  6E03               	movwf	__strclr@n^0,c
 34383  00C3A8  EC1C  F064         	call	__strclr	;wreg free
 34384  00C3AC                     
 34385                           ;app_atcommand.c: 545: _strclr(g_atcommand.status.apply_params, sizeof(g_atcommand.statu
      +                          s.apply_params));
 34386  00C3AC  0E52               	movlw	low (_g_atcommand+82)
 34387  00C3AE  6E01               	movwf	__strclr@dest^0,c
 34388  00C3B0  0E05               	movlw	high (_g_atcommand+82)
 34389  00C3B2  6E02               	movwf	(__strclr@dest+1)^0,c
 34390  00C3B4  0E00               	movlw	0
 34391  00C3B6  6E04               	movwf	(__strclr@n+1)^0,c
 34392  00C3B8  0E20               	movlw	32
 34393  00C3BA  6E03               	movwf	__strclr@n^0,c
 34394  00C3BC  EC1C  F064         	call	__strclr	;wreg free
 34395  00C3C0                     
 34396                           ;app_atcommand.c: 547: _strclr(writeBuffer, 64);
 34397  00C3C0  0E77               	movlw	low _writeBuffer
 34398  00C3C2  6E01               	movwf	__strclr@dest^0,c
 34399  00C3C4  0E02               	movlw	high _writeBuffer
 34400  00C3C6  6E02               	movwf	(__strclr@dest+1)^0,c
 34401  00C3C8  0E00               	movlw	0
 34402  00C3CA  6E04               	movwf	(__strclr@n+1)^0,c
 34403  00C3CC  0E40               	movlw	64
 34404  00C3CE  6E03               	movwf	__strclr@n^0,c
 34405  00C3D0  EC1C  F064         	call	__strclr	;wreg free
 34406  00C3D4  0012               	return		;funcret
 34407  00C3D6                     __end_of_clear_command:
 34408                           	callstack 0
 34409                           
 34410 ;; *************** function __strclr *****************
 34411 ;; Defined at:
 34412 ;;		line 47 in file "util/_string.c"
 34413 ;; Parameters:    Size  Location     Type
 34414 ;;  dest            2    0[COMRAM] PTR unsigned char 
 34415 ;;		 -> writeBuffer(64), g_atcommand.status(177), g_atcommand(243), 
 34416 ;;  n               2    2[COMRAM] int 
 34417 ;; Auto vars:     Size  Location     Type
 34418 ;;		None
 34419 ;; Return value:  Size  Location     Type
 34420 ;;                  1    wreg      void 
 34421 ;; Registers used:
 34422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34423 ;; Tracked objects:
 34424 ;;		On entry : 0/0
 34425 ;;		On exit  : 0/0
 34426 ;;		Unchanged: 0/0
 34427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34432 ;;Total ram usage:        4 bytes
 34433 ;; Hardware stack levels used: 1
 34434 ;; Hardware stack levels required when called: 1
 34435 ;; This function calls:
 34436 ;;		Nothing
 34437 ;; This function is called by:
 34438 ;;		_atcommand_task
 34439 ;;		_clear_command
 34440 ;; This function uses a non-reentrant model
 34441 ;;
 34442                           
 34443                           	psect	text177
 34444  00C838                     __ptext177:
 34445                           	callstack 0
 34446  00C838                     __strclr:
 34447                           	callstack 27
 34448  00C838                     
 34449                           ;_string.c: 49: if(!dest || !n || n<0) return;
 34450  00C838  5001               	movf	__strclr@dest^0,w,c
 34451  00C83A  1002               	iorwf	(__strclr@dest+1)^0,w,c
 34452  00C83C  B4D8               	btfsc	status,2,c
 34453  00C83E  EF23  F064         	goto	u10801
 34454  00C842  EF25  F064         	goto	u10800
 34455  00C846                     u10801:
 34456  00C846  EF4C  F064         	goto	l94
 34457  00C84A                     u10800:
 34458  00C84A  5003               	movf	__strclr@n^0,w,c
 34459  00C84C  1004               	iorwf	(__strclr@n+1)^0,w,c
 34460  00C84E  B4D8               	btfsc	status,2,c
 34461  00C850  EF2C  F064         	goto	u10811
 34462  00C854  EF2E  F064         	goto	u10810
 34463  00C858                     u10811:
 34464  00C858  EF4C  F064         	goto	l94
 34465  00C85C                     u10810:
 34466  00C85C  BE04               	btfsc	(__strclr@n+1)^0,7,c
 34467  00C85E  EF35  F064         	goto	u10820
 34468  00C862  EF33  F064         	goto	u10821
 34469  00C866                     u10821:
 34470  00C866  EF3F  F064         	goto	l10955
 34471  00C86A                     u10820:
 34472  00C86A  EF4C  F064         	goto	l94
 34473  00C86E                     l10951:
 34474  00C86E  C001  FFD9         	movff	__strclr@dest,fsr2l
 34475  00C872  C002  FFDA         	movff	__strclr@dest+1,fsr2h
 34476  00C876  0E00               	movlw	0
 34477  00C878  6EDF               	movwf	indf2,c
 34478  00C87A  4A01               	infsnz	__strclr@dest^0,f,c
 34479  00C87C  2A02               	incf	(__strclr@dest+1)^0,f,c
 34480  00C87E                     l10955:
 34481  00C87E  0603               	decf	__strclr@n^0,f,c
 34482  00C880  A0D8               	btfss	status,0,c
 34483  00C882  0604               	decf	(__strclr@n+1)^0,f,c
 34484  00C884  2803               	incf	__strclr@n^0,w,c
 34485  00C886  E106               	bnz	u10831
 34486  00C888  2804               	incf	(__strclr@n+1)^0,w,c
 34487  00C88A  A4D8               	btfss	status,2,c
 34488  00C88C  EF4A  F064         	goto	u10831
 34489  00C890  EF4C  F064         	goto	u10830
 34490  00C894                     u10831:
 34491  00C894  EF37  F064         	goto	l10951
 34492  00C898                     u10830:
 34493  00C898                     l94:
 34494  00C898  0012               	return		;funcret
 34495  00C89A                     __end_of__strclr:
 34496                           	callstack 0
 34497                           
 34498 ;; *************** function _Linear_regression_init *****************
 34499 ;; Defined at:
 34500 ;;		line 22 in file "app_linear_regression.c"
 34501 ;; Parameters:    Size  Location     Type
 34502 ;;  p               2    0[COMRAM] PTR struct .
 34503 ;;		 -> g_linear_reg(109), 
 34504 ;; Auto vars:     Size  Location     Type
 34505 ;;  index           1    4[COMRAM] unsigned char 
 34506 ;; Return value:  Size  Location     Type
 34507 ;;                  1    wreg      void 
 34508 ;; Registers used:
 34509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34510 ;; Tracked objects:
 34511 ;;		On entry : 0/0
 34512 ;;		On exit  : 0/0
 34513 ;;		Unchanged: 0/0
 34514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34518 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34519 ;;Total ram usage:        5 bytes
 34520 ;; Hardware stack levels used: 1
 34521 ;; Hardware stack levels required when called: 1
 34522 ;; This function calls:
 34523 ;;		Nothing
 34524 ;; This function is called by:
 34525 ;;		_Board_initialize
 34526 ;; This function uses a non-reentrant model
 34527 ;;
 34528                           
 34529                           	psect	text178
 34530  009590                     __ptext178:
 34531                           	callstack 0
 34532  009590                     _Linear_regression_init:
 34533                           	callstack 28
 34534  009590                     
 34535                           ;app_linear_regression.c: 24: uint8_t index;;app_linear_regression.c: 27: for (index = 0
      +                          ; index < 10; index++) {
 34536  009590  0E00               	movlw	0
 34537  009592  6E05               	movwf	Linear_regression_init@index^0,c
 34538  009594                     l13095:
 34539                           
 34540                           ;app_linear_regression.c: 28: p->x[index] = 0.0f;
 34541  009594  5005               	movf	Linear_regression_init@index^0,w,c
 34542  009596  0D04               	mullw	4
 34543  009598  CFF3 F003          	movff	prodl,??_Linear_regression_init
 34544  00959C  CFF4 F004          	movff	prodh,??_Linear_regression_init+1
 34545  0095A0  5003               	movf	??_Linear_regression_init^0,w,c
 34546  0095A2  2401               	addwf	Linear_regression_init@p^0,w,c
 34547  0095A4  6ED9               	movwf	fsr2l,c
 34548  0095A6  5004               	movf	(??_Linear_regression_init+1)^0,w,c
 34549  0095A8  2002               	addwfc	(Linear_regression_init@p+1)^0,w,c
 34550  0095AA  6EDA               	movwf	fsr2h,c
 34551  0095AC  0E00               	movlw	0
 34552  0095AE  6EDE               	movwf	postinc2,c
 34553  0095B0  0E00               	movlw	0
 34554  0095B2  6EDE               	movwf	postinc2,c
 34555  0095B4  0E00               	movlw	0
 34556  0095B6  6EDE               	movwf	postinc2,c
 34557  0095B8  0E00               	movlw	0
 34558  0095BA  6EDD               	movwf	postdec2,c
 34559                           
 34560                           ;app_linear_regression.c: 29: p->y[index] = 0.0f;
 34561  0095BC  5005               	movf	Linear_regression_init@index^0,w,c
 34562  0095BE  0D04               	mullw	4
 34563  0095C0  C001  F003         	movff	Linear_regression_init@p,??_Linear_regression_init
 34564  0095C4  C002  F004         	movff	Linear_regression_init@p+1,??_Linear_regression_init+1
 34565  0095C8  50F3               	movf	243,w,c
 34566  0095CA  2603               	addwf	??_Linear_regression_init^0,f,c
 34567  0095CC  50F4               	movf	244,w,c
 34568  0095CE  2204               	addwfc	(??_Linear_regression_init+1)^0,f,c
 34569  0095D0  0E28               	movlw	40
 34570  0095D2  2403               	addwf	??_Linear_regression_init^0,w,c
 34571  0095D4  6ED9               	movwf	fsr2l,c
 34572  0095D6  0E00               	movlw	0
 34573  0095D8  2004               	addwfc	(??_Linear_regression_init+1)^0,w,c
 34574  0095DA  6EDA               	movwf	fsr2h,c
 34575  0095DC  0E00               	movlw	0
 34576  0095DE  6EDE               	movwf	postinc2,c
 34577  0095E0  0E00               	movlw	0
 34578  0095E2  6EDE               	movwf	postinc2,c
 34579  0095E4  0E00               	movlw	0
 34580  0095E6  6EDE               	movwf	postinc2,c
 34581  0095E8  0E00               	movlw	0
 34582  0095EA  6EDD               	movwf	postdec2,c
 34583  0095EC  2A05               	incf	Linear_regression_init@index^0,f,c
 34584  0095EE  0E09               	movlw	9
 34585  0095F0  6405               	cpfsgt	Linear_regression_init@index^0,c
 34586  0095F2  EFFD  F04A         	goto	u13431
 34587  0095F6  EFFF  F04A         	goto	u13430
 34588  0095FA                     u13431:
 34589  0095FA  EFCA  F04A         	goto	l13095
 34590  0095FE                     u13430:
 34591  0095FE                     
 34592                           ;app_linear_regression.c: 30: };app_linear_regression.c: 38: p->position = 0;
 34593  0095FE  EE20 F050          	lfsr	2,80
 34594  009602  5001               	movf	Linear_regression_init@p^0,w,c
 34595  009604  26D9               	addwf	fsr2l,f,c
 34596  009606  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34597  009608  22DA               	addwfc	fsr2h,f,c
 34598  00960A  0E00               	movlw	0
 34599  00960C  6EDF               	movwf	indf2,c
 34600                           
 34601                           ;app_linear_regression.c: 39: p->time_cnt = 0.0f;
 34602  00960E  EE20 F051          	lfsr	2,81
 34603  009612  5001               	movf	Linear_regression_init@p^0,w,c
 34604  009614  26D9               	addwf	fsr2l,f,c
 34605  009616  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34606  009618  22DA               	addwfc	fsr2h,f,c
 34607  00961A  0E00               	movlw	0
 34608  00961C  6EDE               	movwf	postinc2,c
 34609  00961E  0E00               	movlw	0
 34610  009620  6EDE               	movwf	postinc2,c
 34611  009622  0E00               	movlw	0
 34612  009624  6EDE               	movwf	postinc2,c
 34613  009626  0E00               	movlw	0
 34614  009628  6EDD               	movwf	postdec2,c
 34615                           
 34616                           ;app_linear_regression.c: 41: p->sum_x = 0.0f;
 34617  00962A  EE20 F055          	lfsr	2,85
 34618  00962E  5001               	movf	Linear_regression_init@p^0,w,c
 34619  009630  26D9               	addwf	fsr2l,f,c
 34620  009632  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34621  009634  22DA               	addwfc	fsr2h,f,c
 34622  009636  0E00               	movlw	0
 34623  009638  6EDE               	movwf	postinc2,c
 34624  00963A  0E00               	movlw	0
 34625  00963C  6EDE               	movwf	postinc2,c
 34626  00963E  0E00               	movlw	0
 34627  009640  6EDE               	movwf	postinc2,c
 34628  009642  0E00               	movlw	0
 34629  009644  6EDD               	movwf	postdec2,c
 34630                           
 34631                           ;app_linear_regression.c: 42: p->sum_y = 0.0f;
 34632  009646  EE20 F05D          	lfsr	2,93
 34633  00964A  5001               	movf	Linear_regression_init@p^0,w,c
 34634  00964C  26D9               	addwf	fsr2l,f,c
 34635  00964E  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34636  009650  22DA               	addwfc	fsr2h,f,c
 34637  009652  0E00               	movlw	0
 34638  009654  6EDE               	movwf	postinc2,c
 34639  009656  0E00               	movlw	0
 34640  009658  6EDE               	movwf	postinc2,c
 34641  00965A  0E00               	movlw	0
 34642  00965C  6EDE               	movwf	postinc2,c
 34643  00965E  0E00               	movlw	0
 34644  009660  6EDD               	movwf	postdec2,c
 34645                           
 34646                           ;app_linear_regression.c: 43: p->sum_x2 = 0.0f;
 34647  009662  EE20 F059          	lfsr	2,89
 34648  009666  5001               	movf	Linear_regression_init@p^0,w,c
 34649  009668  26D9               	addwf	fsr2l,f,c
 34650  00966A  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34651  00966C  22DA               	addwfc	fsr2h,f,c
 34652  00966E  0E00               	movlw	0
 34653  009670  6EDE               	movwf	postinc2,c
 34654  009672  0E00               	movlw	0
 34655  009674  6EDE               	movwf	postinc2,c
 34656  009676  0E00               	movlw	0
 34657  009678  6EDE               	movwf	postinc2,c
 34658  00967A  0E00               	movlw	0
 34659  00967C  6EDD               	movwf	postdec2,c
 34660                           
 34661                           ;app_linear_regression.c: 44: p->sum_xy = 0.0f;
 34662  00967E  EE20 F061          	lfsr	2,97
 34663  009682  5001               	movf	Linear_regression_init@p^0,w,c
 34664  009684  26D9               	addwf	fsr2l,f,c
 34665  009686  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34666  009688  22DA               	addwfc	fsr2h,f,c
 34667  00968A  0E00               	movlw	0
 34668  00968C  6EDE               	movwf	postinc2,c
 34669  00968E  0E00               	movlw	0
 34670  009690  6EDE               	movwf	postinc2,c
 34671  009692  0E00               	movlw	0
 34672  009694  6EDE               	movwf	postinc2,c
 34673  009696  0E00               	movlw	0
 34674  009698  6EDD               	movwf	postdec2,c
 34675                           
 34676                           ;app_linear_regression.c: 45: p->slope = 0.0f;
 34677  00969A  EE20 F065          	lfsr	2,101
 34678  00969E  5001               	movf	Linear_regression_init@p^0,w,c
 34679  0096A0  26D9               	addwf	fsr2l,f,c
 34680  0096A2  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34681  0096A4  22DA               	addwfc	fsr2h,f,c
 34682  0096A6  0E00               	movlw	0
 34683  0096A8  6EDE               	movwf	postinc2,c
 34684  0096AA  0E00               	movlw	0
 34685  0096AC  6EDE               	movwf	postinc2,c
 34686  0096AE  0E00               	movlw	0
 34687  0096B0  6EDE               	movwf	postinc2,c
 34688  0096B2  0E00               	movlw	0
 34689  0096B4  6EDD               	movwf	postdec2,c
 34690                           
 34691                           ;app_linear_regression.c: 46: p->offset = 0.0f;
 34692  0096B6  EE20 F069          	lfsr	2,105
 34693  0096BA  5001               	movf	Linear_regression_init@p^0,w,c
 34694  0096BC  26D9               	addwf	fsr2l,f,c
 34695  0096BE  5002               	movf	(Linear_regression_init@p+1)^0,w,c
 34696  0096C0  22DA               	addwfc	fsr2h,f,c
 34697  0096C2  0E00               	movlw	0
 34698  0096C4  6EDE               	movwf	postinc2,c
 34699  0096C6  0E00               	movlw	0
 34700  0096C8  6EDE               	movwf	postinc2,c
 34701  0096CA  0E00               	movlw	0
 34702  0096CC  6EDE               	movwf	postinc2,c
 34703  0096CE  0E00               	movlw	0
 34704  0096D0  6EDD               	movwf	postdec2,c
 34705  0096D2  0012               	return		;funcret
 34706  0096D4                     __end_of_Linear_regression_init:
 34707                           	callstack 0
 34708                           
 34709 ;; *************** function _LED_Enable *****************
 34710 ;; Defined at:
 34711 ;;		line 173 in file "bsp/leds.c"
 34712 ;; Parameters:    Size  Location     Type
 34713 ;;  led             1    wreg     enum E5213
 34714 ;; Auto vars:     Size  Location     Type
 34715 ;;  led             1    0[COMRAM] enum E5213
 34716 ;; Return value:  Size  Location     Type
 34717 ;;                  1    wreg      void 
 34718 ;; Registers used:
 34719 ;;		wreg, status,2, status,0
 34720 ;; Tracked objects:
 34721 ;;		On entry : 0/0
 34722 ;;		On exit  : 0/0
 34723 ;;		Unchanged: 0/0
 34724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34729 ;;Total ram usage:        1 bytes
 34730 ;; Hardware stack levels used: 1
 34731 ;; Hardware stack levels required when called: 1
 34732 ;; This function calls:
 34733 ;;		Nothing
 34734 ;; This function is called by:
 34735 ;;		_Board_initialize
 34736 ;; This function uses a non-reentrant model
 34737 ;;
 34738                           
 34739                           	psect	text179
 34740  00D218                     __ptext179:
 34741                           	callstack 0
 34742  00D218                     _LED_Enable:
 34743                           	callstack 28
 34744                           
 34745                           ;incstack = 0
 34746                           ;LED_Enable@led stored from wreg
 34747  00D218  6E01               	movwf	LED_Enable@led^0,c
 34748  00D21A                     
 34749                           ;leds.c: 175: switch(led)
 34750  00D21A  EF15  F069         	goto	l12471
 34751  00D21E                     l930:
 34752                           
 34753                           ;leds.c: 178: TRISBbits.TRISB0 = 0;
 34754  00D21E  9093               	bcf	147,0,c	;volatile
 34755                           
 34756                           ;leds.c: 179: break;
 34757  00D220  EF24  F069         	goto	l934
 34758  00D224                     l932:
 34759                           
 34760                           ;leds.c: 182: TRISBbits.TRISB1 = 0;
 34761  00D224  9293               	bcf	147,1,c	;volatile
 34762                           
 34763                           ;leds.c: 183: break;
 34764  00D226  EF24  F069         	goto	l934
 34765  00D22A                     l12471:
 34766  00D22A  5001               	movf	LED_Enable@led^0,w,c
 34767                           
 34768                           ; Switch size 1, requested type "simple"
 34769                           ; Number of cases is 3, Range of values is 0 to 2
 34770                           ; switch strategies available:
 34771                           ; Name         Instructions Cycles
 34772                           ; simple_byte           10     6 (average)
 34773                           ;	Chosen strategy is simple_byte
 34774  00D22C  0A00               	xorlw	0	; case 0
 34775  00D22E  B4D8               	btfsc	status,2,c
 34776  00D230  EF24  F069         	goto	l934
 34777  00D234  0A01               	xorlw	1	; case 1
 34778  00D236  B4D8               	btfsc	status,2,c
 34779  00D238  EF0F  F069         	goto	l930
 34780  00D23C  0A03               	xorlw	3	; case 2
 34781  00D23E  B4D8               	btfsc	status,2,c
 34782  00D240  EF12  F069         	goto	l932
 34783  00D244  EF24  F069         	goto	l934
 34784  00D248                     l934:
 34785  00D248  0012               	return		;funcret
 34786  00D24A                     __end_of_LED_Enable:
 34787                           	callstack 0
 34788                           
 34789 ;; *************** function _SYS_InterruptHigh *****************
 34790 ;; Defined at:
 34791 ;;		line 133 in file "system.c"
 34792 ;; Parameters:    Size  Location     Type
 34793 ;;		None
 34794 ;; Auto vars:     Size  Location     Type
 34795 ;;		None
 34796 ;; Return value:  Size  Location     Type
 34797 ;;                  1    wreg      void 
 34798 ;; Registers used:
 34799 ;;		wreg, status,2, status,0
 34800 ;; Tracked objects:
 34801 ;;		On entry : 0/0
 34802 ;;		On exit  : 0/0
 34803 ;;		Unchanged: 0/0
 34804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34809 ;;Total ram usage:        0 bytes
 34810 ;; Hardware stack levels used: 1
 34811 ;; This function calls:
 34812 ;;		Nothing
 34813 ;; This function is called by:
 34814 ;;		Interrupt level 2
 34815 ;; This function uses a non-reentrant model
 34816 ;;
 34817                           
 34818                           	psect	intcode
 34819  002008                     __pintcode:
 34820                           	callstack 0
 34821  002008                     _SYS_InterruptHigh:
 34822                           	callstack 20
 34823                           
 34824                           ;incstack = 0
 34825  002008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 34826  00200A                     
 34827                           ;system.c: 139: if(INTCONbits.TMR0IF)
 34828  00200A  A4F2               	btfss	242,2,c	;volatile
 34829  00200C  EF0A  F010         	goto	i2u1485_41
 34830  002010  EF0C  F010         	goto	i2u1485_40
 34831  002014                     i2u1485_41:
 34832  002014  EF41  F010         	goto	i2l2098
 34833  002018                     i2u1485_40:
 34834  002018                     
 34835                           ;system.c: 140: {;system.c: 141: INTCONbits.TMR0IF = 0;
 34836  002018  94F2               	bcf	242,2,c	;volatile
 34837  00201A                     
 34838                           ;system.c: 142: g_tick_count++;
 34839  00201A  0100               	movlb	0	; () banked
 34840  00201C  2BCF               	incf	_g_tick_count& (0+255),f,b	;volatile
 34841  00201E                     
 34842                           ; BSR set to: 0
 34843                           ;system.c: 144: if(g_tick_count > 7)
 34844  00201E  0E07               	movlw	7
 34845  002020  65CF               	cpfsgt	_g_tick_count& (0+255),b	;volatile
 34846  002022  EF15  F010         	goto	i2u1486_41
 34847  002026  EF17  F010         	goto	i2u1486_40
 34848  00202A                     i2u1486_41:
 34849  00202A  EF41  F010         	goto	i2l2098
 34850  00202E                     i2u1486_40:
 34851  00202E                     
 34852                           ; BSR set to: 0
 34853                           ;system.c: 145: {;system.c: 146: g_large_counter++;
 34854  00202E  0E01               	movlw	1
 34855  002030  0101               	movlb	1	; () banked
 34856  002032  2758               	addwf	_g_large_counter& (0+255),f,b	;volatile
 34857  002034  0E00               	movlw	0
 34858  002036  2359               	addwfc	(_g_large_counter+1)& (0+255),f,b	;volatile
 34859  002038  235A               	addwfc	(_g_large_counter+2)& (0+255),f,b	;volatile
 34860  00203A  235B               	addwfc	(_g_large_counter+3)& (0+255),f,b	;volatile
 34861                           
 34862                           ;system.c: 147: g_led_counter++;
 34863  00203C  0E01               	movlw	1
 34864  00203E  0100               	movlb	0	; () banked
 34865  002040  27C5               	addwf	_g_led_counter& (0+255),f,b	;volatile
 34866  002042  0E00               	movlw	0
 34867  002044  23C6               	addwfc	(_g_led_counter+1)& (0+255),f,b	;volatile
 34868  002046  23C7               	addwfc	(_g_led_counter+2)& (0+255),f,b	;volatile
 34869  002048  23C8               	addwfc	(_g_led_counter+3)& (0+255),f,b	;volatile
 34870                           
 34871                           ;system.c: 148: g_usedtime_count++;
 34872  00204A  0E01               	movlw	1
 34873  00204C  0101               	movlb	1	; () banked
 34874  00204E  2750               	addwf	_g_usedtime_count& (0+255),f,b	;volatile
 34875  002050  0E00               	movlw	0
 34876  002052  2351               	addwfc	(_g_usedtime_count+1)& (0+255),f,b	;volatile
 34877  002054  2352               	addwfc	(_g_usedtime_count+2)& (0+255),f,b	;volatile
 34878  002056  2353               	addwfc	(_g_usedtime_count+3)& (0+255),f,b	;volatile
 34879                           
 34880                           ;system.c: 149: g_calib_count++;
 34881  002058  0E01               	movlw	1
 34882  00205A  275C               	addwf	_g_calib_count& (0+255),f,b	;volatile
 34883  00205C  0E00               	movlw	0
 34884  00205E  235D               	addwfc	(_g_calib_count+1)& (0+255),f,b	;volatile
 34885  002060  235E               	addwfc	(_g_calib_count+2)& (0+255),f,b	;volatile
 34886  002062  235F               	addwfc	(_g_calib_count+3)& (0+255),f,b	;volatile
 34887                           
 34888                           ;system.c: 150: g_autoCal_cnt++;
 34889  002064  0E01               	movlw	1
 34890  002066  2764               	addwf	_g_autoCal_cnt& (0+255),f,b	;volatile
 34891  002068  0E00               	movlw	0
 34892  00206A  2365               	addwfc	(_g_autoCal_cnt+1)& (0+255),f,b	;volatile
 34893  00206C  2366               	addwfc	(_g_autoCal_cnt+2)& (0+255),f,b	;volatile
 34894  00206E  2367               	addwfc	(_g_autoCal_cnt+3)& (0+255),f,b	;volatile
 34895                           
 34896                           ;system.c: 151: g_slpSet_cnt++;
 34897  002070  0E01               	movlw	1
 34898  002072  2760               	addwf	_g_slpSet_cnt& (0+255),f,b	;volatile
 34899  002074  0E00               	movlw	0
 34900  002076  2361               	addwfc	(_g_slpSet_cnt+1)& (0+255),f,b	;volatile
 34901  002078  2362               	addwfc	(_g_slpSet_cnt+2)& (0+255),f,b	;volatile
 34902  00207A  2363               	addwfc	(_g_slpSet_cnt+3)& (0+255),f,b	;volatile
 34903  00207C                     
 34904                           ; BSR set to: 1
 34905                           ;system.c: 152: g_tick_count = 0;
 34906  00207C  0E00               	movlw	0
 34907  00207E  0100               	movlb	0	; () banked
 34908  002080  6FCF               	movwf	_g_tick_count& (0+255),b	;volatile
 34909  002082                     i2l2098:
 34910  002082  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 34911  002084  0011               	retfie		f
 34912  002086                     __end_of_SYS_InterruptHigh:
 34913                           	callstack 0
 34914                           
 34915                           	psect	rparam
 34916  0000                     
 34917                           	psect	temp
 34918  00005F                     btemp:
 34919                           	callstack 0
 34920  00005F                     	ds	1
 34921  0000                     int$flags	set	btemp
 34922  0000                     wtemp8	set	btemp+1
 34923  0000                     ttemp5	set	btemp+1
 34924  0000                     ttemp6	set	btemp+4
 34925  0000                     ttemp7	set	btemp+8
 34926                           
 34927                           	psect	config
 34928                           
 34929                           ;Config register CONFIG1L @ 0xFFF8
 34930                           ;	Watchdog Timer
 34931                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
 34932                           ;	PLL Prescaler Selection bits
 34933                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 34934                           ;	Stack Overflow/Underflow Reset
 34935                           ;	STVREN = ON, Enabled
 34936                           ;	Extended Instruction Set
 34937                           ;	XINST = OFF, Disabled
 34938                           ;	Background Debug
 34939                           ;	DEBUG = 0x1, unprogrammed default
 34940  FFF8                     	org	65528
 34941  FFF8  AC                 	db	172
 34942                           
 34943                           ;Config register CONFIG1H @ 0xFFF9
 34944                           ;	CPU System Clock Postscaler
 34945                           ;	CPUDIV = OSC1, No CPU system clock divide
 34946                           ;	Code Protect
 34947                           ;	CP0 = OFF, Program memory is not code-protected
 34948  FFF9                     	org	65529
 34949  FFF9  F7                 	db	247
 34950                           
 34951                           ;Config register CONFIG2L @ 0xFFFA
 34952                           ;	Oscillator
 34953                           ;	OSC = INTOSCPLL, INTOSCPLL
 34954                           ;	T1OSCEN Enforcement
 34955                           ;	T1DIG = OFF, Secondary Oscillator clock source may not be selected
 34956                           ;	Low-Power Timer1 Oscillator
 34957                           ;	LPT1OSC = OFF, High-power operation
 34958                           ;	Fail-Safe Clock Monitor
 34959                           ;	FCMEN = ON, Enabled
 34960                           ;	Internal External Oscillator Switch Over Mode
 34961                           ;	IESO = OFF, Disabled
 34962  FFFA                     	org	65530
 34963  FFFA  52                 	db	82
 34964                           
 34965                           ;Config register CONFIG2H @ 0xFFFB
 34966                           ;	Watchdog Postscaler
 34967                           ;	WDTPS = 1024, 1:1024
 34968  FFFB                     	org	65531
 34969  FFFB  FA                 	db	250
 34970                           
 34971                           ;Config register CONFIG3L @ 0xFFFC
 34972                           ;	DSWDT Clock Select
 34973                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
 34974                           ;	RTCC Clock Select
 34975                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
 34976                           ;	Deep Sleep BOR
 34977                           ;	DSBOREN = OFF, Disabled
 34978                           ;	Deep Sleep Watchdog Timer
 34979                           ;	DSWDTEN = OFF, Disabled
 34980                           ;	Deep Sleep Watchdog Postscaler
 34981                           ;	DSWDTPS = 2048, 1:2,048 (2.1 seconds)
 34982  FFFC                     	org	65532
 34983  FFFC  53                 	db	83
 34984                           
 34985                           ;Config register CONFIG3H @ 0xFFFD
 34986                           ;	IOLOCK One-Way Set Enable bit
 34987                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
 34988                           ;	MSSP address masking
 34989                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
 34990  FFFD                     	org	65533
 34991  FFFD  F9                 	db	249
 34992                           
 34993                           ;Config register CONFIG4L @ 0xFFFE
 34994                           ;	Write/Erase Protect Page Start/End Location
 34995                           ;	WPFP = PAGE_1, Write Protect Program Flash Page 1
 34996                           ;	Write/Erase Protect Region Select (valid when WPDIS = 0)
 34997                           ;	WPEND = PAGE_0, Page 0 through WPFP<5:0> erase/write protected
 34998                           ;	Write/Erase Protect Configuration Region
 34999                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
 35000  FFFE                     	org	65534
 35001  FFFE  81                 	db	129
 35002                           
 35003                           ;Config register CONFIG4H @ 0xFFFF
 35004                           ;	Write Protect Disable bit
 35005                           ;	WPDIS = OFF, WPFP<5:0>/WPEND region ignored
 35006  FFFF                     	org	65535
 35007  FFFF  F1                 	db	241
 35008                           tosu	equ	0xFFF
 35009                           tosh	equ	0xFFE
 35010                           tosl	equ	0xFFD
 35011                           stkptr	equ	0xFFC
 35012                           pclatu	equ	0xFFB
 35013                           pclath	equ	0xFFA
 35014                           pcl	equ	0xFF9
 35015                           tblptru	equ	0xFF8
 35016                           tblptrh	equ	0xFF7
 35017                           tblptrl	equ	0xFF6
 35018                           tablat	equ	0xFF5
 35019                           prodh	equ	0xFF4
 35020                           prodl	equ	0xFF3
 35021                           indf0	equ	0xFEF
 35022                           postinc0	equ	0xFEE
 35023                           postdec0	equ	0xFED
 35024                           preinc0	equ	0xFEC
 35025                           plusw0	equ	0xFEB
 35026                           fsr0h	equ	0xFEA
 35027                           fsr0l	equ	0xFE9
 35028                           wreg	equ	0xFE8
 35029                           indf1	equ	0xFE7
 35030                           postinc1	equ	0xFE6
 35031                           postdec1	equ	0xFE5
 35032                           preinc1	equ	0xFE4
 35033                           plusw1	equ	0xFE3
 35034                           fsr1h	equ	0xFE2
 35035                           fsr1l	equ	0xFE1
 35036                           bsr	equ	0xFE0
 35037                           indf2	equ	0xFDF
 35038                           postinc2	equ	0xFDE
 35039                           postdec2	equ	0xFDD
 35040                           preinc2	equ	0xFDC
 35041                           plusw2	equ	0xFDB
 35042                           fsr2h	equ	0xFDA
 35043                           fsr2l	equ	0xFD9
 35044                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    732
    Data        112
    BSS         1198
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     84     158
    BANK1           256      0     250
    BANK2           256      0     255
    BANK3           256      0     245
    BANK4           192      0     183
    BANK5           256      0     243
    BANK6           256      0      60
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), BDT(BIGRAMl[48]), 
		 -> NULL(NULL[0]), 

    mktime@timeptr	PTR struct tm size(2) Largest target is 18
		 -> build_time@tm(BANK0[18]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 73
		 -> g_flash_temp(BANK3[72]), g_nvm.flash(BANK1[72]), g_nvm(BANK1[73]), SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 73
		 -> g_flash_temp(BANK3[72]), g_nvm.flash(BANK1[72]), g_nvm(BANK1[73]), SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> g_flash_temp(BANK3[72]), g_nvm.flash(BANK1[72]), g_nvm(BANK1[73]), CtrlTrfData(BIGRAMh[8]), 
		 -> RAM(DATA[3775]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> g_flash_temp(BANK3[72]), g_nvm.flash(BANK1[72]), g_nvm(BANK1[73]), CtrlTrfData(BIGRAMh[8]), 
		 -> RAM(DATA[3775]), SetupPkt(BIGRAMh[8]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> trunc@expon(COMRAM[2]), log@exponent(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sensor_ADC_read@raw_adc	PTR int  size(2) Largest target is 2
		 -> sensMeasure_gas_read@raw(BANK0[2]), 

    sensor_temp_fahrenheit@temp	PTR float  size(2) Largest target is 4
		 -> build_response@temp_3684(BANK0[4]), build_response@temp_3680(BANK0[4]), build_response@temp(BANK0[4]), 

    sensor_read_temp_humi@humi	PTR float  size(2) Largest target is 4
		 -> sensMeasure_temp_read@humi(BANK0[4]), 

    sensor_read_temp_humi@temp	PTR float  size(2) Largest target is 4
		 -> sensMeasure_temp_read@temp(BANK0[4]), 

    nvm_read_flash_all@flash	PTR struct . size(2) Largest target is 73
		 -> g_nvm(BANK1[73]), 

    nvm_write_flash_all@flash	PTR struct . size(2) Largest target is 73
		 -> g_nvm(BANK1[73]), 

    sp__get_product_desc	PTR unsigned int  size(2) Largest target is 52
		 -> sd002.string(BANK4[50]), sd002(BANK4[52]), 

    nvm_init@pdesc	PTR unsigned int  size(2) Largest target is 52
		 -> sd002.string(BANK4[50]), sd002(BANK4[52]), 

    nvm_serialno_check@sno	PTR const unsigned char  size(2) Largest target is 72
		 -> g_nvm.flash.serialNum(BANK1[8]), g_nvm.flash(BANK1[72]), 

    Kalman_setProcessNoise@pObj	PTR struct . size(2) Largest target is 24
		 -> kalmanFilter(BANK1[24]), 

    Kalman_setEstimateError@pObj	PTR struct . size(2) Largest target is 24
		 -> kalmanFilter(BANK1[24]), 

    Kalman_setMeasurementError@pObj	PTR struct . size(2) Largest target is 24
		 -> kalmanFilter(BANK1[24]), 

    Kalman_updateEstimate@pObj	PTR struct . size(2) Largest target is 24
		 -> kalmanFilter(BANK1[24]), 

    Linear_regression@p	PTR struct . size(2) Largest target is 109
		 -> g_linear_reg(BANK3[109]), 

    Linear_regression_init@p	PTR struct . size(2) Largest target is 109
		 -> g_linear_reg(BANK3[109]), 

    build_response@status	PTR const struct . size(2) Largest target is 243
		 -> g_atcommand.status(BANK5[177]), g_atcommand(BANK5[243]), 

    update_command@status	PTR struct . size(2) Largest target is 243
		 -> g_atcommand(BANK5[243]), 

    split_param@params	PTR unsigned char  size(2) Largest target is 243
		 -> g_atcommand(BANK5[243]), 

    split_param@src	PTR unsigned char  size(2) Largest target is 243
		 -> g_atcommand(BANK5[243]), 

    parse_command@status	PTR struct . size(2) Largest target is 243
		 -> g_atcommand(BANK5[243]), 

    parse_command@buff	PTR const unsigned char  size(2) Largest target is 243
		 -> g_atcommand.read_cmd(BANK5[64]), g_atcommand(BANK5[243]), 

    check_atcommand@chno	PTR unsigned char  size(2) Largest target is 1
		 -> parse_command@chno(COMRAM[1]), 

    check_atcommand@cmd	PTR const unsigned char  size(2) Largest target is 11
		 -> parse_command@cmd(COMRAM[11]), 

    atcommand_compare@channelno	PTR unsigned char  size(2) Largest target is 1
		 -> parse_command@chno(COMRAM[1]), 

    atcommand_compare@src2	PTR const unsigned char  size(2) Largest target is 11
		 -> parse_command@cmd(COMRAM[11]), 

    atcommand_compare@src1	PTR const unsigned char  size(2) Largest target is 403
		 -> atcommand_type(CODE[403]), 

    param_copy@src2	PTR const unsigned char  size(2) Largest target is 32
		 -> parse_command@param(COMRAM[32]), 

    param_copy@src1	PTR unsigned char  size(2) Largest target is 243
		 -> g_atcommand(BANK5[243]), 

    write_command@buff	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_53(CODE[9]), writeBuffer(BANK2[64]), 

    sht3x_measure_nonblock_read@humi	PTR float  size(2) Largest target is 4
		 -> sensMeasure_temp_read@humi(BANK0[4]), 

    sht3x_measure_nonblock_read@temp	PTR float  size(2) Largest target is 4
		 -> sensMeasure_temp_read@temp(BANK0[4]), 

    sht3x_measure_read@humi	PTR float  size(2) Largest target is 4
		 -> sensMeasure_temp_read@humi(BANK0[4]), 

    sht3x_measure_read@temp	PTR float  size(2) Largest target is 4
		 -> sensMeasure_temp_read@temp(BANK0[4]), 

    sht3x_common_read@humi	PTR long  size(2) Largest target is 4
		 -> sht3x_measure_read@raw_humi(BANK0[4]), 

    sht3x_common_read@temp	PTR long  size(2) Largest target is 4
		 -> sht3x_measure_read@raw_temp(BANK0[4]), 

    check_crc8@data	PTR unsigned char  size(2) Largest target is 6
		 -> sht3x_read_status_reg@buff(COMRAM[3]), sht3x_common_read@buff(COMRAM[6]), 

    crc8@data	PTR unsigned char  size(2) Largest target is 6
		 -> sht3x_write_alert_limits@buff(COMRAM[3]), sht3x_read_status_reg@buff(COMRAM[3]), sht3x_common_read@buff(COMRAM[6]), 

    lmp91000_get_status@preg	PTR unsigned char  size(2) Largest target is 1
		 -> lmp91000_isReady@rBuff(COMRAM[1]), 

    i2c_readBytes@rdptr	PTR unsigned char  size(2) Largest target is 6
		 -> sht3x_read_status_reg@buff(COMRAM[3]), sht3x_common_read@buff(COMRAM[6]), lmp91000_get_Modecn@rBuff(COMRAM[1]), lmp91000_get_Refcn@rBuff(COMRAM[1]), 
		 -> lmp91000_get_Tiacn@rBuff(COMRAM[1]), lmp91000_get_lock@rBuff(COMRAM[1]), lmp91000_get_status@rBuff(COMRAM[1]), ads1114_Comparator_SetUp@rbuff(COMRAM[2]), 
		 -> ads1114_read@rbuff(COMRAM[2]), ads1114_read_ready@rbuff(COMRAM[2]), 

    i2c_writeBytes_to@wrptr	PTR const unsigned char  size(2) Largest target is 3
		 -> sht3x_write_alert_limits@buff(COMRAM[3]), ads1114_Comparator_SetUp@rbuff(COMRAM[2]), ads1114_SetUp@buff(COMRAM[2]), 

    i2c_writeBytes_to@wraddr	PTR const unsigned char  size(2) Largest target is 2
		 -> sht3x_write_alert_limits@cmd(COMRAM[2]), ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1114_SetUp@wraddr(COMRAM[1]), 

    i2c_writeBytes@wrptr	PTR const unsigned char  size(2) Largest target is 2
		 -> sht3x_write_alert_limits@cmd(COMRAM[2]), sht3x_heaterOff@cmd(COMRAM[2]), sht3x_heaterOn@cmd(COMRAM[2]), sht3x_read_status_reg@cmd(COMRAM[2]), 
		 -> sht3x_clear_status_reg@cmd(COMRAM[2]), sht3x_break_cmd@cmd(COMRAM[2]), sht3x_art_cmd@cmd(COMRAM[2]), sht3x_measure_block_read@cmd(COMRAM[2]), 
		 -> sht3x_measure_nonblock_read@cmd(COMRAM[2]), sht3x_measure_start@cmd(COMRAM[2]), sht3x_softreset@cmd(COMRAM[2]), lmp91000_set_Mode@buff(COMRAM[2]), 
		 -> lmp91000_set_Reference@buff(COMRAM[2]), lmp91000_set_GainRLoad@buff(COMRAM[2]), lmp91000_unlock@buff(COMRAM[2]), lmp91000_lock@buff(COMRAM[2]), 
		 -> lmp91000_get_Modecn@wBuff(COMRAM[1]), lmp91000_get_Refcn@wBuff(COMRAM[1]), lmp91000_get_Tiacn@wBuff(COMRAM[1]), lmp91000_get_lock@wBuff(COMRAM[1]), 
		 -> lmp91000_get_status@wBuff(COMRAM[1]), ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1114_read@wbuff(COMRAM[1]), ads1114_SetUp@wraddr(COMRAM[1]), 
		 -> ads1114_read_ready@wbuff(COMRAM[1]), 

    i2c_writeData@wrptr	PTR const unsigned char  size(2) Largest target is 3
		 -> sht3x_write_alert_limits@buff(COMRAM[3]), sht3x_write_alert_limits@cmd(COMRAM[2]), sht3x_heaterOff@cmd(COMRAM[2]), sht3x_heaterOn@cmd(COMRAM[2]), 
		 -> sht3x_read_status_reg@cmd(COMRAM[2]), sht3x_clear_status_reg@cmd(COMRAM[2]), sht3x_break_cmd@cmd(COMRAM[2]), sht3x_art_cmd@cmd(COMRAM[2]), 
		 -> sht3x_measure_block_read@cmd(COMRAM[2]), sht3x_measure_nonblock_read@cmd(COMRAM[2]), sht3x_measure_start@cmd(COMRAM[2]), sht3x_softreset@cmd(COMRAM[2]), 
		 -> lmp91000_set_Mode@buff(COMRAM[2]), lmp91000_set_Reference@buff(COMRAM[2]), lmp91000_set_GainRLoad@buff(COMRAM[2]), lmp91000_unlock@buff(COMRAM[2]), 
		 -> lmp91000_lock@buff(COMRAM[2]), lmp91000_get_Modecn@wBuff(COMRAM[1]), lmp91000_get_Refcn@wBuff(COMRAM[1]), lmp91000_get_Tiacn@wBuff(COMRAM[1]), 
		 -> lmp91000_get_lock@wBuff(COMRAM[1]), lmp91000_get_status@wBuff(COMRAM[1]), ads1114_Comparator_SetUp@rbuff(COMRAM[2]), ads1114_Comparator_SetUp@wbuff(COMRAM[1]), 
		 -> ads1114_read@wbuff(COMRAM[1]), ads1114_SetUp@buff(COMRAM[2]), ads1114_SetUp@wraddr(COMRAM[1]), ads1114_read_ready@wbuff(COMRAM[1]), 

    flash_writeBytes@flash_array	PTR unsigned char  size(2) Largest target is 2
		 -> nvm_write_flash_all@flash(COMRAM[2]), g_nvm(BANK1[73]), 

    flash_readBytes@flash_array	PTR unsigned char  size(2) Largest target is 2
		 -> nvm_read_flash_all@flash(COMRAM[2]), g_nvm(BANK1[73]), 

    ads1114_read@raw_adc	PTR int  size(2) Largest target is 2
		 -> sensMeasure_gas_read@raw(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> STR_53(CODE[9]), writeBuffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK4[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1846_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1846_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1846_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1846_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 73
		 -> g_flash_temp(BANK3[72]), g_nvm.flash(BANK1[72]), g_nvm(BANK1[73]), SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(BANK4[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S294$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S284$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S284$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S260$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S260$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S260$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S260$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    buffer_de_queue@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usb_queue(BANK4[67]), 

    buffer_en_queue@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usb_queue(BANK4[67]), 

    buffer_init@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usb_queue(BANK4[67]), 

    _isdigit@src	PTR const unsigned char  size(2) Largest target is 243
		 -> g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[243]), 

    _strclr@dest	PTR unsigned char  size(2) Largest target is 243
		 -> writeBuffer(BANK2[64]), g_atcommand.status(BANK5[177]), g_atcommand(BANK5[243]), 

    _strlen@source	PTR const unsigned char  size(2) Largest target is 403
		 -> g_atcommand.apply_params(BANK5[32]), STR_53(CODE[9]), writeBuffer(BANK2[64]), parse_command@cmd(COMRAM[11]), 
		 -> g_atcommand(BANK5[243]), atcommand_type(CODE[403]), 

    _strlen@sc	PTR const unsigned char  size(2) Largest target is 403
		 -> g_atcommand.apply_params(BANK5[32]), STR_53(CODE[9]), writeBuffer(BANK2[64]), parse_command@cmd(COMRAM[11]), 
		 -> g_atcommand(BANK5[243]), atcommand_type(CODE[403]), 

    _strcpy@dest	PTR unsigned char  size(2) Largest target is 243
		 -> writeBuffer(BANK2[64]), g_atcommand(BANK5[243]), 

    _strcpy@source	PTR const unsigned char  size(2) Largest target is 243
		 -> STR_52(CODE[30]), STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[20]), 
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[5]), STR_45(CODE[12]), 
		 -> parse_command@param(COMRAM[32]), parse_command@cmd(COMRAM[11]), g_atcommand.status(BANK5[177]), g_atcommand(BANK5[243]), 

    _itoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _itoa@p	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _ftoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _atoi@str	PTR const unsigned char  size(2) Largest target is 243
		 -> g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[243]), 

    _atoi@p	PTR unsigned char  size(2) Largest target is 243
		 -> g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[243]), 

    _atof@str	PTR const unsigned char  size(2) Largest target is 243
		 -> g_atcommand.manual_params(BANK5[128]), g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[243]), 

    _atof@p	PTR unsigned char  size(2) Largest target is 243
		 -> g_atcommand.manual_params(BANK5[128]), g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[243]), 


Critical Paths under _main in COMRAM

    _usedtime_task->_nvm_write_flash_all
    _sens_autoCalib_slp_set_task->_sort_uV_slope
    _sort_uV_slope->___flge
    _sens_ZeroCalibration->_nvm_write_flash_all
    _sensor_sht3x_init->_sht3x_clear_status_reg
    _sensor_sht3x_init->_sht3x_heaterOff
    _sensor_sht3x_init->_sht3x_measure_start
    _sht3x_measure_start->_i2c_writeBytes
    _sht3x_heaterOff->_i2c_writeBytes
    _sht3x_clear_status_reg->_i2c_writeBytes
    _sensor_lmp_init->_lmp91000_isReady
    _lmp91000_unlock->_i2c_writeBytes
    _lmp91000_set_Reference->_i2c_writeBytes
    _lmp91000_set_Mode->_i2c_writeBytes
    _lmp91000_set_GainRLoad->_i2c_writeBytes
    _lmp91000_lock->_i2c_writeBytes
    _lmp91000_isReady->_lmp91000_get_status
    _lmp91000_get_status->_i2c_readBytes
    _sensor_adc_init->_ads1114_SetUp
    _ads1114_SetUp->_i2c_writeBytes_to
    _i2c_writeBytes_to->_i2c_writeBytes
    _sensor_read_temp_humi->_sht3x_measure_nonblock_read
    _sht3x_measure_nonblock_read->_sht3x_measure_read
    _sht3x_common_read->_i2c_readBytes
    _check_crc8->_crc8
    _sensMeasure_gas_read->___flmul
    _sensor_ADC_read->_ads1114_read
    _ads1114_read_ready->_i2c_readBytes
    _ads1114_read->_i2c_readBytes
    _i2c_writeBytes->_i2c_writeData
    _i2c_writeData->_I2C_Write
    _i2c_readBytes->_I2C_Read
    _gasSensor_lowfilter->___flge
    _gasSensor_calib->___flmul
    _Kalman_updateEstimate->___flmul
    _fabs->___flsub
    _ADCto_uVoltage->___flmul
    _Linear_regression->___flmul
    _fmod->___flmul
    _trunc->___xxtofl
    _frexp->___fleq
    _led_task->_led_warmup
    _led_zerocal_end->_LED_On
    _led_warmup->_LED_On
    _led_fail->_LED_On
    _atcommand_task->_update_command
    _split_param->__strlen
    __atoi->___lmul
    __atof->___flmul
    _USBDisableWithLongDelay->_DelayRoutine
    _parse_command->_check_atcommand
    _param_copy->_check_param
    _check_atcommand->_atcommand_compare
    _atcommand_compare->__strlen
    _build_response->__ftoa
    _build_response->_sensor_temp_fahrenheit
    _write_command->_putUSBUSART
    _putUSBUSART->__strlen
    _sensor_temp_fahrenheit->___flmul
    __itoa->___aldiv
    _sprintf->___flmul
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___flmul->_fabs
    ___xxtofl->___fltol
    ___fltol->___awdiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___fldiv->___flmul
    _app_usb_task->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _Board_initialize->_nvm_init
    _sensMeasure_init->_Set_KamanFilter_Sensitivity
    _Set_KamanFilter_Sensitivity->_Kalman_setProcessNoise
    _nvm_write_flash_all->_flash_writeBytes
    _nvm_read_flash_all->_flash_readBytes
    _nvm_clear_flash->_build_time
    _build_time->_mktime
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    ___lwdiv->___wmul
    _isleap->___lwmod
    _led_init->_LED_On
    _clear_command->__strclr

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_atcommand_task
    _auto_calib_apply->___fldiv
    _sensMeasure_task->_sensMeasure_gas_read
    _sensMeasure_temp_read->_sensor_read_temp_humi
    _sensor_read_temp_humi->_sht3x_measure_nonblock_read
    _sht3x_measure_nonblock_read->_sht3x_measure_read
    _sht3x_measure_read->___fldiv
    _sensMeasure_gas_read->_gasSensor_calib
    _gasSensor_calib->___fldiv
    _Kalman_updateEstimate->___fldiv
    _Linear_regression->_fmod
    _fmod->___fldiv
    _atcommand_task->_build_response
    __atof->___fldiv
    _build_response->__ftoa
    __ftoa->_sprintf
    _sprintf->_fround
    _nvm_clear_flash->_build_time

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  682144
                   _Board_initialize
                          _InitTimer
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                     _WDT_initialize
                       _app_usb_task
                     _atcommand_task
                _changeUsbState_task
                           _led_task
                   _sensMeasure_task
                _sens_ZeroCalib_task
        _sens_autoCalib_slp_set_task
                _sens_autoCalib_task
                      _usedtime_task
 ---------------------------------------------------------------------------------
 (1) _usedtime_task                                        0     0      0    2498
                             _memcpy
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (1) _sens_autoCalib_task                                  0     0      0   29574
                            ___fladd
                             ___flge
                   _auto_calib_apply
                   _auto_calib_clear
 ---------------------------------------------------------------------------------
 (2) _auto_calib_clear                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _auto_calib_apply                                     0     0      0   17946
                            ___fldiv
                            ___flsub
                           ___xxtofl
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (1) _sens_autoCalib_slp_set_task                          0     0      0    9219
                _nvm_write_flash_all
                      _sort_uV_slope
                      _write_command
 ---------------------------------------------------------------------------------
 (2) _sort_uV_slope                                       28    16     12    6597
                                             12 COMRAM    28    16     12
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _sens_ZeroCalib_task                                  0     0      0    1576
                            _LED_Off
                             _LED_On
               _sens_ZeroCalibration
 ---------------------------------------------------------------------------------
 (2) _sens_ZeroCalibration                                 0     0      0    1554
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (1) _sensMeasure_task                                     4     4      0  346925
                                             67 BANK0      4     4      0
                  _Linear_regression
                            ___fladd
               _sensMeasure_gas_read
              _sensMeasure_temp_read
                        _sensor_init
 ---------------------------------------------------------------------------------
 (2) _sensor_init                                          0     0      0  110092
                    _sensor_adc_init
                    _sensor_lmp_init
                  _sensor_sht3x_init
 ---------------------------------------------------------------------------------
 (3) _sensor_sht3x_init                                    2     2      0   30312
                                             13 COMRAM     2     2      0
             _sht3x_clear_status_reg
                    _sht3x_heaterOff
                _sht3x_measure_start
 ---------------------------------------------------------------------------------
 (4) _sht3x_measure_start                                  2     2      0   10104
                                             11 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _sht3x_heaterOff                                      2     2      0   10104
                                             11 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _sht3x_clear_status_reg                               2     2      0   10104
                                             11 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (3) _sensor_lmp_init                                      0     0      0   65066
                   _lmp91000_isReady
                      _lmp91000_lock
             _lmp91000_set_GainRLoad
                  _lmp91000_set_Mode
             _lmp91000_set_Reference
                    _lmp91000_unlock
 ---------------------------------------------------------------------------------
 (4) _lmp91000_unlock                                      2     2      0   10104
                                             11 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_set_Reference                               7     4      3   10713
                                             11 COMRAM     7     4      3
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_set_Mode                                    5     4      1   10369
                                             11 COMRAM     5     4      1
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_set_GainRLoad                               5     4      1   10375
                                             11 COMRAM     5     4      1
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_lock                                        2     2      0   10104
                                             11 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _lmp91000_isReady                                     1     1      0   13401
                                             18 COMRAM     1     1      0
                _lmp91000_get_status
 ---------------------------------------------------------------------------------
 (5) _lmp91000_get_status                                  4     2      2   13305
                                             14 COMRAM     4     2      2
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (3) _sensor_adc_init                                      0     0      0   14714
                      _ads1114_SetUp
 ---------------------------------------------------------------------------------
 (4) _ads1114_SetUp                                        6     4      2   14714
                                             18 COMRAM     6     4      2
                  _i2c_writeBytes_to
 ---------------------------------------------------------------------------------
 (5) _i2c_writeBytes_to                                    7     1      6   14184
                                             11 COMRAM     7     1      6
                           _I2C_Stop
                     _i2c_writeBytes
                      _i2c_writeData
 ---------------------------------------------------------------------------------
 (2) _sensMeasure_temp_read                                8     8      0   35562
                                             45 BANK0      8     8      0
                            ___fladd
              _sensor_read_temp_humi
 ---------------------------------------------------------------------------------
 (3) _sensor_read_temp_humi                                4     0      4   29620
                                             41 BANK0      4     0      4
        _sht3x_measure_nonblock_read
 ---------------------------------------------------------------------------------
 (4) _sht3x_measure_nonblock_read                          6     2      4   29294
                                             92 COMRAM     2     2      0
                                             37 BANK0      4     0      4
                     _i2c_writeBytes
                 _sht3x_measure_read
 ---------------------------------------------------------------------------------
 (5) _sht3x_measure_read                                  13     9      4   18864
                                             91 COMRAM     1     1      0
                                             25 BANK0     12     8      4
                            ___fldiv
                             ___lmul
                           ___xxtofl
                  _sht3x_common_read
 ---------------------------------------------------------------------------------
 (6) _sht3x_common_read                                   18    14      4    6689
                                             14 COMRAM    18    14      4
                         _check_crc8
                      _i2c_readBytes
 ---------------------------------------------------------------------------------
 (7) _check_crc8                                           5     1      4    2941
                                              6 COMRAM     5     1      4
                               _crc8
 ---------------------------------------------------------------------------------
 (8) _crc8                                                 6     3      3    1678
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _sensMeasure_gas_read                                10    10      0  126492
                                             57 BANK0     10    10      0
                     _ADCto_uVoltage
              _Kalman_updateEstimate
                            ___flmul
             _compensate_temperature
                    _gasSensor_calib
                _gasSensor_lowfilter
                    _sensor_ADC_read
 ---------------------------------------------------------------------------------
 (3) _sensor_ADC_read                                      2     0      2   26658
                                             21 COMRAM     2     0      2
                       _ads1114_read
                 _ads1114_read_ready
 ---------------------------------------------------------------------------------
 (4) _ads1114_read_ready                                   3     3      0   13142
                                             14 COMRAM     3     3      0
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _ads1114_read                                         7     5      2   13353
                                             14 COMRAM     7     5      2
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeBytes                                       5     1      4    9996
                                              6 COMRAM     5     1      4
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                      _i2c_writeData
 ---------------------------------------------------------------------------------
 (6) _i2c_writeData                                        5     1      4    1074
                                              1 COMRAM     5     1      4
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (6) _i2c_readBytes                                       12     9      3    2996
                                              2 COMRAM    12     9      3
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (7) _I2C_Write                                            1     1      0      42
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_Read                                             2     2      0      90
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _gasSensor_lowfilter                                  8     4      4    6305
                                             12 COMRAM     8     4      4
                             ___flge
 ---------------------------------------------------------------------------------
 (3) _gasSensor_calib                                     32    24      8   34587
                                             25 BANK0     32    24      8
                            ___fladd
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) _compensate_temperature                               8     4      4     112
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Kalman_updateEstimate                               14     8      6   33255
                                             25 BANK0     14     8      6
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4     378
                                             62 COMRAM     4     0      4
                            ___fladd (ARG)
                            ___flneg
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADCto_uVoltage                                      12     8      4   13931
                                              0 BANK0     12     8      4
                        _FSR_set_LSB
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _FSR_set_LSB                                          5     1      4     210
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _Linear_regression                                   21    15      6   69029
                                             37 BANK0     17    11      6
                            ___fladd
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                               _fmod
 ---------------------------------------------------------------------------------
 (3) _fmod                                                12     4      8   32270
                                             25 BANK0     12     4      8
                            ___fldiv
                            ___flmul
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (4) _trunc                                               10     6      4    5779
                                             38 COMRAM    10     6      4
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     2      6    2702
                                             12 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (1) _led_task                                             2     2      0     136
                                              3 COMRAM     2     2      0
                            _LED_Off
                             _LED_On
                           _led_fail
                         _led_warmup
                    _led_zerocal_end
 ---------------------------------------------------------------------------------
 (2) _led_zerocal_end                                      0     0      0      22
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _led_warmup                                           2     2      0      46
                                              1 COMRAM     2     2      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _led_fail                                             0     0      0      22
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (1) _changeUsbState_task                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atcommand_task                                       3     3      0  210419
                                             81 BANK0      3     3      0
                            __strclr
                    _buffer_de_queue
                     _build_response
                      _clear_command
                      _parse_command
                     _update_command
 ---------------------------------------------------------------------------------
 (2) _update_command                                      10     8      2   68630
                                             91 COMRAM     2     2      0
                                             60 BANK0      8     6      2
            _Kalman_setEstimateError
         _Kalman_setMeasurementError
             _ResetBootloaderCleanly
                 _ResetDeviceCleanly
        _Set_KamanFilter_Sensitivity
                              __atof
                              __atoi
                           __isdigit
                            __strlen
                      _nvm_clear_all
                _nvm_write_flash_all
                        _split_param
 ---------------------------------------------------------------------------------
 (3) _split_param                                         12     6      6    1518
                                              4 COMRAM    12     6      6
                            __strlen
 ---------------------------------------------------------------------------------
 (3) _nvm_clear_all                                        1     1      0   30050
                                             59 COMRAM     1     1      0
                          _nvm_clear
 ---------------------------------------------------------------------------------
 (3) __isdigit                                             5     1      4     246
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) __atoi                                               16    12      4    3742
                                             12 COMRAM    16    12      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) __atof                                               20    16      4   27769
                                             25 BANK0     20    16      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _ResetDeviceCleanly                                   0     0      0     112
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (3) _ResetBootloaderCleanly                               0     0      0     112
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (4) _USBDisableWithLongDelay                              0     0      0     112
                       _DelayRoutine
 ---------------------------------------------------------------------------------
 (5) _DelayRoutine                                         2     0      2     112
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _parse_command                                       55    51      4    6322
                                             26 COMRAM    55    51      4
                            __strcpy
                    _check_atcommand
                         _param_copy
 ---------------------------------------------------------------------------------
 (3) _param_copy                                           7     3      4     648
                                              1 COMRAM     7     3      4
                        _check_param
 ---------------------------------------------------------------------------------
 (4) _check_param                                          1     1      0     110
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_atcommand                                      7     3      4    1715
                                             19 COMRAM     7     3      4
                            __strlen
                  _atcommand_compare
 ---------------------------------------------------------------------------------
 (4) _atcommand_compare                                   15     8      7     713
                                              4 COMRAM    15     8      7
                            __strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _build_response                                      23    21      2  132838
                                             58 BANK0     23    21      2
                            ___fldiv
                             ___fleq
                              __ftoa
                              __itoa
                            __strcpy
                 _nvm_read_flash_all
             _sensor_temp_fahrenheit
                      _write_command
 ---------------------------------------------------------------------------------
 (2) _write_command                                        2     0      2    1068
                                              7 COMRAM     2     0      2
                            __strlen
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              4 COMRAM     3     0      3
                            __strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) __strlen                                              4     2      2     624
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _sensor_temp_fahrenheit                               2     0      2   17643
                                             91 COMRAM     2     0      2
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) __strcpy                                              8     4      4    2092
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __itoa                                               18    12      6    6274
                                             14 COMRAM    18    12      6
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     474
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     656
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) __ftoa                                                8     2      6   91204
                                             91 COMRAM     2     2      0
                                             52 BANK0      6     0      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             47    39      8   84248
                                             13 BANK0     39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                                9     5      4   16686
                                              0 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2058
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2324
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13     9      4   15254
                                              0 BANK0     13     9      4
                            ___fladd (ARG)
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8   11446
                                             66 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         17     9      8     481
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          14     6      8     481
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1853
                                             24 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     693
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     518
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     763
                                             14 COMRAM    10     6      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    7627
                                             54 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    5750
                                             38 COMRAM    16     8      8
                            ___flneg (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     223
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    5878
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8    2148
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    6912
                                              0 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _buffer_de_queue                                      6     4      2     267
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _app_usb_task                                         2     2      0    4183
                                             15 COMRAM     2     2      0
                       _CDCTxService
                    _buffer_en_queue
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     1      3    1956
                                             11 COMRAM     4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _buffer_en_queue                                      6     3      3     288
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1848
                                             11 COMRAM     2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _WDT_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0   40876
                                             28 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    5204
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    5204
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     1     1      0   23852
                                             27 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     944
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   22679
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   17383
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0    6458
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    5675
                                             20 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5204
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                  _SYSTEM_Initialize
                 _USBCheckCDCRequest
                       _app_usb_init
 ---------------------------------------------------------------------------------
 (3) _app_usb_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            0     0      0    2444
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1711
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Board_initialize                                     0     0      0   35304
                         _LED_Enable
             _Linear_regression_init
                     _atcommand_init
                        _buffer_init
                           _i2c_init
                           _led_init
                           _nvm_init
                   _sensMeasure_init
                _sens_ZeroCalib_init
                _sens_autoCalib_init
 ---------------------------------------------------------------------------------
 (2) _sens_autoCalib_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sens_ZeroCalib_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sensMeasure_init                                     0     0      0    1044
            _Kalman_setEstimateError
         _Kalman_setMeasurementError
        _Set_KamanFilter_Sensitivity
 ---------------------------------------------------------------------------------
 (3) _Set_KamanFilter_Sensitivity                          1     1      0     244
                                              6 COMRAM     1     1      0
             _Kalman_setProcessNoise
 ---------------------------------------------------------------------------------
 (4) _Kalman_setProcessNoise                               6     0      6     222
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _Kalman_setMeasurementError                           6     0      6     400
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _Kalman_setEstimateError                              6     0      6     400
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _nvm_init                                             9     9      0   32639
                                             59 COMRAM     9     9      0
                   _get_product_desc
                          _nvm_clear
                 _nvm_read_flash_all
                 _nvm_serialno_check
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (2) _nvm_write_flash_all                                  2     0      2    1554
                                             16 COMRAM     2     0      2
                        _flash_clear
                   _flash_writeBytes
 ---------------------------------------------------------------------------------
 (3) _flash_writeBytes                                    16     8      8     637
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) _flash_clear                                         13     5      8     360
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _nvm_serialno_check                                   4     2      2     223
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _nvm_read_flash_all                                   2     0      2     722
                                             16 COMRAM     2     0      2
                    _flash_readBytes
 ---------------------------------------------------------------------------------
 (4) _flash_readBytes                                     16     8      8     520
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) _nvm_clear                                            0     0      0   29912
                    _nvm_clear_flash
 ---------------------------------------------------------------------------------
 (5) _nvm_clear_flash                                      0     0      0   29912
                         _build_time
 ---------------------------------------------------------------------------------
 (6) _build_time                                          66    62      4   29912
                                             53 COMRAM     6     2      4
                                              0 BANK0     60    60      0
                             ___wmul
                             _mktime
 ---------------------------------------------------------------------------------
 (7) _mktime                                              14    10      4   20613
                                             39 COMRAM    14    10      4
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (8) _ymd_to_scalar                                       16    10      6   17398
                                             23 COMRAM    16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (9) _years_to_days                                       10     6      4    4697
                                             13 COMRAM    10     6      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2554
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (9) _months_to_days                                       2     0      2    9810
                                             13 COMRAM     2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4    7853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4    1794
                                              6 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) _isleap                                               5     3      2    1835
                                              5 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (10) ___lwmod                                             5     1      4    1534
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _get_product_desc                                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _led_init                                             0     0      0      22
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _LED_On                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _buffer_init                                          2     0      2     155
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _atcommand_init                                       0     0      0    1001
                      _clear_command
 ---------------------------------------------------------------------------------
 (2) _clear_command                                        0     0      0    1001
                            __strclr
 ---------------------------------------------------------------------------------
 (3) __strclr                                              4     0      4    1001
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _Linear_regression_init                               5     3      2     399
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _SYS_InterruptHigh                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Board_initialize
     _LED_Enable
     _Linear_regression_init
     _atcommand_init
       _clear_command
         __strclr
     _buffer_init
     _i2c_init
     _led_init
       _LED_Off
       _LED_On
     _nvm_init
       _get_product_desc
       _nvm_clear
         _nvm_clear_flash
           _build_time
             ___wmul
             _mktime
               ___lmul
               _ymd_to_scalar
                 _isleap
                   ___lwmod
                 _months_to_days
                   ___lwdiv
                     ___lwmod (ARG)
                     ___wmul (ARG)
                   ___wmul
                 _years_to_days
                   ___lmul
                   ___lwdiv
       _nvm_read_flash_all
         _flash_readBytes
       _nvm_serialno_check
       _nvm_write_flash_all
         _flash_clear
         _flash_writeBytes
     _sensMeasure_init
       _Kalman_setEstimateError
       _Kalman_setMeasurementError
       _Set_KamanFilter_Sensitivity
         _Kalman_setProcessNoise
     _sens_ZeroCalib_init
     _sens_autoCalib_init
   _InitTimer
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckCDCRequest
               _app_usb_init
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
       _memcpy
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USER_USB_CALLBACK_EVENT_HANDLER
   _WDT_initialize
   _app_usb_task
     _CDCTxService
       _USBTransferOnePacket
     _buffer_en_queue
     _getsUSBUSART
       _USBTransferOnePacket
   _atcommand_task
     __strclr
     _buffer_de_queue
     _build_response
       ___fldiv
         ___fladd (ARG)
           ___flneg (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
           ___fltol (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
           _fabs (ARG)
             ___fladd (ARG)
             ___flneg (ARG)
             ___flsub (ARG)
         ___flsub (ARG)
         ___xxtofl (ARG)
       ___fleq
       __ftoa
         _sprintf
           ___awdiv
           ___fladd
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___lldiv
           ___llmod
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___fladd (ARG)
             ___flmul (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
           _isdigit
           _scale
             ___awdiv
             ___awmod
             ___flmul
             ___fltol (ARG)
       __itoa
         ___aldiv
         ___almod
         ___lmul
       __strcpy
       _nvm_read_flash_all
       _sensor_temp_fahrenheit
         ___fladd
         ___flmul
       _write_command
         __strlen
         _putUSBUSART
           __strlen (ARG)
     _clear_command
     _parse_command
       __strcpy
       _check_atcommand
         __strlen
         _atcommand_compare
           __strlen (ARG)
       _param_copy
         _check_param
     _update_command
       _Kalman_setEstimateError
       _Kalman_setMeasurementError
       _ResetBootloaderCleanly
         _USBDisableWithLongDelay
           _DelayRoutine
       _ResetDeviceCleanly
         _USBDisableWithLongDelay
       _Set_KamanFilter_Sensitivity
       __atof
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
       __atoi
         ___lmul
       __isdigit
       __strlen
       _nvm_clear_all
         _nvm_clear
       _nvm_write_flash_all
       _split_param
         __strlen
   _changeUsbState_task
   _led_task
     _LED_Off
     _LED_On
     _led_fail
       _LED_Off
       _LED_On
     _led_warmup
       _LED_Off
       _LED_On
     _led_zerocal_end
       _LED_Off
       _LED_On
   _sensMeasure_task
     _Linear_regression
       ___fladd
       ___fldiv
       ___fleq
       ___flmul
       ___flsub
       _fmod
         ___fldiv
         ___flmul
         ___flsub
         _trunc
           ___fltol
           ___xxtofl
           _frexp
             ___fleq
     ___fladd
     _sensMeasure_gas_read
       _ADCto_uVoltage
         _FSR_set_LSB
         ___flmul
         ___xxtofl
       _Kalman_updateEstimate
         ___fladd
         ___fldiv
         ___flmul
         ___flsub
         _fabs
       ___flmul
       _compensate_temperature
       _gasSensor_calib
         ___fladd
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
       _gasSensor_lowfilter
         ___flge
       _sensor_ADC_read
         _ads1114_read
           _i2c_readBytes
             _I2C_Read
             _I2C_Start
             _I2C_Stop
             _I2C_Write
           _i2c_writeBytes
             _I2C_Start
             _I2C_Stop
             _I2C_Write
             _i2c_writeData
               _I2C_Stop
               _I2C_Write
         _ads1114_read_ready
           _i2c_readBytes
           _i2c_writeBytes
     _sensMeasure_temp_read
       ___fladd
       _sensor_read_temp_humi
         _sht3x_measure_nonblock_read
           _i2c_writeBytes
           _sht3x_measure_read
             ___fldiv
             ___lmul
             ___xxtofl
             _sht3x_common_read
               _check_crc8
                 _crc8
               _i2c_readBytes
     _sensor_init
       _sensor_adc_init
         _ads1114_SetUp
           _i2c_writeBytes_to
             _I2C_Stop
             _i2c_writeBytes
             _i2c_writeData
       _sensor_lmp_init
         _lmp91000_isReady
           _lmp91000_get_status
             _i2c_readBytes
             _i2c_writeBytes
         _lmp91000_lock
           _i2c_writeBytes
         _lmp91000_set_GainRLoad
           _i2c_writeBytes
         _lmp91000_set_Mode
           _i2c_writeBytes
         _lmp91000_set_Reference
           _i2c_writeBytes
         _lmp91000_unlock
           _i2c_writeBytes
       _sensor_sht3x_init
         _sht3x_clear_status_reg
           _i2c_writeBytes
         _sht3x_heaterOff
           _i2c_writeBytes
         _sht3x_measure_start
           _i2c_writeBytes
   _sens_ZeroCalib_task
     _LED_Off
     _LED_On
     _sens_ZeroCalibration
       _nvm_write_flash_all
   _sens_autoCalib_slp_set_task
     _nvm_write_flash_all
     _sort_uV_slope
       ___flge
     _write_command
   _sens_autoCalib_task
     ___fladd
     ___flge
     _auto_calib_apply
       ___fldiv
       ___flsub
       ___xxtofl
       _nvm_write_flash_all
     _auto_calib_clear
   _usedtime_task
     _memcpy
     _nvm_write_flash_all

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0       0      36        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      3C      18       23.4%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F3      16       94.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F5      12       95.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B7      14       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5D0       8        0.0%
DATA                 0      0     5D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 07 17:13:03 2022

                        i2c_writeBytes@len 0009                             param_copy@src1 0002  
                           param_copy@src2 0004                          buffer_de_queue@ch 0006  
                            _years_to_days B6A4            __end_of_USBDisableWithLongDelay D60E  
                               _USB_SD_Ptr 20F3                               ___fldiv@aexp 0078  
                             ___fldiv@bexp 0077                             _build_time$200 0082  
                           _build_time$212 0088                             _build_time$204 0084  
                           _build_time$208 0086                             _build_time$156 0064  
                           _build_time$190 0076                             _build_time$182 0066  
                           _build_time$191 0078                             _build_time$183 0068  
                           _build_time$192 007A                             _build_time$184 006A  
                           _build_time$193 007C                             _build_time$185 006C  
                           _build_time$194 007E                             _build_time$186 006E  
                          ??_nvm_clear_all 003C                             _build_time$187 0070  
                           _build_time$188 0072                             _build_time$189 0074  
                           _build_time$199 0080                               ___fldiv@sign 0070  
                       __size_of_I2C_Start 0024                         __size_of_I2C_Write 003A  
                                       l30 958E                                         l50 BB7A  
                                       l18 75F0                                         l43 8AEC  
                                       l36 CC98                                         l44 8AF4  
                                       l53 BB72                                         l49 BB18  
                                       l68 CC4A                                         l94 C898  
                              ?_LED_Enable 0001                               ___awdiv@sign 000C  
                      months_to_days@month 000E                      __end_of_parse_command 5226  
                            _USBDeviceInit 8C64                        ___wmul@multiplicand 0003  
                   __size_of_i2c_writeData 0070                             _update_command 47F4  
                       __size_of_CDCInitEP 0068                        i2c_writeBytes@wrptr 0007  
            ??_sht3x_measure_nonblock_read 005D                              app_usb_task@i 0011  
                       atcommand_compare@n 0009                                _split_param 993E  
     USER_USB_CALLBACK_EVENT_HANDLER@event 000D       USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
               gasSensor_calib@sensitivity 0095                  __end_of_sht3x_common_read A4DC  
                                      l110 CCE6                                        l103 CD7C  
                                      l114 BF46                                        l107 D304  
                                      l217 47F2                                        l412 A7B4  
                    ??_sens_ZeroCalib_init 0001                __end_of_USBStdGetDscHandler 944C  
                                      l422 B28E                                        l430 8FBA  
                                      l351 8CCC                                        l416 A7B4  
                                      l504 9EB2                                        l440 9064  
                                      l512 D1E4                                        l360 7118  
                                      l362 6EC0                                        l427 B5F8  
                                      l507 C834                                        l363 6EBE  
                                      l356 8DBE                                        l700 8180  
                                      l509 C836                                        l701 8000  
                                      l550 9DA4                                        l542 9D8C  
                                      l526 AFBA                                        l518 CE98  
                                      l455 9C92                                        l391 CD32  
                                      l536 C218                                        l368 6F3E  
                                      l529 BAEA                                        l377 7068  
                                      l466 9198                                        l554 A0C8  
                                      l378 7116                                        l706 8076  
                                      l571 6316                                        l475 A98C  
                                      l379 707C                                        l468 91B2  
                                      l556 9FDC                                        l549 9D9C  
                                      l397 9810                                        l653 A55C  
                                      l493 9DB4                                        l565 A030  
                                      l733 D004                                        l910 D66E  
                                      l646 A5D0                                        l590 658A  
                                      l582 64DC                                        l903 D1EC  
                                      l655 A596                                        l823 C2FC  
                                      l496 9E94                                        l728 C368  
                                      l817 CFCC                                        l905 D1F2  
                                      l761 C672                                        l489 944A  
                                      l497 9DD0                                        l737 BFC4  
                                      l729 C354                                        l833 C956  
                                      l930 D21E                                        l762 C69E  
                                      l594 6628                                        l498 9DD8  
                                      l682 D35C                                        l850 D42E  
                                      l907 D216                                        l763 C6AA  
                                      l771 98B6                                        l659 C578  
                                      l851 D430                                        l932 D224  
                                      l780 BB94                                        l772 98D8  
                                      l860 D40C                                        l828 CB5E  
                                      _BDT 000400                                        l781 BBB8  
                                      l773 98FA                                        l853 D43E  
                           _build_response 23B6                                        l934 D248  
                                      l678 B072                                        l854 D440  
                                      l862 D41A                                        l838 B54C  
                                      l942 C5DE                                        l767 9866  
                                      l599 D074                                        l863 D41C  
                                      l784 BC0A                                        l776 993C  
                                      l848 D420                                        l880 CF7E  
                                      l857 D3FC                                        l881 CF92  
                                      l890 CAF6                                        l779 BBEC  
                                      l891 CAF8                                        l859 D40A  
                                      l875 CF5E                                        l892 CAFC  
                                      l884 CABC                                        l980 D0E2  
                __end_of_lmp91000_set_Mode D27A                                        l894 CB0A  
                                      l886 CACA                                        l878 CF70  
                                      l966 D524                                        l895 CB0C  
                                      l887 CACC                                        l983 CF1C  
                                      l889 CADA                                        l977 D384  
                                      l969 D504                                        l986 D278  
                    ??_sens_ZeroCalib_task 0013                                        _UIE 000F36  
                                      _UIR 000F62                       i2c_writeBytes@isStop 000A  
                      _sens_autoCalib_init BDB4                    Kalman_setProcessNoise@q 0003  
                      _sens_autoCalib_task 8336                                 _USBSuspend D1B4  
                             ___awmod@sign 0006                       USBStdSetCfgHandler@i 0015  
                                      prod 000FF3                                        wreg 000FE8  
                           _USBDeviceTasks 6E92                             ??_app_usb_init 0001  
                           _USBDeviceState 00E2                             ??_app_usb_task 0010  
                             ___flmul@aexp 0050                               ___flmul@bexp 0051  
                        ??_nvm_clear_flash 003C                    __size_of_i2c_writeBytes 0052  
                             ___flmul@sign 004F                               ___flmul@temp 005A  
               __size_of_i2c_writeBytes_to 005E                               ___flmul@prod 0056  
                    i2c_writeBytes@address 000B                         _sht3x_measure_read 8686  
                    ??_USBCtrlTrfRxService 0001        __size_of_Kalman_setMeasurementError 001A  
                      atcommand_compare@ch 0013                        atcommand_compare@no 0012  
                           ??_getsUSBUSART 000F                            _check_atcommand B128  
                 USBEnableEndpoint@options 0009            __size_of_compensate_temperature 0022  
                          __end_of_LED_Off D670                               ___fltol@exp1 0018  
                     buffer_de_queue@queue 0001                                       l1001 C4C8  
                                     l1010 D2D6                                       l1020 A4DA  
                                     l1006 C510                                       l1030 C8F8  
                                     l1016 D4A4                                       l2001 AB24  
                                     l1202 BDB2                                       l1026 880C  
                                     l1211 9B7A                                       l1205 BDAA  
                                     l2013 B3F0                                       l1045 D4E4  
                                     l2102 D52A                                       l2110 D64C  
                                     l2022 C70E                                       l2104 D544  
                                     l2032 D622                                       l1056 D4C4  
                                     l1225 B1DA                                       l2113 D640  
                                     l1313 4D10                                       l2009 D632  
                                     l1162 D2A8                                       l2042 C12C  
                                     l2035 C43E            __size_of_sensor_temp_fahrenheit 006A  
                                     l2107 D60C                                       l2027 CBFC  
                                     l3012 CBAE                                       l1412 3090  
                                     l2045 D462                                       l1158 D658  
                                     l2126 D662                                       l1334 4A80  
                                     l1166 7C18                                       l1415 C3D4  
                                     l3023 C03E                                       l2039 D3AC  
                                     l2153 B88C                                       l2241 372E  
                                     l1441 C9AE                                       l2049 7FB8  
                                     l3026 D118                                       l3042 764A  
                                     l1530 BE3E                                       l3018 D0AC  
                                     l1610 AA66                                       l1451 CAB6  
                                     l1435 C1A2                                       l3044 781C  
                                     l1196 C7D4                                       l3029 B748  
                                     l3037 AF00                                       l2270 C498  
                                     l2190 5F2A                                       l3054 B126  
                                     l2271 C4A8                                       l2183 6E90  
                                     l2503 B4A0                                       l2351 A8A0  
                                     l1447 CA06                                       l1551 CEDA  
                                     l1720 D564                                       l2256 39C8  
                                     l1288 5224                                       l2089 C0B6  
                                     l2513 92FE                                       l1297 9A62  
                                     l1545 84DE                                       l2522 92EE  
                                     l2338 9FBE                                       l2259 D3F8  
                                     l1723 B942                                       l2531 B6A2  
                                     l1724 B9C2                                       l1572 8964  
                                     l1564 85DC                                       l1548 BD26  
               USBConfigureEndpoint@handle 0007                                       l2293 B7EC  
                                     l2701 BEB6                                       l1573 8984  
                                     l2542 D03C                                       l2286 B7DC  
                                     l2622 8F14                                       l1655 AD80  
                                     l2631 8F04                                       l1479 7DF0  
                                     l1743 6BEA                                       l1567 8684  
                                     l1488 96D2                                       l1752 D5A0  
                                     l2624 8E5A                                       l1664 8C62  
                                     l2537 A394                                       l2625 8E8C  
                                     l1746 D5F4                                       l1594 D5DA  
                                     l2538 A3DA                                       l2810 5402  
                                     l2490 ACBC                                       l1915 A1D0  
                                     l1931 CA5E                                       l2811 53C8  
                                     l1923 D330                                       l1499 4168  
                                     l1659 BA58                                       l2708 BEC6  
                                     l1749 D5BE                                       l2565 A2D6  
                                     l1597 D180                                       l1918 D668  
                                     l1942 CDC6                                       l2902 59A0  
                                     l1871 C644                                       l1687 738C  
                                     l2912 5AD0                                       l2904 5A18  
                                     l1945 D3D2                                       l2809 5414  
                                     l2905 5A06                                       l1881 A6C2  
                                     l1874 D582                                       l2826 552E  
                                     l2818 56E4                                       l1939 AE42  
                                     l1779 7A1E                                       l2835 55FE  
                                     l2851 CE54                                       l1891 BC22  
                                     l2772 C284                                       l1868 D672  
                                     l2836 55EC                                       l1981 6908  
                                     l2782 C76A                                       l2950 82CC  
                                     l1886 D484                                       l2863 62C6  
                                     l2943 8270                                       l2936 81D8  
                                     l1992 68F8                                       l2865 6126  
                                     l2961 B340                                       l2874 616C  
                                     l1994 6918                                       l2779 C28C  
                                     l2939 8334                                       l2955 CDFE  
                                     l2876 61E4                                       l2868 60EA  
                                     l2956 CE0E                                       l2789 C772  
                                     l2877 61D2                                       l2966 D1B2  
                                     l1998 AB34                                       l2895 57AA  
                                     l2899 5B0E                                       l2996 ABF8  
                                     l9053 A4F6                                       l9071 A54E  
                                     l9063 A534                                       l9081 A586  
                                     l9065 A53E                                       l9057 A510  
                                     l9049 A4DC                                       l9403 9BFE  
                                     l9411 9C36                                       l9091 C536  
                                     l9083 A58E                                       l9075 A564  
                                     l9067 A546                                       l9059 A520  
                                     l9171 D546                                       l9413 9C4A  
                                     l9405 9C28                                       l9421 9C82  
                                     l9093 C540                                       l9181 C06E  
                                     l9173 C042                                       l9077 A576  
                                     l9069 A548                                       l9501 52DC  
                                     l9415 9C74                                       l9407 9C2E  
                                     l9095 C54A                                       l9183 C07A  
                                     l9175 C046                                       l9079 A57C  
                                     l9087 A5A2                                       l9351 D08E  
                                     l9511 5318                                       l9503 52EC  
                                     l9417 9C7A                                       l9409 9C34  
                                     l9097 C568                                       l9089 C512  
                                     l9177 C04E                                       l9361 B806  
                                     l9353 D092                                       l9601 551E  
                                     l9521 5336                                       l9513 5326  
                                     l9505 52EE                                       l9419 9C80  
                                     l9099 C572                                       l9179 C050  
                                     l9187 C098                                       l9363 B80A  
                                     l9355 B7EE                                       l9347 D076  
                                     l9611 5572                                       l9603 5544  
                                     l9531 534A                                       l9523 533A  
                                     l9515 532A                                       l9507 52F6  
                                     l9381 9B80                                       l8901 B5EA  
                                     l9365 B812                                       l9357 B7F2  
                                     l9349 D082                                       l9621 559C  
                                     l9613 5580                                       l9605 5554  
                                     l9541 535E                                       l9533 534E  
                                     l9525 533E                                       l9517 532E  
                                     l9509 5306                                       l9391 9BC4  
                                     l9383 9B98                                       l9359 B7FC  
                                     l9631 55CE                                       l9623 55AC  
                                     l9615 5582                                       l9551 53B0  
                                     l9543 5362                                       l9535 5352  
                                     l9527 5342                                       l9519 5332  
                                     l9471 5240                                       l8833 D3D4  
                                     l9385 9B9C                                       l9393 9BC8  
                                     l9369 B81A                                       l9641 5628  
                                     l9633 55E4                                       l9617 5590  
                                     l9609 5568                                       l9625 55AE  
                                     l9561 53F4                                       l9553 53C0  
                                     l9537 5356                                       l9529 5346  
                                     l9545 5366                                       l9481 5274  
                                     l9473 5242                                       l8835 D3F0  
                                     l9395 9BD0                                       l9387 9BAC  
                                     l9379 9B7C                                       l8931 CD02  
                                     l9651 56A4                                       l9643 5662  
                                     l9619 5598                                       l9627 55BC  
                                     l9563 53F6                                       l9555 53D6  
                                     l9547 536A                                       l9539 535A  
                                     l9491 52A6                                       l9475 5252  
                                     l9483 527C                                       l9467 5226  
                                     l9397 9BE0                                       l9389 9BB4  
                                     l8933 CD10                                       l8941 96E6  
                                     l9661 56C4                                       l9653 56A8  
                                     l9637 560E                                       l9645 5664  
                                     l9629 55C0                                       l9581 547E  
                                     l9573 5446                                       l9565 5400  
                                     l9557 53E2                                       l9549 5394  
                                     l9493 52AC                                       l9485 528C  
                                     l9477 5262                                       l9469 5232  
                                     l9399 9BEA                                       l8935 CD1A  
                                     l8927 CCEA                                       l8951 9738  
                                     l8943 9702                                       l9663 56D2  
                                     l9655 56B6                                       l9647 5674  
                                     l9639 561A                                       l9583 5482  
                                     l9575 5456                                       l9567 5422  
                                     l9591 54A2                                       l9559 53E6  
                                     l9495 52BA                                       l9487 5292  
                                     l9479 5272                                       l8937 CD26  
                                     l8929 CCF8                                       l8961 9790  
                                     l8953 975C                                       l8945 971A  
                                     l9665 56D4                                       l9657 56BC  
                                     l9649 5684                                       l9593 54C8  
                                     l9585 5490                                       l9577 5464  
                                     l9569 5432                                       l9497 52BC  
                                     l9489 52A4                                       l8891 B592  
                                     l8963 97CE                                       l8955 9768  
                                     l8947 972C                                       l8939 96D6  
                                     l9659 56BE                                       l9595 54FC  
                                     l9587 5492                                       l9579 5472  
                                     l9499 52CC                                       l8893 B59C  
                                     l8965 9808                                       l8957 9774  
                                     l9597 54FE                                       l9589 549C  
                                     l8895 B5AC                                       l8887 B550  
                                     l8959 9780                                       l9599 550E  
                                     STR_1 23AF                                       STR_2 2391  
                                     l8897 B5C8                                       l8889 B558  
                                     STR_3 2391                          ??_sensor_adc_init 0019  
                                     STR_4 2391                                       l8899 B5E0  
                                     STR_5 2391                                       STR_6 2391  
                                     STR_7 2391                                       STR_8 2391  
                                     STR_9 2391                                       u8010 C06A  
                                     u8011 C066                                       u8020 C094  
                                     u8021 C090                      ??_USBCtrlTrfTxService 0001  
                                     u8400 9C26                                       u8410 9C46  
                                     u7610 B5AC                                       u8411 9C42  
                                     u7611 B5A8                                       u8420 9C72  
                                     u8500 5252                                       u8501 524E  
                                     u8430 9C92                                       u8350 D0AC  
                                     u8510 5262                                       u8431 9C8E  
                                     u8407 9C1C                                       u8351 D0A8  
                                     u8511 525E                                       _UCFG 000F39  
                                     u8360 9B98                                       u8600 53AE  
                                     u8520 52A4                                       u8361 9B94  
                                     u8521 52A0                                       u8370 9BAC  
                                     u7650 CCF8                                       u8610 53D6  
                                     u8530 52BA                                       u8427 9C68  
                                     u8371 9BA8                                       u7651 CCF4  
                                     u8611 53D2                                       u8531 52B6  
                                     u8380 9BC4                                       u7660 CD10  
                                     u7900 A520                                       u9420 B628  
                                     u8700 550E                                       u8620 53F4  
                                     u8540 52CC                                       _UEP0 000F26  
                                     u8381 9BC0                                       u7661 CD0C  
                                     u7901 A51C                                       u9421 B624  
                                     u8701 550A                                       u8621 53F0  
                                     u8541 52C8                                       _UEP1 000F27  
                                     u8390 9BFA                                       u7670 96E6  
                                     u7910 A530                                       u9430 B666  
                                     u8710 5544                                       u8630 5414  
                                     u8550 52DC                                       u8391 9BF6  
                                     u7671 96E2                                       u7911 A52C  
                                     u9431 B662                                       u8711 5540  
                                     u8631 5410                                       u8551 52D8  
                                     u7680 972C                                       u9600 B254  
                                     u9440 B69A                                       u8800 560E  
                                     u8720 5554                                       u8640 5422  
                                     u8560 5318                                       u7681 9728  
                                     u9601 B250                                       u9441 B696  
                                     u8801 560A                                       u8721 5550  
                                     u8641 541E                                       u8561 5314  
                                     u7690 9790                                       u9610 A916  
                                     u8810 5628                                       u8730 5580  
                                     u8650 5432                                       u8570 5326  
                                     u8490 5240                                       u7691 978C  
                                     u9611 A912                                       u8811 5624  
                                     u8731 557C                                       u8651 542E  
                                     u8571 5322                                       u8491 523C  
                                     _UEIE 000F37                                       u9700 9DF2  
                                     u9620 A962                                       u8820 5662  
                                     u8740 5590                                       u8660 5464  
                                     u8580 5394                                       u9701 9DEE  
                                     u9621 A95E                                       u8821 565E  
                                     u8741 558C                                       u8661 5460  
                                     u8581 5390                                       u9550 A6D6  
                                     u9630 9314                                       u9710 9E00  
                                     u8830 5674                                       u8750 55AC  
                                     u8670 5472                                       u8590 53AC  
                                     u9551 A6D2                                       u9631 9310  
                                     u9711 9DFC                                       u8831 5670  
                                     u8751 55A8                                       u8671 546E  
                                     u8591 53A6                                       u9560 A6EA  
                                     u7880 A4F2                                       u9800 6350  
                                     u9640 9344                                       u9720 9E56  
                                     u8840 5684                                       u8760 55BC  
                                     u8680 5490                                       u9561 A6E6  
                                     u7881 A4EE                                       u9801 634C  
                                     u9641 9340                                       u9721 9E52  
                                     u8841 5680                                       u8761 55B8  
                                     u8681 548C                                       u9570 A700  
                                     u7890 A50C                                       u9810 6366  
                                     u9650 938E                                       u9730 9E6C  
                                     u8850 56A4                                       u8770 55CE  
                                     u8690 54C8                                       u9571 A6FC  
                                     u7891 A508                                       u9811 6362  
                                     u9731 9E68                                       u8851 56A0  
                                     u8771 55CA                                       u8691 54C4  
                                     u9580 A73C                                       u9900 6574  
                                     u9820 637A                                       u9660 93BE  
                                     u9740 9EA4                                       u8860 56B6  
                                     u8780 55E4                                       u9581 A738  
                                     u9901 6570                                       u9821 6376  
                                     u9741 9EA0                                       u8861 56B2  
                                     u8781 55E0                                       u9910 658A  
                                     u9830 638C                                       u9750 62DA  
                                     u9670 93E0                                       u9590 B1F8  
                                     u8870 56D2                                       u8790 55FA  
                                     u9911 6586                                       u9831 6388  
                                     u9751 62D6                                       u9671 93DC  
                                     u9591 B1F4                                       u8871 56CE  
                                     u8791 55F6                                       u9920 659A  
                                     u9840 640A                                       u9760 62EE  
                                     u9680 941C                                       _UEIR 000F63  
                                     _UCON 000F65                                       u9921 6596  
                                     u9841 6406                                       u9761 62EA  
                                     u9657 9384                                       u9850 6432  
                                     u9770 6306                                       u9690 9DC8  
                                     u9851 642E                                       u9771 6302  
                                     u9667 93B4                                       u9691 9DC4  
                                     u9860 6484                                       u9780 6328  
                                     u9861 6480                                       u9781 6324  
                                     u9870 649A                                       u9790 633C  
                                     u9871 6496                                       u9791 6338  
                                     u9687 9412                                       u9880 64A8  
                                     u9881 64A4                                       u9890 6518  
                                     u9891 6514                    ?_lmp91000_set_GainRLoad 000C  
                            _i2c_readBytes B4A2                                       _gCnt 0182  
                          _CDCDataInHandle 0188                 _Kalman_updateEstimate$6563 0083  
               _Kalman_updateEstimate$6564 007F     USBStdFeatureReqHandler@current_ep_data 0019  
                                     _crc8 C4AA                                       _pDst 018A  
                                     _fabs CDC8                        ?_sht3x_measure_read 0079  
                   ??_sens_ZeroCalibration 0013                                       _fmod B290  
                                     _main BC0C                           __end_of_I2C_Read CB0E  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     indf0 000FEF                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf1 000FE7  
                              _BaudRateGen 016C                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 005F                           _g_usedtime_count 0150  
                         __end_of_I2C_Stop D41E                       ?_sens_autoCalib_init 0001  
                     ?_sens_autoCalib_task 0001                       i2c_writeBytes_to@len 0011  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 2086                            ___fldiv@new_exp 0071  
          __size_of_sht3x_clear_status_reg 0020                 __end_of_USBCheckStdRequest A0CA  
                   ??_USBCtrlTrfOutHandler 0003                               _sprintf$6571 0079  
                             ___param_bank 000000                             ?_years_to_days 000E  
                ??_USBStdFeatureReqHandler 0015                   Kalman_updateEstimate@mea 007B  
                   __size_of_sort_uV_slope 0178                     __size_of_usedtime_task 00F2  
                   __end_of_update_command 4D12                   ??_USBStdGetStatusHandler 0001  
                      _sht3x_measure_start D486                             ?_USBDeviceInit 0001  
                   __end_of_build_response 3092                   app_usb_task@numBytesRead 0010  
                                    l10101 A764                                      l10021 B638  
                                    l10111 A7A4                                      l10103 A770  
                                    l10023 B666                                      l10105 A77C  
                                    l10121 B228                                      l10113 B1DC  
                                    l11001 904C                                      l10025 B676  
                                    l10017 B5FA                          ??_sensor_lmp_init 0014  
                                    l10107 A780                                      l11011 9090  
                                    l10203 942A                                      l10211 9DC8  
                                    l10131 B276                                      l10123 B238  
                                    l10115 B1E6                                      l11003 9050  
                                    l10027 B69A                                      l10019 B628  
                                    l10109 A790                                      l11021 90C0  
                                    l11013 9094                                      l10301 655C  
                                    l10221 9E40                                      l10213 9DDC  
                                    l10205 9DA6                                      l10141 A8E0  
                                    l10133 B282                                      l10125 B254  
                                    l10117 B1F8                                      l10029 B6A0  
                         buffer_init@queue 0001                                      l11031 9122  
                                    l11023 90C2                                      l11015 909C  
                                    l11007 9066                                      l10311 65CE  
                                    l10303 6566                                      l10231 9EA4  
                                    l10223 9E56                                      l10215 9DF2  
                                    l10151 A906                                      l10135 A8A2  
                                    l10127 B25C                                      l10119 B21C  
                                    l11201 993A                                      l10081 A6D6  
                                    l11041 9180                                      l11033 912E  
                                    l11025 90D4                                      l11017 90A4  
                                    l11009 9078                                      l10313 65DA  
                                    l10305 6574                                      l10241 62EE  
                                    l10233 9EAC                                      l10225 9E6C  
                                    l10217 9E00                                      l10209 9DB8  
                                    l10161 A946                                      l10153 A916  
                                    l10137 A8A6                                      l10129 B260  
                                    l11211 BBB4                                      l10091 A71C  
                                    l10083 A6EA                                      l11043 918C  
                                    l11035 913E                                      l11027 90E6  
                                    l11019 90BC                                      l20011 B87E  
                                    l10307 659A                                      l10315 65FA  
                                    l10251 633C                                      l10243 62F2  
                                    l10235 9EAE                                      l10219 9E22  
                                    l10171 A986                                      l10163 A94E  
                                    l10155 A932                                      l10147 A8E4  
                                    l10139 A8DE                                      l11051 9FC0  
                                    l12101 CA08                                      l11213 BBC0  
                                    l11205 BB7C                                      l10093 A72C  
                                    l10085 A6EE                                      l11037 914A  
                                    l11029 910C                                      l10317 6606  
                                    l10309 65B6                                      l10261 63AA  
                                    l10253 6350                                      l10245 6306  
                                    l10237 62C8                                      l10181 9334  
                                    l10173 9300                                      l10229 9E74  
                                    l10165 A952                                      l10157 A934  
                                    l10149 A904                                      l11061 9FF8  
                                    l11151 C646                                      l12111 CA44  
                                    l11215 BBD2                                      l11207 BB80  
                                    l10095 A73C                                      l10087 A700  
                                    l10079 A6C4                                      l11047 919C  
                                    l11039 915A                                      l10319 661C  
                                    l10271 641A                                      l10263 63C6  
                                    l10255 6366                                      l10247 6310  
                                    l10239 62DA                                      l10191 93D0  
                                    l10183 9344                                      l10175 9314  
                                    l10167 A962                                      l10159 A93E  
                                    l11071 A016                                      l11063 A002  
                                    l11055 9FE0                                      l10511 91CA  
                                    l12031 D452                                      l11153 C674  
                                    l11217 BBD4                                      l11209 BBB2  
                                    l11161 981A                                      l10097 A740  
                                    l10089 A710                                      l11049 91AE  
                                    l20009 B838                                      l10281 6484  
                                    l10273 6424                                      l10265 63E4  
                                    l10257 637A                                      l10249 6328  
                                    l10193 93E0                                      l10185 9360  
                                    l10177 931E                                      l10169 A96A  
                                    l11081 A034                                      l11073 A01E  
                                    l11065 A004                                      l11057 9FE8  
                                    l12201 BEC8                                      l10601 A316  
                                    l10521 91F8                                      l10505 8EE8  
                                    l10441 D184                                      l12123 D65A  
                                    l11155 C680                                      l12115 CA4A  
                                    l12107 CA0C                                      l11171 9876  
                                    l11163 982A                                      l10099 A750  
                                    l10291 6502                                      l10283 649A  
                                    l10275 6432                                      l10267 63FC  
                                    l10259 638C                                      l10195 93FC  
                                    l10187 9392                                      l10179 9328  
                                    l11083 A04A                                      l11067 A008  
                                    l11059 9FF0                                      l12211 BEF8  
                                    l12203 BEC8                                      l10611 A382  
                                    l10603 A344                                      l10531 9230  
                                    l10523 91FA                                      l10515 91DE  
                                    l10507 8EF4                                      l10443 D188  
                                    l11091 D344                                      l11331 C79A  
                     ??_sht3x_measure_read 005C                                      l13101 95FE  
                                    l11157 C684                                      l12117 CA4C  
                                    l12109 CA28                                      l11181 98D2  
                                    l11173 9882                                      l11165 983E  
                                    l10293 6518                                      l10285 64A8  
                                    l10277 6454                                      l10269 640A  
                                    l10189 93C6                                      l11069 A00E  
                                    l12221 8C66                                      l12301 CE7A  
                                    l12213 BF24                                      l12205 BEF2  
                                    l10613 A3D2                                      l10605 A354  
                                    l10621 D01C                                      l10541 9272  
                                    l10533 9236                                      l10525 920A  
                                    l10509 91B4                                      l10453 8DC0  
                                    l10445 D198                                      l11501 A7DC  
                                    l11093 D34C                                      l11341 C7D2  
                                    l11333 C7AC                                      l10381 D52C  
                                    l10701 ABE6                                      l12029 D442  
                                    l12061 662A                                      l12119 CA5C  
                                    l11191 98F6                                      l11183 98D4  
                                    l11175 9888                                      l11167 9850  
                                    l11159 9812                                      l10295 6524  
                                    l10287 64C4                                      l10279 6472  
                                    l11087 A06A                                      l12231 8C9E  
                                    l12223 8C74                                      l12311 D1B8  
                                    l12303 CE82                                      l12215 BF44  
                                    l10615 A3D8                                      l10607 A362  
                                    l10623 D02C                                      l10543 9274  
                                    l10535 923A                                      l10527 921C  
                                    l10471 8E3C                                      l10455 8DE4  
                                    l10447 D1A8                                      l11511 A824  
                                    l11503 A7EA                                      l11095 D350  
                                    l11351 9A98                                      l11335 C7BC  
                                    l11327 C776                                      l10383 D532  
                                    l10703 ABE8                                      l12071 66BE  
                                    l12063 665C                                      l11193 98FE  
                                    l11185 98E0                                      l11169 985C  
                                    l10297 6530                                      l10289 64F8  
                                    l12241 8CBC                                      l12225 8C90  
                                    l12321 D03E                                      l12313 D1BA  
                                    l12305 CE84                                      l12401 8014  
                                    l10609 A374                                      l10641 A23C  
                                    l10633 A1FC                                      l10545 927E  
                                    l10537 9244                                      l10529 922C  
                                    l10481 8E7E                                      l10473 8E4C  
                                    l10465 8E20                                      l10449 D1AC  
                                    l11513 A832                                      l11521 A870  
                                    l11505 A7FA                                      l11097 D356  
                                    l11089 D332                                      l11361 9ACC  
                                    l11345 9A64                                      l11329 C788  
                                    l11337 C7CC                                      l11441 D5F6  
                                    l13041 C16C                                      l13033 C12E  
                                    l12081 677C                                      l12073 66D2  
                                    l12065 666A                                      l11195 9916  
                                    l11187 98E2                                      l11179 98A4  
                                    l10299 6550                                      l12251 8CDA  
                                    l12243 8CCE                                      l12227 8C96  
                                    l12219 8C64                                      l12323 D04C  
                                    l12331 C7D6                                      l12315 D1BC  
                                    l12307 CE92                                      l12411 806E  
                                    l12403 8026                                      l10619 D006  
                                    l10651 A26C                                      l10643 A24A  
                                    l10635 A226                                      l10627 A1D2  
                                    l10571 B75A                                      l10555 92AA  
                                    l10547 9284                                      l10539 9262  
                                    l10483 8E8A                                      l10475 8E50  
                                    l10467 8E22                                      l10459 8DF8  
                                    l11451 9EB8                                      l11523 A880  
                                    l11515 A850                                      l11507 A810  
                                    l11363 9ADC                                      l11355 9A9E  
                                    l11347 9A76                                      l10379 D526  
                                    l11443 D5F8                                      l13043 C174  
                                    l13035 C14A                                      l13051 C974  
                                    l12091 683A                                      l12083 67AE  
                                    l12075 6704                                      l12067 667E  
                                    l11197 9924                                      l11189 98F4  
                                    l11701 CB94                                      l12253 8CE0  
                                    l12245 8CD4                                      l12237 8CA2  
                                    l12229 8C9A                                      l12325 D05E  
                                    l12341 C832                                      l12333 C7E6  
                                    l12317 D1C2                                      l12309 D1B4  
                                    l13301 6E92                                      l12421 80A2  
                                    l12413 807A                                      l12405 8044  
                                    l10661 A296                                      l10653 A276  
                                    l10637 A228                                      l10629 A1E8  
                                    l10581 B79C                                      l10573 B770  
                                    l10565 92D2                                      l10557 92B4  
                                    l10549 9292                                      l10485 8E94  
                                    l10477 8E56                                      l10469 8E30  
                                    l11461 9EF8                                      l11453 9EC6  
                                    l11525 A890                                      l11517 A860  
                                    l11509 A818                                      l11381 9B5E  
                                    l11365 9AEC                                      l11373 9B04  
                                    l11357 9AAC                                      l11349 9A88  
                                    l12501 4DC6                                      l11445 D5FC  
                                    l13045 C17A                                      l13037 C14E  
                                    l13061 C9A8                                      l13053 C984  
                                    l12093 686C                                      l12085 67C2  
                                    l12077 6736                                      l12069 668C  
                                    l12191 D2D8                                      l11199 9928  
                                    l11711 BA96                                      l11703 BA5A  
                                    l12351 AF42                                      l12343 AF02  
                                    l12271 8D66                                      l12255 8CE6  
                                    l12247 8CD6                                      l12239 8CBA  
                                    l12327 D062                                      l12335 C800  
                                    l12319 D1C8                                      l13311 6EA4  
                                    l12431 80EC                                      l12423 80CC  
                                    l12415 808A                                      l12407 804E  
                                    l10591 CE10                                      l10663 A2A6  
                                    l10639 A238                                      l10583 B7BA  
                                    l10575 B778                                      l10671 BE40  
                                    l10567 92DE                                      l10559 92BE  
                                    l10495 8EC0                                      l10487 8E9A  
                                    l10479 8E64                                      l11471 9F36  
                                    l11463 9EFC                                      l11455 9ED6  
                                    l11519 A86A                                      l11375 9B1E  
                                    l11367 9AF8                                      l11359 9ABE  
                                    l11383 9B66                                      l12511 4E0C  
                                    l12503 4DD8                                      l11447 D606  
                                    l13071 C9F0                                      l13063 C9B0  
                                    l13047 C192                                      l13039 C160  
                                    l13055 C994                                      l11391 CDD6  
                                    l12095 689E                                      l12087 67F4  
                                    l12079 674A                                      l12193 D2E4  
                                    l13081 CA94                                      l13153 BDB4  
                                    l11721 BABE                                      l11713 BAA0  
                                    l11705 BA74                                      l12353 AF4C  
                                    l12361 AFA2                                      l12345 AF08  
                                    l12281 8D92                                      l12273 8D68  
                                    l12265 8D16                                      l12257 8CEE  
                                    l12249 8CD8                                      l12329 D072  
                                    l12337 C81A                                      l13401 70AA  
                                    l13321 6EFC                                      l13313 6ECE  
                                    l12433 8116                                      l12441 8132  
                                    l12425 80D2                                      l12417 808E  
                                    l12409 805E                                      l10593 CE20  
                                    l10665 A2B6                                      l10649 A262  
                                    l10585 B7CA                                      l10577 B784  
                                    l10569 B74A                                      l10681 BE96  
                                    l10673 BE56                                      l10497 8ECA  
                                    l10489 8EA8                                      l11481 9F7E  
                                    l11473 9F44                                      l11465 9F0C  
                                    l11457 9EDA                                      l11449 9EB4  
                                    l11801 D27A                                      l11385 9B78  
                                    l12601 50D2                                      l12521 4E5E  
                                    l12513 4E1E                                      l12505 4DEA  
                                    l13073 C9FA                                      l13065 C9CC  
                                    l13057 C998                                      l13049 C958  
                                    l12097 68B2                                      l12089 6826  
                                    l12195 D2F4                                      l12451 CF96  
                                    l13083 CA9A                                      l11395 D584  
                                    l11731 C1B8                                      l11723 BAC6  
                                    l11715 BAAC                                      l11707 BA80  
                                    l12363 AFB6                                      l12355 AF6A  
                                    l12347 AF1E                                      l12291 8DB4  
                                    l12283 8D96                                      l12275 8D78  
                                    l12267 8D46                                      l12259 8CFC  
                                    l12339 C826                                      l13411 7104  
                                    l13403 70BE                                      l13331 6F26  
                                    l13323 6EFE                                      l13315 6ED4  
                                    l12443 8144                                      l12435 811C  
                                    l12427 80D6                                      l12371 AFEA  
                                    l10667 A2C6                                      l10659 A28A  
                                    l10587 B7CC                                      l10579 B792  
                                    l10683 BEA6                                      l10675 BE5E  
                                    l10499 8ED4                                      l11483 9F88  
                                    l11475 9F4E                                      l11467 9F22  
                                    l11459 9EE8                                      l11803 D28C  
                                    l11811 BD54                                      l12603 50E6  
                                    l12531 4EB8                                      l12523 4E70  
                                    l12515 4E2A                                      l12507 4DFC  
                                    l13075 CA00                                      l13067 C9DC  
                                    l13059 C9A2                                      l10691 AB78  
                                    l12099 68E4                                      l13171 88D2  
                                    l13163 880E                                      l13155 CE9A  
                                    l12461 CFC6                                      l12453 CF9A  
                                    l13085 CA9E                                      l13077 CA60  
                                    l11741 C214                                      l11733 C1C0  
                                    l11725 BACA                                      l11717 BAB0  
                                    l11709 BA8A                                      l12357 AF92  
                                    l12349 AF3A                                      l12293 8DB8  
                                    l12285 8D9A                                      l12277 8D82  
                                    l12269 8D56                                      l13413 7106  
                                    l13405 70CE                                      l13341 6F60  
                                    l13333 6F2A                                      l13317 6EE4  
                                    l13325 6F06                                      l13309 6E92  
                                    l12445 8156                                      l12437 8120  
                                    l12429 80D8                                      l12197 CC9A  
                                    l12381 B03E                                      l12373 B008  
                                    l12365 AFBC                                      l10597 A2D8  
                                    l10589 B7D6                                      l10685 BEB0  
                                    l10677 BE6A                                      l11477 9F6C  
                                    l11469 9F2A                                      l11485 9F8E  
                                    l11493 A7B6                                      l10941 CC3E  
                                    l11821 BD86                                      l11805 BD28  
                                    l12605 50FE                                      l12613 519A  
                                    l12621 51D2                                      l12541 4F12  
                                    l12533 4ECA                                      l12525 4E82  
                                    l12517 4E3A                                      l12509 4E04  
                                    l11901 9A60                                      l13069 C9EC  
                                    l11389 CDC8                                      l13181 D16E  
                                    l13173 8902                                      l13165 883E  
                                    l12471 D22A                                      l13095 9594  
                                    l10951 C86E                                      l12463 CFC8  
                                    l12455 CFA2                                      l13087 CAA4  
                                    l13079 CA76                                      l13191 AD5C  
                                    l11751 9CCC                                      l11743 9C94  
                                    l11735 C1D4                                      l11727 BAE6  
                                    l11719 BAB8                                      l12359 AF9A  
                                    l12287 8D9C                                      l12279 8D88  
                                    l12295 CE56                                      l13407 70E0  
                                    l13351 6F8A                                      l13343 6F66  
                                    l13335 6F38                                      l13327 6F14  
                                    l13319 6EF2                                      l12447 815E  
                                    l12439 8122                                      l12391 7FCE  
                                    l12199 CCC6                                      l12383 B050  
                                    l12375 B018                                      l12367 AFC2  
                                    l10599 A306                                      l10679 BE78  
                                    l11487 9F9E                                      l11479 9F7C  
                                    l11495 A7BA                                      l11671 BB28  
                                    l11663 BAEC                                      l10935 CBFE  
                                    l11823 BD92                                      l11815 BD60  
                                    l11807 BD30                                      l12631 520E  
                                    l12607 5112                                      l12615 51CC  
                                    l12551 4F6C                                      l12543 4F24  
                                    l12535 4EDC                                      l12527 4E94  
                                    l12519 4E4C                                      l11911 D634  
                                    l10695 AB8C                                      l10687 AB36  
                                    l13183 D17E                                      l13175 8934  
                                    l13167 8870                                      l13097 95EC  
                                    l13089 9590                                      l10953 C87A  
                                    l10945 C838                                      l12473 D64E  
                                    l12465 CFCA                                      l12457 CFB2  
                                    l13193 AD78                                      l13177 D5C0  
                                    l11761 9D10                                      l11753 9CDC  
                                    l11745 9CA6                                      l11737 C1F8  
                                    l11729 C1A4                                      l10961 8F38  
                                    l12289 8DA2                                      l12297 CE5C  
                                    l13409 70E8                                      l13361 6FCA  
                                    l13353 6F98                                      l13337 6F4C  
                                    l13345 6F68                                      l13329 6F24  
                                    l12449 8162                                      l12377 B020  
                                    l12385 B06E                                      l12369 AFD4  
                                    l11489 9FAE                                      l11497 A7C8  
                                    l11665 BAF4                                      l10937 CC0A  
                                    l11825 BD96                                      l11817 BD6C  
                                    l11809 BD42                                      l12633 5212  
                                    l12609 5156                                      l12561 4FA2  
                                    l12553 4F7E                                      l12545 4F36  
                                    l12537 4EEE                                      l12529 4EA6  
                                    l12481 4D22                                      l11913 D63C  
                                    l11905 D642                                      l11673 CD34  
                                    l10697 ABCE                                      l10689 AB68  
                                    l13169 88A0                                      l12467 D21A  
                                    l13099 95EE                                      l10955 C87E  
                                    l10947 C84A                                      l12475 D654  
                                    l12459 CFBE                                      l11931 7820  
                                    l13187 ACBE                                      l11771 9D54  
                                    l11763 9D14                                      l11755 9CE6  
                                    l11747 9CB0                                      l11739 C204  
                                    l10971 8F86                                      l10963 8F4E  
                                    l11691 CB60                                      l12299 CE78  
                                    l13371 7000                                      l13363 6FDC  
                                    l13355 6FA8                                      l13347 6F76  
                                    l13339 6F5C                                      l12395 7FE8  
                                    l12379 B03C                                      l11499 A7D8  
                                    l11667 BB06                                      l10939 CC0E  
                                    l11843 B1C6                                      l11835 B12C  
                                    l11827 BD9A                                      l11819 BD70  
                                    l12635 5222                                      l12571 4FE0  
                                    l12563 4FB4                                      l12555 4F86  
                                    l12547 4F48                                      l12539 4F00  
                                    l12491 4D80                                      l12627 51D8  
                                    l12483 4D3A                                      l11915 D63E  
                                    l11907 D648                                      l11683 CD5C  
                                    l11675 CD38                                      l11851 993E  
                                    l13531 7C1A                                      l10699 ABDE  
                                    l13179 D14E                                      l10949 C85C  
                                    l11941 787C                                      l11933 7824  
                                    l13189 AD40                                      l11781 9D9E  
                                    l11773 9D60                                      l11765 9D28  
                                    l11749 9CC2                                      l11757 9CEC  
                                    l10981 8FE4                                      l10973 8F92  
                                    l10965 8F52                                      l10957 8F16  
                                    l11693 CB74                                      l13381 704C  
                                    l13373 7010                                      l13365 6FDE  
                                    l13357 6FC4                                      l13349 6F86  
                                    l12397 7FFC                                      l12389 7FBA  
                                    l11669 BB24                                      l11845 B1C8  
                                    l11837 B174                                      l11829 B128  
                                    l12581 501E                                      l12573 4FE6  
                                    l12565 4FBC                                      l12557 4F8A  
                                    l12549 4F5A                                      l12629 51FE  
                                    l12493 4D92                                      l12485 4D4A  
                                    l12477 4D12                                      l11909 D64A  
                                    l11677 CD46                                      l11685 CD60  
                                    l11861 9978                                      l11853 9950  
                                    l13541 7C86                                      l13533 7C1E  
                                    l11791 C36A                                      l11783 D1E8  
                                    l11951 78EA                                      l11943 7892  
                                    l11935 783A                                      l11775 9D70  
                                    l11767 9D34                                      l11759 9CFC  
                                    l10991 900C                                      l10983 8FEA  
                                    l10975 8FAA                                      l10967 8F58  
                                    l10959 8F28                                      l11695 CB80  
                                    l13383 7050                                      l13375 7014  
                                    l13367 6FEE                                      l13359 6FC6  
                                    l11847 B1D8                                      l11839 B1C0  
                                    l12591 5050                                      l12583 5022  
                                    l12575 4FF8                                      l12567 4FCC  
                                    l12559 4F90                                      l12495 4DA2  
                                    l12487 4D5C                                      l12479 4D16  
                                    l11687 CD7A                                      l11679 CD56  
                                    l11863 997C                                      l11855 9962  
                                    l13551 7CDC                                      l13543 7C9E  
                                    l13535 7C3A                                      l11793 C384  
                                    l11961 7958                                      l11953 7900  
                                    l11945 78A8                                      l11937 7850  
                                    l11777 9D7C                                      l11769 9D44  
                                    l10993 901C                                      l10985 8FEE  
                                    l10977 8FCA                                      l10969 8F60  
                                    l11697 CB84                                      l13393 708A  
                                    l13385 7062                                      l13377 7022  
                                    l13369 6FF2                                      l12593 505E  
                                    l12569 4FD0                                      l12497 4DA4  
                                    l12489 4D6E                                      l11881 99E0  
                                    l11865 9984                                      l13561 7D08  
                                    l13553 7CE4                                      l13545 7CBA  
                                    l13537 7C4C                                      l13641 8542  
                                    l13633 84E0                                      l11795 C398  
                                    l11787 D1F8                                      l11971 D5DC  
                                    l11963 796E                                      l11955 7916  
                                    l11947 78BE                                      l11939 7866  
                                    l10995 9030                                      l10987 8FFE  
                                    l10979 8FE0                                      l11699 CB90  
                                    l13395 708E                                      l13387 7078  
                                    l13379 7032                                      l12595 506A  
                                    l12587 5036                                      l12579 500E  
                                    l12499 4DB4                                      l11875 99B8  
                                    l11883 99E8                                      l11867 9990  
                                    l11859 9968                                      l13571 7D4A  
                                    l13555 7CEA                                      l13547 7CBE  
                                    l13539 7C6C                                      l13651 85B8  
                                    l13643 855E                                      l13635 84E4  
                                    l11797 C3AC                                      l11789 D66A  
                                    l11981 D3AE                                      l11973 D5A2  
                                    l11957 792C                                      l11949 78D4  
                                    l13821 D572                                      l10997 903C  
                                    l10989 9006                                      l13397 709A  
                                    l12597 508C                                      l12589 503A  
                                    l11885 9A0C                                      l11893 9A24  
                                    l11877 99DC                                      l11869 99A2  
                                    l13581 7D6A                                      l13557 7CFC  
                                    l13549 7CD0                                      l13661 862A  
                                    l13653 85C2                                      l13645 8562  
                                    l13637 8504                                      l11799 C3C0  
                                    l11975 CD7E                                      l11959 7942  
                                    l11967 7984                                      l13831 D57E  
                                    l13823 D576                                      l10999 9048  
                                    l13399 709C                                      l12599 50B6  
                                    l11887 9A0E                                      l11879 99DE  
                                    l11895 9A28                                      l13583 7D72  
                                    l13567 7D12                                      l13559 7D04  
                                    l13591 7D98                                      l13671 A9A0  
                                    l13663 8634                                      l13655 85FC  
                                    l13647 856C                                      l13639 8520  
                                    l11977 CDA2                                      l11969 7A02  
                                    l13833 D580                                      l13825 D578  
                                    l11897 9A3A                                      l13577 7D52  
                                    l13569 7D2E                                      l13681 A9D2  
                                    l13657 8618                                      l13649 85A0  
                                    l13841 A60C                                      l13827 D57A  
                                    l13819 D566                                      l13771 B954  
                                    l18011 81FE                                      l18003 8184  
                                    l11899 9A5E                                      l13587 7D7A  
                                    l13579 7D62                                      l13691 AA2C  
                                    l13683 A9DA                                      l13675 A9B6  
                                    l13659 861E                                      l13667 864C  
                                    l13851 A682                                      l13843 A62C  
                                    l13835 A5D2                                      l13829 D57C  
                                    l13781 B9AA                                      l13773 B964  
                                    l13765 B92C                                      l18021 8258  
                                    l18005 8194                                      l13861 D480  
                                    l13685 A9F6                                      l13677 A9BA  
                                    l13669 A98E                                      l13853 A69E  
                                    l13845 A63C                                      l13837 A5E4  
                                    l17231 C440                                      l18103 A0CA  
                                    l13783 B9AC                                      l13775 B976  
                                    l18031 82BC                                      l18023 825A  
                                    l18015 8212                                      l18007 81A2  
                                    l17311 CABA                                      l17303 CF5C  
                                    l13687 AA0E                                      l13679 A9C0  
                                    l13695 AA36                                      l13855 A6BC  
                                    l13847 A658                                      l13839 A602  
                                    l17241 C21A                                      l17233 C450  
                                    l18105 A1BC                                      l13777 B986  
                                    l13785 B9BE                                      l18041 8314  
                                    l18033 82DA                                      l18025 8266  
                                    l18017 821A                                      l18009 81E8  
                                    l18121 6E44                                      l18201 31B2  
                                    l19001 2436                                      l13857 D464  
                                    l17313 CAE0                                      l17305 CF6C  
                                    l17401 B51A                                      l17321 C4B4  
                                    l13689 AA22                                      l13697 AA54  
                                    l13849 A666                                      l17251 C252  
                                    l17243 C222                                      l17235 C45E  
                                    l13787 D670                                      l13779 B98E  
                                    l18043 8322                                      l18035 82DC  
                                    l18027 82A2                                      l18019 8226  
                                    l18115 6D5C                                      l18107 6BF0  
                                    l18211 31FA                                      l18203 31C4  
                                    l19011 2490                                      l19003 2452  
                                    l13859 D478                                      l17315 CAF0  
                                    l17307 D3FA                                      l17411 B54A  
                                    l17403 B51E                                      l17331 C4E2  
                                    l17323 C4C4                                      l18051 C922  
                                    l17261 C27E                                      l17253 C258  
                                    l17245 C234                                      l17237 C46E  
                                    l17501 4436                                      l18045 8324  
                                    l18037 82E0                                      l18029 82AE  
                                    l18117 6D6C                                      l18109 6C02  
                                    l18141 5CFE                                      l18125 5B14  
                                    l18301 36AC                                      l18221 326C  
                                    l18213 3208                                      l18205 31D2  
                                    l19101 2856                                      l19021 24CC  
                                    l19013 24A6                                      l19005 246E  
                                    l17309 D41E                                      l17405 B532  
                                    l17421 C2A6                                      l17341 C50E  
                                    l17333 C4E8                                      l17317 C4AA  
                                    l18053 C926                                      ?_crc8 0001  
                                    l17271 C740                                      l17263 C710  
                                    l17255 C26E                                      l17247 C23C  
                                    l17239 C478                                      l17351 AE98  
                                    l17511 44C2                                      l17503 4452  
                                    l18039 8304                                      l18135 5C50  
                                    l18127 5B24                                      l18311 36E2  
                                    l18231 32CA                                      l18223 327C  
                                    l18215 322C                                      l18207 31DA  
                                    l19111 28C2                                      l19103 287A  
                                    l19031 2526                                      l19023 2502  
                                    l19015 24C8                                      l19007 247E  
                                    l17407 B534                                      l17431 C2D4  
                                    l17423 C2C8                                      l17415 C28E  
                                    l17335 C4EA                                      l17319 C4AC  
                                    l18063 C954                                      l18071 C5A4  
                                    l17273 C756                                      l17265 C722  
                                    l17281 BFCA                                      l17257 C276  
                                    l17249 C244                                      l17361 AEF0  
                                    l17353 AEA4                                      l17345 AE44  
                                    l17601 47B6                                      l17521 4506  
                                    l17513 44DE                                      l17505 446E  
                                    l18153 5E54                                      l18137 5C64  
                                    l18129 5B3A                                      l18145 5D2A  
                                    l18321 3726                                      l18313 36E6  
                                    l18241 335A                                      l18233 32D0  
                                    l18225 3282                                      l18217 3232  
                                    l18209 31F2                                      l19201 2C12  
                                    l19121 291A                                      l19113 28D4  
                                    l19105 28A0                                      l19041 25BA  
                                    l19033 253A                                      l19025 2512  
                                    l19009 248E                                      l17409 B546  
                                    l17425 C2CC                                      l17433 C2E6  
                                    l17417 C292                                      l17337 C4FA  
                                    l17329 C4D6                                      l17441 D2AA  
                                    l18057 C92C                                      l18049 C8FC  
                                    l18081 C5D0                                      l17275 C75E  
                                    l17267 C72A                                      l17283 BFF0  
                                    l17259 C278                                      l17355 AEAC  
                                    l17347 AE64                                      l17371 76BE  
                                    l17603 47BE                                      l17515 44EA  
                                    l17523 4512                                      l17507 448A  
                                    l17531 453A                                      l18155 5E68  
                                    l18147 5D3E                                      l18331 375A  
                                    l18323 3732                                      l18315 36EA  
                                    l18307 36C0                                      l18251 3408  
                                    l18243 338C                                      l18235 32E8  
                                    l18227 329E                                      l18219 323A  
                                    l18171 30C6                                      l18163 3092  
                                    l19211 2CE2                                      l19203 2C3C  
                                    l19131 2988                                      l19123 2940  
                                    l19115 28E0                                      l19107 28B0  
                                    l19051 2626                                      l19043 25DE  
                                    l19035 2564                                      l19027 2522  
                                    l17435 C2F6                                      l17611 CB10  
                                    l17339 C4FC                                      l17443 D2BC  
                                    l18083 C5DC                                      l18075 C5AA  
                                    l18067 C57A                                      l17277 C764  
                                    l17269 C732                                      l17285 C00E  
                                    l17293 D0E4                                      l17349 AE7A  
                                    l17357 AECE                                      l17373 76EA  
                                    l17365 75F2                                      l17605 47C6  
                                    l17541 456A                                      l17533 4542  
                                    l17525 451A                                      l17517 44F2  
                                    l17509 44A6                                      l17461 4216  
                                    l17453 416A                                      l17701 602C  
                                    l18341 3840                                      l18333 375E  
                                    l18325 373A                                      l18309 36D6  
                                    l18317 36F0                                      l18261 34C2  
                                    l18253 343A                                      l18237 331C  
                                    l18229 32BA                                      l18245 3392  
                                    l18181 30FC                                      l18173 30CA  
                                    l18165 309C                                      l19213 2D0C  
                                    l19205 2C66                                      l19141 2A20  
                                    l19133 298A                                      l19125 2950  
                                    l19117 2908                                      l19109 28B2  
                                    l19061 26A6                                      l19053 2638  
                                    l19045 2604                                      l19037 2576  
                                    l19029 2524                                      l19301 3C6E  
                                    l17437 C2FA                                      l17429 C2D2  
                                    l17621 CB34                                      l17613 CB14  
                                    l17445 D2CE                                      l18093 86B0  
                                    l18413 CFD0                                      l18069 C57E  
                                    l18501 D24C                                      l17287 C034  
                                    l17279 BFC6                                      l17359 AED4  
                                    l17375 774C                                      l17367 761E  
                                    l17607 47E2                                      l17519 44FE  
                                    l17527 4526                                      l17535 454E  
                                    l17543 4576                                      l17551 459E  
                                    l17471 4292                                      l17463 4222  
                                    l17455 417C                                      l18159 5F02  
                                    l18351 38BC                                      l18343 3850  
                                    l18335 3774                                      l18327 374A  
                                    l18319 370A                                      l18263 34CC  
                                    l18255 3464                                      l18271 352C  
                                    l18247 33B0                                      l18239 334E  
                                    l18183 3108                                      l18191 3174  
                                    l18175 30D2                                      l18167 30A8  
                                    l19231 2DE8                                      l19215 2D36  
                                    l19207 2C8E                                      l19151 2A50  
                                    l19127 2952                                      l19119 2918  
                                    l19135 29AC                                      l19071 2702  
                                    l19063 26CE                                      l19055 2644  
                                    l19047 2614                                      l19039 25A8  
                                    l19303 3CCC                                      l17383 B4A4  
                                    l17615 CB2A                                      l18431 BF78  
                                    l18423 BF48                                      l17631 A3DC  
                                    l18095 875E                                      l18087 8686  
                                    l18415 CFD4                                      l18511 D262  
                                    l18503 D250                                      l17289 C038  
                                    l17297 B6A4                                      l17377 77AE  
                                    l17369 7656                                      l17561 45CE  
                                    l17553 45A6                                      l17545 457E  
                                    l17537 4556                                      l17529 452E  
                                    l17481 431E                                      l17473 42AE  
                                    l17465 423E                                      l17457 4198  
                                    l17721 60AE                                      l17713 6064  
                                    l17705 6040                                      l17801 5712  
                                    l18353 38C8                                      l18345 3854  
                                    l18337 37C0                                      l18329 3756  
                                    l18281 35A8                                      l18273 359A  
                                    l18265 34E2                                      l18257 3482  
                                    l18249 33EA                                      l18361 38EC  
                                    l18193 317C                                      l18185 3124  
                                    l18177 30DA                                      l18169 30BA  
                                    l19241 2E86                                      l19233 2DEA  
                                    l19217 2D60                                      l19209 2CB8  
                                    l19161 2A8C                                      l19153 2A52  
                                    l19137 29D0                                      l19129 2978  
                                    l19081 276E                                      l19073 270E  
                                    l19065 26DE                                      l19049 2616  
                                    l19057 2670                                      l19321 3F4E  
                                    l19305 3CCE                                      l17393 B4CA  
                                    l17385 B4A8                                      l17617 CB2E  
                                    l18425 BF4C                                      l18409 C366  
                                    l17449 D2D4                                      l17633 A3FE  
                                    l18097 87B4                                      l18089 86AA  
                                    l18521 C89A                                      l18417 CFDC  
                                    l18505 D256                                _writeBuffer 0277  
                                    l17299 B738                                      l17379 780C  
                                    l17571 4624                                      l17539 4562  
                                    l17491 43AA                                      l17547 458A  
                                    l17483 433A                                      l17475 42CA  
                                    l17555 45B2                                      l17467 425A  
                                    l17563 45DA                                      l17459 420C  
                                    l19411 AD94                                      l17731 60F4  
                                    l17723 60B6                                      l17715 607E  
                                    l17707 6050                                      l17811 574E  
                                    l17803 5722                                      l18371 3940  
                                    l18363 38FE                                      l18355 38CC  
                                    l18347 3858                                      l18339 380C  
                                    l18291 3614                                      l18275 35A4  
                                    l18259 34B4                                      l18195 3182  
                                    l18187 314E                                      l18179 30F6  
                                    l19251 2F1A                                      l19243 2EBA  
                                    l19235 2E14                                      l19227 2DB2  
                                    l19219 2D88                                      l19171 2AF0  
                                    l19163 2AB2                                      l19155 2A64  
                                    l19139 29F8                                      l19091 27D8  
                                    l19083 277E                                      l19075 2736  
                                    l19067 26E0                                      l19059 2694  
                                    l18603 B0B2                                      l19315 3D1C  
                                    l19307 3CDE                                      l17395 B4D2  
                                    l17387 B4C0                                      l17627 CB5C  
                                    l18427 BF72                                      l17651 A4D8  
                                    l17643 A42C                                      l18099 880A  
                                    l18523 C8A2                                      l19331 B9D6  
                                    l18419 CFE6                                      l18443 D506  
                                    l18507 D25A                                      l18451 D4EE  
                                    l18515 D486                                      l19403 CBFA  
                                    l19323 BC9A                                      ?_fabs 003F  
                                    l17581 4696                                      l17573 4630  
                                    l17565 45E2                                      l17557 45BA  
                                    l17549 4592                                      l17493 43C6  
                                    l17485 4356                                      l17477 42E6  
                                    l17469 4276                                      l19421 ADC0  
                                    l19413 ADB0                                      l17741 614C  
                                    l17733 6112                                      l17725 60C6  
                                    l17717 608E                                      l17709 6050  
                                    l17661 5F4A                                      l17901 5A70  
                                    l17821 5784                                      l17813 5754  
                                    l17805 5732                                      l18373 3964  
                                    l18365 3914                                      l18357 38D0  
                                    l18349 38A4                                      l18293 3620  
                                    l18285 35E2                                      l18269 3516  
                                    l18189 3152                                      l18701 89A6  
                                    l19253 2F2A                                      l19245 2EE2  
                                    l19237 2E3E                                      l19229 2DD8  
                                    l19181 2B36                                      l19173 2AF8  
                                    l19165 2AC2                                      l19157 2A74  
                                    l19149 2A40                                      l19093 2800  
                                    l19085 2780                                      l19077 2746  
                                    l19069 26F0                                      l19261 304E  
                                    l18621 73C4                                      l18613 738E  
                                    l19501 7AC8                                      l18605 B0C8  
                                    l19317 3F3C                                      l19309 3D16  
                                    l17389 B4C4                                      l18437 BF9E  
                                    l17637 A404                                      l18525 C8C8  
                                    l19341 BA46                                      l18461 D380  
                                    l18445 D50E                                      l18509 D25E  
                                    l18541 D4CE                                      l18517 D48E  
                                    l19325 BD14                                      l17591 471A  
                                    l17583 46B2                                      l17575 465E  
                                    l17567 45EE                                      l17495 43E2  
                                    l17487 4372                                      l17479 4302  
                                    l17559 45C6                                      l18551 D664  
                                    l19423 AE02                                      l19415 ADBC  
                                    l19407 AD82                                      l17751 618A  
                                    l17743 6152                                      l17735 6114  
                                    l17727 60DA                                      l17719 609E  
                                    l17663 5F5A                                      l17671 5F84  
                                    l17655 5F2C                                      l17911 5AE4  
                                    l17903 5A8A                                      l17823 5794  
                                    l17815 5762                                      l17807 5738  
                                    l18375 3964                                      l18367 3918  
                                    l18359 38D6                                      l18295 3624  
                                    l18287 35E4                                      l18199 3188  
                                    l18383 3992                                      l18703 89B4  
                                    l18711 89FC                                      l19271 3084  
                                    l19263 305E                                      l19255 2F2C  
                                    l19247 2EF2                                      l19239 2E70  
                                    l19191 2B9E                                      l19167 2AC4  
                                    l19159 2A86                                      l19095 2810  
                                    l19079 2748                                      l19087 27A2  
                                    l18631 7422                                      l18623 73DE  
                                    l18615 73A8                                      l19511 7B0E  
                                    l19503 7AD8                                      l18607 B0DC  
                                    l19319 3F3E                                      l17399 B4E6  
                                    l18439 BFC2                                      l18391 C2FE  
                                    l19351 8AF6                                      l18535 C8F6  
                                    l19343 BA56                                      l19335 B9DC  
                                    l18455 D35E                                      l18471 D0C0  
                                    l19327 BD1A                                      l17593 4752  
                                    l17585 46EA                                      l17569 460A  
                                    l17577 4686                                      l17497 43FE  
                                    l17489 438E                                      l19433 AE3C  
                                    l19425 AE04                                      l19409 AD8E  
                                    l17761 61F4                                      l17753 618E  
                                    l17745 615C                                      l17737 6124  
                                    l17729 60E8                                      l17681 5FB0  
                                    l17673 5F94                                      l17665 5F6A  
                                    l17657 5F3A                                      l17913 5AF2  
                                    l17905 5A9E                                      l17841 5816  
                                    l17833 57DE                                      l17825 579A  
                                    l17817 5764                                      l17809 5748  
                                    l18377 3982                                      l18369 393C  
                                    l18297 362C                                      l18289 35F6  
                                    l18385 39B4                                      l18721 8A5E  
                                    l18713 8A0C                                      l18705 89E8  
                                    l19265 3060                                      l19249 2EF4  
                                    l19193 2BA0                                      l19185 2B3E  
                                    l19177 2B18                                      l19169 2AEE  
                                    l19097 2812                                      l19089 27C6  
                                    l18633 743C                                      l18641 74DC  
                                    l18625 73E2                                      l18617 73B0  
                                    l19521 7B5E                                      l19513 7B12  
                                    l19505 7AE0                                      l18609 B116  
                                    l19281 3B0A                                      l19273 39CA  
                                    l18561 AA8E                                      l18553 AA6A  
                                    l18801 7EAE                                      l18393 C302  
                                    l19361 8B4C                                      l19353 8B08  
                                    l17649 A454                                      l18529 C8CE  
                                    l19337 BA02                                      l19329 B9C4  
                                    l18457 D37A                                      l18473 D0C4  
                                    l18465 D0B0                                      l18481 CEDE  
                                    l18449 D4E6                                      l18545 D4A6  
                                    l19601 718C                                      l17595 475A  
                                    l17587 46F2                                      l17579 468E  
                                    l17499 441A                                      l19427 AE18  
                                    l17771 6256                                      l17763 6200  
                                    l17755 619C                                      l17747 616A  
                                    l17739 6136                                      l17683 5FC0  
                                    l17691 5FEA                                      l17675 5F9A  
                                    l17667 5F7A                                      l17659 5F48  
                                    l17915 5AF4                                      l17907 5AB8  
                                    l17851 5860                                      l17843 582E  
                                    l17835 57EA                                      l17827 57BA  
                                    l17819 5774                                      l17931 AC18  
                                    l17923 ABFA                                      l18387 39C0  
                                    l18299 3678                                      l18723 8A6A  
                                    l18715 8A40                                      l18707 89F4  
                                    l19267 3072                                      l19195 2BC6  
                                    l19187 2B68                                      l19179 2B34  
                                    l19099 2844                                      l19259 2F52  
                                    l18651 7554                                      l18643 74F4  
                                    l18635 7448                                      l18627 73EA  
                                    l18619 73B8                                      l18731 D30A  
                                    l19531 7B96                                      l19523 7B6C  
                                    l19515 7B22                                      l19507 7AE4  
                                    l19291 3BD8                                      l19283 3B3C  
                                    l19275 3A3C                                      l18571 AAC4  
                                    l18563 AA9E                                      l18555 AA7A  
                                    l18811 7FA8                                      l18803 7F08  
                                    l18395 C328                                      l19371 8BF6  
                                    l19363 8B7A                                      l19339 BA12  
                                    l18475 D0C8                                      l18467 D0B4  
                                    l18491 CEFA                                      l18483 CEE2  
                                    l18539 D4C6                                      l18547 D4AE  
                                    l19611 71CC                                      l19603 71A4  
                                    l17597 4762                                      l17589 46FE  
                                    l19429 AE1C                                      l17781 62B4  
                                    l17773 626C                                      l17765 620E  
                                    l17757 61CA                                      l17749 617C  
                                    l17693 5FFA                                      l17685 5FD0  
                                    l17677 5FA0                                      l17669 5F7C  
                                    l17909 5AD4                                      l17917 5AFA  
                                    l17861 58B6                                      l17853 5870  
                                    l17845 583A                                      l17837 57F4  
                                    l17829 57CA                                      l17941 AC4C  
                                    l17933 AC26                                      l17925 ABFE  
                                    l18725 8AA2                                      l18717 8A44  
                                    l18709 89F8                                      l19269 3082  
                                    l19197 2BD8                                      l19189 2B8E  
                                    l18653 7588                                      l18645 750C  
                                    l18637 74D2                                      l18629 7404  
                                    l18661 9464                                      l18741 D320  
                                    l18901 48AC                                      l19541 7BD4  
                                    l19533 7BA0                                      l19525 7B76  
                                    l19517 7B28                                      l19509 7AFC  
                                    l19293 3BEA                                      l19285 3B82  
                                    l19277 3A7A                                      l18805 7F3A  
                                    l19373 8C2A                                      l19365 8BAE  
                                    l19357 8B0E                                      l18477 D0CC  
                                    l18469 D0B8                                      l18493 CEFE  
                                    l18485 CEE6                                      l18821 B356  
                                    l19621 71F4                                      l19613 71D4  
                                    l19605 71B0                                      l17599 477E  
                                    l17783 62BA                                      l17775 6286  
                                    l17767 6238                                      l17695 6010  
                                    l17687 5FE0                                      l17679 5FAE  
                                    l17919 5AFE                                      l17871 595A  
                                    l17863 58D2                                      l17855 587C  
                                    l17847 5846                                      l17839 580A  
                                    l17951 AC86                                      l17943 AC54  
                                    l17935 AC2E                                      l17927 AC0C  
                                    l18727 8AD6                                      l18719 8A48  
                                    l18743 C3D6                                      l19199 2C02  
                                    l18655 75A4                                      l18647 7526  
                                    l18639 74D8                                      l18671 94AC  
                                    l18663 9470                                      l18911 48E2  
                                    l18903 48B0                                      l19543 7BD8  
                                    l19519 7B4C                                      l19527 7B7E  
                                    l19287 3BC2                                      l19279 3ACA  
                                    l18591 AB24                                      l18399 C32E  
                                    l19375 8C3C                                      l19367 8BC0  
                                    l19359 8B2A                                      l18815 D624  
                                    l18495 CF02                                      l18487 CEEC  
                                    l18831 B374                                      l19391 CBCA  
                                    l19631 7234                                      l19623 71FC  
                                    l19615 71E4                                      l19607 71B4  
                                    l19551 8336                                      l17785 62BC  
                                    l17777 62A2                                      l17769 623C  
                                    l17697 6020                                      l17689 5FE2  
                                    l17881 59B0                                      l17873 5968  
                                    l17865 58DE                                      l17857 588C  
                                    l17849 5854                                      l17793 56E6  
                                    l17961 ACAC                                      l17953 AC8E  
                                    l17945 AC5C                                      l17937 AC32  
                                    l17929 AC14                                      l18649 7538  
                                    l18681 9558                                      l18673 94CA  
                                    l18665 948A                                      l18737 D30E  
                                    l18729 D306                                      l18921 4934  
                                    l18913 48E6                                      l19537 7BB2  
                                    l19529 7B88                                      l19481 7A46  
                                    l18745 B290                                      l19289 3BD4  
                                    l18585 AAFE                                      l18577 AAD8  
                                    l18569 AAB2                                      l18809 7F50  
                                    l19377 8C60                                      l19369 8BD2  
                                    l18753 D60E                                      l18497 CF06  
                                    l18489 CEF4                                      l18825 B35C  
                                    l19385 CBB0                                      l19641 72C8  
                                    l19633 7252                                      l19625 720C  
                                    l19617 71E8                                      l19609 71C4  
                                    l19561 8388                                      l19553 833A  
                                    l17779 62A6                                      l17699 6028  
                                    l17883 59BE                                      l17875 5986  
                                    l17867 58FA                                      l17859 58A6  
                                    l17795 56F2                                      l17963 ACB4  
                                    l17955 AC90                                      l17947 AC6A  
                                    l17939 AC3A                                      l17971 B404  
                                    l18691 CC90                                      l18675 9524  
                                    l18667 948E                                      l18659 944C  
                                    l18739 D31E                                      l18931 4976  
                                    l18923 494A                                      l18915 4906  
                                    l19539 7BC4                                      l19491 7A9C  
                                    l19483 7A56                                      l19475 7A20  
                                    l18595 B074                                      l18747 B2C4  
                                    l19299 3BF2                                      l18587 AB10  
                                    l18579 AAEA                                      l18771 C11C  
                                    l18763 D3A0                                      l18843 B3B8  
                                    l18819 B342                                      l19387 CBC4  
                                    l19643 72E0                                      l19635 7262  
                                    l19627 7214                                      l19619 71EC  
                                    l19571 842A                                      l19563 8390  
                                    l19555 8356                                      l19661 C5F8  
                                    l17893 5A28                                      l17885 59C2  
                                    l17877 5990                                      l17869 5924  
                                    l17797 5700                                      l17957 AC96  
                                    l17949 AC70                                      l17981 B438  
                                    l17973 B40C                                      l18685 CC4C  
                                    l18677 9528                                      l18669 9492  
                                    l18941 4A48                                      l18933 4986  
                                    l18925 495A                                      l18917 491C  
                                    l18909 48BA                                      l19493 7AAC  
                                    l19485 7A66                                      l19477 7A38  
                                    l19549 7BE0                                      l18597 B090  
                                    l18749 B2E8                                      l18781 6B64  
                                    l18757 D386                                      l18837 B392  
                                    l18861 C6C0                                      l19397 CBE2  
                                    l19645 731A                                      l19629 7224  
                                    l19637 7296                                      l19653 734C  
                                    l19581 8492                                      l19565 83C2  
                                    l19573 845E                                      l19557 8374  
                                    l19671 C61E                                      l19663 C5FE  
                                    l19655 C5E0                                      l17895 5A34  
                                    l17887 59D0                                      l17879 599E  
                                    l17799 5702                                      l17959 AC9C  
                                    l17991 B474                                      l17983 B440  
                                    l17975 B410                                      l17967 B3F2  
                                    l18687 CC7A                                      l18695 8986  
                                    l18679 9540                                      l18951 4ADA  
                                    l18943 4A5C                                      l18935 49AA  
                                    l18927 4962                                      l18919 492C  
                                    l19495 7AAE                                      l19487 7A78  
                                    l19479 7A3C                                      l18599 B09E  
                                    l18767 C0B8                                      l18783 6BA6  
                                    l18775 691A                                      l18791 7DF2  
                                    l18759 D39A                                      l18855 B3EE  
                                    l19647 732C                                      l19639 72A8  
                                    l19591 711A                                      l19583 84AE  
                                    l19575 8472                                      l19567 83F4  
                                    l19559 8384                              ___fltol@sign1 0017  
                                    l19681 C63A                                      l19673 C622  
                                    l19665 C604                                      l19657 C5E6  
                                    l17897 5A42                                      l17889 59FE  
                                    l17993 B47A                                      l17985 B448  
                                    l17977 B41E                                      l17969 B3F6  
                                    l18689 CC88                                      l18697 898E  
                                    l18961 4B4A                                      l18953 4ADE  
                                    l18945 4AA4                                      l18937 49CE  
                                    l18929 496C                                      l18881 481A  
                                    l19497 7AB2                                      l19489 7A8A  
                                    l18769 C0D0                                      l18785 6BCE  
                                    l18777 69A2                                      l18793 7E02  
                                    l18849 B3D6                                      l18873 C6F4  
                                    l18865 C6C6                                      l19649 7334  
                                    l19593 711E                                      l19577 8482  
                                    l19569 8426                                      l19921 BC16  
                                    l19683 C63E                                      l19675 C626  
                                    l19667 C60C                                      l19659 C5F2  
                                    l17899 5A6C                                      l17987 B456  
                                    l17995 B480                                      l17979 B426  
                          __end_of___aldiv 9FC0                                      l18699 8996  
                                    l18971 4BD8                                      l18963 4B6A  
                                    l18955 4AEA                                      l18947 4ABA  
                                    l18939 4A04                                      l18891 4852  
                                    l18883 4838                                      l19499 7AB6  
                                    l18779 6A12                                      l18795 7E12  
                                    l18875 C70A                                      l18867 C6DC  
                                    l18859 C6AC                                      l19595 7132  
                                    l19579 848A                                      l19931 BC2C  
                                    l19923 BC1A                                      l19677 C62A  
                                    l19669 C612                                      l17997 B490  
                                    l17989 B46C                                      l18973 4BE0  
                                    l18965 4B8E                                      l18957 4B0A  
                                    l18949 4ACA                                      l18981 4CB6  
                                    l18885 4842                                      l18797 7E46  
                                    l18789 7DF2                                      l19597 7150  
                                    l19589 84B6                                      l19941 BC40  
                                    l19933 BC30                                      l19925 BC1E  
                                    l19917 BC0C                                      l19679 C62E  
                                    l17999 B498                                      l18991 23FA  
                                    l18983 4CD4                                      l18975 4C04  
                                    l18967 4BB2                                      l18959 4B2A  
                                    l18895 485A                                      l18887 484A  
                                    l18879 47F4                                      l18799 7E7A  
                                    l19599 7172                                      l19951 BC7C  
                                    l19943 BC44                                      l19935 BC34  
                                    l19927 BC24                                      l19919 BC10  
                                    l18993 2402                                      l18985 4CF0  
                                    l18969 4BC8                                      l19953 BC8E  
                                    l19945 BC56                                      l19937 BC38  
                                    l19929 BC28                                      l18995 2406  
                                    l18987 23B6                                      l18899 4882  
                                    l18979 4C0C                                      l19947 BC66  
                                    l19939 BC3C                                      l18997 2424  
                                    l18989 23DE                                      l19949 BC6A  
                                    l18999 2434                            __end_of___almod A8A2  
                                    ?_fmod 0079                            __end_of___fladd 56E6  
                                    ?_main 0001                     __size_of_ymd_to_scalar 00BE  
                          __end_of___fldiv 62C8                            __end_of___awdiv ACBE  
                          __end_of___flneg D03E                                      STR_10 2391  
                                    STR_11 2391                                      STR_20 2391  
                                    STR_12 2391                                      STR_21 2391  
                                    STR_13 2391                                      STR_30 2391  
                                    STR_22 2391                                      STR_14 2391  
                                    STR_31 2391                                      STR_23 2391  
                                    STR_15 2391                                      STR_32 2391  
                                    STR_24 2391                                      STR_16 2391  
                                    STR_40 23A6                                      STR_33 2391  
                                    STR_25 2391                                      STR_17 2391  
                                    STR_41 23A6                                      STR_50 2380  
                                    STR_34 2391                                      STR_26 2391  
                                    STR_18 2391                                      STR_42 23A6  
                                    STR_51 2380                                      STR_35 2391  
                                    STR_27 2391                                      STR_19 2391  
                                    STR_43 23A6                                      STR_28 2391  
                                    STR_44 23A6                                      STR_36 23A6  
                                    STR_52 2367                            __end_of___awmod B4A2  
                                    STR_29 2391                                      STR_37 23A6  
                                    STR_53 239D                                      STR_45 2385  
                                    STR_46 2380                                      STR_38 23A6  
                                    STR_47 237B                                      STR_39 23A6  
                                    STR_48 2380                                      STR_49 2371  
                          __end_of___flmul 5B10          __size_of_USBCtrlEPServiceComplete 0150  
                          __end_of___flsub CE56                            __end_of___fltol A2D8  
                                    u10000 D544                                      u10001 D540  
                          __end_of___lldiv B7EE                                      u10101 8DD0  
                                    u10110 8DE4                                      u10111 8DE0  
                                    u10200 91F4                                      u10201 91F0  
                                    u10121 8E08                                      u10210 9262  
                                    u10130 8E1C                                      u10211 925E  
                                    u10131 8E18                                      u11100 9924  
                                    u10300 A344                                      u10220 9292  
                                    u10140 8E7E                                      u11101 9920  
                                    u10301 A340                                      u10221 928E  
                                    u10141 8E7A                                      u11030 C69E  
                                    u11110 993A                                      u10310 A362  
                                    u10230 92A6                                      u10150 8EA8  
                                    u11031 C69A                                      u11111 9936  
                                    u10311 A35E                                      u10231 92A2  
                                    u10151 8EA4                                      u11120 BBB2  
                                    u10320 A382                                      u10400 A2A6  
                                    u10240 92CE                                      u10160 8EBC  
                                    u10080 D198                                      u20000 3170  
                                    u11200 C7AC                                      u11121 BBAE  
                                    u10321 A37E                                      u10401 A2A2  
                                    u10241 92CA                                      u10161 8EB8  
                                    u10081 D194                                      u20001 316C  
                                    u11201 C7A8                                      u11130 BBD2  
                                    u10330 A3D2                                      u10410 A2B6  
                                    u10250 92EE                                      u10170 8EE4  
                                    u10090 D1A8                                      u20010 31C4  
                                    u11210 C7BC                                      u11131 BBCE  
                                    u10331 A3CE                                      u10411 A2B2  
                                    u10251 92EA                                      u10171 8EE0  
                                    u10091 D1A4                                      u20011 31C0  
                                    u11211 C7B8                                      u11140 BC0A  
                                    u11060 98A0                                      u10340 D01C  
                                    u10260 B770                                      u10420 BE56  
                                    u10180 8F04                                      u20100 343A  
                                    u20020 31D2                                      u11300 9B5A  
                                    u11220 C7CC                                      u12100 67F4  
                                    u12020 665C                                      u11141 BC06  
                                    u11061 989C                                      u11045 982E  
                                    u10341 D018                                      u10261 B76C  
                                    u10421 BE52                                      u10181 8F00  
                                    u20101 3436                                      u20021 31CE  
                                    u11301 9B56                                      u11221 C7C8  
                                    u12101 67F0                                      u12021 6658  
                                    u11070 98B6                                      u10350 A1E8  
                                    u10270 B792                                      u10430 BE78  
                                    u10190 91CA                                      u20110 3464  
                                    u20030 3208                                      u11310 9B78  
                                    u11230 9A76                                      u12110 6826  
                                    u12030 666A                                      u11071 98B2  
                                    u11055 9840                                      u10351 A1E4  
                                    u10271 B78E                                      u10431 BE74  
                                    u10191 91C6                                      u20111 3460  
                                    u20031 3204                                      u11311 9B74  
                                    u11231 9A72                                      u12111 6822  
                                    u12031 6666                                      u11080 98D2  
                                    u10360 A21C                                      u10280 B7BA  
                                    u10440 BE96                                      u20200 374A  
                                    u20120 3482                                      u20040 326C  
                                    u11400 9F22                                      u21000 28D4  
                                    u11240 9A88                                      u13000 520E  
                                    u11320 CDD6                                      u12120 686C  
                                    u12040 668C                                      u11081 98CE  
                                    u10281 B7B6                                      u10441 BE92  
                                    u20201 3746                                      u20121 347E  
                                    u20041 3268                                      u11401 9F1E  
                                    u21001 28D0                                      u11241 9A84  
                                    u13001 520A                                      u11321 CDD2  
                                    u12121 6868                                      u12041 6688  
                                    u11090 98F4                                      u10290 A306  
                                    u10370 A24A                                      u20210 38B8  
                                    u20130 34B4                                      u20050 32CA  
                                    u11410 9F44                                      u21010 2A3C  
                                    u11250 9A98                                      u13010 5222  
                                    u10450 AB68                                      u12130 689E  
                                    u12050 66BE                                      u11091 98F0  
                                    u10291 A302                                      u10371 A246  
                                    u20211 38B4                                      u20131 34B0  
                                    u20051 32C6                                      u11411 9F40  
                                    u21011 2A38                                      u11251 9A94  
                                    u13011 521E                                      u10451 AB64  
                                    u12131 689A                                      u12051 66BA  
                                    u12300 CE92                                      u10380 A25E  
                                    u20220 38E8                                      u20140 35DE  
                                    u20060 334E                                      u11420 9F6C  
                                    u21020 2B14                                      u11260 9ABE  
                                    u11180 C788                                      u10460 ABBC  
                                    u12140 68E4                                      u12060 6704  
                                    u20300 C350                                      u21100 B9D6  
                          ___awdiv@divisor 0009                                      u12301 CE8E  
                                    u10381 A25A                                      u10365 A212  
                                    u20221 38E4                                      u20141 35DA  
                                    u20061 334A                                      u11421 9F68  
                                    u21021 2B10                                      u11261 9ABA  
                                    u11181 C784                                      u10461 ABB4  
                                    u12141 68E0                                      u12061 6700  
                                    u20301 C34C                                      u21101 B9D2  
                                    u12150 CA28                                      u12310 D05E  
                                    u10390 A286                                      u20230 38FE  
                                    u20150 35F6                                      u20070 338C  
                                    u11430 9F9E                                      u21030 2C12  
                                    u11270 9ADC                                      u11190 C79A  
                                    u12070 6736                                      u20310 C362  
                                    u21110 BA02                                      u12151 CA24  
                                    u12311 D05A                                      u10391 A282  
                                    u20231 38FA                                      u20151 35F2  
                                    u20071 3388                                      u11431 9F9A  
                                    u21031 2C0E                                      u11271 9AD8  
                                    u11191 C796                                      u12071 6732  
                                    u20311 C35E                                      u21111 B9FE  
                                    u10800 C84A                                      u12160 CA44  
                                    u21200 AE14                                      u12320 D072  
                                    u12400 AFEA                                      u20240 3914  
                                    u20160 3614                                      u20080 33B0  
                                    u11440 A7C8                                      u21040 2E70  
                                    u11280 9AEC                                      u20400 AAEA  
                                    u12080 677C                                      u20320 BF72  
                                    u21120 8B08                                      u10801 C846  
                                    u12161 CA40                                      u21201 AE10  
                                    u12321 D06E                                      u12401 AFE6  
                          __end_of___llmod BEC8                                      u20241 3910  
                                    u20161 3610                                      u20081 33AC  
                                    u11441 A7C4                                      u21041 2E6C  
                                    u11281 9AE8                                      u20401 AAE6  
                                    u12081 6778                                      u20321 BF6E  
                                    u21121 8B04                                      u10810 C85C  
                                    u12170 CA5C                                      u21210 AE38  
                                    u12330 C7E6                     __end_of_USBDeviceTasks 711A  
                                    u12410 B008                                      u20250 393C  
                                    u20170 36D2                                      u20090 3408  
                                    u11450 A7EA                                      u11290 9B1E  
                                    u21050 3A7A                                      u20410 AB10  
                                    u12090 67AE                                      u20330 BF9A  
                                    u21130 8B2A                                      u10811 C858  
                                    u12171 CA58                                      u21211 AE34  
                                    u12331 C7E2                                      u12411 B004  
                                    u20251 3938                                      u20171 36CE  
                                    u20091 3404                                      u11451 A7E6  
                                    u11291 9B1A                                      u21051 3A76  
                                    u20411 AB0C                                      u12091 67AA  
                                    u20331 BF96                                      u21131 8B26  
                                    u10820 C86A                                      u10900 9060  
                                    u12340 C800                                      u12500 809E  
                                    u12420 B050                                      u12260 BEF2  
                                    u20260 3964                                      u20180 370A  
                                    u11380 9EC6                                      u11460 A810  
                                    u11700 BB06                                      u20500 7526  
                                    u21300 7AC8                                      u10468 ABBE  
                                    u20420 B09E                                      u21060 3B3C  
                                    u21140 8BD2                                      u20340 D37A  
                                    u10821 C866                                      u10901 905C  
                                    u12341 C7FC                                      u12501 809A  
                                    u12421 B04C                                      u12261 BEEE  
                                    u20261 3960                                      u20181 3706  
                                    u11381 9EC2                                      u11461 A80C  
                                    u11701 BB02                                      u20501 7522  
                                    u21301 7AC4                                      u20421 B09A  
                                    u21061 3B38                                      u21141 8BCE  
                                    u20341 D376                                      u10830 C898  
                                    u10910 9090                                      u12270 8CCC  
                                    u12350 C81A                                      u12510 80CA  
                                    u12430 7FCE                                      u20270 3982  
                                    u20190 3726                                      u11390 9EE8  
                                    u11470 A832                                      u11710 BB18  
                                    u20510 7538                                      u21310 7AD8  
                                    u20430 B0C8                                      u21070 3BEA  
                                    u21150 8C3C                                      u20350 C8C8  
                                    u10831 C894                                      u10911 908C  
                                    u12271 8CC8                                      u12351 C816  
                                    u12431 7FCA                                      u20271 397E  
                                    u20191 3722                                      u11391 9EE4  
                                    u11471 A82E                                      u11711 BB14  
                                    u20511 7534                                      u21311 7AD4  
                                    u20431 B0C4                                      u21071 3BE6  
                                    u21151 8C38                                      u20351 C8C4  
                                    u11800 9CDC                                      u10920 90D4  
                                    u10840 8F28                                      u12360 AF1E  
                                    u12280 8CFC                                      u12520 80E8  
                                    u12440 7FE4                                      u20280 39B4  
                                    u11480 A850                                      u20600 8A5E  
                                    u11720 BB60                                      u12600 4D5C  
                                    u20520 75A4                                      u20440 73DE  
                                    u21320 7B0E                                      u13400 C9CC  
                                    u14040 7C4C                                      u21080 3CDE  
                                    u20360 C8F2                                      u21160 CBC4  
                                    u14200 A9F6                                      u21400 8426  
                                    u11801 9CD8                                      u10921 90D0  
                                    u10841 8F24                                      u12361 AF1A  
                                    u12281 8CF8                                      u12521 80E4  
                                    u12441 7FE0                                      u20281 39B0  
                                    u11481 A84C                                      u20601 8A5A  
                                    u12601 4D58                                      u20521 75A0  
                                    u20441 73DA                                      u21321 7B0A  
                                    u13401 C9C8                                      u14041 7C48  
                                    u21081 3CDA                                      u20361 C8EE  
                                    u21161 CBC0                                      u14201 A9F2  
                                    u21401 8422                                      u11810 9CFC  
                                    u10930 90E6                                      u10850 8F38  
                                    u12370 AF6A                                      u12290 8D78  
                                    u12530 8114                                      u12450 7FFC  
                                    u11490 A880                                      u20610 8AEC  
                                    u11730 BB72                                      u12610 4D6E  
                                    u20450 7404                                      u20530 948A  
                                    u21330 7B4C                                      u21250 7A34  
                                    u13410 C9EC                                      u14050 7C86  
                                    u21090 3F4E                                      u20370 AA7A  
                                    u20290 C328                                      u21170 CBDE  
                                    u14210 AA22                                      u21410 8472  
                                    u11811 9CF8                                      u10931 90E2  
                                    u10851 8F34                                      u12371 AF66  
                                    u12291 8D74                                      u12451 7FF8  
                                    u11491 A87C                                      u20611 8AE8  
                                    u11731 BB6E                                      u12611 4D6A  
                                    u20451 7400                                      u20531 9486  
                                    u21331 7B48                                      u21251 7A30  
                                    u13411 C9E8                                      u14051 7C82  
                                    u21091 3F4A                                      u20371 AA76  
                                    u20291 C324                                      u21171 CBDA  
                                    u14211 AA1E                                      u21411 846E  
                                    u13420 CA94                                      u11820 9D28  
                                    u10940 9122                                      u10860 8F4E  
                                    u12380 AFB6                                      u12540 8132  
                                    u12460 8010                                      u14300 B964  
                                    u10780 CC2E                                      u11900 B174  
                                    u12700 4E3A                                      u12620 4D80  
                                    u20460 741E                                      u20540 94AC  
                                    u11740 CD56                                      u20620 D330  
                                    u21340 7B5E                                      u21260 7A66  
                                    u13340 C14A                                      u14060 7CD0  
                                    u20380 AA9E                                      u20700 B3EA  
                                    u21180 CBF6                                      u13500 88D2  
                                    u14140 8520                                      u21420 8482  
                                    u13421 CA90                                      u11821 9D24  
                                    u10941 911E                                      u10861 8F4A  
                                    u12381 AFB2                                      u12541 812E  
                                    u12517 80C0                                      u12461 800C  
                                    u14301 B960                                      u11901 B170  
                                    u12701 4E36                                      u12621 4D7C  
                                    u20461 741A                                      u20541 94A8  
                                    u11741 CD52                                      u20621 D32C  
                                    u21341 7B5A                                      u21261 7A62  
                                    u13341 C146                                      u14061 7CCC  
                                    u20381 AA9A                                      u20701 B3E6  
                                    u21181 CBF2                                      u13501 88CE  
                                    u14141 851C                                      u21421 847E  
                                    u13430 95FE                                      u21190 ADB0  
                                    u11830 9D54                                      u10950 91AE  
                                    u10870 8FCA                                      u12550 8144  
                                    u12470 8026                                      u12390 AFD4  
                                    u14310 B986                                      u10790 CC3E  
                                    u11910 B1C0                                      u12710 4E4C  
                                    u12630 4D92                                      u20470 743C  
                                    u20550 94C6                                      u11750 CD7A  
                                    u21350 7BC4                                      u21270 7A78  
                                    u13350 C160                                      u14070 7D62  
                                    u20390 AAC4                                      u20630 D39A  
                                    u20710 C6C0                                      u21430 7132  
                                    u13510 8934                                      u14150 855E  
                                    u13431 95FA                                      u21191 ADAC  
                                    u11831 9D50                                      u10951 91AA  
                                    u10871 8FC6                                      u12551 8140  
                                    u12471 8022                                      u12391 AFD0  
                                    u14311 B982                                      u11727 BB56  
                                    u10791 CC3A                                      u11911 B1BC  
                                    u12711 4E48                                      u12631 4D8E  
                                    u20471 7438                                      u20551 94C2  
                                    u11751 CD76                                      u21351 7BC0  
                                    u21271 7A74                                      u13351 C15C  
                                    u14071 7D5E                                      u20391 AAC0  
                                    u20631 D396                                      u20711 C6BC  
                                    u21431 712E                                      u13511 8930  
                                    u14151 855A                                      u11840 9D9C  
                                    u10960 9FD8                                      u10880 8FE0  
                                    u11760 CBAE                                      u12560 8156  
                                    u12480 805E                                      u14320 B9BE  
                                    u11920 B1D8                                      u12800 4EEE  
                                    u12720 4E5E                                      u12640 4DB4  
                                    u20480 74F4                                      u20560 9540  
                                    u20800 4A04                                      u21360 7BD4  
                                    u21280 7A8A                                      u13360 C18E  
                                    u20640 7F3A                                      u20720 C6F0  
                                    u21440 718C                                      u14160 85B8  
                                    u11841 9D98                                      u10961 9FD4  
                                    u10881 8FDC                                      u11761 CBAA  
                                    u12561 8152                                      u12537 810A  
                                    u12481 805A                                      u14321 B9BA  
                                    u11921 B1D4                                      u12801 4EEA  
                                    u12721 4E5A                                      u12641 4DB0  
                                    u20481 74F0                                      u20561 953C  
                                    u20801 4A00                                      u21361 7BD0  
                                    u21281 7A86                                      u13361 C188  
                                    u20641 7F36                                      u20721 C6EC  
                                    u21441 7188                                      u14161 85B4  
                                    u12570 CFB2                                      u11770 C1B8  
                                    u10890 8FFE                                      u12490 806E  
                                    u10970 D344                                      u11850 D28C  
                                    u12810 4F00                                      u12730 4E70  
                                    u12650 4DC6                                      u20490 750C  
                                    u20570 9558                                      u11930 9950  
                                    u20810 4ACA                                      u20730 481A  
                                    u21290 7A9C                                      u13370 C190  
                                    u20650 B356                                      u21450 71A4  
                                    u14170 8618                                      u21370 8374  
                                    u14330 A5E4                                      u12571 CFAE  
                                    u11771 C1B4                                      u10891 8FFA  
                                    u12491 806A                                      u10787 CC24  
                                    u10971 D340                                      u11851 D288  
                                    u12811 4EFC                                      u12731 4E6C  
                                    u12651 4DC2                                      u20491 7508  
                                    u20571 9554                                      u11931 994C  
                                    u20811 4AC6                                      u20731 4816  
                                    u21291 7A98                                      u20651 B352  
                                    u21451 71A0                                      u14171 8614  
                                    u21371 8370                                      u14331 A5E0  
                                    u11780 C1D4                                      u13700 6F38  
                                    u20580 CC88                                      u20900 2536  
                                    u11860 BD42                                      u12900 4FB4  
                                    u12820 4F12                                      u12740 4E82  
                                    u12660 4DD8                                      u11940 9962  
                                    u20820 4ADA                                      u20740 487E  
                                    u13380 C974                                      u20660 B370  
                                    u21460 7224                                      u14180 A9A0  
                                    u21380 83C2                                      u14340 A602  
                                    u11781 C1D0                                      u13701 6F34  
                                    u20581 CC84                                      u20901 2532  
                                    u11861 BD3E                                      u12901 4FB0  
                                    u12821 4F0E                                      u12741 4E7E  
                                    u12661 4DD4                                      u12581 4D1C  
                                    u11941 995E                                      u20821 4AD6  
                                    u20741 487A                                      u13381 C970  
                                    u20661 B36C                                      u21461 7220  
                                    u14181 A99C                                      u21381 83BE  
                                    u14341 A5FE                                      u11790 9CC2  
                                    u13710 6F4C                                      u20590 89B4  
                                    u20910 2576                                      u11870 BD54  
                                    u12910 4FCC                                      u12830 4F24  
                                    u12750 4E94                                      u12670 4DEA  
                                    u11950 99A2                                      u20830 4BD8  
                                    u20750 48AC                                      u13390 C994  
                                    u20670 B38E                                      u21470 72A8  
                                    u14190 A9B2                                      u21390 83F4  
                                    u14350 A62C                                      u11791 9CBE  
                                    u13711 6F48                                      u20591 89B0  
                                    u20911 2572                                      u11871 BD50  
                                    u12911 4FC8                                      u12831 4F20  
                                    u12751 4E90                                      u12671 4DE6  
                                    u12591 4D28                                      u11951 999E  
                                    u20831 4BD4                                      u20751 48A8  
                                    u13391 C990                                      u20671 B38A  
                                    u21471 72A4                                      u14191 A9AE  
                                    u21391 83F0                                      u14351 A628  
                                    u13800 7010                                      u13720 6F5C  
                                    u13640 6EA4                                      u14280 B93E  
                                    u20920 25A8                                      u11880 BD86  
                                    u12920 4FF8                                      u12840 4F36  
                                    u12760 4EA6                                      u12680 4DFC  
                                    u11960 99B4                                      u20840 4CD4  
                                    u20760 4902                                      u20680 B3B4  
                                    u21480 731A                                      u14360 A682  
                                    u13801 700C                                      u13721 6F58  
                                    u13641 6EA0                                      u14281 B93A  
                                    u20921 25A4                                      u11881 BD82  
                                    u12921 4FF4                                      u12841 4F32  
                                    u12761 4EA2                                      u12681 4DF8  
                                    u11961 99B0                                      u20841 4CD0  
                                    u20761 48FE                                      u20681 B3B0  
                                    u21481 7316                                      u14361 A67E  
                                    u13810 7022                                      u13730 6F76  
                                    u13650 6ECE                                      u14290 B950  
                                    u20930 25BA                                      u11890 BDAA  
                                    u12930 500A                                      u12850 4F48  
                                    u12770 4EB8                                      u12690 4E1E  
                                    u11970 9A20                                      u20850 4CF0  
                                    u20770 492C                                      u20690 B3D2  
                                    u13490 8870                                      u14370 A6BC  
                                    u21810 BC56                  ?_USBCtrlEPServiceComplete 0001  
                                    u13811 701E                                      u13731 6F72  
                                    u13651 6ECA                                      u14291 B94C  
                                    u20931 25B6                                      u11891 BDA6  
                                    u12931 5006                                      u12851 4F44  
                                    u12771 4EB4                                      u12691 4E1A  
                                    u11971 9A1C                                      u20851 4CEC  
                                    u20771 4928                                      u20691 B3CE  
                                    u13491 886C                                      u14371 A6B8  
                                    u21811 BC52                                      u13820 7032  
                                    u13740 6F86                                      u13660 6EE4  
                                    u20940 2638                                      u20860 23DE  
                                    u12940 501E                                      u12860 4F5A  
                                    u12780 4ECA                                      u11980 9A3A  
                                    u20780 495A                                      u14380 D478  
                                    u21820 BC66                                      u13821 702E  
                                    u13741 6F82                                      u13661 6EE0  
                                    u20941 2634                                      u20861 23DA  
                                    u12941 501A                                      u12861 4F56  
                                    u12781 4EC6                                      u11981 9A36  
                                    u20781 4956                                      u14381 D474  
                                    u21821 BC62                                      u13830 7062  
                                    u13750 6F98                                      u13670 6EF2  
                                    u20950 26A6                                      u20870 2452  
                                    u12950 505E                                      u12870 4F6C  
                                    u12790 4EDC                                      u20790 4986  
                                    u21830 BC7C                                      u13831 705E  
                                    u13751 6F94                                      u13671 6EEE  
                                    u20951 26A2                                      u20871 244E  
                                    u12951 505A                                      u12871 4F68  
                                    u12791 4ED8                                      u20791 4982  
                                    u21831 BC78                                      u13840 7078  
                                    u13760 6FA8                                      u13680 6F14  
                                    u20960 2702                                      u20880 246E  
                                    u12960 5140                                      u12880 4F7E  
                                    u21840 BC8E                                      u13841 7074  
                                    u13761 6FA4                                      u13681 6F10  
                                    u20961 26FE                                      u20881 246A  
                                    u12961 5138                                      u12881 4F7A  
                                    u21841 BC8A                                      u13850 708A  
                                    u13770 6FDC                                      u13690 6F24  
                                    u20970 27D8                                      u20890 2512  
                                    u12890 4FA2                                      u13851 7086  
                                    u13771 6FD8                                      u13691 6F20  
                                    u20971 27D4                                      u20891 250E  
                                    u12891 4F9E                                      u13860 70AA  
                                    u13780 6FEE                                      u20980 2844  
                                    u12980 5184                                      u13861 70A6  
                                    u13781 6FEA                                      u20981 2840  
                                    u12981 517C                                      u13870 70E0  
                                    u13790 7000                                      u20990 2856  
                                    u13871 70DC                                      u13791 6FFC  
                                    u20991 2852                                      u19000 43E2  
                                    u13880 7116                                      u19001 43DE  
                                    u13881 7112                                      u19010 43FE  
                                    u12978 5142                                      u19011 43FA  
                                    u21867 C6D0                                      u19100 460A  
                                    u19020 441A                                      u19101 4606  
                                    u19021 4416                                      u21877 C6FE  
                                    u19110 4624                                      u19030 4436  
                                    u12998 5186                                      u19111 4620  
                                    u19031 4432                                      u19120 46B2  
                                    u19040 4452                                      u19200 5F48  
                                    u19121 46AE                                      u19041 444E  
                                    u19201 5F44                                      u19130 471A  
                                    u19050 446E                                      u19210 5F5A  
                                    u19131 4716                                      u19051 446A  
                                    u19211 5F56                                      u18500 C722  
                                    u19140 477E                                      u19060 448A  
                                    u19300 6112                                      u19220 5F6A  
                                    u18501 C71E                                      u19141 477A  
                                    u19061 4486                                      u19301 610E  
                                    u19221 5F66                                      u18510 C740  
                                    u19070 44A6                                      u19310 6136  
                                    u19230 5FAE                                      u19150 CB2A  
                                    u18511 C73C                                      u19071 44A2  
                                    u19311 6132                                      u19231 5FAA  
                                    u19151 CB26                                      u18520 C756  
                                    u19080 44C2                                      u19400 6256  
                                    u19320 614C                                      u19240 5FC0  
                                    u18600 D41A                                      u19160 CB58  
                                    u18521 C752                                      u19081 44BE  
                                    u19401 6252                                      u19321 6148  
                                    u19241 5FBC                                      u18601 D416  
                                    u19161 CB54                                      u18530 BFF0  
                                    u18450 C45E                                      u19090 44DE  
                                    u19410 6286                                      u19330 616A  
                                    u19250 5FD0                                      u18610 D42E  
                                    u19170 A3FE                                      u18531 BFEC  
                          __end_of___lwdiv C28E                                      u18451 C45A  
                                    u19091 44DA                                      u19411 6282  
                                    u19331 6166                                      u19251 5FCC  
                                    u18611 D42A                                      u19171 A3FA  
                                    u18540 C00E                                      u18460 C498  
                                    u18700 AE7A                                      u19420 62B4  
                                    u19340 618A                                      u19260 6010  
                                    u19500 57CA                                      u18620 D43E  
                                    u19180 A428                                      u18541 C00A  
                                    u18461 C494                                      u18701 AE76  
                                    u19421 62B0                                      u19341 6186  
                                    u19261 600C                                      u19501 57C6  
                                    u18621 D43A                                      u19181 A424  
                                    u18550 C034                                      u18470 C234  
                                    u18710 AE98                                      u19350 619C  
                                    u19270 6050                                      u19510 5944  
                                    u19430 5700                                      u18630 CACA  
                                    u19190 A450                                      u18551 C030  
                                    u18471 C230                                      u18711 AE94  
                                    u19351 6198                                      u19271 604C  
                                    u19431 56FC                                      u18631 CAC6  
                                    u19191 A44C                                      u18480 C252  
                                    u18720 761E                                      u19360 61CA  
                                    u19280 60C6                                      u19600 5AB8  
                                    u19520 599E                                      u19440 5712  
                                    u18640 CADA                                      u18560 CF6C  
                                    u18800 C2E6                                      u18481 C24E  
                                    u18721 761A                                      u19361 61C6  
                                    u19281 60C2                                      u19601 5AB4  
                                    u19521 599A                                      u19441 570E  
                                    u18641 CAD6                                      u18561 CF68  
                                    u18801 C2E2                                      u18490 C26E  
                                    u18730 764A                                      u19370 61E0  
                                    u19290 60E8                                      u19610 5AF2  
                                    u19530 59BE                                      u19450 5722  
                                    u18650 CAF0                                      u18570 CF7E  
                                    u18810 C2F6                                      u18491 C26A  
                                    u18731 7646                                      u19371 61DC  
                                    u19291 60E4                                      u19611 5AEE  
                                    u19531 59BA                                      u19515 593A  
                                    u19451 571E                                      u18651 CAEC  
                                    u18571 CF7A                                      u18811 C2F2  
                                    u18900 42CA                                      u19380 61F4  
                                    u19540 59D0                                      u19460 5762  
                                    u19620 AC0C                                      u19700 B438  
                                    u18660 CB0A                                      u18580 CF90  
                                    u18740 B4C0                                      u18820 D2CE  
                                    u18901 42C6                                      u19381 61F0  
                                    u19541 59CC                                      u19461 575E  
                                    u19621 AC08                                      u19701 B434  
                                    u18661 CB06                                      u18581 CF8A  
                                    u18741 B4BC                                      u18821 D2CA  
                                    u18910 42E6                                      u19390 620E  
                                    u19550 59FE                                      u19470 5774  
                                    u19630 AC26                                      u19710 B456  
                                    u18590 D40A                                      u18750 B4E2  
                                    u18670 C4D6                                      u18911 42E2  
                                    u18831 4174                                      u19391 620A  
                                    u19551 59FA                                      u19471 5770  
                                    u19631 AC22                                      u19711 B452  
                                    u18591 D406                                      u18751 B4DE  
                                    u18671 C4D2                                      u18920 4302  
                                    u18840 4198                                      u19800 82CC  
                                    u19560 5A14                                      u19480 5784  
                                    u19640 AC4C                                      u19720 B46C  
                                    u18760 B51A                                      u18680 C4FA  
                                    u18921 42FE                                      u18841 4194  
                                    u19801 82C8                                      u19561 5A10  
                                    u19481 5780                                      u19641 AC48  
                                    u19721 B468                                      u18761 B516  
                                    u18681 C4F6                                      u18930 431E  
                                    u18850 423E                                      u19810 82DA  
                                    u19570 5A28                                      u19490 57BA  
                                    u19650 AC6A                                      u19730 B490  
                                    u18586 CF92                                      u18770 B546  
                                    u18690 C50E                                      u18931 431A  
                                    u18851 423A                                      u19811 82D6  
                                    u19571 5A24                                      u19491 57B6  
                                    u19651 AC66                                      u19731 B48C  
                                    u18771 B542                                      u18691 C50A  
                                    u18940 433A                                      u18860 425A  
                                    u19820 8314                                      u19740 8194  
                                    u19580 5A42                                      u19660 AC86  
                                    u18780 C2A2                                      u18941 4336  
                                    u18861 4256                                      u19821 8310  
                                    u19741 8190                                      u19581 5A3E  
                                    u19661 AC82                                      u18781 C29E  
                                    u18950 4356                                      u18870 4276  
                                    u19830 8322                                      u19750 81A2  
                                    u19590 5A8A                                      u19910 6C02  
                                    u19670 ACAC                                      u18790 C2C8  
                                    u18951 4352                                      u18871 4272  
                                    u19831 831E                                      u19751 819E  
                                    u19591 5A86                                      u19911 6BFE  
                                    u19671 ACA8                                      u18791 C2C4  
                                    u18960 4372                                      u18880 4292  
                                    u19760 81FE                                      u19920 6D6C  
                                    u19680 B404                                      u19840 C922  
                                    u18961 436E                                      u18881 428E  
                                    u19761 81FA                                      u19921 6D68  
                                    u19681 B400                                      u19905 8734  
                                    u19841 C91E                                      u18970 438E  
                                    u18890 42AE                                      u19770 8254  
                                    u19690 B41E                                      u19930 5B24  
                                    u19906 873E                                      u19850 C950  
                                    u18971 438A                                      u18891 42AA  
                                    u19771 8250                                      u19691 B41A  
                                    u19931 5B20                                      u19907 874E  
                                    u19851 C94C                                      u18980 43AA  
                                    u19780 829E                                      u19940 5B3A  
                                    u19860 C5A4                                      u18981 43A6  
                                    u19781 829A                                      u19941 5B36  
                                    u19861 C5A0                                      u18990 43C6  
                                    u19790 82BC                                      u19950 5C64  
                                    u19870 C5CC                                      u18991 43C2  
                                    u19791 82B8                                      u19951 5C60  
                                    u19871 C5C8                                      u19960 5D3E  
                                    u19880 86AA                            __end_of___lwmod C774  
                                    u19961 5D3A                                      u19881 86A6  
                                    u19970 5E68                                      u19971 5E64  
                                    u19980 30BA                                      u19981 30B6  
                                    u19990 30F6                                      u19991 30F2  
                                    u19895 86D8                                      u19896 86E2  
                                    u19897 86F2                                      _UADDR 000F38  
                          ___awdiv@counter 000B                                      _TMR0L 000FD6  
                        _atcommand_compare 9A64                                      _USTAT 000F64  
                  __end_of_sht3x_heaterOff D4C6                      I2C_Write@I2cWriteData 0001  
                  ?_Linear_regression_init 0001         __size_of_USBCtrlEPAllowStatusStage 00F2  
                      ___lmul@multiplicand 0005                          buffer_en_queue@ch 0003  
                  build_response@temp_3680 00A5                    build_response@temp_3684 00A9  
          __end_of_USBCtrlEPAllowDataStage B290                                      _sd000 2363  
                                    _sd001 22D1                                      _sd002 04C3  
           ?_USBIncrement1msInternalTimers 0001                            __end_of__strclr C89A  
                          __end_of__strcpy BB7C                            __end_of__strlen CC4C  
                       ?_atcommand_compare 0005                                      __atof 738E  
                                    __atoi 944C                                      __ftoa CC4C  
                                    __itoa 8986                       __size_of_check_param 0062  
                                    _g_nvm 0190                                      crc8@i 0004  
                                    crc8@j 0005                            __end_of_dpowers 232D  
                                    fabs@d 003F                    ?_lmp91000_set_Reference 000C  
                                    _frexp AB36                                      _errno 0180  
           __end_of_lmp91000_set_GainRLoad D0E4                                      _scale 5B10  
                          __end_of_isdigit D1B4                       ?_sht3x_measure_start 0001  
                  ?_ResetBootloaderCleanly 0001                                      fmod@n 0081  
                                    fmod@x 0079                                      fmod@y 007D  
                           ?_i2c_readBytes 0003                                      _trunc B074  
                        __end_of_I2C_Start D442                          __end_of_I2C_Write CF94  
     __size_of_sht3x_measure_nonblock_read 0060                              _i2c_writeData C28E  
                                    tablat 000FF5                           ymd_to_scalar@day 001C  
                      __size_of_LED_Enable 0032                                      plusw1 000FE3  
                                    plusw2 000FDB                 __end_of_nvm_serialno_check CA60  
                        __end_of_CDCInitEP C57A                        ??_atcommand_compare 000C  
                      lmp91000_unlock@buff 000C                                      ttemp5 0060  
                                    ttemp6 0063                                      ttemp7 0067  
                                    status 000FD8              __size_of_sensMeasure_gas_read 016E  
                                    wtemp8 0060                            __end_of_sprintf 39CA  
                    ??_sens_autoCalib_init 0001               __size_of_nvm_write_flash_all 004A  
                    ??_sens_autoCalib_task 005C                            years_to_days@yr 000E  
                   ?_Kalman_updateEstimate 0079                  flash_writeBytes@num_bytes 0007  
                       update_command@chno 009E                            _led_warmup$3759 0002  
                          putUSBUSART@data 0005               __size_of_USBStdSetCfgHandler 00EC  
                          __initialization B88E                     _compensate_temperature D442  
                             __end_of_crc8 C512                               __end_of_fabs CE10  
                             __end_of_fmod B342                               __end_of_main BC9A  
                             __atof@dotpos 0089                      ADCto_uVoltage@raw_adc 0060  
                    _control_signal_bitmap 018D                     _sensor_temp_fahrenheit C3D6  
                         ??_atcommand_init 0005                            update_command@i 00A1  
                         ??_atcommand_task 005E                            ?_update_command 009C  
                flash_writeBytes@startaddr 0001                           __end_of_i2c_init CFCE  
                  ??_sensor_read_temp_humi 005F                               build_time@tm 008A  
                             ?_FSR_set_LSB 0001                            ?_build_response 009A  
                __size_of_USBCtrlEPService 00BA                  __size_of_sensMeasure_init 00C4  
                                   ??_crc8 0004                  __size_of_sensMeasure_task 0274  
                                   ??_fabs 0043                      atcommand_compare@src1 0005  
                    atcommand_compare@src2 0007                                     ??_fmod 005C  
                __end_of_atcommand_compare 9B7C                                     ??_main 005F  
               __size_of_sht3x_common_read 0100                 __size_of_lmp91000_set_Mode 0030  
                  __end_of_check_atcommand B1DC                              __activetblptr 000002  
                          ?_USBDeviceTasks 0001             __end_of_Linear_regression_init 96D4  
                       flash_clear@endaddr 0005                                ?_USBSuspend 0001  
                   _sht3x_clear_status_reg D4C6                                  ??_LED_Off 0001  
                     __size_of__tdiv_to_l_ 0156                  sensor_read_temp_humi@humi 008B  
                sensor_read_temp_humi@temp 0089                             _ADCto_uVoltage C0B8  
            compensate_temperature@cmp_val 0005             __end_of_lmp91000_set_Reference CF1E  
              lmp91000_set_GainRLoad@RLoad 000C                   ?_Kalman_setEstimateError 0001  
                             _cdc_mem_type 018E                            build_response@i 00AF  
           __end_of_ResetBootloaderCleanly D642                                     ?__atof 0079  
                                   ?__atoi 000D                            _sensor_ADC_read D386  
                                   ?__ftoa 0094                  Linear_regression@uVoltage 0087  
                                   ?__itoa 000F                              _sort_uV_slope 880E  
                    ??_sht3x_measure_start 000C                           _CDCDataOutHandle 00C9  
                            _usedtime_task A5D2                                     ?_frexp 000D  
                         ___llmod@dividend 0001                                     ?_scale 0060  
                                   _EECON2 000FA7                                     _ANCON0 000F48  
                    __end_of_ads1114_SetUp D006                                     _ANCON1 000F49  
                         ___awdiv@dividend 0007                             ?_i2c_writeData 0002  
                          getsUSBUSART@len 000E                                     ?_trunc 0027  
                   SYSTEM_Initialize@state 0005                    __size_of_WDT_initialize 0004  
                    __size_of_CDCTxService 01C8                             _g_autoCal_cnt2 00D0  
         __size_of_USBDisableWithLongDelay 0018                                     _LED_On D1E6  
                                   i2l2098 2082                                     _TABLAT 000FF5  
                    __size_of_DelayRoutine 0020                                     _OSCCON 000FD3  
                            CDCTxService@i 000C                              _ymd_to_scalar AE44  
                       __size_of_InitTimer 001E                      __end_of_clear_command C3D6  
                         __end_of___xxtofl 8336                           __end_of__isdigit CD7E  
                        ads1114_read@rbuff 0014                __end_of_lmp91000_get_status C5E0  
                __size_of_Board_initialize 0066                          ads1114_read@wbuff 0013  
                          ??_years_to_days 0012                          _shortPacketStatus 00E1  
                         __end_of__powers_ 20BF                       __size_of_flash_clear 0090  
                          USBDeviceTasks@i 001D                       __end_of_app_usb_init D566  
                  ads1114_read_ready@rbuff 000F                       __end_of_app_usb_task B9C4  
              USBStdFeatureReqHandler@pUEP 0017                           __end_of_led_fail CA08  
                 USBTransferOnePacket@data 0002                 USBCtrlTrfInHandler@lastDTS 0002  
                  ads1114_read_ready@wbuff 0011                                     ___flge A2D8  
                          ??_USBDeviceInit 0009                                     ___fleq B5FA  
                         __end_of_led_init CAB8                                     ___lmul C440  
                         __end_of_led_task 7DF2                               ?_putUSBUSART 0005  
                                ??___aldiv 0009                                  ??___almod 0009  
                                ??___fladd 002F                                     ___wmul D3D4  
                                ??___fldiv 0068                        parse_command@cmdidx 0050  
                                ??___awdiv 000B                                  ??___flneg 0005  
                                ??___awmod 0005                                  ??___flmul 004B  
                                ??___flsub 003F                                  ??___fltol 0013  
                                ??___lldiv 0009                       __end_of_getsUSBUSART B074  
                                ??___llmod 0009                       __size_of_buffer_init 002E  
                                ??___lwdiv 000B  SYSTEM_Initialize@pll_startup_counter_5257 0003  
                                ??___lwmod 0005                   __end_of_auto_calib_clear CEDC  
                __size_of_flash_writeBytes 012C                          _USBEnableEndpoint CCE8  
          __size_of_USBStdGetStatusHandler 010E                   __end_of_auto_calib_apply BD28  
                             split_param@i 000F                               split_param@m 0009  
                             split_param@n 000A                                     _memcpy CB60  
                         _g_sens_autoCalib 00E3                                     _memset D076  
                                   _fround 6BEC                      __end_of_lmp91000_lock D526  
                                   _isleap BFC6                                     clear_0 B8D4  
                                   clear_1 B8E0                                     clear_2 B8EE  
                                   clear_3 B900                                     clear_4 B90C  
                                   clear_5 B918                        parse_command@retval 0040  
                         ___awdiv@quotient 000D                                     _mktime 75F2  
                          ___awmod@divisor 0003                                     isa$std 000001  
                      parse_command@status 001D                            ___awmod@counter 0005  
                       ?_USBEnableEndpoint 0009                                  ??__strclr 0005  
                                ??__strcpy 0005                                  ??__strlen 0003  
                   __end_of_ADCto_uVoltage C12E              __size_of_USBTransferOnePacket 013E  
                             ?_sensor_init 0001                            _led_zerocal_end C958  
                        lmp91000_lock@buff 000C                                  ??_isdigit 0001  
                                ?_I2C_Read 0001                               _CDCTxService 7FBA  
                                ?_I2C_Stop 0001                           ?_sht3x_heaterOff 0001  
                           _i2c_writeBytes CB0E                               _DelayRoutine D526  
                         __end_of_nvm_init AE44                               __mediumconst 208A  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                             ?_sort_uV_slope 000D  
     __size_of_Set_KamanFilter_Sensitivity 0202                        ??_USBEnableEndpoint 000A  
                           ?_usedtime_task 0001                __size_of_ResetDeviceCleanly 000C  
                          ??_i2c_readBytes 0006                      _sensMeasure_temp_read B9C4  
                   i2c_writeBytes_to@wrptr 000F                                  ??_sprintf 0075  
                                   trunc@i 002B                                     trunc@x 0027  
                 __size_of_flash_readBytes 0066                                _CtrlTrfData 000438  
                     _controlTransferState 00E0                           years_to_days@ret 0014  
                               ___flge@ff1 0001                                 ___flge@ff2 0005  
                       Linear_regression@p 0085                        i2c_readBytes@ackbit 000D  
                             ___xxtofl@arg 0023                             ?_ymd_to_scalar 0018  
                             ___xxtofl@exp 0022                          _SYSTEM_Initialize C040  
                             ___xxtofl@val 0019                                 ___fleq@ff1 0001  
                               ___fleq@ff2 0005                            FSR_set_LSB@gain 0005  
                         __end_oflog@coeff 2351                                param_copy@i 0006  
                               __accesstop 0060                    __end_of__initialization B91E  
                               ___flneg@f1 0001             Kalman_setMeasurementError@pObj 0001  
                       check_atcommand@cmd 0014                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                        update_command@apply 00A3  
                 __size_of_USBStallHandler 0062                                 ___fltol@f1 000F  
                          _gMv_Window_buff 0200                               __isdigit@src 0001  
                        ?_get_product_desc 0001                           atcommand_task@ch 00B3  
                      __size_of_USBSuspend 0032        __end_of_sens_autoCalib_slp_set_task 8686  
              _sens_autoCalib_slp_set_task 84E0                __size_of_ads1114_read_ready 006C  
                           __pcstackCOMRAM 0001                  __end_of_USBEnableEndpoint CD34  
                          flash_clear@flag 0009                              check_crc8@crc 000B  
                            __end_of_sd000 2367                              __end_of_sd001 2305  
                       ??_get_product_desc 0003                 __end_of_nvm_read_flash_all D3D4  
                             __pidataBANK4 D11A                               __pidataBANK6 CF1E  
                      ??_SYSTEM_Initialize 0001                  __size_of_lmp91000_isReady 0028  
                                LED_On@led 0001                              __end_of__atof 75F2  
                            __end_of__atoi 9590                              __end_of__ftoa CC9A  
                            __end_of__itoa 8AF6           __size_of_USBCtrlEPAllowDataStage 00B4  
                    flash_clear@flash_addr 000A                              __end_of_frexp ABFA  
                          _nvm_clear_flash A0CA                              __end_of_scale 5F2C  
                             ??_LED_Enable 0001              __size_of_USBConfigureEndpoint 00AC  
              __end_of_USBCtrlTrfInHandler 9DA6                   __size_of_gasSensor_calib 01C8  
                            __end_of_trunc B128                              build_time@F37 0250  
                             _g_flash_temp 036D                               ?_split_param 0005  
                               __atof@sign 0081                 __size_of_atcommand_compare 0118  
                  __end_of_sensor_ADC_read D3AE                                 __atoi@sign 0015  
          __end_of_Kalman_setEstimateError D5C0                            _sensor_adc_init D624  
                   __end_of_i2c_writeBytes CB60                          __end_of_InitTimer D584  
                       sht3x_heaterOff@cmd 000C                            ?_ADCto_uVoltage 0060  
                         ?_check_atcommand 0014                     __size_of_write_command 0030  
                               __div_to_l_ 91B4                                 ??_I2C_Read 0001  
                               ??_I2C_Stop 0001                                 _cdc_notice 026D  
              __end_of_gasSensor_lowfilter 691A                                 _cdc_rx_len 00D5  
                  __size_of_months_to_days 0036                                 _cdc_tx_len 00D3  
                             _g_led_status 00C0                            ??_i2c_writeData 0006  
                                  ??__atof 007D                                    ??__atoi 0011  
                                  ??__ftoa 005C                                    ??__itoa 0015  
                 ??_USBCtrlTrfSetupHandler 001C                    _USBTicksSinceSuspendEnd 018F  
                          __div_to_l_@exp1 000E                            __div_to_l_@cntr 000D  
                                  ??_frexp 0013                __end_of_changeUsbState_task D486  
                                  ??_scale 005C                  __end_of_SYSTEM_Initialize C0B8  
                          __div_to_l_@quot 0009                     _USBStdGetStatusHandler 9DA6  
                                  ??_trunc 002B                               _g_uV_per_ppm 0168  
                               __pbssBANK0 00B4                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0440                                 __pbssBANK5 0500  
                               _check_crc8 D2AA                                    ?_LED_On 0001  
                         check_atcommand@i 001A                          _sensor_sht3x_init C6AC  
                               __isdigit@n 0003                   __size_of_buffer_de_queue 0080  
                                ?_i2c_init 0001                         __end_of_LED_Enable D24A  
                    lmp91000_isReady@rBuff 0013                         ?_sensor_sht3x_init 0001  
                            __div_to_l_@f1 0001                              __div_to_l_@f2 0005  
              __size_of_USBWakeFromSuspend 0044                               _g_last_value 011C  
                              _pBDTEntryIn 00BA                   __size_of_buffer_en_queue 004E  
                          _sensor_lmp_init B342           __end_of_USBCtrlEPServiceComplete 9066  
              __size_of_USBCheckCDCRequest 00F6                               _g_linear_reg 0300  
                     USBCtrlTrfRxService@i 0001                                    ?___flge 0001  
                                  ?___fleq 0001                                    ?___lmul 0001  
                  DelayRoutine@DelayAmount 0001                              LED_Enable@led 0001  
                      ??_sensor_sht3x_init 000E                                    ?___wmul 0001  
              __end_of_sens_ZeroCalib_init D5DC                    __end_of_led_zerocal_end C9B0  
              __end_of_sens_ZeroCalib_task AA68                         build_response@chno 009E  
                                  ?_memcpy 0001                                    ?_memset 0001  
                       build_response@temp 00A1                                    ?_fround 0060  
                                  ?_isleap 0006                             ___lmul@product 0009  
                               _device_dsc 2351                      __end_of_nvm_clear_all D332  
                                  ?_mktime 0028                                 _g_time_cnt 00D1  
                         _USBCtrlEPService AF02                           _sensMeasure_init ACBE  
                 __size_of_lmp91000_unlock 0020                           _sensMeasure_task 711A  
                               _ep_data_in 017D                        _nvm_write_flash_all CD7E  
                     __size_of_FSR_set_LSB 00CE                __end_of_USBCtrlTrfRxService 91B4  
                            i2c_init@speed 0001                            ?_i2c_writeBytes 0007  
                       _USBCheckStdRequest 9FC0                         __size_of_nvm_clear 0006  
                            ?_ads1114_read 000F                          _configDescriptor1 228E  
                                  i2l14231 201E                                    i2l14233 202E  
                                  i2l14225 200A                                    i2l14235 207C  
                                  i2l14227 2018                                    i2l14229 201A  
                          ??_sort_uV_slope 0019                                    _LED_Off D66A  
                          ??_usedtime_task 0013                                  ?___xxtofl 0019  
                                ?__isdigit 0001                __end_of_USBCtrlTrfTxService 9C94  
                   ?_sensMeasure_temp_read 0001                        _USBStdSetCfgHandler A8A2  
                                  _TBLPTRH 000FF7                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                       build_response@i_3688 00AD  
                                  _SSP1ADD 000FC8                                    _SSP1BUF 000FC9  
                      ?_USBCheckStdRequest 0001                  __end_of_sensor_sht3x_init C710  
             __size_of_USBStdGetDscHandler 014C                            ??_ymd_to_scalar 001E  
                               __strlen@sc 0003                    _USBDisableWithLongDelay D5F6  
                                  _UIEbits 000F36                                  ?_led_fail 0001  
                               _build_time 416A                             _WDT_initialize D670  
                                ?_led_init 0001                                  ?_led_task 0001  
                                  _UIRbits 000F62                                 _led_warmup C12E  
                  ??_Kalman_updateEstimate 005C                                 ??_i2c_init 0001  
                 ??_Kalman_setProcessNoise 0007                               _g_tick_count 00CF  
                          __size_of_LED_On 0032                              _cdc_trf_state 00D4  
          _FlashSignatureWord_absconstaddr 002006                 Kalman_setProcessNoise@pObj 0001  
                   __size_of_parse_command 0514                               _g_sens_calib 0184  
                     ?_nvm_write_flash_all 0011                      __size_of_app_usb_init 0020  
                    __size_of_app_usb_task 0098                              _write_command D27A  
                                _I2C_Start D41E                           _Board_initialize C5E0  
                  ?_compensate_temperature 0001                       build_response@status 009A  
                                _I2C_Write CF5A                          ??_flash_readBytes 0009  
                             _g_slpSet_cnt 0160                        _atcommand_task$3563 00B1  
                         ??_update_command 005C                                    _pCDCDst 0174  
            __size_of_sens_ZeroCalibration 0034                    __end_of_nvm_clear_flash A1D2  
                                  _pCDCSrc 0177                      __size_of_getsUSBUSART 00B8  
                             _g_temp_value 0100                    ?_sensor_temp_fahrenheit 005C  
                        __end_of__npowers_ 20F3                                    __Hparam 0000  
          ??_USBIncrement1msInternalTimers 0001                       ?_USBStdSetCfgHandler 0001  
                                _CDCInitEP C512                                 _scale$6570 0064  
                                  __Lparam 0000                  sht3x_clear_status_reg@cmd 000C  
             ??_Kalman_setMeasurementError 0007                           ??_build_response 009C  
                        _Linear_regression 39CA                 __size_of_USBEnableEndpoint 004C  
                                ?_nvm_init 0001                                 _readBuffer 0483  
                  __end_of_sensor_adc_init D634                       ??_USBCheckStdRequest 001C  
                                  ___aldiv 9EB4                            __size_of___flge 0104  
                          __size_of___fleq 00AA                                    ___almod A7B6  
                                  ___fladd 5226              __size_of_USBCtrlTrfOutHandler 0076  
                                  ___fldiv 5F2C                                    ___awdiv ABFA  
                                  ___flneg D006                            __size_of___lmul 006A  
                                  ___awmod B3F2                                    ___flmul 56E6  
                                  ___flsub CE10                                    ___fltol A1D2  
      __end_of_sht3x_measure_nonblock_read C8FA                _sht3x_measure_nonblock_read C89A  
                                  ___lldiv B74A                  sensMeasure_temp_read@humi 0091  
                         ??_USBDeviceTasks 001D                            __size_of___wmul 0026  
                                  ___llmod BE40                  sensMeasure_temp_read@temp 008D  
                       ?_Linear_regression 0085                           _flash_writeBytes 9812  
                                  ___lwdiv C21A                          ??_USBStallHandler 0001  
                       _nvm_serialno_check CA08                                    ___lwmod C710  
                                  __atof@p 008B                                    __atoi@p 001B  
                  lmp91000_get_status@preg 000F                                    __itoa@n 001D  
                                  __itoa@p 001B                                    _e_level 018C  
                     __size_of_putUSBUSART 002C                                    __pcinit B88E  
                       getsUSBUSART@buffer 000C                            __size_of_memcpy 0050  
                  ?_sht3x_clear_status_reg 0001               __end_of_sensMeasure_gas_read 8C64  
                          __size_of_memset 0038                            __size_of_fround 02A6  
                          __size_of_isleap 007A             __size_of_sensor_read_temp_humi 0016  
                __end_of_configDescriptor1 22D1                                    __ramtop 0F00  
                          __size_of_mktime 022C              __end_of_sensor_read_temp_humi D624  
                                  __ptext0 BC0C                                    __ptext1 A5D2  
                                  __ptext2 8336                                    __ptext3 CE9A  
                                  __ptext4 BC9A                                    __ptext5 84E0  
                                  __ptext6 880E                                    __ptext7 A98E  
                                  __ptext8 D14E                                    __ptext9 711A  
                                  crc8@crc 0006                __size_of_sht3x_measure_read 0188  
                                  _inPipes 00B4                                    crc8@len 0003  
                           ??_ads1114_read 0011                                 _param_copy BD28  
              _USBDeferOUTDataStagePackets 00D6                           check_param@param 0001  
                                _T0CONbits 000FD5                           ?_sensor_ADC_read 0016  
                                  __strclr C838                                    __strcpy BAEC  
                                  __strlen CBFE                                ?__div_to_l_ 0001  
                                  _dpowers 2305                        ??_Linear_regression 008B  
                            split_param@ch 000E                      ads1114_SetUp@dataRate 0014  
                             ??_USBSuspend 0015                        ?_nvm_serialno_check 0001  
                            ??_check_param 0001                                    _isdigit D182  
                               ??___xxtofl 001D                                 ??__isdigit 0005  
                         ___awmod@dividend 0001                           ___aldiv@dividend 0001  
                        ??_gasSensor_calib 005C                              mktime@timeptr 0028  
               flash_readBytes@flash_array 0005                     sht3x_measure_read@humi 007B  
                     __size_of_sensor_init 004E                     sht3x_measure_read@temp 0079  
                   __end_of_WDT_initialize D674            lmp91000_set_GainRLoad@user_gain 000D  
                             _app_usb_init D546                               _app_usb_task B92C  
                       __end_of_USB_CD_Ptr 20FB                __end_of_sens_autoCalib_init BE40  
               __size_of_SYSTEM_Initialize 0078                __end_of_sens_autoCalib_task 84E0  
                                  _sprintf 3092            __size_of_USBCtrlTrfSetupHandler 0092  
       window_moving_average_recursion@avg 014C                              _g_calib_count 015C  
                lmp91000_set_Reference@reg 0012                                 ??_led_fail 0002  
                               ??_led_init 0002                       end_of_initialization B91E  
                             _getsUSBUSART AFBC                                 ??_led_task 0004  
                  __end_of_sensor_lmp_init B3F2                                ?_check_crc8 0007  
                       __end_of_USB_SD_Ptr 20F9                flash_writeBytes@flash_array 0005  
                                  memcpy@d 0007                                    memcpy@n 0005  
                                  memcpy@s 0009                      ??_nvm_write_flash_all 0013  
                      _pBDTEntryEP0OutNext 00CB             __end_of_compensate_temperature D464  
                                  memset@c 0003                                    memset@n 0005  
                                  memset@p 0007                             ?_write_command 0008  
                            __Lmediumconst 208A                            _USB1msTickCount 0170  
          _dummy_encapsulated_cmd_response 02F7             __end_of_sensor_temp_fahrenheit C440  
                 ?_USBStdFeatureReqHandler 0001                                 ?_I2C_Start 0001  
                     ??_nvm_serialno_check 0003                                 ?_I2C_Write 0001  
                        __end_of_nvm_clear D66A                                  i2u1485_40 2018  
                                i2u1485_41 2014                                  i2u1486_40 202E  
                                i2u1486_41 202A                  __end_of_Linear_regression 416A  
                    ??_USBStdSetCfgHandler 0015                            ___lldiv@divisor 0005  
         __size_of_Kalman_setEstimateError 001E                                 ?_CDCInitEP 0001  
                          ___lldiv@counter 000D                        _update_command$3632 009F  
                        ??_buffer_de_queue 0003                         __end_of_USBSuspend D1E6  
               lmp91000_set_Reference@IntZ 000C                    _USBCtrlEPAllowDataStage B1DC  
             Kalman_setEstimateError@est_e 0003                                 ??_nvm_init 003C  
                         ___aldiv@quotient 000B                 lmp91000_set_Reference@bias 000E  
                          _g_large_counter 0158                                    postdec1 000FE5  
                                  postdec2 000FDD                 lmp91000_set_Reference@buff 0010  
                         _lmp91000_isReady D35E                    i2c_writeBytes_to@wraddr 000C  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                 lmp91000_set_Reference@sign 000D  
                         ?_led_zerocal_end 0001             __end_of_sht3x_clear_status_reg D4E6  
             ?_Set_KamanFilter_Sensitivity 0001                   _USBCtrlEPServiceComplete 8F16  
                           __tdiv_to_l_@f1 0001                             __tdiv_to_l_@f2 0005  
                        ??_buffer_en_queue 0004                          ?_auto_calib_clear 0001  
                        ?_auto_calib_apply 0001                              ??__tdiv_to_l_ 0009  
                      build_time@timestamp 0060                 _USBStatusStageEnabledFlag1 00D9  
               _USBStatusStageEnabledFlag2 00D8                           ads1114_SetUp@pga 0013  
                   sht3x_measure_start@cmd 000C                              _parse_command 4D12  
                       USBEnableEndpoint@p 000A                               _kalmanFilter 01D9  
                             __strclr@dest 0001                         ??_auto_calib_clear 0001  
                       ??_auto_calib_apply 005C                __end_of_sht3x_measure_start D4A6  
                              ___fladd@grs 0036                       __size_of_split_param 0126  
                     i2c_readBytes@address 000C                               __strcpy@dest 0001  
                           _months_to_days D0E4                              ___xxtofl@sign 0021  
                ??_USBDisableWithLongDelay 0003                                  _TRISBbits 000F93  
                lmp91000_set_GainRLoad@reg 0010                               param_copy@ch 0008  
                        ??_lmp91000_unlock 000C                         _BothEP0OutUOWNsSet 00DC  
                          ?_WDT_initialize 0001                          __size_of_I2C_Read 0056  
                              ___fldiv@grs 0073                                ___fldiv@rem 006C  
                        __size_of_I2C_Stop 0024                 __size_of_sensor_sht3x_init 0064  
                USBConfigureEndpoint@EPNum 0006                                ?_build_time 0036  
               ?_USBCtrlEPAllowStatusStage 0001            Kalman_setMeasurementError@mea_e 0003  
                      check_atcommand@chno 0016                        __end_of_check_param C7D6  
      USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                  _USTATcopy 00FC  
                              ?_led_warmup 0001                                ___flmul@grs 0052  
          __size_of_Kalman_setProcessNoise 001E               __end_of_USBTransferOnePacket 9812  
                           __end_of_LED_On D218                              ??_flash_clear 0009  
                     update_command@status 009C                        __size_of__div_to_l_ 014C  
                         ?_nvm_clear_flash 0001                              ??_buffer_init 0003  
                        putUSBUSART@length 0007                              __itoa@shifter 0017  
                    __end_of_years_to_days B74A                     _USBCtrlTrfSetupHandler BA5A  
                         ?_sensor_adc_init 0001                             check_crc8@data 0007  
                         ??_ADCto_uVoltage 005C               __size_of_lmp91000_get_status 0066  
                           __end_of___flge A3DC                             __end_of___fleq B6A4  
                    __end_of_USBDeviceInit 8DC0      __end_of_USBIncrement1msInternalTimers D076  
   __size_of_USBIncrement1msInternalTimers 0038              _USBIncrement1msInternalTimers D03E  
          sht3x_measure_nonblock_read@humi 0087                             __end_of___lmul C4AA  
          sht3x_measure_nonblock_read@temp 0085                             __end_of___wmul D3FA  
                   __size_of_ads1114_SetUp 0038                             ?_parse_command 001B  
            ??_Set_KamanFilter_Sensitivity 0007                        __size_of_check_crc8 002E  
                           __end_of_memcpy CBB0                                ?_param_copy 0002  
                           __end_of_memset D0AE                             __end_of_fround 6E92  
                           __end_of_isleap C040                     __end_of_months_to_days D11A  
                           __end_of_mktime 781E                             _g_sens_measure 0140  
                        _USBBusIsSuspended 00DE                   ??_lmp91000_set_GainRLoad 000D  
                          ymd_to_scalar@mo 001A                            ymd_to_scalar@yr 0018  
               __end_of_ResetDeviceCleanly D64E                  __size_of_get_product_desc 000A  
                   __size_of_clear_command 006C                        start_initialization B88E  
                  ?_USBStdGetStatusHandler 0001                         _nvm_read_flash_all D3AE  
                  __size_of_atcommand_init 000C              USBCtrlTrfRxService@byteToRead 0002  
                  __size_of_atcommand_task 01FA                        __end_of__tdiv_to_l_ 8F16  
                                _InitTimer D566                       _gasSensor_calib$6565 0089  
                     _gasSensor_calib$6566 008D                      sort_uV_slope@uV_slope 0015  
                              _cdc_data_rx 02B7                                _cdc_data_tx 03B5  
             __end_of_USBConfigureEndpoint B5FA                 __end_of_FlashSignatureWord 2008  
                    __end_of_i2c_readBytes B54E            __end_of_USBStdFeatureReqHandler 662A  
                          ??_write_command 000A                           ?_sensor_lmp_init 0001  
                      ?_nvm_read_flash_all 0011                                   ??_LED_On 0001  
        __end_of_USBCtrlEPAllowStatusStage A7B6                         parse_command@F6607 0262  
                       parse_command@F6609 0230                   __size_of_sht3x_heaterOff 0020  
                               frexp@value 000D                   __end_of_USBCtrlEPService AFBC  
               atcommand_compare@channelno 000A                   __end_of_sensMeasure_init AD82  
                 __end_of_sensMeasure_task 738E                     __size_of_lmp91000_lock 0020  
                            _g_led_counter 00C5                       _sensMeasure_gas_read 8AF6  
               lmp91000_set_GainRLoad@buff 000E                            ___llmod@divisor 0005  
                              ??_I2C_Start 0001                              _g_autoCal_cnt 0164  
                          ___llmod@counter 0009                       __end_of_ads1114_read BFC6  
                              ??_I2C_Write 0001                          __size_of_i2c_init 003A  
               __end_of_ads1114_read_ready C36A                  ??_USBCtrlEPAllowDataStage 0002  
               __size_of_Linear_regression 07A0         __end_of_Kalman_setMeasurementError D5F6  
               _Kalman_setMeasurementError D5DC                                ??_CDCInitEP 000D  
                           USBDeviceInit@i 0009                     _pBDTEntryEP0OutCurrent 00CD  
                  USBTransferOnePacket@dir 0001                    USBTransferOnePacket@len 0004  
                                 ??___flge 0009                                   ??___fleq 0009  
                                 ??___lmul 0009                         parse_command@param 0020  
                                 ??___wmul 0005                        __end_of_flash_clear BC0C  
                      _USBStdGetDscHandler 9300                   ??_Linear_regression_init 0003  
                         ??_i2c_writeBytes 000B                                __pdataBANK4 04C3  
                              __pdataBANK6 0600                       ??_nvm_read_flash_all 0013  
                                 ??_memcpy 0007                                   ??_memset 0007  
                                 ??_fround 005C                        __size_of_build_time 068A  
                                 ??_isleap 0008                  gasSensor_lowfilter@retval 0011  
                                 ??_mktime 002C                        __end_of_buffer_init D306  
                   _Kalman_setProcessNoise D584                   ??_lmp91000_set_Reference 000F  
                      __size_of_led_warmup 0076                        I2C_Read@I2CReadData 0002  
                            sprintf@tmpval 0089                    ??_sensMeasure_temp_read 005F  
                 ??_ResetBootloaderCleanly 0003                            ?_months_to_days 000E  
                                ___fladd@a 002B                                  ___fladd@b 0027  
                   _USBActiveConfiguration 00FD                                 fround@prec 006C  
           __end_of_USBStdGetStatusHandler 9EB4                 compensate_temperature@temp 0001  
                 __end_of_Board_initialize C646                                  ___fldiv@a 0064  
                                ___fldiv@b 0060                                   ?_LED_Off 0001  
                                ___flmul@a 0047                                  ___flmul@b 0043  
                       i2c_readBytes@rdptr 0003                                _check_param C774  
                                ___flsub@a 003B                                  ___flsub@b 0037  
                              __isdigit@ch 0005                              __pcstackBANK0 0060  
             __size_of_USBCtrlTrfInHandler 0112                                 ?_InitTimer 0001  
                          _flash_readBytes C646                          __size_of___xxtofl 01B4  
                        __size_of__isdigit 004A                       ?_USBStdGetDscHandler 0001  
                             _isdigit$5925 0002                                _g_atcommand 0500  
                  nvm_read_flash_all@flash 0011                                  __atof@cnt 0083  
                                __atof@ret 0085                      __end_of_i2c_writeData C2FE  
                                __atof@str 0079                                  __atoi@ret 0017  
                 __end_of_flash_writeBytes 993E                   __size_of_check_atcommand 00B4  
                                __atoi@str 000D                              _ads1114_SetUp CFCE  
               flash_readBytes@tblptr_save 000D               __size_of_gasSensor_lowfilter 02F0  
               __end_of_USBWakeFromSuspend CE9A                      ?_sensMeasure_gas_read 0001  
                                __ftoa@len 005C                          __size_of_led_fail 0058  
                              sprintf@ccnt 007F                                sprintf@flag 0081  
                                __ftoa@num 0094                                sprintf@eexp 0087  
                                __ftoa@str 0098                                sprintf@fval 008F  
                        __size_of_led_init 0058             __size_of_Kalman_updateEstimate 02D2  
                              sprintf@prec 008D                          __size_of_led_task 01D8  
                          _USBStallHandler C7D6              __end_of_Kalman_updateEstimate 6BEC  
                             _pBDTEntryOut 0146                         check_crc8@checksum 000A  
                  _Kalman_setEstimateError D5A2                 __end_of_USBCheckCDCRequest A5D2  
                                __itoa@len 0015                                  __itoa@num 000F  
             __size_of_changeUsbState_task 0022                        __size_of_param_copy 008C  
                                __itoa@str 0013                              _clear_command C36A  
                         ___lwdiv@dividend 0007                                I2C_Read@ack 0001  
                                __pintcode 2008                       flash_writeBytes@flag 000C  
                   sensor_ADC_read@raw_adc 0016                              __pmediumconst 208A  
                                 ?___aldiv 0001                                   ?___almod 0001  
                                 ?___fladd 0027                          build_response@len 00B0  
                          ??_parse_command 001F                                   ?___fldiv 0060  
                                 ?___awdiv 0007                                  __ptext100 5226  
                                __ptext101 D006                                  __ptext110 D670  
                                __ptext102 A2D8                                   ?___flneg 0001  
                                __ptext111 6E92                                  __ptext103 B5FA  
                                __ptext120 8F16                                  __ptext112 CE56  
                                __ptext104 5F2C                                  __ptext121 B1DC  
                                __ptext113 D1B4                                  __ptext105 BEC8  
                                __ptext130 A4DC                                  __ptext122 9FC0  
                                __ptext114 C7D6                                  __ptext106 B92C  
                                __ptext131 C040                                  __ptext123 A8A2  
                                __ptext115 D03E                                  __ptext107 AFBC  
                                __ptext140 9B7C                                  __ptext132 C512  
                                __ptext124 D076                                  __ptext116 8C64  
                                __ptext108 CC9A                                  __ptext141 D566  
                                __ptext133 96D4                                  __ptext125 9DA6  
                                __ptext117 AF02                                  __ptext109 7FBA  
                                __ptext150 AD82                                  __ptext142 C5E0  
                                __ptext134 CCE8                                  __ptext126 9300  
                                __ptext118 CB60                                  __ptext151 CD7E  
                                __ptext143 BDB4                                  __ptext135 B54E  
                                __ptext127 62C8                                  __ptext119 BA5A  
                                __ptext160 75F2                                  __ptext152 9812  
                                __ptext144 D5C0                                  __ptext136 C1A4  
                                __ptext128 B7EE                                  __ptext161 AE44  
                                __ptext153 BB7C                                  __ptext145 ACBE  
                                __ptext137 9066                                  __ptext129 D546  
                                __ptext170 CA60                                  __ptext162 B6A4  
                                __ptext154 CA08                                  __ptext146 781E  
                                __ptext138 A6C4                                  __ptext171 D1E6  
                                __ptext163 C440                                  __ptext155 D3AE  
                                __ptext147 D584                                  __ptext139 9C94  
                                __ptext172 D66A                                  __ptext164 D0E4  
                                __ptext156 C646                                  __ptext148 D5DC  
                                __ptext173 CF94                                  __ptext165 D3D4  
                                __ptext157 D664                                  __ptext149 D5A2  
                                __ptext174 D2D8                                  __ptext166 C21A  
                                __ptext158 A0CA                                  __ptext175 D64E  
                                __ptext167 BFC6                                  __ptext159 416A  
                                __ptext176 C36A                                  __ptext168 C710  
                                __ptext177 C838                                  __ptext169 D65A  
                                __ptext178 9590                                  __ptext179 D218  
                                 ?___awmod 0001                                   ?___flmul 0043  
                                 ?___flsub 0037                                   ?___fltol 000F  
                                 ?___lldiv 0001                            _gasSensor_calib 7DF2  
                                 ?___llmod 0001                                  __npowers_ 20BF  
                                 ?___lwdiv 0007                                   ?___lwmod 0001  
                            ??_FSR_set_LSB 0005                          __size_of_nvm_init 00C2  
                     check_crc8@nbrOfBytes 0009                        _build_response$3673 009F  
                         ___almod@dividend 0001                              _lmp91000_lock D506  
                              __tdiv_to_l_ 8DC0                                  __strclr@n 0003  
                                __strcpy@i 0007                                   ?__strclr 0001  
                                 ?__strcpy 0001                                   ?__strlen 0001  
             __end_of_sens_ZeroCalibration D182                               ??__div_to_l_ 0009  
                     _USBTransferOnePacket 96D4                     flash_writeBytes@retval 000A  
             __size_of_sens_ZeroCalib_init 001C               __size_of_sens_ZeroCalib_task 00DA  
               sht3x_measure_read@raw_humi 0081                                   ?_isdigit 0001  
                                 _I2C_Read CAB8            __size_of_lmp91000_set_GainRLoad 0036  
               sht3x_measure_read@raw_temp 007D                                   _I2C_Stop D3FA  
                    __end_of_sort_uV_slope 8986                      nvm_serialno_check@sno 0001  
                    __end_of_usedtime_task A6C4               __end_of_USBCtrlTrfOutHandler C21A  
                    ??_USBStdGetDscHandler 0001                             __size_of__atof 0264  
                           __size_of__atoi 0144                                _ep_data_out 017A  
                           __size_of__ftoa 004E                           ___lwdiv@quotient 000C  
                           __size_of__itoa 0170                   __end_of_lmp91000_isReady D386  
                                 ?_sprintf 006D                             __size_of_frexp 00C4  
             __size_of_USBCtrlTrfRxService 014E                             __size_of_scale 041C  
                           ?_ads1114_SetUp 0013              USBConfigureEndpoint@direction 0001  
                          _buffer_de_queue BEC8                               ??_check_crc8 000B  
                           __size_of_trunc 00B4                       flash_clear@startaddr 0001  
              sensMeasure_gas_read@cmp_val 009D                      __end_of_ymd_to_scalar AF02  
                              _g_usb_queue 0440                                _g_usb_state 00D2  
                          ___aldiv@divisor 0005               __size_of_USBCtrlTrfTxService 0118  
                        gasSensor_calib@nA 0085                            ___aldiv@counter 0009  
                           ___wmul@product 0005                     __size_of_nvm_clear_all 002C  
                                 _LATBbits 000F8A                             ?_clear_command 0001  
                          _buffer_en_queue CC9A                 flash_writeBytes@flash_addr 000D  
                 flash_readBytes@num_bytes 0007                 ??_USBCtrlEPServiceComplete 0002  
                              _flash_clear BB7C                                   _PIE2bits 000FA0  
                           i2c_readBytes@i 000E                  Kalman_updateEstimate@pObj 0079  
                                 _PIR1bits 000F9E                         __end_of__div_to_l_ 9300  
                                 _PIR2bits 000FA1                                _buffer_init D2D8  
                        ??_sht3x_heaterOff 000C                                   _RCONbits 000FD0  
                            ??_putUSBUSART 0008                                   _UEP0bits 000F26  
                                _nvm_clear D664                 _USBDeferINDataStagePackets 00D7  
                 flash_readBytes@startaddr 0001                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                __size_of_USBCheckStdRequest 010A  
                                 _SSP1STAT 000FC7                                   _UCONbits 000F65  
               sensor_temp_fahrenheit@temp 005C                 __end_of_sht3x_measure_read 880E  
          __size_of_Linear_regression_init 0144                            _lmp91000_unlock D4E6  
                     _USBConfigureEndpoint B54E                             ?_lmp91000_lock 0001  
         __size_of_USBStdFeatureReqHandler 0362            __size_of_lmp91000_set_Reference 0042  
                  __end_of_flash_readBytes C6AC                          ___wmul@multiplier 0001  
                       __end_of_check_crc8 D2D8                      ?_USBTransferOnePacket 0001  
                         ??_WDT_initialize 0001                              ??_sensor_init 0019  
          __size_of_ResetBootloaderCleanly 000E                          _SYS_InterruptHigh 2008  
                         _get_product_desc D65A                      _sensor_read_temp_humi D60E  
                            ?_CDCTxService 0001                        ads1114_read@raw_adc 000F  
                            ?_DelayRoutine 0001                             _atcommand_init D64E  
                             _RemoteWakeup 00DF                        __end_of_FSR_set_LSB AB36  
                           _atcommand_task 7A20                             _atcommand_type 20FB  
                         __size_of_LED_Off 0006                Linear_regression_init@index 0005  
                       ?_SYS_InterruptHigh 0001                                ??_InitTimer 0001  
              __end_of_nvm_write_flash_all CDC8                    __end_of_USBStallHandler C838  
           sht3x_measure_nonblock_read@cmd 005D                          ___lmul@multiplier 0001  
                              _INTCON2bits 000FF1                   __size_of_sensor_ADC_read 0028  
                             ??_build_time 003A                                  copy_data0 B8A2  
                                copy_data1 B8C2                        _lmp91000_get_status C57A  
                __size_of_auto_calib_clear 0042                      __size_of_ads1114_read 007E  
                __size_of_auto_calib_apply 008E                ??_USBCtrlEPAllowStatusStage 0001  
                   ??_sensMeasure_gas_read 005C                               ??_led_warmup 0002  
                ??_Kalman_setEstimateError 0007                __end_of_USBStdSetCfgHandler A98E  
                        write_command@buff 0008                          sort_uV_slope@Temp 001D  
                                 _i2c_init CF94                        ??_SYS_InterruptHigh 0001  
                      ADCto_uVoltage@uVolt 0064                              _g_slpSet_cnt2 0186  
                     buffer_en_queue@queue 0001                         __end_of_device_dsc 2363  
                                frexp@eptr 0011                                 _EECON1bits 000FA6  
                   _lmp91000_set_GainRLoad D0AE               __size_of_sens_autoCalib_init 008C  
                  __end_of_gasSensor_calib 7FBA               __size_of_sens_autoCalib_task 01AA  
              __size_of_nvm_serialno_check 0058                    ?_USBCtrlTrfSetupHandler 0001  
                        ??_check_atcommand 0018                    USBStdGetStatusHandler@p 0002  
                            _g_sensitivity 0154                                   __Hrparam 0000  
                 nvm_write_flash_all@flash 0011                                  memcpy@tmp 000B  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 0009  
                        parse_command@chno 004D                          parse_command@buff 001B  
                      i2c_writeData@isStop 0005               ?_sens_autoCalib_slp_set_task 0001  
                                 _SetupPkt 000430                                 ?_nvm_clear 0001  
                     ?_lmp91000_get_status 000F                      ?_USBConfigureEndpoint 0001  
                         __size_of___aldiv 010C                           __size_of___almod 00EC  
                         __size_of___fladd 04C0                           __size_of___fldiv 039C  
                         __size_of___awdiv 00C4                           __size_of___flneg 0038  
                         __size_of___awmod 00B0                     _Linear_regression$6561 0091  
                         __size_of___flmul 042A                           __size_of___flsub 0046  
                         __size_of___fltol 0106                           __size_of___lldiv 00A4  
                        split_param@params 0007                           __size_of___llmod 0088  
                         __size_of___lwdiv 0074                             nvm_clear_all@i 003C  
                         __size_of___lwmod 0064                   lmp91000_get_status@rBuff 0012  
                            ??_split_param 000B                         __end_of_build_time 47F4  
                __end_of_SYS_InterruptHigh 2086                    __size_of_update_command 051E  
                 lmp91000_get_status@wBuff 0011                                _fround$6568 0068  
                              _fround$6569 0064                              _nvm_clear_all D306  
                             ??_param_copy 0006                     __end_of_atcommand_init D65A  
                       __end_of_led_warmup C1A4                        __end_of_putUSBUSART D35E  
                   __end_of_atcommand_task 7C1A                                _line_coding 01F1  
                   __end_of_atcommand_type 228E                             ??_CDCTxService 000C  
                              _isleap$6003 000A         Set_KamanFilter_Sensitivity@e_level 0007  
                  __size_of_build_response 0CDC                             ??_DelayRoutine 0003  
                             _ads1114_read BF48                           __size_of__strclr 0062  
                         __size_of__strcpy 0090                           __size_of__strlen 004E  
                               sprintf@val 0083                    __end_of_buffer_de_queue BF48  
                                 ___xxtofl 8182                   __size_of_led_zerocal_end 0058  
                                 __isdigit CD34                           __size_of_isdigit 0032  
                  __size_of_USBDeviceTasks 0288                            ___lwdiv@divisor 0009  
                          ??_ads1114_SetUp 0015                            ___lwdiv@counter 000B  
                                 __ptext10 CBB0                                   __ptext11 C6AC  
                                 __ptext20 D506                                   __ptext12 D486  
                                 __ptext21 D35E                                   __ptext13 D4A6  
                                 __ptext30 A3DC                                   __ptext22 C57A  
                                 __ptext14 D4C6                                   __ptext31 D2AA  
                                 __ptext23 D624                                   __ptext15 B342  
                                 __ptext40 CF5A                                   __ptext32 C4AA  
                                 __ptext24 CFCE                                   __ptext16 D4E6  
                                 __ptext41 D3FA                                   __ptext33 8AF6  
                                 __ptext25 C8FA                                   __ptext17 CEDC  
                                 __ptext50 AA68                                   __ptext42 D41E  
                                 __ptext34 D386                                   __ptext26 B9C4  
                                 __ptext18 D24A                                   __ptext51 39CA  
                                 __ptext43 CAB8                                   __ptext35 C2FE  
                                 __ptext27 D60E                                   __ptext19 D0AE  
                                 __ptext60 7A20                                   __ptext52 B290  
                                 __ptext44 662A                                   __ptext36 BF48  
                                 __ptext28 C89A                                   __ptext61 47F4  
                                 __ptext53 B074                                   __ptext45 7DF2  
                                 __ptext37 CB0E                                   __ptext29 8686  
                                 __ptext70 D526                                   __ptext62 993E  
                                 __ptext54 AB36                                   __ptext46 D442  
                                 __ptext38 C28E                                   __ptext71 4D12  
                                 __ptext63 D306                                   __ptext55 7C1A  
                                 __ptext47 691A                                   __ptext39 B4A2  
                                 __ptext80 C3D6                                   __ptext72 BD28  
                                 __ptext64 CD34                                   __ptext56 C958  
                                 __ptext48 CDC8                                   __ptext81 BAEC  
                                 __ptext73 C774                                   __ptext65 944C  
                                 __ptext57 C12E                                   __ptext49 C0B8  
                                 __ptext90 D182                                   __ptext82 8986  
                                 __ptext74 B128                                   __ptext66 738E  
                                 __ptext58 C9B0                                   __ptext91 6BEC  
                                 __ptext83 A7B6                                   __ptext75 9A64  
                                 __ptext67 D642                                   __ptext59 D464  
                                 __ptext92 56E6                                   __ptext84 9EB4  
                                 __ptext76 23B6                                   __ptext68 D634  
                                 __ptext93 8DC0                                   __ptext85 CC4C  
                                 __ptext77 D27A                                   __ptext69 D5F6  
                                 __ptext94 91B4                                   __ptext86 3092  
                                 __ptext78 D332                                   __ptext95 8182  
                                 __ptext87 5B10                                   __ptext79 CBFE  
                                 __ptext96 BE40                                   __ptext88 B3F2  
                                 __ptext97 B74A                                   __ptext89 ABFA  
                                 __ptext98 A1D2                                   __ptext99 CE10  
                                 crc8@data 0001                               _SSP1CON2bits 000FC5  
                  __end_of_buffer_en_queue CCE8                                   __powers_ 208B  
                      __end_of_sensor_init CBFE                     _Linear_regression_init 9590  
             __size_of_sht3x_measure_start 0020                                   _led_fail C9B0  
                        _i2c_writeBytes_to C8FA                            ___almod@divisor 0005  
                                 _led_init CA60                                   _led_task 7C1A  
                         __size_of_sprintf 0938                            ___almod@counter 0009  
                    parse_command@paramidx 004F                            ??_clear_command 0005  
                   _lmp91000_set_Reference CEDC                             split_param@cnt 0010  
                       ?_i2c_writeBytes_to 000C                             split_param@len 000D  
                               trunc@expon 002F                             split_param@src 0005  
                            __size_of_crc8 0068                         _ResetDeviceCleanly D642  
                            __size_of_fabs 0048                              __size_of_fmod 00B2  
           __end_of_USBCtrlTrfSetupHandler BAEC                              __size_of_main 008E  
                   _ResetBootloaderCleanly D634                          ?_USBCtrlEPService 0001  
                        ?_sensMeasure_init 0001                          ?_sensMeasure_task 0001  
                     _sens_ZeroCalibration D14E                         ??_USBCtrlEPService 001C  
                       __end_of_param_copy BDB4                    __end_of_lmp91000_unlock D506  
                       ??_sensMeasure_init 0008                         ??_sensMeasure_task 00A3  
              ?_Kalman_setMeasurementError 0001                        _USBCtrlTrfInHandler 9C94  
                      ??_i2c_writeBytes_to 0012                        ?_ResetDeviceCleanly 0001  
                       _FlashSignatureWord 2006                        ads1114_SetUp@wraddr 0018  
                                 isa$xinst 000000                                   _nvm_init AD82  
                                 _outPipes 0138                    ?_Kalman_setProcessNoise 0001  
                    ??_lmp91000_get_status 0011                       _USBCtrlTrfOutHandler C1A4  
                                nvm_init@i 0044                                   int$flags 005F  
                          ??_lmp91000_lock 000C                           ??_months_to_days 0010  
                _USBCtrlEPAllowStatusStage A6C4              ??_sens_autoCalib_slp_set_task 0029  
                               _LED_Enable D218                               _SSP1STATbits 000FC7  
                              _FSR_set_LSB AA68                __p_FlashSignatureWord_const 2006  
                      _gasSensor_lowfilter 662A                     ??_USBTransferOnePacket 0005  
                           ?_nvm_clear_all 0001                   __size_of_nvm_clear_flash 0108  
                       _ads1114_read_ready C2FE                   ?_USBDisableWithLongDelay 0001  
                   ?_sensor_read_temp_humi 0089                            ?_atcommand_init 0001  
                         ?_flash_readBytes 0001                                   log@coeff 232D  
                          ?_atcommand_task 0001                         _ymd_to_scalar$6016 0022  
                       ADCto_uVoltage@gain 0062                           sort_uV_slope@Mid 0025  
                         sort_uV_slope@Max 0019                           sort_uV_slope@Min 0021  
                _USBDeferStatusStagePacket 00DA                   CDCTxService@byte_to_send 000D  
                      _changeUsbState_task D464                           sort_uV_slope@max 0011  
           __size_of_sensMeasure_temp_read 0096                           sort_uV_slope@min 000D  
                 __size_of_sensor_adc_init 0010                                _OSCTUNEbits 000F9B  
                               _INTCONbits 000FF2              __end_of_sensMeasure_temp_read BA5A  
                             ?_check_param 0001                          ?_Board_initialize 0001  
             lmp91000_set_Reference@source 000F                       ?_USBCtrlTrfInHandler 0001  
                                 memcpy@d1 0001                                   memcpy@s1 0003  
                 sensMeasure_gas_read@volt 0099                       ??_ResetDeviceCleanly 0003  
            USBCtrlTrfTxService@byteToSend 0001                           parse_command@cmd 0041  
                         parse_command@idx 004E                        ?_ads1114_read_ready 0001  
                __end_of_i2c_writeBytes_to C958                           parse_command@seq 004C  
                      __end_of_split_param 9A64                   ??_compensate_temperature 0005  
                                 isdigit@c 0003                         ??_Board_initialize 0045  
                                 memset@p1 0001                                   scale@scl 0068  
                         ?_USBStallHandler 0001                   ??_sensor_temp_fahrenheit 005E  
                       i2c_writeData@wrptr 0002                   USBStdFeatureReqHandler@p 001A  
                         i2c_readBytes@len 0005                     __size_of_years_to_days 00A6  
                                 isleap@yr 0006                 flash_writeBytes@write_byte 000B  
                                 intlevel2 0000                                  sprintf@ap 007D  
                     ?_gasSensor_lowfilter 000D                           __tdiv_to_l_@exp1 0011  
                         __tdiv_to_l_@cntr 0010                                  sprintf@sp 006D  
                        ?_flash_writeBytes 0001                     __size_of_USBDeviceInit 015C  
                         __tdiv_to_l_@quot 000C    __end_of_USER_USB_CALLBACK_EVENT_HANDLER B88E  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 00A0          ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 000D            _USER_USB_CALLBACK_EVENT_HANDLER B7EE  
                 i2c_writeBytes_to@addrlen 000E                   i2c_writeBytes_to@address 0012  
                         ___lwmod@dividend 0001                      __end_of_write_command D2AA  
                flash_readBytes@flash_addr 0009                                   mktime@tt 0032  
                         ___lldiv@dividend 0001                         ??_flash_writeBytes 0009  
     SYSTEM_Initialize@pll_startup_counter 0001                       ?_changeUsbState_task 0001  
                    ?_sens_ZeroCalibration 0001                        nvm_serialno_check@i 0004  
                        ??_sensor_ADC_read 0018                    Linear_regression_init@p 0001  
                      _sens_ZeroCalib_init D5C0                   ??_sht3x_clear_status_reg 000C  
                      _sens_ZeroCalib_task A98E                           ?_gasSensor_calib 0079  
                      ymd_to_scalar@scalar 0024             __end_of_Kalman_setProcessNoise D5A2  
                 __size_of_sensor_lmp_init 00B0                       ??_ads1114_read_ready 000F  
                   ??_USBConfigureEndpoint 0002                      ?_USBCtrlTrfOutHandler 0001  
                              ??_nvm_clear 003C                Kalman_setEstimateError@pObj 0001  
      __end_of_Set_KamanFilter_Sensitivity 7A20                _Set_KamanFilter_Sensitivity 781E  
                              _putUSBUSART D332                        _USBCtrlTrfRxService 9066  
                       _USBWakeFromSuspend CE56               ?_sht3x_measure_nonblock_read 0085  
                  _USBStdFeatureReqHandler 62C8                          ADCto_uVoltage@lsb 0068  
                   Linear_regression@index 0095                __size_of_nvm_read_flash_all 0026  
                   __size_of_i2c_readBytes 00AC                    sensMeasure_gas_read@raw 00A1  
                       _USBCheckCDCRequest A4DC                        _USBCtrlTrfTxService 9B7C  
                          parse_command@ch 0051                      sht3x_common_read@buff 001B  
               __size_of_SYS_InterruptHigh 007E                               ?__tdiv_to_l_ 0001  
                    sht3x_common_read@humi 0011                      sht3x_common_read@temp 000F  
                                 sprintf@c 0093                                   sprintf@f 006F  
                              _sensor_init CBB0                       ?_sens_ZeroCalib_init 0001  
                     ?_sens_ZeroCalib_task 0001                        ?_USBWakeFromSuspend 0001  
                         ___lldiv@quotient 0009                            ___lwmod@divisor 0003  
                    ??_USBCtrlTrfInHandler 0002                           ?_buffer_de_queue 0001  
                    _USBAlternateInterface 01F8                            ___lwmod@counter 0005  
                        _sht3x_common_read A3DC                          _lmp91000_set_Mode D24A  
                        ads1114_SetUp@buff 0016                        ?_USBCheckCDCRequest 0001  
                        ads1114_SetUp@mode 0015                               ___aldiv@sign 000A  
                  __size_of_ADCto_uVoltage 0076                              ?_app_usb_init 0001  
                            ?_app_usb_task 0001                        USBEnableEndpoint@ep 000C  
                          _endpoint_number 00DD                                 _WDTCONbits 000FC0  
     __size_of_sens_autoCalib_slp_set_task 01A6                         ?_sht3x_common_read 000F  
                       ?_lmp91000_set_Mode 000C                       ?_USBCtrlTrfRxService 0001  
                            nvm_init@pdesc 0042                           ?_buffer_en_queue 0001  
                            ___fladd@signs 0033                           i2c_writeData@len 0004  
                            ?_getsUSBUSART 000C                      lmp91000_set_Mode@buff 000E  
                        ?_lmp91000_isReady 0001                           _auto_calib_clear CE9A  
                    lmp91000_set_Mode@mode 000C                      ??_gasSensor_lowfilter 0011  
                         _auto_calib_apply BC9A                            _sht3x_heaterOff D4A6  
                        ??_led_zerocal_end 0002                   ?_USBCtrlEPAllowDataStage 0001  
                             ___almod@sign 000A                       ?_USBCtrlTrfTxService 0001  
                       ??_lmp91000_isReady 0013                               ___fladd@aexp 0034  
                             ___fladd@bexp 0035                        ??_sht3x_common_read 0013  
             _USBStatusStageTimeoutCounter 00DB                        ??_lmp91000_set_Mode 000D  
                     lmp91000_set_Mode@fet 000D                      ??_changeUsbState_task 0001  
                     lmp91000_set_Mode@reg 0010                    gasSensor_calib@baseline 0081  
                             ?_flash_clear 0001                       ??_USBWakeFromSuspend 0015  
                            _led_task$3764 0004                 USBTransferOnePacket@handle 000A  
                 __end_of_get_product_desc D664                       __end_of_CDCTxService 8182  
                           i2c_writeData@i 0006                             __strcpy@source 0003  
                     __end_of_DelayRoutine D546                      _Kalman_updateEstimate 691A  
                     ??_USBCheckCDCRequest 0001                           ?_lmp91000_unlock 0001  
                 gasSensor_calib@gas_uVolt 007D                                 _USB_CD_Ptr 20F9  
                             ?_buffer_init 0001                     gasSensor_calib@gas_ppm 0091  
                           __strlen@source 0001              gasSensor_lowfilter@gasConcent 000D  
                          _kalman_q_factor 0600                     gasSensor_calib@cmp_val 0079  
