Version 3.2 HI-TECH Software Intermediate Code
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;window.h: 12: float window_moving_average_recursion(float uV, uint8_t window_size);
"8 window.c
[v _gMv_Window_buff `f ~T0 @X0 -> 12 `i e ]
[i _gMv_Window_buff
:U ..
-> .0.0 `f
..
]
[; ;window.c: 8: float gMv_Window_buff[12] = {0.0f, };
"10
[v _window_moving_average_recursion `(f ~T0 @X0 1 ef2`f`uc ]
"11
{
[; ;window.c: 10: float window_moving_average_recursion(float uV, uint8_t window_size)
[; ;window.c: 11: {
[e :U _window_moving_average_recursion ]
"10
[v _uV `f ~T0 @X0 1 r1 ]
[v _window_size `uc ~T0 @X0 1 r2 ]
"11
[f ]
"12
[v _idx `uc ~T0 @X0 1 a ]
"13
[v F37 `f ~T0 @X0 1 s avg ]
[i F37
-> .0.0 `f
]
[; ;window.c: 12: uint8_t idx;
[; ;window.c: 13: static float avg = 0.0f;
[; ;window.c: 15: avg = avg + (uV - gMv_Window_buff[0]) / window_size;
"15
[e = F37 + F37 / - _uV *U + &U _gMv_Window_buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _gMv_Window_buff `ui `ux -> _window_size `f ]
[; ;window.c: 17: for(idx = 0; idx < window_size-1; idx++)
"17
{
[e = _idx -> -> 0 `i `uc ]
[e $U 5  ]
"18
[e :U 2 ]
[; ;window.c: 18: gMv_Window_buff[idx] = gMv_Window_buff[idx+1];
[e = *U + &U _gMv_Window_buff * -> _idx `ux -> -> # *U &U _gMv_Window_buff `ui `ux *U + &U _gMv_Window_buff * -> -> + -> _idx `i -> 1 `i `ui `ux -> -> # *U &U _gMv_Window_buff `ui `ux ]
"17
[e ++ _idx -> -> 1 `i `uc ]
[e :U 5 ]
[e $ < -> _idx `i - -> _window_size `i -> 1 `i 2  ]
[e :U 3 ]
"18
}
[; ;window.c: 19: gMv_Window_buff[idx] = uV;
"19
[e = *U + &U _gMv_Window_buff * -> _idx `ux -> -> # *U &U _gMv_Window_buff `ui `ux _uV ]
[; ;window.c: 21: return avg;
"21
[e ) F37 ]
[e $UE 1  ]
[; ;window.c: 22: }
"22
[e :UE 1 ]
}
